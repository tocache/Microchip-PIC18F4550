

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 09 17:28:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000AE0                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _mensaje3
    78  000AE0  55                 	db	85
    79  000AE1  50                 	db	80
    80  000AE2  43                 	db	67
    81  000AE3  20                 	db	32
    82  000AE4  4D                 	db	77
    83  000AE5  65                 	db	101
    84  000AE6  63                 	db	99
    85  000AE7  61                 	db	97
    86  000AE8  74                 	db	116
    87  000AE9  72                 	db	114
    88  000AEA  6F                 	db	111
    89  000AEB  6E                 	db	110
    90  000AEC  69                 	db	105
    91  000AED  63                 	db	99
    92  000AEE  61                 	db	97
    93  000AEF  00                 	db	0
    94                           
    95                           ;initializer for _mensaje2
    96  000AF0  55                 	db	85
    97  000AF1  50                 	db	80
    98  000AF2  43                 	db	67
    99  000AF3  20                 	db	32
   100  000AF4  45                 	db	69
   101  000AF5  6C                 	db	108
   102  000AF6  65                 	db	101
   103  000AF7  63                 	db	99
   104  000AF8  74                 	db	116
   105  000AF9  72                 	db	114
   106  000AFA  6F                 	db	111
   107  000AFB  6E                 	db	110
   108  000AFC  69                 	db	105
   109  000AFD  63                 	db	99
   110  000AFE  61                 	db	97
   111  000AFF  00                 	db	0
   112                           
   113                           ;initializer for _mensaje1
   114  000B00  48                 	db	72
   115  000B01  6F                 	db	111
   116  000B02  6C                 	db	108
   117  000B03  61                 	db	97
   118  000B04  20                 	db	32
   119  000B05  6D                 	db	109
   120  000B06  75                 	db	117
   121  000B07  6E                 	db	110
   122  000B08  64                 	db	100
   123  000B09  6F                 	db	111
   124  000B0A  00                 	db	0
   125                           
   126                           ;initializer for _efecto
   127  000B0B  01                 	db	1
   128  000B0C  02                 	db	2
   129  000B0D  04                 	db	4
   130  000B0E  02                 	db	2
   131  000B0F  03                 	db	3
   132  000B10  06                 	db	6
   133  000B11  00                 	db	0
   134  000B12  07                 	db	7
   135                           
   136                           ;initializer for _LED_ON
   137  000B13  0E                 	db	14
   138  000B14  1F                 	db	31
   139  000B15  1F                 	db	31
   140  000B16  1F                 	db	31
   141  000B17  1F                 	db	31
   142  000B18  0E                 	db	14
   143  000B19  0E                 	db	14
   144  000B1A  0E                 	db	14
   145                           
   146                           ;initializer for _LED_OFF
   147  000B1B  0E                 	db	14
   148  000B1C  11                 	db	17
   149  000B1D  11                 	db	17
   150  000B1E  11                 	db	17
   151  000B1F  11                 	db	17
   152  000B20  0A                 	db	10
   153  000B21  0E                 	db	14
   154  000B22  0E                 	db	14
   155  0000                     _LATD	set	3980
   156  0000                     _PORTD	set	3971
   157  0000                     _LATDbits	set	3980
   158  0000                     _LATE	set	3981
   159  0000                     _TRISCbits	set	3988
   160  0000                     _TRISD	set	3989
   161  0000                     _RCSTAbits	set	4011
   162  0000                     _SPBRG	set	4015
   163  0000                     _TRISE	set	3990
   164  0000                     _ADCON1	set	4033
   165  0000                     _OSCCON	set	4051
   166  0000                     _PORTEbits	set	3972
   167  0000                     _INTCON3bits	set	4080
   168  0000                     _INTCON2bits	set	4081
   169  0000                     _INTCONbits	set	4082
   170  0000                     _RCONbits	set	4048
   171  0000                     _TXREG	set	4013
   172  0000                     _TXSTAbits	set	4012
   173                           
   174                           	psect	smallconst
   175  000800                     __psmallconst:
   176                           	callstack 0
   177  000800  00                 	db	0
   178  000801                     STR_1:
   179  000801  53                 	db	83	;'S'
   180  000802  65                 	db	101	;'e'
   181  000803  6D                 	db	109	;'m'
   182  000804  61                 	db	97	;'a'
   183  000805  6E                 	db	110	;'n'
   184  000806  61                 	db	97	;'a'
   185  000807  20                 	db	32
   186  000808  31                 	db	49	;'1'
   187  000809  33                 	db	51	;'3'
   188  00080A  00                 	db	0
   189  00080B                     STR_2:
   190  00080B  4C                 	db	76	;'L'
   191  00080C  45                 	db	69	;'E'
   192  00080D  44                 	db	68	;'D'
   193  00080E  73                 	db	115	;'s'
   194  00080F  3A                 	db	58	;':'
   195  000810  00                 	db	0
   196  000811  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  000C76                     __pcinit:
   202                           	callstack 0
   203  000C76                     start_initialization:
   204                           	callstack 0
   205  000C76                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Initialize objects allocated to COMRAM (67 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  000C76  0EE0               	movlw	low __pidataCOMRAM
   211  000C78  6EF6               	movwf	tblptrl,c
   212  000C7A  0E0A               	movlw	high __pidataCOMRAM
   213  000C7C  6EF7               	movwf	tblptrh,c
   214  000C7E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  000C80  6EF8               	movwf	tblptru,c
   216  000C82  EE00  F001         	lfsr	0,__pdataCOMRAM
   217  000C86  EE10 F043          	lfsr	1,67
   218  000C8A                     copy_data0:
   219  000C8A  0009               	tblrd		*+
   220  000C8C  CFF5 FFEE          	movff	tablat,postinc0
   221  000C90  50E5               	movf	postdec1,w,c
   222  000C92  50E1               	movf	fsr1l,w,c
   223  000C94  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to COMRAM (2 bytes)
   226  000C96  6A55               	clrf	(__pbssCOMRAM+1)& (0+255),c
   227  000C98  6A54               	clrf	__pbssCOMRAM& (0+255),c
   228  000C9A                     end_of_initialization:
   229                           	callstack 0
   230  000C9A                     __end_of__initialization:
   231                           	callstack 0
   232  000C9A  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   233  000C9C  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   234  000C9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   235  000CA0  6EF8               	movwf	tblptru,c
   236  000CA2  0100               	movlb	0
   237  000CA4  EF09  F004         	goto	_main	;jump to C main() function
   238                           
   239                           	psect	bssCOMRAM
   240  000054                     __pbssCOMRAM:
   241                           	callstack 0
   242  000054                     _estado2:
   243                           	callstack 0
   244  000054                     	ds	1
   245  000055                     _estado:
   246                           	callstack 0
   247  000055                     	ds	1
   248                           
   249                           	psect	dataCOMRAM
   250  000001                     __pdataCOMRAM:
   251                           	callstack 0
   252  000001                     _mensaje3:
   253                           	callstack 0
   254  000001                     	ds	16
   255  000011                     _mensaje2:
   256                           	callstack 0
   257  000011                     	ds	16
   258  000021                     _mensaje1:
   259                           	callstack 0
   260  000021                     	ds	11
   261  00002C                     _efecto:
   262                           	callstack 0
   263  00002C                     	ds	8
   264  000034                     _LED_ON:
   265                           	callstack 0
   266  000034                     	ds	8
   267  00003C                     _LED_OFF:
   268                           	callstack 0
   269  00003C                     	ds	8
   270                           
   271                           	psect	cstackBANK0
   272  000060                     __pcstackBANK0:
   273                           	callstack 0
   274  000060                     ??_ESCRIBE_MENSAJE:
   275  000060                     ??_init_LCD:
   276                           
   277                           ; 1 bytes @ 0x0
   278  000060                     	ds	2
   279  000062                     ??_main:
   280                           
   281                           ; 1 bytes @ 0x2
   282  000062                     	ds	2
   283  000064                     main@x:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x4
   287  000064                     	ds	1
   288                           
   289                           	psect	cstackCOMRAM
   290  000044                     __pcstackCOMRAM:
   291                           	callstack 0
   292  000044                     ??_INT0_ISR:
   293  000044                     
   294                           ; 1 bytes @ 0x0
   295  000044                     	ds	1
   296  000045                     ??_INT1_ISR:
   297                           
   298                           ; 1 bytes @ 0x1
   299  000045                     	ds	7
   300  00004C                     INT1_ISR@y:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x8
   304  00004C                     	ds	1
   305  00004D                     ENVIA_NIBBLE@dato:
   306                           	callstack 0
   307  00004D                     LEER_LCD@aux:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x9
   311  00004D                     	ds	1
   312  00004E                     ENVIA_CHAR@dato:
   313                           	callstack 0
   314  00004E                     ENVIA_LCD_CMD@dato:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xA
   318  00004E                     	ds	1
   319  00004F                     ENVIA_CHAR@aux:
   320                           	callstack 0
   321  00004F                     ENVIA_LCD_CMD@aux:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xB
   325  00004F                     	ds	1
   326  000050                     ??_LCD_CONFIG:
   327  000050                     POS_CURSOR@columna:
   328                           	callstack 0
   329  000050                     CURSOR_ONOFF@estado:
   330                           	callstack 0
   331  000050                     ESCRIBE_MENSAJE@cadena:
   332                           	callstack 0
   333  000050                     GENERACARACTER@vector:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xC
   337  000050                     	ds	1
   338  000051                     POS_CURSOR@fila:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xD
   342  000051                     	ds	1
   343  000052                     ESCRIBE_MENSAJE@tam:
   344                           	callstack 0
   345  000052                     GENERACARACTER@pos:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xE
   349  000052                     	ds	1
   350  000053                     ESCRIBE_MENSAJE@i:
   351                           	callstack 0
   352  000053                     GENERACARACTER@i:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0xF
   356  000053                     	ds	1
   357                           
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 73 in file "maincode4.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  x               1    4[BANK0 ] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:         0       1       0       0       0       0       0       0       0
   379 ;;      Temps:          0       2       0       0       0       0       0       0       0
   380 ;;      Totals:         0       3       0       0       0       0       0       0       0
   381 ;;Total ram usage:        3 bytes
   382 ;; Hardware stack levels required when called: 7
   383 ;; This function calls:
   384 ;;		_ESCRIBE_MENSAJE
   385 ;;		_POS_CURSOR
   386 ;;		_configuro
   387 ;;		_init_LCD
   388 ;;		_vis_LED
   389 ;; This function is called by:
   390 ;;		Startup code after reset
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text0
   395  000812                     __ptext0:
   396                           	callstack 0
   397  000812                     _main:
   398                           	callstack 24
   399  000812                     
   400                           ;maincode4.c: 74:     configuro();
   401  000812  EC6C  F006         	call	_configuro	;wreg free
   402  000816                     
   403                           ;maincode4.c: 75:     init_LCD();
   404  000816  EC4B  F005         	call	_init_LCD	;wreg free
   405  00081A                     
   406                           ;maincode4.c: 76:     POS_CURSOR(1,0);
   407  00081A  0E00               	movlw	0
   408  00081C  6E50               	movwf	POS_CURSOR@columna^0,c
   409  00081E  0E01               	movlw	1
   410  000820  ECD0  F005         	call	_POS_CURSOR
   411  000824                     
   412                           ;maincode4.c: 77:     ESCRIBE_MENSAJE("Semana 13",9);
   413  000824  0E01               	movlw	low STR_1
   414  000826  6E50               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   415  000828  0E08               	movlw	high STR_1
   416  00082A  6E51               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   417  00082C  0E09               	movlw	9
   418  00082E  6E52               	movwf	ESCRIBE_MENSAJE@tam^0,c
   419  000830  EC92  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   420  000834                     
   421                           ;maincode4.c: 78:     POS_CURSOR(2,0);
   422  000834  0E00               	movlw	0
   423  000836  6E50               	movwf	POS_CURSOR@columna^0,c
   424  000838  0E02               	movlw	2
   425  00083A  ECD0  F005         	call	_POS_CURSOR
   426  00083E                     
   427                           ;maincode4.c: 79:     ESCRIBE_MENSAJE("LEDs:",5);
   428  00083E  0E0B               	movlw	low STR_2
   429  000840  6E50               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   430  000842  0E08               	movlw	high STR_2
   431  000844  6E51               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   432  000846  0E05               	movlw	5
   433  000848  6E52               	movwf	ESCRIBE_MENSAJE@tam^0,c
   434  00084A  EC92  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   435  00084E  EF93  F004         	goto	l1713
   436  000852                     l1663:
   437                           
   438                           ; BSR set to: 0
   439                           ;maincode4.c: 84:                 for(x=0;x<4;x++){
   440  000852  0E00               	movlw	0
   441  000854  6F64               	movwf	main@x& (0+255),b
   442  000856                     l1669:
   443                           
   444                           ; BSR set to: 0
   445                           ;maincode4.c: 85:                     LATE = efecto[x];
   446  000856  0E2C               	movlw	low _efecto
   447  000858  2564               	addwf	main@x& (0+255),w,b
   448  00085A  6ED9               	movwf	fsr2l,c
   449  00085C  6ADA               	clrf	fsr2h,c
   450  00085E  0E00               	movlw	high _efecto
   451  000860  22DA               	addwfc	fsr2h,f,c
   452  000862  50DF               	movf	indf2,w,c
   453  000864  6E8D               	movwf	141,c	;volatile
   454  000866                     
   455                           ; BSR set to: 0
   456                           ;maincode4.c: 86:                     vis_LED();
   457  000866  ECE8  F004         	call	_vis_LED	;wreg free
   458  00086A                     
   459                           ;maincode4.c: 87:                     _delay((unsigned long)((200)*(8000000UL/4000.0)));
   460  00086A  0E03               	movlw	3
   461  00086C  0100               	movlb	0	; () banked
   462  00086E  6F63               	movwf	(??_main+1)& (0+255),b
   463  000870  0E08               	movlw	8
   464  000872  6F62               	movwf	??_main& (0+255),b
   465  000874  0E77               	movlw	119
   466  000876                     u557:
   467  000876  2EE8               	decfsz	wreg,f,c
   468  000878  D7FE               	bra	u557
   469  00087A  2F62               	decfsz	??_main& (0+255),f,b
   470  00087C  D7FC               	bra	u557
   471  00087E  2F63               	decfsz	(??_main+1)& (0+255),f,b
   472  000880  D7FA               	bra	u557
   473  000882                     
   474                           ;maincode4.c: 88:                 }
   475  000882  0100               	movlb	0	; () banked
   476  000884  2B64               	incf	main@x& (0+255),f,b
   477  000886                     
   478                           ; BSR set to: 0
   479  000886  0E03               	movlw	3
   480  000888  6564               	cpfsgt	main@x& (0+255),b
   481  00088A  EF49  F004         	goto	u521
   482  00088E  EF4B  F004         	goto	u520
   483  000892                     u521:
   484  000892  EF2B  F004         	goto	l1669
   485  000896                     u520:
   486  000896  EF93  F004         	goto	l1713
   487  00089A                     l1679:
   488                           
   489                           ; BSR set to: 0
   490                           ;maincode4.c: 91:                 for(x=4;x<6;x++){
   491  00089A  0E04               	movlw	4
   492  00089C  6F64               	movwf	main@x& (0+255),b
   493  00089E                     l1685:
   494                           
   495                           ; BSR set to: 0
   496                           ;maincode4.c: 92:                     LATE = efecto[x];
   497  00089E  0E2C               	movlw	low _efecto
   498  0008A0  2564               	addwf	main@x& (0+255),w,b
   499  0008A2  6ED9               	movwf	fsr2l,c
   500  0008A4  6ADA               	clrf	fsr2h,c
   501  0008A6  0E00               	movlw	high _efecto
   502  0008A8  22DA               	addwfc	fsr2h,f,c
   503  0008AA  50DF               	movf	indf2,w,c
   504  0008AC  6E8D               	movwf	141,c	;volatile
   505  0008AE                     
   506                           ; BSR set to: 0
   507                           ;maincode4.c: 93:                     vis_LED();
   508  0008AE  ECE8  F004         	call	_vis_LED	;wreg free
   509  0008B2                     
   510                           ;maincode4.c: 94:                     _delay((unsigned long)((200)*(8000000UL/4000.0)));
   511  0008B2  0E03               	movlw	3
   512  0008B4  0100               	movlb	0	; () banked
   513  0008B6  6F63               	movwf	(??_main+1)& (0+255),b
   514  0008B8  0E08               	movlw	8
   515  0008BA  6F62               	movwf	??_main& (0+255),b
   516  0008BC  0E77               	movlw	119
   517  0008BE                     u567:
   518  0008BE  2EE8               	decfsz	wreg,f,c
   519  0008C0  D7FE               	bra	u567
   520  0008C2  2F62               	decfsz	??_main& (0+255),f,b
   521  0008C4  D7FC               	bra	u567
   522  0008C6  2F63               	decfsz	(??_main+1)& (0+255),f,b
   523  0008C8  D7FA               	bra	u567
   524  0008CA                     
   525                           ;maincode4.c: 95:                 }
   526  0008CA  0100               	movlb	0	; () banked
   527  0008CC  2B64               	incf	main@x& (0+255),f,b
   528  0008CE                     
   529                           ; BSR set to: 0
   530  0008CE  0E05               	movlw	5
   531  0008D0  6564               	cpfsgt	main@x& (0+255),b
   532  0008D2  EF6D  F004         	goto	u531
   533  0008D6  EF6F  F004         	goto	u530
   534  0008DA                     u531:
   535  0008DA  EF4F  F004         	goto	l1685
   536  0008DE                     u530:
   537  0008DE  EF93  F004         	goto	l1713
   538  0008E2                     l1695:
   539                           
   540                           ; BSR set to: 0
   541                           ;maincode4.c: 98:                 for(x=6;x<8;x++){
   542  0008E2  0E06               	movlw	6
   543  0008E4  6F64               	movwf	main@x& (0+255),b
   544  0008E6                     l1701:
   545                           
   546                           ; BSR set to: 0
   547                           ;maincode4.c: 99:                     LATE = efecto[x];
   548  0008E6  0E2C               	movlw	low _efecto
   549  0008E8  2564               	addwf	main@x& (0+255),w,b
   550  0008EA  6ED9               	movwf	fsr2l,c
   551  0008EC  6ADA               	clrf	fsr2h,c
   552  0008EE  0E00               	movlw	high _efecto
   553  0008F0  22DA               	addwfc	fsr2h,f,c
   554  0008F2  50DF               	movf	indf2,w,c
   555  0008F4  6E8D               	movwf	141,c	;volatile
   556  0008F6                     
   557                           ; BSR set to: 0
   558                           ;maincode4.c: 100:                     vis_LED();
   559  0008F6  ECE8  F004         	call	_vis_LED	;wreg free
   560  0008FA                     
   561                           ;maincode4.c: 101:                     _delay((unsigned long)((200)*(8000000UL/4000.0)))
      +                          ;
   562  0008FA  0E03               	movlw	3
   563  0008FC  0100               	movlb	0	; () banked
   564  0008FE  6F63               	movwf	(??_main+1)& (0+255),b
   565  000900  0E08               	movlw	8
   566  000902  6F62               	movwf	??_main& (0+255),b
   567  000904  0E77               	movlw	119
   568  000906                     u577:
   569  000906  2EE8               	decfsz	wreg,f,c
   570  000908  D7FE               	bra	u577
   571  00090A  2F62               	decfsz	??_main& (0+255),f,b
   572  00090C  D7FC               	bra	u577
   573  00090E  2F63               	decfsz	(??_main+1)& (0+255),f,b
   574  000910  D7FA               	bra	u577
   575  000912                     
   576                           ;maincode4.c: 102:                 }
   577  000912  0100               	movlb	0	; () banked
   578  000914  2B64               	incf	main@x& (0+255),f,b
   579  000916                     
   580                           ; BSR set to: 0
   581  000916  0E07               	movlw	7
   582  000918  6564               	cpfsgt	main@x& (0+255),b
   583  00091A  EF91  F004         	goto	u541
   584  00091E  EF93  F004         	goto	u540
   585  000922                     u541:
   586  000922  EF73  F004         	goto	l1701
   587  000926                     u540:
   588  000926                     l1713:
   589  000926  5055               	movf	_estado^0,w,c
   590  000928  0100               	movlb	0	; () banked
   591  00092A  6F62               	movwf	??_main& (0+255),b
   592  00092C  6B63               	clrf	(??_main+1)& (0+255),b
   593                           
   594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   595                           ; Switch size 1, requested type "simple"
   596                           ; Number of cases is 1, Range of values is 0 to 0
   597                           ; switch strategies available:
   598                           ; Name         Instructions Cycles
   599                           ; simple_byte            4     3 (average)
   600                           ;	Chosen strategy is simple_byte
   601  00092E  5163               	movf	(??_main+1)& (0+255),w,b
   602  000930  0A00               	xorlw	0	; case 0
   603  000932  B4D8               	btfsc	status,2,c
   604  000934  EF9E  F004         	goto	l1759
   605  000938  EF93  F004         	goto	l1713
   606  00093C                     l1759:
   607                           
   608                           ; BSR set to: 0
   609                           ; Switch size 1, requested type "simple"
   610                           ; Number of cases is 3, Range of values is 0 to 2
   611                           ; switch strategies available:
   612                           ; Name         Instructions Cycles
   613                           ; simple_byte           10     6 (average)
   614                           ;	Chosen strategy is simple_byte
   615  00093C  5162               	movf	??_main& (0+255),w,b
   616  00093E  0A00               	xorlw	0	; case 0
   617  000940  B4D8               	btfsc	status,2,c
   618  000942  EF29  F004         	goto	l1663
   619  000946  0A01               	xorlw	1	; case 1
   620  000948  B4D8               	btfsc	status,2,c
   621  00094A  EF4D  F004         	goto	l1679
   622  00094E  0A03               	xorlw	3	; case 2
   623  000950  B4D8               	btfsc	status,2,c
   624  000952  EF71  F004         	goto	l1695
   625  000956  EF93  F004         	goto	l1713
   626  00095A  EFA3  F000         	goto	start
   627  00095E                     __end_of_main:
   628                           	callstack 0
   629                           
   630 ;; *************** function _vis_LED *****************
   631 ;; Defined at:
   632 ;;		line 45 in file "maincode4.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0, cstack
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   646 ;;      Params:         0       0       0       0       0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used: 1
   652 ;; Hardware stack levels required when called: 6
   653 ;; This function calls:
   654 ;;		_ENVIA_CHAR
   655 ;;		_POS_CURSOR
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text1
   662  0009D0                     __ptext1:
   663                           	callstack 0
   664  0009D0                     _vis_LED:
   665                           	callstack 24
   666  0009D0                     
   667                           ;maincode4.c: 46:     POS_CURSOR(2,5);
   668  0009D0  0E05               	movlw	5
   669  0009D2  6E50               	movwf	POS_CURSOR@columna^0,c
   670  0009D4  0E02               	movlw	2
   671  0009D6  ECD0  F005         	call	_POS_CURSOR
   672  0009DA                     
   673                           ;maincode4.c: 47:     if(PORTEbits.RE2 == 0){
   674  0009DA  B484               	btfsc	132,2,c	;volatile
   675  0009DC  EFF2  F004         	goto	u451
   676  0009E0  EFF4  F004         	goto	u450
   677  0009E4                     u451:
   678  0009E4  EFF9  F004         	goto	l1621
   679  0009E8                     u450:
   680  0009E8                     
   681                           ;maincode4.c: 48:         ENVIA_CHAR(0);
   682  0009E8  0E00               	movlw	0
   683  0009EA  EC07  F006         	call	_ENVIA_CHAR
   684                           
   685                           ;maincode4.c: 49:     }
   686  0009EE  EFFC  F004         	goto	l1623
   687  0009F2                     l1621:
   688                           
   689                           ;maincode4.c: 51:         ENVIA_CHAR(1);
   690  0009F2  0E01               	movlw	1
   691  0009F4  EC07  F006         	call	_ENVIA_CHAR
   692  0009F8                     l1623:
   693                           
   694                           ;maincode4.c: 53:     if(PORTEbits.RE1 == 0){
   695  0009F8  B284               	btfsc	132,1,c	;volatile
   696  0009FA  EF01  F005         	goto	u461
   697  0009FE  EF03  F005         	goto	u460
   698  000A02                     u461:
   699  000A02  EF08  F005         	goto	l1627
   700  000A06                     u460:
   701  000A06                     
   702                           ;maincode4.c: 54:         ENVIA_CHAR(0);
   703  000A06  0E00               	movlw	0
   704  000A08  EC07  F006         	call	_ENVIA_CHAR
   705                           
   706                           ;maincode4.c: 55:     }
   707  000A0C  EF0B  F005         	goto	l1629
   708  000A10                     l1627:
   709                           
   710                           ;maincode4.c: 57:         ENVIA_CHAR(1);
   711  000A10  0E01               	movlw	1
   712  000A12  EC07  F006         	call	_ENVIA_CHAR
   713  000A16                     l1629:
   714                           
   715                           ;maincode4.c: 59:     if(PORTEbits.RE0 == 0){
   716  000A16  B084               	btfsc	132,0,c	;volatile
   717  000A18  EF10  F005         	goto	u471
   718  000A1C  EF12  F005         	goto	u470
   719  000A20                     u471:
   720  000A20  EF17  F005         	goto	l1633
   721  000A24                     u470:
   722  000A24                     
   723                           ;maincode4.c: 60:         ENVIA_CHAR(0);
   724  000A24  0E00               	movlw	0
   725  000A26  EC07  F006         	call	_ENVIA_CHAR
   726                           
   727                           ;maincode4.c: 61:     }
   728  000A2A  EF1A  F005         	goto	l153
   729  000A2E                     l1633:
   730                           
   731                           ;maincode4.c: 63:         ENVIA_CHAR(1);
   732  000A2E  0E01               	movlw	1
   733  000A30  EC07  F006         	call	_ENVIA_CHAR
   734  000A34                     l153:
   735  000A34  0012               	return		;funcret
   736  000A36                     __end_of_vis_LED:
   737                           	callstack 0
   738                           
   739 ;; *************** function _POS_CURSOR *****************
   740 ;; Defined at:
   741 ;;		line 6 in file "LCD.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  fila            1    wreg     unsigned char 
   744 ;;  columna         1   12[COMRAM] unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  fila            1   13[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   756 ;;      Params:         1       0       0       0       0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0
   759 ;;      Totals:         2       0       0       0       0       0       0       0       0
   760 ;;Total ram usage:        2 bytes
   761 ;; Hardware stack levels used: 1
   762 ;; Hardware stack levels required when called: 5
   763 ;; This function calls:
   764 ;;		_ENVIA_LCD_CMD
   765 ;; This function is called by:
   766 ;;		_vis_LED
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text2
   772  000BA0                     __ptext2:
   773                           	callstack 0
   774  000BA0                     _POS_CURSOR:
   775                           	callstack 24
   776                           
   777                           ;incstack = 0
   778                           ;POS_CURSOR@fila stored from wreg
   779  000BA0  6E51               	movwf	POS_CURSOR@fila^0,c
   780  000BA2                     
   781                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   782  000BA2  0451               	decf	POS_CURSOR@fila^0,w,c
   783  000BA4  A4D8               	btfss	status,2,c
   784  000BA6  EFD7  F005         	goto	u391
   785  000BAA  EFD9  F005         	goto	u390
   786  000BAE                     u391:
   787  000BAE  EFDF  F005         	goto	l1509
   788  000BB2                     u390:
   789  000BB2                     
   790                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   791  000BB2  5050               	movf	POS_CURSOR@columna^0,w,c
   792  000BB4  0F80               	addlw	128
   793  000BB6  ECED  F005         	call	_ENVIA_LCD_CMD
   794                           
   795                           ;LCD.c: 11:  }
   796  000BBA  EFEC  F005         	goto	l24
   797  000BBE                     l1509:
   798  000BBE  0E02               	movlw	2
   799  000BC0  1851               	xorwf	POS_CURSOR@fila^0,w,c
   800  000BC2  A4D8               	btfss	status,2,c
   801  000BC4  EFE6  F005         	goto	u401
   802  000BC8  EFE8  F005         	goto	u400
   803  000BCC                     u401:
   804  000BCC  EFEC  F005         	goto	l24
   805  000BD0                     u400:
   806  000BD0                     
   807                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   808  000BD0  5050               	movf	POS_CURSOR@columna^0,w,c
   809  000BD2  0FC0               	addlw	192
   810  000BD4  ECED  F005         	call	_ENVIA_LCD_CMD
   811  000BD8                     l24:
   812  000BD8  0012               	return		;funcret
   813  000BDA                     __end_of_POS_CURSOR:
   814                           	callstack 0
   815                           
   816 ;; *************** function _init_LCD *****************
   817 ;; Defined at:
   818 ;;		line 34 in file "maincode4.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         0       0       0       0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0
   834 ;;      Temps:          0       1       0       0       0       0       0       0       0
   835 ;;      Totals:         0       1       0       0       0       0       0       0       0
   836 ;;Total ram usage:        1 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 6
   839 ;; This function calls:
   840 ;;		_BORRAR_LCD
   841 ;;		_CURSOR_HOME
   842 ;;		_CURSOR_ONOFF
   843 ;;		_GENERACARACTER
   844 ;;		_LCD_CONFIG
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text3
   851  000A96                     __ptext3:
   852                           	callstack 0
   853  000A96                     _init_LCD:
   854                           	callstack 24
   855  000A96                     
   856                           ;maincode4.c: 35:     TRISD = 0x00;
   857  000A96  0E00               	movlw	0
   858  000A98  6E95               	movwf	149,c	;volatile
   859  000A9A                     
   860                           ;maincode4.c: 36:     LCD_CONFIG();
   861  000A9A  EC1B  F005         	call	_LCD_CONFIG	;wreg free
   862  000A9E                     
   863                           ;maincode4.c: 37:     _delay((unsigned long)((16)*(8000000UL/4000.0)));
   864  000A9E  0E2A               	movlw	42
   865  000AA0  0100               	movlb	0	; () banked
   866  000AA2  6F60               	movwf	??_init_LCD& (0+255),b
   867  000AA4  0E8D               	movlw	141
   868  000AA6                     u587:
   869  000AA6  2EE8               	decfsz	wreg,f,c
   870  000AA8  D7FE               	bra	u587
   871  000AAA  2F60               	decfsz	??_init_LCD& (0+255),f,b
   872  000AAC  D7FC               	bra	u587
   873  000AAE  D000               	nop2	
   874  000AB0                     
   875                           ;maincode4.c: 38:     BORRAR_LCD();
   876  000AB0  ECA6  F006         	call	_BORRAR_LCD	;wreg free
   877  000AB4                     
   878                           ;maincode4.c: 39:     CURSOR_HOME();
   879  000AB4  ECA2  F006         	call	_CURSOR_HOME	;wreg free
   880  000AB8                     
   881                           ;maincode4.c: 40:     CURSOR_ONOFF(1);
   882  000AB8  0E01               	movlw	1
   883  000ABA  EC54  F006         	call	_CURSOR_ONOFF
   884  000ABE                     
   885                           ;maincode4.c: 41:     GENERACARACTER(LED_OFF, 0);
   886  000ABE  0E3C               	movlw	low _LED_OFF
   887  000AC0  6E50               	movwf	GENERACARACTER@vector^0,c
   888  000AC2  0E00               	movlw	high _LED_OFF
   889  000AC4  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
   890  000AC6  0E00               	movlw	0
   891  000AC8  6E52               	movwf	GENERACARACTER@pos^0,c
   892  000ACA  ECB2  F005         	call	_GENERACARACTER	;wreg free
   893  000ACE                     
   894                           ;maincode4.c: 42:     GENERACARACTER(LED_ON, 1);
   895  000ACE  0E34               	movlw	low _LED_ON
   896  000AD0  6E50               	movwf	GENERACARACTER@vector^0,c
   897  000AD2  0E00               	movlw	high _LED_ON
   898  000AD4  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
   899  000AD6  0E01               	movlw	1
   900  000AD8  6E52               	movwf	GENERACARACTER@pos^0,c
   901  000ADA  ECB2  F005         	call	_GENERACARACTER	;wreg free
   902  000ADE  0012               	return		;funcret
   903  000AE0                     __end_of_init_LCD:
   904                           	callstack 0
   905                           
   906 ;; *************** function _LCD_CONFIG *****************
   907 ;; Defined at:
   908 ;;		line 72 in file "LCD.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;                  1    wreg      void 
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   922 ;;      Params:         0       0       0       0       0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0
   924 ;;      Temps:          1       0       0       0       0       0       0       0       0
   925 ;;      Totals:         1       0       0       0       0       0       0       0       0
   926 ;;Total ram usage:        1 bytes
   927 ;; Hardware stack levels used: 1
   928 ;; Hardware stack levels required when called: 5
   929 ;; This function calls:
   930 ;;		_ENVIA_LCD_CMD
   931 ;;		_ENVIA_NIBBLE
   932 ;; This function is called by:
   933 ;;		_init_LCD
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text4
   938  000A36                     __ptext4:
   939                           	callstack 0
   940  000A36                     _LCD_CONFIG:
   941                           	callstack 24
   942  000A36                     
   943                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   944  000A36  908C               	bcf	140,0,c	;volatile
   945                           
   946                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   947  000A38  928C               	bcf	140,1,c	;volatile
   948  000A3A                     
   949                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   950  000A3A  0E30               	movlw	48
   951  000A3C  EC94  F006         	call	_ENVIA_NIBBLE
   952  000A40                     
   953                           ;LCD.c: 77:         _delay(24000);
   954  000A40  0E20               	movlw	32
   955  000A42  6E50               	movwf	??_LCD_CONFIG^0,c
   956  000A44  0E2A               	movlw	42
   957  000A46                     u597:
   958  000A46  2EE8               	decfsz	wreg,f,c
   959  000A48  D7FE               	bra	u597
   960  000A4A  2E50               	decfsz	??_LCD_CONFIG^0,f,c
   961  000A4C  D7FC               	bra	u597
   962  000A4E                     
   963                           ;LCD.c: 78:         _delay(24000);
   964  000A4E  0E20               	movlw	32
   965  000A50  6E50               	movwf	??_LCD_CONFIG^0,c
   966  000A52  0E2A               	movlw	42
   967  000A54                     u607:
   968  000A54  2EE8               	decfsz	wreg,f,c
   969  000A56  D7FE               	bra	u607
   970  000A58  2E50               	decfsz	??_LCD_CONFIG^0,f,c
   971  000A5A  D7FC               	bra	u607
   972                           
   973                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   974  000A5C  0E30               	movlw	48
   975  000A5E  EC94  F006         	call	_ENVIA_NIBBLE
   976  000A62                     
   977                           ;LCD.c: 83:  _delay(1200);
   978  000A62  0EF0               	movlw	240
   979  000A64                     u617:
   980  000A64  D000               	nop2	
   981  000A66  2EE8               	decfsz	wreg,f,c
   982  000A68  D7FD               	bra	u617
   983  000A6A                     
   984                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   985  000A6A  0E30               	movlw	48
   986  000A6C  EC94  F006         	call	_ENVIA_NIBBLE
   987  000A70                     
   988                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   989  000A70  0E20               	movlw	32
   990  000A72  EC94  F006         	call	_ENVIA_NIBBLE
   991  000A76                     
   992                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   993  000A76  0E01               	movlw	1
   994  000A78  ECED  F005         	call	_ENVIA_LCD_CMD
   995  000A7C                     
   996                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   997  000A7C  0E28               	movlw	40
   998  000A7E  ECED  F005         	call	_ENVIA_LCD_CMD
   999  000A82                     
  1000                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1001  000A82  0E0F               	movlw	15
  1002  000A84  ECED  F005         	call	_ENVIA_LCD_CMD
  1003  000A88                     
  1004                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1005  000A88  0E06               	movlw	6
  1006  000A8A  ECED  F005         	call	_ENVIA_LCD_CMD
  1007  000A8E                     
  1008                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1009  000A8E  0E01               	movlw	1
  1010  000A90  ECED  F005         	call	_ENVIA_LCD_CMD
  1011  000A94  0012               	return		;funcret
  1012  000A96                     __end_of_LCD_CONFIG:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _GENERACARACTER *****************
  1016 ;; Defined at:
  1017 ;;		line 153 in file "LCD.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  vector          2   12[COMRAM] PTR const unsigned char 
  1020 ;;		 -> LED_ON(8), LED_OFF(8), 
  1021 ;;  pos             1   14[COMRAM] unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  i               1   15[COMRAM] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         3       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		_ENVIA_CHAR
  1042 ;;		_ENVIA_LCD_CMD
  1043 ;; This function is called by:
  1044 ;;		_init_LCD
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text5
  1049  000B64                     __ptext5:
  1050                           	callstack 0
  1051  000B64                     _GENERACARACTER:
  1052                           	callstack 24
  1053  000B64                     
  1054                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1055  000B64  5052               	movf	GENERACARACTER@pos^0,w,c
  1056  000B66  0D08               	mullw	8
  1057  000B68  50F3               	movf	243,w,c
  1058  000B6A  0F40               	addlw	64
  1059  000B6C  ECED  F005         	call	_ENVIA_LCD_CMD
  1060  000B70                     
  1061                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1062  000B70  0E00               	movlw	0
  1063  000B72  6E53               	movwf	GENERACARACTER@i^0,c
  1064  000B74                     l1557:
  1065                           
  1066                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1067  000B74  5053               	movf	GENERACARACTER@i^0,w,c
  1068  000B76  2450               	addwf	GENERACARACTER@vector^0,w,c
  1069  000B78  6ED9               	movwf	fsr2l,c
  1070  000B7A  0E00               	movlw	0
  1071  000B7C  2051               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1072  000B7E  6EDA               	movwf	fsr2h,c
  1073  000B80  50DF               	movf	indf2,w,c
  1074  000B82  EC07  F006         	call	_ENVIA_CHAR
  1075  000B86                     
  1076                           ;LCD.c: 160:  }
  1077  000B86  2A53               	incf	GENERACARACTER@i^0,f,c
  1078  000B88  0E07               	movlw	7
  1079  000B8A  6453               	cpfsgt	GENERACARACTER@i^0,c
  1080  000B8C  EFCA  F005         	goto	u431
  1081  000B90  EFCC  F005         	goto	u430
  1082  000B94                     u431:
  1083  000B94  EFBA  F005         	goto	l1557
  1084  000B98                     u430:
  1085  000B98                     
  1086                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1087  000B98  0E80               	movlw	128
  1088  000B9A  ECED  F005         	call	_ENVIA_LCD_CMD
  1089  000B9E  0012               	return		;funcret
  1090  000BA0                     __end_of_GENERACARACTER:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _CURSOR_ONOFF *****************
  1094 ;; Defined at:
  1095 ;;		line 35 in file "LCD.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  estado          1    wreg     unsigned char 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  estado          1   12[COMRAM] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; Hardware stack levels required when called: 5
  1116 ;; This function calls:
  1117 ;;		_ENVIA_LCD_CMD
  1118 ;; This function is called by:
  1119 ;;		_init_LCD
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text6
  1124  000CA8                     __ptext6:
  1125                           	callstack 0
  1126  000CA8                     _CURSOR_ONOFF:
  1127                           	callstack 24
  1128                           
  1129                           ;incstack = 0
  1130                           ;CURSOR_ONOFF@estado stored from wreg
  1131  000CA8  6E50               	movwf	CURSOR_ONOFF@estado^0,c
  1132  000CAA                     
  1133                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1134  000CAA  5050               	movf	CURSOR_ONOFF@estado^0,w,c
  1135  000CAC  A4D8               	btfss	status,2,c
  1136  000CAE  EF5B  F006         	goto	u411
  1137  000CB2  EF5D  F006         	goto	u410
  1138  000CB6                     u411:
  1139  000CB6  EF60  F006         	goto	l1519
  1140  000CBA                     u410:
  1141  000CBA  0E0E               	movlw	14
  1142  000CBC  ECED  F005         	call	_ENVIA_LCD_CMD
  1143  000CC0                     l1519:
  1144                           
  1145                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1146  000CC0  0450               	decf	CURSOR_ONOFF@estado^0,w,c
  1147  000CC2  A4D8               	btfss	status,2,c
  1148  000CC4  EF66  F006         	goto	u421
  1149  000CC8  EF68  F006         	goto	u420
  1150  000CCC                     u421:
  1151  000CCC  EF6B  F006         	goto	l42
  1152  000CD0                     u420:
  1153  000CD0  0E0C               	movlw	12
  1154  000CD2  ECED  F005         	call	_ENVIA_LCD_CMD
  1155  000CD6                     l42:
  1156  000CD6  0012               	return		;funcret
  1157  000CD8                     __end_of_CURSOR_ONOFF:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _CURSOR_HOME *****************
  1161 ;; Defined at:
  1162 ;;		line 30 in file "LCD.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 5
  1183 ;; This function calls:
  1184 ;;		_ENVIA_LCD_CMD
  1185 ;; This function is called by:
  1186 ;;		_init_LCD
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text7
  1191  000D44                     __ptext7:
  1192                           	callstack 0
  1193  000D44                     _CURSOR_HOME:
  1194                           	callstack 24
  1195  000D44                     
  1196                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1197  000D44  0E02               	movlw	2
  1198  000D46  ECED  F005         	call	_ENVIA_LCD_CMD
  1199  000D4A  0012               	return		;funcret
  1200  000D4C                     __end_of_CURSOR_HOME:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _BORRAR_LCD *****************
  1204 ;; Defined at:
  1205 ;;		line 67 in file "LCD.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 5
  1226 ;; This function calls:
  1227 ;;		_ENVIA_LCD_CMD
  1228 ;; This function is called by:
  1229 ;;		_init_LCD
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text8
  1234  000D4C                     __ptext8:
  1235                           	callstack 0
  1236  000D4C                     _BORRAR_LCD:
  1237                           	callstack 24
  1238  000D4C                     
  1239                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1240  000D4C  0E01               	movlw	1
  1241  000D4E  ECED  F005         	call	_ENVIA_LCD_CMD
  1242  000D52  0012               	return		;funcret
  1243  000D54                     __end_of_BORRAR_LCD:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _ENVIA_LCD_CMD *****************
  1247 ;; Defined at:
  1248 ;;		line 104 in file "LCD.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  dato            1    wreg     unsigned char 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  dato            1   10[COMRAM] unsigned char 
  1253 ;;  aux             1   11[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 4
  1270 ;; This function calls:
  1271 ;;		_ENVIA_NIBBLE
  1272 ;;		_LEER_LCD
  1273 ;; This function is called by:
  1274 ;;		_POS_CURSOR
  1275 ;;		_CURSOR_HOME
  1276 ;;		_CURSOR_ONOFF
  1277 ;;		_BORRAR_LCD
  1278 ;;		_LCD_CONFIG
  1279 ;;		_GENERACARACTER
  1280 ;;		_BLINK_CURSOR
  1281 ;;		_DISPLAY_ONOFF
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text9
  1286  000BDA                     __ptext9:
  1287                           	callstack 0
  1288  000BDA                     _ENVIA_LCD_CMD:
  1289                           	callstack 24
  1290                           
  1291                           ;incstack = 0
  1292                           ;ENVIA_LCD_CMD@dato stored from wreg
  1293  000BDA  6E4E               	movwf	ENVIA_LCD_CMD@dato^0,c
  1294  000BDC                     
  1295                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1296  000BDC  908C               	bcf	140,0,c	;volatile
  1297  000BDE                     
  1298                           ;LCD.c: 108:  LEER_LCD();
  1299  000BDE  ECAF  F004         	call	_LEER_LCD	;wreg free
  1300  000BE2                     
  1301                           ;LCD.c: 109:  TRISD = 0b00000000;
  1302  000BE2  0E00               	movlw	0
  1303  000BE4  6E95               	movwf	149,c	;volatile
  1304  000BE6                     
  1305                           ;LCD.c: 111:         _delay(1200);
  1306  000BE6  0EF0               	movlw	240
  1307  000BE8                     u627:
  1308  000BE8  D000               	nop2	
  1309  000BEA  2EE8               	decfsz	wreg,f,c
  1310  000BEC  D7FD               	bra	u627
  1311  000BEE                     
  1312                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1313  000BEE  928C               	bcf	140,1,c	;volatile
  1314  000BF0                     
  1315                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1316  000BF0  948C               	bcf	140,2,c	;volatile
  1317  000BF2                     
  1318                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1319  000BF2  908C               	bcf	140,0,c	;volatile
  1320  000BF4                     
  1321                           ;LCD.c: 115:  aux = dato & 0xF0;
  1322  000BF4  504E               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1323  000BF6  0BF0               	andlw	240
  1324  000BF8  6E4F               	movwf	ENVIA_LCD_CMD@aux^0,c
  1325  000BFA                     
  1326                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1327  000BFA  504F               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1328  000BFC  EC94  F006         	call	_ENVIA_NIBBLE
  1329  000C00                     
  1330                           ;LCD.c: 117:  aux = dato<<4;
  1331  000C00  384E               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1332  000C02  0BF0               	andlw	240
  1333  000C04  6E4F               	movwf	ENVIA_LCD_CMD@aux^0,c
  1334  000C06                     
  1335                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1336  000C06  504F               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1337  000C08  EC94  F006         	call	_ENVIA_NIBBLE
  1338  000C0C  0012               	return		;funcret
  1339  000C0E                     __end_of_ENVIA_LCD_CMD:
  1340                           	callstack 0
  1341                           
  1342 ;; *************** function _configuro *****************
  1343 ;; Defined at:
  1344 ;;		line 15 in file "maincode4.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;		None
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;		None
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0
  1359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1362 ;;Total ram usage:        0 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 3
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text10
  1373  000CD8                     __ptext10:
  1374                           	callstack 0
  1375  000CD8                     _configuro:
  1376                           	callstack 27
  1377  000CD8                     
  1378                           ;maincode4.c: 16:     OSCCON = 0x70;
  1379  000CD8  0E70               	movlw	112
  1380  000CDA  6ED3               	movwf	211,c	;volatile
  1381                           
  1382                           ;maincode4.c: 17:     ADCON1 = 0x0F;
  1383  000CDC  0E0F               	movlw	15
  1384  000CDE  6EC1               	movwf	193,c	;volatile
  1385                           
  1386                           ;maincode4.c: 18:     TRISE = 0xF8;
  1387  000CE0  0EF8               	movlw	248
  1388  000CE2  6E96               	movwf	150,c	;volatile
  1389  000CE4                     
  1390                           ;maincode4.c: 19:     RCONbits.IPEN = 1;
  1391  000CE4  8ED0               	bsf	208,7,c	;volatile
  1392  000CE6                     
  1393                           ;maincode4.c: 20:     INTCONbits.GIEH = 1;
  1394  000CE6  8EF2               	bsf	242,7,c	;volatile
  1395  000CE8                     
  1396                           ;maincode4.c: 21:     INTCONbits.GIEL = 1;
  1397  000CE8  8CF2               	bsf	242,6,c	;volatile
  1398  000CEA                     
  1399                           ;maincode4.c: 22:     INTCON2bits.RBPU = 0;
  1400  000CEA  9EF1               	bcf	241,7,c	;volatile
  1401  000CEC                     
  1402                           ;maincode4.c: 23:     INTCONbits.INT0IE = 1;
  1403  000CEC  88F2               	bsf	242,4,c	;volatile
  1404  000CEE                     
  1405                           ;maincode4.c: 24:     INTCON2bits.INTEDG0 = 0;
  1406  000CEE  9CF1               	bcf	241,6,c	;volatile
  1407  000CF0                     
  1408                           ;maincode4.c: 25:     INTCON3bits.INT1IE = 1;
  1409  000CF0  86F0               	bsf	240,3,c	;volatile
  1410  000CF2                     
  1411                           ;maincode4.c: 26:     INTCON3bits.INT1IP = 0;
  1412  000CF2  9CF0               	bcf	240,6,c	;volatile
  1413  000CF4                     
  1414                           ;maincode4.c: 27:     INTCON2bits.INTEDG1 = 0;
  1415  000CF4  9AF1               	bcf	241,5,c	;volatile
  1416                           
  1417                           ;maincode4.c: 28:     SPBRG = 12;
  1418  000CF6  0E0C               	movlw	12
  1419  000CF8  6EAF               	movwf	175,c	;volatile
  1420  000CFA                     
  1421                           ;maincode4.c: 29:     RCSTAbits.SPEN = 1;
  1422  000CFA  8EAB               	bsf	171,7,c	;volatile
  1423  000CFC                     
  1424                           ;maincode4.c: 30:     TXSTAbits.TXEN = 1;
  1425  000CFC  8AAC               	bsf	172,5,c	;volatile
  1426  000CFE                     
  1427                           ;maincode4.c: 31:     TRISCbits.RC6 = 0;
  1428  000CFE  9C94               	bcf	148,6,c	;volatile
  1429  000D00  0012               	return		;funcret
  1430  000D02                     __end_of_configuro:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _ESCRIBE_MENSAJE *****************
  1434 ;; Defined at:
  1435 ;;		line 41 in file "LCD.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  cadena          2   12[COMRAM] PTR const unsigned char 
  1438 ;;		 -> STR_2(6), STR_1(10), 
  1439 ;;  tam             1   14[COMRAM] unsigned char 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  i               1   15[COMRAM] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         3       0       0       0       0       0       0       0       0
  1452 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1454 ;;      Totals:         4       2       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        6 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 5
  1458 ;; This function calls:
  1459 ;;		_ENVIA_CHAR
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text11
  1466  000B24                     __ptext11:
  1467                           	callstack 0
  1468  000B24                     _ESCRIBE_MENSAJE:
  1469                           	callstack 25
  1470  000B24                     
  1471                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1472  000B24  0E00               	movlw	0
  1473  000B26  6E53               	movwf	ESCRIBE_MENSAJE@i^0,c
  1474                           
  1475                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1476  000B28  0E00               	movlw	0
  1477  000B2A  6E53               	movwf	ESCRIBE_MENSAJE@i^0,c
  1478  000B2C  EFA8  F005         	goto	l1571
  1479  000B30                     l1567:
  1480                           
  1481                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1482  000B30  5053               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1483  000B32  2450               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1484  000B34  0100               	movlb	0	; () banked
  1485  000B36  6F60               	movwf	??_ESCRIBE_MENSAJE& (0+255),b
  1486  000B38  0E00               	movlw	0
  1487  000B3A  2051               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1488  000B3C  6F61               	movwf	(??_ESCRIBE_MENSAJE+1)& (0+255),b
  1489  000B3E  C060  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1490  000B42  C061  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1491  000B46                     	if	0	;tblptru may be non-zero
  1492  000B46                     	endif
  1493  000B46                     	if	0	;tblptru may be non-zero
  1494  000B46                     	endif
  1495  000B46  0008               	tblrd		*
  1496  000B48  50F5               	movf	tablat,w,c
  1497  000B4A  EC07  F006         	call	_ENVIA_CHAR
  1498  000B4E                     
  1499                           ;LCD.c: 47:  }
  1500  000B4E  2A53               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1501  000B50                     l1571:
  1502  000B50  5052               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1503  000B52  5C53               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1504  000B54  A0D8               	btfss	status,0,c
  1505  000B56  EFAF  F005         	goto	u441
  1506  000B5A  EFB1  F005         	goto	u440
  1507  000B5E                     u441:
  1508  000B5E  EF98  F005         	goto	l1567
  1509  000B62                     u440:
  1510  000B62  0012               	return		;funcret
  1511  000B64                     __end_of_ESCRIBE_MENSAJE:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _ENVIA_CHAR *****************
  1515 ;; Defined at:
  1516 ;;		line 50 in file "LCD.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  dato            1    wreg     unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  dato            1   10[COMRAM] unsigned char 
  1521 ;;  aux             1   11[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         0       0       0       0       0       0       0       0       0
  1532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1535 ;;Total ram usage:        2 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 4
  1538 ;; This function calls:
  1539 ;;		_ENVIA_NIBBLE
  1540 ;;		_LEER_LCD
  1541 ;; This function is called by:
  1542 ;;		_ESCRIBE_MENSAJE
  1543 ;;		_GENERACARACTER
  1544 ;;		_vis_LED
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text12
  1549  000C0E                     __ptext12:
  1550                           	callstack 0
  1551  000C0E                     _ENVIA_CHAR:
  1552                           	callstack 25
  1553                           
  1554                           ;incstack = 0
  1555                           ;ENVIA_CHAR@dato stored from wreg
  1556  000C0E  6E4E               	movwf	ENVIA_CHAR@dato^0,c
  1557  000C10                     
  1558                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1559  000C10  808C               	bsf	140,0,c	;volatile
  1560  000C12                     
  1561                           ;LCD.c: 54:  LEER_LCD();
  1562  000C12  ECAF  F004         	call	_LEER_LCD	;wreg free
  1563  000C16                     
  1564                           ;LCD.c: 55:  TRISD = 0x00;
  1565  000C16  0E00               	movlw	0
  1566  000C18  6E95               	movwf	149,c	;volatile
  1567  000C1A                     
  1568                           ;LCD.c: 56:         _delay(1200);
  1569  000C1A  0EF0               	movlw	240
  1570  000C1C                     u637:
  1571  000C1C  D000               	nop2	
  1572  000C1E  2EE8               	decfsz	wreg,f,c
  1573  000C20  D7FD               	bra	u637
  1574  000C22                     
  1575                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1576  000C22  928C               	bcf	140,1,c	;volatile
  1577  000C24                     
  1578                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1579  000C24  948C               	bcf	140,2,c	;volatile
  1580  000C26                     
  1581                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1582  000C26  808C               	bsf	140,0,c	;volatile
  1583  000C28                     
  1584                           ;LCD.c: 61:  aux = dato & 0xF0;
  1585  000C28  504E               	movf	ENVIA_CHAR@dato^0,w,c
  1586  000C2A  0BF0               	andlw	240
  1587  000C2C  6E4F               	movwf	ENVIA_CHAR@aux^0,c
  1588  000C2E                     
  1589                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1590  000C2E  504F               	movf	ENVIA_CHAR@aux^0,w,c
  1591  000C30  EC94  F006         	call	_ENVIA_NIBBLE
  1592  000C34                     
  1593                           ;LCD.c: 63:  aux = dato << 4;
  1594  000C34  384E               	swapf	ENVIA_CHAR@dato^0,w,c
  1595  000C36  0BF0               	andlw	240
  1596  000C38  6E4F               	movwf	ENVIA_CHAR@aux^0,c
  1597  000C3A                     
  1598                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1599  000C3A  504F               	movf	ENVIA_CHAR@aux^0,w,c
  1600  000C3C  EC94  F006         	call	_ENVIA_NIBBLE
  1601  000C40  0012               	return		;funcret
  1602  000C42                     __end_of_ENVIA_CHAR:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _LEER_LCD *****************
  1606 ;; Defined at:
  1607 ;;		line 121 in file "LCD.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  aux             1    9[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1624 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1625 ;;Total ram usage:        1 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 3
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_ENVIA_CHAR
  1632 ;;		_ENVIA_LCD_CMD
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text13
  1637  00095E                     __ptext13:
  1638                           	callstack 0
  1639  00095E                     _LEER_LCD:
  1640                           	callstack 24
  1641  00095E                     
  1642                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1643  00095E  0EF8               	movlw	248
  1644  000960  6E95               	movwf	149,c	;volatile
  1645  000962                     
  1646                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1647  000962  908C               	bcf	140,0,c	;volatile
  1648  000964                     
  1649                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1650  000964  828C               	bsf	140,1,c	;volatile
  1651  000966                     
  1652                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1653  000966  848C               	bsf	140,2,c	;volatile
  1654  000968                     
  1655                           ;LCD.c: 128:         _delay(1200);
  1656  000968  0EF0               	movlw	240
  1657  00096A                     u647:
  1658  00096A  D000               	nop2	
  1659  00096C  2EE8               	decfsz	wreg,f,c
  1660  00096E  D7FD               	bra	u647
  1661  000970                     
  1662                           ;LCD.c: 130:  aux = PORTD;
  1663  000970  CF83 F04D          	movff	3971,LEER_LCD@aux	;volatile
  1664  000974                     
  1665                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1666  000974  948C               	bcf	140,2,c	;volatile
  1667  000976                     
  1668                           ;LCD.c: 132:         _delay(1200);
  1669  000976  0EF0               	movlw	240
  1670  000978                     u657:
  1671  000978  D000               	nop2	
  1672  00097A  2EE8               	decfsz	wreg,f,c
  1673  00097C  D7FD               	bra	u657
  1674  00097E                     
  1675                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1676  00097E  848C               	bsf	140,2,c	;volatile
  1677  000980                     
  1678                           ;LCD.c: 135:         _delay(1200);
  1679  000980  0EF0               	movlw	240
  1680  000982                     u667:
  1681  000982  D000               	nop2	
  1682  000984  2EE8               	decfsz	wreg,f,c
  1683  000986  D7FD               	bra	u667
  1684  000988                     
  1685                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1686  000988  948C               	bcf	140,2,c	;volatile
  1687  00098A                     l1437:
  1688                           
  1689                           ;LCD.c: 138:  aux = aux & 0x80;
  1690  00098A  504D               	movf	LEER_LCD@aux^0,w,c
  1691  00098C  0B80               	andlw	128
  1692  00098E  6E4D               	movwf	LEER_LCD@aux^0,c
  1693                           
  1694                           ;LCD.c: 139:  while(aux == 0x80)
  1695  000990  EFDE  F004         	goto	l1451
  1696  000994                     l67:
  1697                           
  1698                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1699  000994  848C               	bsf	140,2,c	;volatile
  1700  000996                     
  1701                           ;LCD.c: 142:             _delay(1200);
  1702  000996  0EF0               	movlw	240
  1703  000998                     u677:
  1704  000998  D000               	nop2	
  1705  00099A  2EE8               	decfsz	wreg,f,c
  1706  00099C  D7FD               	bra	u677
  1707  00099E                     
  1708                           ;LCD.c: 143:             aux = PORTD;
  1709  00099E  CF83 F04D          	movff	3971,LEER_LCD@aux	;volatile
  1710  0009A2                     
  1711                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1712  0009A2  948C               	bcf	140,2,c	;volatile
  1713                           
  1714                           ;LCD.c: 145:             _delay(1200);
  1715  0009A4  0EF0               	movlw	240
  1716  0009A6                     u687:
  1717  0009A6  D000               	nop2	
  1718  0009A8  2EE8               	decfsz	wreg,f,c
  1719  0009AA  D7FD               	bra	u687
  1720  0009AC                     
  1721                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1722  0009AC  848C               	bsf	140,2,c	;volatile
  1723                           
  1724                           ;LCD.c: 147:             _delay(1200);
  1725  0009AE  0EF0               	movlw	240
  1726  0009B0                     u697:
  1727  0009B0  D000               	nop2	
  1728  0009B2  2EE8               	decfsz	wreg,f,c
  1729  0009B4  D7FD               	bra	u697
  1730  0009B6                     
  1731                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1732  0009B6  948C               	bcf	140,2,c	;volatile
  1733  0009B8  EFC5  F004         	goto	l1437
  1734  0009BC                     l1451:
  1735                           
  1736                           ;LCD.c: 139:  while(aux == 0x80)
  1737  0009BC  0E80               	movlw	128
  1738  0009BE  184D               	xorwf	LEER_LCD@aux^0,w,c
  1739  0009C0  B4D8               	btfsc	status,2,c
  1740  0009C2  EFE5  F004         	goto	u381
  1741  0009C6  EFE7  F004         	goto	u380
  1742  0009CA                     u381:
  1743  0009CA  EFCA  F004         	goto	l67
  1744  0009CE                     u380:
  1745  0009CE  0012               	return		;funcret
  1746  0009D0                     __end_of_LEER_LCD:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _ENVIA_NIBBLE *****************
  1750 ;; Defined at:
  1751 ;;		line 93 in file "LCD.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  dato            1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  dato            1    9[COMRAM] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 3
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_ENVIA_CHAR
  1776 ;;		_LCD_CONFIG
  1777 ;;		_ENVIA_LCD_CMD
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text14
  1782  000D28                     __ptext14:
  1783                           	callstack 0
  1784  000D28                     _ENVIA_NIBBLE:
  1785                           	callstack 24
  1786                           
  1787                           ;incstack = 0
  1788                           ;ENVIA_NIBBLE@dato stored from wreg
  1789  000D28  6E4D               	movwf	ENVIA_NIBBLE@dato^0,c
  1790  000D2A                     
  1791                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1792  000D2A  0E0F               	movlw	15
  1793  000D2C  168C               	andwf	140,f,c	;volatile
  1794                           
  1795                           ;LCD.c: 96:  dato &= 0xF0;
  1796  000D2E  0EF0               	movlw	240
  1797  000D30  164D               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1798                           
  1799                           ;LCD.c: 97:  LATD|= dato;
  1800  000D32  504D               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1801  000D34  128C               	iorwf	140,f,c	;volatile
  1802  000D36                     
  1803                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1804  000D36  848C               	bsf	140,2,c	;volatile
  1805  000D38                     
  1806                           ;LCD.c: 100:         _delay(1200);
  1807  000D38  0EF0               	movlw	240
  1808  000D3A                     u707:
  1809  000D3A  D000               	nop2	
  1810  000D3C  2EE8               	decfsz	wreg,f,c
  1811  000D3E  D7FD               	bra	u707
  1812  000D40                     
  1813                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1814  000D40  948C               	bcf	140,2,c	;volatile
  1815  000D42  0012               	return		;funcret
  1816  000D44                     __end_of_ENVIA_NIBBLE:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _INT1_ISR *****************
  1820 ;; Defined at:
  1821 ;;		line 119 in file "maincode4.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  y               1    8[COMRAM] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1835 ;;      Params:         0       0       0       0       0       0       0       0       0
  1836 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1837 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1838 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1839 ;;Total ram usage:        8 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; Hardware stack levels required when called: 2
  1842 ;; This function calls:
  1843 ;;		_NEW_LINE_EUSART
  1844 ;; This function is called by:
  1845 ;;		Interrupt level 1
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	intcodelo
  1850  000018                     __pintcodelo:
  1851                           	callstack 0
  1852  000018                     _INT1_ISR:
  1853                           	callstack 24
  1854                           
  1855                           ;incstack = 0
  1856  000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1857  00001A  CFD8 F047          	movff	status,??_INT1_ISR+2
  1858  00001E  CFE8 F048          	movff	wreg,??_INT1_ISR+3
  1859  000022  CFE0 F049          	movff	bsr,??_INT1_ISR+4
  1860  000026  CFD9 F04A          	movff	fsr2l,??_INT1_ISR+5
  1861  00002A  CFDA F04B          	movff	fsr2h,??_INT1_ISR+6
  1862  00002E                     
  1863                           ;maincode4.c: 120:     INTCON3bits.INT1IF = 0;
  1864  00002E  90F0               	bcf	240,0,c	;volatile
  1865                           
  1866                           ;maincode4.c: 121:     unsigned char y;;maincode4.c: 122:     switch(estado2){
  1867  000030  EF6E  F000         	goto	i1l1249
  1868  000034                     i1l1211:
  1869                           
  1870                           ;maincode4.c: 124:             for(y=0;y<10;y++){
  1871  000034  0E00               	movlw	0
  1872  000036  6E4C               	movwf	INT1_ISR@y^0,c
  1873  000038                     i1l1217:
  1874                           
  1875                           ;maincode4.c: 125:                 TXREG = mensaje1[y];
  1876  000038  0E21               	movlw	low _mensaje1
  1877  00003A  244C               	addwf	INT1_ISR@y^0,w,c
  1878  00003C  6ED9               	movwf	fsr2l,c
  1879  00003E  6ADA               	clrf	fsr2h,c
  1880  000040  0E00               	movlw	high _mensaje1
  1881  000042  22DA               	addwfc	fsr2h,f,c
  1882  000044  50DF               	movf	indf2,w,c
  1883  000046  6EAD               	movwf	173,c	;volatile
  1884  000048                     i1l197:
  1885  000048  A2AC               	btfss	172,1,c	;volatile
  1886  00004A  EF29  F000         	goto	i1u21_21
  1887  00004E  EF2B  F000         	goto	i1u21_20
  1888  000052                     i1u21_21:
  1889  000052  EF24  F000         	goto	i1l197
  1890  000056                     i1u21_20:
  1891  000056                     
  1892                           ;maincode4.c: 127:             }
  1893  000056  2A4C               	incf	INT1_ISR@y^0,f,c
  1894  000058  0E09               	movlw	9
  1895  00005A  644C               	cpfsgt	INT1_ISR@y^0,c
  1896  00005C  EF32  F000         	goto	i1u22_21
  1897  000060  EF34  F000         	goto	i1u22_20
  1898  000064                     i1u22_21:
  1899  000064  EF1C  F000         	goto	i1l1217
  1900  000068                     i1u22_20:
  1901  000068  EF87  F000         	goto	i1l1251
  1902  00006C                     i1l1223:
  1903                           
  1904                           ;maincode4.c: 130:             for(y=0;y<15;y++){
  1905  00006C  0E00               	movlw	0
  1906  00006E  6E4C               	movwf	INT1_ISR@y^0,c
  1907  000070                     i1l1229:
  1908                           
  1909                           ;maincode4.c: 131:                 TXREG = mensaje2[y];
  1910  000070  0E11               	movlw	low _mensaje2
  1911  000072  244C               	addwf	INT1_ISR@y^0,w,c
  1912  000074  6ED9               	movwf	fsr2l,c
  1913  000076  6ADA               	clrf	fsr2h,c
  1914  000078  0E00               	movlw	high _mensaje2
  1915  00007A  22DA               	addwfc	fsr2h,f,c
  1916  00007C  50DF               	movf	indf2,w,c
  1917  00007E  6EAD               	movwf	173,c	;volatile
  1918  000080                     i1l204:
  1919  000080  A2AC               	btfss	172,1,c	;volatile
  1920  000082  EF45  F000         	goto	i1u23_21
  1921  000086  EF47  F000         	goto	i1u23_20
  1922  00008A                     i1u23_21:
  1923  00008A  EF40  F000         	goto	i1l204
  1924  00008E                     i1u23_20:
  1925  00008E                     
  1926                           ;maincode4.c: 133:             }
  1927  00008E  2A4C               	incf	INT1_ISR@y^0,f,c
  1928  000090  0E0E               	movlw	14
  1929  000092  644C               	cpfsgt	INT1_ISR@y^0,c
  1930  000094  EF4E  F000         	goto	i1u24_21
  1931  000098  EF50  F000         	goto	i1u24_20
  1932  00009C                     i1u24_21:
  1933  00009C  EF38  F000         	goto	i1l1229
  1934  0000A0                     i1u24_20:
  1935  0000A0  EF87  F000         	goto	i1l1251
  1936  0000A4                     i1l1235:
  1937                           
  1938                           ;maincode4.c: 136:             for(y=0;y<15;y++){
  1939  0000A4  0E00               	movlw	0
  1940  0000A6  6E4C               	movwf	INT1_ISR@y^0,c
  1941  0000A8                     i1l1241:
  1942                           
  1943                           ;maincode4.c: 137:                 TXREG = mensaje3[y];
  1944  0000A8  0E01               	movlw	low _mensaje3
  1945  0000AA  244C               	addwf	INT1_ISR@y^0,w,c
  1946  0000AC  6ED9               	movwf	fsr2l,c
  1947  0000AE  6ADA               	clrf	fsr2h,c
  1948  0000B0  0E00               	movlw	high _mensaje3
  1949  0000B2  22DA               	addwfc	fsr2h,f,c
  1950  0000B4  50DF               	movf	indf2,w,c
  1951  0000B6  6EAD               	movwf	173,c	;volatile
  1952  0000B8                     i1l210:
  1953  0000B8  A2AC               	btfss	172,1,c	;volatile
  1954  0000BA  EF61  F000         	goto	i1u25_21
  1955  0000BE  EF63  F000         	goto	i1u25_20
  1956  0000C2                     i1u25_21:
  1957  0000C2  EF5C  F000         	goto	i1l210
  1958  0000C6                     i1u25_20:
  1959  0000C6                     
  1960                           ;maincode4.c: 139:             }
  1961  0000C6  2A4C               	incf	INT1_ISR@y^0,f,c
  1962  0000C8  0E0E               	movlw	14
  1963  0000CA  644C               	cpfsgt	INT1_ISR@y^0,c
  1964  0000CC  EF6A  F000         	goto	i1u26_21
  1965  0000D0  EF6C  F000         	goto	i1u26_20
  1966  0000D4                     i1u26_21:
  1967  0000D4  EF54  F000         	goto	i1l1241
  1968  0000D8                     i1u26_20:
  1969  0000D8  EF87  F000         	goto	i1l1251
  1970  0000DC                     i1l1249:
  1971  0000DC  5054               	movf	_estado2^0,w,c
  1972  0000DE  6E45               	movwf	??_INT1_ISR^0,c
  1973  0000E0  6A46               	clrf	(??_INT1_ISR+1)^0,c
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  0000E2  5046               	movf	(??_INT1_ISR+1)^0,w,c
  1983  0000E4  0A00               	xorlw	0	; case 0
  1984  0000E6  B4D8               	btfsc	status,2,c
  1985  0000E8  EF78  F000         	goto	i1l1761
  1986  0000EC  EF87  F000         	goto	i1l1251
  1987  0000F0                     i1l1761:
  1988                           
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 3, Range of values is 0 to 2
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte           10     6 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995  0000F0  5045               	movf	??_INT1_ISR^0,w,c
  1996  0000F2  0A00               	xorlw	0	; case 0
  1997  0000F4  B4D8               	btfsc	status,2,c
  1998  0000F6  EF1A  F000         	goto	i1l1211
  1999  0000FA  0A01               	xorlw	1	; case 1
  2000  0000FC  B4D8               	btfsc	status,2,c
  2001  0000FE  EF36  F000         	goto	i1l1223
  2002  000102  0A03               	xorlw	3	; case 2
  2003  000104  B4D8               	btfsc	status,2,c
  2004  000106  EF52  F000         	goto	i1l1235
  2005  00010A  EF87  F000         	goto	i1l1251
  2006  00010E                     i1l1251:
  2007                           
  2008                           ;maincode4.c: 142:     NEW_LINE_EUSART();
  2009  00010E  EC81  F006         	call	_NEW_LINE_EUSART	;wreg free
  2010  000112                     
  2011                           ;maincode4.c: 143:     if(estado2 == 2){
  2012  000112  0E02               	movlw	2
  2013  000114  1854               	xorwf	_estado2^0,w,c
  2014  000116  A4D8               	btfss	status,2,c
  2015  000118  EF90  F000         	goto	i1u27_21
  2016  00011C  EF92  F000         	goto	i1u27_20
  2017  000120                     i1u27_21:
  2018  000120  EF96  F000         	goto	i1l1257
  2019  000124                     i1u27_20:
  2020  000124                     
  2021                           ;maincode4.c: 144:         estado2 = 0;
  2022  000124  0E00               	movlw	0
  2023  000126  6E54               	movwf	_estado2^0,c
  2024                           
  2025                           ;maincode4.c: 145:     }
  2026  000128  EF97  F000         	goto	i1l215
  2027  00012C                     i1l1257:
  2028                           
  2029                           ;maincode4.c: 147:         estado2++;
  2030  00012C  2A54               	incf	_estado2^0,f,c
  2031  00012E                     i1l215:
  2032  00012E  C04B  FFDA         	movff	??_INT1_ISR+6,fsr2h
  2033  000132  C04A  FFD9         	movff	??_INT1_ISR+5,fsr2l
  2034  000136  C049  FFE0         	movff	??_INT1_ISR+4,bsr
  2035  00013A  C048  FFE8         	movff	??_INT1_ISR+3,wreg
  2036  00013E  C047  FFD8         	movff	??_INT1_ISR+2,status
  2037  000142  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2038  000144  0010               	retfie	
  2039  000146                     __end_of_INT1_ISR:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _NEW_LINE_EUSART *****************
  2043 ;; Defined at:
  2044 ;;		line 67 in file "maincode4.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_INT1_ISR
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text16
  2073  000D02                     __ptext16:
  2074                           	callstack 0
  2075  000D02                     _NEW_LINE_EUSART:
  2076                           	callstack 24
  2077  000D02                     
  2078                           ;maincode4.c: 68:     TXREG = 0x0A;
  2079  000D02  0E0A               	movlw	10
  2080  000D04  6EAD               	movwf	173,c	;volatile
  2081  000D06                     i1l156:
  2082  000D06  A2AC               	btfss	172,1,c	;volatile
  2083  000D08  EF88  F006         	goto	i1u11_21
  2084  000D0C  EF8A  F006         	goto	i1u11_20
  2085  000D10                     i1u11_21:
  2086  000D10  EF83  F006         	goto	i1l156
  2087  000D14                     i1u11_20:
  2088  000D14                     
  2089                           ;maincode4.c: 70:     TXREG = 0x0D;
  2090  000D14  0E0D               	movlw	13
  2091  000D16  6EAD               	movwf	173,c	;volatile
  2092  000D18                     i1l159:
  2093  000D18  A2AC               	btfss	172,1,c	;volatile
  2094  000D1A  EF91  F006         	goto	i1u12_21
  2095  000D1E  EF93  F006         	goto	i1u12_20
  2096  000D22                     i1u12_21:
  2097  000D22  EF8C  F006         	goto	i1l159
  2098  000D26                     i1u12_20:
  2099  000D26  0012               	return		;funcret
  2100  000D28                     __end_of_NEW_LINE_EUSART:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _INT0_ISR *****************
  2104 ;; Defined at:
  2105 ;;		line 108 in file "maincode4.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2121 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2122 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		Interrupt level 2
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	intcode
  2133  000008                     __pintcode:
  2134                           	callstack 0
  2135  000008                     _INT0_ISR:
  2136                           	callstack 24
  2137                           
  2138                           ;incstack = 0
  2139  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2140  00000A  ED21  F006         	call	int_func,f	;refresh shadow registers
  2141                           
  2142                           	psect	intcode_body
  2143  000C42                     __pintcode_body:
  2144                           	callstack 24
  2145  000C42                     int_func:
  2146                           	callstack 24
  2147  000C42  0006               	pop		; remove dummy address from shadow register refresh
  2148  000C44                     
  2149                           ;maincode4.c: 109:     INTCONbits.INT0IF = 0;
  2150  000C44  92F2               	bcf	242,1,c	;volatile
  2151  000C46                     
  2152                           ;maincode4.c: 110:     if(estado == 2){
  2153  000C46  0E02               	movlw	2
  2154  000C48  1855               	xorwf	_estado^0,w,c
  2155  000C4A  A4D8               	btfss	status,2,c
  2156  000C4C  EF2A  F006         	goto	i2u20_41
  2157  000C50  EF2C  F006         	goto	i2u20_40
  2158  000C54                     i2u20_41:
  2159  000C54  EF30  F006         	goto	i2l1205
  2160  000C58                     i2u20_40:
  2161  000C58                     
  2162                           ;maincode4.c: 111:         estado = 0;
  2163  000C58  0E00               	movlw	0
  2164  000C5A  6E55               	movwf	_estado^0,c
  2165                           
  2166                           ;maincode4.c: 112:     }
  2167  000C5C  EF31  F006         	goto	i2l1207
  2168  000C60                     i2l1205:
  2169                           
  2170                           ;maincode4.c: 114:         estado++;
  2171  000C60  2A55               	incf	_estado^0,f,c
  2172  000C62                     i2l1207:
  2173                           
  2174                           ;maincode4.c: 116:     _delay((unsigned long)((90)*(8000000UL/4000.0)));
  2175  000C62  0EEA               	movlw	234
  2176  000C64  6E44               	movwf	??_INT0_ISR^0,c
  2177  000C66  0EC3               	movlw	195
  2178  000C68                     i2u71_47:
  2179  000C68  2EE8               	decfsz	wreg,f,c
  2180  000C6A  D7FE               	bra	i2u71_47
  2181  000C6C  2E44               	decfsz	??_INT0_ISR^0,f,c
  2182  000C6E  D7FC               	bra	i2u71_47
  2183  000C70  F000               	nop	
  2184  000C72  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2185  000C74  0011               	retfie		f
  2186  000C76                     __end_of_INT0_ISR:
  2187                           	callstack 0
  2188                           
  2189                           	psect	rparam
  2190  0000                     
  2191                           	psect	temp
  2192  000056                     btemp:
  2193                           	callstack 0
  2194  000056                     	ds	1
  2195  0000                     int$flags	set	btemp
  2196  0000                     wtemp8	set	btemp+1
  2197  0000                     ttemp5	set	btemp+1
  2198  0000                     ttemp6	set	btemp+4
  2199  0000                     ttemp7	set	btemp+8
  2200                           
  2201                           	psect	idloc
  2202                           
  2203                           ;Config register IDLOC0 @ 0x200000
  2204                           ;	unspecified, using default values
  2205  200000                     	org	2097152
  2206  200000  FF                 	db	255
  2207                           
  2208                           ;Config register IDLOC1 @ 0x200001
  2209                           ;	unspecified, using default values
  2210  200001                     	org	2097153
  2211  200001  FF                 	db	255
  2212                           
  2213                           ;Config register IDLOC2 @ 0x200002
  2214                           ;	unspecified, using default values
  2215  200002                     	org	2097154
  2216  200002  FF                 	db	255
  2217                           
  2218                           ;Config register IDLOC3 @ 0x200003
  2219                           ;	unspecified, using default values
  2220  200003                     	org	2097155
  2221  200003  FF                 	db	255
  2222                           
  2223                           ;Config register IDLOC4 @ 0x200004
  2224                           ;	unspecified, using default values
  2225  200004                     	org	2097156
  2226  200004  FF                 	db	255
  2227                           
  2228                           ;Config register IDLOC5 @ 0x200005
  2229                           ;	unspecified, using default values
  2230  200005                     	org	2097157
  2231  200005  FF                 	db	255
  2232                           
  2233                           ;Config register IDLOC6 @ 0x200006
  2234                           ;	unspecified, using default values
  2235  200006                     	org	2097158
  2236  200006  FF                 	db	255
  2237                           
  2238                           ;Config register IDLOC7 @ 0x200007
  2239                           ;	unspecified, using default values
  2240  200007                     	org	2097159
  2241  200007  FF                 	db	255
  2242                           
  2243                           	psect	config
  2244                           
  2245                           ;Config register CONFIG1L @ 0x300000
  2246                           ;	PLL Prescaler Selection bits
  2247                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2248                           ;	System Clock Postscaler Selection bits
  2249                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2250                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2251                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2252  300000                     	org	3145728
  2253  300000  00                 	db	0
  2254                           
  2255                           ;Config register CONFIG1H @ 0x300001
  2256                           ;	Oscillator Selection bits
  2257                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2258                           ;	Fail-Safe Clock Monitor Enable bit
  2259                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2260                           ;	Internal/External Oscillator Switchover bit
  2261                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2262  300001                     	org	3145729
  2263  300001  08                 	db	8
  2264                           
  2265                           ;Config register CONFIG2L @ 0x300002
  2266                           ;	Power-up Timer Enable bit
  2267                           ;	PWRT = ON, PWRT enabled
  2268                           ;	Brown-out Reset Enable bits
  2269                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2270                           ;	Brown-out Reset Voltage bits
  2271                           ;	BORV = 3, Minimum setting 2.05V
  2272                           ;	USB Voltage Regulator Enable bit
  2273                           ;	VREGEN = OFF, USB voltage regulator disabled
  2274  300002                     	org	3145730
  2275  300002  18                 	db	24
  2276                           
  2277                           ;Config register CONFIG2H @ 0x300003
  2278                           ;	Watchdog Timer Enable bit
  2279                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2280                           ;	Watchdog Timer Postscale Select bits
  2281                           ;	WDTPS = 32768, 1:32768
  2282  300003                     	org	3145731
  2283  300003  1E                 	db	30
  2284                           
  2285                           ; Padding undefined space
  2286  300004                     	org	3145732
  2287  300004  FF                 	db	255
  2288                           
  2289                           ;Config register CONFIG3H @ 0x300005
  2290                           ;	CCP2 MUX bit
  2291                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2292                           ;	PORTB A/D Enable bit
  2293                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2294                           ;	Low-Power Timer 1 Oscillator Enable bit
  2295                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2296                           ;	MCLR Pin Enable bit
  2297                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2298  300005                     	org	3145733
  2299  300005  81                 	db	129
  2300                           
  2301                           ;Config register CONFIG4L @ 0x300006
  2302                           ;	Stack Full/Underflow Reset Enable bit
  2303                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2304                           ;	Single-Supply ICSP Enable bit
  2305                           ;	LVP = OFF, Single-Supply ICSP disabled
  2306                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2307                           ;	ICPRT = OFF, ICPORT disabled
  2308                           ;	Extended Instruction Set Enable bit
  2309                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2310                           ;	Background Debugger Enable bit
  2311                           ;	DEBUG = 0x1, unprogrammed default
  2312  300006                     	org	3145734
  2313  300006  81                 	db	129
  2314                           
  2315                           ; Padding undefined space
  2316  300007                     	org	3145735
  2317  300007  FF                 	db	255
  2318                           
  2319                           ;Config register CONFIG5L @ 0x300008
  2320                           ;	Code Protection bit
  2321                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2322                           ;	Code Protection bit
  2323                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2324                           ;	Code Protection bit
  2325                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2326                           ;	Code Protection bit
  2327                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2328  300008                     	org	3145736
  2329  300008  0F                 	db	15
  2330                           
  2331                           ;Config register CONFIG5H @ 0x300009
  2332                           ;	Boot Block Code Protection bit
  2333                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2334                           ;	Data EEPROM Code Protection bit
  2335                           ;	CPD = OFF, Data EEPROM is not code-protected
  2336  300009                     	org	3145737
  2337  300009  C0                 	db	192
  2338                           
  2339                           ;Config register CONFIG6L @ 0x30000A
  2340                           ;	Write Protection bit
  2341                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2342                           ;	Write Protection bit
  2343                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2344                           ;	Write Protection bit
  2345                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2346                           ;	Write Protection bit
  2347                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2348  30000A                     	org	3145738
  2349  30000A  0F                 	db	15
  2350                           
  2351                           ;Config register CONFIG6H @ 0x30000B
  2352                           ;	Configuration Register Write Protection bit
  2353                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2354                           ;	Boot Block Write Protection bit
  2355                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2356                           ;	Data EEPROM Write Protection bit
  2357                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2358  30000B                     	org	3145739
  2359  30000B  E0                 	db	224
  2360                           
  2361                           ;Config register CONFIG7L @ 0x30000C
  2362                           ;	Table Read Protection bit
  2363                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2364                           ;	Table Read Protection bit
  2365                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2366                           ;	Table Read Protection bit
  2367                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2368                           ;	Table Read Protection bit
  2369                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2370  30000C                     	org	3145740
  2371  30000C  0F                 	db	15
  2372                           
  2373                           ;Config register CONFIG7H @ 0x30000D
  2374                           ;	Boot Block Table Read Protection bit
  2375                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2376  30000D                     	org	3145741
  2377  30000D  40                 	db	64
  2378                           tosu	equ	0xFFF
  2379                           tosh	equ	0xFFE
  2380                           tosl	equ	0xFFD
  2381                           stkptr	equ	0xFFC
  2382                           pclatu	equ	0xFFB
  2383                           pclath	equ	0xFFA
  2384                           pcl	equ	0xFF9
  2385                           tblptru	equ	0xFF8
  2386                           tblptrh	equ	0xFF7
  2387                           tblptrl	equ	0xFF6
  2388                           tablat	equ	0xFF5
  2389                           prodh	equ	0xFF4
  2390                           prodl	equ	0xFF3
  2391                           indf0	equ	0xFEF
  2392                           postinc0	equ	0xFEE
  2393                           postdec0	equ	0xFED
  2394                           preinc0	equ	0xFEC
  2395                           plusw0	equ	0xFEB
  2396                           fsr0h	equ	0xFEA
  2397                           fsr0l	equ	0xFE9
  2398                           wreg	equ	0xFE8
  2399                           indf1	equ	0xFE7
  2400                           postinc1	equ	0xFE6
  2401                           postdec1	equ	0xFE5
  2402                           preinc1	equ	0xFE4
  2403                           plusw1	equ	0xFE3
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           bsr	equ	0xFE0
  2407                           indf2	equ	0xFDF
  2408                           postinc2	equ	0xFDE
  2409                           postdec2	equ	0xFDD
  2410                           preinc2	equ	0xFDC
  2411                           plusw2	equ	0xFDB
  2412                           fsr2h	equ	0xFDA
  2413                           fsr2l	equ	0xFD9
  2414                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    0
    Data        67
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      85
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> LED_ON(COMRAM[8]), LED_OFF(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[6]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _vis_LED->_POS_CURSOR
    _POS_CURSOR->_ENVIA_LCD_CMD
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ESCRIBE_MENSAJE

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3996
                                              2 BANK0      3     3      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _init_LCD
                            _vis_LED
 ---------------------------------------------------------------------------------
 (1) _vis_LED                                              0     0      0     760
                         _ENVIA_CHAR
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     577
                                             12 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1686
                                              0 BANK0      1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                             12 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     887
                                             12 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                             12 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     183
                                             10 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     676
                                             12 COMRAM     4     1      3
                                              0 BANK0      2     2      0
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                             10 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      70
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      23
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             8     8      0     135
                                              1 COMRAM     8     8      0
                    _NEW_LINE_EUSART
 ---------------------------------------------------------------------------------
 (6) _NEW_LINE_EUSART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _vis_LED
     _ENVIA_CHAR
     _POS_CURSOR

 _INT1_ISR (ROOT)
   _NEW_LINE_EUSART

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      55       1       90.4%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhllll     14      0       0      26        0.0%
BITBIGSFRhhllh      11      0       0      24        0.0%
BITBIGSFRhhlhl       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          7      0       0      28        0.0%
BITBIGSFRhl          6      0       0      27        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRhhlllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      30        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 09 17:28:12 2022

                     l24 0BD8                       l42 0CD6                       l51 0C40  
                     l60 0D42                       l37 0D4A                       l54 0D52  
                     l63 0C0C                       l48 0B62                       l57 0A94  
                     l74 0B9E                       l67 0994                       l69 09CE  
                     bsr 000FE0            ENVIA_CHAR@aux 004F                      l141 0D00  
                    l144 0ADE                      l153 0A34                      u400 0BD0  
                    u401 0BCC                      u410 0CBA                      u411 0CB6  
                    u420 0CD0                      u421 0CCC                      u430 0B98  
                    u431 0B94                      u440 0B62                      u520 0896  
                    u441 0B5E                      u521 0892                      u450 09E8  
                    u530 08DE                      u451 09E4                      u531 08DA  
                    u380 09CE                      u460 0A06                      u540 0926  
                    u381 09CA                      u461 0A02                      u541 0922  
                    u390 0BB2                      u470 0A24                      u607 0A54  
                    u391 0BAE                      u471 0A20                      u617 0A64  
                    u707 0D3A                      u627 0BE8                      u637 0C1C  
                    u557 0876                      u647 096A                      u567 08BE  
                    u657 0978                      u577 0906                      u667 0982  
                    u587 0AA6                      u677 0998                      u597 0A46  
                    u687 09A6                      u697 09B0              LEER_LCD@aux 004D  
                    wreg 000FE8             ?_CURSOR_HOME 0044           ??_ENVIA_NIBBLE 004D  
         ENVIA_CHAR@dato 004E                     l1421 0966                     l1501 0C34  
                   l1431 097E                     l1423 0968                     l1415 095E  
                   l1503 0C3A                     l1511 0BD0                     l1441 099E  
                   l1433 0980                     l1425 0970                     l1417 0962  
                   l1513 0D44                     l1521 0CD0                     l1601 0A9A  
                   l1505 0BA2                     l1443 09A2                     l1451 09BC  
                   l1435 0988                     l1427 0974                     l1419 0964  
                   l1523 0D4C                     l1515 0CAA                     l1531 0A4E  
                   l1611 0ABE                     l1603 0A9E                     l1507 0BB2  
                   l1453 0D2A                     l1445 09AC                     l1437 098A  
                   l1429 0976                     l1461 0BDC                     l1517 0CBA  
                   l1541 0A7C                     l1533 0A62                     l1525 0A36  
                   l1613 0ACE                     l1605 0AB0                     l1509 0BBE  
                   l1621 09F2                     l1701 08E6                     l1455 0D36  
                   l1447 09B6                     l1439 0996                     l1471 0BF0  
                   l1463 0BDE                     l1519 0CC0                     l1551 0B70  
                   l1543 0A82                     l1535 0A6A                     l1527 0A3A  
                   l1607 0AB4                     l1631 0A24                     l1623 09F8  
                   l1615 09D0                     l1703 08F6                     l1457 0D38  
                   l1481 0C06                     l1473 0BF2                     l1465 0BE2  
                   l1561 0B88                     l1545 0A88                     l1537 0A70  
                   l1529 0A40                     l1609 0AB8                     l1633 0A2E  
                   l1625 0A06                     l1617 09DA                     l1705 08FA  
                   l1713 0926                     l1459 0D40                     l1491 0C22  
                   l1483 0C10                     l1571 0B50                     l1475 0BF4  
                   l1467 0BE6                     l1563 0B98                     l1547 0A8E  
                   l1539 0A76                     l1627 0A10                     l1619 09E8  
                   l1707 0912                     l1651 0812                     l1493 0C24  
                   l1485 0C12                     l1565 0B24                     l1581 0CEA  
                   l1573 0CD8                     l1477 0BFA                     l1469 0BEE  
                   l1557 0B74                     l1549 0B64                     l1629 0A16  
                   l1709 0916                     l1661 083E                     l1653 0816  
                   l1495 0C26                     l1487 0C16                     l1567 0B30  
                   l1591 0CF4                     l1583 0CEC                     l1575 0CE4  
                   l1479 0C00                     l1559 0B86                     l1671 0866  
                   l1663 0852                     l1655 081A                     l1497 0C28  
                   l1489 0C1A                     l1569 0B4E                     l1593 0CFA  
                   l1585 0CEE                     l1577 0CE6                     l1673 086A  
                   l1657 0824                     l1499 0C2E                     l1595 0CFC  
                   l1587 0CF0                     l1579 0CE8                     l1691 08CA  
                   l1675 0882                     l1659 0834                     l1597 0CFE  
                   l1589 0CF2                     l1693 08CE                     l1685 089E  
                   l1677 0886                     l1669 0856                     l1599 0A96  
                   l1759 093C                     l1695 08E2                     l1687 08AE  
                   l1679 089A                     l1689 08B2                     STR_1 0801  
                   STR_2 080B                     _LATD 000F8C                     _LATE 000F8D  
                   _main 0812                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0056  
                   prodl 000FF3                     start 0146            ?_CURSOR_ONOFF 0044  
           ___param_bank 000000          ??_ENVIA_LCD_CMD 004E         __end_of_LEER_LCD 09D0  
       __end_of_INT0_ISR 0C76         __end_of_INT1_ISR 0146           _GENERACARACTER 0B64  
                  ?_main 0044                    i1l210 00B8                    i1l204 0080  
                  i1l215 012E                    i1l162 0D26                    i1l156 0D06  
                  i1l159 0D18                    i1l197 0048                    i2l188 0C72  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD              ?_POS_CURSOR 0050  
                  main@x 0064                    tablat 000FF5          __end_of_vis_LED 0A36  
                  ttemp5 0057                    ttemp6 005A                    ttemp7 005E  
                  status 000FD8                    wtemp8 0057           ??_CURSOR_ONOFF 0050  
        __initialization 0C76             __end_of_main 095E   __end_of_GENERACARACTER 0BA0  
        _ESCRIBE_MENSAJE 0B24                   ??_main 0062            __activetblptr 000002  
                 _ADCON1 000FC1                   i1l1111 0D02                   i1l1113 0D14  
                 i1l1211 0034                   i1l1221 0058                   i1l1231 008E  
                 i1l1223 006C                   i1l1241 00A8                   i1l1233 0090  
                 i1l1217 0038                   i1l1209 002E                   i1l1243 00C6  
                 i1l1235 00A4                   i1l1251 010E                   i1l1219 0056  
                 i1l1253 0112                   i1l1245 00C8                   i1l1229 0070  
                 i1l1255 0124                   i1l1257 012C                   i1l1249 00DC  
                 _LED_ON 0034                   i2l1201 0C46                   i1l1761 00F0  
                 i2l1203 0C58                   i2l1205 0C60                   i2l1207 0C62  
                 i2l1199 0C44                   _OSCCON 000FD3     __end_of_ENVIA_NIBBLE 0D44  
                 _efecto 002C         __end_of_init_LCD 0AE0          ?_GENERACARACTER 0050  
                 _estado 0055                   isa$std 000001             __pdataCOMRAM 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_vis_LED 0052             ??_BORRAR_LCD 0050  
              ?_LEER_LCD 0044               __accesstop 0060  __end_of__initialization 0C9A  
              ?_INT0_ISR 0044                ?_INT1_ISR 0044             ??_LCD_CONFIG 0050  
          ___rparam_used 000001             ??_ENVIA_CHAR 004E  __end_of_ESCRIBE_MENSAJE 0B64  
         __pcstackCOMRAM 0044                INT1_ISR@y 004C       __end_of_BORRAR_LCD 0D54  
       ENVIA_LCD_CMD@aux 004F     __end_of_CURSOR_ONOFF 0CD8       __end_of_LCD_CONFIG 0A96  
     __end_of_ENVIA_CHAR 0C42               ??_LEER_LCD 004D         ENVIA_NIBBLE@dato 004D  
             ??_INT0_ISR 0044               ??_INT1_ISR 0045        ??_NEW_LINE_EUSART 0045  
                _LED_OFF 003C                  i1u11_20 0D14                  i1u11_21 0D10  
                i1u12_20 0D26                  i1u12_21 0D22                  i1u21_20 0056  
                i1u21_21 0052                  i1u22_20 0068                  i1u22_21 0064  
                i1u23_20 008E                  i1u23_21 008A                  i1u24_20 00A0  
                i1u24_21 009C                  i1u25_20 00C6                  i1u25_21 00C2  
                i1u26_20 00D8                  i1u26_21 00D4                  i1u27_20 0124  
                i1u27_21 0120                  i2u20_40 0C58                  i2u20_41 0C54  
                i2u71_47 0C68             ??_POS_CURSOR 0051                ?_init_LCD 0044  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0050  
      __end_of_configuro 0D02             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0C0E  
                __pcinit 0C76       __end_of_POS_CURSOR 0BDA                  __ramtop 0800  
                __ptext0 0812                  __ptext1 09D0                  __ptext2 0BA0  
                __ptext3 0A96                  __ptext4 0A36                  __ptext5 0B64  
                __ptext6 0CA8                  __ptext7 0D44                  __ptext8 0D4C  
                __ptext9 0BDA          GENERACARACTER@i 0053                  _estado2 0054  
                _vis_LED 09D0           __pintcode_body 0C42             _ENVIA_NIBBLE 0D28  
   end_of_initialization 0C9A               ??_init_LCD 0060            __Lmediumconst 0000  
                int_func 0C42         ??_GENERACARACTER 0053                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE     GENERACARACTER@vector 0050  
              _PORTEbits 000F84                _TRISCbits 000F94                _TXSTAbits 000FAC  
           _CURSOR_ONOFF 0CA8       CURSOR_ONOFF@estado 0050            __pidataCOMRAM 0AE0  
          ??_CURSOR_HOME 0050      start_initialization 0C76        ENVIA_LCD_CMD@dato 004E  
        _NEW_LINE_EUSART 0D02              __pbssCOMRAM 0054            __pcstackBANK0 0060  
    __end_of_CURSOR_HOME 0D4C                __pintcode 0008              __pintcodelo 0018  
      GENERACARACTER@pos 0052                _configuro 0CD8              __smallconst 0800  
               ?_vis_LED 0044  __end_of_NEW_LINE_EUSART 0D28                 _LEER_LCD 095E  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0         ESCRIBE_MENSAJE@i 0053           POS_CURSOR@fila 0051  
             ?_configuro 0044              _CURSOR_HOME 0D44              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 0C8A                 __Hrparam 0000  
               __Lrparam 0000                 __ptext10 0CD8                 __ptext11 0B24  
               __ptext12 0C0E                 __ptext13 095E                 __ptext14 0D28  
               __ptext16 0D02               _BORRAR_LCD 0D4C                 _init_LCD 0A96  
       ?_NEW_LINE_EUSART 0044                 _mensaje1 0021                 _mensaje2 0011  
               _mensaje3 0001               _LCD_CONFIG 0A36               _ENVIA_CHAR 0C0E  
               isa$xinst 000000                 int$flags 0056            _ENVIA_LCD_CMD 0BDA  
            ??_configuro 004D               _INTCONbits 000FF2        ??_ESCRIBE_MENSAJE 0060  
               intlevel1 0000                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0050  
         ?_ENVIA_LCD_CMD 0044              ?_BORRAR_LCD 0044            ?_ENVIA_NIBBLE 0044  
             _POS_CURSOR 0BA0              ?_LCD_CONFIG 0044       ESCRIBE_MENSAJE@tam 0052  
            ?_ENVIA_CHAR 0044        POS_CURSOR@columna 0050  
