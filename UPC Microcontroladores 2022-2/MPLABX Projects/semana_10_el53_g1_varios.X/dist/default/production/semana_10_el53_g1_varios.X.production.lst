

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 21 12:21:50 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  000DA2                     __pidataCOMRAM:
    74                           	callstack 0
    75                           
    76                           ;initializer for _segundos
    77  000DA2  27                 	db	39
    78                           
    79                           ;initializer for _minutos
    80  000DA3  3B                 	db	59
    81                           
    82                           ;initializer for _horas
    83  000DA4  0B                 	db	11
    84  0000                     _CCPR1L	set	4030
    85  0000                     _CCPR1H	set	4031
    86  0000                     _ADCON0bits	set	4034
    87  0000                     _LATD	set	3980
    88  0000                     _PORTD	set	3971
    89  0000                     _LATDbits	set	3980
    90  0000                     _TRISD	set	3989
    91  0000                     _PIE1bits	set	3997
    92  0000                     _CCP1CON	set	4029
    93  0000                     _ADCON2	set	4032
    94  0000                     _ADRESH	set	4036
    95  0000                     _T1CON	set	4045
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADCON1	set	4033
    98  0000                     _OSCCON	set	4051
    99  0000                     _INTCONbits	set	4082
   100  0000                     _PIR1bits	set	3998
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_1:
   107  000801  54                 	db	84	;'T'
   108  000802  65                 	db	101	;'e'
   109  000803  72                 	db	114	;'r'
   110  000804  6D                 	db	109	;'m'
   111  000805  6F                 	db	111	;'o'
   112  000806  74                 	db	116	;'t'
   113  000807  65                 	db	101	;'e'
   114  000808  73                 	db	115	;'s'
   115  000809  74                 	db	116	;'t'
   116  00080A  65                 	db	101	;'e'
   117  00080B  72                 	db	114	;'r'
   118  00080C  20                 	db	32
   119  00080D  55                 	db	85	;'U'
   120  00080E  50                 	db	80	;'P'
   121  00080F  43                 	db	67	;'C'
   122  000810  00                 	db	0
   123  000811                     STR_2:
   124  000811  43                 	db	67	;'C'
   125  000812  20                 	db	32
   126  000813  00                 	db	0
   127  000814  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132  000C06                     __pcinit:
   133                           	callstack 0
   134  000C06                     start_initialization:
   135                           	callstack 0
   136  000C06                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (3 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141  000C06  0EA2               	movlw	low __pidataCOMRAM
   142  000C08  6EF6               	movwf	tblptrl,c
   143  000C0A  0E0D               	movlw	high __pidataCOMRAM
   144  000C0C  6EF7               	movwf	tblptrh,c
   145  000C0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146  000C10  6EF8               	movwf	tblptru,c
   147  000C12  0009               	tblrd		*+	;fetch initializer
   148  000C14  CFF5 F017          	movff	tablat,__pdataCOMRAM
   149  000C18  0009               	tblrd		*+	;fetch initializer
   150  000C1A  CFF5 F018          	movff	tablat,__pdataCOMRAM+1
   151  000C1E  0009               	tblrd		*+	;fetch initializer
   152  000C20  CFF5 F019          	movff	tablat,__pdataCOMRAM+2
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155  000C24  EE00  F010         	lfsr	0,__pbssCOMRAM
   156  000C28  0E07               	movlw	7
   157  000C2A                     clear_0:
   158  000C2A  6AEE               	clrf	postinc0,c
   159  000C2C  06E8               	decf	wreg,f,c
   160  000C2E  E1FD               	bnz	clear_0
   161  000C30                     end_of_initialization:
   162                           	callstack 0
   163  000C30                     __end_of__initialization:
   164                           	callstack 0
   165  000C30  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   166  000C32  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   167  000C34  0E00               	movlw	low (__Lsmallconst shr (0+16))
   168  000C36  6EF8               	movwf	tblptru,c
   169  000C38  0E08               	movlw	high __Lsmallconst
   170  000C3A  6EF7               	movwf	tblptrh,c
   171  000C3C  0100               	movlb	0
   172  000C3E  EFC5  F004         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175  000010                     __pbssCOMRAM:
   176                           	callstack 0
   177  000010                     _ticks:
   178                           	callstack 0
   179  000010                     	ds	1
   180  000011                     _unidad:
   181                           	callstack 0
   182  000011                     	ds	1
   183  000012                     _decena:
   184                           	callstack 0
   185  000012                     	ds	1
   186  000013                     _centena:
   187                           	callstack 0
   188  000013                     	ds	1
   189  000014                     _adc_res:
   190                           	callstack 0
   191  000014                     	ds	1
   192  000015                     _y:
   193                           	callstack 0
   194  000015                     	ds	1
   195  000016                     _x:
   196                           	callstack 0
   197  000016                     	ds	1
   198                           
   199                           	psect	dataCOMRAM
   200  000017                     __pdataCOMRAM:
   201                           	callstack 0
   202  000017                     _segundos:
   203                           	callstack 0
   204  000017                     	ds	1
   205  000018                     _minutos:
   206                           	callstack 0
   207  000018                     	ds	1
   208  000019                     _horas:
   209                           	callstack 0
   210  000019                     	ds	1
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	callstack 0
   215  000001                     ?___awmod:
   216                           	callstack 0
   217  000001                     ENVIA_NIBBLE@dato:
   218                           	callstack 0
   219  000001                     LEER_LCD@aux:
   220                           	callstack 0
   221  000001                     ___awmod@dividend:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x0
   225  000001                     	ds	1
   226  000002                     ENVIA_CHAR@dato:
   227                           	callstack 0
   228  000002                     ENVIA_LCD_CMD@dato:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x1
   232  000002                     	ds	1
   233  000003                     ENVIA_CHAR@aux:
   234                           	callstack 0
   235  000003                     ENVIA_LCD_CMD@aux:
   236                           	callstack 0
   237  000003                     ___awmod@divisor:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x2
   241  000003                     	ds	1
   242  000004                     ??_LCD_CONFIG:
   243  000004                     POS_CURSOR@columna:
   244                           	callstack 0
   245  000004                     CURSOR_ONOFF@estado:
   246                           	callstack 0
   247  000004                     ESCRIBE_MENSAJE@cadena:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x3
   251  000004                     	ds	1
   252  000005                     ??_arranca_LCD:
   253  000005                     POS_CURSOR@fila:
   254                           	callstack 0
   255  000005                     ___awmod@counter:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x4
   259  000005                     	ds	1
   260  000006                     ESCRIBE_MENSAJE@tam:
   261                           	callstack 0
   262  000006                     ___awmod@sign:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x5
   266  000006                     	ds	1
   267  000007                     ??_ESCRIBE_MENSAJE:
   268  000007                     ?___awdiv:
   269                           	callstack 0
   270  000007                     ___awdiv@dividend:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274  000007                     	ds	2
   275  000009                     ESCRIBE_MENSAJE@i:
   276                           	callstack 0
   277  000009                     ___awdiv@divisor:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x8
   281  000009                     	ds	2
   282  00000B                     ___awdiv@counter:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0xA
   286  00000B                     	ds	1
   287  00000C                     ___awdiv@sign:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0xB
   291  00000C                     	ds	1
   292  00000D                     ___awdiv@quotient:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xC
   296  00000D                     	ds	2
   297  00000F                     convierte_digitos@numero:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0xE
   301  00000F                     	ds	1
   302  000010                     
   303                           ; 1 bytes @ 0xF
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 51 in file "maincode4.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   323 ;;      Params:         0       0       0       0       0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels required when called: 5
   329 ;; This function calls:
   330 ;;		_ENVIA_CHAR
   331 ;;		_ESCRIBE_MENSAJE
   332 ;;		_POS_CURSOR
   333 ;;		_arranca_LCD
   334 ;;		_configuro
   335 ;;		_convierte_digitos
   336 ;;		_manda_dos
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text0
   343  00098A                     __ptext0:
   344                           	callstack 0
   345  00098A                     _main:
   346                           	callstack 26
   347  00098A                     
   348                           ;maincode4.c: 52:     configuro();
   349  00098A  EC8A  F006         	call	_configuro	;wreg free
   350  00098E                     
   351                           ;maincode4.c: 53:     arranca_LCD();
   352  00098E  EC9E  F006         	call	_arranca_LCD	;wreg free
   353  000992                     
   354                           ;maincode4.c: 54:     POS_CURSOR(1,0);
   355  000992  0E00               	movlw	0
   356  000994  6E04               	movwf	POS_CURSOR@columna^0,c
   357  000996  0E01               	movlw	1
   358  000998  EC21  F006         	call	_POS_CURSOR
   359  00099C                     
   360                           ;maincode4.c: 55:     ESCRIBE_MENSAJE("Termotester UPC", 15);
   361  00099C  0E01               	movlw	low STR_1
   362  00099E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   363  0009A0  0E08               	movlw	high STR_1
   364  0009A2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   365  0009A4  0E0F               	movlw	15
   366  0009A6  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   367  0009A8  ECE4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   368  0009AC                     l1298:
   369                           
   370                           ;maincode4.c: 57:         ADCON0bits.GO_DONE = 1;
   371  0009AC  82C2               	bsf	194,1,c	;volatile
   372  0009AE                     l156:
   373  0009AE  B2C2               	btfsc	194,1,c	;volatile
   374  0009B0  EFDC  F004         	goto	u441
   375  0009B4  EFDE  F004         	goto	u440
   376  0009B8                     u441:
   377  0009B8  EFD7  F004         	goto	l156
   378  0009BC                     u440:
   379  0009BC                     
   380                           ;maincode4.c: 59:         adc_res = (ADRESH >> 1) & 0x7F;
   381  0009BC  90D8               	bcf	status,0,c
   382  0009BE  30C4               	rrcf	196,w,c	;volatile
   383  0009C0  0B7F               	andlw	127
   384  0009C2  6E14               	movwf	_adc_res^0,c
   385  0009C4                     
   386                           ;maincode4.c: 60:         convierte_digitos(adc_res);
   387  0009C4  5014               	movf	_adc_res^0,w,c
   388  0009C6  ECB7  F005         	call	_convierte_digitos
   389  0009CA                     
   390                           ;maincode4.c: 61:         POS_CURSOR(2,0);
   391  0009CA  0E00               	movlw	0
   392  0009CC  6E04               	movwf	POS_CURSOR@columna^0,c
   393  0009CE  0E02               	movlw	2
   394  0009D0  EC21  F006         	call	_POS_CURSOR
   395  0009D4                     
   396                           ;maincode4.c: 62:         ENVIA_CHAR(centena + 0x30);
   397  0009D4  5013               	movf	_centena^0,w,c
   398  0009D6  0F30               	addlw	48
   399  0009D8  EC58  F006         	call	_ENVIA_CHAR
   400  0009DC                     
   401                           ;maincode4.c: 63:         manda_dos();
   402  0009DC  ECC0  F006         	call	_manda_dos	;wreg free
   403  0009E0                     
   404                           ;maincode4.c: 64:         ENVIA_CHAR(0xDF);
   405  0009E0  0EDF               	movlw	223
   406  0009E2  EC58  F006         	call	_ENVIA_CHAR
   407  0009E6                     
   408                           ;maincode4.c: 65:         ESCRIBE_MENSAJE("C ",2);
   409  0009E6  0E11               	movlw	low STR_2
   410  0009E8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   411  0009EA  0E08               	movlw	high STR_2
   412  0009EC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   413  0009EE  0E02               	movlw	2
   414  0009F0  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   415  0009F2  ECE4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   416  0009F6                     
   417                           ;maincode4.c: 66:         convierte_digitos(horas);
   418  0009F6  5019               	movf	_horas^0,w,c
   419  0009F8  ECB7  F005         	call	_convierte_digitos
   420  0009FC                     
   421                           ;maincode4.c: 67:         manda_dos();
   422  0009FC  ECC0  F006         	call	_manda_dos	;wreg free
   423  000A00                     
   424                           ;maincode4.c: 68:         ENVIA_CHAR(':');
   425  000A00  0E3A               	movlw	58
   426  000A02  EC58  F006         	call	_ENVIA_CHAR
   427  000A06                     
   428                           ;maincode4.c: 69:         convierte_digitos(minutos);
   429  000A06  5018               	movf	_minutos^0,w,c
   430  000A08  ECB7  F005         	call	_convierte_digitos
   431  000A0C                     
   432                           ;maincode4.c: 70:         manda_dos();
   433  000A0C  ECC0  F006         	call	_manda_dos	;wreg free
   434  000A10                     
   435                           ;maincode4.c: 71:         ENVIA_CHAR(':');
   436  000A10  0E3A               	movlw	58
   437  000A12  EC58  F006         	call	_ENVIA_CHAR
   438  000A16                     
   439                           ;maincode4.c: 72:         convierte_digitos(segundos);
   440  000A16  5017               	movf	_segundos^0,w,c
   441  000A18  ECB7  F005         	call	_convierte_digitos
   442  000A1C  EFD6  F004         	goto	l1298
   443  000A20  EF07  F000         	goto	start
   444  000A24                     __end_of_main:
   445                           	callstack 0
   446                           
   447 ;; *************** function _manda_dos *****************
   448 ;; Defined at:
   449 ;;		line 46 in file "maincode4.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0, cstack
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   463 ;;      Params:         0       0       0       0       0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 3
   470 ;; This function calls:
   471 ;;		_ENVIA_CHAR
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text1
   478  000D80                     __ptext1:
   479                           	callstack 0
   480  000D80                     _manda_dos:
   481                           	callstack 27
   482  000D80                     
   483                           ;maincode4.c: 47:     ENVIA_CHAR(decena + 0x30);
   484  000D80  5012               	movf	_decena^0,w,c
   485  000D82  0F30               	addlw	48
   486  000D84  EC58  F006         	call	_ENVIA_CHAR
   487                           
   488                           ;maincode4.c: 48:     ENVIA_CHAR(unidad + 0x30);
   489  000D88  5011               	movf	_unidad^0,w,c
   490  000D8A  0F30               	addlw	48
   491  000D8C  EC58  F006         	call	_ENVIA_CHAR
   492  000D90  0012               	return		;funcret
   493  000D92                     __end_of_manda_dos:
   494                           	callstack 0
   495                           
   496 ;; *************** function _convierte_digitos *****************
   497 ;; Defined at:
   498 ;;		line 40 in file "maincode4.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;  numero          1    wreg     unsigned char 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  numero          1   14[COMRAM] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         1       0       0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0       0       0
   515 ;;      Totals:         1       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 2
   519 ;; This function calls:
   520 ;;		___awdiv
   521 ;;		___awmod
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text2
   528  000B6E                     __ptext2:
   529                           	callstack 0
   530  000B6E                     _convierte_digitos:
   531                           	callstack 28
   532                           
   533                           ;incstack = 0
   534                           ;convierte_digitos@numero stored from wreg
   535  000B6E  6E0F               	movwf	convierte_digitos@numero^0,c
   536  000B70                     
   537                           ;maincode4.c: 41:     centena = numero / 100;
   538  000B70  C00F  F007         	movff	convierte_digitos@numero,___awdiv@dividend
   539  000B74  6A08               	clrf	(___awdiv@dividend+1)^0,c
   540  000B76  0E00               	movlw	0
   541  000B78  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   542  000B7A  0E64               	movlw	100
   543  000B7C  6E09               	movwf	___awdiv@divisor^0,c
   544  000B7E  EC0B  F004         	call	___awdiv	;wreg free
   545  000B82  5007               	movf	?___awdiv^0,w,c
   546  000B84  6E13               	movwf	_centena^0,c
   547                           
   548                           ;maincode4.c: 42:     decena = (numero % 100) / 10;
   549  000B86  0E00               	movlw	0
   550  000B88  6E04               	movwf	(___awmod@divisor+1)^0,c
   551  000B8A  0E64               	movlw	100
   552  000B8C  6E03               	movwf	___awmod@divisor^0,c
   553  000B8E  C00F  F001         	movff	convierte_digitos@numero,___awmod@dividend
   554  000B92  6A02               	clrf	(___awmod@dividend+1)^0,c
   555  000B94  EC6D  F004         	call	___awmod	;wreg free
   556  000B98  C001  F007         	movff	?___awmod,___awdiv@dividend
   557  000B9C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   558  000BA0  0E00               	movlw	0
   559  000BA2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   560  000BA4  0E0A               	movlw	10
   561  000BA6  6E09               	movwf	___awdiv@divisor^0,c
   562  000BA8  EC0B  F004         	call	___awdiv	;wreg free
   563  000BAC  5007               	movf	?___awdiv^0,w,c
   564  000BAE  6E12               	movwf	_decena^0,c
   565                           
   566                           ;maincode4.c: 43:     unidad = numero % 10;
   567  000BB0  C00F  F001         	movff	convierte_digitos@numero,___awmod@dividend
   568  000BB4  6A02               	clrf	(___awmod@dividend+1)^0,c
   569  000BB6  0E00               	movlw	0
   570  000BB8  6E04               	movwf	(___awmod@divisor+1)^0,c
   571  000BBA  0E0A               	movlw	10
   572  000BBC  6E03               	movwf	___awmod@divisor^0,c
   573  000BBE  EC6D  F004         	call	___awmod	;wreg free
   574  000BC2  5001               	movf	?___awmod^0,w,c
   575  000BC4  6E11               	movwf	_unidad^0,c
   576  000BC6  0012               	return		;funcret
   577  000BC8                     __end_of_convierte_digitos:
   578                           	callstack 0
   579                           
   580 ;; *************** function ___awmod *****************
   581 ;; Defined at:
   582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;  dividend        2    0[COMRAM] int 
   585 ;;  divisor         2    2[COMRAM] int 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  sign            1    5[COMRAM] unsigned char 
   588 ;;  counter         1    4[COMRAM] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  2    0[COMRAM] int 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   598 ;;      Params:         4       0       0       0       0       0       0       0       0
   599 ;;      Locals:         2       0       0       0       0       0       0       0       0
   600 ;;      Temps:          0       0       0       0       0       0       0       0       0
   601 ;;      Totals:         6       0       0       0       0       0       0       0       0
   602 ;;Total ram usage:        6 bytes
   603 ;; Hardware stack levels used: 1
   604 ;; Hardware stack levels required when called: 1
   605 ;; This function calls:
   606 ;;		Nothing
   607 ;; This function is called by:
   608 ;;		_convierte_digitos
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613  0008DA                     __ptext3:
   614                           	callstack 0
   615  0008DA                     ___awmod:
   616                           	callstack 28
   617  0008DA  0E00               	movlw	0
   618  0008DC  6E06               	movwf	___awmod@sign^0,c
   619  0008DE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   620  0008E0  EF76  F004         	goto	u350
   621  0008E4  EF74  F004         	goto	u351
   622  0008E8                     u351:
   623  0008E8  EF7C  F004         	goto	l1244
   624  0008EC                     u350:
   625  0008EC  6C01               	negf	___awmod@dividend^0,c
   626  0008EE  1E02               	comf	(___awmod@dividend+1)^0,f,c
   627  0008F0  B0D8               	btfsc	status,0,c
   628  0008F2  2A02               	incf	(___awmod@dividend+1)^0,f,c
   629  0008F4  0E01               	movlw	1
   630  0008F6  6E06               	movwf	___awmod@sign^0,c
   631  0008F8                     l1244:
   632  0008F8  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   633  0008FA  EF83  F004         	goto	u360
   634  0008FE  EF81  F004         	goto	u361
   635  000902                     u361:
   636  000902  EF87  F004         	goto	l1248
   637  000906                     u360:
   638  000906  6C03               	negf	___awmod@divisor^0,c
   639  000908  1E04               	comf	(___awmod@divisor+1)^0,f,c
   640  00090A  B0D8               	btfsc	status,0,c
   641  00090C  2A04               	incf	(___awmod@divisor+1)^0,f,c
   642  00090E                     l1248:
   643  00090E  5003               	movf	___awmod@divisor^0,w,c
   644  000910  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   645  000912  B4D8               	btfsc	status,2,c
   646  000914  EF8E  F004         	goto	u371
   647  000918  EF90  F004         	goto	u370
   648  00091C                     u371:
   649  00091C  EFB4  F004         	goto	l1264
   650  000920                     u370:
   651  000920  0E01               	movlw	1
   652  000922  6E05               	movwf	___awmod@counter^0,c
   653  000924  EF98  F004         	goto	l1254
   654  000928                     l1252:
   655  000928  90D8               	bcf	status,0,c
   656  00092A  3603               	rlcf	___awmod@divisor^0,f,c
   657  00092C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   658  00092E  2A05               	incf	___awmod@counter^0,f,c
   659  000930                     l1254:
   660  000930  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   661  000932  EF9D  F004         	goto	u381
   662  000936  EF9F  F004         	goto	u380
   663  00093A                     u381:
   664  00093A  EF94  F004         	goto	l1252
   665  00093E                     u380:
   666  00093E                     l1256:
   667  00093E  5003               	movf	___awmod@divisor^0,w,c
   668  000940  5C01               	subwf	___awmod@dividend^0,w,c
   669  000942  5004               	movf	(___awmod@divisor+1)^0,w,c
   670  000944  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   671  000946  A0D8               	btfss	status,0,c
   672  000948  EFA8  F004         	goto	u391
   673  00094C  EFAA  F004         	goto	u390
   674  000950                     u391:
   675  000950  EFAE  F004         	goto	l1260
   676  000954                     u390:
   677  000954  5003               	movf	___awmod@divisor^0,w,c
   678  000956  5E01               	subwf	___awmod@dividend^0,f,c
   679  000958  5004               	movf	(___awmod@divisor+1)^0,w,c
   680  00095A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   681  00095C                     l1260:
   682  00095C  90D8               	bcf	status,0,c
   683  00095E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   684  000960  3203               	rrcf	___awmod@divisor^0,f,c
   685  000962  2E05               	decfsz	___awmod@counter^0,f,c
   686  000964  EF9F  F004         	goto	l1256
   687  000968                     l1264:
   688  000968  5006               	movf	___awmod@sign^0,w,c
   689  00096A  B4D8               	btfsc	status,2,c
   690  00096C  EFBA  F004         	goto	u401
   691  000970  EFBC  F004         	goto	u400
   692  000974                     u401:
   693  000974  EFC0  F004         	goto	l1268
   694  000978                     u400:
   695  000978  6C01               	negf	___awmod@dividend^0,c
   696  00097A  1E02               	comf	(___awmod@dividend+1)^0,f,c
   697  00097C  B0D8               	btfsc	status,0,c
   698  00097E  2A02               	incf	(___awmod@dividend+1)^0,f,c
   699  000980                     l1268:
   700  000980  C001  F001         	movff	___awmod@dividend,?___awmod
   701  000984  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   702  000988  0012               	return		;funcret
   703  00098A                     __end_of___awmod:
   704                           	callstack 0
   705                           
   706 ;; *************** function ___awdiv *****************
   707 ;; Defined at:
   708 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;  dividend        2    6[COMRAM] int 
   711 ;;  divisor         2    8[COMRAM] int 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  quotient        2   12[COMRAM] int 
   714 ;;  sign            1   11[COMRAM] unsigned char 
   715 ;;  counter         1   10[COMRAM] unsigned char 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2    6[COMRAM] int 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         4       0       0       0       0       0       0       0       0
   726 ;;      Locals:         4       0       0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0
   728 ;;      Totals:         8       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        8 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; Hardware stack levels required when called: 1
   732 ;; This function calls:
   733 ;;		Nothing
   734 ;; This function is called by:
   735 ;;		_convierte_digitos
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text4
   740  000816                     __ptext4:
   741                           	callstack 0
   742  000816                     ___awdiv:
   743                           	callstack 28
   744  000816  0E00               	movlw	0
   745  000818  6E0C               	movwf	___awdiv@sign^0,c
   746  00081A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   747  00081C  EF14  F004         	goto	u290
   748  000820  EF12  F004         	goto	u291
   749  000824                     u291:
   750  000824  EF1A  F004         	goto	l1200
   751  000828                     u290:
   752  000828  6C09               	negf	___awdiv@divisor^0,c
   753  00082A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   754  00082C  B0D8               	btfsc	status,0,c
   755  00082E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   756  000830  0E01               	movlw	1
   757  000832  6E0C               	movwf	___awdiv@sign^0,c
   758  000834                     l1200:
   759  000834  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   760  000836  EF21  F004         	goto	u300
   761  00083A  EF1F  F004         	goto	u301
   762  00083E                     u301:
   763  00083E  EF27  F004         	goto	l1206
   764  000842                     u300:
   765  000842  6C07               	negf	___awdiv@dividend^0,c
   766  000844  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   767  000846  B0D8               	btfsc	status,0,c
   768  000848  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   769  00084A  0E01               	movlw	1
   770  00084C  1A0C               	xorwf	___awdiv@sign^0,f,c
   771  00084E                     l1206:
   772  00084E  0E00               	movlw	0
   773  000850  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   774  000852  0E00               	movlw	0
   775  000854  6E0D               	movwf	___awdiv@quotient^0,c
   776  000856  5009               	movf	___awdiv@divisor^0,w,c
   777  000858  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   778  00085A  B4D8               	btfsc	status,2,c
   779  00085C  EF32  F004         	goto	u311
   780  000860  EF34  F004         	goto	u310
   781  000864                     u311:
   782  000864  EF5C  F004         	goto	l1228
   783  000868                     u310:
   784  000868  0E01               	movlw	1
   785  00086A  6E0B               	movwf	___awdiv@counter^0,c
   786  00086C  EF3C  F004         	goto	l1214
   787  000870                     l1212:
   788  000870  90D8               	bcf	status,0,c
   789  000872  3609               	rlcf	___awdiv@divisor^0,f,c
   790  000874  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   791  000876  2A0B               	incf	___awdiv@counter^0,f,c
   792  000878                     l1214:
   793  000878  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   794  00087A  EF41  F004         	goto	u321
   795  00087E  EF43  F004         	goto	u320
   796  000882                     u321:
   797  000882  EF38  F004         	goto	l1212
   798  000886                     u320:
   799  000886                     l1216:
   800  000886  90D8               	bcf	status,0,c
   801  000888  360D               	rlcf	___awdiv@quotient^0,f,c
   802  00088A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   803  00088C  5009               	movf	___awdiv@divisor^0,w,c
   804  00088E  5C07               	subwf	___awdiv@dividend^0,w,c
   805  000890  500A               	movf	(___awdiv@divisor+1)^0,w,c
   806  000892  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   807  000894  A0D8               	btfss	status,0,c
   808  000896  EF4F  F004         	goto	u331
   809  00089A  EF51  F004         	goto	u330
   810  00089E                     u331:
   811  00089E  EF56  F004         	goto	l1224
   812  0008A2                     u330:
   813  0008A2  5009               	movf	___awdiv@divisor^0,w,c
   814  0008A4  5E07               	subwf	___awdiv@dividend^0,f,c
   815  0008A6  500A               	movf	(___awdiv@divisor+1)^0,w,c
   816  0008A8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   817  0008AA  800D               	bsf	___awdiv@quotient^0,0,c
   818  0008AC                     l1224:
   819  0008AC  90D8               	bcf	status,0,c
   820  0008AE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   821  0008B0  3209               	rrcf	___awdiv@divisor^0,f,c
   822  0008B2  2E0B               	decfsz	___awdiv@counter^0,f,c
   823  0008B4  EF43  F004         	goto	l1216
   824  0008B8                     l1228:
   825  0008B8  500C               	movf	___awdiv@sign^0,w,c
   826  0008BA  B4D8               	btfsc	status,2,c
   827  0008BC  EF62  F004         	goto	u341
   828  0008C0  EF64  F004         	goto	u340
   829  0008C4                     u341:
   830  0008C4  EF68  F004         	goto	l1232
   831  0008C8                     u340:
   832  0008C8  6C0D               	negf	___awdiv@quotient^0,c
   833  0008CA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   834  0008CC  B0D8               	btfsc	status,0,c
   835  0008CE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   836  0008D0                     l1232:
   837  0008D0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   838  0008D4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   839  0008D8  0012               	return		;funcret
   840  0008DA                     __end_of___awdiv:
   841                           	callstack 0
   842                           
   843 ;; *************** function _configuro *****************
   844 ;; Defined at:
   845 ;;		line 17 in file "maincode4.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   859 ;;      Params:         0       0       0       0       0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0
   862 ;;      Totals:         0       0       0       0       0       0       0       0       0
   863 ;;Total ram usage:        0 bytes
   864 ;; Hardware stack levels used: 1
   865 ;; Hardware stack levels required when called: 1
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text5
   874  000D14                     __ptext5:
   875                           	callstack 0
   876  000D14                     _configuro:
   877                           	callstack 29
   878  000D14                     
   879                           ;maincode4.c: 18:     ADCON2 = 0x24;
   880  000D14  0E24               	movlw	36
   881  000D16  6EC0               	movwf	192,c	;volatile
   882                           
   883                           ;maincode4.c: 19:     ADCON1 = 0x1B;
   884  000D18  0E1B               	movlw	27
   885  000D1A  6EC1               	movwf	193,c	;volatile
   886                           
   887                           ;maincode4.c: 20:     ADCON0 = 0x01;
   888  000D1C  0E01               	movlw	1
   889  000D1E  6EC2               	movwf	194,c	;volatile
   890                           
   891                           ;maincode4.c: 21:     T1CON = 0x11;
   892  000D20  0E11               	movlw	17
   893  000D22  6ECD               	movwf	205,c	;volatile
   894                           
   895                           ;maincode4.c: 22:     CCP1CON = 0x0B;
   896  000D24  0E0B               	movlw	11
   897  000D26  6EBD               	movwf	189,c	;volatile
   898                           
   899                           ;maincode4.c: 23:     CCPR1H = 0xF4;
   900  000D28  0EF4               	movlw	244
   901  000D2A  6EBF               	movwf	191,c	;volatile
   902                           
   903                           ;maincode4.c: 24:     CCPR1L = 0x24;
   904  000D2C  0E24               	movlw	36
   905  000D2E  6EBE               	movwf	190,c	;volatile
   906  000D30                     
   907                           ;maincode4.c: 25:     INTCONbits.GIE = 1;
   908  000D30  8EF2               	bsf	242,7,c	;volatile
   909  000D32                     
   910                           ;maincode4.c: 26:     INTCONbits.PEIE = 1;
   911  000D32  8CF2               	bsf	242,6,c	;volatile
   912  000D34                     
   913                           ;maincode4.c: 27:     PIE1bits.CCP1IE = 1;
   914  000D34  849D               	bsf	157,2,c	;volatile
   915                           
   916                           ;maincode4.c: 28:     OSCCON = 0x70;
   917  000D36  0E70               	movlw	112
   918  000D38  6ED3               	movwf	211,c	;volatile
   919  000D3A  0012               	return		;funcret
   920  000D3C                     __end_of_configuro:
   921                           	callstack 0
   922                           
   923 ;; *************** function _arranca_LCD *****************
   924 ;; Defined at:
   925 ;;		line 31 in file "maincode4.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;		None
   928 ;; Auto vars:     Size  Location     Type
   929 ;;		None
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         0       0       0       0       0       0       0       0       0
   941 ;;      Temps:          1       0       0       0       0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 4
   946 ;; This function calls:
   947 ;;		_BORRAR_LCD
   948 ;;		_CURSOR_HOME
   949 ;;		_CURSOR_ONOFF
   950 ;;		_LCD_CONFIG
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957  000D3C                     __ptext6:
   958                           	callstack 0
   959  000D3C                     _arranca_LCD:
   960                           	callstack 26
   961  000D3C                     
   962                           ;maincode4.c: 32:     TRISD = 0x00;
   963  000D3C  0E00               	movlw	0
   964  000D3E  6E95               	movwf	149,c	;volatile
   965  000D40                     
   966                           ;maincode4.c: 33:     LCD_CONFIG();
   967  000D40  EC87  F005         	call	_LCD_CONFIG	;wreg free
   968  000D44                     
   969                           ;maincode4.c: 34:     _delay((unsigned long)((23)*(8000000UL/4000.0)));
   970  000D44  0E3C               	movlw	60
   971  000D46  6E05               	movwf	??_arranca_LCD^0,c
   972  000D48  0EBC               	movlw	188
   973  000D4A                     u457:
   974  000D4A  2EE8               	decfsz	wreg,f,c
   975  000D4C  D7FE               	bra	u457
   976  000D4E  2E05               	decfsz	??_arranca_LCD^0,f,c
   977  000D50  D7FC               	bra	u457
   978  000D52  D000               	nop2	
   979  000D54                     
   980                           ;maincode4.c: 35:     BORRAR_LCD();
   981  000D54  ECCD  F006         	call	_BORRAR_LCD	;wreg free
   982  000D58                     
   983                           ;maincode4.c: 36:     CURSOR_HOME();
   984  000D58  ECC9  F006         	call	_CURSOR_HOME	;wreg free
   985  000D5C                     
   986                           ;maincode4.c: 37:     CURSOR_ONOFF(1);
   987  000D5C  0E01               	movlw	1
   988  000D5E  EC72  F006         	call	_CURSOR_ONOFF
   989  000D62  0012               	return		;funcret
   990  000D64                     __end_of_arranca_LCD:
   991                           	callstack 0
   992                           
   993 ;; *************** function _LCD_CONFIG *****************
   994 ;; Defined at:
   995 ;;		line 72 in file "LCD.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2, status,0, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1009 ;;      Params:         0       0       0       0       0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1011 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1012 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1013 ;;Total ram usage:        1 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 3
  1016 ;; This function calls:
  1017 ;;		_ENVIA_LCD_CMD
  1018 ;;		_ENVIA_NIBBLE
  1019 ;; This function is called by:
  1020 ;;		_arranca_LCD
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text7
  1025  000B0E                     __ptext7:
  1026                           	callstack 0
  1027  000B0E                     _LCD_CONFIG:
  1028                           	callstack 26
  1029  000B0E                     
  1030                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1031  000B0E  908C               	bcf	140,0,c	;volatile
  1032                           
  1033                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1034  000B10  928C               	bcf	140,1,c	;volatile
  1035  000B12                     
  1036                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1037  000B12  0E30               	movlw	48
  1038  000B14  ECB2  F006         	call	_ENVIA_NIBBLE
  1039  000B18                     
  1040                           ;LCD.c: 77:         _delay(24000);
  1041  000B18  0E20               	movlw	32
  1042  000B1A  6E04               	movwf	??_LCD_CONFIG^0,c
  1043  000B1C  0E2A               	movlw	42
  1044  000B1E                     u467:
  1045  000B1E  2EE8               	decfsz	wreg,f,c
  1046  000B20  D7FE               	bra	u467
  1047  000B22  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1048  000B24  D7FC               	bra	u467
  1049  000B26                     
  1050                           ;LCD.c: 78:         _delay(24000);
  1051  000B26  0E20               	movlw	32
  1052  000B28  6E04               	movwf	??_LCD_CONFIG^0,c
  1053  000B2A  0E2A               	movlw	42
  1054  000B2C                     u477:
  1055  000B2C  2EE8               	decfsz	wreg,f,c
  1056  000B2E  D7FE               	bra	u477
  1057  000B30  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1058  000B32  D7FC               	bra	u477
  1059                           
  1060                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1061  000B34  0E30               	movlw	48
  1062  000B36  ECB2  F006         	call	_ENVIA_NIBBLE
  1063  000B3A                     
  1064                           ;LCD.c: 83:  _delay(1200);
  1065  000B3A  0EF0               	movlw	240
  1066  000B3C                     u487:
  1067  000B3C  D000               	nop2	
  1068  000B3E  2EE8               	decfsz	wreg,f,c
  1069  000B40  D7FD               	bra	u487
  1070  000B42                     
  1071                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1072  000B42  0E30               	movlw	48
  1073  000B44  ECB2  F006         	call	_ENVIA_NIBBLE
  1074  000B48                     
  1075                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1076  000B48  0E20               	movlw	32
  1077  000B4A  ECB2  F006         	call	_ENVIA_NIBBLE
  1078  000B4E                     
  1079                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1080  000B4E  0E01               	movlw	1
  1081  000B50  EC3E  F006         	call	_ENVIA_LCD_CMD
  1082  000B54                     
  1083                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1084  000B54  0E28               	movlw	40
  1085  000B56  EC3E  F006         	call	_ENVIA_LCD_CMD
  1086  000B5A                     
  1087                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1088  000B5A  0E0F               	movlw	15
  1089  000B5C  EC3E  F006         	call	_ENVIA_LCD_CMD
  1090  000B60                     
  1091                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1092  000B60  0E06               	movlw	6
  1093  000B62  EC3E  F006         	call	_ENVIA_LCD_CMD
  1094  000B66                     
  1095                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1096  000B66  0E01               	movlw	1
  1097  000B68  EC3E  F006         	call	_ENVIA_LCD_CMD
  1098  000B6C  0012               	return		;funcret
  1099  000B6E                     __end_of_LCD_CONFIG:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _CURSOR_ONOFF *****************
  1103 ;; Defined at:
  1104 ;;		line 35 in file "LCD.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  estado          1    wreg     unsigned char 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  estado          1    3[COMRAM] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1118 ;;      Params:         0       0       0       0       0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1121 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1122 ;;Total ram usage:        1 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 3
  1125 ;; This function calls:
  1126 ;;		_ENVIA_LCD_CMD
  1127 ;; This function is called by:
  1128 ;;		_arranca_LCD
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text8
  1133  000CE4                     __ptext8:
  1134                           	callstack 0
  1135  000CE4                     _CURSOR_ONOFF:
  1136                           	callstack 26
  1137                           
  1138                           ;incstack = 0
  1139                           ;CURSOR_ONOFF@estado stored from wreg
  1140  000CE4  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1141  000CE6                     
  1142                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1143  000CE6  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1144  000CE8  A4D8               	btfss	status,2,c
  1145  000CEA  EF79  F006         	goto	u21
  1146  000CEE  EF7B  F006         	goto	u20
  1147  000CF2                     u21:
  1148  000CF2  EF7E  F006         	goto	l924
  1149  000CF6                     u20:
  1150  000CF6  0E0E               	movlw	14
  1151  000CF8  EC3E  F006         	call	_ENVIA_LCD_CMD
  1152  000CFC                     l924:
  1153                           
  1154                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1155  000CFC  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1156  000CFE  A4D8               	btfss	status,2,c
  1157  000D00  EF84  F006         	goto	u31
  1158  000D04  EF86  F006         	goto	u30
  1159  000D08                     u31:
  1160  000D08  EF89  F006         	goto	l42
  1161  000D0C                     u30:
  1162  000D0C  0E0C               	movlw	12
  1163  000D0E  EC3E  F006         	call	_ENVIA_LCD_CMD
  1164  000D12                     l42:
  1165  000D12  0012               	return		;funcret
  1166  000D14                     __end_of_CURSOR_ONOFF:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _CURSOR_HOME *****************
  1170 ;; Defined at:
  1171 ;;		line 30 in file "LCD.c"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;		None
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       0       0       0       0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        0 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 3
  1192 ;; This function calls:
  1193 ;;		_ENVIA_LCD_CMD
  1194 ;; This function is called by:
  1195 ;;		_arranca_LCD
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text9
  1200  000D92                     __ptext9:
  1201                           	callstack 0
  1202  000D92                     _CURSOR_HOME:
  1203                           	callstack 26
  1204  000D92                     
  1205                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1206  000D92  0E02               	movlw	2
  1207  000D94  EC3E  F006         	call	_ENVIA_LCD_CMD
  1208  000D98  0012               	return		;funcret
  1209  000D9A                     __end_of_CURSOR_HOME:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _BORRAR_LCD *****************
  1213 ;; Defined at:
  1214 ;;		line 67 in file "LCD.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1231 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1232 ;;Total ram usage:        0 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 3
  1235 ;; This function calls:
  1236 ;;		_ENVIA_LCD_CMD
  1237 ;; This function is called by:
  1238 ;;		_arranca_LCD
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text10
  1243  000D9A                     __ptext10:
  1244                           	callstack 0
  1245  000D9A                     _BORRAR_LCD:
  1246                           	callstack 26
  1247  000D9A                     
  1248                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1249  000D9A  0E01               	movlw	1
  1250  000D9C  EC3E  F006         	call	_ENVIA_LCD_CMD
  1251  000DA0  0012               	return		;funcret
  1252  000DA2                     __end_of_BORRAR_LCD:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _POS_CURSOR *****************
  1256 ;; Defined at:
  1257 ;;		line 6 in file "LCD.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fila            1    wreg     unsigned char 
  1260 ;;  columna         1    3[COMRAM] unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  fila            1    4[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1272 ;;      Params:         1       0       0       0       0       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1275 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1276 ;;Total ram usage:        2 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 3
  1279 ;; This function calls:
  1280 ;;		_ENVIA_LCD_CMD
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text11
  1287  000C42                     __ptext11:
  1288                           	callstack 0
  1289  000C42                     _POS_CURSOR:
  1290                           	callstack 27
  1291                           
  1292                           ;incstack = 0
  1293                           ;POS_CURSOR@fila stored from wreg
  1294  000C42  6E05               	movwf	POS_CURSOR@fila^0,c
  1295  000C44                     
  1296                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1297  000C44  0405               	decf	POS_CURSOR@fila^0,w,c
  1298  000C46  A4D8               	btfss	status,2,c
  1299  000C48  EF28  F006         	goto	u411
  1300  000C4C  EF2A  F006         	goto	u410
  1301  000C50                     u411:
  1302  000C50  EF30  F006         	goto	l1276
  1303  000C54                     u410:
  1304  000C54                     
  1305                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1306  000C54  5004               	movf	POS_CURSOR@columna^0,w,c
  1307  000C56  0F80               	addlw	128
  1308  000C58  EC3E  F006         	call	_ENVIA_LCD_CMD
  1309                           
  1310                           ;LCD.c: 11:  }
  1311  000C5C  EF3D  F006         	goto	l24
  1312  000C60                     l1276:
  1313  000C60  0E02               	movlw	2
  1314  000C62  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1315  000C64  A4D8               	btfss	status,2,c
  1316  000C66  EF37  F006         	goto	u421
  1317  000C6A  EF39  F006         	goto	u420
  1318  000C6E                     u421:
  1319  000C6E  EF3D  F006         	goto	l24
  1320  000C72                     u420:
  1321  000C72                     
  1322                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1323  000C72  5004               	movf	POS_CURSOR@columna^0,w,c
  1324  000C74  0FC0               	addlw	192
  1325  000C76  EC3E  F006         	call	_ENVIA_LCD_CMD
  1326  000C7A                     l24:
  1327  000C7A  0012               	return		;funcret
  1328  000C7C                     __end_of_POS_CURSOR:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _ENVIA_LCD_CMD *****************
  1332 ;; Defined at:
  1333 ;;		line 104 in file "LCD.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  dato            1    wreg     unsigned char 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  dato            1    1[COMRAM] unsigned char 
  1338 ;;  aux             1    2[COMRAM] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, status,2, status,0, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1348 ;;      Params:         0       0       0       0       0       0       0       0       0
  1349 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1351 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 2
  1355 ;; This function calls:
  1356 ;;		_ENVIA_NIBBLE
  1357 ;;		_LEER_LCD
  1358 ;; This function is called by:
  1359 ;;		_POS_CURSOR
  1360 ;;		_CURSOR_HOME
  1361 ;;		_CURSOR_ONOFF
  1362 ;;		_BORRAR_LCD
  1363 ;;		_LCD_CONFIG
  1364 ;;		_BLINK_CURSOR
  1365 ;;		_DISPLAY_ONOFF
  1366 ;;		_GENERACARACTER
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text12
  1371  000C7C                     __ptext12:
  1372                           	callstack 0
  1373  000C7C                     _ENVIA_LCD_CMD:
  1374                           	callstack 26
  1375                           
  1376                           ;incstack = 0
  1377                           ;ENVIA_LCD_CMD@dato stored from wreg
  1378  000C7C  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1379  000C7E                     
  1380                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1381  000C7E  908C               	bcf	140,0,c	;volatile
  1382  000C80                     
  1383                           ;LCD.c: 108:  LEER_LCD();
  1384  000C80  EC4E  F005         	call	_LEER_LCD	;wreg free
  1385  000C84                     
  1386                           ;LCD.c: 109:  TRISD = 0b00000000;
  1387  000C84  0E00               	movlw	0
  1388  000C86  6E95               	movwf	149,c	;volatile
  1389  000C88                     
  1390                           ;LCD.c: 111:         _delay(1200);
  1391  000C88  0EF0               	movlw	240
  1392  000C8A                     u497:
  1393  000C8A  D000               	nop2	
  1394  000C8C  2EE8               	decfsz	wreg,f,c
  1395  000C8E  D7FD               	bra	u497
  1396  000C90                     
  1397                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1398  000C90  928C               	bcf	140,1,c	;volatile
  1399  000C92                     
  1400                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1401  000C92  948C               	bcf	140,2,c	;volatile
  1402  000C94                     
  1403                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1404  000C94  908C               	bcf	140,0,c	;volatile
  1405  000C96                     
  1406                           ;LCD.c: 115:  aux = dato & 0xF0;
  1407  000C96  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1408  000C98  0BF0               	andlw	240
  1409  000C9A  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1410  000C9C                     
  1411                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1412  000C9C  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1413  000C9E  ECB2  F006         	call	_ENVIA_NIBBLE
  1414  000CA2                     
  1415                           ;LCD.c: 117:  aux = dato<<4;
  1416  000CA2  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1417  000CA4  0BF0               	andlw	240
  1418  000CA6  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1419  000CA8                     
  1420                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1421  000CA8  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1422  000CAA  ECB2  F006         	call	_ENVIA_NIBBLE
  1423  000CAE  0012               	return		;funcret
  1424  000CB0                     __end_of_ENVIA_LCD_CMD:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _ESCRIBE_MENSAJE *****************
  1428 ;; Defined at:
  1429 ;;		line 41 in file "LCD.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1432 ;;		 -> STR_2(3), STR_1(16), 
  1433 ;;  tam             1    5[COMRAM] unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  i               1    8[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1445 ;;      Params:         3       0       0       0       0       0       0       0       0
  1446 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1447 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1448 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1449 ;;Total ram usage:        6 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; Hardware stack levels required when called: 3
  1452 ;; This function calls:
  1453 ;;		_ENVIA_CHAR
  1454 ;; This function is called by:
  1455 ;;		_main
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text13
  1460  000BC8                     __ptext13:
  1461                           	callstack 0
  1462  000BC8                     _ESCRIBE_MENSAJE:
  1463                           	callstack 27
  1464  000BC8                     
  1465                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1466  000BC8  0E00               	movlw	0
  1467  000BCA  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1468                           
  1469                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1470  000BCC  0E00               	movlw	0
  1471  000BCE  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1472  000BD0  EFF9  F005         	goto	l1286
  1473  000BD4                     l1282:
  1474                           
  1475                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1476  000BD4  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1477  000BD6  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1478  000BD8  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1479  000BDA  0E00               	movlw	0
  1480  000BDC  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1481  000BDE  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1482  000BE0  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1483  000BE4  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1484  000BE8                     	if	0	;tblptru may be non-zero
  1485  000BE8                     	endif
  1486  000BE8                     	if	0	;tblptru may be non-zero
  1487  000BE8                     	endif
  1488  000BE8  0008               	tblrd		*
  1489  000BEA  50F5               	movf	tablat,w,c
  1490  000BEC  EC58  F006         	call	_ENVIA_CHAR
  1491  000BF0                     
  1492                           ;LCD.c: 47:  }
  1493  000BF0  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1494  000BF2                     l1286:
  1495  000BF2  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1496  000BF4  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1497  000BF6  A0D8               	btfss	status,0,c
  1498  000BF8  EF00  F006         	goto	u431
  1499  000BFC  EF02  F006         	goto	u430
  1500  000C00                     u431:
  1501  000C00  EFEA  F005         	goto	l1282
  1502  000C04                     u430:
  1503  000C04  0012               	return		;funcret
  1504  000C06                     __end_of_ESCRIBE_MENSAJE:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _ENVIA_CHAR *****************
  1508 ;; Defined at:
  1509 ;;		line 50 in file "LCD.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  dato            1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  dato            1    1[COMRAM] unsigned char 
  1514 ;;  aux             1    2[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        2 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 2
  1531 ;; This function calls:
  1532 ;;		_ENVIA_NIBBLE
  1533 ;;		_LEER_LCD
  1534 ;; This function is called by:
  1535 ;;		_ESCRIBE_MENSAJE
  1536 ;;		_manda_dos
  1537 ;;		_main
  1538 ;;		_GENERACARACTER
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text14
  1543  000CB0                     __ptext14:
  1544                           	callstack 0
  1545  000CB0                     _ENVIA_CHAR:
  1546                           	callstack 27
  1547                           
  1548                           ;incstack = 0
  1549                           ;ENVIA_CHAR@dato stored from wreg
  1550  000CB0  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1551  000CB2                     
  1552                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1553  000CB2  808C               	bsf	140,0,c	;volatile
  1554  000CB4                     
  1555                           ;LCD.c: 54:  LEER_LCD();
  1556  000CB4  EC4E  F005         	call	_LEER_LCD	;wreg free
  1557  000CB8                     
  1558                           ;LCD.c: 55:  TRISD = 0x00;
  1559  000CB8  0E00               	movlw	0
  1560  000CBA  6E95               	movwf	149,c	;volatile
  1561  000CBC                     
  1562                           ;LCD.c: 56:         _delay(1200);
  1563  000CBC  0EF0               	movlw	240
  1564  000CBE                     u507:
  1565  000CBE  D000               	nop2	
  1566  000CC0  2EE8               	decfsz	wreg,f,c
  1567  000CC2  D7FD               	bra	u507
  1568  000CC4                     
  1569                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1570  000CC4  928C               	bcf	140,1,c	;volatile
  1571  000CC6                     
  1572                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1573  000CC6  948C               	bcf	140,2,c	;volatile
  1574  000CC8                     
  1575                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1576  000CC8  808C               	bsf	140,0,c	;volatile
  1577  000CCA                     
  1578                           ;LCD.c: 61:  aux = dato & 0xF0;
  1579  000CCA  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1580  000CCC  0BF0               	andlw	240
  1581  000CCE  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1582  000CD0                     
  1583                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1584  000CD0  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1585  000CD2  ECB2  F006         	call	_ENVIA_NIBBLE
  1586  000CD6                     
  1587                           ;LCD.c: 63:  aux = dato << 4;
  1588  000CD6  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1589  000CD8  0BF0               	andlw	240
  1590  000CDA  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1591  000CDC                     
  1592                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1593  000CDC  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1594  000CDE  ECB2  F006         	call	_ENVIA_NIBBLE
  1595  000CE2  0012               	return		;funcret
  1596  000CE4                     __end_of_ENVIA_CHAR:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _LEER_LCD *****************
  1600 ;; Defined at:
  1601 ;;		line 121 in file "LCD.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  aux             1    0[COMRAM] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1618 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        1 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_ENVIA_CHAR
  1626 ;;		_ENVIA_LCD_CMD
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text15
  1631  000A9C                     __ptext15:
  1632                           	callstack 0
  1633  000A9C                     _LEER_LCD:
  1634                           	callstack 27
  1635  000A9C                     
  1636                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1637  000A9C  0EF8               	movlw	248
  1638  000A9E  6E95               	movwf	149,c	;volatile
  1639  000AA0                     
  1640                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1641  000AA0  908C               	bcf	140,0,c	;volatile
  1642  000AA2                     
  1643                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1644  000AA2  828C               	bsf	140,1,c	;volatile
  1645  000AA4                     
  1646                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1647  000AA4  848C               	bsf	140,2,c	;volatile
  1648  000AA6                     
  1649                           ;LCD.c: 128:         _delay(1200);
  1650  000AA6  0EF0               	movlw	240
  1651  000AA8                     u517:
  1652  000AA8  D000               	nop2	
  1653  000AAA  2EE8               	decfsz	wreg,f,c
  1654  000AAC  D7FD               	bra	u517
  1655  000AAE                     
  1656                           ;LCD.c: 130:  aux = PORTD;
  1657  000AAE  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1658  000AB2                     
  1659                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1660  000AB2  948C               	bcf	140,2,c	;volatile
  1661  000AB4                     
  1662                           ;LCD.c: 132:         _delay(1200);
  1663  000AB4  0EF0               	movlw	240
  1664  000AB6                     u527:
  1665  000AB6  D000               	nop2	
  1666  000AB8  2EE8               	decfsz	wreg,f,c
  1667  000ABA  D7FD               	bra	u527
  1668  000ABC                     
  1669                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1670  000ABC  848C               	bsf	140,2,c	;volatile
  1671  000ABE                     
  1672                           ;LCD.c: 135:         _delay(1200);
  1673  000ABE  0EF0               	movlw	240
  1674  000AC0                     u537:
  1675  000AC0  D000               	nop2	
  1676  000AC2  2EE8               	decfsz	wreg,f,c
  1677  000AC4  D7FD               	bra	u537
  1678  000AC6                     
  1679                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1680  000AC6  948C               	bcf	140,2,c	;volatile
  1681  000AC8                     l872:
  1682                           
  1683                           ;LCD.c: 138:  aux = aux & 0x80;
  1684  000AC8  5001               	movf	LEER_LCD@aux^0,w,c
  1685  000ACA  0B80               	andlw	128
  1686  000ACC  6E01               	movwf	LEER_LCD@aux^0,c
  1687                           
  1688                           ;LCD.c: 139:  while(aux == 0x80)
  1689  000ACE  EF7D  F005         	goto	l886
  1690  000AD2                     l67:
  1691                           
  1692                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1693  000AD2  848C               	bsf	140,2,c	;volatile
  1694  000AD4                     
  1695                           ;LCD.c: 142:             _delay(1200);
  1696  000AD4  0EF0               	movlw	240
  1697  000AD6                     u547:
  1698  000AD6  D000               	nop2	
  1699  000AD8  2EE8               	decfsz	wreg,f,c
  1700  000ADA  D7FD               	bra	u547
  1701  000ADC                     
  1702                           ;LCD.c: 143:             aux = PORTD;
  1703  000ADC  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1704  000AE0                     
  1705                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1706  000AE0  948C               	bcf	140,2,c	;volatile
  1707                           
  1708                           ;LCD.c: 145:             _delay(1200);
  1709  000AE2  0EF0               	movlw	240
  1710  000AE4                     u557:
  1711  000AE4  D000               	nop2	
  1712  000AE6  2EE8               	decfsz	wreg,f,c
  1713  000AE8  D7FD               	bra	u557
  1714  000AEA                     
  1715                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1716  000AEA  848C               	bsf	140,2,c	;volatile
  1717                           
  1718                           ;LCD.c: 147:             _delay(1200);
  1719  000AEC  0EF0               	movlw	240
  1720  000AEE                     u567:
  1721  000AEE  D000               	nop2	
  1722  000AF0  2EE8               	decfsz	wreg,f,c
  1723  000AF2  D7FD               	bra	u567
  1724  000AF4                     
  1725                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1726  000AF4  948C               	bcf	140,2,c	;volatile
  1727  000AF6  EF64  F005         	goto	l872
  1728  000AFA                     l886:
  1729                           
  1730                           ;LCD.c: 139:  while(aux == 0x80)
  1731  000AFA  0E80               	movlw	128
  1732  000AFC  1801               	xorwf	LEER_LCD@aux^0,w,c
  1733  000AFE  B4D8               	btfsc	status,2,c
  1734  000B00  EF84  F005         	goto	u11
  1735  000B04  EF86  F005         	goto	u10
  1736  000B08                     u11:
  1737  000B08  EF69  F005         	goto	l67
  1738  000B0C                     u10:
  1739  000B0C  0012               	return		;funcret
  1740  000B0E                     __end_of_LEER_LCD:
  1741                           	callstack 0
  1742                           
  1743 ;; *************** function _ENVIA_NIBBLE *****************
  1744 ;; Defined at:
  1745 ;;		line 93 in file "LCD.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  dato            1    wreg     unsigned char 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  dato            1    0[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1759 ;;      Params:         0       0       0       0       0       0       0       0       0
  1760 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1761 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1762 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1763 ;;Total ram usage:        1 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 1
  1766 ;; This function calls:
  1767 ;;		Nothing
  1768 ;; This function is called by:
  1769 ;;		_ENVIA_CHAR
  1770 ;;		_LCD_CONFIG
  1771 ;;		_ENVIA_LCD_CMD
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text16
  1776  000D64                     __ptext16:
  1777                           	callstack 0
  1778  000D64                     _ENVIA_NIBBLE:
  1779                           	callstack 27
  1780                           
  1781                           ;incstack = 0
  1782                           ;ENVIA_NIBBLE@dato stored from wreg
  1783  000D64  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1784  000D66                     
  1785                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1786  000D66  0E0F               	movlw	15
  1787  000D68  168C               	andwf	140,f,c	;volatile
  1788                           
  1789                           ;LCD.c: 96:  dato &= 0xF0;
  1790  000D6A  0EF0               	movlw	240
  1791  000D6C  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1792                           
  1793                           ;LCD.c: 97:  LATD|= dato;
  1794  000D6E  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1795  000D70  128C               	iorwf	140,f,c	;volatile
  1796  000D72                     
  1797                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1798  000D72  848C               	bsf	140,2,c	;volatile
  1799  000D74                     
  1800                           ;LCD.c: 100:         _delay(1200);
  1801  000D74  0EF0               	movlw	240
  1802  000D76                     u577:
  1803  000D76  D000               	nop2	
  1804  000D78  2EE8               	decfsz	wreg,f,c
  1805  000D7A  D7FD               	bra	u577
  1806  000D7C                     
  1807                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1808  000D7C  948C               	bcf	140,2,c	;volatile
  1809  000D7E  0012               	return		;funcret
  1810  000D80                     __end_of_ENVIA_NIBBLE:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _CCP1_ISR *****************
  1814 ;; Defined at:
  1815 ;;		line 76 in file "maincode4.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1832 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1833 ;;Total ram usage:        0 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		Interrupt level 2
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	intcode
  1843  000008                     __pintcode:
  1844                           	callstack 0
  1845  000008                     _CCP1_ISR:
  1846                           	callstack 26
  1847                           
  1848                           ;incstack = 0
  1849  000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1850  00000A  ED12  F005         	call	int_func,f	;refresh shadow registers
  1851                           
  1852                           	psect	intcode_body
  1853  000A24                     __pintcode_body:
  1854                           	callstack 26
  1855  000A24                     int_func:
  1856                           	callstack 26
  1857  000A24  0006               	pop		; remove dummy address from shadow register refresh
  1858  000A26                     
  1859                           ;maincode4.c: 77:     PIR1bits.CCP1IF = 0;
  1860  000A26  949E               	bcf	158,2,c	;volatile
  1861  000A28                     
  1862                           ;maincode4.c: 78:     if(ticks == 15){
  1863  000A28  0E0F               	movlw	15
  1864  000A2A  1810               	xorwf	_ticks^0,w,c
  1865  000A2C  A4D8               	btfss	status,2,c
  1866  000A2E  EF1B  F005         	goto	i2u25_41
  1867  000A32  EF1D  F005         	goto	i2u25_40
  1868  000A36                     i2u25_41:
  1869  000A36  EF4B  F005         	goto	i2l1190
  1870  000A3A                     i2u25_40:
  1871  000A3A                     
  1872                           ;maincode4.c: 79:         ticks = 0;
  1873  000A3A  0E00               	movlw	0
  1874  000A3C  6E10               	movwf	_ticks^0,c
  1875  000A3E                     
  1876                           ;maincode4.c: 80:         if(segundos == 59){
  1877  000A3E  0E3B               	movlw	59
  1878  000A40  1817               	xorwf	_segundos^0,w,c
  1879  000A42  A4D8               	btfss	status,2,c
  1880  000A44  EF26  F005         	goto	i2u26_41
  1881  000A48  EF28  F005         	goto	i2u26_40
  1882  000A4C                     i2u26_41:
  1883  000A4C  EF48  F005         	goto	i2l1188
  1884  000A50                     i2u26_40:
  1885  000A50                     
  1886                           ;maincode4.c: 81:             segundos = 0;
  1887  000A50  0E00               	movlw	0
  1888  000A52  6E17               	movwf	_segundos^0,c
  1889  000A54                     
  1890                           ;maincode4.c: 82:             if(minutos == 59){
  1891  000A54  0E3B               	movlw	59
  1892  000A56  1818               	xorwf	_minutos^0,w,c
  1893  000A58  A4D8               	btfss	status,2,c
  1894  000A5A  EF31  F005         	goto	i2u27_41
  1895  000A5E  EF33  F005         	goto	i2u27_40
  1896  000A62                     i2u27_41:
  1897  000A62  EF45  F005         	goto	i2l1186
  1898  000A66                     i2u27_40:
  1899  000A66                     
  1900                           ;maincode4.c: 83:                 minutos = 0;
  1901  000A66  0E00               	movlw	0
  1902  000A68  6E18               	movwf	_minutos^0,c
  1903  000A6A                     
  1904                           ;maincode4.c: 84:                 if(horas == 23){
  1905  000A6A  0E17               	movlw	23
  1906  000A6C  1819               	xorwf	_horas^0,w,c
  1907  000A6E  A4D8               	btfss	status,2,c
  1908  000A70  EF3C  F005         	goto	i2u28_41
  1909  000A74  EF3E  F005         	goto	i2u28_40
  1910  000A78                     i2u28_41:
  1911  000A78  EF42  F005         	goto	i2l1184
  1912  000A7C                     i2u28_40:
  1913  000A7C                     
  1914                           ;maincode4.c: 85:                     horas = 0;
  1915  000A7C  0E00               	movlw	0
  1916  000A7E  6E19               	movwf	_horas^0,c
  1917                           
  1918                           ;maincode4.c: 86:                 }
  1919  000A80  EF4C  F005         	goto	i2l174
  1920  000A84                     i2l1184:
  1921                           
  1922                           ;maincode4.c: 88:                     horas++;
  1923  000A84  2A19               	incf	_horas^0,f,c
  1924  000A86  EF4C  F005         	goto	i2l174
  1925  000A8A                     i2l1186:
  1926                           
  1927                           ;maincode4.c: 92:                 minutos++;
  1928  000A8A  2A18               	incf	_minutos^0,f,c
  1929  000A8C  EF4C  F005         	goto	i2l174
  1930  000A90                     i2l1188:
  1931                           
  1932                           ;maincode4.c: 96:             segundos++;
  1933  000A90  2A17               	incf	_segundos^0,f,c
  1934  000A92  EF4C  F005         	goto	i2l174
  1935  000A96                     i2l1190:
  1936                           
  1937                           ;maincode4.c: 100:         ticks++;
  1938  000A96  2A10               	incf	_ticks^0,f,c
  1939  000A98                     i2l174:
  1940  000A98  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1941  000A9A  0011               	retfie		f
  1942  000A9C                     __end_of_CCP1_ISR:
  1943                           	callstack 0
  1944                           
  1945                           	psect	rparam
  1946  0000                     
  1947                           	psect	temp
  1948  00001A                     btemp:
  1949                           	callstack 0
  1950  00001A                     	ds	1
  1951  0000                     int$flags	set	btemp
  1952  0000                     wtemp8	set	btemp+1
  1953  0000                     ttemp5	set	btemp+1
  1954  0000                     ttemp6	set	btemp+4
  1955  0000                     ttemp7	set	btemp+8
  1956                           
  1957                           	psect	idloc
  1958                           
  1959                           ;Config register IDLOC0 @ 0x200000
  1960                           ;	unspecified, using default values
  1961  200000                     	org	2097152
  1962  200000  FF                 	db	255
  1963                           
  1964                           ;Config register IDLOC1 @ 0x200001
  1965                           ;	unspecified, using default values
  1966  200001                     	org	2097153
  1967  200001  FF                 	db	255
  1968                           
  1969                           ;Config register IDLOC2 @ 0x200002
  1970                           ;	unspecified, using default values
  1971  200002                     	org	2097154
  1972  200002  FF                 	db	255
  1973                           
  1974                           ;Config register IDLOC3 @ 0x200003
  1975                           ;	unspecified, using default values
  1976  200003                     	org	2097155
  1977  200003  FF                 	db	255
  1978                           
  1979                           ;Config register IDLOC4 @ 0x200004
  1980                           ;	unspecified, using default values
  1981  200004                     	org	2097156
  1982  200004  FF                 	db	255
  1983                           
  1984                           ;Config register IDLOC5 @ 0x200005
  1985                           ;	unspecified, using default values
  1986  200005                     	org	2097157
  1987  200005  FF                 	db	255
  1988                           
  1989                           ;Config register IDLOC6 @ 0x200006
  1990                           ;	unspecified, using default values
  1991  200006                     	org	2097158
  1992  200006  FF                 	db	255
  1993                           
  1994                           ;Config register IDLOC7 @ 0x200007
  1995                           ;	unspecified, using default values
  1996  200007                     	org	2097159
  1997  200007  FF                 	db	255
  1998                           
  1999                           	psect	config
  2000                           
  2001                           ;Config register CONFIG1L @ 0x300000
  2002                           ;	PLL Prescaler Selection bits
  2003                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2004                           ;	System Clock Postscaler Selection bits
  2005                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2006                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2007                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2008  300000                     	org	3145728
  2009  300000  00                 	db	0
  2010                           
  2011                           ;Config register CONFIG1H @ 0x300001
  2012                           ;	Oscillator Selection bits
  2013                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2014                           ;	Fail-Safe Clock Monitor Enable bit
  2015                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2016                           ;	Internal/External Oscillator Switchover bit
  2017                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2018  300001                     	org	3145729
  2019  300001  08                 	db	8
  2020                           
  2021                           ;Config register CONFIG2L @ 0x300002
  2022                           ;	Power-up Timer Enable bit
  2023                           ;	PWRT = ON, PWRT enabled
  2024                           ;	Brown-out Reset Enable bits
  2025                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2026                           ;	Brown-out Reset Voltage bits
  2027                           ;	BORV = 3, Minimum setting 2.05V
  2028                           ;	USB Voltage Regulator Enable bit
  2029                           ;	VREGEN = OFF, USB voltage regulator disabled
  2030  300002                     	org	3145730
  2031  300002  18                 	db	24
  2032                           
  2033                           ;Config register CONFIG2H @ 0x300003
  2034                           ;	Watchdog Timer Enable bit
  2035                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2036                           ;	Watchdog Timer Postscale Select bits
  2037                           ;	WDTPS = 32768, 1:32768
  2038  300003                     	org	3145731
  2039  300003  1E                 	db	30
  2040                           
  2041                           ; Padding undefined space
  2042  300004                     	org	3145732
  2043  300004  FF                 	db	255
  2044                           
  2045                           ;Config register CONFIG3H @ 0x300005
  2046                           ;	CCP2 MUX bit
  2047                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2048                           ;	PORTB A/D Enable bit
  2049                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2050                           ;	Low-Power Timer 1 Oscillator Enable bit
  2051                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2052                           ;	MCLR Pin Enable bit
  2053                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2054  300005                     	org	3145733
  2055  300005  81                 	db	129
  2056                           
  2057                           ;Config register CONFIG4L @ 0x300006
  2058                           ;	Stack Full/Underflow Reset Enable bit
  2059                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2060                           ;	Single-Supply ICSP Enable bit
  2061                           ;	LVP = OFF, Single-Supply ICSP disabled
  2062                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2063                           ;	ICPRT = OFF, ICPORT disabled
  2064                           ;	Extended Instruction Set Enable bit
  2065                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2066                           ;	Background Debugger Enable bit
  2067                           ;	DEBUG = 0x1, unprogrammed default
  2068  300006                     	org	3145734
  2069  300006  81                 	db	129
  2070                           
  2071                           ; Padding undefined space
  2072  300007                     	org	3145735
  2073  300007  FF                 	db	255
  2074                           
  2075                           ;Config register CONFIG5L @ 0x300008
  2076                           ;	Code Protection bit
  2077                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2078                           ;	Code Protection bit
  2079                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2080                           ;	Code Protection bit
  2081                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2082                           ;	Code Protection bit
  2083                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2084  300008                     	org	3145736
  2085  300008  0F                 	db	15
  2086                           
  2087                           ;Config register CONFIG5H @ 0x300009
  2088                           ;	Boot Block Code Protection bit
  2089                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2090                           ;	Data EEPROM Code Protection bit
  2091                           ;	CPD = OFF, Data EEPROM is not code-protected
  2092  300009                     	org	3145737
  2093  300009  C0                 	db	192
  2094                           
  2095                           ;Config register CONFIG6L @ 0x30000A
  2096                           ;	Write Protection bit
  2097                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2098                           ;	Write Protection bit
  2099                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2100                           ;	Write Protection bit
  2101                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2102                           ;	Write Protection bit
  2103                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2104  30000A                     	org	3145738
  2105  30000A  0F                 	db	15
  2106                           
  2107                           ;Config register CONFIG6H @ 0x30000B
  2108                           ;	Configuration Register Write Protection bit
  2109                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2110                           ;	Boot Block Write Protection bit
  2111                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2112                           ;	Data EEPROM Write Protection bit
  2113                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2114  30000B                     	org	3145739
  2115  30000B  E0                 	db	224
  2116                           
  2117                           ;Config register CONFIG7L @ 0x30000C
  2118                           ;	Table Read Protection bit
  2119                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2120                           ;	Table Read Protection bit
  2121                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2122                           ;	Table Read Protection bit
  2123                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2124                           ;	Table Read Protection bit
  2125                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2126  30000C                     	org	3145740
  2127  30000C  0F                 	db	15
  2128                           
  2129                           ;Config register CONFIG7H @ 0x30000D
  2130                           ;	Boot Block Table Read Protection bit
  2131                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2132  30000D                     	org	3145741
  2133  30000D  40                 	db	64
  2134                           tosu	equ	0xFFF
  2135                           tosh	equ	0xFFE
  2136                           tosl	equ	0xFFD
  2137                           stkptr	equ	0xFFC
  2138                           pclatu	equ	0xFFB
  2139                           pclath	equ	0xFFA
  2140                           pcl	equ	0xFF9
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           indf0	equ	0xFEF
  2148                           postinc0	equ	0xFEE
  2149                           postdec0	equ	0xFED
  2150                           preinc0	equ	0xFEC
  2151                           plusw0	equ	0xFEB
  2152                           fsr0h	equ	0xFEA
  2153                           fsr0l	equ	0xFE9
  2154                           wreg	equ	0xFE8
  2155                           indf1	equ	0xFE7
  2156                           postinc1	equ	0xFE6
  2157                           postdec1	equ	0xFE5
  2158                           preinc1	equ	0xFE4
  2159                           plusw1	equ	0xFE3
  2160                           fsr1h	equ	0xFE2
  2161                           fsr1l	equ	0xFE1
  2162                           bsr	equ	0xFE0
  2163                           indf2	equ	0xFDF
  2164                           postinc2	equ	0xFDE
  2165                           postdec2	equ	0xFDD
  2166                           preinc2	equ	0xFDC
  2167                           plusw2	equ	0xFDB
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        3
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[3]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_convierte_digitos
    _manda_dos->_ENVIA_CHAR
    _convierte_digitos->___awdiv
    ___awdiv->___awmod
    _arranca_LCD->_CURSOR_ONOFF
    _arranca_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CCP1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CCP1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CCP1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CCP1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CCP1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2910
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                        _arranca_LCD
                          _configuro
                  _convierte_digitos
                          _manda_dos
 ---------------------------------------------------------------------------------
 (1) _manda_dos                                            0     0      0     120
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _convierte_digitos                                    1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _arranca_LCD                                          1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _arranca_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
   _convierte_digitos
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _manda_dos
     _ENVIA_CHAR

 _CCP1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      19       1       26.6%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhhlh     1E      0       0      21        0.0%
BITBIGSFRhhllh      1E      0       0      25        0.0%
BITBIGSFRhhhhh       D      0       0      20        0.0%
BITBIGSFRhhhlh       8      0       0      23        0.0%
BITBIGSFRlh          8      0       0      28        0.0%
BITBIGSFRhl          8      0       0      27        0.0%
BITBIGSFRhhlll       7      0       0      26        0.0%
BITBIGSFRhhhhll      5      0       0      22        0.0%
BITBIGSFRhhhll       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      30        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 21 12:21:50 2022

                        _x 0016                          _y 0015                         l24 0C7A  
                       l42 0D12                         l51 0CE2                         l60 0D7E  
                       l37 0D98                         l54 0DA0                         l63 0CAE  
                       l48 0C04                         l57 0B6C                         l67 0AD2  
                       l69 0B0C                         u10 0B0C                         u11 0B08  
                       u20 0CF6                         u21 0CF2                         u30 0D0C  
                       u31 0D08               ___awdiv@sign 000C              ENVIA_CHAR@aux 0003  
                      l141 0D3A                        l150 0D90                        l144 0D62  
                      l147 0BC6                        l156 09AE                        l421 0988  
                      l408 08D8                        l900 0C84                        l910 0C96  
                      l902 0C88                        l912 0C9C                        l904 0C90  
                      l920 0CE6                        l850 0A9C                        l930 0CB4  
                      l914 0CA2                        l906 0C92                        l922 0CF6  
                      l860 0AAE                        l852 0AA0                        l940 0CC8  
                      l932 0CB8                        l916 0CA8                        l908 0C94  
                      l924 0CFC                        l870 0AC6                        l862 0AB2  
                      l854 0AA2                        l942 0CCA                        l934 0CBC  
                      l950 0D9A                        l918 0D92                        l926 0D0C  
                      l880 0AEA                        l872 0AC8                        l864 0AB4  
                      l856 0AA4                        l944 0CD0                        l936 0CC4  
                      l928 0CB2                        l960 0B3A                        l952 0B0E  
                      l890 0D72                        l882 0AF4                        l874 0AD4  
                      l866 0ABC                        l858 0AA6                        l946 0CD6  
                      l938 0CC6                        l970 0B5A                        l962 0B42  
                      l954 0B12                        l892 0D74                        l876 0ADC  
                      l868 0ABE                        l948 0CDC                        l972 0B60  
                      l964 0B48                        l956 0B18                        l894 0D7C  
                      l878 0AE0                        l886 0AFA                        l974 0B66  
                      l966 0B4E                        l958 0B26                        l888 0D66  
                      l896 0C7E                        l968 0B54                        l898 0C80  
                      u300 0842                        u301 083E                        u310 0868  
                      u311 0864                        u320 0886                        u400 0978  
                      u321 0882                        u401 0974                        u410 0C54  
                      u330 08A2                        u411 0C50                        u331 089E  
                      u420 0C72                        u340 08C8                        u421 0C6E  
                      u341 08C4                        u430 0C04                        u350 08EC  
                      u431 0C00                        u351 08E8                        u360 0906  
                      u440 09BC                        u361 0902                        u441 09B8  
                      u290 0828                        u370 0920                        u507 0CBE  
                      u291 0824                        u371 091C                        u380 093E  
                      u517 0AA8                        u381 093A                        u390 0954  
                      u527 0AB6                        u391 0950                        u537 0AC0  
                      u457 0D4A                        u547 0AD6                        u467 0B1E  
                      u557 0AE4                        u477 0B2C                        u567 0AEE  
                      u487 0B3C                        u577 0D76                        u497 0C8A  
             ___awmod@sign 0006                LEER_LCD@aux 0001                        wreg 000FE8  
             ?_CURSOR_HOME 0001             ??_ENVIA_NIBBLE 0001             ENVIA_CHAR@dato 0002  
                     l1200 0834                       l1210 0868                       l1202 0842  
                     l1220 08A2                       l1212 0870                       l1204 084A  
                     l1300 09BC                       l1230 08C8                       l1222 08AA  
                     l1214 0878                       l1206 084E                       l1310 09E0  
                     l1302 09C4                       l1080 0D3C                       l1072 0D14  
                     l1232 08D0                       l1224 08AC                       l1216 0886  
                     l1208 0856                       l1240 08EC                       l1320 0A06  
                     l1312 09E6                       l1304 09CA                       l1090 0D5C  
                     l1082 0D40                       l1074 0D30                       l1226 08B2  
                     l1218 088C                       l1250 0920                       l1242 08F4  
                     l1322 0A0C                       l1314 09F6                       l1306 09D4  
                     l1084 0D44                       l1076 0D32                       l1228 08B8  
                     l1260 095C                       l1252 0928                       l1244 08F8  
                     l1236 08DA                       l1324 0A10                       l1316 09FC  
                     l1308 09DC                       l1086 0D54                       l1078 0D34  
                     l1262 0962                       l1254 0930                       l1246 0906  
                     l1238 08DE                       l1094 0D80                       l1326 0A16  
                     l1318 0A00                       l1280 0BC8                       l1272 0C44  
                     l1088 0D58                       l1192 0816                       l1256 093E  
                     l1264 0968                       l1248 090E                       l1282 0BD4  
                     l1274 0C54                       l1194 081A                       l1266 0978  
                     l1258 0954                       l1290 098A                       l1284 0BF0  
                     l1276 0C60                       l1196 0828                       l1268 0980  
                     l1292 098E                       l1286 0BF2                       l1278 0C72  
                     l1198 0830                       l1294 0992                       l1288 0B70  
                     l1296 099C                       l1298 09AC                       STR_1 0801  
                     STR_2 0811                       _LATD 000F8C                       _main 098A  
         __end_of_CCP1_ISR 0A9C                       btemp 001A                       start 000E  
            ?_CURSOR_ONOFF 0001               ___param_bank 000000            ??_ENVIA_LCD_CMD 0002  
         __end_of_LEER_LCD 0B0E    convierte_digitos@numero 000F                      ?_main 0001  
          __end_of___awdiv 08DA            __end_of___awmod 098A            ___awdiv@divisor 0009  
                    _T1CON 000FCD                      i2l174 0A98            ___awdiv@counter 000B  
                    _PORTD 000F83                      _TRISD 000F95                      _horas 0019  
              ?_POS_CURSOR 0004                      _ticks 0010                      tablat 000FF5  
                    ttemp5 001B                      ttemp6 001E                      ttemp7 0022  
                    status 000FD8                      wtemp8 001B             ??_CURSOR_ONOFF 0004  
          __initialization 0C06               __end_of_main 0A24            _ESCRIBE_MENSAJE 0BC8  
                   ??_main 0010              __activetblptr 000001                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0                     _ADRESH 000FC4  
                   _CCPR1H 000FBF                     _CCPR1L 000FBE           ___awdiv@dividend 0007  
                   i2l1170 0A3A                     i2l1180 0A6A                     i2l1172 0A3E  
                   i2l1182 0A7C                     i2l1174 0A50                     i2l1190 0A96  
                   i2l1166 0A26                     i2l1184 0A84                     i2l1176 0A54  
                   i2l1168 0A28                     i2l1178 0A66                     i2l1186 0A8A  
                   i2l1188 0A90                     _OSCCON 000FD3                  ??___awdiv 000B  
                   _decena 0012                  ??___awmod 0005       __end_of_ENVIA_NIBBLE 0D80  
                   clear_0 0C2A           ___awdiv@quotient 000D            ___awmod@divisor 0003  
                   isa$std 000001            ___awmod@counter 0005                     _unidad 0011  
                ?_CCP1_ISR 0001               __pdataCOMRAM 0017               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
             ??_BORRAR_LCD 0004                  ?_LEER_LCD 0001                 __accesstop 0060  
  __end_of__initialization 0C30               ??_LCD_CONFIG 0004              ___rparam_used 000001  
             ??_ENVIA_CHAR 0002    __end_of_ESCRIBE_MENSAJE 0C06             __pcstackCOMRAM 0001  
        _convierte_digitos 0B6E         __end_of_BORRAR_LCD 0DA2         ?_convierte_digitos 0001  
               ??_CCP1_ISR 0001           ENVIA_LCD_CMD@aux 0003       __end_of_CURSOR_ONOFF 0D14  
       __end_of_LCD_CONFIG 0B6E         __end_of_ENVIA_CHAR 0CE4        ??_convierte_digitos 000F  
               ??_LEER_LCD 0001           ENVIA_NIBBLE@dato 0001  __end_of_convierte_digitos 0BC8  
                  _CCP1CON 000FBD                    i2u25_40 0A3A                    i2u25_41 0A36  
                  i2u26_40 0A50                    i2u26_41 0A4C                    i2u27_40 0A66  
                  i2u27_41 0A62                    i2u28_40 0A7C                    i2u28_41 0A78  
             ??_POS_CURSOR 0005                    __Hparam 0000                    __Lparam 0000  
         ?_ESCRIBE_MENSAJE 0004          __end_of_configuro 0D3C                    ___awdiv 0816  
                  ___awmod 08DA                    _adc_res 0014               __psmallconst 0800  
        __end_of_manda_dos 0D92      __end_of_ENVIA_LCD_CMD 0CB0                    __pcinit 0C06  
       __end_of_POS_CURSOR 0C7C                    __ramtop 0800                    _centena 0013  
                  __ptext0 098A                    __ptext1 0D80                    __ptext2 0B6E  
                  __ptext3 08DA                    __ptext4 0816                    __ptext5 0D14  
                  __ptext6 0D3C                    __ptext7 0B0E                    __ptext8 0CE4  
                  __ptext9 0D92           ___awmod@dividend 0001                    _minutos 0018  
           __pintcode_body 0A24               _ENVIA_NIBBLE 0D64       end_of_initialization 0C30  
                  int_func 0A24                    postinc0 000FEE              ??_arranca_LCD 0005  
             _CURSOR_ONOFF 0CE4         CURSOR_ONOFF@estado 0004              __pidataCOMRAM 0DA2  
            ??_CURSOR_HOME 0004        start_initialization 0C06          ENVIA_LCD_CMD@dato 0002  
      __end_of_arranca_LCD 0D64                __pbssCOMRAM 0010        __end_of_CURSOR_HOME 0D9A  
                __pintcode 0008                   ?___awdiv 0007                   ?___awmod 0001  
                _configuro 0D14                __smallconst 0800                  _manda_dos 0D80  
                 _CCP1_ISR 0008                   _LEER_LCD 0A9C                   _LATDbits 000F8C  
                 _PIE1bits 000F9D                _arranca_LCD 0D3C                   _PIR1bits 000F9E  
         ESCRIBE_MENSAJE@i 0009             POS_CURSOR@fila 0005                 ?_configuro 0001  
               _ADCON0bits 000FC2                 ?_manda_dos 0001                _CURSOR_HOME 0D92  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
                 __ptext10 0D9A                   __ptext11 0C42                   __ptext12 0C7C  
                 __ptext13 0BC8                   __ptext14 0CB0                   __ptext15 0A9C  
                 __ptext16 0D64                 _BORRAR_LCD 0D9A                 _LCD_CONFIG 0B0E  
               _ENVIA_CHAR 0CB0                   _segundos 0017                   isa$xinst 000000  
                 int$flags 001A              _ENVIA_LCD_CMD 0C7C                ??_configuro 0001  
              ??_manda_dos 0004                 _INTCONbits 000FF2          ??_ESCRIBE_MENSAJE 0007  
                 intlevel2 0000      ESCRIBE_MENSAJE@cadena 0004             ?_ENVIA_LCD_CMD 0001  
              ?_BORRAR_LCD 0001              ?_ENVIA_NIBBLE 0001                 _POS_CURSOR 0C42  
              ?_LCD_CONFIG 0001         ESCRIBE_MENSAJE@tam 0006                ?_ENVIA_CHAR 0001  
             ?_arranca_LCD 0001          POS_CURSOR@columna 0004  
