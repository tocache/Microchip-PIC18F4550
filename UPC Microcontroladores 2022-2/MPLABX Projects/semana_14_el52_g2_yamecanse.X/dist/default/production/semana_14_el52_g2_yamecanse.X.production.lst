

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 17 20:39:49 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _LATD	set	3980
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTD	set	3971
    75  0000                     _LATDbits	set	3980
    76  0000                     _TRISBbits	set	3987
    77  0000                     _TRISCbits	set	3988
    78  0000                     _TRISD	set	3989
    79  0000                     _CCP1CON	set	4029
    80  0000                     _CCPR1L	set	4030
    81  0000                     _ADCON1	set	4033
    82  0000                     _OSCCON	set	4051
    83  0000                     _LATBbits	set	3978
    84  0000                     _LATCbits	set	3979
    85  0000                     _INTCON2bits	set	4081
    86  0000                     _INTCONbits	set	4082
    87  0000                     _T2CON	set	4042
    88  0000                     _PR2	set	4043
    89                           
    90                           	psect	smallconst
    91  000800                     __psmallconst:
    92                           	callstack 0
    93  000800  00                 	db	0
    94  000801                     STR_1:
    95  000801  53                 	db	83	;'S'
    96  000802  65                 	db	101	;'e'
    97  000803  6D                 	db	109	;'m'
    98  000804  31                 	db	49	;'1'
    99  000805  34                 	db	52	;'4'
   100  000806  20                 	db	32
   101  000807  41                 	db	65	;'A'
   102  000808  55                 	db	85	;'U'
   103  000809  58                 	db	88	;'X'
   104  00080A  49                 	db	73	;'I'
   105  00080B  4C                 	db	76	;'L'
   106  00080C  49                 	db	73	;'I'
   107  00080D  4F                 	db	79	;'O'
   108  00080E  21                 	db	33
   109  00080F  00                 	db	0
   110  000810                     STR_3:
   111  000810  43                 	db	67	;'C'
   112  000811  20                 	db	32
   113  000812  52                 	db	82	;'R'
   114  000813  48                 	db	72	;'H'
   115  000814  3A                 	db	58	;':'
   116  000815  00                 	db	0
   117  000816                     STR_5:
   118  000816  20                 	db	32
   119  000817  4F                 	db	79	;'O'
   120  000818  4B                 	db	75	;'K'
   121  000819  00                 	db	0
   122  00081A                     STR_4:
   123  00081A  20                 	db	32
   124  00081B  45                 	db	69	;'E'
   125  00081C  52                 	db	82	;'R'
   126  00081D  00                 	db	0
   127  00081E                     STR_2:
   128  00081E  54                 	db	84	;'T'
   129  00081F  3A                 	db	58	;':'
   130  000820  00                 	db	0
   131  000821  00                 	db	0	; dummy byte at the end
   132  0000                     
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136  000EE8                     __pcinit:
   137                           	callstack 0
   138  000EE8                     start_initialization:
   139                           	callstack 0
   140  000EE8                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Clear objects allocated to COMRAM (9 bytes)
   144  000EE8  EE00  F016         	lfsr	0,__pbssCOMRAM
   145  000EEC  0E09               	movlw	9
   146  000EEE                     clear_0:
   147  000EEE  6AEE               	clrf	postinc0,c
   148  000EF0  06E8               	decf	wreg,f,c
   149  000EF2  E1FD               	bnz	clear_0
   150  000EF4                     end_of_initialization:
   151                           	callstack 0
   152  000EF4                     __end_of__initialization:
   153                           	callstack 0
   154  000EF4  901F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   155  000EF6  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   156  000EF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   157  000EFA  6EF8               	movwf	tblptru,c
   158  000EFC  0100               	movlb	0
   159  000EFE  EF11  F004         	goto	_main	;jump to C main() function
   160                           
   161                           	psect	bssCOMRAM
   162  000016                     __pbssCOMRAM:
   163                           	callstack 0
   164  000016                     _unidad:
   165                           	callstack 0
   166  000016                     	ds	1
   167  000017                     _decena:
   168                           	callstack 0
   169  000017                     	ds	1
   170  000018                     _centena:
   171                           	callstack 0
   172  000018                     	ds	1
   173  000019                     _Checksum:
   174                           	callstack 0
   175  000019                     	ds	1
   176  00001A                     _T_Integer:
   177                           	callstack 0
   178  00001A                     	ds	1
   179  00001B                     _T_Decimal:
   180                           	callstack 0
   181  00001B                     	ds	1
   182  00001C                     _RH_Integer:
   183                           	callstack 0
   184  00001C                     	ds	1
   185  00001D                     _RH_Decimal:
   186                           	callstack 0
   187  00001D                     	ds	1
   188  00001E                     _estado_backlight:
   189                           	callstack 0
   190  00001E                     	ds	1
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	callstack 0
   195  000001                     ??_INT0_ISR:
   196  000001                     
   197                           ; 2 bytes @ 0x0
   198  000001                     	ds	2
   199  000003                     ??_DHT11_Start:
   200  000003                     ?_strlen:
   201                           	callstack 0
   202  000003                     ?___awmod:
   203                           	callstack 0
   204  000003                     ENVIA_NIBBLE@dato:
   205                           	callstack 0
   206  000003                     LEER_LCD@aux:
   207                           	callstack 0
   208  000003                     DHT11_ReadData@i:
   209                           	callstack 0
   210  000003                     ___awmod@dividend:
   211                           	callstack 0
   212  000003                     strlen@s:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0x2
   216  000003                     	ds	1
   217  000004                     ENVIA_CHAR@dato:
   218                           	callstack 0
   219  000004                     ENVIA_LCD_CMD@dato:
   220                           	callstack 0
   221  000004                     DHT11_ReadData@data:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x3
   225  000004                     	ds	1
   226  000005                     ENVIA_CHAR@aux:
   227                           	callstack 0
   228  000005                     ENVIA_LCD_CMD@aux:
   229                           	callstack 0
   230  000005                     ___awmod@divisor:
   231                           	callstack 0
   232  000005                     strlen@a:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x4
   236  000005                     	ds	1
   237  000006                     ??_LCD_CONFIG:
   238  000006                     POS_CURSOR@columna:
   239                           	callstack 0
   240  000006                     CURSOR_ONOFF@estado:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x5
   244  000006                     	ds	1
   245  000007                     ??_init_LCD:
   246  000007                     POS_CURSOR@fila:
   247                           	callstack 0
   248  000007                     ___awmod@counter:
   249                           	callstack 0
   250  000007                     ESCRIBE_MENSAJE@cadena:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x6
   254  000007                     	ds	1
   255  000008                     ___awmod@sign:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x7
   259  000008                     	ds	1
   260  000009                     ??_ESCRIBE_MENSAJE:
   261  000009                     ?___awdiv:
   262                           	callstack 0
   263  000009                     ___awdiv@dividend:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x8
   267  000009                     	ds	2
   268  00000B                     ESCRIBE_MENSAJE@tam:
   269                           	callstack 0
   270  00000B                     ___awdiv@divisor:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xA
   274  00000B                     	ds	1
   275  00000C                     ESCRIBE_MENSAJE@i:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0xB
   279  00000C                     	ds	1
   280  00000D                     ___awdiv@counter:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0xC
   284  00000D                     	ds	1
   285  00000E                     ___awdiv@sign:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0xD
   289  00000E                     	ds	1
   290  00000F                     ___awdiv@quotient:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xE
   294  00000F                     	ds	2
   295  000011                     convierte@numero:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x10
   299  000011                     	ds	1
   300  000012                     ??_main:
   301                           
   302                           ; 1 bytes @ 0x11
   303  000012                     	ds	4
   304                           
   305 ;;
   306 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   307 ;;
   308 ;; *************** function _main *****************
   309 ;; Defined at:
   310 ;;		line 75 in file "maincode02.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   324 ;;      Params:         0       0       0       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0       0       0
   326 ;;      Temps:          4       0       0       0       0       0       0       0       0
   327 ;;      Totals:         4       0       0       0       0       0       0       0       0
   328 ;;Total ram usage:        4 bytes
   329 ;; Hardware stack levels required when called: 5
   330 ;; This function calls:
   331 ;;		_DHT11_CheckResponse
   332 ;;		_DHT11_ReadData
   333 ;;		_DHT11_Start
   334 ;;		_ENVIA_CHAR
   335 ;;		_ESCRIBE_MENSAJE
   336 ;;		_POS_CURSOR
   337 ;;		_configuro
   338 ;;		_convierte
   339 ;;		_init_LCD
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text0
   346  000822                     __ptext0:
   347                           	callstack 0
   348  000822                     _main:
   349                           	callstack 26
   350  000822                     
   351                           ;maincode02.c: 76:     configuro();
   352  000822  EC42  F007         	call	_configuro	;wreg free
   353  000826                     
   354                           ;maincode02.c: 77:     init_LCD();
   355  000826  EC2E  F007         	call	_init_LCD	;wreg free
   356  00082A                     
   357                           ;maincode02.c: 78:     POS_CURSOR(1,0);
   358  00082A  0E00               	movlw	0
   359  00082C  6E06               	movwf	POS_CURSOR@columna^0,c
   360  00082E  0E01               	movlw	1
   361  000830  EC92  F006         	call	_POS_CURSOR
   362  000834                     
   363                           ;maincode02.c: 79:     ESCRIBE_MENSAJE("Sem14 AUXILIO!");
   364  000834  0E01               	movlw	low STR_1
   365  000836  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   366  000838  0E08               	movlw	high STR_1
   367  00083A  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   368  00083C  EC6D  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   369  000840                     
   370                           ;maincode02.c: 80:     _delay((unsigned long)((500)*(8000000UL/4000.0)));
   371  000840  0E06               	movlw	6
   372  000842  6E13               	movwf	(??_main+1)^0,c
   373  000844  0E13               	movlw	19
   374  000846  6E12               	movwf	??_main^0,c
   375  000848  0EAE               	movlw	174
   376  00084A                     u517:
   377  00084A  2EE8               	decfsz	wreg,f,c
   378  00084C  D7FE               	bra	u517
   379  00084E  2E12               	decfsz	??_main^0,f,c
   380  000850  D7FC               	bra	u517
   381  000852  2E13               	decfsz	(??_main+1)^0,f,c
   382  000854  D7FA               	bra	u517
   383  000856                     l1417:
   384                           
   385                           ;maincode02.c: 82:         DHT11_Start();
   386  000856  EC56  F007         	call	_DHT11_Start	;wreg free
   387  00085A                     
   388                           ;maincode02.c: 83:         DHT11_CheckResponse();
   389  00085A  EC18  F007         	call	_DHT11_CheckResponse	;wreg free
   390  00085E                     
   391                           ;maincode02.c: 84:         RH_Integer = DHT11_ReadData();
   392  00085E  EC12  F006         	call	_DHT11_ReadData	;wreg free
   393  000862  6E1C               	movwf	_RH_Integer^0,c
   394  000864                     
   395                           ;maincode02.c: 85:         RH_Decimal = DHT11_ReadData();
   396  000864  EC12  F006         	call	_DHT11_ReadData	;wreg free
   397  000868  6E1D               	movwf	_RH_Decimal^0,c
   398  00086A                     
   399                           ;maincode02.c: 86:         T_Integer = DHT11_ReadData();
   400  00086A  EC12  F006         	call	_DHT11_ReadData	;wreg free
   401  00086E  6E1A               	movwf	_T_Integer^0,c
   402  000870                     
   403                           ;maincode02.c: 87:         T_Decimal = DHT11_ReadData();
   404  000870  EC12  F006         	call	_DHT11_ReadData	;wreg free
   405  000874  6E1B               	movwf	_T_Decimal^0,c
   406  000876                     
   407                           ;maincode02.c: 88:         Checksum = DHT11_ReadData();
   408  000876  EC12  F006         	call	_DHT11_ReadData	;wreg free
   409  00087A  6E19               	movwf	_Checksum^0,c
   410  00087C                     
   411                           ;maincode02.c: 89:         POS_CURSOR(2,0);
   412  00087C  0E00               	movlw	0
   413  00087E  6E06               	movwf	POS_CURSOR@columna^0,c
   414  000880  0E02               	movlw	2
   415  000882  EC92  F006         	call	_POS_CURSOR
   416  000886                     
   417                           ;maincode02.c: 90:         convierte(T_Integer);
   418  000886  501A               	movf	_T_Integer^0,w,c
   419  000888  EC40  F006         	call	_convierte
   420  00088C                     
   421                           ;maincode02.c: 91:         ESCRIBE_MENSAJE("T:");
   422  00088C  0E1E               	movlw	low STR_2
   423  00088E  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   424  000890  0E08               	movlw	high STR_2
   425  000892  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   426  000894  EC6D  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   427  000898                     
   428                           ;maincode02.c: 92:         ENVIA_CHAR(decena+'0');
   429  000898  5017               	movf	_decena^0,w,c
   430  00089A  0F30               	addlw	48
   431  00089C  ECE6  F006         	call	_ENVIA_CHAR
   432  0008A0                     
   433                           ;maincode02.c: 93:         ENVIA_CHAR(unidad+'0');
   434  0008A0  5016               	movf	_unidad^0,w,c
   435  0008A2  0F30               	addlw	48
   436  0008A4  ECE6  F006         	call	_ENVIA_CHAR
   437  0008A8                     
   438                           ;maincode02.c: 94:         ENVIA_CHAR(0xDF);
   439  0008A8  0EDF               	movlw	223
   440  0008AA  ECE6  F006         	call	_ENVIA_CHAR
   441  0008AE                     
   442                           ;maincode02.c: 95:         convierte(RH_Integer);
   443  0008AE  501C               	movf	_RH_Integer^0,w,c
   444  0008B0  EC40  F006         	call	_convierte
   445  0008B4                     
   446                           ;maincode02.c: 96:         ESCRIBE_MENSAJE("C RH:");
   447  0008B4  0E10               	movlw	low STR_3
   448  0008B6  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   449  0008B8  0E08               	movlw	high STR_3
   450  0008BA  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   451  0008BC  EC6D  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   452  0008C0                     
   453                           ;maincode02.c: 97:         ENVIA_CHAR(decena+'0');
   454  0008C0  5017               	movf	_decena^0,w,c
   455  0008C2  0F30               	addlw	48
   456  0008C4  ECE6  F006         	call	_ENVIA_CHAR
   457  0008C8                     
   458                           ;maincode02.c: 98:         ENVIA_CHAR(unidad+'0');
   459  0008C8  5016               	movf	_unidad^0,w,c
   460  0008CA  0F30               	addlw	48
   461  0008CC  ECE6  F006         	call	_ENVIA_CHAR
   462  0008D0                     
   463                           ;maincode02.c: 99:         ENVIA_CHAR('%');
   464  0008D0  0E25               	movlw	37
   465  0008D2  ECE6  F006         	call	_ENVIA_CHAR
   466  0008D6                     
   467                           ;maincode02.c: 100:         if(Checksum != (RH_Integer+RH_Decimal+T_Integer+T_Decimal)){
   468  0008D6  5019               	movf	_Checksum^0,w,c
   469  0008D8  6E12               	movwf	??_main^0,c
   470  0008DA  6A13               	clrf	(??_main+1)^0,c
   471  0008DC  501D               	movf	_RH_Decimal^0,w,c
   472  0008DE  C01C  F014         	movff	_RH_Integer,??_main+2
   473  0008E2  6A15               	clrf	(??_main+3)^0,c
   474  0008E4  2614               	addwf	(??_main+2)^0,f,c
   475  0008E6  0E00               	movlw	0
   476  0008E8  2215               	addwfc	(??_main+3)^0,f,c
   477  0008EA  501A               	movf	_T_Integer^0,w,c
   478  0008EC  2614               	addwf	(??_main+2)^0,f,c
   479  0008EE  0E00               	movlw	0
   480  0008F0  2215               	addwfc	(??_main+3)^0,f,c
   481  0008F2  501B               	movf	_T_Decimal^0,w,c
   482  0008F4  2614               	addwf	(??_main+2)^0,f,c
   483  0008F6  0E00               	movlw	0
   484  0008F8  2215               	addwfc	(??_main+3)^0,f,c
   485  0008FA  5012               	movf	??_main^0,w,c
   486  0008FC  1814               	xorwf	(??_main+2)^0,w,c
   487  0008FE  E109               	bnz	u500
   488  000900  5013               	movf	(??_main+1)^0,w,c
   489  000902  1815               	xorwf	(??_main+3)^0,w,c
   490  000904  B4D8               	btfsc	status,2,c
   491  000906  EF87  F004         	goto	u501
   492  00090A  EF89  F004         	goto	u500
   493  00090E                     u501:
   494  00090E  EF91  F004         	goto	l1457
   495  000912                     u500:
   496  000912                     
   497                           ;maincode02.c: 101:             ESCRIBE_MENSAJE(" ER");
   498  000912  0E1A               	movlw	low STR_4
   499  000914  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   500  000916  0E08               	movlw	high STR_4
   501  000918  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   502  00091A  EC6D  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   503                           
   504                           ;maincode02.c: 102:         }
   505  00091E  EF97  F004         	goto	l1459
   506  000922                     l1457:
   507                           
   508                           ;maincode02.c: 104:             ESCRIBE_MENSAJE(" OK");
   509  000922  0E16               	movlw	low STR_5
   510  000924  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   511  000926  0E08               	movlw	high STR_5
   512  000928  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   513  00092A  EC6D  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   514  00092E                     l1459:
   515                           
   516                           ;maincode02.c: 106:         _delay((unsigned long)((1500)*(8000000UL/4000.0)));
   517  00092E  0E10               	movlw	16
   518  000930  6E13               	movwf	(??_main+1)^0,c
   519  000932  0E39               	movlw	57
   520  000934  6E12               	movwf	??_main^0,c
   521  000936  0E0E               	movlw	14
   522  000938                     u527:
   523  000938  2EE8               	decfsz	wreg,f,c
   524  00093A  D7FE               	bra	u527
   525  00093C  2E12               	decfsz	??_main^0,f,c
   526  00093E  D7FC               	bra	u527
   527  000940  2E13               	decfsz	(??_main+1)^0,f,c
   528  000942  D7FA               	bra	u527
   529  000944  EF2B  F004         	goto	l1417
   530  000948  EF07  F000         	goto	start
   531  00094C                     __end_of_main:
   532                           	callstack 0
   533                           
   534 ;; *************** function _init_LCD *****************
   535 ;; Defined at:
   536 ;;		line 28 in file "maincode02.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  2  143[None  ] int 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   550 ;;      Params:         0       0       0       0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0       0       0
   552 ;;      Temps:          1       0       0       0       0       0       0       0       0
   553 ;;      Totals:         1       0       0       0       0       0       0       0       0
   554 ;;Total ram usage:        1 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 4
   557 ;; This function calls:
   558 ;;		_BORRAR_LCD
   559 ;;		_CURSOR_HOME
   560 ;;		_CURSOR_ONOFF
   561 ;;		_LCD_CONFIG
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text1
   568  000E5C                     __ptext1:
   569                           	callstack 0
   570  000E5C                     _init_LCD:
   571                           	callstack 26
   572  000E5C                     
   573                           ;maincode02.c: 29:     TRISD = 0x00;
   574  000E5C  0E00               	movlw	0
   575  000E5E  6E95               	movwf	149,c	;volatile
   576  000E60                     
   577                           ;maincode02.c: 30:     LCD_CONFIG();
   578  000E60  ECE2  F005         	call	_LCD_CONFIG	;wreg free
   579  000E64                     
   580                           ;maincode02.c: 31:     _delay((unsigned long)((21)*(8000000UL/4000.0)));
   581  000E64  0E37               	movlw	55
   582  000E66  6E07               	movwf	??_init_LCD^0,c
   583  000E68  0E8A               	movlw	138
   584  000E6A                     u537:
   585  000E6A  2EE8               	decfsz	wreg,f,c
   586  000E6C  D7FE               	bra	u537
   587  000E6E  2E07               	decfsz	??_init_LCD^0,f,c
   588  000E70  D7FC               	bra	u537
   589  000E72  D000               	nop2	
   590  000E74                     
   591                           ;maincode02.c: 32:     BORRAR_LCD();
   592  000E74  EC85  F007         	call	_BORRAR_LCD	;wreg free
   593  000E78                     
   594                           ;maincode02.c: 33:     CURSOR_HOME();
   595  000E78  EC81  F007         	call	_CURSOR_HOME	;wreg free
   596  000E7C                     
   597                           ;maincode02.c: 34:     CURSOR_ONOFF(1);
   598  000E7C  0E01               	movlw	1
   599  000E7E  EC00  F007         	call	_CURSOR_ONOFF
   600  000E82  0012               	return		;funcret
   601  000E84                     __end_of_init_LCD:
   602                           	callstack 0
   603                           
   604 ;; *************** function _LCD_CONFIG *****************
   605 ;; Defined at:
   606 ;;		line 76 in file "LCD.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0
   623 ;;      Totals:         1       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        1 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 3
   627 ;; This function calls:
   628 ;;		_ENVIA_LCD_CMD
   629 ;;		_ENVIA_NIBBLE
   630 ;; This function is called by:
   631 ;;		_init_LCD
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636  000BC4                     __ptext2:
   637                           	callstack 0
   638  000BC4                     _LCD_CONFIG:
   639                           	callstack 26
   640  000BC4                     
   641                           ;LCD.c: 78:  LATDbits.LATD0 = 0;
   642  000BC4  908C               	bcf	140,0,c	;volatile
   643                           
   644                           ;LCD.c: 79:  LATDbits.LATD1 = 0;
   645  000BC6  928C               	bcf	140,1,c	;volatile
   646  000BC8                     
   647                           ;LCD.c: 80:  ENVIA_NIBBLE(0x30);
   648  000BC8  0E30               	movlw	48
   649  000BCA  EC66  F007         	call	_ENVIA_NIBBLE
   650  000BCE                     
   651                           ;LCD.c: 81:         _delay(24000);
   652  000BCE  0E20               	movlw	32
   653  000BD0  6E06               	movwf	??_LCD_CONFIG^0,c
   654  000BD2  0E2A               	movlw	42
   655  000BD4                     u547:
   656  000BD4  2EE8               	decfsz	wreg,f,c
   657  000BD6  D7FE               	bra	u547
   658  000BD8  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   659  000BDA  D7FC               	bra	u547
   660  000BDC                     
   661                           ;LCD.c: 82:         _delay(24000);
   662  000BDC  0E20               	movlw	32
   663  000BDE  6E06               	movwf	??_LCD_CONFIG^0,c
   664  000BE0  0E2A               	movlw	42
   665  000BE2                     u557:
   666  000BE2  2EE8               	decfsz	wreg,f,c
   667  000BE4  D7FE               	bra	u557
   668  000BE6  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   669  000BE8  D7FC               	bra	u557
   670                           
   671                           ;LCD.c: 85:  ENVIA_NIBBLE(0x30);
   672  000BEA  0E30               	movlw	48
   673  000BEC  EC66  F007         	call	_ENVIA_NIBBLE
   674  000BF0                     
   675                           ;LCD.c: 87:  _delay(1200);
   676  000BF0  0EF0               	movlw	240
   677  000BF2                     u567:
   678  000BF2  D000               	nop2	
   679  000BF4  2EE8               	decfsz	wreg,f,c
   680  000BF6  D7FD               	bra	u567
   681  000BF8                     
   682                           ;LCD.c: 88:         ENVIA_NIBBLE(0x30);
   683  000BF8  0E30               	movlw	48
   684  000BFA  EC66  F007         	call	_ENVIA_NIBBLE
   685  000BFE                     
   686                           ;LCD.c: 89:  ENVIA_NIBBLE(0x20);
   687  000BFE  0E20               	movlw	32
   688  000C00  EC66  F007         	call	_ENVIA_NIBBLE
   689  000C04                     
   690                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   691  000C04  0E01               	movlw	1
   692  000C06  ECCC  F006         	call	_ENVIA_LCD_CMD
   693  000C0A                     
   694                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x28);
   695  000C0A  0E28               	movlw	40
   696  000C0C  ECCC  F006         	call	_ENVIA_LCD_CMD
   697  000C10                     
   698                           ;LCD.c: 92:  ENVIA_LCD_CMD(0x0F);
   699  000C10  0E0F               	movlw	15
   700  000C12  ECCC  F006         	call	_ENVIA_LCD_CMD
   701  000C16                     
   702                           ;LCD.c: 93:  ENVIA_LCD_CMD(0x06);
   703  000C16  0E06               	movlw	6
   704  000C18  ECCC  F006         	call	_ENVIA_LCD_CMD
   705  000C1C                     
   706                           ;LCD.c: 94:  ENVIA_LCD_CMD(0x01);
   707  000C1C  0E01               	movlw	1
   708  000C1E  ECCC  F006         	call	_ENVIA_LCD_CMD
   709  000C22  0012               	return		;funcret
   710  000C24                     __end_of_LCD_CONFIG:
   711                           	callstack 0
   712                           
   713 ;; *************** function _CURSOR_ONOFF *****************
   714 ;; Defined at:
   715 ;;		line 37 in file "LCD.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  estado          1    wreg     unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  estado          1    5[COMRAM] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   729 ;;      Params:         0       0       0       0       0       0       0       0       0
   730 ;;      Locals:         1       0       0       0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0       0       0
   732 ;;      Totals:         1       0       0       0       0       0       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 3
   736 ;; This function calls:
   737 ;;		_ENVIA_LCD_CMD
   738 ;; This function is called by:
   739 ;;		_init_LCD
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744  000E00                     __ptext3:
   745                           	callstack 0
   746  000E00                     _CURSOR_ONOFF:
   747                           	callstack 26
   748                           
   749                           ;incstack = 0
   750                           ;CURSOR_ONOFF@estado stored from wreg
   751  000E00  6E06               	movwf	CURSOR_ONOFF@estado^0,c
   752  000E02                     
   753                           ;LCD.c: 37: void CURSOR_ONOFF(unsigned char estado);LCD.c: 38: {;LCD.c: 39:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   754  000E02  5006               	movf	CURSOR_ONOFF@estado^0,w,c
   755  000E04  A4D8               	btfss	status,2,c
   756  000E06  EF07  F007         	goto	u21
   757  000E0A  EF09  F007         	goto	u20
   758  000E0E                     u21:
   759  000E0E  EF0C  F007         	goto	l955
   760  000E12                     u20:
   761  000E12  0E0E               	movlw	14
   762  000E14  ECCC  F006         	call	_ENVIA_LCD_CMD
   763  000E18                     l955:
   764                           
   765                           ;LCD.c: 40:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   766  000E18  0406               	decf	CURSOR_ONOFF@estado^0,w,c
   767  000E1A  A4D8               	btfss	status,2,c
   768  000E1C  EF12  F007         	goto	u31
   769  000E20  EF14  F007         	goto	u30
   770  000E24                     u31:
   771  000E24  EF17  F007         	goto	l44
   772  000E28                     u30:
   773  000E28  0E0C               	movlw	12
   774  000E2A  ECCC  F006         	call	_ENVIA_LCD_CMD
   775  000E2E                     l44:
   776  000E2E  0012               	return		;funcret
   777  000E30                     __end_of_CURSOR_ONOFF:
   778                           	callstack 0
   779                           
   780 ;; *************** function _CURSOR_HOME *****************
   781 ;; Defined at:
   782 ;;		line 32 in file "LCD.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used: 1
   802 ;; Hardware stack levels required when called: 3
   803 ;; This function calls:
   804 ;;		_ENVIA_LCD_CMD
   805 ;; This function is called by:
   806 ;;		_init_LCD
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text4
   811  000F02                     __ptext4:
   812                           	callstack 0
   813  000F02                     _CURSOR_HOME:
   814                           	callstack 26
   815  000F02                     
   816                           ;LCD.c: 34:  ENVIA_LCD_CMD(0x02);
   817  000F02  0E02               	movlw	2
   818  000F04  ECCC  F006         	call	_ENVIA_LCD_CMD
   819  000F08  0012               	return		;funcret
   820  000F0A                     __end_of_CURSOR_HOME:
   821                           	callstack 0
   822                           
   823 ;; *************** function _BORRAR_LCD *****************
   824 ;; Defined at:
   825 ;;		line 71 in file "LCD.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2, status,0, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   839 ;;      Params:         0       0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used: 1
   845 ;; Hardware stack levels required when called: 3
   846 ;; This function calls:
   847 ;;		_ENVIA_LCD_CMD
   848 ;; This function is called by:
   849 ;;		_init_LCD
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text5
   854  000F0A                     __ptext5:
   855                           	callstack 0
   856  000F0A                     _BORRAR_LCD:
   857                           	callstack 26
   858  000F0A                     
   859                           ;LCD.c: 73:  ENVIA_LCD_CMD(0x01);
   860  000F0A  0E01               	movlw	1
   861  000F0C  ECCC  F006         	call	_ENVIA_LCD_CMD
   862  000F10  0012               	return		;funcret
   863  000F12                     __end_of_BORRAR_LCD:
   864                           	callstack 0
   865                           
   866 ;; *************** function _convierte *****************
   867 ;; Defined at:
   868 ;;		line 69 in file "maincode02.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  numero          1    wreg     unsigned char 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  numero          1   16[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         1       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 2
   889 ;; This function calls:
   890 ;;		___awdiv
   891 ;;		___awmod
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text6
   898  000C80                     __ptext6:
   899                           	callstack 0
   900  000C80                     _convierte:
   901                           	callstack 28
   902                           
   903                           ;incstack = 0
   904                           ;convierte@numero stored from wreg
   905  000C80  6E11               	movwf	convierte@numero^0,c
   906  000C82                     
   907                           ;maincode02.c: 70:     centena = numero / 100;
   908  000C82  C011  F009         	movff	convierte@numero,___awdiv@dividend
   909  000C86  6A0A               	clrf	(___awdiv@dividend+1)^0,c
   910  000C88  0E00               	movlw	0
   911  000C8A  6E0C               	movwf	(___awdiv@divisor+1)^0,c
   912  000C8C  0E64               	movlw	100
   913  000C8E  6E0B               	movwf	___awdiv@divisor^0,c
   914  000C90  ECA6  F004         	call	___awdiv	;wreg free
   915  000C94  5009               	movf	?___awdiv^0,w,c
   916  000C96  6E18               	movwf	_centena^0,c
   917                           
   918                           ;maincode02.c: 71:     decena = (numero % 100) / 10;
   919  000C98  0E00               	movlw	0
   920  000C9A  6E06               	movwf	(___awmod@divisor+1)^0,c
   921  000C9C  0E64               	movlw	100
   922  000C9E  6E05               	movwf	___awmod@divisor^0,c
   923  000CA0  C011  F003         	movff	convierte@numero,___awmod@dividend
   924  000CA4  6A04               	clrf	(___awmod@dividend+1)^0,c
   925  000CA6  EC08  F005         	call	___awmod	;wreg free
   926  000CAA  C003  F009         	movff	?___awmod,___awdiv@dividend
   927  000CAE  C004  F00A         	movff	?___awmod+1,___awdiv@dividend+1
   928  000CB2  0E00               	movlw	0
   929  000CB4  6E0C               	movwf	(___awdiv@divisor+1)^0,c
   930  000CB6  0E0A               	movlw	10
   931  000CB8  6E0B               	movwf	___awdiv@divisor^0,c
   932  000CBA  ECA6  F004         	call	___awdiv	;wreg free
   933  000CBE  5009               	movf	?___awdiv^0,w,c
   934  000CC0  6E17               	movwf	_decena^0,c
   935                           
   936                           ;maincode02.c: 72:     unidad = numero % 10;
   937  000CC2  C011  F003         	movff	convierte@numero,___awmod@dividend
   938  000CC6  6A04               	clrf	(___awmod@dividend+1)^0,c
   939  000CC8  0E00               	movlw	0
   940  000CCA  6E06               	movwf	(___awmod@divisor+1)^0,c
   941  000CCC  0E0A               	movlw	10
   942  000CCE  6E05               	movwf	___awmod@divisor^0,c
   943  000CD0  EC08  F005         	call	___awmod	;wreg free
   944  000CD4  5003               	movf	?___awmod^0,w,c
   945  000CD6  6E16               	movwf	_unidad^0,c
   946  000CD8  0012               	return		;funcret
   947  000CDA                     __end_of_convierte:
   948                           	callstack 0
   949                           
   950 ;; *************** function ___awmod *****************
   951 ;; Defined at:
   952 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  dividend        2    2[COMRAM] int 
   955 ;;  divisor         2    4[COMRAM] int 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  sign            1    7[COMRAM] unsigned char 
   958 ;;  counter         1    6[COMRAM] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  2    2[COMRAM] int 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         4       0       0       0       0       0       0       0       0
   969 ;;      Locals:         2       0       0       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0
   971 ;;      Totals:         6       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:        6 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 1
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_convierte
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text7
   983  000A10                     __ptext7:
   984                           	callstack 0
   985  000A10                     ___awmod:
   986                           	callstack 28
   987  000A10  0E00               	movlw	0
   988  000A12  6E08               	movwf	___awmod@sign^0,c
   989  000A14  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
   990  000A16  EF11  F005         	goto	u410
   991  000A1A  EF0F  F005         	goto	u411
   992  000A1E                     u411:
   993  000A1E  EF17  F005         	goto	l1357
   994  000A22                     u410:
   995  000A22  6C03               	negf	___awmod@dividend^0,c
   996  000A24  1E04               	comf	(___awmod@dividend+1)^0,f,c
   997  000A26  B0D8               	btfsc	status,0,c
   998  000A28  2A04               	incf	(___awmod@dividend+1)^0,f,c
   999  000A2A  0E01               	movlw	1
  1000  000A2C  6E08               	movwf	___awmod@sign^0,c
  1001  000A2E                     l1357:
  1002  000A2E  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  1003  000A30  EF1E  F005         	goto	u420
  1004  000A34  EF1C  F005         	goto	u421
  1005  000A38                     u421:
  1006  000A38  EF22  F005         	goto	l1361
  1007  000A3C                     u420:
  1008  000A3C  6C05               	negf	___awmod@divisor^0,c
  1009  000A3E  1E06               	comf	(___awmod@divisor+1)^0,f,c
  1010  000A40  B0D8               	btfsc	status,0,c
  1011  000A42  2A06               	incf	(___awmod@divisor+1)^0,f,c
  1012  000A44                     l1361:
  1013  000A44  5005               	movf	___awmod@divisor^0,w,c
  1014  000A46  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  1015  000A48  B4D8               	btfsc	status,2,c
  1016  000A4A  EF29  F005         	goto	u431
  1017  000A4E  EF2B  F005         	goto	u430
  1018  000A52                     u431:
  1019  000A52  EF4F  F005         	goto	l1377
  1020  000A56                     u430:
  1021  000A56  0E01               	movlw	1
  1022  000A58  6E07               	movwf	___awmod@counter^0,c
  1023  000A5A  EF33  F005         	goto	l1367
  1024  000A5E                     l1365:
  1025  000A5E  90D8               	bcf	status,0,c
  1026  000A60  3605               	rlcf	___awmod@divisor^0,f,c
  1027  000A62  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  1028  000A64  2A07               	incf	___awmod@counter^0,f,c
  1029  000A66                     l1367:
  1030  000A66  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  1031  000A68  EF38  F005         	goto	u441
  1032  000A6C  EF3A  F005         	goto	u440
  1033  000A70                     u441:
  1034  000A70  EF2F  F005         	goto	l1365
  1035  000A74                     u440:
  1036  000A74                     l1369:
  1037  000A74  5005               	movf	___awmod@divisor^0,w,c
  1038  000A76  5C03               	subwf	___awmod@dividend^0,w,c
  1039  000A78  5006               	movf	(___awmod@divisor+1)^0,w,c
  1040  000A7A  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  1041  000A7C  A0D8               	btfss	status,0,c
  1042  000A7E  EF43  F005         	goto	u451
  1043  000A82  EF45  F005         	goto	u450
  1044  000A86                     u451:
  1045  000A86  EF49  F005         	goto	l1373
  1046  000A8A                     u450:
  1047  000A8A  5005               	movf	___awmod@divisor^0,w,c
  1048  000A8C  5E03               	subwf	___awmod@dividend^0,f,c
  1049  000A8E  5006               	movf	(___awmod@divisor+1)^0,w,c
  1050  000A90  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  1051  000A92                     l1373:
  1052  000A92  90D8               	bcf	status,0,c
  1053  000A94  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  1054  000A96  3205               	rrcf	___awmod@divisor^0,f,c
  1055  000A98  2E07               	decfsz	___awmod@counter^0,f,c
  1056  000A9A  EF3A  F005         	goto	l1369
  1057  000A9E                     l1377:
  1058  000A9E  5008               	movf	___awmod@sign^0,w,c
  1059  000AA0  B4D8               	btfsc	status,2,c
  1060  000AA2  EF55  F005         	goto	u461
  1061  000AA6  EF57  F005         	goto	u460
  1062  000AAA                     u461:
  1063  000AAA  EF5B  F005         	goto	l1381
  1064  000AAE                     u460:
  1065  000AAE  6C03               	negf	___awmod@dividend^0,c
  1066  000AB0  1E04               	comf	(___awmod@dividend+1)^0,f,c
  1067  000AB2  B0D8               	btfsc	status,0,c
  1068  000AB4  2A04               	incf	(___awmod@dividend+1)^0,f,c
  1069  000AB6                     l1381:
  1070  000AB6  C003  F003         	movff	___awmod@dividend,?___awmod
  1071  000ABA  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  1072  000ABE  0012               	return		;funcret
  1073  000AC0                     __end_of___awmod:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function ___awdiv *****************
  1077 ;; Defined at:
  1078 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  dividend        2    8[COMRAM] int 
  1081 ;;  divisor         2   10[COMRAM] int 
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;  quotient        2   14[COMRAM] int 
  1084 ;;  sign            1   13[COMRAM] unsigned char 
  1085 ;;  counter         1   12[COMRAM] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2    8[COMRAM] int 
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         4       0       0       0       0       0       0       0       0
  1096 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1098 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1099 ;;Total ram usage:        8 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_convierte
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text8
  1110  00094C                     __ptext8:
  1111                           	callstack 0
  1112  00094C                     ___awdiv:
  1113                           	callstack 28
  1114  00094C  0E00               	movlw	0
  1115  00094E  6E0E               	movwf	___awdiv@sign^0,c
  1116  000950  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
  1117  000952  EFAF  F004         	goto	u350
  1118  000956  EFAD  F004         	goto	u351
  1119  00095A                     u351:
  1120  00095A  EFB5  F004         	goto	l1313
  1121  00095E                     u350:
  1122  00095E  6C0B               	negf	___awdiv@divisor^0,c
  1123  000960  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
  1124  000962  B0D8               	btfsc	status,0,c
  1125  000964  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
  1126  000966  0E01               	movlw	1
  1127  000968  6E0E               	movwf	___awdiv@sign^0,c
  1128  00096A                     l1313:
  1129  00096A  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
  1130  00096C  EFBC  F004         	goto	u360
  1131  000970  EFBA  F004         	goto	u361
  1132  000974                     u361:
  1133  000974  EFC2  F004         	goto	l1319
  1134  000978                     u360:
  1135  000978  6C09               	negf	___awdiv@dividend^0,c
  1136  00097A  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
  1137  00097C  B0D8               	btfsc	status,0,c
  1138  00097E  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
  1139  000980  0E01               	movlw	1
  1140  000982  1A0E               	xorwf	___awdiv@sign^0,f,c
  1141  000984                     l1319:
  1142  000984  0E00               	movlw	0
  1143  000986  6E10               	movwf	(___awdiv@quotient+1)^0,c
  1144  000988  0E00               	movlw	0
  1145  00098A  6E0F               	movwf	___awdiv@quotient^0,c
  1146  00098C  500B               	movf	___awdiv@divisor^0,w,c
  1147  00098E  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
  1148  000990  B4D8               	btfsc	status,2,c
  1149  000992  EFCD  F004         	goto	u371
  1150  000996  EFCF  F004         	goto	u370
  1151  00099A                     u371:
  1152  00099A  EFF7  F004         	goto	l1341
  1153  00099E                     u370:
  1154  00099E  0E01               	movlw	1
  1155  0009A0  6E0D               	movwf	___awdiv@counter^0,c
  1156  0009A2  EFD7  F004         	goto	l1327
  1157  0009A6                     l1325:
  1158  0009A6  90D8               	bcf	status,0,c
  1159  0009A8  360B               	rlcf	___awdiv@divisor^0,f,c
  1160  0009AA  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
  1161  0009AC  2A0D               	incf	___awdiv@counter^0,f,c
  1162  0009AE                     l1327:
  1163  0009AE  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
  1164  0009B0  EFDC  F004         	goto	u381
  1165  0009B4  EFDE  F004         	goto	u380
  1166  0009B8                     u381:
  1167  0009B8  EFD3  F004         	goto	l1325
  1168  0009BC                     u380:
  1169  0009BC                     l1329:
  1170  0009BC  90D8               	bcf	status,0,c
  1171  0009BE  360F               	rlcf	___awdiv@quotient^0,f,c
  1172  0009C0  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
  1173  0009C2  500B               	movf	___awdiv@divisor^0,w,c
  1174  0009C4  5C09               	subwf	___awdiv@dividend^0,w,c
  1175  0009C6  500C               	movf	(___awdiv@divisor+1)^0,w,c
  1176  0009C8  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
  1177  0009CA  A0D8               	btfss	status,0,c
  1178  0009CC  EFEA  F004         	goto	u391
  1179  0009D0  EFEC  F004         	goto	u390
  1180  0009D4                     u391:
  1181  0009D4  EFF1  F004         	goto	l1337
  1182  0009D8                     u390:
  1183  0009D8  500B               	movf	___awdiv@divisor^0,w,c
  1184  0009DA  5E09               	subwf	___awdiv@dividend^0,f,c
  1185  0009DC  500C               	movf	(___awdiv@divisor+1)^0,w,c
  1186  0009DE  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
  1187  0009E0  800F               	bsf	___awdiv@quotient^0,0,c
  1188  0009E2                     l1337:
  1189  0009E2  90D8               	bcf	status,0,c
  1190  0009E4  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
  1191  0009E6  320B               	rrcf	___awdiv@divisor^0,f,c
  1192  0009E8  2E0D               	decfsz	___awdiv@counter^0,f,c
  1193  0009EA  EFDE  F004         	goto	l1329
  1194  0009EE                     l1341:
  1195  0009EE  500E               	movf	___awdiv@sign^0,w,c
  1196  0009F0  B4D8               	btfsc	status,2,c
  1197  0009F2  EFFD  F004         	goto	u401
  1198  0009F6  EFFF  F004         	goto	u400
  1199  0009FA                     u401:
  1200  0009FA  EF03  F005         	goto	l1345
  1201  0009FE                     u400:
  1202  0009FE  6C0F               	negf	___awdiv@quotient^0,c
  1203  000A00  1E10               	comf	(___awdiv@quotient+1)^0,f,c
  1204  000A02  B0D8               	btfsc	status,0,c
  1205  000A04  2A10               	incf	(___awdiv@quotient+1)^0,f,c
  1206  000A06                     l1345:
  1207  000A06  C00F  F009         	movff	___awdiv@quotient,?___awdiv
  1208  000A0A  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
  1209  000A0E  0012               	return		;funcret
  1210  000A10                     __end_of___awdiv:
  1211                           	callstack 0
  1212                           
  1213 ;; *************** function _configuro *****************
  1214 ;; Defined at:
  1215 ;;		line 12 in file "maincode02.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1229 ;;      Params:         0       0       0       0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 1
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text9
  1244  000E84                     __ptext9:
  1245                           	callstack 0
  1246  000E84                     _configuro:
  1247                           	callstack 29
  1248  000E84                     
  1249                           ;maincode02.c: 13:     OSCCON = 0x72;
  1250  000E84  0E72               	movlw	114
  1251  000E86  6ED3               	movwf	211,c	;volatile
  1252                           
  1253                           ;maincode02.c: 14:     ADCON1 = 0x0F;
  1254  000E88  0E0F               	movlw	15
  1255  000E8A  6EC1               	movwf	193,c	;volatile
  1256  000E8C                     
  1257                           ;maincode02.c: 15:     LATCbits.LC2 = 1;
  1258  000E8C  848B               	bsf	139,2,c	;volatile
  1259  000E8E                     
  1260                           ;maincode02.c: 16:     INTCONbits.GIE = 1;
  1261  000E8E  8EF2               	bsf	242,7,c	;volatile
  1262  000E90                     
  1263                           ;maincode02.c: 17:     INTCONbits.INT0IE = 1;
  1264  000E90  88F2               	bsf	242,4,c	;volatile
  1265  000E92                     
  1266                           ;maincode02.c: 18:     INTCON2bits.INTEDG0 = 0;
  1267  000E92  9CF1               	bcf	241,6,c	;volatile
  1268  000E94                     
  1269                           ;maincode02.c: 19:     INTCON2bits.RBPU = 0;
  1270  000E94  9EF1               	bcf	241,7,c	;volatile
  1271                           
  1272                           ;maincode02.c: 20:     PR2 = 62;
  1273  000E96  0E3E               	movlw	62
  1274  000E98  6ECB               	movwf	203,c	;volatile
  1275                           
  1276                           ;maincode02.c: 21:     CCPR1L = 15;
  1277  000E9A  0E0F               	movlw	15
  1278  000E9C  6EBE               	movwf	190,c	;volatile
  1279  000E9E                     
  1280                           ;maincode02.c: 22:     TRISCbits.RC2 = 0;
  1281  000E9E  9494               	bcf	148,2,c	;volatile
  1282                           
  1283                           ;maincode02.c: 23:     T2CON = 0x07;
  1284  000EA0  0E07               	movlw	7
  1285  000EA2  6ECA               	movwf	202,c	;volatile
  1286                           
  1287                           ;maincode02.c: 24:     CCP1CON = 0x0C;
  1288  000EA4  0E0C               	movlw	12
  1289  000EA6  6EBD               	movwf	189,c	;volatile
  1290  000EA8                     
  1291                           ;maincode02.c: 25:     LATBbits.LB5 = 1;
  1292  000EA8  8A8A               	bsf	138,5,c	;volatile
  1293  000EAA  0012               	return		;funcret
  1294  000EAC                     __end_of_configuro:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _POS_CURSOR *****************
  1298 ;; Defined at:
  1299 ;;		line 8 in file "LCD.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  fila            1    wreg     unsigned char 
  1302 ;;  columna         1    5[COMRAM] unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  fila            1    6[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 3
  1321 ;; This function calls:
  1322 ;;		_ENVIA_LCD_CMD
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text10
  1329  000D24                     __ptext10:
  1330                           	callstack 0
  1331  000D24                     _POS_CURSOR:
  1332                           	callstack 27
  1333                           
  1334                           ;incstack = 0
  1335                           ;POS_CURSOR@fila stored from wreg
  1336  000D24  6E07               	movwf	POS_CURSOR@fila^0,c
  1337  000D26                     
  1338                           ;LCD.c: 8: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 9: {;LCD.c: 
      +                          10:  if(fila == 1)
  1339  000D26  0407               	decf	POS_CURSOR@fila^0,w,c
  1340  000D28  A4D8               	btfss	status,2,c
  1341  000D2A  EF99  F006         	goto	u471
  1342  000D2E  EF9B  F006         	goto	u470
  1343  000D32                     u471:
  1344  000D32  EFA1  F006         	goto	l1389
  1345  000D36                     u470:
  1346  000D36                     
  1347                           ;LCD.c: 11:  {;LCD.c: 12:   ENVIA_LCD_CMD(0x80+columna);
  1348  000D36  5006               	movf	POS_CURSOR@columna^0,w,c
  1349  000D38  0F80               	addlw	128
  1350  000D3A  ECCC  F006         	call	_ENVIA_LCD_CMD
  1351                           
  1352                           ;LCD.c: 13:  }
  1353  000D3E  EFAE  F006         	goto	l26
  1354  000D42                     l1389:
  1355  000D42  0E02               	movlw	2
  1356  000D44  1807               	xorwf	POS_CURSOR@fila^0,w,c
  1357  000D46  A4D8               	btfss	status,2,c
  1358  000D48  EFA8  F006         	goto	u481
  1359  000D4C  EFAA  F006         	goto	u480
  1360  000D50                     u481:
  1361  000D50  EFAE  F006         	goto	l26
  1362  000D54                     u480:
  1363  000D54                     
  1364                           ;LCD.c: 15:  {;LCD.c: 16:   ENVIA_LCD_CMD(0xC0+columna);
  1365  000D54  5006               	movf	POS_CURSOR@columna^0,w,c
  1366  000D56  0FC0               	addlw	192
  1367  000D58  ECCC  F006         	call	_ENVIA_LCD_CMD
  1368  000D5C                     l26:
  1369  000D5C  0012               	return		;funcret
  1370  000D5E                     __end_of_POS_CURSOR:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _ENVIA_LCD_CMD *****************
  1374 ;; Defined at:
  1375 ;;		line 108 in file "LCD.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  dato            1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  dato            1    3[COMRAM] unsigned char 
  1380 ;;  aux             1    4[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0
  1391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1393 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 2
  1397 ;; This function calls:
  1398 ;;		_ENVIA_NIBBLE
  1399 ;;		_LEER_LCD
  1400 ;; This function is called by:
  1401 ;;		_POS_CURSOR
  1402 ;;		_CURSOR_HOME
  1403 ;;		_CURSOR_ONOFF
  1404 ;;		_BORRAR_LCD
  1405 ;;		_LCD_CONFIG
  1406 ;;		_BLINK_CURSOR
  1407 ;;		_DISPLAY_ONOFF
  1408 ;;		_GENERACARACTER
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text11
  1413  000D98                     __ptext11:
  1414                           	callstack 0
  1415  000D98                     _ENVIA_LCD_CMD:
  1416                           	callstack 26
  1417                           
  1418                           ;incstack = 0
  1419                           ;ENVIA_LCD_CMD@dato stored from wreg
  1420  000D98  6E04               	movwf	ENVIA_LCD_CMD@dato^0,c
  1421  000D9A                     
  1422                           ;LCD.c: 108: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 109: {;LCD.c: 110:  unsigned 
      +                          char aux;;LCD.c: 111:  LATDbits.LATD0 = 0;
  1423  000D9A  908C               	bcf	140,0,c	;volatile
  1424  000D9C                     
  1425                           ;LCD.c: 112:  LEER_LCD();
  1426  000D9C  ECA9  F005         	call	_LEER_LCD	;wreg free
  1427  000DA0                     
  1428                           ;LCD.c: 113:  TRISD = 0b00000000;
  1429  000DA0  0E00               	movlw	0
  1430  000DA2  6E95               	movwf	149,c	;volatile
  1431  000DA4                     
  1432                           ;LCD.c: 115:         _delay(1200);
  1433  000DA4  0EF0               	movlw	240
  1434  000DA6                     u577:
  1435  000DA6  D000               	nop2	
  1436  000DA8  2EE8               	decfsz	wreg,f,c
  1437  000DAA  D7FD               	bra	u577
  1438  000DAC                     
  1439                           ;LCD.c: 116:         LATDbits.LATD1 = 0;
  1440  000DAC  928C               	bcf	140,1,c	;volatile
  1441  000DAE                     
  1442                           ;LCD.c: 117:  LATDbits.LATD2 = 0;
  1443  000DAE  948C               	bcf	140,2,c	;volatile
  1444  000DB0                     
  1445                           ;LCD.c: 118:  LATDbits.LATD0 = 0;
  1446  000DB0  908C               	bcf	140,0,c	;volatile
  1447  000DB2                     
  1448                           ;LCD.c: 119:  aux = dato & 0xF0;
  1449  000DB2  5004               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1450  000DB4  0BF0               	andlw	240
  1451  000DB6  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1452  000DB8                     
  1453                           ;LCD.c: 120:  ENVIA_NIBBLE(aux);
  1454  000DB8  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1455  000DBA  EC66  F007         	call	_ENVIA_NIBBLE
  1456  000DBE                     
  1457                           ;LCD.c: 121:  aux = dato<<4;
  1458  000DBE  3804               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1459  000DC0  0BF0               	andlw	240
  1460  000DC2  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1461  000DC4                     
  1462                           ;LCD.c: 122:  ENVIA_NIBBLE(aux);
  1463  000DC4  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1464  000DC6  EC66  F007         	call	_ENVIA_NIBBLE
  1465  000DCA  0012               	return		;funcret
  1466  000DCC                     __end_of_ENVIA_LCD_CMD:
  1467                           	callstack 0
  1468                           
  1469 ;; *************** function _ESCRIBE_MENSAJE *****************
  1470 ;; Defined at:
  1471 ;;		line 43 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  cadena          2    6[COMRAM] PTR const unsigned char 
  1474 ;;		 -> STR_5(4), STR_4(4), STR_3(6), STR_2(3), 
  1475 ;;		 -> STR_1(15), 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  i               1   11[COMRAM] unsigned char 
  1478 ;;  tam             1   10[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1488 ;;      Params:         2       0       0       0       0       0       0       0       0
  1489 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1490 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1491 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1492 ;;Total ram usage:        6 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 3
  1495 ;; This function calls:
  1496 ;;		_ENVIA_CHAR
  1497 ;;		_strlen
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text12
  1504  000CDA                     __ptext12:
  1505                           	callstack 0
  1506  000CDA                     _ESCRIBE_MENSAJE:
  1507                           	callstack 27
  1508  000CDA                     
  1509                           ;LCD.c: 43: void ESCRIBE_MENSAJE(const char *cadena);LCD.c: 44: {;LCD.c: 45:  unsigned c
      +                          har tam;;LCD.c: 46:     tam = strlen(cadena);
  1510  000CDA  C007  F003         	movff	ESCRIBE_MENSAJE@cadena,strlen@s
  1511  000CDE  C008  F004         	movff	ESCRIBE_MENSAJE@cadena+1,strlen@s+1
  1512  000CE2  ECAF  F006         	call	_strlen	;wreg free
  1513  000CE6  5003               	movf	?_strlen^0,w,c
  1514  000CE8  6E0B               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1515  000CEA                     
  1516                           ;LCD.c: 48:  for(i = 0; i<tam; i++)
  1517  000CEA  0E00               	movlw	0
  1518  000CEC  6E0C               	movwf	ESCRIBE_MENSAJE@i^0,c
  1519  000CEE  EF88  F006         	goto	l1403
  1520  000CF2                     l1399:
  1521                           
  1522                           ;LCD.c: 49:  {;LCD.c: 50:   ENVIA_CHAR(cadena[i]);
  1523  000CF2  500C               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1524  000CF4  2407               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1525  000CF6  6E09               	movwf	??_ESCRIBE_MENSAJE^0,c
  1526  000CF8  0E00               	movlw	0
  1527  000CFA  2008               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1528  000CFC  6E0A               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1529  000CFE  C009  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1530  000D02  C00A  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1531  000D06                     	if	0	;tblptru may be non-zero
  1532  000D06                     	endif
  1533  000D06                     	if	0	;tblptru may be non-zero
  1534  000D06                     	endif
  1535  000D06  0008               	tblrd		*
  1536  000D08  50F5               	movf	tablat,w,c
  1537  000D0A  ECE6  F006         	call	_ENVIA_CHAR
  1538  000D0E                     
  1539                           ;LCD.c: 51:  }
  1540  000D0E  2A0C               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1541  000D10                     l1403:
  1542  000D10  500B               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1543  000D12  5C0C               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1544  000D14  A0D8               	btfss	status,0,c
  1545  000D16  EF8F  F006         	goto	u491
  1546  000D1A  EF91  F006         	goto	u490
  1547  000D1E                     u491:
  1548  000D1E  EF79  F006         	goto	l1399
  1549  000D22                     u490:
  1550  000D22  0012               	return		;funcret
  1551  000D24                     __end_of_ESCRIBE_MENSAJE:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _strlen *****************
  1555 ;; Defined at:
  1556 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  s               2    2[COMRAM] PTR const unsigned char 
  1559 ;;		 -> STR_5(4), STR_4(4), STR_3(6), STR_2(3), 
  1560 ;;		 -> STR_1(15), 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  a               2    4[COMRAM] PTR const unsigned char 
  1563 ;;		 -> STR_5(4), STR_4(4), STR_3(6), STR_2(3), 
  1564 ;;		 -> STR_1(15), 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  2    2[COMRAM] unsigned int 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         2       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1577 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:        4 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_ESCRIBE_MENSAJE
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text13
  1589  000D5E                     __ptext13:
  1590                           	callstack 0
  1591  000D5E                     _strlen:
  1592                           	callstack 28
  1593  000D5E  C003  F005         	movff	strlen@s,strlen@a
  1594  000D62  C004  F006         	movff	strlen@s+1,strlen@a+1
  1595  000D66  EFB7  F006         	goto	l1299
  1596  000D6A                     l1297:
  1597  000D6A  4A03               	infsnz	strlen@s^0,f,c
  1598  000D6C  2A04               	incf	(strlen@s+1)^0,f,c
  1599  000D6E                     l1299:
  1600  000D6E  C003  FFF6         	movff	strlen@s,tblptrl
  1601  000D72  C004  FFF7         	movff	strlen@s+1,tblptrh
  1602  000D76                     	if	0	;tblptru may be non-zero
  1603  000D76                     	endif
  1604  000D76                     	if	0	;tblptru may be non-zero
  1605  000D76                     	endif
  1606  000D76  0008               	tblrd		*
  1607  000D78  50F5               	movf	tablat,w,c
  1608  000D7A  0900               	iorlw	0
  1609  000D7C  A4D8               	btfss	status,2,c
  1610  000D7E  EFC3  F006         	goto	u341
  1611  000D82  EFC5  F006         	goto	u340
  1612  000D86                     u341:
  1613  000D86  EFB5  F006         	goto	l1297
  1614  000D8A                     u340:
  1615  000D8A  5005               	movf	strlen@a^0,w,c
  1616  000D8C  5C03               	subwf	strlen@s^0,w,c
  1617  000D8E  6E03               	movwf	?_strlen^0,c
  1618  000D90  5006               	movf	(strlen@a+1)^0,w,c
  1619  000D92  5804               	subwfb	(strlen@s+1)^0,w,c
  1620  000D94  6E04               	movwf	(?_strlen+1)^0,c
  1621  000D96  0012               	return		;funcret
  1622  000D98                     __end_of_strlen:
  1623                           	callstack 0
  1624                           
  1625 ;; *************** function _ENVIA_CHAR *****************
  1626 ;; Defined at:
  1627 ;;		line 54 in file "LCD.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  dato            1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  dato            1    3[COMRAM] unsigned char 
  1632 ;;  aux             1    4[COMRAM] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0
  1643 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1645 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 2
  1649 ;; This function calls:
  1650 ;;		_ENVIA_NIBBLE
  1651 ;;		_LEER_LCD
  1652 ;; This function is called by:
  1653 ;;		_ESCRIBE_MENSAJE
  1654 ;;		_main
  1655 ;;		_GENERACARACTER
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text14
  1660  000DCC                     __ptext14:
  1661                           	callstack 0
  1662  000DCC                     _ENVIA_CHAR:
  1663                           	callstack 27
  1664                           
  1665                           ;incstack = 0
  1666                           ;ENVIA_CHAR@dato stored from wreg
  1667  000DCC  6E04               	movwf	ENVIA_CHAR@dato^0,c
  1668  000DCE                     
  1669                           ;LCD.c: 54: void ENVIA_CHAR(unsigned char dato);LCD.c: 55: {;LCD.c: 56:  unsigned char a
      +                          ux;;LCD.c: 57:  LATDbits.LATD0 = 1;
  1670  000DCE  808C               	bsf	140,0,c	;volatile
  1671  000DD0                     
  1672                           ;LCD.c: 58:  LEER_LCD();
  1673  000DD0  ECA9  F005         	call	_LEER_LCD	;wreg free
  1674  000DD4                     
  1675                           ;LCD.c: 59:  TRISD = 0x00;
  1676  000DD4  0E00               	movlw	0
  1677  000DD6  6E95               	movwf	149,c	;volatile
  1678  000DD8                     
  1679                           ;LCD.c: 60:         _delay(1200);
  1680  000DD8  0EF0               	movlw	240
  1681  000DDA                     u587:
  1682  000DDA  D000               	nop2	
  1683  000DDC  2EE8               	decfsz	wreg,f,c
  1684  000DDE  D7FD               	bra	u587
  1685  000DE0                     
  1686                           ;LCD.c: 62:  LATDbits.LATD1 = 0;
  1687  000DE0  928C               	bcf	140,1,c	;volatile
  1688  000DE2                     
  1689                           ;LCD.c: 63:  LATDbits.LATD2 = 0;
  1690  000DE2  948C               	bcf	140,2,c	;volatile
  1691  000DE4                     
  1692                           ;LCD.c: 64:  LATDbits.LATD0 = 1;
  1693  000DE4  808C               	bsf	140,0,c	;volatile
  1694  000DE6                     
  1695                           ;LCD.c: 65:  aux = dato & 0xF0;
  1696  000DE6  5004               	movf	ENVIA_CHAR@dato^0,w,c
  1697  000DE8  0BF0               	andlw	240
  1698  000DEA  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1699  000DEC                     
  1700                           ;LCD.c: 66:  ENVIA_NIBBLE(aux);
  1701  000DEC  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1702  000DEE  EC66  F007         	call	_ENVIA_NIBBLE
  1703  000DF2                     
  1704                           ;LCD.c: 67:  aux = dato << 4;
  1705  000DF2  3804               	swapf	ENVIA_CHAR@dato^0,w,c
  1706  000DF4  0BF0               	andlw	240
  1707  000DF6  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1708  000DF8                     
  1709                           ;LCD.c: 68:  ENVIA_NIBBLE(aux);
  1710  000DF8  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1711  000DFA  EC66  F007         	call	_ENVIA_NIBBLE
  1712  000DFE  0012               	return		;funcret
  1713  000E00                     __end_of_ENVIA_CHAR:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _LEER_LCD *****************
  1717 ;; Defined at:
  1718 ;;		line 125 in file "LCD.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  aux             1    2[COMRAM] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0
  1733 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1735 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:        1 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_ENVIA_CHAR
  1743 ;;		_ENVIA_LCD_CMD
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text15
  1748  000B52                     __ptext15:
  1749                           	callstack 0
  1750  000B52                     _LEER_LCD:
  1751                           	callstack 26
  1752  000B52                     
  1753                           ;LCD.c: 127:  unsigned char aux;;LCD.c: 128:  TRISD = 0xF8;
  1754  000B52  0EF8               	movlw	248
  1755  000B54  6E95               	movwf	149,c	;volatile
  1756  000B56                     
  1757                           ;LCD.c: 129:  LATDbits.LATD0 = 0;
  1758  000B56  908C               	bcf	140,0,c	;volatile
  1759  000B58                     
  1760                           ;LCD.c: 130:  LATDbits.LATD1 = 1;
  1761  000B58  828C               	bsf	140,1,c	;volatile
  1762  000B5A                     
  1763                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  1764  000B5A  848C               	bsf	140,2,c	;volatile
  1765  000B5C                     
  1766                           ;LCD.c: 132:         _delay(1200);
  1767  000B5C  0EF0               	movlw	240
  1768  000B5E                     u597:
  1769  000B5E  D000               	nop2	
  1770  000B60  2EE8               	decfsz	wreg,f,c
  1771  000B62  D7FD               	bra	u597
  1772  000B64                     
  1773                           ;LCD.c: 134:  aux = PORTD;
  1774  000B64  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1775  000B68                     
  1776                           ;LCD.c: 135:  LATDbits.LATD2 = 0;
  1777  000B68  948C               	bcf	140,2,c	;volatile
  1778  000B6A                     
  1779                           ;LCD.c: 136:         _delay(1200);
  1780  000B6A  0EF0               	movlw	240
  1781  000B6C                     u607:
  1782  000B6C  D000               	nop2	
  1783  000B6E  2EE8               	decfsz	wreg,f,c
  1784  000B70  D7FD               	bra	u607
  1785  000B72                     
  1786                           ;LCD.c: 138:  LATDbits.LATD2 = 1;
  1787  000B72  848C               	bsf	140,2,c	;volatile
  1788  000B74                     
  1789                           ;LCD.c: 139:         _delay(1200);
  1790  000B74  0EF0               	movlw	240
  1791  000B76                     u617:
  1792  000B76  D000               	nop2	
  1793  000B78  2EE8               	decfsz	wreg,f,c
  1794  000B7A  D7FD               	bra	u617
  1795  000B7C                     
  1796                           ;LCD.c: 141:  LATDbits.LATD2 = 0;
  1797  000B7C  948C               	bcf	140,2,c	;volatile
  1798  000B7E                     l903:
  1799                           
  1800                           ;LCD.c: 142:  aux = aux & 0x80;
  1801  000B7E  5003               	movf	LEER_LCD@aux^0,w,c
  1802  000B80  0B80               	andlw	128
  1803  000B82  6E03               	movwf	LEER_LCD@aux^0,c
  1804                           
  1805                           ;LCD.c: 143:  while(aux == 0x80)
  1806  000B84  EFD8  F005         	goto	l917
  1807  000B88                     l69:
  1808                           
  1809                           ;LCD.c: 144:         {;LCD.c: 145:             LATDbits.LATD2 = 1;
  1810  000B88  848C               	bsf	140,2,c	;volatile
  1811  000B8A                     
  1812                           ;LCD.c: 146:             _delay(1200);
  1813  000B8A  0EF0               	movlw	240
  1814  000B8C                     u627:
  1815  000B8C  D000               	nop2	
  1816  000B8E  2EE8               	decfsz	wreg,f,c
  1817  000B90  D7FD               	bra	u627
  1818  000B92                     
  1819                           ;LCD.c: 147:             aux = PORTD;
  1820  000B92  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1821  000B96                     
  1822                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1823  000B96  948C               	bcf	140,2,c	;volatile
  1824                           
  1825                           ;LCD.c: 149:             _delay(1200);
  1826  000B98  0EF0               	movlw	240
  1827  000B9A                     u637:
  1828  000B9A  D000               	nop2	
  1829  000B9C  2EE8               	decfsz	wreg,f,c
  1830  000B9E  D7FD               	bra	u637
  1831  000BA0                     
  1832                           ;LCD.c: 150:             LATDbits.LATD2 = 1;
  1833  000BA0  848C               	bsf	140,2,c	;volatile
  1834                           
  1835                           ;LCD.c: 151:             _delay(1200);
  1836  000BA2  0EF0               	movlw	240
  1837  000BA4                     u647:
  1838  000BA4  D000               	nop2	
  1839  000BA6  2EE8               	decfsz	wreg,f,c
  1840  000BA8  D7FD               	bra	u647
  1841  000BAA                     
  1842                           ;LCD.c: 152:             LATDbits.LATD2 = 0;
  1843  000BAA  948C               	bcf	140,2,c	;volatile
  1844  000BAC  EFBF  F005         	goto	l903
  1845  000BB0                     l917:
  1846                           
  1847                           ;LCD.c: 143:  while(aux == 0x80)
  1848  000BB0  0E80               	movlw	128
  1849  000BB2  1803               	xorwf	LEER_LCD@aux^0,w,c
  1850  000BB4  B4D8               	btfsc	status,2,c
  1851  000BB6  EFDF  F005         	goto	u11
  1852  000BBA  EFE1  F005         	goto	u10
  1853  000BBE                     u11:
  1854  000BBE  EFC4  F005         	goto	l69
  1855  000BC2                     u10:
  1856  000BC2  0012               	return		;funcret
  1857  000BC4                     __end_of_LEER_LCD:
  1858                           	callstack 0
  1859                           
  1860 ;; *************** function _ENVIA_NIBBLE *****************
  1861 ;; Defined at:
  1862 ;;		line 97 in file "LCD.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  dato            1    wreg     unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  dato            1    2[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1876 ;;      Params:         0       0       0       0       0       0       0       0       0
  1877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1880 ;;Total ram usage:        1 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 1
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_ENVIA_CHAR
  1887 ;;		_LCD_CONFIG
  1888 ;;		_ENVIA_LCD_CMD
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text16
  1893  000ECC                     __ptext16:
  1894                           	callstack 0
  1895  000ECC                     _ENVIA_NIBBLE:
  1896                           	callstack 27
  1897                           
  1898                           ;incstack = 0
  1899                           ;ENVIA_NIBBLE@dato stored from wreg
  1900  000ECC  6E03               	movwf	ENVIA_NIBBLE@dato^0,c
  1901  000ECE                     
  1902                           ;LCD.c: 97: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 98: {;LCD.c: 99:  LATD &= 0x0F;
  1903  000ECE  0E0F               	movlw	15
  1904  000ED0  168C               	andwf	140,f,c	;volatile
  1905                           
  1906                           ;LCD.c: 100:  dato &= 0xF0;
  1907  000ED2  0EF0               	movlw	240
  1908  000ED4  1603               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1909                           
  1910                           ;LCD.c: 101:  LATD|= dato;
  1911  000ED6  5003               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1912  000ED8  128C               	iorwf	140,f,c	;volatile
  1913  000EDA                     
  1914                           ;LCD.c: 102:  LATDbits.LATD2 = 1;
  1915  000EDA  848C               	bsf	140,2,c	;volatile
  1916  000EDC                     
  1917                           ;LCD.c: 104:         _delay(1200);
  1918  000EDC  0EF0               	movlw	240
  1919  000EDE                     u657:
  1920  000EDE  D000               	nop2	
  1921  000EE0  2EE8               	decfsz	wreg,f,c
  1922  000EE2  D7FD               	bra	u657
  1923  000EE4                     
  1924                           ;LCD.c: 105:  LATDbits.LATD2 = 0;
  1925  000EE4  948C               	bcf	140,2,c	;volatile
  1926  000EE6  0012               	return		;funcret
  1927  000EE8                     __end_of_ENVIA_NIBBLE:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _DHT11_Start *****************
  1931 ;; Defined at:
  1932 ;;		line 54 in file "maincode02.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1948 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1949 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1950 ;;Total ram usage:        1 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text17
  1961  000EAC                     __ptext17:
  1962                           	callstack 0
  1963  000EAC                     _DHT11_Start:
  1964                           	callstack 29
  1965  000EAC                     
  1966                           ;maincode02.c: 55:     TRISBbits.RB5 = 0;
  1967  000EAC  9A93               	bcf	147,5,c	;volatile
  1968                           
  1969                           ;maincode02.c: 56:     LATBbits.LB5 = 0;
  1970  000EAE  9A8A               	bcf	138,5,c	;volatile
  1971  000EB0                     
  1972                           ;maincode02.c: 57:     _delay((unsigned long)((20)*(8000000UL/4000.0)));
  1973  000EB0  0E34               	movlw	52
  1974  000EB2  6E03               	movwf	??_DHT11_Start^0,c
  1975  000EB4  0EF2               	movlw	242
  1976  000EB6                     u667:
  1977  000EB6  2EE8               	decfsz	wreg,f,c
  1978  000EB8  D7FE               	bra	u667
  1979  000EBA  2E03               	decfsz	??_DHT11_Start^0,f,c
  1980  000EBC  D7FC               	bra	u667
  1981  000EBE                     
  1982                           ;maincode02.c: 58:     LATBbits.LB5 = 1;
  1983  000EBE  8A8A               	bsf	138,5,c	;volatile
  1984                           
  1985                           ;maincode02.c: 59:     _delay((unsigned long)((20)*(8000000UL/4000000.0)));
  1986  000EC0  0E0D               	movlw	13
  1987  000EC2                     u677:
  1988  000EC2  2EE8               	decfsz	wreg,f,c
  1989  000EC4  D7FE               	bra	u677
  1990  000EC6  F000               	nop	
  1991  000EC8                     
  1992                           ;maincode02.c: 60:     TRISBbits.RB5 = 1;
  1993  000EC8  8A93               	bsf	147,5,c	;volatile
  1994  000ECA  0012               	return		;funcret
  1995  000ECC                     __end_of_DHT11_Start:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _DHT11_ReadData *****************
  1999 ;; Defined at:
  2000 ;;		line 37 in file "maincode02.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  data            1    3[COMRAM] unsigned char 
  2005 ;;  i               1    2[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      unsigned char 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        2 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 1
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           	psect	text18
  2030  000C24                     __ptext18:
  2031                           	callstack 0
  2032  000C24                     _DHT11_ReadData:
  2033                           	callstack 29
  2034  000C24                     
  2035                           ;maincode02.c: 38:     unsigned char data = 0;
  2036  000C24  0E00               	movlw	0
  2037  000C26  6E04               	movwf	DHT11_ReadData@data^0,c
  2038                           
  2039                           ;maincode02.c: 39:     unsigned char i;;maincode02.c: 40:     for(i=0;i<8;i++){
  2040  000C28  0E00               	movlw	0
  2041  000C2A  6E03               	movwf	DHT11_ReadData@i^0,c
  2042  000C2C                     l149:
  2043  000C2C  AA81               	btfss	129,5,c	;volatile
  2044  000C2E  EF1B  F006         	goto	u201
  2045  000C32  EF1D  F006         	goto	u200
  2046  000C36                     u201:
  2047  000C36  EF16  F006         	goto	l149
  2048  000C3A                     u200:
  2049  000C3A                     
  2050                           ;maincode02.c: 42:         _delay((unsigned long)((30)*(8000000UL/4000000.0)));
  2051  000C3A  0E14               	movlw	20
  2052  000C3C                     u687:
  2053  000C3C  2EE8               	decfsz	wreg,f,c
  2054  000C3E  D7FE               	bra	u687
  2055  000C40                     
  2056                           ;maincode02.c: 43:         if(PORTBbits.RB5 & 1){
  2057  000C40  AA81               	btfss	129,5,c	;volatile
  2058  000C42  EF25  F006         	goto	u211
  2059  000C46  EF27  F006         	goto	u210
  2060  000C4A                     u211:
  2061  000C4A  EF2B  F006         	goto	l1157
  2062  000C4E                     u210:
  2063  000C4E                     
  2064                           ;maincode02.c: 44:             data = ((data<<1) | 1);
  2065  000C4E  80D8               	bsf	status,0,c
  2066  000C50  3604               	rlcf	DHT11_ReadData@data^0,f,c
  2067                           
  2068                           ;maincode02.c: 45:         }
  2069  000C52  EF2E  F006         	goto	l154
  2070  000C56                     l1157:
  2071                           
  2072                           ;maincode02.c: 47:             data = (data<<1);
  2073  000C56  5004               	movf	DHT11_ReadData@data^0,w,c
  2074  000C58  2404               	addwf	DHT11_ReadData@data^0,w,c
  2075  000C5A  6E04               	movwf	DHT11_ReadData@data^0,c
  2076  000C5C                     l154:
  2077  000C5C  BA81               	btfsc	129,5,c	;volatile
  2078  000C5E  EF33  F006         	goto	u221
  2079  000C62  EF35  F006         	goto	u220
  2080  000C66                     u221:
  2081  000C66  EF2E  F006         	goto	l154
  2082  000C6A                     u220:
  2083  000C6A                     
  2084                           ;maincode02.c: 50:     }
  2085  000C6A  2A03               	incf	DHT11_ReadData@i^0,f,c
  2086  000C6C  0E07               	movlw	7
  2087  000C6E  6403               	cpfsgt	DHT11_ReadData@i^0,c
  2088  000C70  EF3C  F006         	goto	u231
  2089  000C74  EF3E  F006         	goto	u230
  2090  000C78                     u231:
  2091  000C78  EF16  F006         	goto	l149
  2092  000C7C                     u230:
  2093  000C7C                     
  2094                           ;maincode02.c: 51:     return data;
  2095  000C7C  5004               	movf	DHT11_ReadData@data^0,w,c
  2096  000C7E  0012               	return		;funcret
  2097  000C80                     __end_of_DHT11_ReadData:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _DHT11_CheckResponse *****************
  2101 ;; Defined at:
  2102 ;;		line 63 in file "maincode02.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		None
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2116 ;;      Params:         0       0       0       0       0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text19
  2131  000E30                     __ptext19:
  2132                           	callstack 0
  2133  000E30                     _DHT11_CheckResponse:
  2134                           	callstack 29
  2135  000E30                     l163:
  2136  000E30  BA81               	btfsc	129,5,c	;volatile
  2137  000E32  EF1D  F007         	goto	u241
  2138  000E36  EF1F  F007         	goto	u240
  2139  000E3A                     u241:
  2140  000E3A  EF18  F007         	goto	l163
  2141  000E3E                     u240:
  2142  000E3E                     l166:
  2143  000E3E  AA81               	btfss	129,5,c	;volatile
  2144  000E40  EF24  F007         	goto	u251
  2145  000E44  EF26  F007         	goto	u250
  2146  000E48                     u251:
  2147  000E48  EF1F  F007         	goto	l166
  2148  000E4C                     u250:
  2149  000E4C                     l169:
  2150  000E4C  BA81               	btfsc	129,5,c	;volatile
  2151  000E4E  EF2B  F007         	goto	u261
  2152  000E52  EF2D  F007         	goto	u260
  2153  000E56                     u261:
  2154  000E56  EF26  F007         	goto	l169
  2155  000E5A                     u260:
  2156  000E5A  0012               	return		;funcret
  2157  000E5C                     __end_of_DHT11_CheckResponse:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function _INT0_ISR *****************
  2161 ;; Defined at:
  2162 ;;		line 110 in file "maincode02.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2178 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; This function calls:
  2183 ;;		Nothing
  2184 ;; This function is called by:
  2185 ;;		Interrupt level 2
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	intcode
  2190  000008                     __pintcode:
  2191                           	callstack 0
  2192  000008                     _INT0_ISR:
  2193                           	callstack 26
  2194                           
  2195                           ;incstack = 0
  2196  000008  821F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2197  00000A  ED60  F005         	call	int_func,f	;refresh shadow registers
  2198                           
  2199                           	psect	intcode_body
  2200  000AC0                     __pintcode_body:
  2201                           	callstack 26
  2202  000AC0                     int_func:
  2203                           	callstack 26
  2204  000AC0  0006               	pop		; remove dummy address from shadow register refresh
  2205  000AC2                     
  2206                           ;maincode02.c: 111:     INTCONbits.INT0IF = 0;
  2207  000AC2  92F2               	bcf	242,1,c	;volatile
  2208  000AC4                     
  2209                           ;maincode02.c: 112:     if(estado_backlight == 4){
  2210  000AC4  0E04               	movlw	4
  2211  000AC6  181E               	xorwf	_estado_backlight^0,w,c
  2212  000AC8  A4D8               	btfss	status,2,c
  2213  000ACA  EF69  F005         	goto	i2u33_41
  2214  000ACE  EF6B  F005         	goto	i2u33_40
  2215  000AD2                     i2u33_41:
  2216  000AD2  EF6F  F005         	goto	i2l1271
  2217  000AD6                     i2u33_40:
  2218  000AD6                     
  2219                           ;maincode02.c: 113:         estado_backlight = 0;
  2220  000AD6  0E00               	movlw	0
  2221  000AD8  6E1E               	movwf	_estado_backlight^0,c
  2222                           
  2223                           ;maincode02.c: 114:     }
  2224  000ADA  EF86  F005         	goto	i2l1285
  2225  000ADE                     i2l1271:
  2226                           
  2227                           ;maincode02.c: 116:         estado_backlight++;
  2228  000ADE  2A1E               	incf	_estado_backlight^0,f,c
  2229  000AE0  EF86  F005         	goto	i2l1285
  2230  000AE4                     i2l1273:
  2231                           
  2232                           ;maincode02.c: 120:             CCPR1L = 0;
  2233  000AE4  0E00               	movlw	0
  2234  000AE6  6EBE               	movwf	190,c	;volatile
  2235                           
  2236                           ;maincode02.c: 121:             break;
  2237  000AE8  EFA7  F005         	goto	i2l199
  2238  000AEC                     i2l1275:
  2239                           
  2240                           ;maincode02.c: 123:             CCPR1L = 15;
  2241  000AEC  0E0F               	movlw	15
  2242  000AEE  6EBE               	movwf	190,c	;volatile
  2243                           
  2244                           ;maincode02.c: 124:             break;
  2245  000AF0  EFA7  F005         	goto	i2l199
  2246  000AF4                     i2l1277:
  2247                           
  2248                           ;maincode02.c: 126:             CCPR1L = 31;
  2249  000AF4  0E1F               	movlw	31
  2250  000AF6  6EBE               	movwf	190,c	;volatile
  2251                           
  2252                           ;maincode02.c: 127:             break;
  2253  000AF8  EFA7  F005         	goto	i2l199
  2254  000AFC                     i2l1279:
  2255                           
  2256                           ;maincode02.c: 129:             CCPR1L = 46;
  2257  000AFC  0E2E               	movlw	46
  2258  000AFE  6EBE               	movwf	190,c	;volatile
  2259                           
  2260                           ;maincode02.c: 130:             break;
  2261  000B00  EFA7  F005         	goto	i2l199
  2262  000B04                     i2l1281:
  2263                           
  2264                           ;maincode02.c: 132:             CCPR1L = 62;
  2265  000B04  0E3E               	movlw	62
  2266  000B06  6EBE               	movwf	190,c	;volatile
  2267                           
  2268                           ;maincode02.c: 133:             break;
  2269  000B08  EFA7  F005         	goto	i2l199
  2270  000B0C                     i2l1285:
  2271  000B0C  501E               	movf	_estado_backlight^0,w,c
  2272  000B0E  6E01               	movwf	??_INT0_ISR^0,c
  2273  000B10  6A02               	clrf	(??_INT0_ISR+1)^0,c
  2274                           
  2275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 1, Range of values is 0 to 0
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            4     3 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282  000B12  5002               	movf	(??_INT0_ISR+1)^0,w,c
  2283  000B14  0A00               	xorlw	0	; case 0
  2284  000B16  B4D8               	btfsc	status,2,c
  2285  000B18  EF90  F005         	goto	i2l1465
  2286  000B1C  EFA7  F005         	goto	i2l199
  2287  000B20                     i2l1465:
  2288                           
  2289                           ; Switch size 1, requested type "simple"
  2290                           ; Number of cases is 5, Range of values is 0 to 4
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte           16     9 (average)
  2294                           ;	Chosen strategy is simple_byte
  2295  000B20  5001               	movf	??_INT0_ISR^0,w,c
  2296  000B22  0A00               	xorlw	0	; case 0
  2297  000B24  B4D8               	btfsc	status,2,c
  2298  000B26  EF72  F005         	goto	i2l1273
  2299  000B2A  0A01               	xorlw	1	; case 1
  2300  000B2C  B4D8               	btfsc	status,2,c
  2301  000B2E  EF76  F005         	goto	i2l1275
  2302  000B32  0A03               	xorlw	3	; case 2
  2303  000B34  B4D8               	btfsc	status,2,c
  2304  000B36  EF7A  F005         	goto	i2l1277
  2305  000B3A  0A01               	xorlw	1	; case 3
  2306  000B3C  B4D8               	btfsc	status,2,c
  2307  000B3E  EF7E  F005         	goto	i2l1279
  2308  000B42  0A07               	xorlw	7	; case 4
  2309  000B44  B4D8               	btfsc	status,2,c
  2310  000B46  EF82  F005         	goto	i2l1281
  2311  000B4A  EFA7  F005         	goto	i2l199
  2312  000B4E                     i2l199:
  2313  000B4E  921F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2314  000B50  0011               	retfie		f
  2315  000B52                     __end_of_INT0_ISR:
  2316                           	callstack 0
  2317                           
  2318                           	psect	rparam
  2319  0000                     
  2320                           	psect	temp
  2321  00001F                     btemp:
  2322                           	callstack 0
  2323  00001F                     	ds	1
  2324  0000                     int$flags	set	btemp
  2325  0000                     wtemp8	set	btemp+1
  2326  0000                     ttemp5	set	btemp+1
  2327  0000                     ttemp6	set	btemp+4
  2328  0000                     ttemp7	set	btemp+8
  2329                           
  2330                           	psect	idloc
  2331                           
  2332                           ;Config register IDLOC0 @ 0x200000
  2333                           ;	unspecified, using default values
  2334  200000                     	org	2097152
  2335  200000  FF                 	db	255
  2336                           
  2337                           ;Config register IDLOC1 @ 0x200001
  2338                           ;	unspecified, using default values
  2339  200001                     	org	2097153
  2340  200001  FF                 	db	255
  2341                           
  2342                           ;Config register IDLOC2 @ 0x200002
  2343                           ;	unspecified, using default values
  2344  200002                     	org	2097154
  2345  200002  FF                 	db	255
  2346                           
  2347                           ;Config register IDLOC3 @ 0x200003
  2348                           ;	unspecified, using default values
  2349  200003                     	org	2097155
  2350  200003  FF                 	db	255
  2351                           
  2352                           ;Config register IDLOC4 @ 0x200004
  2353                           ;	unspecified, using default values
  2354  200004                     	org	2097156
  2355  200004  FF                 	db	255
  2356                           
  2357                           ;Config register IDLOC5 @ 0x200005
  2358                           ;	unspecified, using default values
  2359  200005                     	org	2097157
  2360  200005  FF                 	db	255
  2361                           
  2362                           ;Config register IDLOC6 @ 0x200006
  2363                           ;	unspecified, using default values
  2364  200006                     	org	2097158
  2365  200006  FF                 	db	255
  2366                           
  2367                           ;Config register IDLOC7 @ 0x200007
  2368                           ;	unspecified, using default values
  2369  200007                     	org	2097159
  2370  200007  FF                 	db	255
  2371                           
  2372                           	psect	config
  2373                           
  2374                           ;Config register CONFIG1L @ 0x300000
  2375                           ;	PLL Prescaler Selection bits
  2376                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2377                           ;	System Clock Postscaler Selection bits
  2378                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2379                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2380                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2381  300000                     	org	3145728
  2382  300000  00                 	db	0
  2383                           
  2384                           ;Config register CONFIG1H @ 0x300001
  2385                           ;	Oscillator Selection bits
  2386                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2387                           ;	Fail-Safe Clock Monitor Enable bit
  2388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2389                           ;	Internal/External Oscillator Switchover bit
  2390                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2391  300001                     	org	3145729
  2392  300001  08                 	db	8
  2393                           
  2394                           ;Config register CONFIG2L @ 0x300002
  2395                           ;	Power-up Timer Enable bit
  2396                           ;	PWRT = ON, PWRT enabled
  2397                           ;	Brown-out Reset Enable bits
  2398                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2399                           ;	Brown-out Reset Voltage bits
  2400                           ;	BORV = 3, Minimum setting 2.05V
  2401                           ;	USB Voltage Regulator Enable bit
  2402                           ;	VREGEN = OFF, USB voltage regulator disabled
  2403  300002                     	org	3145730
  2404  300002  18                 	db	24
  2405                           
  2406                           ;Config register CONFIG2H @ 0x300003
  2407                           ;	Watchdog Timer Enable bit
  2408                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2409                           ;	Watchdog Timer Postscale Select bits
  2410                           ;	WDTPS = 32768, 1:32768
  2411  300003                     	org	3145731
  2412  300003  1E                 	db	30
  2413                           
  2414                           ; Padding undefined space
  2415  300004                     	org	3145732
  2416  300004  FF                 	db	255
  2417                           
  2418                           ;Config register CONFIG3H @ 0x300005
  2419                           ;	CCP2 MUX bit
  2420                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2421                           ;	PORTB A/D Enable bit
  2422                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2423                           ;	Low-Power Timer 1 Oscillator Enable bit
  2424                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2425                           ;	MCLR Pin Enable bit
  2426                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2427  300005                     	org	3145733
  2428  300005  81                 	db	129
  2429                           
  2430                           ;Config register CONFIG4L @ 0x300006
  2431                           ;	Stack Full/Underflow Reset Enable bit
  2432                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2433                           ;	Single-Supply ICSP Enable bit
  2434                           ;	LVP = OFF, Single-Supply ICSP disabled
  2435                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2436                           ;	ICPRT = OFF, ICPORT disabled
  2437                           ;	Extended Instruction Set Enable bit
  2438                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2439                           ;	Background Debugger Enable bit
  2440                           ;	DEBUG = 0x1, unprogrammed default
  2441  300006                     	org	3145734
  2442  300006  81                 	db	129
  2443                           
  2444                           ; Padding undefined space
  2445  300007                     	org	3145735
  2446  300007  FF                 	db	255
  2447                           
  2448                           ;Config register CONFIG5L @ 0x300008
  2449                           ;	Code Protection bit
  2450                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2451                           ;	Code Protection bit
  2452                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2453                           ;	Code Protection bit
  2454                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2455                           ;	Code Protection bit
  2456                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2457  300008                     	org	3145736
  2458  300008  0F                 	db	15
  2459                           
  2460                           ;Config register CONFIG5H @ 0x300009
  2461                           ;	Boot Block Code Protection bit
  2462                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2463                           ;	Data EEPROM Code Protection bit
  2464                           ;	CPD = OFF, Data EEPROM is not code-protected
  2465  300009                     	org	3145737
  2466  300009  C0                 	db	192
  2467                           
  2468                           ;Config register CONFIG6L @ 0x30000A
  2469                           ;	Write Protection bit
  2470                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2471                           ;	Write Protection bit
  2472                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2473                           ;	Write Protection bit
  2474                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2475                           ;	Write Protection bit
  2476                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2477  30000A                     	org	3145738
  2478  30000A  0F                 	db	15
  2479                           
  2480                           ;Config register CONFIG6H @ 0x30000B
  2481                           ;	Configuration Register Write Protection bit
  2482                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2483                           ;	Boot Block Write Protection bit
  2484                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2485                           ;	Data EEPROM Write Protection bit
  2486                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2487  30000B                     	org	3145739
  2488  30000B  E0                 	db	224
  2489                           
  2490                           ;Config register CONFIG7L @ 0x30000C
  2491                           ;	Table Read Protection bit
  2492                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2493                           ;	Table Read Protection bit
  2494                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2495                           ;	Table Read Protection bit
  2496                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2497                           ;	Table Read Protection bit
  2498                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2499  30000C                     	org	3145740
  2500  30000C  0F                 	db	15
  2501                           
  2502                           ;Config register CONFIG7H @ 0x30000D
  2503                           ;	Boot Block Table Read Protection bit
  2504                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2505  30000D                     	org	3145741
  2506  30000D  40                 	db	64
  2507                           tosu	equ	0xFFF
  2508                           tosh	equ	0xFFE
  2509                           tosl	equ	0xFFD
  2510                           stkptr	equ	0xFFC
  2511                           pclatu	equ	0xFFB
  2512                           pclath	equ	0xFFA
  2513                           pcl	equ	0xFF9
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           indf0	equ	0xFEF
  2521                           postinc0	equ	0xFEE
  2522                           postdec0	equ	0xFED
  2523                           preinc0	equ	0xFEC
  2524                           plusw0	equ	0xFEB
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           postinc1	equ	0xFE6
  2530                           postdec1	equ	0xFE5
  2531                           preinc1	equ	0xFE4
  2532                           plusw1	equ	0xFE3
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           bsr	equ	0xFE0
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           preinc2	equ	0xFDC
  2540                           plusw2	equ	0xFDB
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      30
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[3]), 
		 -> STR_1(CODE[15]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[3]), 
		 -> STR_1(CODE[15]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[6]), STR_2(CODE[3]), 
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _init_LCD->_CURSOR_ONOFF
    _init_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3130
                                             17 COMRAM     4     4      0
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0     525
                                              6 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             16 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              8 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     4      2     780
                                              6 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_ReadData                                       2     2      0      75
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_CheckResponse
   _DHT11_ReadData
   _DHT11_Start
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     15      1E       1       31.9%
BITBIGSFRhhlll      27      0       0      25        0.0%
BITBIGSFRlll        21      0       0      29        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhlhl       8      0       0      23        0.0%
BITBIGSFRhhlhh       7      0       0      22        0.0%
BITBIGSFRlh          6      0       0      27        0.0%
BITBIGSFRhl          6      0       0      26        0.0%
BITBIGSFRhhllh       2      0       0      24        0.0%
BITBIGSFRllh         1      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      30        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 17 20:39:49 2022

                         l50 0D22                           l26 0D5C                           l44 0E2E  
                         l53 0DFE                           l62 0EE6                           l71 0BC2  
                         l39 0F08                           l56 0F10                           l65 0DCA  
                         l59 0C22                           l69 0B88                           u10 0BC2  
                         u11 0BBE                           u20 0E12                           u21 0E0E  
                         u30 0E28                           u31 0E24                 ___awdiv@sign 000E  
              ENVIA_CHAR@aux 0005                          l141 0EAA                          l160 0ECA  
                        l144 0E82                          l154 0C5C                          l163 0E30  
                        l172 0E5A                          l157 0C7E                          l149 0C2C  
                        l166 0E3E                          l175 0CD8                          l169 0E4C  
                        l433 0A0E                          l446 0ABE                          l901 0B7C  
                        l911 0BA0                          l903 0B7E                          l921 0EDA  
                        l913 0BAA                          l905 0B8A                          l923 0EDC  
                        l907 0B92                          l931 0DA0                          l925 0EE4  
                        l909 0B96                          l917 0BB0                          l941 0DB2  
                        l933 0DA4                          l919 0ECE                          l943 0DB8  
                        l935 0DAC                          l927 0D9A                          l951 0E02  
                        l881 0B52                          l945 0DBE                          l937 0DAE  
                        l929 0D9C                          l953 0E12                          l891 0B64  
                        l883 0B56                          l971 0DD0                          l947 0DC4  
                        l939 0DB0                          l955 0E18                          l893 0B68  
                        l885 0B58                          l981 0DE4                          l973 0DD4  
                        l949 0F02                          l957 0E28                          l895 0B6A  
                        l887 0B5A                          l983 0DE6                          l975 0DD8  
                        l879 0D96                          l991 0F0A                          l897 0B72  
                        l889 0B5C                          l985 0DEC                          l977 0DE0  
                        l969 0DCE                          l993 0BC4                          l899 0B74  
                        l987 0DF2                          l979 0DE2                          l995 0BC8  
                        l989 0DF8                          l997 0BCE                          l999 0BDC  
                        u200 0C3A                          u201 0C36                          u210 0C4E  
                        u211 0C4A                          u220 0C6A                          u221 0C66  
                        u230 0C7C                          u231 0C78                          u240 0E3E  
                        u400 09FE                          u241 0E3A                          u401 09FA  
                        u250 0E4C                          u410 0A22                          u251 0E48  
                        u411 0A1E                          u260 0E5A                          u340 0D8A  
                        u420 0A3C                          u500 0912                          u261 0E56  
                        u341 0D86                          u421 0A38                          u501 090E  
                        u350 095E                          u430 0A56                          _PR2 000FCB  
                        u351 095A                          u431 0A52                          u360 0978  
                        u440 0A74                          u361 0974                          u441 0A70  
                        u370 099E                          u450 0A8A                          u371 099A  
                        u451 0A86                          u380 09BC                          u460 0AAE  
                        u381 09B8                          u461 0AAA                          u517 084A  
                        u470 0D36                          u390 09D8                          u607 0B6C  
                        u471 0D32                          u391 09D4                          u527 0938  
                        u480 0D54                          u617 0B76                          u481 0D50  
                        u537 0E6A                          u490 0D22                          u627 0B8C  
                        u491 0D1E                          u547 0BD4                          u637 0B9A  
                        u557 0BE2                          u647 0BA4                          u567 0BF2  
                        u657 0EDE                          u577 0DA6                          u667 0EB6  
                        u587 0DDA                          u677 0EC2                          u597 0B5E  
                        u687 0C3C                 ___awmod@sign 0008                  LEER_LCD@aux 0003  
                        wreg 000FE8                 ?_CURSOR_HOME 0001               ??_ENVIA_NIBBLE 0003  
             ENVIA_CHAR@dato 0004                         l1001 0BF0                         l1011 0C10  
                       l1003 0BF8                         l1013 0C16                         l1005 0BFE  
                       l1015 0C1C                         l1007 0C04                         l1121 0E8E  
                       l1009 0C0A                         l1131 0EA8                         l1123 0E90  
                       l1301 0D8A                         l1125 0E92                         l1117 0E84  
                       l1141 0E78                         l1133 0E5C                         l1151 0C3A  
                       l1127 0E94                         l1119 0E8C                         l1311 0966  
                       l1143 0E7C                         l1135 0E60                         l1161 0C6C  
                       l1153 0C40                         l1145 0C24                         l1401 0D0E  
                       l1129 0E9E                         l1321 098C                         l1313 096A  
                       l1305 094C                         l1137 0E64                         l1163 0C7C  
                       l1155 0C4E                         l1171 0EBE                         l1403 0D10  
                       l1331 09C2                         l1323 099E                         l1315 0978  
                       l1307 0950                         l1139 0E74                         l1411 082A  
                       l1157 0C56                         l1173 0EC8                         l1333 09D8  
                       l1325 09A6                         l1341 09EE                         l1317 0980  
                       l1309 095E                         l1405 0C82                         l1421 085E  
                       l1413 0834                         l1175 0E30                         l1159 0C6A  
                       l1167 0EAC                         l1343 09FE                         l1335 09E0  
                       l1327 09AE                         l1319 0984                         l1351 0A14  
                       l1431 087C                         l1423 0864                         l1415 0840  
                       l1407 0822                         l1169 0EB0                         l1345 0A06  
                       l1337 09E2                         l1329 09BC                         l1361 0A44  
                       l1353 0A22                         l1441 08A8                         l1433 0886  
                       l1425 086A                         l1417 0856                         l1409 0826  
                       l1339 09E8                         l1371 0A8A                         l1363 0A56  
                       l1355 0A2A                         l1451 08D0                         l1443 08AE  
                       l1435 088C                         l1427 0870                         l1419 085A  
                       l1381 0AB6                         l1373 0A92                         l1365 0A5E  
                       l1357 0A2E                         l1349 0A10                         l1453 08D6  
                       l1445 08B4                         l1437 0898                         l1429 0876  
                       l1295 0D5E                         l1391 0D54                         l1375 0A98  
                       l1367 0A66                         l1359 0A3C                         l1455 0912  
                       l1447 08C0                         l1439 08A0                         l1297 0D6A  
                       l1393 0CDA                         l1385 0D26                         l1369 0A74  
                       l1377 0A9E                         l1457 0922                         l1449 08C8  
                       l1299 0D6E                         l1395 0CEA                         l1387 0D36  
                       l1379 0AAE                         l1459 092E                         l1397 0CEA  
                       l1389 0D42                         l1399 0CF2                         STR_1 0801  
                       STR_2 081E                         STR_3 0810                         STR_4 081A  
                       STR_5 0816                         _LATD 000F8C                         _main 0822  
                       btemp 001F                         start 000E                ?_CURSOR_ONOFF 0001  
           ??_DHT11_ReadData 0003                 ___param_bank 000000              ??_ENVIA_LCD_CMD 0004  
           __end_of_LEER_LCD 0BC4             __end_of_INT0_ISR 0B52                        ?_main 0001  
            __end_of___awdiv 0A10              __end_of___awmod 0AC0              ___awdiv@divisor 000B  
                      _T2CON 000FCA                        i2l199 0B4E              ___awdiv@counter 000D  
                      _PORTD 000F83                        _TRISD 000F95                  ?_POS_CURSOR 0006  
                      tablat 000FF5                        ttemp5 0020                        ttemp6 0023  
                      ttemp7 0027                        status 000FD8                        wtemp8 0020  
             ??_CURSOR_ONOFF 0006              __initialization 0EE8                 __end_of_main 094C  
            _ESCRIBE_MENSAJE 0CDA                       ??_main 0012                __activetblptr 000002  
                     _ADCON1 000FC1                       _CCPR1L 000FBE             ___awdiv@dividend 0009  
        _DHT11_CheckResponse 0E30                       i2l1271 0ADE                       i2l1281 0B04  
                     i2l1273 0AE4                       i2l1265 0AC2                       i2l1275 0AEC  
                     i2l1267 0AC4                       i2l1277 0AF4                       i2l1285 0B0C  
                     i2l1269 0AD6                       i2l1279 0AFC                       i2l1465 0B20  
                     _OSCCON 000FD3                    ??___awdiv 000D                       _decena 0017  
                  ??___awmod 0007         __end_of_ENVIA_NIBBLE 0EE8         ?_DHT11_CheckResponse 0001  
           __end_of_init_LCD 0E84                       clear_0 0EEE             ___awdiv@quotient 000F  
            ___awmod@divisor 0005                       isa$std 000001              ___awmod@counter 0007  
                     _unidad 0016                       _strlen 0D5E                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
               ??_BORRAR_LCD 0006                    ?_LEER_LCD 0001                   __accesstop 0060  
    __end_of__initialization 0EF4                    ?_INT0_ISR 0001                 ??_LCD_CONFIG 0006  
              ___rparam_used 000001                 ??_ENVIA_CHAR 0004      __end_of_ESCRIBE_MENSAJE 0D24  
             __pcstackCOMRAM 0001        ??_DHT11_CheckResponse 0003           __end_of_BORRAR_LCD 0F12  
           ENVIA_LCD_CMD@aux 0005         __end_of_CURSOR_ONOFF 0E30           __end_of_LCD_CONFIG 0C24  
         __end_of_ENVIA_CHAR 0E00                   ??_LEER_LCD 0003             ENVIA_NIBBLE@dato 0003  
                 ??_INT0_ISR 0001                      _CCP1CON 000FBD                      ?_strlen 0003  
                    i2u33_40 0AD6                      i2u33_41 0AD2                 ??_POS_CURSOR 0007  
                  ?_init_LCD 0001                ??_DHT11_Start 0003                      __Hparam 0000  
                    __Lparam 0000             ?_ESCRIBE_MENSAJE 0007            __end_of_configuro 0EAC  
                    ___awdiv 094C                      ___awmod 0A10                 __psmallconst 0800  
      __end_of_ENVIA_LCD_CMD 0DCC            __end_of_convierte 0CDA                      __pcinit 0EE8  
         __end_of_POS_CURSOR 0D5E                      __ramtop 0800                      _centena 0018  
                    __ptext0 0822                      __ptext1 0E5C                      __ptext2 0BC4  
                    __ptext3 0E00                      __ptext4 0F02                      __ptext5 0F0A  
                    __ptext6 0C80                      __ptext7 0A10                      __ptext8 094C  
                    __ptext9 0E84             ___awmod@dividend 0003               __pintcode_body 0AC0  
               _ENVIA_NIBBLE 0ECC         end_of_initialization 0EF4                   ??_init_LCD 0007  
              __Lmediumconst 0000                      int_func 0AC0          __end_of_DHT11_Start 0ECC  
                    postinc0 000FEE                      strlen@a 0005                      strlen@s 0003  
                  _PORTBbits 000F81                    _TRISBbits 000F93                    _TRISCbits 000F94  
               _CURSOR_ONOFF 0E00           CURSOR_ONOFF@estado 0006           DHT11_ReadData@data 0004  
                  _T_Decimal 001B                    _T_Integer 001A               __end_of_strlen 0D98  
              ??_CURSOR_HOME 0006          start_initialization 0EE8            ENVIA_LCD_CMD@dato 0004  
                _DHT11_Start 0EAC  __end_of_DHT11_CheckResponse 0E5C                     ??_strlen 0005  
                __pbssCOMRAM 0016          __end_of_CURSOR_HOME 0F0A                    __pintcode 0008  
                   ?___awdiv 0009                     ?___awmod 0003               _DHT11_ReadData 0C24  
                  _configuro 0E84                  __smallconst 0800                    _convierte 0C80  
            convierte@numero 0011                     _LEER_LCD 0B52                     _INT0_ISR 0008  
                   _LATBbits 000F8A                     _LATCbits 000F8B                     _LATDbits 000F8C  
     __end_of_DHT11_ReadData 0C80             ESCRIBE_MENSAJE@i 000C               POS_CURSOR@fila 0007  
                 ?_configuro 0001                   ?_convierte 0001                     _Checksum 0019  
                _CURSOR_HOME 0F02                  _INTCON2bits 000FF1                     __Hrparam 0000  
                   __Lrparam 0000              ?_DHT11_ReadData 0001              DHT11_ReadData@i 0003  
                   __ptext10 0D24                     __ptext11 0D98                     __ptext12 0CDA  
                   __ptext13 0D5E                     __ptext14 0DCC                     __ptext15 0B52  
                   __ptext16 0ECC                     __ptext17 0EAC                     __ptext18 0C24  
                   __ptext19 0E30                   _BORRAR_LCD 0F0A                     _init_LCD 0E5C  
               ?_DHT11_Start 0001                   _LCD_CONFIG 0BC4                   _ENVIA_CHAR 0DCC  
                   isa$xinst 000000                     int$flags 001F                _ENVIA_LCD_CMD 0D98  
                ??_configuro 0003                  ??_convierte 0011                   _INTCONbits 000FF2  
          ??_ESCRIBE_MENSAJE 0009                     intlevel2 0000        ESCRIBE_MENSAJE@cadena 0007  
             ?_ENVIA_LCD_CMD 0001             _estado_backlight 001E                  ?_BORRAR_LCD 0001  
              ?_ENVIA_NIBBLE 0001                   _POS_CURSOR 0D24                   _RH_Decimal 001D  
                ?_LCD_CONFIG 0001           ESCRIBE_MENSAJE@tam 000B                  ?_ENVIA_CHAR 0001  
          POS_CURSOR@columna 0006                   _RH_Integer 001C  
