

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Nov 10 17:02:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000BC0                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _mensaje
    78  000BC0  55                 	db	85
    79  000BC1  50                 	db	80
    80  000BC2  43                 	db	67
    81  000BC3  20                 	db	32
    82  000BC4  45                 	db	69
    83  000BC5  78                 	db	120
    84  000BC6  69                 	db	105
    85  000BC7  67                 	db	103
    86  000BC8  65                 	db	101
    87  000BC9  74                 	db	116
    88  000BCA  65                 	db	101
    89  000BCB  20                 	db	32
    90  000BCC  49                 	db	73
    91  000BCD  6E                 	db	110
    92  000BCE  6E                 	db	110
    93  000BCF  6F                 	db	111
    94  000BD0  76                 	db	118
    95  000BD1  61                 	db	97
    96  000BD2  20                 	db	32
    97  000BD3  6C                 	db	108
    98  000BD4  61                 	db	97
    99  000BD5  20                 	db	32
   100  000BD6  6D                 	db	109
   101  000BD7  69                 	db	105
   102  000BD8  74                 	db	116
   103  000BD9  61                 	db	97
   104  000BDA  64                 	db	100
   105  000BDB  20                 	db	32
   106  000BDC  73                 	db	115
   107  000BDD  6F                 	db	111
   108  000BDE  62                 	db	98
   109  000BDF  72                 	db	114
   110  000BE0  65                 	db	101
   111  000BE1  76                 	db	118
   112  000BE2  69                 	db	105
   113  000BE3  76                 	db	118
   114  000BE4  65                 	db	101
   115  000BE5  00                 	db	0
   116                           
   117                           ;initializer for _efecto
   118  000BE6  05                 	db	5
   119  000BE7  02                 	db	2
   120  000BE8  00                 	db	0
   121  000BE9  07                 	db	7
   122  000BEA  06                 	db	6
   123  000BEB  03                 	db	3
   124                           
   125                           ;initializer for _foco_on
   126  000BEC  0E                 	db	14
   127  000BED  1F                 	db	31
   128  000BEE  1F                 	db	31
   129  000BEF  1F                 	db	31
   130  000BF0  1F                 	db	31
   131  000BF1  0E                 	db	14
   132  000BF2  0E                 	db	14
   133  000BF3  0E                 	db	14
   134                           
   135                           ;initializer for _foco_off
   136  000BF4  0E                 	db	14
   137  000BF5  11                 	db	17
   138  000BF6  11                 	db	17
   139  000BF7  11                 	db	17
   140  000BF8  11                 	db	17
   141  000BF9  0A                 	db	10
   142  000BFA  0E                 	db	14
   143  000BFB  0E                 	db	14
   144  0000                     _LATD	set	3980
   145  0000                     _PORTD	set	3971
   146  0000                     _LATDbits	set	3980
   147  0000                     _LATE	set	3981
   148  0000                     _TRISCbits	set	3988
   149  0000                     _TRISD	set	3989
   150  0000                     _RCSTAbits	set	4011
   151  0000                     _SPBRG	set	4015
   152  0000                     _TRISE	set	3990
   153  0000                     _ADCON1	set	4033
   154  0000                     _OSCCON	set	4051
   155  0000                     _PORTEbits	set	3972
   156  0000                     _INTCON3bits	set	4080
   157  0000                     _INTCON2bits	set	4081
   158  0000                     _INTCONbits	set	4082
   159  0000                     _RCONbits	set	4048
   160  0000                     _TXREG	set	4013
   161  0000                     _TXSTAbits	set	4012
   162                           
   163                           	psect	smallconst
   164  000800                     __psmallconst:
   165                           	callstack 0
   166  000800  00                 	db	0
   167  000801                     STR_2:
   168  000801  4D                 	db	77	;'M'
   169  000802  69                 	db	105	;'i'
   170  000803  63                 	db	99	;'c'
   171  000804  72                 	db	114	;'r'
   172  000805  6F                 	db	111	;'o'
   173  000806  20                 	db	32
   174  000807  53                 	db	83	;'S'
   175  000808  31                 	db	49	;'1'
   176  000809  33                 	db	51	;'3'
   177  00080A  20                 	db	32
   178  00080B  32                 	db	50	;'2'
   179  00080C  30                 	db	48	;'0'
   180  00080D  32                 	db	50	;'2'
   181  00080E  32                 	db	50	;'2'
   182  00080F  2D                 	db	45
   183  000810  32                 	db	50	;'2'
   184  000811  00                 	db	0
   185  000812                     STR_1:
   186  000812  4C                 	db	76	;'L'
   187  000813  45                 	db	69	;'E'
   188  000814  44                 	db	68	;'D'
   189  000815  73                 	db	115	;'s'
   190  000816  3A                 	db	58	;':'
   191  000817  20                 	db	32
   192  000818  00                 	db	0
   193  000819  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198  000CDA                     __pcinit:
   199                           	callstack 0
   200  000CDA                     start_initialization:
   201                           	callstack 0
   202  000CDA                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Initialize objects allocated to COMRAM (60 bytes)
   206                           ; load TBLPTR registers with __pidataCOMRAM
   207  000CDA  0EC0               	movlw	low __pidataCOMRAM
   208  000CDC  6EF6               	movwf	tblptrl,c
   209  000CDE  0E0B               	movlw	high __pidataCOMRAM
   210  000CE0  6EF7               	movwf	tblptrh,c
   211  000CE2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   212  000CE4  6EF8               	movwf	tblptru,c
   213  000CE6  EE00  F001         	lfsr	0,__pdataCOMRAM
   214  000CEA  EE10 F03C          	lfsr	1,60
   215  000CEE                     copy_data0:
   216  000CEE  0009               	tblrd		*+
   217  000CF0  CFF5 FFEE          	movff	tablat,postinc0
   218  000CF4  50E5               	movf	postdec1,w,c
   219  000CF6  50E1               	movf	fsr1l,w,c
   220  000CF8  E1FA               	bnz	copy_data0
   221                           
   222                           ; Clear objects allocated to COMRAM (2 bytes)
   223  000CFA  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   224  000CFC  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   225  000CFE                     end_of_initialization:
   226                           	callstack 0
   227  000CFE                     __end_of__initialization:
   228                           	callstack 0
   229  000CFE  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   230  000D00  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   231  000D02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   232  000D04  6EF8               	movwf	tblptru,c
   233  000D06  0100               	movlb	0
   234  000D08  EF0D  F004         	goto	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMRAM
   237  00004F                     __pbssCOMRAM:
   238                           	callstack 0
   239  00004F                     _estado_t:
   240                           	callstack 0
   241  00004F                     	ds	1
   242  000050                     _estado_e:
   243                           	callstack 0
   244  000050                     	ds	1
   245                           
   246                           	psect	dataCOMRAM
   247  000001                     __pdataCOMRAM:
   248                           	callstack 0
   249  000001                     _mensaje:
   250                           	callstack 0
   251  000001                     	ds	38
   252  000027                     _efecto:
   253                           	callstack 0
   254  000027                     	ds	6
   255  00002D                     _foco_on:
   256                           	callstack 0
   257  00002D                     	ds	8
   258  000035                     _foco_off:
   259                           	callstack 0
   260  000035                     	ds	8
   261                           
   262                           	psect	cstackCOMRAM
   263  00003D                     __pcstackCOMRAM:
   264                           	callstack 0
   265  00003D                     ??_INT2_ISR:
   266                           
   267                           ; 1 bytes @ 0x0
   268  00003D                     	ds	5
   269  000042                     INT2_ISR@y:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x5
   273  000042                     	ds	1
   274  000043                     ??_retardon:
   275  000043                     ENVIA_NIBBLE@dato:
   276                           	callstack 0
   277  000043                     LEER_LCD@aux:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x6
   281  000043                     	ds	1
   282  000044                     ENVIA_CHAR@dato:
   283                           	callstack 0
   284  000044                     ENVIA_LCD_CMD@dato:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x7
   288  000044                     	ds	1
   289  000045                     ENVIA_CHAR@aux:
   290                           	callstack 0
   291  000045                     ENVIA_LCD_CMD@aux:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x8
   295  000045                     	ds	1
   296  000046                     ??_LCD_CONFIG:
   297  000046                     POS_CURSOR@columna:
   298                           	callstack 0
   299  000046                     CURSOR_ONOFF@estado:
   300                           	callstack 0
   301  000046                     ESCRIBE_MENSAJE@cadena:
   302                           	callstack 0
   303  000046                     GENERACARACTER@vector:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x9
   307  000046                     	ds	1
   308  000047                     POS_CURSOR@fila:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0xA
   312  000047                     	ds	1
   313  000048                     ESCRIBE_MENSAJE@tam:
   314                           	callstack 0
   315  000048                     GENERACARACTER@pos:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xB
   319  000048                     	ds	1
   320  000049                     ??_ESCRIBE_MENSAJE:
   321  000049                     GENERACARACTER@i:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0xC
   325  000049                     	ds	1
   326  00004A                     ??_init_LCD:
   327                           
   328                           ; 1 bytes @ 0xD
   329  00004A                     	ds	1
   330  00004B                     ESCRIBE_MENSAJE@i:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xE
   334  00004B                     	ds	1
   335  00004C                     ??_main:
   336                           
   337                           ; 1 bytes @ 0xF
   338  00004C                     	ds	2
   339  00004E                     main@x:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x11
   343  00004E                     	ds	1
   344                           
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 89 in file "maincode4.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  x               1   17[COMRAM] unsigned char 
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   364 ;;      Params:         0       0       0       0       0       0       0       0       0
   365 ;;      Locals:         1       0       0       0       0       0       0       0       0
   366 ;;      Temps:          2       0       0       0       0       0       0       0       0
   367 ;;      Totals:         3       0       0       0       0       0       0       0       0
   368 ;;Total ram usage:        3 bytes
   369 ;; Hardware stack levels required when called: 7
   370 ;; This function calls:
   371 ;;		_ESCRIBE_MENSAJE
   372 ;;		_LCD_LEDs
   373 ;;		_POS_CURSOR
   374 ;;		_configuro
   375 ;;		_init_LCD
   376 ;;		_retardon
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text0
   383  00081A                     __ptext0:
   384                           	callstack 0
   385  00081A                     _main:
   386                           	callstack 24
   387  00081A                     
   388                           ;maincode4.c: 90:     configuro();
   389  00081A  EC9E  F006         	call	_configuro	;wreg free
   390  00081E                     
   391                           ;maincode4.c: 91:     init_LCD();
   392  00081E  EC9D  F005         	call	_init_LCD	;wreg free
   393  000822                     
   394                           ;maincode4.c: 92:     POS_CURSOR(1,0);
   395  000822  0E00               	movlw	0
   396  000824  6E46               	movwf	POS_CURSOR@columna^0,c
   397  000826  0E01               	movlw	1
   398  000828  EC1C  F006         	call	_POS_CURSOR
   399  00082C                     
   400                           ;maincode4.c: 93:     ESCRIBE_MENSAJE("Micro S13 2022-2",16);
   401  00082C  0E01               	movlw	low STR_2
   402  00082E  6E46               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   403  000830  0E08               	movlw	high STR_2
   404  000832  6E47               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   405  000834  0E10               	movlw	16
   406  000836  6E48               	movwf	ESCRIBE_MENSAJE@tam^0,c
   407  000838  ECC1  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   408  00083C  EF69  F004         	goto	l1380
   409  000840                     l1330:
   410                           
   411                           ;maincode4.c: 98:                 for(x=0;x<2;x++){
   412  000840  0E00               	movlw	0
   413  000842  6E4E               	movwf	main@x^0,c
   414  000844                     l1336:
   415                           
   416                           ;maincode4.c: 99:                     LATE = efecto[x];
   417  000844  0E27               	movlw	low _efecto
   418  000846  244E               	addwf	main@x^0,w,c
   419  000848  6ED9               	movwf	fsr2l,c
   420  00084A  6ADA               	clrf	fsr2h,c
   421  00084C  0E00               	movlw	high _efecto
   422  00084E  22DA               	addwfc	fsr2h,f,c
   423  000850  50DF               	movf	indf2,w,c
   424  000852  6E8D               	movwf	141,c	;volatile
   425  000854                     
   426                           ;maincode4.c: 100:                     LCD_LEDs();
   427  000854  ECCA  F004         	call	_LCD_LEDs	;wreg free
   428  000858                     
   429                           ;maincode4.c: 101:                     retardon();
   430  000858  EC84  F004         	call	_retardon	;wreg free
   431  00085C                     
   432                           ;maincode4.c: 102:                 }
   433  00085C  2A4E               	incf	main@x^0,f,c
   434  00085E  0E01               	movlw	1
   435  000860  644E               	cpfsgt	main@x^0,c
   436  000862  EF35  F004         	goto	u331
   437  000866  EF37  F004         	goto	u330
   438  00086A                     u331:
   439  00086A  EF22  F004         	goto	l1336
   440  00086E                     u330:
   441  00086E  EF69  F004         	goto	l1380
   442  000872                     l1346:
   443                           
   444                           ;maincode4.c: 105:                 for(x=2;x<4;x++){
   445  000872  0E02               	movlw	2
   446  000874  6E4E               	movwf	main@x^0,c
   447  000876                     l1352:
   448                           
   449                           ;maincode4.c: 106:                     LATE = efecto[x];
   450  000876  0E27               	movlw	low _efecto
   451  000878  244E               	addwf	main@x^0,w,c
   452  00087A  6ED9               	movwf	fsr2l,c
   453  00087C  6ADA               	clrf	fsr2h,c
   454  00087E  0E00               	movlw	high _efecto
   455  000880  22DA               	addwfc	fsr2h,f,c
   456  000882  50DF               	movf	indf2,w,c
   457  000884  6E8D               	movwf	141,c	;volatile
   458  000886                     
   459                           ;maincode4.c: 107:                     LCD_LEDs();
   460  000886  ECCA  F004         	call	_LCD_LEDs	;wreg free
   461  00088A                     
   462                           ;maincode4.c: 108:                     retardon();
   463  00088A  EC84  F004         	call	_retardon	;wreg free
   464  00088E                     
   465                           ;maincode4.c: 109:                 }
   466  00088E  2A4E               	incf	main@x^0,f,c
   467  000890  0E03               	movlw	3
   468  000892  644E               	cpfsgt	main@x^0,c
   469  000894  EF4E  F004         	goto	u341
   470  000898  EF50  F004         	goto	u340
   471  00089C                     u341:
   472  00089C  EF3B  F004         	goto	l1352
   473  0008A0                     u340:
   474  0008A0  EF69  F004         	goto	l1380
   475  0008A4                     l1362:
   476                           
   477                           ;maincode4.c: 112:                 for(x=4;x<6;x++){
   478  0008A4  0E04               	movlw	4
   479  0008A6  6E4E               	movwf	main@x^0,c
   480  0008A8                     l1368:
   481                           
   482                           ;maincode4.c: 113:                     LATE = efecto[x];
   483  0008A8  0E27               	movlw	low _efecto
   484  0008AA  244E               	addwf	main@x^0,w,c
   485  0008AC  6ED9               	movwf	fsr2l,c
   486  0008AE  6ADA               	clrf	fsr2h,c
   487  0008B0  0E00               	movlw	high _efecto
   488  0008B2  22DA               	addwfc	fsr2h,f,c
   489  0008B4  50DF               	movf	indf2,w,c
   490  0008B6  6E8D               	movwf	141,c	;volatile
   491  0008B8                     
   492                           ;maincode4.c: 114:                     LCD_LEDs();
   493  0008B8  ECCA  F004         	call	_LCD_LEDs	;wreg free
   494  0008BC                     
   495                           ;maincode4.c: 115:                     retardon();
   496  0008BC  EC84  F004         	call	_retardon	;wreg free
   497  0008C0                     
   498                           ;maincode4.c: 116:                 }
   499  0008C0  2A4E               	incf	main@x^0,f,c
   500  0008C2  0E05               	movlw	5
   501  0008C4  644E               	cpfsgt	main@x^0,c
   502  0008C6  EF67  F004         	goto	u351
   503  0008CA  EF69  F004         	goto	u350
   504  0008CE                     u351:
   505  0008CE  EF54  F004         	goto	l1368
   506  0008D2                     u350:
   507  0008D2                     l1380:
   508  0008D2  5050               	movf	_estado_e^0,w,c
   509  0008D4  6E4C               	movwf	??_main^0,c
   510  0008D6  6A4D               	clrf	(??_main+1)^0,c
   511                           
   512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   513                           ; Switch size 1, requested type "simple"
   514                           ; Number of cases is 1, Range of values is 0 to 0
   515                           ; switch strategies available:
   516                           ; Name         Instructions Cycles
   517                           ; simple_byte            4     3 (average)
   518                           ;	Chosen strategy is simple_byte
   519  0008D8  504D               	movf	(??_main+1)^0,w,c
   520  0008DA  0A00               	xorlw	0	; case 0
   521  0008DC  B4D8               	btfsc	status,2,c
   522  0008DE  EF73  F004         	goto	l1394
   523  0008E2  EF69  F004         	goto	l1380
   524  0008E6                     l1394:
   525                           
   526                           ; Switch size 1, requested type "simple"
   527                           ; Number of cases is 3, Range of values is 0 to 2
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; simple_byte           10     6 (average)
   531                           ;	Chosen strategy is simple_byte
   532  0008E6  504C               	movf	??_main^0,w,c
   533  0008E8  0A00               	xorlw	0	; case 0
   534  0008EA  B4D8               	btfsc	status,2,c
   535  0008EC  EF20  F004         	goto	l1330
   536  0008F0  0A01               	xorlw	1	; case 1
   537  0008F2  B4D8               	btfsc	status,2,c
   538  0008F4  EF39  F004         	goto	l1346
   539  0008F8  0A03               	xorlw	3	; case 2
   540  0008FA  B4D8               	btfsc	status,2,c
   541  0008FC  EF52  F004         	goto	l1362
   542  000900  EF69  F004         	goto	l1380
   543  000904  EF40  F000         	goto	start
   544  000908                     __end_of_main:
   545                           	callstack 0
   546                           
   547 ;; *************** function _retardon *****************
   548 ;; Defined at:
   549 ;;		line 68 in file "maincode4.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         0       0       0       0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0
   565 ;;      Temps:          2       0       0       0       0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 3
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  000908                     __ptext1:
   579                           	callstack 0
   580  000908                     _retardon:
   581                           	callstack 27
   582  000908                     
   583                           ;maincode4.c: 69:     switch(estado_t){
   584  000908  EFB0  F004         	goto	l1118
   585  00090C                     l1110:
   586                           
   587                           ;maincode4.c: 71:             _delay((unsigned long)((100)*(8000000UL/4000.0)));
   588  00090C  0E02               	movlw	2
   589  00090E  6E44               	movwf	(??_retardon+1)^0,c
   590  000910  0E04               	movlw	4
   591  000912  6E43               	movwf	??_retardon^0,c
   592  000914  0EBA               	movlw	186
   593  000916                     u367:
   594  000916  2EE8               	decfsz	wreg,f,c
   595  000918  D7FE               	bra	u367
   596  00091A  2E43               	decfsz	??_retardon^0,f,c
   597  00091C  D7FC               	bra	u367
   598  00091E  2E44               	decfsz	(??_retardon+1)^0,f,c
   599  000920  D7FA               	bra	u367
   600  000922  D000               	nop2	
   601                           
   602                           ;maincode4.c: 72:             break;
   603  000924  EFC9  F004         	goto	l157
   604  000928                     l1112:
   605                           
   606                           ;maincode4.c: 74:             _delay((unsigned long)((200)*(8000000UL/4000.0)));
   607  000928  0E03               	movlw	3
   608  00092A  6E44               	movwf	(??_retardon+1)^0,c
   609  00092C  0E08               	movlw	8
   610  00092E  6E43               	movwf	??_retardon^0,c
   611  000930  0E77               	movlw	119
   612  000932                     u377:
   613  000932  2EE8               	decfsz	wreg,f,c
   614  000934  D7FE               	bra	u377
   615  000936  2E43               	decfsz	??_retardon^0,f,c
   616  000938  D7FC               	bra	u377
   617  00093A  2E44               	decfsz	(??_retardon+1)^0,f,c
   618  00093C  D7FA               	bra	u377
   619  00093E  F000               	nop	
   620                           
   621                           ;maincode4.c: 75:             break;
   622  000940  EFC9  F004         	goto	l157
   623  000944                     l1114:
   624                           
   625                           ;maincode4.c: 77:             _delay((unsigned long)((400)*(8000000UL/4000.0)));
   626  000944  0E05               	movlw	5
   627  000946  6E44               	movwf	(??_retardon+1)^0,c
   628  000948  0E0F               	movlw	15
   629  00094A  6E43               	movwf	??_retardon^0,c
   630  00094C  0EF1               	movlw	241
   631  00094E                     u387:
   632  00094E  2EE8               	decfsz	wreg,f,c
   633  000950  D7FE               	bra	u387
   634  000952  2E43               	decfsz	??_retardon^0,f,c
   635  000954  D7FC               	bra	u387
   636  000956  2E44               	decfsz	(??_retardon+1)^0,f,c
   637  000958  D7FA               	bra	u387
   638  00095A  F000               	nop	
   639                           
   640                           ;maincode4.c: 78:             break;
   641  00095C  EFC9  F004         	goto	l157
   642  000960                     l1118:
   643  000960  504F               	movf	_estado_t^0,w,c
   644  000962  6E43               	movwf	??_retardon^0,c
   645  000964  6A44               	clrf	(??_retardon+1)^0,c
   646                           
   647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   648                           ; Switch size 1, requested type "simple"
   649                           ; Number of cases is 1, Range of values is 0 to 0
   650                           ; switch strategies available:
   651                           ; Name         Instructions Cycles
   652                           ; simple_byte            4     3 (average)
   653                           ;	Chosen strategy is simple_byte
   654  000966  5044               	movf	(??_retardon+1)^0,w,c
   655  000968  0A00               	xorlw	0	; case 0
   656  00096A  B4D8               	btfsc	status,2,c
   657  00096C  EFBA  F004         	goto	l1396
   658  000970  EFC9  F004         	goto	l157
   659  000974                     l1396:
   660                           
   661                           ; Switch size 1, requested type "simple"
   662                           ; Number of cases is 3, Range of values is 0 to 2
   663                           ; switch strategies available:
   664                           ; Name         Instructions Cycles
   665                           ; simple_byte           10     6 (average)
   666                           ;	Chosen strategy is simple_byte
   667  000974  5043               	movf	??_retardon^0,w,c
   668  000976  0A00               	xorlw	0	; case 0
   669  000978  B4D8               	btfsc	status,2,c
   670  00097A  EF86  F004         	goto	l1110
   671  00097E  0A01               	xorlw	1	; case 1
   672  000980  B4D8               	btfsc	status,2,c
   673  000982  EF94  F004         	goto	l1112
   674  000986  0A03               	xorlw	3	; case 2
   675  000988  B4D8               	btfsc	status,2,c
   676  00098A  EFA2  F004         	goto	l1114
   677  00098E  EFC9  F004         	goto	l157
   678  000992                     l157:
   679  000992  0012               	return		;funcret
   680  000994                     __end_of_retardon:
   681                           	callstack 0
   682                           
   683 ;; *************** function _init_LCD *****************
   684 ;; Defined at:
   685 ;;		line 34 in file "maincode4.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;		None
   688 ;; Auto vars:     Size  Location     Type
   689 ;;		None
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   699 ;;      Params:         0       0       0       0       0       0       0       0       0
   700 ;;      Locals:         0       0       0       0       0       0       0       0       0
   701 ;;      Temps:          1       0       0       0       0       0       0       0       0
   702 ;;      Totals:         1       0       0       0       0       0       0       0       0
   703 ;;Total ram usage:        1 bytes
   704 ;; Hardware stack levels used: 1
   705 ;; Hardware stack levels required when called: 6
   706 ;; This function calls:
   707 ;;		_BORRAR_LCD
   708 ;;		_CURSOR_HOME
   709 ;;		_CURSOR_ONOFF
   710 ;;		_GENERACARACTER
   711 ;;		_LCD_CONFIG
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  000B3A                     __ptext2:
   719                           	callstack 0
   720  000B3A                     _init_LCD:
   721                           	callstack 24
   722  000B3A                     
   723                           ;maincode4.c: 35:     TRISD = 0x00;
   724  000B3A  0E00               	movlw	0
   725  000B3C  6E95               	movwf	149,c	;volatile
   726  000B3E                     
   727                           ;maincode4.c: 36:     LCD_CONFIG();
   728  000B3E  EC3E  F005         	call	_LCD_CONFIG	;wreg free
   729  000B42                     
   730                           ;maincode4.c: 37:     _delay((unsigned long)((21)*(8000000UL/4000.0)));
   731  000B42  0E37               	movlw	55
   732  000B44  6E4A               	movwf	??_init_LCD^0,c
   733  000B46  0E8A               	movlw	138
   734  000B48                     u397:
   735  000B48  2EE8               	decfsz	wreg,f,c
   736  000B4A  D7FE               	bra	u397
   737  000B4C  2E4A               	decfsz	??_init_LCD^0,f,c
   738  000B4E  D7FC               	bra	u397
   739  000B50  D000               	nop2	
   740  000B52                     
   741                           ;maincode4.c: 38:     BORRAR_LCD();
   742  000B52  ECDA  F006         	call	_BORRAR_LCD	;wreg free
   743  000B56                     
   744                           ;maincode4.c: 39:     CURSOR_HOME();
   745  000B56  ECD6  F006         	call	_CURSOR_HOME	;wreg free
   746  000B5A                     
   747                           ;maincode4.c: 40:     CURSOR_ONOFF(1);
   748  000B5A  0E01               	movlw	1
   749  000B5C  EC86  F006         	call	_CURSOR_ONOFF
   750  000B60                     
   751                           ;maincode4.c: 41:     GENERACARACTER(foco_off,0);
   752  000B60  0E35               	movlw	low _foco_off
   753  000B62  6E46               	movwf	GENERACARACTER@vector^0,c
   754  000B64  0E00               	movlw	high _foco_off
   755  000B66  6E47               	movwf	(GENERACARACTER@vector+1)^0,c
   756  000B68  0E00               	movlw	0
   757  000B6A  6E48               	movwf	GENERACARACTER@pos^0,c
   758  000B6C  ECFE  F005         	call	_GENERACARACTER	;wreg free
   759  000B70                     
   760                           ;maincode4.c: 42:     GENERACARACTER(foco_on,1);
   761  000B70  0E2D               	movlw	low _foco_on
   762  000B72  6E46               	movwf	GENERACARACTER@vector^0,c
   763  000B74  0E00               	movlw	high _foco_on
   764  000B76  6E47               	movwf	(GENERACARACTER@vector+1)^0,c
   765  000B78  0E01               	movlw	1
   766  000B7A  6E48               	movwf	GENERACARACTER@pos^0,c
   767  000B7C  ECFE  F005         	call	_GENERACARACTER	;wreg free
   768  000B80  0012               	return		;funcret
   769  000B82                     __end_of_init_LCD:
   770                           	callstack 0
   771                           
   772 ;; *************** function _LCD_CONFIG *****************
   773 ;; Defined at:
   774 ;;		line 72 in file "LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   788 ;;      Params:         0       0       0       0       0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0
   790 ;;      Temps:          1       0       0       0       0       0       0       0       0
   791 ;;      Totals:         1       0       0       0       0       0       0       0       0
   792 ;;Total ram usage:        1 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 5
   795 ;; This function calls:
   796 ;;		_ENVIA_LCD_CMD
   797 ;;		_ENVIA_NIBBLE
   798 ;; This function is called by:
   799 ;;		_init_LCD
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text3
   804  000A7C                     __ptext3:
   805                           	callstack 0
   806  000A7C                     _LCD_CONFIG:
   807                           	callstack 24
   808  000A7C                     
   809                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   810  000A7C  908C               	bcf	140,0,c	;volatile
   811                           
   812                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   813  000A7E  928C               	bcf	140,1,c	;volatile
   814  000A80                     
   815                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   816  000A80  0E30               	movlw	48
   817  000A82  ECC8  F006         	call	_ENVIA_NIBBLE
   818  000A86                     
   819                           ;LCD.c: 77:         _delay(24000);
   820  000A86  0E20               	movlw	32
   821  000A88  6E46               	movwf	??_LCD_CONFIG^0,c
   822  000A8A  0E2A               	movlw	42
   823  000A8C                     u407:
   824  000A8C  2EE8               	decfsz	wreg,f,c
   825  000A8E  D7FE               	bra	u407
   826  000A90  2E46               	decfsz	??_LCD_CONFIG^0,f,c
   827  000A92  D7FC               	bra	u407
   828  000A94                     
   829                           ;LCD.c: 78:         _delay(24000);
   830  000A94  0E20               	movlw	32
   831  000A96  6E46               	movwf	??_LCD_CONFIG^0,c
   832  000A98  0E2A               	movlw	42
   833  000A9A                     u417:
   834  000A9A  2EE8               	decfsz	wreg,f,c
   835  000A9C  D7FE               	bra	u417
   836  000A9E  2E46               	decfsz	??_LCD_CONFIG^0,f,c
   837  000AA0  D7FC               	bra	u417
   838                           
   839                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   840  000AA2  0E30               	movlw	48
   841  000AA4  ECC8  F006         	call	_ENVIA_NIBBLE
   842  000AA8                     
   843                           ;LCD.c: 83:  _delay(1200);
   844  000AA8  0EF0               	movlw	240
   845  000AAA                     u427:
   846  000AAA  D000               	nop2	
   847  000AAC  2EE8               	decfsz	wreg,f,c
   848  000AAE  D7FD               	bra	u427
   849  000AB0                     
   850                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   851  000AB0  0E30               	movlw	48
   852  000AB2  ECC8  F006         	call	_ENVIA_NIBBLE
   853  000AB6                     
   854                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   855  000AB6  0E20               	movlw	32
   856  000AB8  ECC8  F006         	call	_ENVIA_NIBBLE
   857  000ABC                     
   858                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   859  000ABC  0E01               	movlw	1
   860  000ABE  EC39  F006         	call	_ENVIA_LCD_CMD
   861  000AC2                     
   862                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   863  000AC2  0E28               	movlw	40
   864  000AC4  EC39  F006         	call	_ENVIA_LCD_CMD
   865  000AC8                     
   866                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   867  000AC8  0E0F               	movlw	15
   868  000ACA  EC39  F006         	call	_ENVIA_LCD_CMD
   869  000ACE                     
   870                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   871  000ACE  0E06               	movlw	6
   872  000AD0  EC39  F006         	call	_ENVIA_LCD_CMD
   873  000AD4                     
   874                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   875  000AD4  0E01               	movlw	1
   876  000AD6  EC39  F006         	call	_ENVIA_LCD_CMD
   877  000ADA  0012               	return		;funcret
   878  000ADC                     __end_of_LCD_CONFIG:
   879                           	callstack 0
   880                           
   881 ;; *************** function _GENERACARACTER *****************
   882 ;; Defined at:
   883 ;;		line 153 in file "LCD.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  vector          2    9[COMRAM] PTR const unsigned char 
   886 ;;		 -> foco_on(8), foco_off(8), 
   887 ;;  pos             1   11[COMRAM] unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  i               1   12[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         3       0       0       0       0       0       0       0       0
   900 ;;      Locals:         1       0       0       0       0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0       0       0       0       0
   902 ;;      Totals:         4       0       0       0       0       0       0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 5
   906 ;; This function calls:
   907 ;;		_ENVIA_CHAR
   908 ;;		_ENVIA_LCD_CMD
   909 ;; This function is called by:
   910 ;;		_init_LCD
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text4
   915  000BFC                     __ptext4:
   916                           	callstack 0
   917  000BFC                     _GENERACARACTER:
   918                           	callstack 24
   919  000BFC                     
   920                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
   921  000BFC  5048               	movf	GENERACARACTER@pos^0,w,c
   922  000BFE  0D08               	mullw	8
   923  000C00  50F3               	movf	243,w,c
   924  000C02  0F40               	addlw	64
   925  000C04  EC39  F006         	call	_ENVIA_LCD_CMD
   926  000C08                     
   927                           ;LCD.c: 157:  for(i=0;i<8;i++)
   928  000C08  0E00               	movlw	0
   929  000C0A  6E49               	movwf	GENERACARACTER@i^0,c
   930  000C0C                     l1276:
   931                           
   932                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
   933  000C0C  5049               	movf	GENERACARACTER@i^0,w,c
   934  000C0E  2446               	addwf	GENERACARACTER@vector^0,w,c
   935  000C10  6ED9               	movwf	fsr2l,c
   936  000C12  0E00               	movlw	0
   937  000C14  2047               	addwfc	(GENERACARACTER@vector+1)^0,w,c
   938  000C16  6EDA               	movwf	fsr2h,c
   939  000C18  50DF               	movf	indf2,w,c
   940  000C1A  EC53  F006         	call	_ENVIA_CHAR
   941  000C1E                     
   942                           ;LCD.c: 160:  }
   943  000C1E  2A49               	incf	GENERACARACTER@i^0,f,c
   944  000C20  0E07               	movlw	7
   945  000C22  6449               	cpfsgt	GENERACARACTER@i^0,c
   946  000C24  EF16  F006         	goto	u291
   947  000C28  EF18  F006         	goto	u290
   948  000C2C                     u291:
   949  000C2C  EF06  F006         	goto	l1276
   950  000C30                     u290:
   951  000C30                     
   952                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
   953  000C30  0E80               	movlw	128
   954  000C32  EC39  F006         	call	_ENVIA_LCD_CMD
   955  000C36  0012               	return		;funcret
   956  000C38                     __end_of_GENERACARACTER:
   957                           	callstack 0
   958                           
   959 ;; *************** function _CURSOR_ONOFF *****************
   960 ;; Defined at:
   961 ;;		line 35 in file "LCD.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  estado          1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  estado          1    9[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   975 ;;      Params:         0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 5
   982 ;; This function calls:
   983 ;;		_ENVIA_LCD_CMD
   984 ;; This function is called by:
   985 ;;		_init_LCD
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text5
   990  000D0C                     __ptext5:
   991                           	callstack 0
   992  000D0C                     _CURSOR_ONOFF:
   993                           	callstack 24
   994                           
   995                           ;incstack = 0
   996                           ;CURSOR_ONOFF@estado stored from wreg
   997  000D0C  6E46               	movwf	CURSOR_ONOFF@estado^0,c
   998  000D0E                     
   999                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1000  000D0E  5046               	movf	CURSOR_ONOFF@estado^0,w,c
  1001  000D10  A4D8               	btfss	status,2,c
  1002  000D12  EF8D  F006         	goto	u41
  1003  000D16  EF8F  F006         	goto	u40
  1004  000D1A                     u41:
  1005  000D1A  EF92  F006         	goto	l986
  1006  000D1E                     u40:
  1007  000D1E  0E0E               	movlw	14
  1008  000D20  EC39  F006         	call	_ENVIA_LCD_CMD
  1009  000D24                     l986:
  1010                           
  1011                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1012  000D24  0446               	decf	CURSOR_ONOFF@estado^0,w,c
  1013  000D26  A4D8               	btfss	status,2,c
  1014  000D28  EF98  F006         	goto	u51
  1015  000D2C  EF9A  F006         	goto	u50
  1016  000D30                     u51:
  1017  000D30  EF9D  F006         	goto	l42
  1018  000D34                     u50:
  1019  000D34  0E0C               	movlw	12
  1020  000D36  EC39  F006         	call	_ENVIA_LCD_CMD
  1021  000D3A                     l42:
  1022  000D3A  0012               	return		;funcret
  1023  000D3C                     __end_of_CURSOR_ONOFF:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _CURSOR_HOME *****************
  1027 ;; Defined at:
  1028 ;;		line 30 in file "LCD.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 5
  1049 ;; This function calls:
  1050 ;;		_ENVIA_LCD_CMD
  1051 ;; This function is called by:
  1052 ;;		_init_LCD
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text6
  1057  000DAC                     __ptext6:
  1058                           	callstack 0
  1059  000DAC                     _CURSOR_HOME:
  1060                           	callstack 24
  1061  000DAC                     
  1062                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1063  000DAC  0E02               	movlw	2
  1064  000DAE  EC39  F006         	call	_ENVIA_LCD_CMD
  1065  000DB2  0012               	return		;funcret
  1066  000DB4                     __end_of_CURSOR_HOME:
  1067                           	callstack 0
  1068                           
  1069 ;; *************** function _BORRAR_LCD *****************
  1070 ;; Defined at:
  1071 ;;		line 67 in file "LCD.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1085 ;;      Params:         0       0       0       0       0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 5
  1092 ;; This function calls:
  1093 ;;		_ENVIA_LCD_CMD
  1094 ;; This function is called by:
  1095 ;;		_init_LCD
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text7
  1100  000DB4                     __ptext7:
  1101                           	callstack 0
  1102  000DB4                     _BORRAR_LCD:
  1103                           	callstack 24
  1104  000DB4                     
  1105                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1106  000DB4  0E01               	movlw	1
  1107  000DB6  EC39  F006         	call	_ENVIA_LCD_CMD
  1108  000DBA  0012               	return		;funcret
  1109  000DBC                     __end_of_BORRAR_LCD:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _configuro *****************
  1113 ;; Defined at:
  1114 ;;		line 13 in file "maincode4.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, status,2
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1128 ;;      Params:         0       0       0       0       0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1131 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1132 ;;Total ram usage:        0 bytes
  1133 ;; Hardware stack levels used: 1
  1134 ;; Hardware stack levels required when called: 3
  1135 ;; This function calls:
  1136 ;;		Nothing
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text8
  1143  000D3C                     __ptext8:
  1144                           	callstack 0
  1145  000D3C                     _configuro:
  1146                           	callstack 27
  1147  000D3C                     
  1148                           ;maincode4.c: 14:     OSCCON = 0x70;
  1149  000D3C  0E70               	movlw	112
  1150  000D3E  6ED3               	movwf	211,c	;volatile
  1151                           
  1152                           ;maincode4.c: 15:     ADCON1 = 0x0F;
  1153  000D40  0E0F               	movlw	15
  1154  000D42  6EC1               	movwf	193,c	;volatile
  1155                           
  1156                           ;maincode4.c: 16:     TRISE = 0xF8;
  1157  000D44  0EF8               	movlw	248
  1158  000D46  6E96               	movwf	150,c	;volatile
  1159  000D48                     
  1160                           ;maincode4.c: 17:     RCONbits.IPEN = 1;
  1161  000D48  8ED0               	bsf	208,7,c	;volatile
  1162  000D4A                     
  1163                           ;maincode4.c: 18:     INTCONbits.GIEH = 1;
  1164  000D4A  8EF2               	bsf	242,7,c	;volatile
  1165  000D4C                     
  1166                           ;maincode4.c: 19:     INTCONbits.GIEL = 1;
  1167  000D4C  8CF2               	bsf	242,6,c	;volatile
  1168  000D4E                     
  1169                           ;maincode4.c: 20:     INTCONbits.INT0IE = 1;
  1170  000D4E  88F2               	bsf	242,4,c	;volatile
  1171  000D50                     
  1172                           ;maincode4.c: 21:     INTCON2bits.RBPU = 0;
  1173  000D50  9EF1               	bcf	241,7,c	;volatile
  1174  000D52                     
  1175                           ;maincode4.c: 22:     INTCON2bits.INTEDG0 = 0;
  1176  000D52  9CF1               	bcf	241,6,c	;volatile
  1177  000D54                     
  1178                           ;maincode4.c: 23:     INTCON3bits.INT1IE = 1;
  1179  000D54  86F0               	bsf	240,3,c	;volatile
  1180  000D56                     
  1181                           ;maincode4.c: 24:     INTCON2bits.INTEDG1 = 0;
  1182  000D56  9AF1               	bcf	241,5,c	;volatile
  1183  000D58                     
  1184                           ;maincode4.c: 25:     INTCON3bits.INT2IE = 1;
  1185  000D58  88F0               	bsf	240,4,c	;volatile
  1186  000D5A                     
  1187                           ;maincode4.c: 26:     INTCON2bits.INTEDG2 = 0;
  1188  000D5A  98F1               	bcf	241,4,c	;volatile
  1189  000D5C                     
  1190                           ;maincode4.c: 27:     INTCON3bits.INT2IP = 0;
  1191  000D5C  9EF0               	bcf	240,7,c	;volatile
  1192                           
  1193                           ;maincode4.c: 28:     SPBRG = 12;
  1194  000D5E  0E0C               	movlw	12
  1195  000D60  6EAF               	movwf	175,c	;volatile
  1196  000D62                     
  1197                           ;maincode4.c: 29:     RCSTAbits.SPEN = 1;
  1198  000D62  8EAB               	bsf	171,7,c	;volatile
  1199  000D64                     
  1200                           ;maincode4.c: 30:     TXSTAbits.TXEN = 1;
  1201  000D64  8AAC               	bsf	172,5,c	;volatile
  1202  000D66                     
  1203                           ;maincode4.c: 31:     TRISCbits.RC6 = 0;
  1204  000D66  9C94               	bcf	148,6,c	;volatile
  1205  000D68  0012               	return		;funcret
  1206  000D6A                     __end_of_configuro:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _LCD_LEDs *****************
  1210 ;; Defined at:
  1211 ;;		line 45 in file "maincode4.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;		None
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1225 ;;      Params:         0       0       0       0       0       0       0       0       0
  1226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1228 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1229 ;;Total ram usage:        0 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 6
  1232 ;; This function calls:
  1233 ;;		_ENVIA_CHAR
  1234 ;;		_ESCRIBE_MENSAJE
  1235 ;;		_POS_CURSOR
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text9
  1242  000994                     __ptext9:
  1243                           	callstack 0
  1244  000994                     _LCD_LEDs:
  1245                           	callstack 24
  1246  000994                     
  1247                           ;maincode4.c: 46:     POS_CURSOR(2,0);
  1248  000994  0E00               	movlw	0
  1249  000996  6E46               	movwf	POS_CURSOR@columna^0,c
  1250  000998  0E02               	movlw	2
  1251  00099A  EC1C  F006         	call	_POS_CURSOR
  1252  00099E                     
  1253                           ;maincode4.c: 47:     ESCRIBE_MENSAJE("LEDs: ",6);
  1254  00099E  0E12               	movlw	low STR_1
  1255  0009A0  6E46               	movwf	ESCRIBE_MENSAJE@cadena^0,c
  1256  0009A2  0E08               	movlw	high STR_1
  1257  0009A4  6E47               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
  1258  0009A6  0E06               	movlw	6
  1259  0009A8  6E48               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1260  0009AA  ECC1  F005         	call	_ESCRIBE_MENSAJE	;wreg free
  1261  0009AE                     
  1262                           ;maincode4.c: 48:     if(PORTEbits.RE2 == 0){
  1263  0009AE  B484               	btfsc	132,2,c	;volatile
  1264  0009B0  EFDC  F004         	goto	u301
  1265  0009B4  EFDE  F004         	goto	u300
  1266  0009B8                     u301:
  1267  0009B8  EFE3  F004         	goto	l1308
  1268  0009BC                     u300:
  1269  0009BC                     
  1270                           ;maincode4.c: 49:         ENVIA_CHAR(0);
  1271  0009BC  0E00               	movlw	0
  1272  0009BE  EC53  F006         	call	_ENVIA_CHAR
  1273                           
  1274                           ;maincode4.c: 50:     }
  1275  0009C2  EFE6  F004         	goto	l1310
  1276  0009C6                     l1308:
  1277                           
  1278                           ;maincode4.c: 52:         ENVIA_CHAR(1);
  1279  0009C6  0E01               	movlw	1
  1280  0009C8  EC53  F006         	call	_ENVIA_CHAR
  1281  0009CC                     l1310:
  1282                           
  1283                           ;maincode4.c: 54:     if(PORTEbits.RE1 == 0){
  1284  0009CC  B284               	btfsc	132,1,c	;volatile
  1285  0009CE  EFEB  F004         	goto	u311
  1286  0009D2  EFED  F004         	goto	u310
  1287  0009D6                     u311:
  1288  0009D6  EFF2  F004         	goto	l1314
  1289  0009DA                     u310:
  1290  0009DA                     
  1291                           ;maincode4.c: 55:         ENVIA_CHAR(0);
  1292  0009DA  0E00               	movlw	0
  1293  0009DC  EC53  F006         	call	_ENVIA_CHAR
  1294                           
  1295                           ;maincode4.c: 56:     }
  1296  0009E0  EFF5  F004         	goto	l1316
  1297  0009E4                     l1314:
  1298                           
  1299                           ;maincode4.c: 58:         ENVIA_CHAR(1);
  1300  0009E4  0E01               	movlw	1
  1301  0009E6  EC53  F006         	call	_ENVIA_CHAR
  1302  0009EA                     l1316:
  1303                           
  1304                           ;maincode4.c: 60:     if(PORTEbits.RE0 == 0){
  1305  0009EA  B084               	btfsc	132,0,c	;volatile
  1306  0009EC  EFFA  F004         	goto	u321
  1307  0009F0  EFFC  F004         	goto	u320
  1308  0009F4                     u321:
  1309  0009F4  EF01  F005         	goto	l1320
  1310  0009F8                     u320:
  1311  0009F8                     
  1312                           ;maincode4.c: 61:         ENVIA_CHAR(0);
  1313  0009F8  0E00               	movlw	0
  1314  0009FA  EC53  F006         	call	_ENVIA_CHAR
  1315                           
  1316                           ;maincode4.c: 62:     }
  1317  0009FE  EF04  F005         	goto	l149
  1318  000A02                     l1320:
  1319                           
  1320                           ;maincode4.c: 64:         ENVIA_CHAR(1);
  1321  000A02  0E01               	movlw	1
  1322  000A04  EC53  F006         	call	_ENVIA_CHAR
  1323  000A08                     l149:
  1324  000A08  0012               	return		;funcret
  1325  000A0A                     __end_of_LCD_LEDs:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _POS_CURSOR *****************
  1329 ;; Defined at:
  1330 ;;		line 6 in file "LCD.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  fila            1    wreg     unsigned char 
  1333 ;;  columna         1    9[COMRAM] unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  fila            1   10[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1345 ;;      Params:         1       0       0       0       0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1348 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 5
  1352 ;; This function calls:
  1353 ;;		_ENVIA_LCD_CMD
  1354 ;; This function is called by:
  1355 ;;		_LCD_LEDs
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text10
  1361  000C38                     __ptext10:
  1362                           	callstack 0
  1363  000C38                     _POS_CURSOR:
  1364                           	callstack 25
  1365                           
  1366                           ;incstack = 0
  1367                           ;POS_CURSOR@fila stored from wreg
  1368  000C38  6E47               	movwf	POS_CURSOR@fila^0,c
  1369  000C3A                     
  1370                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1371  000C3A  0447               	decf	POS_CURSOR@fila^0,w,c
  1372  000C3C  A4D8               	btfss	status,2,c
  1373  000C3E  EF23  F006         	goto	u261
  1374  000C42  EF25  F006         	goto	u260
  1375  000C46                     u261:
  1376  000C46  EF2B  F006         	goto	l1256
  1377  000C4A                     u260:
  1378  000C4A                     
  1379                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1380  000C4A  5046               	movf	POS_CURSOR@columna^0,w,c
  1381  000C4C  0F80               	addlw	128
  1382  000C4E  EC39  F006         	call	_ENVIA_LCD_CMD
  1383                           
  1384                           ;LCD.c: 11:  }
  1385  000C52  EF38  F006         	goto	l24
  1386  000C56                     l1256:
  1387  000C56  0E02               	movlw	2
  1388  000C58  1847               	xorwf	POS_CURSOR@fila^0,w,c
  1389  000C5A  A4D8               	btfss	status,2,c
  1390  000C5C  EF32  F006         	goto	u271
  1391  000C60  EF34  F006         	goto	u270
  1392  000C64                     u271:
  1393  000C64  EF38  F006         	goto	l24
  1394  000C68                     u270:
  1395  000C68                     
  1396                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1397  000C68  5046               	movf	POS_CURSOR@columna^0,w,c
  1398  000C6A  0FC0               	addlw	192
  1399  000C6C  EC39  F006         	call	_ENVIA_LCD_CMD
  1400  000C70                     l24:
  1401  000C70  0012               	return		;funcret
  1402  000C72                     __end_of_POS_CURSOR:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _ENVIA_LCD_CMD *****************
  1406 ;; Defined at:
  1407 ;;		line 104 in file "LCD.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  dato            1    wreg     unsigned char 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  dato            1    7[COMRAM] unsigned char 
  1412 ;;  aux             1    8[COMRAM] unsigned char 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 4
  1429 ;; This function calls:
  1430 ;;		_ENVIA_NIBBLE
  1431 ;;		_LEER_LCD
  1432 ;; This function is called by:
  1433 ;;		_POS_CURSOR
  1434 ;;		_CURSOR_HOME
  1435 ;;		_CURSOR_ONOFF
  1436 ;;		_BORRAR_LCD
  1437 ;;		_LCD_CONFIG
  1438 ;;		_GENERACARACTER
  1439 ;;		_BLINK_CURSOR
  1440 ;;		_DISPLAY_ONOFF
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text11
  1445  000C72                     __ptext11:
  1446                           	callstack 0
  1447  000C72                     _ENVIA_LCD_CMD:
  1448                           	callstack 24
  1449                           
  1450                           ;incstack = 0
  1451                           ;ENVIA_LCD_CMD@dato stored from wreg
  1452  000C72  6E44               	movwf	ENVIA_LCD_CMD@dato^0,c
  1453  000C74                     
  1454                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1455  000C74  908C               	bcf	140,0,c	;volatile
  1456  000C76                     
  1457                           ;LCD.c: 108:  LEER_LCD();
  1458  000C76  EC05  F005         	call	_LEER_LCD	;wreg free
  1459  000C7A                     
  1460                           ;LCD.c: 109:  TRISD = 0b00000000;
  1461  000C7A  0E00               	movlw	0
  1462  000C7C  6E95               	movwf	149,c	;volatile
  1463  000C7E                     
  1464                           ;LCD.c: 111:         _delay(1200);
  1465  000C7E  0EF0               	movlw	240
  1466  000C80                     u437:
  1467  000C80  D000               	nop2	
  1468  000C82  2EE8               	decfsz	wreg,f,c
  1469  000C84  D7FD               	bra	u437
  1470  000C86                     
  1471                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1472  000C86  928C               	bcf	140,1,c	;volatile
  1473  000C88                     
  1474                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1475  000C88  948C               	bcf	140,2,c	;volatile
  1476  000C8A                     
  1477                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1478  000C8A  908C               	bcf	140,0,c	;volatile
  1479  000C8C                     
  1480                           ;LCD.c: 115:  aux = dato & 0xF0;
  1481  000C8C  5044               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1482  000C8E  0BF0               	andlw	240
  1483  000C90  6E45               	movwf	ENVIA_LCD_CMD@aux^0,c
  1484  000C92                     
  1485                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1486  000C92  5045               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1487  000C94  ECC8  F006         	call	_ENVIA_NIBBLE
  1488  000C98                     
  1489                           ;LCD.c: 117:  aux = dato<<4;
  1490  000C98  3844               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1491  000C9A  0BF0               	andlw	240
  1492  000C9C  6E45               	movwf	ENVIA_LCD_CMD@aux^0,c
  1493  000C9E                     
  1494                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1495  000C9E  5045               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1496  000CA0  ECC8  F006         	call	_ENVIA_NIBBLE
  1497  000CA4  0012               	return		;funcret
  1498  000CA6                     __end_of_ENVIA_LCD_CMD:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _ESCRIBE_MENSAJE *****************
  1502 ;; Defined at:
  1503 ;;		line 41 in file "LCD.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  cadena          2    9[COMRAM] PTR const unsigned char 
  1506 ;;		 -> STR_2(17), STR_1(7), 
  1507 ;;  tam             1   11[COMRAM] unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  i               1   14[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         3       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        6 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 5
  1526 ;; This function calls:
  1527 ;;		_ENVIA_CHAR
  1528 ;; This function is called by:
  1529 ;;		_LCD_LEDs
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text12
  1535  000B82                     __ptext12:
  1536                           	callstack 0
  1537  000B82                     _ESCRIBE_MENSAJE:
  1538                           	callstack 24
  1539  000B82                     
  1540                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1541  000B82  0E00               	movlw	0
  1542  000B84  6E4B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1543                           
  1544                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1545  000B86  0E00               	movlw	0
  1546  000B88  6E4B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1547  000B8A  EFD6  F005         	goto	l1266
  1548  000B8E                     l1262:
  1549                           
  1550                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1551  000B8E  504B               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1552  000B90  2446               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1553  000B92  6E49               	movwf	??_ESCRIBE_MENSAJE^0,c
  1554  000B94  0E00               	movlw	0
  1555  000B96  2047               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1556  000B98  6E4A               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1557  000B9A  C049  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1558  000B9E  C04A  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1559  000BA2                     	if	0	;tblptru may be non-zero
  1560  000BA2                     	endif
  1561  000BA2                     	if	0	;tblptru may be non-zero
  1562  000BA2                     	endif
  1563  000BA2  0008               	tblrd		*
  1564  000BA4  50F5               	movf	tablat,w,c
  1565  000BA6  EC53  F006         	call	_ENVIA_CHAR
  1566  000BAA                     
  1567                           ;LCD.c: 47:  }
  1568  000BAA  2A4B               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1569  000BAC                     l1266:
  1570  000BAC  5048               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1571  000BAE  5C4B               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1572  000BB0  A0D8               	btfss	status,0,c
  1573  000BB2  EFDD  F005         	goto	u281
  1574  000BB6  EFDF  F005         	goto	u280
  1575  000BBA                     u281:
  1576  000BBA  EFC7  F005         	goto	l1262
  1577  000BBE                     u280:
  1578  000BBE  0012               	return		;funcret
  1579  000BC0                     __end_of_ESCRIBE_MENSAJE:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _ENVIA_CHAR *****************
  1583 ;; Defined at:
  1584 ;;		line 50 in file "LCD.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  dato            1    wreg     unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  dato            1    7[COMRAM] unsigned char 
  1589 ;;  aux             1    8[COMRAM] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0
  1600 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1602 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1603 ;;Total ram usage:        2 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 4
  1606 ;; This function calls:
  1607 ;;		_ENVIA_NIBBLE
  1608 ;;		_LEER_LCD
  1609 ;; This function is called by:
  1610 ;;		_ESCRIBE_MENSAJE
  1611 ;;		_GENERACARACTER
  1612 ;;		_LCD_LEDs
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           	psect	text13
  1617  000CA6                     __ptext13:
  1618                           	callstack 0
  1619  000CA6                     _ENVIA_CHAR:
  1620                           	callstack 24
  1621                           
  1622                           ;incstack = 0
  1623                           ;ENVIA_CHAR@dato stored from wreg
  1624  000CA6  6E44               	movwf	ENVIA_CHAR@dato^0,c
  1625  000CA8                     
  1626                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1627  000CA8  808C               	bsf	140,0,c	;volatile
  1628  000CAA                     
  1629                           ;LCD.c: 54:  LEER_LCD();
  1630  000CAA  EC05  F005         	call	_LEER_LCD	;wreg free
  1631  000CAE                     
  1632                           ;LCD.c: 55:  TRISD = 0x00;
  1633  000CAE  0E00               	movlw	0
  1634  000CB0  6E95               	movwf	149,c	;volatile
  1635  000CB2                     
  1636                           ;LCD.c: 56:         _delay(1200);
  1637  000CB2  0EF0               	movlw	240
  1638  000CB4                     u447:
  1639  000CB4  D000               	nop2	
  1640  000CB6  2EE8               	decfsz	wreg,f,c
  1641  000CB8  D7FD               	bra	u447
  1642  000CBA                     
  1643                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1644  000CBA  928C               	bcf	140,1,c	;volatile
  1645  000CBC                     
  1646                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1647  000CBC  948C               	bcf	140,2,c	;volatile
  1648  000CBE                     
  1649                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1650  000CBE  808C               	bsf	140,0,c	;volatile
  1651  000CC0                     
  1652                           ;LCD.c: 61:  aux = dato & 0xF0;
  1653  000CC0  5044               	movf	ENVIA_CHAR@dato^0,w,c
  1654  000CC2  0BF0               	andlw	240
  1655  000CC4  6E45               	movwf	ENVIA_CHAR@aux^0,c
  1656  000CC6                     
  1657                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1658  000CC6  5045               	movf	ENVIA_CHAR@aux^0,w,c
  1659  000CC8  ECC8  F006         	call	_ENVIA_NIBBLE
  1660  000CCC                     
  1661                           ;LCD.c: 63:  aux = dato << 4;
  1662  000CCC  3844               	swapf	ENVIA_CHAR@dato^0,w,c
  1663  000CCE  0BF0               	andlw	240
  1664  000CD0  6E45               	movwf	ENVIA_CHAR@aux^0,c
  1665  000CD2                     
  1666                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1667  000CD2  5045               	movf	ENVIA_CHAR@aux^0,w,c
  1668  000CD4  ECC8  F006         	call	_ENVIA_NIBBLE
  1669  000CD8  0012               	return		;funcret
  1670  000CDA                     __end_of_ENVIA_CHAR:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _LEER_LCD *****************
  1674 ;; Defined at:
  1675 ;;		line 121 in file "LCD.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  aux             1    6[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 3
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_ENVIA_CHAR
  1700 ;;		_ENVIA_LCD_CMD
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text14
  1705  000A0A                     __ptext14:
  1706                           	callstack 0
  1707  000A0A                     _LEER_LCD:
  1708                           	callstack 24
  1709  000A0A                     
  1710                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1711  000A0A  0EF8               	movlw	248
  1712  000A0C  6E95               	movwf	149,c	;volatile
  1713  000A0E                     
  1714                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1715  000A0E  908C               	bcf	140,0,c	;volatile
  1716  000A10                     
  1717                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1718  000A10  828C               	bsf	140,1,c	;volatile
  1719  000A12                     
  1720                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1721  000A12  848C               	bsf	140,2,c	;volatile
  1722  000A14                     
  1723                           ;LCD.c: 128:         _delay(1200);
  1724  000A14  0EF0               	movlw	240
  1725  000A16                     u457:
  1726  000A16  D000               	nop2	
  1727  000A18  2EE8               	decfsz	wreg,f,c
  1728  000A1A  D7FD               	bra	u457
  1729  000A1C                     
  1730                           ;LCD.c: 130:  aux = PORTD;
  1731  000A1C  CF83 F043          	movff	3971,LEER_LCD@aux	;volatile
  1732  000A20                     
  1733                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1734  000A20  948C               	bcf	140,2,c	;volatile
  1735  000A22                     
  1736                           ;LCD.c: 132:         _delay(1200);
  1737  000A22  0EF0               	movlw	240
  1738  000A24                     u467:
  1739  000A24  D000               	nop2	
  1740  000A26  2EE8               	decfsz	wreg,f,c
  1741  000A28  D7FD               	bra	u467
  1742  000A2A                     
  1743                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1744  000A2A  848C               	bsf	140,2,c	;volatile
  1745  000A2C                     
  1746                           ;LCD.c: 135:         _delay(1200);
  1747  000A2C  0EF0               	movlw	240
  1748  000A2E                     u477:
  1749  000A2E  D000               	nop2	
  1750  000A30  2EE8               	decfsz	wreg,f,c
  1751  000A32  D7FD               	bra	u477
  1752  000A34                     
  1753                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1754  000A34  948C               	bcf	140,2,c	;volatile
  1755  000A36                     l904:
  1756                           
  1757                           ;LCD.c: 138:  aux = aux & 0x80;
  1758  000A36  5043               	movf	LEER_LCD@aux^0,w,c
  1759  000A38  0B80               	andlw	128
  1760  000A3A  6E43               	movwf	LEER_LCD@aux^0,c
  1761                           
  1762                           ;LCD.c: 139:  while(aux == 0x80)
  1763  000A3C  EF34  F005         	goto	l918
  1764  000A40                     l67:
  1765                           
  1766                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1767  000A40  848C               	bsf	140,2,c	;volatile
  1768  000A42                     
  1769                           ;LCD.c: 142:             _delay(1200);
  1770  000A42  0EF0               	movlw	240
  1771  000A44                     u487:
  1772  000A44  D000               	nop2	
  1773  000A46  2EE8               	decfsz	wreg,f,c
  1774  000A48  D7FD               	bra	u487
  1775  000A4A                     
  1776                           ;LCD.c: 143:             aux = PORTD;
  1777  000A4A  CF83 F043          	movff	3971,LEER_LCD@aux	;volatile
  1778  000A4E                     
  1779                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1780  000A4E  948C               	bcf	140,2,c	;volatile
  1781                           
  1782                           ;LCD.c: 145:             _delay(1200);
  1783  000A50  0EF0               	movlw	240
  1784  000A52                     u497:
  1785  000A52  D000               	nop2	
  1786  000A54  2EE8               	decfsz	wreg,f,c
  1787  000A56  D7FD               	bra	u497
  1788  000A58                     
  1789                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1790  000A58  848C               	bsf	140,2,c	;volatile
  1791                           
  1792                           ;LCD.c: 147:             _delay(1200);
  1793  000A5A  0EF0               	movlw	240
  1794  000A5C                     u507:
  1795  000A5C  D000               	nop2	
  1796  000A5E  2EE8               	decfsz	wreg,f,c
  1797  000A60  D7FD               	bra	u507
  1798  000A62                     
  1799                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1800  000A62  948C               	bcf	140,2,c	;volatile
  1801  000A64  EF1B  F005         	goto	l904
  1802  000A68                     l918:
  1803                           
  1804                           ;LCD.c: 139:  while(aux == 0x80)
  1805  000A68  0E80               	movlw	128
  1806  000A6A  1843               	xorwf	LEER_LCD@aux^0,w,c
  1807  000A6C  B4D8               	btfsc	status,2,c
  1808  000A6E  EF3B  F005         	goto	u11
  1809  000A72  EF3D  F005         	goto	u10
  1810  000A76                     u11:
  1811  000A76  EF20  F005         	goto	l67
  1812  000A7A                     u10:
  1813  000A7A  0012               	return		;funcret
  1814  000A7C                     __end_of_LEER_LCD:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _ENVIA_NIBBLE *****************
  1818 ;; Defined at:
  1819 ;;		line 93 in file "LCD.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  dato            1    wreg     unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  dato            1    6[COMRAM] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1836 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        1 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 3
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		_ENVIA_CHAR
  1844 ;;		_LCD_CONFIG
  1845 ;;		_ENVIA_LCD_CMD
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text15
  1850  000D90                     __ptext15:
  1851                           	callstack 0
  1852  000D90                     _ENVIA_NIBBLE:
  1853                           	callstack 25
  1854                           
  1855                           ;incstack = 0
  1856                           ;ENVIA_NIBBLE@dato stored from wreg
  1857  000D90  6E43               	movwf	ENVIA_NIBBLE@dato^0,c
  1858  000D92                     
  1859                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1860  000D92  0E0F               	movlw	15
  1861  000D94  168C               	andwf	140,f,c	;volatile
  1862                           
  1863                           ;LCD.c: 96:  dato &= 0xF0;
  1864  000D96  0EF0               	movlw	240
  1865  000D98  1643               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1866                           
  1867                           ;LCD.c: 97:  LATD|= dato;
  1868  000D9A  5043               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1869  000D9C  128C               	iorwf	140,f,c	;volatile
  1870  000D9E                     
  1871                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1872  000D9E  848C               	bsf	140,2,c	;volatile
  1873  000DA0                     
  1874                           ;LCD.c: 100:         _delay(1200);
  1875  000DA0  0EF0               	movlw	240
  1876  000DA2                     u517:
  1877  000DA2  D000               	nop2	
  1878  000DA4  2EE8               	decfsz	wreg,f,c
  1879  000DA6  D7FD               	bra	u517
  1880  000DA8                     
  1881                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1882  000DA8  948C               	bcf	140,2,c	;volatile
  1883  000DAA  0012               	return		;funcret
  1884  000DAC                     __end_of_ENVIA_NIBBLE:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _INT2_ISR *****************
  1888 ;; Defined at:
  1889 ;;		line 143 in file "maincode4.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  y               1    5[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0
  1904 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1905 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1906 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1907 ;;Total ram usage:        6 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 2
  1910 ;; This function calls:
  1911 ;;		_nueva_linea
  1912 ;; This function is called by:
  1913 ;;		Interrupt level 1
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	intcodelo
  1918  000018                     __pintcodelo:
  1919                           	callstack 0
  1920  000018                     _INT2_ISR:
  1921                           	callstack 24
  1922                           
  1923                           ;incstack = 0
  1924  000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1925  00001A  CFD8 F03D          	movff	status,??_INT2_ISR
  1926  00001E  CFE8 F03E          	movff	wreg,??_INT2_ISR+1
  1927  000022  CFE0 F03F          	movff	bsr,??_INT2_ISR+2
  1928  000026  CFD9 F040          	movff	fsr2l,??_INT2_ISR+3
  1929  00002A  CFDA F041          	movff	fsr2h,??_INT2_ISR+4
  1930  00002E                     
  1931                           ;maincode4.c: 144:     INTCON3bits.INT2IF = 0;
  1932  00002E  92F0               	bcf	240,1,c	;volatile
  1933  000030                     
  1934                           ;maincode4.c: 145:     unsigned char y;;maincode4.c: 146:     for(y=0;y<37;y++){
  1935  000030  0E00               	movlw	0
  1936  000032  6E42               	movwf	INT2_ISR@y^0,c
  1937  000034                     i1l1236:
  1938                           
  1939                           ;maincode4.c: 147:         TXREG = mensaje[y];
  1940  000034  0E01               	movlw	low _mensaje
  1941  000036  2442               	addwf	INT2_ISR@y^0,w,c
  1942  000038  6ED9               	movwf	fsr2l,c
  1943  00003A  6ADA               	clrf	fsr2h,c
  1944  00003C  0E00               	movlw	high _mensaje
  1945  00003E  22DA               	addwfc	fsr2h,f,c
  1946  000040  50DF               	movf	indf2,w,c
  1947  000042  6EAD               	movwf	173,c	;volatile
  1948  000044                     i1l203:
  1949  000044  A2AC               	btfss	172,1,c	;volatile
  1950  000046  EF27  F000         	goto	i1u24_21
  1951  00004A  EF29  F000         	goto	i1u24_20
  1952  00004E                     i1u24_21:
  1953  00004E  EF22  F000         	goto	i1l203
  1954  000052                     i1u24_20:
  1955  000052                     
  1956                           ;maincode4.c: 149:     }
  1957  000052  2A42               	incf	INT2_ISR@y^0,f,c
  1958  000054  0E24               	movlw	36
  1959  000056  6442               	cpfsgt	INT2_ISR@y^0,c
  1960  000058  EF30  F000         	goto	i1u25_21
  1961  00005C  EF32  F000         	goto	i1u25_20
  1962  000060                     i1u25_21:
  1963  000060  EF1A  F000         	goto	i1l1236
  1964  000064                     i1u25_20:
  1965  000064                     
  1966                           ;maincode4.c: 150:     nueva_linea();
  1967  000064  ECB5  F006         	call	_nueva_linea	;wreg free
  1968  000068  C041  FFDA         	movff	??_INT2_ISR+4,fsr2h
  1969  00006C  C040  FFD9         	movff	??_INT2_ISR+3,fsr2l
  1970  000070  C03F  FFE0         	movff	??_INT2_ISR+2,bsr
  1971  000074  C03E  FFE8         	movff	??_INT2_ISR+1,wreg
  1972  000078  C03D  FFD8         	movff	??_INT2_ISR,status
  1973  00007C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1974  00007E  0010               	retfie	
  1975  000080                     __end_of_INT2_ISR:
  1976                           	callstack 0
  1977                           
  1978 ;; *************** function _nueva_linea *****************
  1979 ;; Defined at:
  1980 ;;		line 82 in file "maincode4.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         0       0       0       0       0       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1997 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_INT2_ISR
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text17
  2009  000D6A                     __ptext17:
  2010                           	callstack 0
  2011  000D6A                     _nueva_linea:
  2012                           	callstack 24
  2013  000D6A                     
  2014                           ;maincode4.c: 83:     TXREG = 0x0A;
  2015  000D6A  0E0A               	movlw	10
  2016  000D6C  6EAD               	movwf	173,c	;volatile
  2017  000D6E                     i1l160:
  2018  000D6E  A2AC               	btfss	172,1,c	;volatile
  2019  000D70  EFBC  F006         	goto	i1u11_21
  2020  000D74  EFBE  F006         	goto	i1u11_20
  2021  000D78                     i1u11_21:
  2022  000D78  EFB7  F006         	goto	i1l160
  2023  000D7C                     i1u11_20:
  2024  000D7C                     
  2025                           ;maincode4.c: 85:     TXREG = 0x0D;
  2026  000D7C  0E0D               	movlw	13
  2027  000D7E  6EAD               	movwf	173,c	;volatile
  2028  000D80                     i1l163:
  2029  000D80  A2AC               	btfss	172,1,c	;volatile
  2030  000D82  EFC5  F006         	goto	i1u12_21
  2031  000D86  EFC7  F006         	goto	i1u12_20
  2032  000D8A                     i1u12_21:
  2033  000D8A  EFC0  F006         	goto	i1l163
  2034  000D8E                     i1u12_20:
  2035  000D8E  0012               	return		;funcret
  2036  000D90                     __end_of_nueva_linea:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _INT0_ISR *****************
  2040 ;; Defined at:
  2041 ;;		line 122 in file "maincode4.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		Interrupt level 2
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	intcode
  2069  000008                     __pintcode:
  2070                           	callstack 0
  2071  000008                     _INT0_ISR:
  2072                           	callstack 24
  2073                           
  2074                           ;incstack = 0
  2075  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2076  00000A  ED6E  F005         	call	int_func,f	;refresh shadow registers
  2077                           
  2078                           	psect	intcode_body
  2079  000ADC                     __pintcode_body:
  2080                           	callstack 24
  2081  000ADC                     int_func:
  2082                           	callstack 24
  2083  000ADC  0006               	pop		; remove dummy address from shadow register refresh
  2084  000ADE                     
  2085                           ;maincode4.c: 123:     if(INTCONbits.INT0IF == 1){
  2086  000ADE  A2F2               	btfss	242,1,c	;volatile
  2087  000AE0  EF74  F005         	goto	i2u20_41
  2088  000AE4  EF76  F005         	goto	i2u20_40
  2089  000AE8                     i2u20_41:
  2090  000AE8  EF85  F005         	goto	i2l1218
  2091  000AEC                     i2u20_40:
  2092  000AEC                     
  2093                           ;maincode4.c: 124:         INTCONbits.INT0IF = 0;
  2094  000AEC  92F2               	bcf	242,1,c	;volatile
  2095  000AEE                     
  2096                           ;maincode4.c: 125:         if(estado_e == 2){
  2097  000AEE  0E02               	movlw	2
  2098  000AF0  1850               	xorwf	_estado_e^0,w,c
  2099  000AF2  A4D8               	btfss	status,2,c
  2100  000AF4  EF7E  F005         	goto	i2u21_41
  2101  000AF8  EF80  F005         	goto	i2u21_40
  2102  000AFC                     i2u21_41:
  2103  000AFC  EF84  F005         	goto	i2l1216
  2104  000B00                     i2u21_40:
  2105  000B00                     
  2106                           ;maincode4.c: 126:             estado_e = 0;
  2107  000B00  0E00               	movlw	0
  2108  000B02  6E50               	movwf	_estado_e^0,c
  2109                           
  2110                           ;maincode4.c: 127:         }
  2111  000B04  EF85  F005         	goto	i2l1218
  2112  000B08                     i2l1216:
  2113                           
  2114                           ;maincode4.c: 129:             estado_e++;
  2115  000B08  2A50               	incf	_estado_e^0,f,c
  2116  000B0A                     i2l1218:
  2117                           
  2118                           ;maincode4.c: 132:     if(INTCON3bits.INT1IF == 1){
  2119  000B0A  A0F0               	btfss	240,0,c	;volatile
  2120  000B0C  EF8A  F005         	goto	i2u22_41
  2121  000B10  EF8C  F005         	goto	i2u22_40
  2122  000B14                     i2u22_41:
  2123  000B14  EF9B  F005         	goto	i2l196
  2124  000B18                     i2u22_40:
  2125  000B18                     
  2126                           ;maincode4.c: 133:         INTCON3bits.INT1IF = 0;
  2127  000B18  90F0               	bcf	240,0,c	;volatile
  2128  000B1A                     
  2129                           ;maincode4.c: 134:         if(estado_t == 2){
  2130  000B1A  0E02               	movlw	2
  2131  000B1C  184F               	xorwf	_estado_t^0,w,c
  2132  000B1E  A4D8               	btfss	status,2,c
  2133  000B20  EF94  F005         	goto	i2u23_41
  2134  000B24  EF96  F005         	goto	i2u23_40
  2135  000B28                     i2u23_41:
  2136  000B28  EF9A  F005         	goto	i2l1226
  2137  000B2C                     i2u23_40:
  2138  000B2C                     
  2139                           ;maincode4.c: 135:             estado_t = 0;
  2140  000B2C  0E00               	movlw	0
  2141  000B2E  6E4F               	movwf	_estado_t^0,c
  2142                           
  2143                           ;maincode4.c: 136:         }
  2144  000B30  EF9B  F005         	goto	i2l196
  2145  000B34                     i2l1226:
  2146                           
  2147                           ;maincode4.c: 138:             estado_t++;
  2148  000B34  2A4F               	incf	_estado_t^0,f,c
  2149  000B36                     i2l196:
  2150  000B36  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2151  000B38  0011               	retfie		f
  2152  000B3A                     __end_of_INT0_ISR:
  2153                           	callstack 0
  2154                           
  2155                           	psect	rparam
  2156  0000                     
  2157                           	psect	temp
  2158  000051                     btemp:
  2159                           	callstack 0
  2160  000051                     	ds	1
  2161  0000                     int$flags	set	btemp
  2162  0000                     wtemp8	set	btemp+1
  2163  0000                     ttemp5	set	btemp+1
  2164  0000                     ttemp6	set	btemp+4
  2165  0000                     ttemp7	set	btemp+8
  2166                           
  2167                           	psect	idloc
  2168                           
  2169                           ;Config register IDLOC0 @ 0x200000
  2170                           ;	unspecified, using default values
  2171  200000                     	org	2097152
  2172  200000  FF                 	db	255
  2173                           
  2174                           ;Config register IDLOC1 @ 0x200001
  2175                           ;	unspecified, using default values
  2176  200001                     	org	2097153
  2177  200001  FF                 	db	255
  2178                           
  2179                           ;Config register IDLOC2 @ 0x200002
  2180                           ;	unspecified, using default values
  2181  200002                     	org	2097154
  2182  200002  FF                 	db	255
  2183                           
  2184                           ;Config register IDLOC3 @ 0x200003
  2185                           ;	unspecified, using default values
  2186  200003                     	org	2097155
  2187  200003  FF                 	db	255
  2188                           
  2189                           ;Config register IDLOC4 @ 0x200004
  2190                           ;	unspecified, using default values
  2191  200004                     	org	2097156
  2192  200004  FF                 	db	255
  2193                           
  2194                           ;Config register IDLOC5 @ 0x200005
  2195                           ;	unspecified, using default values
  2196  200005                     	org	2097157
  2197  200005  FF                 	db	255
  2198                           
  2199                           ;Config register IDLOC6 @ 0x200006
  2200                           ;	unspecified, using default values
  2201  200006                     	org	2097158
  2202  200006  FF                 	db	255
  2203                           
  2204                           ;Config register IDLOC7 @ 0x200007
  2205                           ;	unspecified, using default values
  2206  200007                     	org	2097159
  2207  200007  FF                 	db	255
  2208                           
  2209                           	psect	config
  2210                           
  2211                           ;Config register CONFIG1L @ 0x300000
  2212                           ;	PLL Prescaler Selection bits
  2213                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2214                           ;	System Clock Postscaler Selection bits
  2215                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2216                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2217                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2218  300000                     	org	3145728
  2219  300000  00                 	db	0
  2220                           
  2221                           ;Config register CONFIG1H @ 0x300001
  2222                           ;	Oscillator Selection bits
  2223                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2224                           ;	Fail-Safe Clock Monitor Enable bit
  2225                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2226                           ;	Internal/External Oscillator Switchover bit
  2227                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2228  300001                     	org	3145729
  2229  300001  08                 	db	8
  2230                           
  2231                           ;Config register CONFIG2L @ 0x300002
  2232                           ;	Power-up Timer Enable bit
  2233                           ;	PWRT = ON, PWRT enabled
  2234                           ;	Brown-out Reset Enable bits
  2235                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2236                           ;	Brown-out Reset Voltage bits
  2237                           ;	BORV = 3, Minimum setting 2.05V
  2238                           ;	USB Voltage Regulator Enable bit
  2239                           ;	VREGEN = OFF, USB voltage regulator disabled
  2240  300002                     	org	3145730
  2241  300002  18                 	db	24
  2242                           
  2243                           ;Config register CONFIG2H @ 0x300003
  2244                           ;	Watchdog Timer Enable bit
  2245                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2246                           ;	Watchdog Timer Postscale Select bits
  2247                           ;	WDTPS = 32768, 1:32768
  2248  300003                     	org	3145731
  2249  300003  1E                 	db	30
  2250                           
  2251                           ; Padding undefined space
  2252  300004                     	org	3145732
  2253  300004  FF                 	db	255
  2254                           
  2255                           ;Config register CONFIG3H @ 0x300005
  2256                           ;	CCP2 MUX bit
  2257                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2258                           ;	PORTB A/D Enable bit
  2259                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2260                           ;	Low-Power Timer 1 Oscillator Enable bit
  2261                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2262                           ;	MCLR Pin Enable bit
  2263                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2264  300005                     	org	3145733
  2265  300005  81                 	db	129
  2266                           
  2267                           ;Config register CONFIG4L @ 0x300006
  2268                           ;	Stack Full/Underflow Reset Enable bit
  2269                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2270                           ;	Single-Supply ICSP Enable bit
  2271                           ;	LVP = OFF, Single-Supply ICSP disabled
  2272                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2273                           ;	ICPRT = OFF, ICPORT disabled
  2274                           ;	Extended Instruction Set Enable bit
  2275                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2276                           ;	Background Debugger Enable bit
  2277                           ;	DEBUG = 0x1, unprogrammed default
  2278  300006                     	org	3145734
  2279  300006  81                 	db	129
  2280                           
  2281                           ; Padding undefined space
  2282  300007                     	org	3145735
  2283  300007  FF                 	db	255
  2284                           
  2285                           ;Config register CONFIG5L @ 0x300008
  2286                           ;	Code Protection bit
  2287                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2288                           ;	Code Protection bit
  2289                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2290                           ;	Code Protection bit
  2291                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2292                           ;	Code Protection bit
  2293                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2294  300008                     	org	3145736
  2295  300008  0F                 	db	15
  2296                           
  2297                           ;Config register CONFIG5H @ 0x300009
  2298                           ;	Boot Block Code Protection bit
  2299                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2300                           ;	Data EEPROM Code Protection bit
  2301                           ;	CPD = OFF, Data EEPROM is not code-protected
  2302  300009                     	org	3145737
  2303  300009  C0                 	db	192
  2304                           
  2305                           ;Config register CONFIG6L @ 0x30000A
  2306                           ;	Write Protection bit
  2307                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2308                           ;	Write Protection bit
  2309                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2310                           ;	Write Protection bit
  2311                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2312                           ;	Write Protection bit
  2313                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2314  30000A                     	org	3145738
  2315  30000A  0F                 	db	15
  2316                           
  2317                           ;Config register CONFIG6H @ 0x30000B
  2318                           ;	Configuration Register Write Protection bit
  2319                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2320                           ;	Boot Block Write Protection bit
  2321                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2322                           ;	Data EEPROM Write Protection bit
  2323                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2324  30000B                     	org	3145739
  2325  30000B  E0                 	db	224
  2326                           
  2327                           ;Config register CONFIG7L @ 0x30000C
  2328                           ;	Table Read Protection bit
  2329                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2330                           ;	Table Read Protection bit
  2331                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2332                           ;	Table Read Protection bit
  2333                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2334                           ;	Table Read Protection bit
  2335                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2336  30000C                     	org	3145740
  2337  30000C  0F                 	db	15
  2338                           
  2339                           ;Config register CONFIG7H @ 0x30000D
  2340                           ;	Boot Block Table Read Protection bit
  2341                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2342  30000D                     	org	3145741
  2343  30000D  40                 	db	64
  2344                           tosu	equ	0xFFF
  2345                           tosh	equ	0xFFE
  2346                           tosl	equ	0xFFD
  2347                           stkptr	equ	0xFFC
  2348                           pclatu	equ	0xFFB
  2349                           pclath	equ	0xFFA
  2350                           pcl	equ	0xFF9
  2351                           tblptru	equ	0xFF8
  2352                           tblptrh	equ	0xFF7
  2353                           tblptrl	equ	0xFF6
  2354                           tablat	equ	0xFF5
  2355                           prodh	equ	0xFF4
  2356                           prodl	equ	0xFF3
  2357                           indf0	equ	0xFEF
  2358                           postinc0	equ	0xFEE
  2359                           postdec0	equ	0xFED
  2360                           preinc0	equ	0xFEC
  2361                           plusw0	equ	0xFEB
  2362                           fsr0h	equ	0xFEA
  2363                           fsr0l	equ	0xFE9
  2364                           wreg	equ	0xFE8
  2365                           indf1	equ	0xFE7
  2366                           postinc1	equ	0xFE6
  2367                           postdec1	equ	0xFE5
  2368                           preinc1	equ	0xFE4
  2369                           plusw1	equ	0xFE3
  2370                           fsr1h	equ	0xFE2
  2371                           fsr1l	equ	0xFE1
  2372                           bsr	equ	0xFE0
  2373                           indf2	equ	0xFDF
  2374                           postinc2	equ	0xFDE
  2375                           postdec2	equ	0xFDD
  2376                           preinc2	equ	0xFDC
  2377                           plusw2	equ	0xFDB
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        60
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> foco_on(COMRAM[8]), foco_off(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _LCD_LEDs->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3255
                                             15 COMRAM     3     3      0
                    _ESCRIBE_MENSAJE
                           _LCD_LEDs
                         _POS_CURSOR
                          _configuro
                           _init_LCD
                           _retardon
 ---------------------------------------------------------------------------------
 (1) _retardon                                             2     2      0       0
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1181
                                             13 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     656
                                              9 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_LEDs                                             0     0      0     995
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              9 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              9 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             6     6      0      45
                                              0 COMRAM     6     6      0
                        _nueva_linea
 ---------------------------------------------------------------------------------
 (6) _nueva_linea                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_LEDs
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
   _POS_CURSOR
   _configuro
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _retardon

 _INT2_ISR (ROOT)
   _nueva_linea

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      50       1       85.1%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhllll     14      0       0      26        0.0%
BITBIGSFRhhllh      11      0       0      24        0.0%
BITBIGSFRhhlhl       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          7      0       0      28        0.0%
BITBIGSFRhl          6      0       0      27        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRhhlllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      30        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Nov 10 17:02:27 2022

                     l24 0C70                       l42 0D3A                       l51 0CD8  
                     l60 0DAA                       l37 0DB2                       l54 0DBA  
                     l63 0CA4                       l48 0BBE                       l57 0ADA  
                     l74 0C36                       l67 0A40                       l69 0A7A  
                     u10 0A7A                       u11 0A76                       u40 0D1E  
                     u41 0D1A                       u50 0D34                       u51 0D30  
                     bsr 000FE0            ENVIA_CHAR@aux 0045                      l140 0B80  
                    l137 0D68                      l149 0A08                      l157 0992  
                    l900 0A2C                      l910 0A4E                      l902 0A34  
                    l920 0D92                      l912 0A58                      l904 0A36  
                    l922 0D9E                      l914 0A62                      l906 0A42  
                    l930 0C76                      l924 0DA0                      l908 0A4A  
                    l940 0C8A                      l932 0C7A                      l926 0DA8  
                    l918 0A68                      l950 0CA8                      l942 0C8C  
                    l934 0C7E                      l960 0CBC                      l952 0CAA  
                    l944 0C92                      l936 0C86                      l928 0C74  
                    l890 0A14                      l882 0A0A                      l970 0CD2  
                    l962 0CBE                      l954 0CAE                      l946 0C98  
                    l938 0C88                      l892 0A1C                      l884 0A0E  
                    l964 0CC0                      l956 0CB2                      l948 0C9E  
                    l980 0DAC                      l894 0A20                      l886 0A10  
                    l966 0CC6                      l958 0CBA                      l982 0D0E  
                    l896 0A22                      l888 0A12                      l968 0CCC  
                    l984 0D1E                      l898 0A2A                      l986 0D24  
                    l988 0D34                      l998 0DB4                      u300 09BC  
                    u301 09B8                      u310 09DA                      u311 09D6  
                    u320 09F8                      u321 09F4                      u330 086E  
                    u331 086A                      u260 0C4A                      u340 08A0  
                    u261 0C46                      u341 089C                      u270 0C68  
                    u350 08D2                      u271 0C64                      u407 0A8C  
                    u351 08CE                      u280 0BBE                      u281 0BBA  
                    u417 0A9A                      u290 0C30                      u507 0A5C  
                    u291 0C2C                      u427 0AAA                      u517 0DA2  
                    u437 0C80                      u447 0CB4                      u367 0916  
                    u457 0A16                      u377 0932                      u467 0A24  
                    u387 094E                      u477 0A2E                      u397 0B48  
                    u487 0A44                      u497 0A52              LEER_LCD@aux 0043  
                    wreg 000FE8             ?_CURSOR_HOME 003D           ??_ENVIA_NIBBLE 0043  
         ENVIA_CHAR@dato 0044                     l1000 0A7C                     l1010 0AB0  
                   l1002 0A80                     l1020 0ACE                     l1012 0AB6  
                   l1004 0A86                     l1022 0AD4                     l1014 0ABC  
                   l1006 0A94                     l1110 090C                     l1040 0D3C  
                   l1016 0AC2                     l1008 0AA8                     l1112 0928  
                   l1050 0D50                     l1042 0D48                     l1018 0AC8  
                   l1114 0944                     l1300 0994                     l1060 0D5A  
                   l1052 0D52                     l1044 0D4A                     l1108 0908  
                   l1310 09CC                     l1302 099E                     l1062 0D5C  
                   l1054 0D54                     l1046 0D4C                     l1118 0960  
                   l1320 0A02                     l1312 09DA                     l1304 09AE  
                   l1064 0D62                     l1056 0D56                     l1048 0D4E  
                   l1314 09E4                     l1306 09BC                     l1066 0D64  
                   l1058 0D58                     l1330 0840                     l1322 081A  
                   l1260 0B82                     l1252 0C3A                     l1316 09EA  
                   l1308 09C6                     l1068 0D66                     l1340 0858  
                   l1324 081E                     l1262 0B8E                     l1254 0C4A  
                   l1318 09F8                     l1270 0C08                     l1342 085C  
                   l1326 0822                     l1264 0BAA                     l1256 0C56  
                   l1280 0C20                     l1360 0890                     l1352 0876  
                   l1344 085E                     l1336 0844                     l1328 082C  
                   l1266 0BAC                     l1258 0C68                     l1282 0C30  
                   l1290 0B52                     l1370 08B8                     l1362 08A4  
                   l1354 0886                     l1346 0872                     l1338 0854  
                   l1276 0C0C                     l1268 0BFC                     l1292 0B56  
                   l1284 0B3A                     l1372 08BC                     l1356 088A  
                   l1380 08D2                     l1278 0C1E                     l1294 0B5A  
                   l1286 0B3E                     l1374 08C0                     l1358 088E  
                   l1296 0B60                     l1288 0B42                     l1376 08C2  
                   l1368 08A8                     l1298 0B70                     l1394 08E6  
                   l1396 0974                     STR_1 0812                     STR_2 0801  
                   _LATD 000F8C                     _LATE 000F8D                     _main 081A  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0051                     prodl 000FF3  
                   start 0080            ?_CURSOR_ONOFF 003D             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0044         __end_of_LCD_LEDs 0A0A         __end_of_LEER_LCD 0A7C  
       __end_of_INT0_ISR 0B3A         __end_of_INT2_ISR 0080           _GENERACARACTER 0BFC  
                  ?_main 003D                    i1l203 0044                    i1l206 0068  
                  i1l160 0D6E                    i1l163 0D80                    i1l166 0D8E  
                  i2l196 0B36                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
            ?_POS_CURSOR 0046                    main@x 004E                    tablat 000FF5  
                  ttemp5 0052                    ttemp6 0055                    ttemp7 0059  
                  status 000FD8                    wtemp8 0052           ??_CURSOR_ONOFF 0046  
        __initialization 0CDA             __end_of_main 0908   __end_of_GENERACARACTER 0C38  
        _ESCRIBE_MENSAJE 0B82                   ??_main 004C            __activetblptr 000002  
                 _ADCON1 000FC1                   i1l1124 0D6A                   i1l1126 0D7C  
                 i1l1230 0030                   i1l1240 0054                   i1l1242 0064  
                 i1l1236 0034                   i1l1228 002E                   i1l1238 0052  
                 i2l1210 0AEC                   i2l1220 0B18                   i2l1212 0AEE  
                 i2l1222 0B1A                   i2l1214 0B00                   i2l1224 0B2C  
                 i2l1216 0B08                   i2l1208 0ADE                   i2l1226 0B34  
                 i2l1218 0B0A                   _OSCCON 000FD3     __end_of_ENVIA_NIBBLE 0DAC  
                 _efecto 0027         __end_of_init_LCD 0B82          ?_GENERACARACTER 0046  
                 isa$std 000001             ?_nueva_linea 003D         __end_of_retardon 0994  
           __pdataCOMRAM 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ??_BORRAR_LCD 0046  
              ?_LCD_LEDs 003D                ?_LEER_LCD 003D               __accesstop 0060  
__end_of__initialization 0CFE                ?_INT0_ISR 003D                ?_INT2_ISR 003D  
           ??_LCD_CONFIG 0046            ___rparam_used 000001             ??_ENVIA_CHAR 0044  
__end_of_ESCRIBE_MENSAJE 0BC0           __pcstackCOMRAM 003D                INT2_ISR@y 0042  
     __end_of_BORRAR_LCD 0DBC         ENVIA_LCD_CMD@aux 0045     __end_of_CURSOR_ONOFF 0D3C  
     __end_of_LCD_CONFIG 0ADC       __end_of_ENVIA_CHAR 0CDA               ??_LCD_LEDs 004C  
             ??_LEER_LCD 0043         ENVIA_NIBBLE@dato 0043               ??_INT0_ISR 003D  
             ??_INT2_ISR 003D                  i1u11_20 0D7C                  i1u11_21 0D78  
                i1u12_20 0D8E                  i1u12_21 0D8A                  i1u24_20 0052  
                i1u24_21 004E                  i1u25_20 0064                  i1u25_21 0060  
                i2u20_40 0AEC                  i2u20_41 0AE8                  i2u21_40 0B00  
                i2u21_41 0AFC                  i2u22_40 0B18                  i2u22_41 0B14  
                i2u23_40 0B2C                  i2u23_41 0B28             ??_POS_CURSOR 0047  
              ?_init_LCD 003D                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0046                ?_retardon 003D        __end_of_configuro 0D6A  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0CA6                  __pcinit 0CDA  
     __end_of_POS_CURSOR 0C72                  __ramtop 0800                  __ptext0 081A  
                __ptext1 0908                  __ptext2 0B3A                  __ptext3 0A7C  
                __ptext4 0BFC                  __ptext5 0D0C                  __ptext6 0DAC  
                __ptext7 0DB4                  __ptext8 0D3C                  __ptext9 0994  
        GENERACARACTER@i 0049                  _foco_on 002D                  _mensaje 0001  
         __pintcode_body 0ADC             _ENVIA_NIBBLE 0D90     end_of_initialization 0CFE  
             ??_init_LCD 004A            __Lmediumconst 0000                  int_func 0ADC  
       ??_GENERACARACTER 0049               ??_retardon 0043                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE     GENERACARACTER@vector 0046  
              _PORTEbits 000F84                _TRISCbits 000F94                _TXSTAbits 000FAC  
           _CURSOR_ONOFF 0D0C       CURSOR_ONOFF@estado 0046            __pidataCOMRAM 0BC0  
          ??_CURSOR_HOME 0046      start_initialization 0CDA        ENVIA_LCD_CMD@dato 0044  
            __pbssCOMRAM 004F      __end_of_CURSOR_HOME 0DB4                __pintcode 0008  
            __pintcodelo 0018        GENERACARACTER@pos 0048                _configuro 0D3C  
            __smallconst 0800                 _LCD_LEDs 0994                 _LEER_LCD 0A0A  
               _INT0_ISR 0008                 _INT2_ISR 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0         ESCRIBE_MENSAJE@i 004B           POS_CURSOR@fila 0047  
             ?_configuro 003D            ??_nueva_linea 003D              _CURSOR_HOME 0DAC  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                copy_data0 0CEE  
               __Hrparam 0000                 __Lrparam 0000      __end_of_nueva_linea 0D90  
               __ptext10 0C38                 __ptext11 0C72                 __ptext12 0B82  
               __ptext13 0CA6                 __ptext14 0A0A                 __ptext15 0D90  
               __ptext17 0D6A               _BORRAR_LCD 0DB4                 _foco_off 0035  
               _init_LCD 0B3A                 _estado_e 0050                 _estado_t 004F  
             _LCD_CONFIG 0A7C               _ENVIA_CHAR 0CA6                 _retardon 0908  
               isa$xinst 000000                 int$flags 0051            _ENVIA_LCD_CMD 0C72  
            ??_configuro 0043               _INTCONbits 000FF2        ??_ESCRIBE_MENSAJE 0049  
               intlevel1 0000                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0046  
         ?_ENVIA_LCD_CMD 003D              _nueva_linea 0D6A              ?_BORRAR_LCD 003D  
          ?_ENVIA_NIBBLE 003D               _POS_CURSOR 0C38              ?_LCD_CONFIG 003D  
     ESCRIBE_MENSAJE@tam 0048              ?_ENVIA_CHAR 003D        POS_CURSOR@columna 0046  
