

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 28 18:10:37 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATDbits	set	3980
    68  0000                     _LATEbits	set	3981
    69  0000                     _TRISD	set	3989
    70  0000                     _TRISEbits	set	3990
    71  0000                     _ADCON1	set	4033
    72  0000                     _OSCCON	set	4051
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75                           
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     STR_1:
    81  000801  53                 	db	83	;'S'
    82  000802  65                 	db	101	;'e'
    83  000803  6D                 	db	109	;'m'
    84  000804  61                 	db	97	;'a'
    85  000805  6E                 	db	110	;'n'
    86  000806  61                 	db	97	;'a'
    87  000807  20                 	db	32
    88  000808  31                 	db	49	;'1'
    89  000809  31                 	db	49	;'1'
    90  00080A  20                 	db	32
    91  00080B  73                 	db	115	;'s'
    92  00080C  65                 	db	101	;'e'
    93  00080D  72                 	db	114	;'r'
    94  00080E  76                 	db	118	;'v'
    95  00080F  6F                 	db	111	;'o'
    96  000810  73                 	db	115	;'s'
    97  000811  00                 	db	0
    98  000812  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  000C76                     __pcinit:
   104                           	callstack 0
   105  000C76                     start_initialization:
   106                           	callstack 0
   107  000C76                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (1 bytes)
   111  000C76  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   112  000C78                     end_of_initialization:
   113                           	callstack 0
   114  000C78                     __end_of__initialization:
   115                           	callstack 0
   116  000C78  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  000C7A  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  000C7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  000C7E  6EF8               	movwf	tblptru,c
   120  000C80  0100               	movlb	0
   121  000C82  EF0A  F004         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  00000C                     __pbssCOMRAM:
   125                           	callstack 0
   126  00000C                     _posicion:
   127                           	callstack 0
   128  00000C                     	ds	1
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133  000001                     ENVIA_NIBBLE@dato:
   134                           	callstack 0
   135  000001                     LEER_LCD@aux:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	1
   140  000002                     ENVIA_CHAR@dato:
   141                           	callstack 0
   142  000002                     ENVIA_LCD_CMD@dato:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x1
   146  000002                     	ds	1
   147  000003                     ENVIA_CHAR@aux:
   148                           	callstack 0
   149  000003                     ENVIA_LCD_CMD@aux:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x2
   153  000003                     	ds	1
   154  000004                     ??_LCD_CONFIG:
   155  000004                     POS_CURSOR@columna:
   156                           	callstack 0
   157  000004                     CURSOR_ONOFF@estado:
   158                           	callstack 0
   159  000004                     ESCRIBE_MENSAJE@cadena:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x3
   163  000004                     	ds	1
   164  000005                     ??_inicio_LCD:
   165  000005                     POS_CURSOR@fila:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x4
   169  000005                     	ds	1
   170  000006                     ESCRIBE_MENSAJE@tam:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x5
   174  000006                     	ds	1
   175  000007                     ??_ESCRIBE_MENSAJE:
   176                           
   177                           ; 1 bytes @ 0x6
   178  000007                     	ds	2
   179  000009                     ESCRIBE_MENSAJE@i:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x8
   183  000009                     	ds	1
   184  00000A                     ??_main:
   185                           
   186                           ; 1 bytes @ 0x9
   187  00000A                     	ds	2
   188                           
   189 ;;
   190 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   191 ;;
   192 ;; *************** function _main *****************
   193 ;; Defined at:
   194 ;;		line 27 in file "maincode2.c"
   195 ;; Parameters:    Size  Location     Type
   196 ;;		None
   197 ;; Auto vars:     Size  Location     Type
   198 ;;		None
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   208 ;;      Params:         0       0       0       0       0       0       0       0       0
   209 ;;      Locals:         0       0       0       0       0       0       0       0       0
   210 ;;      Temps:          2       0       0       0       0       0       0       0       0
   211 ;;      Totals:         2       0       0       0       0       0       0       0       0
   212 ;;Total ram usage:        2 bytes
   213 ;; Hardware stack levels required when called: 5
   214 ;; This function calls:
   215 ;;		_ESCRIBE_MENSAJE
   216 ;;		_POS_CURSOR
   217 ;;		_configuro
   218 ;;		_inicio_LCD
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           	psect	text0
   225  000814                     __ptext0:
   226                           	callstack 0
   227  000814                     _main:
   228                           	callstack 26
   229  000814                     
   230                           ;maincode2.c: 28:     configuro();
   231  000814  EC31  F006         	call	_configuro	;wreg free
   232  000818                     
   233                           ;maincode2.c: 29:     inicio_LCD();
   234  000818  ECFD  F005         	call	_inicio_LCD	;wreg free
   235  00081C                     
   236                           ;maincode2.c: 30:     POS_CURSOR(1,0);
   237  00081C  0E00               	movlw	0
   238  00081E  6E04               	movwf	POS_CURSOR@columna^0,c
   239  000820  0E01               	movlw	1
   240  000822  EC94  F005         	call	_POS_CURSOR
   241  000826                     
   242                           ;maincode2.c: 31:     ESCRIBE_MENSAJE("Semana 11 servos",16);
   243  000826  0E01               	movlw	low STR_1
   244  000828  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   245  00082A  0E08               	movlw	high STR_1
   246  00082C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   247  00082E  0E10               	movlw	16
   248  000830  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   249  000832  EC75  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   250  000836  EFD5  F004         	goto	l1145
   251  00083A                     l117:
   252                           
   253                           ;maincode2.c: 35:                 LATEbits.LE0 = 1;
   254  00083A  808D               	bsf	141,0,c	;volatile
   255  00083C                     
   256                           ;maincode2.c: 36:                 _delay((unsigned long)((600)*(8000000UL/4000000.0)));
   257  00083C  0EF0               	movlw	240
   258  00083E                     u167:
   259  00083E  D000               	nop2	
   260  000840  2EE8               	decfsz	wreg,f,c
   261  000842  D7FD               	bra	u167
   262  000844                     
   263                           ;maincode2.c: 37:                 LATEbits.LE0 = 0;
   264  000844  908D               	bcf	141,0,c	;volatile
   265                           
   266                           ;maincode2.c: 38:                 _delay((unsigned long)((19400)*(8000000UL/4000000.0)))
      +                          ;
   267  000846  0E33               	movlw	51
   268  000848  6E0A               	movwf	??_main^0,c
   269  00084A  0E62               	movlw	98
   270  00084C                     u177:
   271  00084C  2EE8               	decfsz	wreg,f,c
   272  00084E  D7FE               	bra	u177
   273  000850  2E0A               	decfsz	??_main^0,f,c
   274  000852  D7FC               	bra	u177
   275  000854  D000               	nop2	
   276                           
   277                           ;maincode2.c: 39:                 break;
   278  000856  EFD5  F004         	goto	l1145
   279  00085A                     l119:
   280                           
   281                           ;maincode2.c: 41:                 LATEbits.LE0 = 1;
   282  00085A  808D               	bsf	141,0,c	;volatile
   283  00085C                     
   284                           ;maincode2.c: 42:                 _delay((unsigned long)((800)*(8000000UL/4000000.0)));
   285  00085C  0EE4               	movlw	228
   286  00085E                     u187:
   287  00085E  D000               	nop2	
   288  000860  D000               	nop2	
   289  000862  2EE8               	decfsz	wreg,f,c
   290  000864  D7FC               	bra	u187
   291  000866  D000               	nop2	
   292  000868  D000               	nop2	
   293  00086A                     
   294                           ;maincode2.c: 43:                 LATEbits.LE0 = 0;
   295  00086A  908D               	bcf	141,0,c	;volatile
   296                           
   297                           ;maincode2.c: 44:                 _delay((unsigned long)((19200)*(8000000UL/4000000.0)))
      +                          ;
   298  00086C  0E32               	movlw	50
   299  00086E  6E0A               	movwf	??_main^0,c
   300  000870  0EDE               	movlw	222
   301  000872                     u197:
   302  000872  2EE8               	decfsz	wreg,f,c
   303  000874  D7FE               	bra	u197
   304  000876  2E0A               	decfsz	??_main^0,f,c
   305  000878  D7FC               	bra	u197
   306                           
   307                           ;maincode2.c: 45:                 break;
   308  00087A  EFD5  F004         	goto	l1145
   309  00087E                     l120:
   310                           
   311                           ;maincode2.c: 47:                 LATEbits.LE0 = 1;
   312  00087E  808D               	bsf	141,0,c	;volatile
   313  000880                     
   314                           ;maincode2.c: 48:                 _delay((unsigned long)((1000)*(8000000UL/4000000.0)));
   315  000880  0E03               	movlw	3
   316  000882  6E0A               	movwf	??_main^0,c
   317  000884  0E98               	movlw	152
   318  000886                     u207:
   319  000886  2EE8               	decfsz	wreg,f,c
   320  000888  D7FE               	bra	u207
   321  00088A  2E0A               	decfsz	??_main^0,f,c
   322  00088C  D7FC               	bra	u207
   323  00088E                     
   324                           ;maincode2.c: 49:                 LATEbits.LE0 = 0;
   325  00088E  908D               	bcf	141,0,c	;volatile
   326                           
   327                           ;maincode2.c: 50:                 _delay((unsigned long)((19000)*(8000000UL/4000000.0)))
      +                          ;
   328  000890  0E32               	movlw	50
   329  000892  6E0A               	movwf	??_main^0,c
   330  000894  0E58               	movlw	88
   331  000896                     u217:
   332  000896  2EE8               	decfsz	wreg,f,c
   333  000898  D7FE               	bra	u217
   334  00089A  2E0A               	decfsz	??_main^0,f,c
   335  00089C  D7FC               	bra	u217
   336  00089E  D000               	nop2	
   337                           
   338                           ;maincode2.c: 51:                 break;
   339  0008A0  EFD5  F004         	goto	l1145
   340  0008A4                     l121:
   341                           
   342                           ;maincode2.c: 53:                 LATEbits.LE0 = 1;
   343  0008A4  808D               	bsf	141,0,c	;volatile
   344  0008A6                     
   345                           ;maincode2.c: 54:                 _delay((unsigned long)((1200)*(8000000UL/4000000.0)));
   346  0008A6  0E04               	movlw	4
   347  0008A8  6E0A               	movwf	??_main^0,c
   348  0008AA  0E1C               	movlw	28
   349  0008AC                     u227:
   350  0008AC  2EE8               	decfsz	wreg,f,c
   351  0008AE  D7FE               	bra	u227
   352  0008B0  2E0A               	decfsz	??_main^0,f,c
   353  0008B2  D7FC               	bra	u227
   354  0008B4  D000               	nop2	
   355  0008B6                     
   356                           ;maincode2.c: 55:                 LATEbits.LE0 = 0;
   357  0008B6  908D               	bcf	141,0,c	;volatile
   358                           
   359                           ;maincode2.c: 56:                 _delay((unsigned long)((18800)*(8000000UL/4000000.0)))
      +                          ;
   360  0008B8  0E31               	movlw	49
   361  0008BA  6E0A               	movwf	??_main^0,c
   362  0008BC  0ED4               	movlw	212
   363  0008BE                     u237:
   364  0008BE  2EE8               	decfsz	wreg,f,c
   365  0008C0  D7FE               	bra	u237
   366  0008C2  2E0A               	decfsz	??_main^0,f,c
   367  0008C4  D7FC               	bra	u237
   368                           
   369                           ;maincode2.c: 57:                 break;
   370  0008C6  EFD5  F004         	goto	l1145
   371  0008CA                     l122:
   372                           
   373                           ;maincode2.c: 59:                 LATEbits.LE0 = 1;
   374  0008CA  808D               	bsf	141,0,c	;volatile
   375  0008CC                     
   376                           ;maincode2.c: 60:                 _delay((unsigned long)((1400)*(8000000UL/4000000.0)));
   377  0008CC  0E04               	movlw	4
   378  0008CE  6E0A               	movwf	??_main^0,c
   379  0008D0  0EA2               	movlw	162
   380  0008D2                     u247:
   381  0008D2  2EE8               	decfsz	wreg,f,c
   382  0008D4  D7FE               	bra	u247
   383  0008D6  2E0A               	decfsz	??_main^0,f,c
   384  0008D8  D7FC               	bra	u247
   385  0008DA                     
   386                           ;maincode2.c: 61:                 LATEbits.LE0 = 0;
   387  0008DA  908D               	bcf	141,0,c	;volatile
   388                           
   389                           ;maincode2.c: 62:                 _delay((unsigned long)((18600)*(8000000UL/4000000.0)))
      +                          ;
   390  0008DC  0E31               	movlw	49
   391  0008DE  6E0A               	movwf	??_main^0,c
   392  0008E0  0E4E               	movlw	78
   393  0008E2                     u257:
   394  0008E2  2EE8               	decfsz	wreg,f,c
   395  0008E4  D7FE               	bra	u257
   396  0008E6  2E0A               	decfsz	??_main^0,f,c
   397  0008E8  D7FC               	bra	u257
   398  0008EA  D000               	nop2	
   399                           
   400                           ;maincode2.c: 63:                 break;
   401  0008EC  EFD5  F004         	goto	l1145
   402  0008F0                     l123:
   403                           
   404                           ;maincode2.c: 65:                 LATEbits.LE0 = 1;
   405  0008F0  808D               	bsf	141,0,c	;volatile
   406  0008F2                     
   407                           ;maincode2.c: 66:                 _delay((unsigned long)((1600)*(8000000UL/4000000.0)));
   408  0008F2  0E05               	movlw	5
   409  0008F4  6E0A               	movwf	??_main^0,c
   410  0008F6  0E26               	movlw	38
   411  0008F8                     u267:
   412  0008F8  2EE8               	decfsz	wreg,f,c
   413  0008FA  D7FE               	bra	u267
   414  0008FC  2E0A               	decfsz	??_main^0,f,c
   415  0008FE  D7FC               	bra	u267
   416  000900  D000               	nop2	
   417  000902                     
   418                           ;maincode2.c: 67:                 LATEbits.LE0 = 0;
   419  000902  908D               	bcf	141,0,c	;volatile
   420                           
   421                           ;maincode2.c: 68:                 _delay((unsigned long)((18400)*(8000000UL/4000000.0)))
      +                          ;
   422  000904  0E30               	movlw	48
   423  000906  6E0A               	movwf	??_main^0,c
   424  000908  0ECA               	movlw	202
   425  00090A                     u277:
   426  00090A  2EE8               	decfsz	wreg,f,c
   427  00090C  D7FE               	bra	u277
   428  00090E  2E0A               	decfsz	??_main^0,f,c
   429  000910  D7FC               	bra	u277
   430                           
   431                           ;maincode2.c: 69:                 break;
   432  000912  EFD5  F004         	goto	l1145
   433  000916                     l124:
   434                           
   435                           ;maincode2.c: 71:                 LATEbits.LE0 = 1;
   436  000916  808D               	bsf	141,0,c	;volatile
   437  000918                     
   438                           ;maincode2.c: 72:                 _delay((unsigned long)((1800)*(8000000UL/4000000.0)));
   439  000918  0E05               	movlw	5
   440  00091A  6E0A               	movwf	??_main^0,c
   441  00091C  0EAC               	movlw	172
   442  00091E                     u287:
   443  00091E  2EE8               	decfsz	wreg,f,c
   444  000920  D7FE               	bra	u287
   445  000922  2E0A               	decfsz	??_main^0,f,c
   446  000924  D7FC               	bra	u287
   447  000926                     
   448                           ;maincode2.c: 73:                 LATEbits.LE0 = 0;
   449  000926  908D               	bcf	141,0,c	;volatile
   450                           
   451                           ;maincode2.c: 74:                 _delay((unsigned long)((18200)*(8000000UL/4000000.0)))
      +                          ;
   452  000928  0E30               	movlw	48
   453  00092A  6E0A               	movwf	??_main^0,c
   454  00092C  0E44               	movlw	68
   455  00092E                     u297:
   456  00092E  2EE8               	decfsz	wreg,f,c
   457  000930  D7FE               	bra	u297
   458  000932  2E0A               	decfsz	??_main^0,f,c
   459  000934  D7FC               	bra	u297
   460  000936  D000               	nop2	
   461                           
   462                           ;maincode2.c: 75:                 break;
   463  000938  EFD5  F004         	goto	l1145
   464  00093C                     l125:
   465                           
   466                           ;maincode2.c: 77:                 LATEbits.LE0 = 1;
   467  00093C  808D               	bsf	141,0,c	;volatile
   468  00093E                     
   469                           ;maincode2.c: 78:                 _delay((unsigned long)((2000)*(8000000UL/4000000.0)));
   470  00093E  0E06               	movlw	6
   471  000940  6E0A               	movwf	??_main^0,c
   472  000942  0E30               	movlw	48
   473  000944                     u307:
   474  000944  2EE8               	decfsz	wreg,f,c
   475  000946  D7FE               	bra	u307
   476  000948  2E0A               	decfsz	??_main^0,f,c
   477  00094A  D7FC               	bra	u307
   478  00094C  D000               	nop2	
   479  00094E                     
   480                           ;maincode2.c: 79:                 LATEbits.LE0 = 0;
   481  00094E  908D               	bcf	141,0,c	;volatile
   482                           
   483                           ;maincode2.c: 80:                 _delay((unsigned long)((18000)*(8000000UL/4000000.0)))
      +                          ;
   484  000950  0E2F               	movlw	47
   485  000952  6E0A               	movwf	??_main^0,c
   486  000954  0EC0               	movlw	192
   487  000956                     u317:
   488  000956  2EE8               	decfsz	wreg,f,c
   489  000958  D7FE               	bra	u317
   490  00095A  2E0A               	decfsz	??_main^0,f,c
   491  00095C  D7FC               	bra	u317
   492                           
   493                           ;maincode2.c: 81:                 break;
   494  00095E  EFD5  F004         	goto	l1145
   495  000962                     l126:
   496                           
   497                           ;maincode2.c: 83:                 LATEbits.LE0 = 1;
   498  000962  808D               	bsf	141,0,c	;volatile
   499  000964                     
   500                           ;maincode2.c: 84:                 _delay((unsigned long)((2200)*(8000000UL/4000000.0)));
   501  000964  0E06               	movlw	6
   502  000966  6E0A               	movwf	??_main^0,c
   503  000968  0EB6               	movlw	182
   504  00096A                     u327:
   505  00096A  2EE8               	decfsz	wreg,f,c
   506  00096C  D7FE               	bra	u327
   507  00096E  2E0A               	decfsz	??_main^0,f,c
   508  000970  D7FC               	bra	u327
   509  000972                     
   510                           ;maincode2.c: 85:                 LATEbits.LE0 = 0;
   511  000972  908D               	bcf	141,0,c	;volatile
   512                           
   513                           ;maincode2.c: 86:                 _delay((unsigned long)((17800)*(8000000UL/4000000.0)))
      +                          ;
   514  000974  0E2F               	movlw	47
   515  000976  6E0A               	movwf	??_main^0,c
   516  000978  0E3A               	movlw	58
   517  00097A                     u337:
   518  00097A  2EE8               	decfsz	wreg,f,c
   519  00097C  D7FE               	bra	u337
   520  00097E  2E0A               	decfsz	??_main^0,f,c
   521  000980  D7FC               	bra	u337
   522  000982  D000               	nop2	
   523                           
   524                           ;maincode2.c: 87:                 break;
   525  000984  EFD5  F004         	goto	l1145
   526  000988                     l127:
   527                           
   528                           ;maincode2.c: 89:                 LATEbits.LE0 = 1;
   529  000988  808D               	bsf	141,0,c	;volatile
   530  00098A                     
   531                           ;maincode2.c: 90:                 _delay((unsigned long)((2400)*(8000000UL/4000000.0)));
   532  00098A  0E07               	movlw	7
   533  00098C  6E0A               	movwf	??_main^0,c
   534  00098E  0E3A               	movlw	58
   535  000990                     u347:
   536  000990  2EE8               	decfsz	wreg,f,c
   537  000992  D7FE               	bra	u347
   538  000994  2E0A               	decfsz	??_main^0,f,c
   539  000996  D7FC               	bra	u347
   540  000998  D000               	nop2	
   541  00099A                     
   542                           ;maincode2.c: 91:                 LATEbits.LE0 = 0;
   543  00099A  908D               	bcf	141,0,c	;volatile
   544                           
   545                           ;maincode2.c: 92:                 _delay((unsigned long)((17600)*(8000000UL/4000000.0)))
      +                          ;
   546  00099C  0E2E               	movlw	46
   547  00099E  6E0A               	movwf	??_main^0,c
   548  0009A0  0EB6               	movlw	182
   549  0009A2                     u357:
   550  0009A2  2EE8               	decfsz	wreg,f,c
   551  0009A4  D7FE               	bra	u357
   552  0009A6  2E0A               	decfsz	??_main^0,f,c
   553  0009A8  D7FC               	bra	u357
   554  0009AA                     l1145:
   555  0009AA  500C               	movf	_posicion^0,w,c
   556  0009AC  6E0A               	movwf	??_main^0,c
   557  0009AE  6A0B               	clrf	(??_main+1)^0,c
   558                           
   559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   560                           ; Switch size 1, requested type "simple"
   561                           ; Number of cases is 1, Range of values is 0 to 0
   562                           ; switch strategies available:
   563                           ; Name         Instructions Cycles
   564                           ; simple_byte            4     3 (average)
   565                           ;	Chosen strategy is simple_byte
   566  0009B0  500B               	movf	(??_main+1)^0,w,c
   567  0009B2  0A00               	xorlw	0	; case 0
   568  0009B4  B4D8               	btfsc	status,2,c
   569  0009B6  EFDF  F004         	goto	l1155
   570  0009BA  EFD5  F004         	goto	l1145
   571  0009BE                     l1155:
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 10, Range of values is 0 to 9
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte           31    16 (average)
   578                           ;	Chosen strategy is simple_byte
   579  0009BE  500A               	movf	??_main^0,w,c
   580  0009C0  0A00               	xorlw	0	; case 0
   581  0009C2  B4D8               	btfsc	status,2,c
   582  0009C4  EF1D  F004         	goto	l117
   583  0009C8  0A01               	xorlw	1	; case 1
   584  0009CA  B4D8               	btfsc	status,2,c
   585  0009CC  EF2D  F004         	goto	l119
   586  0009D0  0A03               	xorlw	3	; case 2
   587  0009D2  B4D8               	btfsc	status,2,c
   588  0009D4  EF3F  F004         	goto	l120
   589  0009D8  0A01               	xorlw	1	; case 3
   590  0009DA  B4D8               	btfsc	status,2,c
   591  0009DC  EF52  F004         	goto	l121
   592  0009E0  0A07               	xorlw	7	; case 4
   593  0009E2  B4D8               	btfsc	status,2,c
   594  0009E4  EF65  F004         	goto	l122
   595  0009E8  0A01               	xorlw	1	; case 5
   596  0009EA  B4D8               	btfsc	status,2,c
   597  0009EC  EF78  F004         	goto	l123
   598  0009F0  0A03               	xorlw	3	; case 6
   599  0009F2  B4D8               	btfsc	status,2,c
   600  0009F4  EF8B  F004         	goto	l124
   601  0009F8  0A01               	xorlw	1	; case 7
   602  0009FA  B4D8               	btfsc	status,2,c
   603  0009FC  EF9E  F004         	goto	l125
   604  000A00  0A0F               	xorlw	15	; case 8
   605  000A02  B4D8               	btfsc	status,2,c
   606  000A04  EFB1  F004         	goto	l126
   607  000A08  0A01               	xorlw	1	; case 9
   608  000A0A  B4D8               	btfsc	status,2,c
   609  000A0C  EFC4  F004         	goto	l127
   610  000A10  EFD5  F004         	goto	l1145
   611  000A14  EF07  F000         	goto	start
   612  000A18                     __end_of_main:
   613                           	callstack 0
   614                           
   615 ;; *************** function _inicio_LCD *****************
   616 ;; Defined at:
   617 ;;		line 18 in file "maincode2.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   631 ;;      Params:         0       0       0       0       0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0       0       0
   633 ;;      Temps:          1       0       0       0       0       0       0       0       0
   634 ;;      Totals:         1       0       0       0       0       0       0       0       0
   635 ;;Total ram usage:        1 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; Hardware stack levels required when called: 4
   638 ;; This function calls:
   639 ;;		_BORRAR_LCD
   640 ;;		_CURSOR_HOME
   641 ;;		_CURSOR_ONOFF
   642 ;;		_LCD_CONFIG
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text1
   649  000BFA                     __ptext1:
   650                           	callstack 0
   651  000BFA                     _inicio_LCD:
   652                           	callstack 26
   653  000BFA                     
   654                           ;maincode2.c: 19:     TRISD = 0x00;
   655  000BFA  0E00               	movlw	0
   656  000BFC  6E95               	movwf	149,c	;volatile
   657  000BFE                     
   658                           ;maincode2.c: 20:     LCD_CONFIG();
   659  000BFE  EC45  F005         	call	_LCD_CONFIG	;wreg free
   660  000C02                     
   661                           ;maincode2.c: 21:     _delay((unsigned long)((22)*(8000000UL/4000.0)));
   662  000C02  0E3A               	movlw	58
   663  000C04  6E05               	movwf	??_inicio_LCD^0,c
   664  000C06  0E23               	movlw	35
   665  000C08                     u367:
   666  000C08  2EE8               	decfsz	wreg,f,c
   667  000C0A  D7FE               	bra	u367
   668  000C0C  2E05               	decfsz	??_inicio_LCD^0,f,c
   669  000C0E  D7FC               	bra	u367
   670  000C10  F000               	nop	
   671  000C12                     
   672                           ;maincode2.c: 22:     BORRAR_LCD();
   673  000C12  EC47  F006         	call	_BORRAR_LCD	;wreg free
   674  000C16                     
   675                           ;maincode2.c: 23:     CURSOR_HOME();
   676  000C16  EC43  F006         	call	_CURSOR_HOME	;wreg free
   677  000C1A                     
   678                           ;maincode2.c: 24:     CURSOR_ONOFF(1);
   679  000C1A  0E01               	movlw	1
   680  000C1C  ECE5  F005         	call	_CURSOR_ONOFF
   681  000C20  0012               	return		;funcret
   682  000C22                     __end_of_inicio_LCD:
   683                           	callstack 0
   684                           
   685 ;; *************** function _LCD_CONFIG *****************
   686 ;; Defined at:
   687 ;;		line 72 in file "LCD.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:          1       0       0       0       0       0       0       0       0
   704 ;;      Totals:         1       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        1 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 3
   708 ;; This function calls:
   709 ;;		_ENVIA_LCD_CMD
   710 ;;		_ENVIA_NIBBLE
   711 ;; This function is called by:
   712 ;;		_inicio_LCD
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text2
   717  000A8A                     __ptext2:
   718                           	callstack 0
   719  000A8A                     _LCD_CONFIG:
   720                           	callstack 26
   721  000A8A                     
   722                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   723  000A8A  908C               	bcf	140,0,c	;volatile
   724                           
   725                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   726  000A8C  928C               	bcf	140,1,c	;volatile
   727  000A8E                     
   728                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   729  000A8E  0E30               	movlw	48
   730  000A90  EC23  F006         	call	_ENVIA_NIBBLE
   731  000A94                     
   732                           ;LCD.c: 77:         _delay(24000);
   733  000A94  0E20               	movlw	32
   734  000A96  6E04               	movwf	??_LCD_CONFIG^0,c
   735  000A98  0E2A               	movlw	42
   736  000A9A                     u377:
   737  000A9A  2EE8               	decfsz	wreg,f,c
   738  000A9C  D7FE               	bra	u377
   739  000A9E  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   740  000AA0  D7FC               	bra	u377
   741  000AA2                     
   742                           ;LCD.c: 78:         _delay(24000);
   743  000AA2  0E20               	movlw	32
   744  000AA4  6E04               	movwf	??_LCD_CONFIG^0,c
   745  000AA6  0E2A               	movlw	42
   746  000AA8                     u387:
   747  000AA8  2EE8               	decfsz	wreg,f,c
   748  000AAA  D7FE               	bra	u387
   749  000AAC  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   750  000AAE  D7FC               	bra	u387
   751                           
   752                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   753  000AB0  0E30               	movlw	48
   754  000AB2  EC23  F006         	call	_ENVIA_NIBBLE
   755  000AB6                     
   756                           ;LCD.c: 83:  _delay(1200);
   757  000AB6  0EF0               	movlw	240
   758  000AB8                     u397:
   759  000AB8  D000               	nop2	
   760  000ABA  2EE8               	decfsz	wreg,f,c
   761  000ABC  D7FD               	bra	u397
   762  000ABE                     
   763                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   764  000ABE  0E30               	movlw	48
   765  000AC0  EC23  F006         	call	_ENVIA_NIBBLE
   766  000AC4                     
   767                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   768  000AC4  0E20               	movlw	32
   769  000AC6  EC23  F006         	call	_ENVIA_NIBBLE
   770  000ACA                     
   771                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   772  000ACA  0E01               	movlw	1
   773  000ACC  ECB1  F005         	call	_ENVIA_LCD_CMD
   774  000AD0                     
   775                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   776  000AD0  0E28               	movlw	40
   777  000AD2  ECB1  F005         	call	_ENVIA_LCD_CMD
   778  000AD6                     
   779                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   780  000AD6  0E0F               	movlw	15
   781  000AD8  ECB1  F005         	call	_ENVIA_LCD_CMD
   782  000ADC                     
   783                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   784  000ADC  0E06               	movlw	6
   785  000ADE  ECB1  F005         	call	_ENVIA_LCD_CMD
   786  000AE2                     
   787                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   788  000AE2  0E01               	movlw	1
   789  000AE4  ECB1  F005         	call	_ENVIA_LCD_CMD
   790  000AE8  0012               	return		;funcret
   791  000AEA                     __end_of_LCD_CONFIG:
   792                           	callstack 0
   793                           
   794 ;; *************** function _CURSOR_ONOFF *****************
   795 ;; Defined at:
   796 ;;		line 35 in file "LCD.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  estado          1    wreg     unsigned char 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  estado          1    3[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   810 ;;      Params:         0       0       0       0       0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0
   813 ;;      Totals:         1       0       0       0       0       0       0       0       0
   814 ;;Total ram usage:        1 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 3
   817 ;; This function calls:
   818 ;;		_ENVIA_LCD_CMD
   819 ;; This function is called by:
   820 ;;		_inicio_LCD
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825  000BCA                     __ptext3:
   826                           	callstack 0
   827  000BCA                     _CURSOR_ONOFF:
   828                           	callstack 26
   829                           
   830                           ;incstack = 0
   831                           ;CURSOR_ONOFF@estado stored from wreg
   832  000BCA  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   833  000BCC                     
   834                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   835  000BCC  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   836  000BCE  A4D8               	btfss	status,2,c
   837  000BD0  EFEC  F005         	goto	u21
   838  000BD4  EFEE  F005         	goto	u20
   839  000BD8                     u21:
   840  000BD8  EFF1  F005         	goto	l887
   841  000BDC                     u20:
   842  000BDC  0E0E               	movlw	14
   843  000BDE  ECB1  F005         	call	_ENVIA_LCD_CMD
   844  000BE2                     l887:
   845                           
   846                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   847  000BE2  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   848  000BE4  A4D8               	btfss	status,2,c
   849  000BE6  EFF7  F005         	goto	u31
   850  000BEA  EFF9  F005         	goto	u30
   851  000BEE                     u31:
   852  000BEE  EFFC  F005         	goto	l42
   853  000BF2                     u30:
   854  000BF2  0E0C               	movlw	12
   855  000BF4  ECB1  F005         	call	_ENVIA_LCD_CMD
   856  000BF8                     l42:
   857  000BF8  0012               	return		;funcret
   858  000BFA                     __end_of_CURSOR_ONOFF:
   859                           	callstack 0
   860                           
   861 ;; *************** function _CURSOR_HOME *****************
   862 ;; Defined at:
   863 ;;		line 30 in file "LCD.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   877 ;;      Params:         0       0       0       0       0       0       0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 3
   884 ;; This function calls:
   885 ;;		_ENVIA_LCD_CMD
   886 ;; This function is called by:
   887 ;;		_inicio_LCD
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text4
   892  000C86                     __ptext4:
   893                           	callstack 0
   894  000C86                     _CURSOR_HOME:
   895                           	callstack 26
   896  000C86                     
   897                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   898  000C86  0E02               	movlw	2
   899  000C88  ECB1  F005         	call	_ENVIA_LCD_CMD
   900  000C8C  0012               	return		;funcret
   901  000C8E                     __end_of_CURSOR_HOME:
   902                           	callstack 0
   903                           
   904 ;; *************** function _BORRAR_LCD *****************
   905 ;; Defined at:
   906 ;;		line 67 in file "LCD.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   920 ;;      Params:         0       0       0       0       0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 3
   927 ;; This function calls:
   928 ;;		_ENVIA_LCD_CMD
   929 ;; This function is called by:
   930 ;;		_inicio_LCD
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text5
   935  000C8E                     __ptext5:
   936                           	callstack 0
   937  000C8E                     _BORRAR_LCD:
   938                           	callstack 26
   939  000C8E                     
   940                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   941  000C8E  0E01               	movlw	1
   942  000C90  ECB1  F005         	call	_ENVIA_LCD_CMD
   943  000C94  0012               	return		;funcret
   944  000C96                     __end_of_BORRAR_LCD:
   945                           	callstack 0
   946                           
   947 ;; *************** function _configuro *****************
   948 ;; Defined at:
   949 ;;		line 8 in file "maincode2.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text6
   978  000C62                     __ptext6:
   979                           	callstack 0
   980  000C62                     _configuro:
   981                           	callstack 29
   982  000C62                     
   983                           ;maincode2.c: 9:     OSCCON = 0x70;
   984  000C62  0E70               	movlw	112
   985  000C64  6ED3               	movwf	211,c	;volatile
   986                           
   987                           ;maincode2.c: 10:     ADCON1 = 0x0F;
   988  000C66  0E0F               	movlw	15
   989  000C68  6EC1               	movwf	193,c	;volatile
   990  000C6A                     
   991                           ;maincode2.c: 11:     TRISEbits.RE0 = 0;
   992  000C6A  9096               	bcf	150,0,c	;volatile
   993  000C6C                     
   994                           ;maincode2.c: 12:     INTCONbits.GIE = 1;
   995  000C6C  8EF2               	bsf	242,7,c	;volatile
   996  000C6E                     
   997                           ;maincode2.c: 13:     INTCONbits.INT0IE = 1;
   998  000C6E  88F2               	bsf	242,4,c	;volatile
   999  000C70                     
  1000                           ;maincode2.c: 14:     INTCON2bits.RBPU = 0;
  1001  000C70  9EF1               	bcf	241,7,c	;volatile
  1002  000C72                     
  1003                           ;maincode2.c: 15:     INTCON2bits.INTEDG0 = 0;
  1004  000C72  9CF1               	bcf	241,6,c	;volatile
  1005  000C74  0012               	return		;funcret
  1006  000C76                     __end_of_configuro:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _POS_CURSOR *****************
  1010 ;; Defined at:
  1011 ;;		line 6 in file "LCD.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  fila            1    wreg     unsigned char 
  1014 ;;  columna         1    3[COMRAM] unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  fila            1    4[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         1       0       0       0       0       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1029 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 3
  1033 ;; This function calls:
  1034 ;;		_ENVIA_LCD_CMD
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text7
  1041  000B28                     __ptext7:
  1042                           	callstack 0
  1043  000B28                     _POS_CURSOR:
  1044                           	callstack 27
  1045                           
  1046                           ;incstack = 0
  1047                           ;POS_CURSOR@fila stored from wreg
  1048  000B28  6E05               	movwf	POS_CURSOR@fila^0,c
  1049  000B2A                     
  1050                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1051  000B2A  0405               	decf	POS_CURSOR@fila^0,w,c
  1052  000B2C  A4D8               	btfss	status,2,c
  1053  000B2E  EF9B  F005         	goto	u131
  1054  000B32  EF9D  F005         	goto	u130
  1055  000B36                     u131:
  1056  000B36  EFA3  F005         	goto	l1083
  1057  000B3A                     u130:
  1058  000B3A                     
  1059                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1060  000B3A  5004               	movf	POS_CURSOR@columna^0,w,c
  1061  000B3C  0F80               	addlw	128
  1062  000B3E  ECB1  F005         	call	_ENVIA_LCD_CMD
  1063                           
  1064                           ;LCD.c: 11:  }
  1065  000B42  EFB0  F005         	goto	l24
  1066  000B46                     l1083:
  1067  000B46  0E02               	movlw	2
  1068  000B48  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1069  000B4A  A4D8               	btfss	status,2,c
  1070  000B4C  EFAA  F005         	goto	u141
  1071  000B50  EFAC  F005         	goto	u140
  1072  000B54                     u141:
  1073  000B54  EFB0  F005         	goto	l24
  1074  000B58                     u140:
  1075  000B58                     
  1076                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1077  000B58  5004               	movf	POS_CURSOR@columna^0,w,c
  1078  000B5A  0FC0               	addlw	192
  1079  000B5C  ECB1  F005         	call	_ENVIA_LCD_CMD
  1080  000B60                     l24:
  1081  000B60  0012               	return		;funcret
  1082  000B62                     __end_of_POS_CURSOR:
  1083                           	callstack 0
  1084                           
  1085 ;; *************** function _ENVIA_LCD_CMD *****************
  1086 ;; Defined at:
  1087 ;;		line 104 in file "LCD.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;  dato            1    wreg     unsigned char 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  dato            1    1[COMRAM] unsigned char 
  1092 ;;  aux             1    2[COMRAM] unsigned char 
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  1    wreg      void 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1102 ;;      Params:         0       0       0       0       0       0       0       0       0
  1103 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1105 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels used: 1
  1108 ;; Hardware stack levels required when called: 2
  1109 ;; This function calls:
  1110 ;;		_ENVIA_NIBBLE
  1111 ;;		_LEER_LCD
  1112 ;; This function is called by:
  1113 ;;		_POS_CURSOR
  1114 ;;		_CURSOR_HOME
  1115 ;;		_CURSOR_ONOFF
  1116 ;;		_BORRAR_LCD
  1117 ;;		_LCD_CONFIG
  1118 ;;		_BLINK_CURSOR
  1119 ;;		_DISPLAY_ONOFF
  1120 ;;		_GENERACARACTER
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text8
  1125  000B62                     __ptext8:
  1126                           	callstack 0
  1127  000B62                     _ENVIA_LCD_CMD:
  1128                           	callstack 26
  1129                           
  1130                           ;incstack = 0
  1131                           ;ENVIA_LCD_CMD@dato stored from wreg
  1132  000B62  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1133  000B64                     
  1134                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1135  000B64  908C               	bcf	140,0,c	;volatile
  1136  000B66                     
  1137                           ;LCD.c: 108:  LEER_LCD();
  1138  000B66  EC0C  F005         	call	_LEER_LCD	;wreg free
  1139  000B6A                     
  1140                           ;LCD.c: 109:  TRISD = 0b00000000;
  1141  000B6A  0E00               	movlw	0
  1142  000B6C  6E95               	movwf	149,c	;volatile
  1143  000B6E                     
  1144                           ;LCD.c: 111:         _delay(1200);
  1145  000B6E  0EF0               	movlw	240
  1146  000B70                     u407:
  1147  000B70  D000               	nop2	
  1148  000B72  2EE8               	decfsz	wreg,f,c
  1149  000B74  D7FD               	bra	u407
  1150  000B76                     
  1151                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1152  000B76  928C               	bcf	140,1,c	;volatile
  1153  000B78                     
  1154                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1155  000B78  948C               	bcf	140,2,c	;volatile
  1156  000B7A                     
  1157                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1158  000B7A  908C               	bcf	140,0,c	;volatile
  1159  000B7C                     
  1160                           ;LCD.c: 115:  aux = dato & 0xF0;
  1161  000B7C  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1162  000B7E  0BF0               	andlw	240
  1163  000B80  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1164  000B82                     
  1165                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1166  000B82  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1167  000B84  EC23  F006         	call	_ENVIA_NIBBLE
  1168  000B88                     
  1169                           ;LCD.c: 117:  aux = dato<<4;
  1170  000B88  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1171  000B8A  0BF0               	andlw	240
  1172  000B8C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1173  000B8E                     
  1174                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1175  000B8E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1176  000B90  EC23  F006         	call	_ENVIA_NIBBLE
  1177  000B94  0012               	return		;funcret
  1178  000B96                     __end_of_ENVIA_LCD_CMD:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _ESCRIBE_MENSAJE *****************
  1182 ;; Defined at:
  1183 ;;		line 41 in file "LCD.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1186 ;;		 -> STR_1(17), 
  1187 ;;  tam             1    5[COMRAM] unsigned char 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  i               1    8[COMRAM] unsigned char 
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1199 ;;      Params:         3       0       0       0       0       0       0       0       0
  1200 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1201 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1202 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1203 ;;Total ram usage:        6 bytes
  1204 ;; Hardware stack levels used: 1
  1205 ;; Hardware stack levels required when called: 3
  1206 ;; This function calls:
  1207 ;;		_ENVIA_CHAR
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           	psect	text9
  1214  000AEA                     __ptext9:
  1215                           	callstack 0
  1216  000AEA                     _ESCRIBE_MENSAJE:
  1217                           	callstack 27
  1218  000AEA                     
  1219                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1220  000AEA  0E00               	movlw	0
  1221  000AEC  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1222                           
  1223                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1224  000AEE  0E00               	movlw	0
  1225  000AF0  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1226  000AF2  EF8A  F005         	goto	l1093
  1227  000AF6                     l1089:
  1228                           
  1229                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1230  000AF6  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1231  000AF8  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1232  000AFA  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1233  000AFC  0E00               	movlw	0
  1234  000AFE  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1235  000B00  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1236  000B02  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1237  000B06  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1238  000B0A                     	if	0	;tblptru may be non-zero
  1239  000B0A                     	endif
  1240  000B0A                     	if	0	;tblptru may be non-zero
  1241  000B0A                     	endif
  1242  000B0A  0008               	tblrd		*
  1243  000B0C  50F5               	movf	tablat,w,c
  1244  000B0E  ECCB  F005         	call	_ENVIA_CHAR
  1245  000B12                     
  1246                           ;LCD.c: 47:  }
  1247  000B12  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1248  000B14                     l1093:
  1249  000B14  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1250  000B16  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1251  000B18  A0D8               	btfss	status,0,c
  1252  000B1A  EF91  F005         	goto	u151
  1253  000B1E  EF93  F005         	goto	u150
  1254  000B22                     u151:
  1255  000B22  EF7B  F005         	goto	l1089
  1256  000B26                     u150:
  1257  000B26  0012               	return		;funcret
  1258  000B28                     __end_of_ESCRIBE_MENSAJE:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _ENVIA_CHAR *****************
  1262 ;; Defined at:
  1263 ;;		line 50 in file "LCD.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  dato            1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  dato            1    1[COMRAM] unsigned char 
  1268 ;;  aux             1    2[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0
  1279 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1281 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1282 ;;Total ram usage:        2 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 2
  1285 ;; This function calls:
  1286 ;;		_ENVIA_NIBBLE
  1287 ;;		_LEER_LCD
  1288 ;; This function is called by:
  1289 ;;		_ESCRIBE_MENSAJE
  1290 ;;		_GENERACARACTER
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text10
  1295  000B96                     __ptext10:
  1296                           	callstack 0
  1297  000B96                     _ENVIA_CHAR:
  1298                           	callstack 27
  1299                           
  1300                           ;incstack = 0
  1301                           ;ENVIA_CHAR@dato stored from wreg
  1302  000B96  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1303  000B98                     
  1304                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1305  000B98  808C               	bsf	140,0,c	;volatile
  1306  000B9A                     
  1307                           ;LCD.c: 54:  LEER_LCD();
  1308  000B9A  EC0C  F005         	call	_LEER_LCD	;wreg free
  1309  000B9E                     
  1310                           ;LCD.c: 55:  TRISD = 0x00;
  1311  000B9E  0E00               	movlw	0
  1312  000BA0  6E95               	movwf	149,c	;volatile
  1313  000BA2                     
  1314                           ;LCD.c: 56:         _delay(1200);
  1315  000BA2  0EF0               	movlw	240
  1316  000BA4                     u417:
  1317  000BA4  D000               	nop2	
  1318  000BA6  2EE8               	decfsz	wreg,f,c
  1319  000BA8  D7FD               	bra	u417
  1320  000BAA                     
  1321                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1322  000BAA  928C               	bcf	140,1,c	;volatile
  1323  000BAC                     
  1324                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1325  000BAC  948C               	bcf	140,2,c	;volatile
  1326  000BAE                     
  1327                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1328  000BAE  808C               	bsf	140,0,c	;volatile
  1329  000BB0                     
  1330                           ;LCD.c: 61:  aux = dato & 0xF0;
  1331  000BB0  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1332  000BB2  0BF0               	andlw	240
  1333  000BB4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1334  000BB6                     
  1335                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1336  000BB6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1337  000BB8  EC23  F006         	call	_ENVIA_NIBBLE
  1338  000BBC                     
  1339                           ;LCD.c: 63:  aux = dato << 4;
  1340  000BBC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1341  000BBE  0BF0               	andlw	240
  1342  000BC0  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1343  000BC2                     
  1344                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1345  000BC2  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1346  000BC4  EC23  F006         	call	_ENVIA_NIBBLE
  1347  000BC8  0012               	return		;funcret
  1348  000BCA                     __end_of_ENVIA_CHAR:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _LEER_LCD *****************
  1352 ;; Defined at:
  1353 ;;		line 121 in file "LCD.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  aux             1    0[COMRAM] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_ENVIA_CHAR
  1378 ;;		_ENVIA_LCD_CMD
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text11
  1383  000A18                     __ptext11:
  1384                           	callstack 0
  1385  000A18                     _LEER_LCD:
  1386                           	callstack 26
  1387  000A18                     
  1388                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1389  000A18  0EF8               	movlw	248
  1390  000A1A  6E95               	movwf	149,c	;volatile
  1391  000A1C                     
  1392                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1393  000A1C  908C               	bcf	140,0,c	;volatile
  1394  000A1E                     
  1395                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1396  000A1E  828C               	bsf	140,1,c	;volatile
  1397  000A20                     
  1398                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1399  000A20  848C               	bsf	140,2,c	;volatile
  1400  000A22                     
  1401                           ;LCD.c: 128:         _delay(1200);
  1402  000A22  0EF0               	movlw	240
  1403  000A24                     u427:
  1404  000A24  D000               	nop2	
  1405  000A26  2EE8               	decfsz	wreg,f,c
  1406  000A28  D7FD               	bra	u427
  1407  000A2A                     
  1408                           ;LCD.c: 130:  aux = PORTD;
  1409  000A2A  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1410  000A2E                     
  1411                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1412  000A2E  948C               	bcf	140,2,c	;volatile
  1413  000A30                     
  1414                           ;LCD.c: 132:         _delay(1200);
  1415  000A30  0EF0               	movlw	240
  1416  000A32                     u437:
  1417  000A32  D000               	nop2	
  1418  000A34  2EE8               	decfsz	wreg,f,c
  1419  000A36  D7FD               	bra	u437
  1420  000A38                     
  1421                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1422  000A38  848C               	bsf	140,2,c	;volatile
  1423  000A3A                     
  1424                           ;LCD.c: 135:         _delay(1200);
  1425  000A3A  0EF0               	movlw	240
  1426  000A3C                     u447:
  1427  000A3C  D000               	nop2	
  1428  000A3E  2EE8               	decfsz	wreg,f,c
  1429  000A40  D7FD               	bra	u447
  1430  000A42                     
  1431                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1432  000A42  948C               	bcf	140,2,c	;volatile
  1433  000A44                     l835:
  1434                           
  1435                           ;LCD.c: 138:  aux = aux & 0x80;
  1436  000A44  5001               	movf	LEER_LCD@aux^0,w,c
  1437  000A46  0B80               	andlw	128
  1438  000A48  6E01               	movwf	LEER_LCD@aux^0,c
  1439                           
  1440                           ;LCD.c: 139:  while(aux == 0x80)
  1441  000A4A  EF3B  F005         	goto	l849
  1442  000A4E                     l67:
  1443                           
  1444                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1445  000A4E  848C               	bsf	140,2,c	;volatile
  1446  000A50                     
  1447                           ;LCD.c: 142:             _delay(1200);
  1448  000A50  0EF0               	movlw	240
  1449  000A52                     u457:
  1450  000A52  D000               	nop2	
  1451  000A54  2EE8               	decfsz	wreg,f,c
  1452  000A56  D7FD               	bra	u457
  1453  000A58                     
  1454                           ;LCD.c: 143:             aux = PORTD;
  1455  000A58  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1456  000A5C                     
  1457                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1458  000A5C  948C               	bcf	140,2,c	;volatile
  1459                           
  1460                           ;LCD.c: 145:             _delay(1200);
  1461  000A5E  0EF0               	movlw	240
  1462  000A60                     u467:
  1463  000A60  D000               	nop2	
  1464  000A62  2EE8               	decfsz	wreg,f,c
  1465  000A64  D7FD               	bra	u467
  1466  000A66                     
  1467                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1468  000A66  848C               	bsf	140,2,c	;volatile
  1469                           
  1470                           ;LCD.c: 147:             _delay(1200);
  1471  000A68  0EF0               	movlw	240
  1472  000A6A                     u477:
  1473  000A6A  D000               	nop2	
  1474  000A6C  2EE8               	decfsz	wreg,f,c
  1475  000A6E  D7FD               	bra	u477
  1476  000A70                     
  1477                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1478  000A70  948C               	bcf	140,2,c	;volatile
  1479  000A72  EF22  F005         	goto	l835
  1480  000A76                     l849:
  1481                           
  1482                           ;LCD.c: 139:  while(aux == 0x80)
  1483  000A76  0E80               	movlw	128
  1484  000A78  1801               	xorwf	LEER_LCD@aux^0,w,c
  1485  000A7A  B4D8               	btfsc	status,2,c
  1486  000A7C  EF42  F005         	goto	u11
  1487  000A80  EF44  F005         	goto	u10
  1488  000A84                     u11:
  1489  000A84  EF27  F005         	goto	l67
  1490  000A88                     u10:
  1491  000A88  0012               	return		;funcret
  1492  000A8A                     __end_of_LEER_LCD:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _ENVIA_NIBBLE *****************
  1496 ;; Defined at:
  1497 ;;		line 93 in file "LCD.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;  dato            1    wreg     unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  dato            1    0[COMRAM] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1514 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        1 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_ENVIA_CHAR
  1522 ;;		_LCD_CONFIG
  1523 ;;		_ENVIA_LCD_CMD
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text12
  1528  000C46                     __ptext12:
  1529                           	callstack 0
  1530  000C46                     _ENVIA_NIBBLE:
  1531                           	callstack 27
  1532                           
  1533                           ;incstack = 0
  1534                           ;ENVIA_NIBBLE@dato stored from wreg
  1535  000C46  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1536  000C48                     
  1537                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1538  000C48  0E0F               	movlw	15
  1539  000C4A  168C               	andwf	140,f,c	;volatile
  1540                           
  1541                           ;LCD.c: 96:  dato &= 0xF0;
  1542  000C4C  0EF0               	movlw	240
  1543  000C4E  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1544                           
  1545                           ;LCD.c: 97:  LATD|= dato;
  1546  000C50  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1547  000C52  128C               	iorwf	140,f,c	;volatile
  1548  000C54                     
  1549                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1550  000C54  848C               	bsf	140,2,c	;volatile
  1551  000C56                     
  1552                           ;LCD.c: 100:         _delay(1200);
  1553  000C56  0EF0               	movlw	240
  1554  000C58                     u487:
  1555  000C58  D000               	nop2	
  1556  000C5A  2EE8               	decfsz	wreg,f,c
  1557  000C5C  D7FD               	bra	u487
  1558  000C5E                     
  1559                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1560  000C5E  948C               	bcf	140,2,c	;volatile
  1561  000C60  0012               	return		;funcret
  1562  000C62                     __end_of_ENVIA_NIBBLE:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _INT0_ISR *****************
  1566 ;; Defined at:
  1567 ;;		line 98 in file "maincode2.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		Interrupt level 2
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	intcode
  1595  000008                     __pintcode:
  1596                           	callstack 0
  1597  000008                     _INT0_ISR:
  1598                           	callstack 26
  1599                           
  1600                           ;incstack = 0
  1601  000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1602  00000A  ED11  F006         	call	int_func,f	;refresh shadow registers
  1603                           
  1604                           	psect	intcode_body
  1605  000C22                     __pintcode_body:
  1606                           	callstack 26
  1607  000C22                     int_func:
  1608                           	callstack 26
  1609  000C22  0006               	pop		; remove dummy address from shadow register refresh
  1610  000C24                     
  1611                           ;maincode2.c: 99:     INTCONbits.INT0IF = 0;
  1612  000C24  92F2               	bcf	242,1,c	;volatile
  1613  000C26                     
  1614                           ;maincode2.c: 100:     if(posicion == 9){
  1615  000C26  0E09               	movlw	9
  1616  000C28  180C               	xorwf	_posicion^0,w,c
  1617  000C2A  A4D8               	btfss	status,2,c
  1618  000C2C  EF1A  F006         	goto	i2u12_41
  1619  000C30  EF1C  F006         	goto	i2u12_40
  1620  000C34                     i2u12_41:
  1621  000C34  EF20  F006         	goto	i2l1073
  1622  000C38                     i2u12_40:
  1623  000C38                     
  1624                           ;maincode2.c: 101:         posicion = 0;
  1625  000C38  0E00               	movlw	0
  1626  000C3A  6E0C               	movwf	_posicion^0,c
  1627                           
  1628                           ;maincode2.c: 102:     }
  1629  000C3C  EF21  F006         	goto	i2l137
  1630  000C40                     i2l1073:
  1631                           
  1632                           ;maincode2.c: 104:         posicion++;
  1633  000C40  2A0C               	incf	_posicion^0,f,c
  1634  000C42                     i2l137:
  1635  000C42  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1636  000C44  0011               	retfie		f
  1637  000C46                     __end_of_INT0_ISR:
  1638                           	callstack 0
  1639                           
  1640                           	psect	rparam
  1641  0000                     
  1642                           	psect	temp
  1643  00000D                     btemp:
  1644                           	callstack 0
  1645  00000D                     	ds	1
  1646  0000                     int$flags	set	btemp
  1647  0000                     wtemp8	set	btemp+1
  1648  0000                     ttemp5	set	btemp+1
  1649  0000                     ttemp6	set	btemp+4
  1650  0000                     ttemp7	set	btemp+8
  1651                           
  1652                           	psect	idloc
  1653                           
  1654                           ;Config register IDLOC0 @ 0x200000
  1655                           ;	unspecified, using default values
  1656  200000                     	org	2097152
  1657  200000  FF                 	db	255
  1658                           
  1659                           ;Config register IDLOC1 @ 0x200001
  1660                           ;	unspecified, using default values
  1661  200001                     	org	2097153
  1662  200001  FF                 	db	255
  1663                           
  1664                           ;Config register IDLOC2 @ 0x200002
  1665                           ;	unspecified, using default values
  1666  200002                     	org	2097154
  1667  200002  FF                 	db	255
  1668                           
  1669                           ;Config register IDLOC3 @ 0x200003
  1670                           ;	unspecified, using default values
  1671  200003                     	org	2097155
  1672  200003  FF                 	db	255
  1673                           
  1674                           ;Config register IDLOC4 @ 0x200004
  1675                           ;	unspecified, using default values
  1676  200004                     	org	2097156
  1677  200004  FF                 	db	255
  1678                           
  1679                           ;Config register IDLOC5 @ 0x200005
  1680                           ;	unspecified, using default values
  1681  200005                     	org	2097157
  1682  200005  FF                 	db	255
  1683                           
  1684                           ;Config register IDLOC6 @ 0x200006
  1685                           ;	unspecified, using default values
  1686  200006                     	org	2097158
  1687  200006  FF                 	db	255
  1688                           
  1689                           ;Config register IDLOC7 @ 0x200007
  1690                           ;	unspecified, using default values
  1691  200007                     	org	2097159
  1692  200007  FF                 	db	255
  1693                           
  1694                           	psect	config
  1695                           
  1696                           ;Config register CONFIG1L @ 0x300000
  1697                           ;	PLL Prescaler Selection bits
  1698                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1699                           ;	System Clock Postscaler Selection bits
  1700                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1701                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1702                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1703  300000                     	org	3145728
  1704  300000  00                 	db	0
  1705                           
  1706                           ;Config register CONFIG1H @ 0x300001
  1707                           ;	Oscillator Selection bits
  1708                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1709                           ;	Fail-Safe Clock Monitor Enable bit
  1710                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1711                           ;	Internal/External Oscillator Switchover bit
  1712                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1713  300001                     	org	3145729
  1714  300001  08                 	db	8
  1715                           
  1716                           ;Config register CONFIG2L @ 0x300002
  1717                           ;	Power-up Timer Enable bit
  1718                           ;	PWRT = ON, PWRT enabled
  1719                           ;	Brown-out Reset Enable bits
  1720                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1721                           ;	Brown-out Reset Voltage bits
  1722                           ;	BORV = 3, Minimum setting 2.05V
  1723                           ;	USB Voltage Regulator Enable bit
  1724                           ;	VREGEN = OFF, USB voltage regulator disabled
  1725  300002                     	org	3145730
  1726  300002  18                 	db	24
  1727                           
  1728                           ;Config register CONFIG2H @ 0x300003
  1729                           ;	Watchdog Timer Enable bit
  1730                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1731                           ;	Watchdog Timer Postscale Select bits
  1732                           ;	WDTPS = 32768, 1:32768
  1733  300003                     	org	3145731
  1734  300003  1E                 	db	30
  1735                           
  1736                           ; Padding undefined space
  1737  300004                     	org	3145732
  1738  300004  FF                 	db	255
  1739                           
  1740                           ;Config register CONFIG3H @ 0x300005
  1741                           ;	CCP2 MUX bit
  1742                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1743                           ;	PORTB A/D Enable bit
  1744                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1745                           ;	Low-Power Timer 1 Oscillator Enable bit
  1746                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1747                           ;	MCLR Pin Enable bit
  1748                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1749  300005                     	org	3145733
  1750  300005  81                 	db	129
  1751                           
  1752                           ;Config register CONFIG4L @ 0x300006
  1753                           ;	Stack Full/Underflow Reset Enable bit
  1754                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1755                           ;	Single-Supply ICSP Enable bit
  1756                           ;	LVP = OFF, Single-Supply ICSP disabled
  1757                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1758                           ;	ICPRT = OFF, ICPORT disabled
  1759                           ;	Extended Instruction Set Enable bit
  1760                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1761                           ;	Background Debugger Enable bit
  1762                           ;	DEBUG = 0x1, unprogrammed default
  1763  300006                     	org	3145734
  1764  300006  81                 	db	129
  1765                           
  1766                           ; Padding undefined space
  1767  300007                     	org	3145735
  1768  300007  FF                 	db	255
  1769                           
  1770                           ;Config register CONFIG5L @ 0x300008
  1771                           ;	Code Protection bit
  1772                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1773                           ;	Code Protection bit
  1774                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1775                           ;	Code Protection bit
  1776                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1777                           ;	Code Protection bit
  1778                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1779  300008                     	org	3145736
  1780  300008  0F                 	db	15
  1781                           
  1782                           ;Config register CONFIG5H @ 0x300009
  1783                           ;	Boot Block Code Protection bit
  1784                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1785                           ;	Data EEPROM Code Protection bit
  1786                           ;	CPD = OFF, Data EEPROM is not code-protected
  1787  300009                     	org	3145737
  1788  300009  C0                 	db	192
  1789                           
  1790                           ;Config register CONFIG6L @ 0x30000A
  1791                           ;	Write Protection bit
  1792                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1793                           ;	Write Protection bit
  1794                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1795                           ;	Write Protection bit
  1796                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1797                           ;	Write Protection bit
  1798                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1799  30000A                     	org	3145738
  1800  30000A  0F                 	db	15
  1801                           
  1802                           ;Config register CONFIG6H @ 0x30000B
  1803                           ;	Configuration Register Write Protection bit
  1804                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1805                           ;	Boot Block Write Protection bit
  1806                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1807                           ;	Data EEPROM Write Protection bit
  1808                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1809  30000B                     	org	3145739
  1810  30000B  E0                 	db	224
  1811                           
  1812                           ;Config register CONFIG7L @ 0x30000C
  1813                           ;	Table Read Protection bit
  1814                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1815                           ;	Table Read Protection bit
  1816                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1817                           ;	Table Read Protection bit
  1818                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1819                           ;	Table Read Protection bit
  1820                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1821  30000C                     	org	3145740
  1822  30000C  0F                 	db	15
  1823                           
  1824                           ;Config register CONFIG7H @ 0x30000D
  1825                           ;	Boot Block Table Read Protection bit
  1826                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1827  30000D                     	org	3145741
  1828  30000D  40                 	db	64
  1829                           tosu	equ	0xFFF
  1830                           tosh	equ	0xFFE
  1831                           tosl	equ	0xFFD
  1832                           stkptr	equ	0xFFC
  1833                           pclatu	equ	0xFFB
  1834                           pclath	equ	0xFFA
  1835                           pcl	equ	0xFF9
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           indf0	equ	0xFEF
  1843                           postinc0	equ	0xFEE
  1844                           postdec0	equ	0xFED
  1845                           preinc0	equ	0xFEC
  1846                           plusw0	equ	0xFEB
  1847                           fsr0h	equ	0xFEA
  1848                           fsr0l	equ	0xFE9
  1849                           wreg	equ	0xFE8
  1850                           indf1	equ	0xFE7
  1851                           postinc1	equ	0xFE6
  1852                           postdec1	equ	0xFE5
  1853                           preinc1	equ	0xFE4
  1854                           plusw1	equ	0xFE3
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           bsr	equ	0xFE0
  1858                           indf2	equ	0xFDF
  1859                           postinc2	equ	0xFDE
  1860                           postdec2	equ	0xFDD
  1861                           preinc2	equ	0xFDC
  1862                           plusw2	equ	0xFDB
  1863                           fsr2h	equ	0xFDA
  1864                           fsr2l	equ	0xFD9
  1865                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _inicio_LCD->_CURSOR_ONOFF
    _inicio_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1172
                                              9 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                         _inicio_LCD
 ---------------------------------------------------------------------------------
 (1) _inicio_LCD                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _inicio_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       C       1       12.8%
BITBIGSFRhhll       2A      0       0      23        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhlh       11      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRhl          7      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      27        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 28 18:10:37 2022

                     l24 0B60                       l42 0BF8                       l51 0BC8  
                     l60 0C60                       l37 0C8C                       l54 0C94  
                     l63 0B94                       l48 0B26                       l57 0AE8  
                     l67 0A4E                       l69 0A88                       u10 0A88  
                     u11 0A84                       u20 0BDC                       u21 0BD8  
                     u30 0BF2                       u31 0BEE            ENVIA_CHAR@aux 0003  
                    l110 0C20                      l120 087E                      l121 08A4  
                    l122 08CA                      l107 0C74                      l123 08F0  
                    l124 0916                      l125 093C                      l117 083A  
                    l126 0962                      l127 0988                      l119 085A  
                    l821 0A22                      l813 0A18                      l901 0BAC  
                    l831 0A3A                      l823 0A2A                      l815 0A1C  
                    l911 0BC2                      l903 0BAE                      l841 0A5C  
                    l833 0A42                      l825 0A2E                      l817 0A1E  
                    l905 0BB0                      l913 0C8E                      l921 0AA2  
                    l851 0C48                      l843 0A66                      l835 0A44  
                    l827 0A30                      l819 0A20                      l907 0BB6  
                    l931 0AD0                      l923 0AB6                      l915 0A8A  
                    l853 0C54                      l845 0A70                      l837 0A50  
                    l829 0A38                      l909 0BBC                      l861 0B66  
                    l933 0AD6                      l925 0ABE                      l917 0A8E  
                    l855 0C56                      l839 0A58                      l871 0B7A  
                    l863 0B6A                      l935 0ADC                      l927 0AC4  
                    l919 0A94                      l857 0C5E                      l849 0A76  
                    l873 0B7C                      l865 0B6E                      l961 0C6E  
                    l881 0C86                      l937 0AE2                      l929 0ACA  
                    l891 0B98                      l875 0B82                      l867 0B76  
                    l859 0B64                      l963 0C70                      l955 0C62  
                    l883 0BCC                      l971 0C02                      l893 0B9A  
                    l877 0B88                      l869 0B78                      l965 0C72  
                    l957 0C6A                      l885 0BDC                      l973 0C12  
                    l895 0B9E                      l879 0B8E                      l959 0C6C  
                    l887 0BE2                      l975 0C16                      l967 0BFA  
                    l897 0BA2                      l889 0BF2                      l977 0C1A  
                    l969 0BFE                      l899 0BAA                      u130 0B3A  
                    u131 0B36                      u140 0B58                      u141 0B54  
                    u150 0B26                      u151 0B22                      u207 0886  
                    u217 0896                      u307 0944                      u227 08AC  
                    u317 0956                      u237 08BE                      u407 0B70  
                    u327 096A                      u247 08D2                      u167 083E  
                    u417 0BA4                      u337 097A                      u257 08E2  
                    u177 084C                      u427 0A24                      u347 0990  
                    u267 08F8                      u187 085E                      u437 0A32  
                    u357 09A2                      u277 090A                      u197 0872  
                    u447 0A3C                      u367 0C08                      u287 091E  
                    u457 0A52                      u377 0A9A                      u297 092E  
                    u467 0A60                      u387 0AA8                      u477 0A6A  
                    u397 0AB8                      u487 0C58              LEER_LCD@aux 0001  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0001  
         ENVIA_CHAR@dato 0002                     l1101 0826                     l1111 0880  
                   l1103 083C                     l1121 08DA                     l1113 088E  
                   l1105 0844                     l1131 093E                     l1123 08F2  
                   l1115 08A6                     l1107 085C                     l1141 099A  
                   l1133 094E                     l1125 0902                     l1117 08B6  
                   l1109 086A                     l1135 0964                     l1127 0918  
                   l1119 08CC                     l1081 0B3A                     l1137 0972  
                   l1129 0926                     l1145 09AA                     l1091 0B12  
                   l1083 0B46                     l1155 09BE                     l1139 098A  
                   l1093 0B14                     l1085 0B58                     l1087 0AEA  
                   l1079 0B2A                     l1095 0814                     l1089 0AF6  
                   l1097 0818                     l1099 081C                     STR_1 0801  
                   _LATD 000F8C                     _main 0814                     btemp 000D  
                   start 000E            ?_CURSOR_ONOFF 0001             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0002         __end_of_LEER_LCD 0A8A         __end_of_INT0_ISR 0C46  
                  ?_main 0001                    i2l137 0C42                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    tablat 000FF5  
                  ttemp5 000E                    ttemp6 0011                    ttemp7 0015  
                  status 000FD8                    wtemp8 000E           ??_CURSOR_ONOFF 0004  
        __initialization 0C76             __end_of_main 0A18          _ESCRIBE_MENSAJE 0AEA  
                 ??_main 000A            __activetblptr 000002                   _ADCON1 000FC1  
                 i2l1071 0C38                   i2l1073 0C40                   i2l1067 0C24  
                 i2l1069 0C26                   _OSCCON 000FD3     __end_of_ENVIA_NIBBLE 0C62  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ??_BORRAR_LCD 0004  
              ?_LEER_LCD 0001               __accesstop 0060  __end_of__initialization 0C78  
              ?_INT0_ISR 0001             ??_LCD_CONFIG 0004            ___rparam_used 000001  
           ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 0B28           __pcstackCOMRAM 0001  
     __end_of_BORRAR_LCD 0C96         ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 0BFA  
     __end_of_LCD_CONFIG 0AEA       __end_of_ENVIA_CHAR 0BCA               ??_LEER_LCD 0001  
       ENVIA_NIBBLE@dato 0001               ??_INT0_ISR 0001                  i2u12_40 0C38  
                i2u12_41 0C34             ??_POS_CURSOR 0005                  __Hparam 0000  
             _inicio_LCD 0BFA                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0004  
      __end_of_configuro 0C76             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0B96  
                __pcinit 0C76       __end_of_POS_CURSOR 0B62                  __ramtop 0800  
                __ptext0 0814                  __ptext1 0BFA                  __ptext2 0A8A  
                __ptext3 0BCA                  __ptext4 0C86                  __ptext5 0C8E  
                __ptext6 0C62                  __ptext7 0B28                  __ptext8 0B62  
                __ptext9 0AEA           __pintcode_body 0C22             _ENVIA_NIBBLE 0C46  
   end_of_initialization 0C78            __Lmediumconst 0000                  int_func 0C22  
              _TRISEbits 000F96              ?_inicio_LCD 0001             _CURSOR_ONOFF 0BCA  
     CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004      start_initialization 0C76  
      ENVIA_LCD_CMD@dato 0002              __pbssCOMRAM 000C      __end_of_CURSOR_HOME 0C8E  
              __pintcode 0008                _configuro 0C62              __smallconst 0800  
               _LEER_LCD 0A18                 _INT0_ISR 0008                 _LATDbits 000F8C  
               _LATEbits 000F8D         ESCRIBE_MENSAJE@i 0009           POS_CURSOR@fila 0005  
             ?_configuro 0001              _CURSOR_HOME 0C86              _INTCON2bits 000FF1  
           ??_inicio_LCD 0005                 __Hrparam 0000                 __Lrparam 0000  
               __ptext10 0B96                 __ptext11 0A18                 __ptext12 0C46  
     __end_of_inicio_LCD 0C22               _BORRAR_LCD 0C8E               _LCD_CONFIG 0A8A  
             _ENVIA_CHAR 0B96                 isa$xinst 000000                 _posicion 000C  
               int$flags 000D            _ENVIA_LCD_CMD 0B62              ??_configuro 0001  
             _INTCONbits 000FF2        ??_ESCRIBE_MENSAJE 0007                 intlevel2 0000  
  ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001              ?_BORRAR_LCD 0001  
          ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0B28              ?_LCD_CONFIG 0001  
     ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0004  
