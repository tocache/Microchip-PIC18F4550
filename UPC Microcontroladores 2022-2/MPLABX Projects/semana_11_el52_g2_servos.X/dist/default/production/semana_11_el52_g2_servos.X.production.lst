

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 27 20:52:14 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATDbits	set	3980
    68  0000                     _LATEbits	set	3981
    69  0000                     _TRISD	set	3989
    70  0000                     _ADCON1	set	4033
    71  0000                     _TRISEbits	set	3990
    72  0000                     _OSCCON	set	4051
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75                           
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     STR_1:
    81  000801  53                 	db	83	;'S'
    82  000802  65                 	db	101	;'e'
    83  000803  6D                 	db	109	;'m'
    84  000804  61                 	db	97	;'a'
    85  000805  6E                 	db	110	;'n'
    86  000806  61                 	db	97	;'a'
    87  000807  20                 	db	32
    88  000808  31                 	db	49	;'1'
    89  000809  31                 	db	49	;'1'
    90  00080A  20                 	db	32
    91  00080B  73                 	db	115	;'s'
    92  00080C  65                 	db	101	;'e'
    93  00080D  72                 	db	114	;'r'
    94  00080E  76                 	db	118	;'v'
    95  00080F  6F                 	db	111	;'o'
    96  000810  73                 	db	115	;'s'
    97  000811  00                 	db	0
    98  000812  00                 	db	0	; dummy byte at the end
    99  0000                     
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  000C8E                     __pcinit:
   104                           	callstack 0
   105  000C8E                     start_initialization:
   106                           	callstack 0
   107  000C8E                     __initialization:
   108                           	callstack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (1 bytes)
   111  000C8E  6A0E               	clrf	__pbssCOMRAM& (0+255),c
   112  000C90                     end_of_initialization:
   113                           	callstack 0
   114  000C90                     __end_of__initialization:
   115                           	callstack 0
   116  000C90  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  000C92  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  000C94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  000C96  6EF8               	movwf	tblptru,c
   120  000C98  0100               	movlb	0
   121  000C9A  EF0A  F004         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  00000E                     __pbssCOMRAM:
   125                           	callstack 0
   126  00000E                     _indicador:
   127                           	callstack 0
   128  00000E                     	ds	1
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133  000001                     ??_INT0_ISR:
   134                           
   135                           ; 1 bytes @ 0x0
   136  000001                     	ds	2
   137  000003                     ENVIA_NIBBLE@dato:
   138                           	callstack 0
   139  000003                     LEER_LCD@aux:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x2
   143  000003                     	ds	1
   144  000004                     ENVIA_CHAR@dato:
   145                           	callstack 0
   146  000004                     ENVIA_LCD_CMD@dato:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x3
   150  000004                     	ds	1
   151  000005                     ENVIA_CHAR@aux:
   152                           	callstack 0
   153  000005                     ENVIA_LCD_CMD@aux:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x4
   157  000005                     	ds	1
   158  000006                     ??_LCD_CONFIG:
   159  000006                     POS_CURSOR@columna:
   160                           	callstack 0
   161  000006                     CURSOR_ONOFF@estado:
   162                           	callstack 0
   163  000006                     ESCRIBE_MENSAJE@cadena:
   164                           	callstack 0
   165                           
   166                           ; 2 bytes @ 0x5
   167  000006                     	ds	1
   168  000007                     ??_inicio_LCD:
   169  000007                     POS_CURSOR@fila:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x6
   173  000007                     	ds	1
   174  000008                     ESCRIBE_MENSAJE@tam:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x7
   178  000008                     	ds	1
   179  000009                     ??_ESCRIBE_MENSAJE:
   180                           
   181                           ; 1 bytes @ 0x8
   182  000009                     	ds	2
   183  00000B                     ESCRIBE_MENSAJE@i:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0xA
   187  00000B                     	ds	1
   188  00000C                     ??_main:
   189                           
   190                           ; 1 bytes @ 0xB
   191  00000C                     	ds	2
   192                           
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 27 in file "maincode2.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0
   214 ;;      Temps:          2       0       0       0       0       0       0       0       0
   215 ;;      Totals:         2       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        2 bytes
   217 ;; Hardware stack levels required when called: 5
   218 ;; This function calls:
   219 ;;		_ESCRIBE_MENSAJE
   220 ;;		_POS_CURSOR
   221 ;;		_configuro
   222 ;;		_inicio_LCD
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           	psect	text0
   229  000814                     __ptext0:
   230                           	callstack 0
   231  000814                     _main:
   232                           	callstack 26
   233  000814                     
   234                           ;maincode2.c: 28:     configuro();
   235  000814  EC3D  F006         	call	_configuro	;wreg free
   236  000818                     
   237                           ;maincode2.c: 29:     inicio_LCD();
   238  000818  EC1B  F006         	call	_inicio_LCD	;wreg free
   239  00081C                     
   240                           ;maincode2.c: 30:     POS_CURSOR(1,0);
   241  00081C  0E00               	movlw	0
   242  00081E  6E06               	movwf	POS_CURSOR@columna^0,c
   243  000820  0E01               	movlw	1
   244  000822  ECB2  F005         	call	_POS_CURSOR
   245  000826                     
   246                           ;maincode2.c: 31:     ESCRIBE_MENSAJE("Semana 11 servos",16);
   247  000826  0E01               	movlw	low STR_1
   248  000828  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   249  00082A  0E08               	movlw	high STR_1
   250  00082C  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   251  00082E  0E10               	movlw	16
   252  000830  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   253  000832  EC75  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   254  000836  EFD5  F004         	goto	l1147
   255  00083A                     l117:
   256                           
   257                           ;maincode2.c: 35:                 LATEbits.LE0 = 1;
   258  00083A  808D               	bsf	141,0,c	;volatile
   259  00083C                     
   260                           ;maincode2.c: 36:                 _delay((unsigned long)((600)*(8000000UL/4000000.0)));
   261  00083C  0EF0               	movlw	240
   262  00083E                     u167:
   263  00083E  D000               	nop2	
   264  000840  2EE8               	decfsz	wreg,f,c
   265  000842  D7FD               	bra	u167
   266  000844                     
   267                           ;maincode2.c: 37:                 LATEbits.LE0 = 0;
   268  000844  908D               	bcf	141,0,c	;volatile
   269                           
   270                           ;maincode2.c: 38:                 _delay((unsigned long)((19400)*(8000000UL/4000000.0)))
      +                          ;
   271  000846  0E33               	movlw	51
   272  000848  6E0C               	movwf	??_main^0,c
   273  00084A  0E62               	movlw	98
   274  00084C                     u177:
   275  00084C  2EE8               	decfsz	wreg,f,c
   276  00084E  D7FE               	bra	u177
   277  000850  2E0C               	decfsz	??_main^0,f,c
   278  000852  D7FC               	bra	u177
   279  000854  D000               	nop2	
   280                           
   281                           ;maincode2.c: 39:                 break;
   282  000856  EFD5  F004         	goto	l1147
   283  00085A                     l119:
   284                           
   285                           ;maincode2.c: 41:                 LATEbits.LE0 = 1;
   286  00085A  808D               	bsf	141,0,c	;volatile
   287  00085C                     
   288                           ;maincode2.c: 42:                 _delay((unsigned long)((800)*(8000000UL/4000000.0)));
   289  00085C  0EE4               	movlw	228
   290  00085E                     u187:
   291  00085E  D000               	nop2	
   292  000860  D000               	nop2	
   293  000862  2EE8               	decfsz	wreg,f,c
   294  000864  D7FC               	bra	u187
   295  000866  D000               	nop2	
   296  000868  D000               	nop2	
   297  00086A                     
   298                           ;maincode2.c: 43:                 LATEbits.LE0 = 0;
   299  00086A  908D               	bcf	141,0,c	;volatile
   300                           
   301                           ;maincode2.c: 44:                 _delay((unsigned long)((19200)*(8000000UL/4000000.0)))
      +                          ;
   302  00086C  0E32               	movlw	50
   303  00086E  6E0C               	movwf	??_main^0,c
   304  000870  0EDE               	movlw	222
   305  000872                     u197:
   306  000872  2EE8               	decfsz	wreg,f,c
   307  000874  D7FE               	bra	u197
   308  000876  2E0C               	decfsz	??_main^0,f,c
   309  000878  D7FC               	bra	u197
   310                           
   311                           ;maincode2.c: 45:                 break;
   312  00087A  EFD5  F004         	goto	l1147
   313  00087E                     l120:
   314                           
   315                           ;maincode2.c: 47:                 LATEbits.LE0 = 1;
   316  00087E  808D               	bsf	141,0,c	;volatile
   317  000880                     
   318                           ;maincode2.c: 48:                 _delay((unsigned long)((1000)*(8000000UL/4000000.0)));
   319  000880  0E03               	movlw	3
   320  000882  6E0C               	movwf	??_main^0,c
   321  000884  0E98               	movlw	152
   322  000886                     u207:
   323  000886  2EE8               	decfsz	wreg,f,c
   324  000888  D7FE               	bra	u207
   325  00088A  2E0C               	decfsz	??_main^0,f,c
   326  00088C  D7FC               	bra	u207
   327  00088E                     
   328                           ;maincode2.c: 49:                 LATEbits.LE0 = 0;
   329  00088E  908D               	bcf	141,0,c	;volatile
   330                           
   331                           ;maincode2.c: 50:                 _delay((unsigned long)((19000)*(8000000UL/4000000.0)))
      +                          ;
   332  000890  0E32               	movlw	50
   333  000892  6E0C               	movwf	??_main^0,c
   334  000894  0E58               	movlw	88
   335  000896                     u217:
   336  000896  2EE8               	decfsz	wreg,f,c
   337  000898  D7FE               	bra	u217
   338  00089A  2E0C               	decfsz	??_main^0,f,c
   339  00089C  D7FC               	bra	u217
   340  00089E  D000               	nop2	
   341                           
   342                           ;maincode2.c: 51:                 break;
   343  0008A0  EFD5  F004         	goto	l1147
   344  0008A4                     l121:
   345                           
   346                           ;maincode2.c: 53:                 LATEbits.LE0 = 1;
   347  0008A4  808D               	bsf	141,0,c	;volatile
   348  0008A6                     
   349                           ;maincode2.c: 54:                 _delay((unsigned long)((1200)*(8000000UL/4000000.0)));
   350  0008A6  0E04               	movlw	4
   351  0008A8  6E0C               	movwf	??_main^0,c
   352  0008AA  0E1C               	movlw	28
   353  0008AC                     u227:
   354  0008AC  2EE8               	decfsz	wreg,f,c
   355  0008AE  D7FE               	bra	u227
   356  0008B0  2E0C               	decfsz	??_main^0,f,c
   357  0008B2  D7FC               	bra	u227
   358  0008B4  D000               	nop2	
   359  0008B6                     
   360                           ;maincode2.c: 55:                 LATEbits.LE0 = 0;
   361  0008B6  908D               	bcf	141,0,c	;volatile
   362                           
   363                           ;maincode2.c: 56:                 _delay((unsigned long)((18800)*(8000000UL/4000000.0)))
      +                          ;
   364  0008B8  0E31               	movlw	49
   365  0008BA  6E0C               	movwf	??_main^0,c
   366  0008BC  0ED4               	movlw	212
   367  0008BE                     u237:
   368  0008BE  2EE8               	decfsz	wreg,f,c
   369  0008C0  D7FE               	bra	u237
   370  0008C2  2E0C               	decfsz	??_main^0,f,c
   371  0008C4  D7FC               	bra	u237
   372                           
   373                           ;maincode2.c: 57:                 break;
   374  0008C6  EFD5  F004         	goto	l1147
   375  0008CA                     l122:
   376                           
   377                           ;maincode2.c: 59:                 LATEbits.LE0 = 1;
   378  0008CA  808D               	bsf	141,0,c	;volatile
   379  0008CC                     
   380                           ;maincode2.c: 60:                 _delay((unsigned long)((1400)*(8000000UL/4000000.0)));
   381  0008CC  0E04               	movlw	4
   382  0008CE  6E0C               	movwf	??_main^0,c
   383  0008D0  0EA2               	movlw	162
   384  0008D2                     u247:
   385  0008D2  2EE8               	decfsz	wreg,f,c
   386  0008D4  D7FE               	bra	u247
   387  0008D6  2E0C               	decfsz	??_main^0,f,c
   388  0008D8  D7FC               	bra	u247
   389  0008DA                     
   390                           ;maincode2.c: 61:                 LATEbits.LE0 = 0;
   391  0008DA  908D               	bcf	141,0,c	;volatile
   392                           
   393                           ;maincode2.c: 62:                 _delay((unsigned long)((18600)*(8000000UL/4000000.0)))
      +                          ;
   394  0008DC  0E31               	movlw	49
   395  0008DE  6E0C               	movwf	??_main^0,c
   396  0008E0  0E4E               	movlw	78
   397  0008E2                     u257:
   398  0008E2  2EE8               	decfsz	wreg,f,c
   399  0008E4  D7FE               	bra	u257
   400  0008E6  2E0C               	decfsz	??_main^0,f,c
   401  0008E8  D7FC               	bra	u257
   402  0008EA  D000               	nop2	
   403                           
   404                           ;maincode2.c: 63:                 break;
   405  0008EC  EFD5  F004         	goto	l1147
   406  0008F0                     l123:
   407                           
   408                           ;maincode2.c: 65:                 LATEbits.LE0 = 1;
   409  0008F0  808D               	bsf	141,0,c	;volatile
   410  0008F2                     
   411                           ;maincode2.c: 66:                 _delay((unsigned long)((1600)*(8000000UL/4000000.0)));
   412  0008F2  0E05               	movlw	5
   413  0008F4  6E0C               	movwf	??_main^0,c
   414  0008F6  0E26               	movlw	38
   415  0008F8                     u267:
   416  0008F8  2EE8               	decfsz	wreg,f,c
   417  0008FA  D7FE               	bra	u267
   418  0008FC  2E0C               	decfsz	??_main^0,f,c
   419  0008FE  D7FC               	bra	u267
   420  000900  D000               	nop2	
   421  000902                     
   422                           ;maincode2.c: 67:                 LATEbits.LE0 = 0;
   423  000902  908D               	bcf	141,0,c	;volatile
   424                           
   425                           ;maincode2.c: 68:                 _delay((unsigned long)((18400)*(8000000UL/4000000.0)))
      +                          ;
   426  000904  0E30               	movlw	48
   427  000906  6E0C               	movwf	??_main^0,c
   428  000908  0ECA               	movlw	202
   429  00090A                     u277:
   430  00090A  2EE8               	decfsz	wreg,f,c
   431  00090C  D7FE               	bra	u277
   432  00090E  2E0C               	decfsz	??_main^0,f,c
   433  000910  D7FC               	bra	u277
   434                           
   435                           ;maincode2.c: 69:                 break;
   436  000912  EFD5  F004         	goto	l1147
   437  000916                     l124:
   438                           
   439                           ;maincode2.c: 71:                 LATEbits.LE0 = 1;
   440  000916  808D               	bsf	141,0,c	;volatile
   441  000918                     
   442                           ;maincode2.c: 72:                 _delay((unsigned long)((1800)*(8000000UL/4000000.0)));
   443  000918  0E05               	movlw	5
   444  00091A  6E0C               	movwf	??_main^0,c
   445  00091C  0EAC               	movlw	172
   446  00091E                     u287:
   447  00091E  2EE8               	decfsz	wreg,f,c
   448  000920  D7FE               	bra	u287
   449  000922  2E0C               	decfsz	??_main^0,f,c
   450  000924  D7FC               	bra	u287
   451  000926                     
   452                           ;maincode2.c: 73:                 LATEbits.LE0 = 0;
   453  000926  908D               	bcf	141,0,c	;volatile
   454                           
   455                           ;maincode2.c: 74:                 _delay((unsigned long)((18200)*(8000000UL/4000000.0)))
      +                          ;
   456  000928  0E30               	movlw	48
   457  00092A  6E0C               	movwf	??_main^0,c
   458  00092C  0E44               	movlw	68
   459  00092E                     u297:
   460  00092E  2EE8               	decfsz	wreg,f,c
   461  000930  D7FE               	bra	u297
   462  000932  2E0C               	decfsz	??_main^0,f,c
   463  000934  D7FC               	bra	u297
   464  000936  D000               	nop2	
   465                           
   466                           ;maincode2.c: 75:                 break;
   467  000938  EFD5  F004         	goto	l1147
   468  00093C                     l125:
   469                           
   470                           ;maincode2.c: 77:                 LATEbits.LE0 = 1;
   471  00093C  808D               	bsf	141,0,c	;volatile
   472  00093E                     
   473                           ;maincode2.c: 78:                 _delay((unsigned long)((2000)*(8000000UL/4000000.0)));
   474  00093E  0E06               	movlw	6
   475  000940  6E0C               	movwf	??_main^0,c
   476  000942  0E30               	movlw	48
   477  000944                     u307:
   478  000944  2EE8               	decfsz	wreg,f,c
   479  000946  D7FE               	bra	u307
   480  000948  2E0C               	decfsz	??_main^0,f,c
   481  00094A  D7FC               	bra	u307
   482  00094C  D000               	nop2	
   483  00094E                     
   484                           ;maincode2.c: 79:                 LATEbits.LE0 = 0;
   485  00094E  908D               	bcf	141,0,c	;volatile
   486                           
   487                           ;maincode2.c: 80:                 _delay((unsigned long)((18000)*(8000000UL/4000000.0)))
      +                          ;
   488  000950  0E2F               	movlw	47
   489  000952  6E0C               	movwf	??_main^0,c
   490  000954  0EC0               	movlw	192
   491  000956                     u317:
   492  000956  2EE8               	decfsz	wreg,f,c
   493  000958  D7FE               	bra	u317
   494  00095A  2E0C               	decfsz	??_main^0,f,c
   495  00095C  D7FC               	bra	u317
   496                           
   497                           ;maincode2.c: 81:                 break;
   498  00095E  EFD5  F004         	goto	l1147
   499  000962                     l126:
   500                           
   501                           ;maincode2.c: 83:                 LATEbits.LE0 = 1;
   502  000962  808D               	bsf	141,0,c	;volatile
   503  000964                     
   504                           ;maincode2.c: 84:                 _delay((unsigned long)((2200)*(8000000UL/4000000.0)));
   505  000964  0E06               	movlw	6
   506  000966  6E0C               	movwf	??_main^0,c
   507  000968  0EB6               	movlw	182
   508  00096A                     u327:
   509  00096A  2EE8               	decfsz	wreg,f,c
   510  00096C  D7FE               	bra	u327
   511  00096E  2E0C               	decfsz	??_main^0,f,c
   512  000970  D7FC               	bra	u327
   513  000972                     
   514                           ;maincode2.c: 85:                 LATEbits.LE0 = 0;
   515  000972  908D               	bcf	141,0,c	;volatile
   516                           
   517                           ;maincode2.c: 86:                 _delay((unsigned long)((17800)*(8000000UL/4000000.0)))
      +                          ;
   518  000974  0E2F               	movlw	47
   519  000976  6E0C               	movwf	??_main^0,c
   520  000978  0E3A               	movlw	58
   521  00097A                     u337:
   522  00097A  2EE8               	decfsz	wreg,f,c
   523  00097C  D7FE               	bra	u337
   524  00097E  2E0C               	decfsz	??_main^0,f,c
   525  000980  D7FC               	bra	u337
   526  000982  D000               	nop2	
   527                           
   528                           ;maincode2.c: 87:                 break;
   529  000984  EFD5  F004         	goto	l1147
   530  000988                     l127:
   531                           
   532                           ;maincode2.c: 89:                 LATEbits.LE0 = 1;
   533  000988  808D               	bsf	141,0,c	;volatile
   534  00098A                     
   535                           ;maincode2.c: 90:                 _delay((unsigned long)((2400)*(8000000UL/4000000.0)));
   536  00098A  0E07               	movlw	7
   537  00098C  6E0C               	movwf	??_main^0,c
   538  00098E  0E3A               	movlw	58
   539  000990                     u347:
   540  000990  2EE8               	decfsz	wreg,f,c
   541  000992  D7FE               	bra	u347
   542  000994  2E0C               	decfsz	??_main^0,f,c
   543  000996  D7FC               	bra	u347
   544  000998  D000               	nop2	
   545  00099A                     
   546                           ;maincode2.c: 91:                 LATEbits.LE0 = 0;
   547  00099A  908D               	bcf	141,0,c	;volatile
   548                           
   549                           ;maincode2.c: 92:                 _delay((unsigned long)((17600)*(8000000UL/4000000.0)))
      +                          ;
   550  00099C  0E2E               	movlw	46
   551  00099E  6E0C               	movwf	??_main^0,c
   552  0009A0  0EB6               	movlw	182
   553  0009A2                     u357:
   554  0009A2  2EE8               	decfsz	wreg,f,c
   555  0009A4  D7FE               	bra	u357
   556  0009A6  2E0C               	decfsz	??_main^0,f,c
   557  0009A8  D7FC               	bra	u357
   558  0009AA                     l1147:
   559  0009AA  500E               	movf	_indicador^0,w,c
   560  0009AC  6E0C               	movwf	??_main^0,c
   561  0009AE  6A0D               	clrf	(??_main+1)^0,c
   562                           
   563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   564                           ; Switch size 1, requested type "simple"
   565                           ; Number of cases is 1, Range of values is 0 to 0
   566                           ; switch strategies available:
   567                           ; Name         Instructions Cycles
   568                           ; simple_byte            4     3 (average)
   569                           ;	Chosen strategy is simple_byte
   570  0009B0  500D               	movf	(??_main+1)^0,w,c
   571  0009B2  0A00               	xorlw	0	; case 0
   572  0009B4  B4D8               	btfsc	status,2,c
   573  0009B6  EFDF  F004         	goto	l1157
   574  0009BA  EFD5  F004         	goto	l1147
   575  0009BE                     l1157:
   576                           
   577                           ; Switch size 1, requested type "simple"
   578                           ; Number of cases is 10, Range of values is 0 to 9
   579                           ; switch strategies available:
   580                           ; Name         Instructions Cycles
   581                           ; simple_byte           31    16 (average)
   582                           ;	Chosen strategy is simple_byte
   583  0009BE  500C               	movf	??_main^0,w,c
   584  0009C0  0A00               	xorlw	0	; case 0
   585  0009C2  B4D8               	btfsc	status,2,c
   586  0009C4  EF1D  F004         	goto	l117
   587  0009C8  0A01               	xorlw	1	; case 1
   588  0009CA  B4D8               	btfsc	status,2,c
   589  0009CC  EF2D  F004         	goto	l119
   590  0009D0  0A03               	xorlw	3	; case 2
   591  0009D2  B4D8               	btfsc	status,2,c
   592  0009D4  EF3F  F004         	goto	l120
   593  0009D8  0A01               	xorlw	1	; case 3
   594  0009DA  B4D8               	btfsc	status,2,c
   595  0009DC  EF52  F004         	goto	l121
   596  0009E0  0A07               	xorlw	7	; case 4
   597  0009E2  B4D8               	btfsc	status,2,c
   598  0009E4  EF65  F004         	goto	l122
   599  0009E8  0A01               	xorlw	1	; case 5
   600  0009EA  B4D8               	btfsc	status,2,c
   601  0009EC  EF78  F004         	goto	l123
   602  0009F0  0A03               	xorlw	3	; case 6
   603  0009F2  B4D8               	btfsc	status,2,c
   604  0009F4  EF8B  F004         	goto	l124
   605  0009F8  0A01               	xorlw	1	; case 7
   606  0009FA  B4D8               	btfsc	status,2,c
   607  0009FC  EF9E  F004         	goto	l125
   608  000A00  0A0F               	xorlw	15	; case 8
   609  000A02  B4D8               	btfsc	status,2,c
   610  000A04  EFB1  F004         	goto	l126
   611  000A08  0A01               	xorlw	1	; case 9
   612  000A0A  B4D8               	btfsc	status,2,c
   613  000A0C  EFC4  F004         	goto	l127
   614  000A10  EFD5  F004         	goto	l1147
   615  000A14  EF07  F000         	goto	start
   616  000A18                     __end_of_main:
   617                           	callstack 0
   618                           
   619 ;; *************** function _inicio_LCD *****************
   620 ;; Defined at:
   621 ;;		line 18 in file "maincode2.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0
   637 ;;      Temps:          1       0       0       0       0       0       0       0       0
   638 ;;      Totals:         1       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        1 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 4
   642 ;; This function calls:
   643 ;;		_BORRAR_LCD
   644 ;;		_CURSOR_HOME
   645 ;;		_CURSOR_ONOFF
   646 ;;		_LCD_CONFIG
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text1
   653  000C36                     __ptext1:
   654                           	callstack 0
   655  000C36                     _inicio_LCD:
   656                           	callstack 26
   657  000C36                     
   658                           ;maincode2.c: 19:     TRISD = 0x00;
   659  000C36  0E00               	movlw	0
   660  000C38  6E95               	movwf	149,c	;volatile
   661  000C3A                     
   662                           ;maincode2.c: 20:     LCD_CONFIG();
   663  000C3A  EC45  F005         	call	_LCD_CONFIG	;wreg free
   664  000C3E                     
   665                           ;maincode2.c: 21:     _delay((unsigned long)((21)*(8000000UL/4000.0)));
   666  000C3E  0E37               	movlw	55
   667  000C40  6E07               	movwf	??_inicio_LCD^0,c
   668  000C42  0E8A               	movlw	138
   669  000C44                     u367:
   670  000C44  2EE8               	decfsz	wreg,f,c
   671  000C46  D7FE               	bra	u367
   672  000C48  2E07               	decfsz	??_inicio_LCD^0,f,c
   673  000C4A  D7FC               	bra	u367
   674  000C4C  D000               	nop2	
   675  000C4E                     
   676                           ;maincode2.c: 22:     BORRAR_LCD();
   677  000C4E  EC53  F006         	call	_BORRAR_LCD	;wreg free
   678  000C52                     
   679                           ;maincode2.c: 23:     CURSOR_HOME();
   680  000C52  EC4F  F006         	call	_CURSOR_HOME	;wreg free
   681  000C56                     
   682                           ;maincode2.c: 24:     CURSOR_ONOFF(1);
   683  000C56  0E01               	movlw	1
   684  000C58  EC03  F006         	call	_CURSOR_ONOFF
   685  000C5C  0012               	return		;funcret
   686  000C5E                     __end_of_inicio_LCD:
   687                           	callstack 0
   688                           
   689 ;; *************** function _LCD_CONFIG *****************
   690 ;; Defined at:
   691 ;;		line 72 in file "LCD.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         0       0       0       0       0       0       0       0       0
   706 ;;      Locals:         0       0       0       0       0       0       0       0       0
   707 ;;      Temps:          1       0       0       0       0       0       0       0       0
   708 ;;      Totals:         1       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        1 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 3
   712 ;; This function calls:
   713 ;;		_ENVIA_LCD_CMD
   714 ;;		_ENVIA_NIBBLE
   715 ;; This function is called by:
   716 ;;		_inicio_LCD
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text2
   721  000A8A                     __ptext2:
   722                           	callstack 0
   723  000A8A                     _LCD_CONFIG:
   724                           	callstack 26
   725  000A8A                     
   726                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   727  000A8A  908C               	bcf	140,0,c	;volatile
   728                           
   729                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   730  000A8C  928C               	bcf	140,1,c	;volatile
   731  000A8E                     
   732                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   733  000A8E  0E30               	movlw	48
   734  000A90  EC2F  F006         	call	_ENVIA_NIBBLE
   735  000A94                     
   736                           ;LCD.c: 77:         _delay(24000);
   737  000A94  0E20               	movlw	32
   738  000A96  6E06               	movwf	??_LCD_CONFIG^0,c
   739  000A98  0E2A               	movlw	42
   740  000A9A                     u377:
   741  000A9A  2EE8               	decfsz	wreg,f,c
   742  000A9C  D7FE               	bra	u377
   743  000A9E  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   744  000AA0  D7FC               	bra	u377
   745  000AA2                     
   746                           ;LCD.c: 78:         _delay(24000);
   747  000AA2  0E20               	movlw	32
   748  000AA4  6E06               	movwf	??_LCD_CONFIG^0,c
   749  000AA6  0E2A               	movlw	42
   750  000AA8                     u387:
   751  000AA8  2EE8               	decfsz	wreg,f,c
   752  000AAA  D7FE               	bra	u387
   753  000AAC  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   754  000AAE  D7FC               	bra	u387
   755                           
   756                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   757  000AB0  0E30               	movlw	48
   758  000AB2  EC2F  F006         	call	_ENVIA_NIBBLE
   759  000AB6                     
   760                           ;LCD.c: 83:  _delay(1200);
   761  000AB6  0EF0               	movlw	240
   762  000AB8                     u397:
   763  000AB8  D000               	nop2	
   764  000ABA  2EE8               	decfsz	wreg,f,c
   765  000ABC  D7FD               	bra	u397
   766  000ABE                     
   767                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   768  000ABE  0E30               	movlw	48
   769  000AC0  EC2F  F006         	call	_ENVIA_NIBBLE
   770  000AC4                     
   771                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   772  000AC4  0E20               	movlw	32
   773  000AC6  EC2F  F006         	call	_ENVIA_NIBBLE
   774  000ACA                     
   775                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   776  000ACA  0E01               	movlw	1
   777  000ACC  ECCF  F005         	call	_ENVIA_LCD_CMD
   778  000AD0                     
   779                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   780  000AD0  0E28               	movlw	40
   781  000AD2  ECCF  F005         	call	_ENVIA_LCD_CMD
   782  000AD6                     
   783                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   784  000AD6  0E0F               	movlw	15
   785  000AD8  ECCF  F005         	call	_ENVIA_LCD_CMD
   786  000ADC                     
   787                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   788  000ADC  0E06               	movlw	6
   789  000ADE  ECCF  F005         	call	_ENVIA_LCD_CMD
   790  000AE2                     
   791                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   792  000AE2  0E01               	movlw	1
   793  000AE4  ECCF  F005         	call	_ENVIA_LCD_CMD
   794  000AE8  0012               	return		;funcret
   795  000AEA                     __end_of_LCD_CONFIG:
   796                           	callstack 0
   797                           
   798 ;; *************** function _CURSOR_ONOFF *****************
   799 ;; Defined at:
   800 ;;		line 35 in file "LCD.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;  estado          1    wreg     unsigned char 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  estado          1    5[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, status,2, status,0, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   814 ;;      Params:         0       0       0       0       0       0       0       0       0
   815 ;;      Locals:         1       0       0       0       0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0
   817 ;;      Totals:         1       0       0       0       0       0       0       0       0
   818 ;;Total ram usage:        1 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 3
   821 ;; This function calls:
   822 ;;		_ENVIA_LCD_CMD
   823 ;; This function is called by:
   824 ;;		_inicio_LCD
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text3
   829  000C06                     __ptext3:
   830                           	callstack 0
   831  000C06                     _CURSOR_ONOFF:
   832                           	callstack 26
   833                           
   834                           ;incstack = 0
   835                           ;CURSOR_ONOFF@estado stored from wreg
   836  000C06  6E06               	movwf	CURSOR_ONOFF@estado^0,c
   837  000C08                     
   838                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   839  000C08  5006               	movf	CURSOR_ONOFF@estado^0,w,c
   840  000C0A  A4D8               	btfss	status,2,c
   841  000C0C  EF0A  F006         	goto	u21
   842  000C10  EF0C  F006         	goto	u20
   843  000C14                     u21:
   844  000C14  EF0F  F006         	goto	l887
   845  000C18                     u20:
   846  000C18  0E0E               	movlw	14
   847  000C1A  ECCF  F005         	call	_ENVIA_LCD_CMD
   848  000C1E                     l887:
   849                           
   850                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   851  000C1E  0406               	decf	CURSOR_ONOFF@estado^0,w,c
   852  000C20  A4D8               	btfss	status,2,c
   853  000C22  EF15  F006         	goto	u31
   854  000C26  EF17  F006         	goto	u30
   855  000C2A                     u31:
   856  000C2A  EF1A  F006         	goto	l42
   857  000C2E                     u30:
   858  000C2E  0E0C               	movlw	12
   859  000C30  ECCF  F005         	call	_ENVIA_LCD_CMD
   860  000C34                     l42:
   861  000C34  0012               	return		;funcret
   862  000C36                     __end_of_CURSOR_ONOFF:
   863                           	callstack 0
   864                           
   865 ;; *************** function _CURSOR_HOME *****************
   866 ;; Defined at:
   867 ;;		line 30 in file "LCD.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         0       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 3
   888 ;; This function calls:
   889 ;;		_ENVIA_LCD_CMD
   890 ;; This function is called by:
   891 ;;		_inicio_LCD
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text4
   896  000C9E                     __ptext4:
   897                           	callstack 0
   898  000C9E                     _CURSOR_HOME:
   899                           	callstack 26
   900  000C9E                     
   901                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   902  000C9E  0E02               	movlw	2
   903  000CA0  ECCF  F005         	call	_ENVIA_LCD_CMD
   904  000CA4  0012               	return		;funcret
   905  000CA6                     __end_of_CURSOR_HOME:
   906                           	callstack 0
   907                           
   908 ;; *************** function _BORRAR_LCD *****************
   909 ;; Defined at:
   910 ;;		line 67 in file "LCD.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used: 1
   930 ;; Hardware stack levels required when called: 3
   931 ;; This function calls:
   932 ;;		_ENVIA_LCD_CMD
   933 ;; This function is called by:
   934 ;;		_inicio_LCD
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text5
   939  000CA6                     __ptext5:
   940                           	callstack 0
   941  000CA6                     _BORRAR_LCD:
   942                           	callstack 26
   943  000CA6                     
   944                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   945  000CA6  0E01               	movlw	1
   946  000CA8  ECCF  F005         	call	_ENVIA_LCD_CMD
   947  000CAC  0012               	return		;funcret
   948  000CAE                     __end_of_BORRAR_LCD:
   949                           	callstack 0
   950                           
   951 ;; *************** function _configuro *****************
   952 ;; Defined at:
   953 ;;		line 8 in file "maincode2.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels used: 1
   973 ;; Hardware stack levels required when called: 1
   974 ;; This function calls:
   975 ;;		Nothing
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text6
   982  000C7A                     __ptext6:
   983                           	callstack 0
   984  000C7A                     _configuro:
   985                           	callstack 29
   986  000C7A                     
   987                           ;maincode2.c: 9:     OSCCON = 0x70;
   988  000C7A  0E70               	movlw	112
   989  000C7C  6ED3               	movwf	211,c	;volatile
   990  000C7E                     
   991                           ;maincode2.c: 10:     TRISEbits.RE0 = 0;
   992  000C7E  9096               	bcf	150,0,c	;volatile
   993                           
   994                           ;maincode2.c: 11:     ADCON1 = 0x0F;
   995  000C80  0E0F               	movlw	15
   996  000C82  6EC1               	movwf	193,c	;volatile
   997  000C84                     
   998                           ;maincode2.c: 12:     INTCONbits.GIE = 1;
   999  000C84  8EF2               	bsf	242,7,c	;volatile
  1000  000C86                     
  1001                           ;maincode2.c: 13:     INTCONbits.INT0IE = 1;
  1002  000C86  88F2               	bsf	242,4,c	;volatile
  1003  000C88                     
  1004                           ;maincode2.c: 14:     INTCON2bits.RBPU = 0;
  1005  000C88  9EF1               	bcf	241,7,c	;volatile
  1006  000C8A                     
  1007                           ;maincode2.c: 15:     INTCON2bits.INTEDG0 = 0;
  1008  000C8A  9CF1               	bcf	241,6,c	;volatile
  1009  000C8C  0012               	return		;funcret
  1010  000C8E                     __end_of_configuro:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _POS_CURSOR *****************
  1014 ;; Defined at:
  1015 ;;		line 6 in file "LCD.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  fila            1    wreg     unsigned char 
  1018 ;;  columna         1    5[COMRAM] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  fila            1    6[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, cstack
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         1       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        2 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; Hardware stack levels required when called: 3
  1037 ;; This function calls:
  1038 ;;		_ENVIA_LCD_CMD
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text7
  1045  000B64                     __ptext7:
  1046                           	callstack 0
  1047  000B64                     _POS_CURSOR:
  1048                           	callstack 27
  1049                           
  1050                           ;incstack = 0
  1051                           ;POS_CURSOR@fila stored from wreg
  1052  000B64  6E07               	movwf	POS_CURSOR@fila^0,c
  1053  000B66                     
  1054                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1055  000B66  0407               	decf	POS_CURSOR@fila^0,w,c
  1056  000B68  A4D8               	btfss	status,2,c
  1057  000B6A  EFB9  F005         	goto	u131
  1058  000B6E  EFBB  F005         	goto	u130
  1059  000B72                     u131:
  1060  000B72  EFC1  F005         	goto	l1085
  1061  000B76                     u130:
  1062  000B76                     
  1063                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1064  000B76  5006               	movf	POS_CURSOR@columna^0,w,c
  1065  000B78  0F80               	addlw	128
  1066  000B7A  ECCF  F005         	call	_ENVIA_LCD_CMD
  1067                           
  1068                           ;LCD.c: 11:  }
  1069  000B7E  EFCE  F005         	goto	l24
  1070  000B82                     l1085:
  1071  000B82  0E02               	movlw	2
  1072  000B84  1807               	xorwf	POS_CURSOR@fila^0,w,c
  1073  000B86  A4D8               	btfss	status,2,c
  1074  000B88  EFC8  F005         	goto	u141
  1075  000B8C  EFCA  F005         	goto	u140
  1076  000B90                     u141:
  1077  000B90  EFCE  F005         	goto	l24
  1078  000B94                     u140:
  1079  000B94                     
  1080                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1081  000B94  5006               	movf	POS_CURSOR@columna^0,w,c
  1082  000B96  0FC0               	addlw	192
  1083  000B98  ECCF  F005         	call	_ENVIA_LCD_CMD
  1084  000B9C                     l24:
  1085  000B9C  0012               	return		;funcret
  1086  000B9E                     __end_of_POS_CURSOR:
  1087                           	callstack 0
  1088                           
  1089 ;; *************** function _ENVIA_LCD_CMD *****************
  1090 ;; Defined at:
  1091 ;;		line 104 in file "LCD.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;  dato            1    wreg     unsigned char 
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  dato            1    3[COMRAM] unsigned char 
  1096 ;;  aux             1    4[COMRAM] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:        2 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 2
  1113 ;; This function calls:
  1114 ;;		_ENVIA_NIBBLE
  1115 ;;		_LEER_LCD
  1116 ;; This function is called by:
  1117 ;;		_POS_CURSOR
  1118 ;;		_CURSOR_HOME
  1119 ;;		_CURSOR_ONOFF
  1120 ;;		_BORRAR_LCD
  1121 ;;		_LCD_CONFIG
  1122 ;;		_BLINK_CURSOR
  1123 ;;		_DISPLAY_ONOFF
  1124 ;;		_GENERACARACTER
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text8
  1129  000B9E                     __ptext8:
  1130                           	callstack 0
  1131  000B9E                     _ENVIA_LCD_CMD:
  1132                           	callstack 26
  1133                           
  1134                           ;incstack = 0
  1135                           ;ENVIA_LCD_CMD@dato stored from wreg
  1136  000B9E  6E04               	movwf	ENVIA_LCD_CMD@dato^0,c
  1137  000BA0                     
  1138                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1139  000BA0  908C               	bcf	140,0,c	;volatile
  1140  000BA2                     
  1141                           ;LCD.c: 108:  LEER_LCD();
  1142  000BA2  EC0C  F005         	call	_LEER_LCD	;wreg free
  1143  000BA6                     
  1144                           ;LCD.c: 109:  TRISD = 0b00000000;
  1145  000BA6  0E00               	movlw	0
  1146  000BA8  6E95               	movwf	149,c	;volatile
  1147  000BAA                     
  1148                           ;LCD.c: 111:         _delay(1200);
  1149  000BAA  0EF0               	movlw	240
  1150  000BAC                     u407:
  1151  000BAC  D000               	nop2	
  1152  000BAE  2EE8               	decfsz	wreg,f,c
  1153  000BB0  D7FD               	bra	u407
  1154  000BB2                     
  1155                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1156  000BB2  928C               	bcf	140,1,c	;volatile
  1157  000BB4                     
  1158                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1159  000BB4  948C               	bcf	140,2,c	;volatile
  1160  000BB6                     
  1161                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1162  000BB6  908C               	bcf	140,0,c	;volatile
  1163  000BB8                     
  1164                           ;LCD.c: 115:  aux = dato & 0xF0;
  1165  000BB8  5004               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1166  000BBA  0BF0               	andlw	240
  1167  000BBC  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1168  000BBE                     
  1169                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1170  000BBE  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1171  000BC0  EC2F  F006         	call	_ENVIA_NIBBLE
  1172  000BC4                     
  1173                           ;LCD.c: 117:  aux = dato<<4;
  1174  000BC4  3804               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1175  000BC6  0BF0               	andlw	240
  1176  000BC8  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1177  000BCA                     
  1178                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1179  000BCA  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1180  000BCC  EC2F  F006         	call	_ENVIA_NIBBLE
  1181  000BD0  0012               	return		;funcret
  1182  000BD2                     __end_of_ENVIA_LCD_CMD:
  1183                           	callstack 0
  1184                           
  1185 ;; *************** function _ESCRIBE_MENSAJE *****************
  1186 ;; Defined at:
  1187 ;;		line 41 in file "LCD.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;  cadena          2    5[COMRAM] PTR const unsigned char 
  1190 ;;		 -> STR_1(17), 
  1191 ;;  tam             1    7[COMRAM] unsigned char 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  i               1   10[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:         3       0       0       0       0       0       0       0       0
  1204 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1205 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1206 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1207 ;;Total ram usage:        6 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 3
  1210 ;; This function calls:
  1211 ;;		_ENVIA_CHAR
  1212 ;; This function is called by:
  1213 ;;		_main
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text9
  1218  000AEA                     __ptext9:
  1219                           	callstack 0
  1220  000AEA                     _ESCRIBE_MENSAJE:
  1221                           	callstack 27
  1222  000AEA                     
  1223                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1224  000AEA  0E00               	movlw	0
  1225  000AEC  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1226                           
  1227                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1228  000AEE  0E00               	movlw	0
  1229  000AF0  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1230  000AF2  EF8A  F005         	goto	l1095
  1231  000AF6                     l1091:
  1232                           
  1233                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1234  000AF6  500B               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1235  000AF8  2406               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1236  000AFA  6E09               	movwf	??_ESCRIBE_MENSAJE^0,c
  1237  000AFC  0E00               	movlw	0
  1238  000AFE  2007               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1239  000B00  6E0A               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1240  000B02  C009  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1241  000B06  C00A  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1242  000B0A                     	if	0	;tblptru may be non-zero
  1243  000B0A                     	endif
  1244  000B0A                     	if	0	;tblptru may be non-zero
  1245  000B0A                     	endif
  1246  000B0A  0008               	tblrd		*
  1247  000B0C  50F5               	movf	tablat,w,c
  1248  000B0E  ECE9  F005         	call	_ENVIA_CHAR
  1249  000B12                     
  1250                           ;LCD.c: 47:  }
  1251  000B12  2A0B               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1252  000B14                     l1095:
  1253  000B14  5008               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1254  000B16  5C0B               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1255  000B18  A0D8               	btfss	status,0,c
  1256  000B1A  EF91  F005         	goto	u151
  1257  000B1E  EF93  F005         	goto	u150
  1258  000B22                     u151:
  1259  000B22  EF7B  F005         	goto	l1091
  1260  000B26                     u150:
  1261  000B26  0012               	return		;funcret
  1262  000B28                     __end_of_ESCRIBE_MENSAJE:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _ENVIA_CHAR *****************
  1266 ;; Defined at:
  1267 ;;		line 50 in file "LCD.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  dato            1    wreg     unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  dato            1    3[COMRAM] unsigned char 
  1272 ;;  aux             1    4[COMRAM] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0
  1283 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1285 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1286 ;;Total ram usage:        2 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 2
  1289 ;; This function calls:
  1290 ;;		_ENVIA_NIBBLE
  1291 ;;		_LEER_LCD
  1292 ;; This function is called by:
  1293 ;;		_ESCRIBE_MENSAJE
  1294 ;;		_GENERACARACTER
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text10
  1299  000BD2                     __ptext10:
  1300                           	callstack 0
  1301  000BD2                     _ENVIA_CHAR:
  1302                           	callstack 27
  1303                           
  1304                           ;incstack = 0
  1305                           ;ENVIA_CHAR@dato stored from wreg
  1306  000BD2  6E04               	movwf	ENVIA_CHAR@dato^0,c
  1307  000BD4                     
  1308                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1309  000BD4  808C               	bsf	140,0,c	;volatile
  1310  000BD6                     
  1311                           ;LCD.c: 54:  LEER_LCD();
  1312  000BD6  EC0C  F005         	call	_LEER_LCD	;wreg free
  1313  000BDA                     
  1314                           ;LCD.c: 55:  TRISD = 0x00;
  1315  000BDA  0E00               	movlw	0
  1316  000BDC  6E95               	movwf	149,c	;volatile
  1317  000BDE                     
  1318                           ;LCD.c: 56:         _delay(1200);
  1319  000BDE  0EF0               	movlw	240
  1320  000BE0                     u417:
  1321  000BE0  D000               	nop2	
  1322  000BE2  2EE8               	decfsz	wreg,f,c
  1323  000BE4  D7FD               	bra	u417
  1324  000BE6                     
  1325                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1326  000BE6  928C               	bcf	140,1,c	;volatile
  1327  000BE8                     
  1328                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1329  000BE8  948C               	bcf	140,2,c	;volatile
  1330  000BEA                     
  1331                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1332  000BEA  808C               	bsf	140,0,c	;volatile
  1333  000BEC                     
  1334                           ;LCD.c: 61:  aux = dato & 0xF0;
  1335  000BEC  5004               	movf	ENVIA_CHAR@dato^0,w,c
  1336  000BEE  0BF0               	andlw	240
  1337  000BF0  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1338  000BF2                     
  1339                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1340  000BF2  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1341  000BF4  EC2F  F006         	call	_ENVIA_NIBBLE
  1342  000BF8                     
  1343                           ;LCD.c: 63:  aux = dato << 4;
  1344  000BF8  3804               	swapf	ENVIA_CHAR@dato^0,w,c
  1345  000BFA  0BF0               	andlw	240
  1346  000BFC  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1347  000BFE                     
  1348                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1349  000BFE  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1350  000C00  EC2F  F006         	call	_ENVIA_NIBBLE
  1351  000C04  0012               	return		;funcret
  1352  000C06                     __end_of_ENVIA_CHAR:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _LEER_LCD *****************
  1356 ;; Defined at:
  1357 ;;		line 121 in file "LCD.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  aux             1    2[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0
  1372 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1374 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_ENVIA_CHAR
  1382 ;;		_ENVIA_LCD_CMD
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text11
  1387  000A18                     __ptext11:
  1388                           	callstack 0
  1389  000A18                     _LEER_LCD:
  1390                           	callstack 26
  1391  000A18                     
  1392                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1393  000A18  0EF8               	movlw	248
  1394  000A1A  6E95               	movwf	149,c	;volatile
  1395  000A1C                     
  1396                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1397  000A1C  908C               	bcf	140,0,c	;volatile
  1398  000A1E                     
  1399                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1400  000A1E  828C               	bsf	140,1,c	;volatile
  1401  000A20                     
  1402                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1403  000A20  848C               	bsf	140,2,c	;volatile
  1404  000A22                     
  1405                           ;LCD.c: 128:         _delay(1200);
  1406  000A22  0EF0               	movlw	240
  1407  000A24                     u427:
  1408  000A24  D000               	nop2	
  1409  000A26  2EE8               	decfsz	wreg,f,c
  1410  000A28  D7FD               	bra	u427
  1411  000A2A                     
  1412                           ;LCD.c: 130:  aux = PORTD;
  1413  000A2A  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1414  000A2E                     
  1415                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1416  000A2E  948C               	bcf	140,2,c	;volatile
  1417  000A30                     
  1418                           ;LCD.c: 132:         _delay(1200);
  1419  000A30  0EF0               	movlw	240
  1420  000A32                     u437:
  1421  000A32  D000               	nop2	
  1422  000A34  2EE8               	decfsz	wreg,f,c
  1423  000A36  D7FD               	bra	u437
  1424  000A38                     
  1425                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1426  000A38  848C               	bsf	140,2,c	;volatile
  1427  000A3A                     
  1428                           ;LCD.c: 135:         _delay(1200);
  1429  000A3A  0EF0               	movlw	240
  1430  000A3C                     u447:
  1431  000A3C  D000               	nop2	
  1432  000A3E  2EE8               	decfsz	wreg,f,c
  1433  000A40  D7FD               	bra	u447
  1434  000A42                     
  1435                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1436  000A42  948C               	bcf	140,2,c	;volatile
  1437  000A44                     l835:
  1438                           
  1439                           ;LCD.c: 138:  aux = aux & 0x80;
  1440  000A44  5003               	movf	LEER_LCD@aux^0,w,c
  1441  000A46  0B80               	andlw	128
  1442  000A48  6E03               	movwf	LEER_LCD@aux^0,c
  1443                           
  1444                           ;LCD.c: 139:  while(aux == 0x80)
  1445  000A4A  EF3B  F005         	goto	l849
  1446  000A4E                     l67:
  1447                           
  1448                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1449  000A4E  848C               	bsf	140,2,c	;volatile
  1450  000A50                     
  1451                           ;LCD.c: 142:             _delay(1200);
  1452  000A50  0EF0               	movlw	240
  1453  000A52                     u457:
  1454  000A52  D000               	nop2	
  1455  000A54  2EE8               	decfsz	wreg,f,c
  1456  000A56  D7FD               	bra	u457
  1457  000A58                     
  1458                           ;LCD.c: 143:             aux = PORTD;
  1459  000A58  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1460  000A5C                     
  1461                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1462  000A5C  948C               	bcf	140,2,c	;volatile
  1463                           
  1464                           ;LCD.c: 145:             _delay(1200);
  1465  000A5E  0EF0               	movlw	240
  1466  000A60                     u467:
  1467  000A60  D000               	nop2	
  1468  000A62  2EE8               	decfsz	wreg,f,c
  1469  000A64  D7FD               	bra	u467
  1470  000A66                     
  1471                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1472  000A66  848C               	bsf	140,2,c	;volatile
  1473                           
  1474                           ;LCD.c: 147:             _delay(1200);
  1475  000A68  0EF0               	movlw	240
  1476  000A6A                     u477:
  1477  000A6A  D000               	nop2	
  1478  000A6C  2EE8               	decfsz	wreg,f,c
  1479  000A6E  D7FD               	bra	u477
  1480  000A70                     
  1481                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1482  000A70  948C               	bcf	140,2,c	;volatile
  1483  000A72  EF22  F005         	goto	l835
  1484  000A76                     l849:
  1485                           
  1486                           ;LCD.c: 139:  while(aux == 0x80)
  1487  000A76  0E80               	movlw	128
  1488  000A78  1803               	xorwf	LEER_LCD@aux^0,w,c
  1489  000A7A  B4D8               	btfsc	status,2,c
  1490  000A7C  EF42  F005         	goto	u11
  1491  000A80  EF44  F005         	goto	u10
  1492  000A84                     u11:
  1493  000A84  EF27  F005         	goto	l67
  1494  000A88                     u10:
  1495  000A88  0012               	return		;funcret
  1496  000A8A                     __end_of_LEER_LCD:
  1497                           	callstack 0
  1498                           
  1499 ;; *************** function _ENVIA_NIBBLE *****************
  1500 ;; Defined at:
  1501 ;;		line 93 in file "LCD.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;  dato            1    wreg     unsigned char 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  dato            1    2[COMRAM] unsigned char 
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1515 ;;      Params:         0       0       0       0       0       0       0       0       0
  1516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1518 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1519 ;;Total ram usage:        1 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 1
  1522 ;; This function calls:
  1523 ;;		Nothing
  1524 ;; This function is called by:
  1525 ;;		_ENVIA_CHAR
  1526 ;;		_LCD_CONFIG
  1527 ;;		_ENVIA_LCD_CMD
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text12
  1532  000C5E                     __ptext12:
  1533                           	callstack 0
  1534  000C5E                     _ENVIA_NIBBLE:
  1535                           	callstack 27
  1536                           
  1537                           ;incstack = 0
  1538                           ;ENVIA_NIBBLE@dato stored from wreg
  1539  000C5E  6E03               	movwf	ENVIA_NIBBLE@dato^0,c
  1540  000C60                     
  1541                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1542  000C60  0E0F               	movlw	15
  1543  000C62  168C               	andwf	140,f,c	;volatile
  1544                           
  1545                           ;LCD.c: 96:  dato &= 0xF0;
  1546  000C64  0EF0               	movlw	240
  1547  000C66  1603               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1548                           
  1549                           ;LCD.c: 97:  LATD|= dato;
  1550  000C68  5003               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1551  000C6A  128C               	iorwf	140,f,c	;volatile
  1552  000C6C                     
  1553                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1554  000C6C  848C               	bsf	140,2,c	;volatile
  1555  000C6E                     
  1556                           ;LCD.c: 100:         _delay(1200);
  1557  000C6E  0EF0               	movlw	240
  1558  000C70                     u487:
  1559  000C70  D000               	nop2	
  1560  000C72  2EE8               	decfsz	wreg,f,c
  1561  000C74  D7FD               	bra	u487
  1562  000C76                     
  1563                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1564  000C76  948C               	bcf	140,2,c	;volatile
  1565  000C78  0012               	return		;funcret
  1566  000C7A                     __end_of_ENVIA_NIBBLE:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _INT0_ISR *****************
  1570 ;; Defined at:
  1571 ;;		line 98 in file "maincode2.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1587 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1588 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used: 1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		Interrupt level 2
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	intcode
  1599  000008                     __pintcode:
  1600                           	callstack 0
  1601  000008                     _INT0_ISR:
  1602                           	callstack 26
  1603                           
  1604                           ;incstack = 0
  1605  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1606  00000A  ED94  F005         	call	int_func,f	;refresh shadow registers
  1607                           
  1608                           	psect	intcode_body
  1609  000B28                     __pintcode_body:
  1610                           	callstack 26
  1611  000B28                     int_func:
  1612                           	callstack 26
  1613  000B28  0006               	pop		; remove dummy address from shadow register refresh
  1614  000B2A                     
  1615                           ;maincode2.c: 99:     INTCONbits.INT0IF = 0;
  1616  000B2A  92F2               	bcf	242,1,c	;volatile
  1617  000B2C                     
  1618                           ;maincode2.c: 100:     if(indicador == 9){
  1619  000B2C  0E09               	movlw	9
  1620  000B2E  180E               	xorwf	_indicador^0,w,c
  1621  000B30  A4D8               	btfss	status,2,c
  1622  000B32  EF9D  F005         	goto	i2u12_41
  1623  000B36  EF9F  F005         	goto	i2u12_40
  1624  000B3A                     i2u12_41:
  1625  000B3A  EFA3  F005         	goto	i2l1073
  1626  000B3E                     i2u12_40:
  1627  000B3E                     
  1628                           ;maincode2.c: 101:         indicador = 0;
  1629  000B3E  0E00               	movlw	0
  1630  000B40  6E0E               	movwf	_indicador^0,c
  1631                           
  1632                           ;maincode2.c: 102:     }
  1633  000B42  EFA4  F005         	goto	i2l1075
  1634  000B46                     i2l1073:
  1635                           
  1636                           ;maincode2.c: 104:         indicador++;
  1637  000B46  2A0E               	incf	_indicador^0,f,c
  1638  000B48                     i2l1075:
  1639                           
  1640                           ;maincode2.c: 106:     _delay((unsigned long)((100)*(8000000UL/4000.0)));
  1641  000B48  0E02               	movlw	2
  1642  000B4A  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1643  000B4C  0E04               	movlw	4
  1644  000B4E  6E01               	movwf	??_INT0_ISR^0,c
  1645  000B50  0EBA               	movlw	186
  1646  000B52                     i2u49_47:
  1647  000B52  2EE8               	decfsz	wreg,f,c
  1648  000B54  D7FE               	bra	i2u49_47
  1649  000B56  2E01               	decfsz	??_INT0_ISR^0,f,c
  1650  000B58  D7FC               	bra	i2u49_47
  1651  000B5A  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1652  000B5C  D7FA               	bra	i2u49_47
  1653  000B5E  D000               	nop2	
  1654  000B60  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1655  000B62  0011               	retfie		f
  1656  000B64                     __end_of_INT0_ISR:
  1657                           	callstack 0
  1658                           
  1659                           	psect	rparam
  1660  0000                     
  1661                           	psect	temp
  1662  00000F                     btemp:
  1663                           	callstack 0
  1664  00000F                     	ds	1
  1665  0000                     int$flags	set	btemp
  1666  0000                     wtemp8	set	btemp+1
  1667  0000                     ttemp5	set	btemp+1
  1668  0000                     ttemp6	set	btemp+4
  1669  0000                     ttemp7	set	btemp+8
  1670                           
  1671                           	psect	idloc
  1672                           
  1673                           ;Config register IDLOC0 @ 0x200000
  1674                           ;	unspecified, using default values
  1675  200000                     	org	2097152
  1676  200000  FF                 	db	255
  1677                           
  1678                           ;Config register IDLOC1 @ 0x200001
  1679                           ;	unspecified, using default values
  1680  200001                     	org	2097153
  1681  200001  FF                 	db	255
  1682                           
  1683                           ;Config register IDLOC2 @ 0x200002
  1684                           ;	unspecified, using default values
  1685  200002                     	org	2097154
  1686  200002  FF                 	db	255
  1687                           
  1688                           ;Config register IDLOC3 @ 0x200003
  1689                           ;	unspecified, using default values
  1690  200003                     	org	2097155
  1691  200003  FF                 	db	255
  1692                           
  1693                           ;Config register IDLOC4 @ 0x200004
  1694                           ;	unspecified, using default values
  1695  200004                     	org	2097156
  1696  200004  FF                 	db	255
  1697                           
  1698                           ;Config register IDLOC5 @ 0x200005
  1699                           ;	unspecified, using default values
  1700  200005                     	org	2097157
  1701  200005  FF                 	db	255
  1702                           
  1703                           ;Config register IDLOC6 @ 0x200006
  1704                           ;	unspecified, using default values
  1705  200006                     	org	2097158
  1706  200006  FF                 	db	255
  1707                           
  1708                           ;Config register IDLOC7 @ 0x200007
  1709                           ;	unspecified, using default values
  1710  200007                     	org	2097159
  1711  200007  FF                 	db	255
  1712                           
  1713                           	psect	config
  1714                           
  1715                           ;Config register CONFIG1L @ 0x300000
  1716                           ;	PLL Prescaler Selection bits
  1717                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1718                           ;	System Clock Postscaler Selection bits
  1719                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1720                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1721                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1722  300000                     	org	3145728
  1723  300000  00                 	db	0
  1724                           
  1725                           ;Config register CONFIG1H @ 0x300001
  1726                           ;	Oscillator Selection bits
  1727                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1728                           ;	Fail-Safe Clock Monitor Enable bit
  1729                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1730                           ;	Internal/External Oscillator Switchover bit
  1731                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1732  300001                     	org	3145729
  1733  300001  08                 	db	8
  1734                           
  1735                           ;Config register CONFIG2L @ 0x300002
  1736                           ;	Power-up Timer Enable bit
  1737                           ;	PWRT = ON, PWRT enabled
  1738                           ;	Brown-out Reset Enable bits
  1739                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1740                           ;	Brown-out Reset Voltage bits
  1741                           ;	BORV = 3, Minimum setting 2.05V
  1742                           ;	USB Voltage Regulator Enable bit
  1743                           ;	VREGEN = OFF, USB voltage regulator disabled
  1744  300002                     	org	3145730
  1745  300002  18                 	db	24
  1746                           
  1747                           ;Config register CONFIG2H @ 0x300003
  1748                           ;	Watchdog Timer Enable bit
  1749                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1750                           ;	Watchdog Timer Postscale Select bits
  1751                           ;	WDTPS = 32768, 1:32768
  1752  300003                     	org	3145731
  1753  300003  1E                 	db	30
  1754                           
  1755                           ; Padding undefined space
  1756  300004                     	org	3145732
  1757  300004  FF                 	db	255
  1758                           
  1759                           ;Config register CONFIG3H @ 0x300005
  1760                           ;	CCP2 MUX bit
  1761                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1762                           ;	PORTB A/D Enable bit
  1763                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1764                           ;	Low-Power Timer 1 Oscillator Enable bit
  1765                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1766                           ;	MCLR Pin Enable bit
  1767                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1768  300005                     	org	3145733
  1769  300005  81                 	db	129
  1770                           
  1771                           ;Config register CONFIG4L @ 0x300006
  1772                           ;	Stack Full/Underflow Reset Enable bit
  1773                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1774                           ;	Single-Supply ICSP Enable bit
  1775                           ;	LVP = OFF, Single-Supply ICSP disabled
  1776                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1777                           ;	ICPRT = OFF, ICPORT disabled
  1778                           ;	Extended Instruction Set Enable bit
  1779                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1780                           ;	Background Debugger Enable bit
  1781                           ;	DEBUG = 0x1, unprogrammed default
  1782  300006                     	org	3145734
  1783  300006  81                 	db	129
  1784                           
  1785                           ; Padding undefined space
  1786  300007                     	org	3145735
  1787  300007  FF                 	db	255
  1788                           
  1789                           ;Config register CONFIG5L @ 0x300008
  1790                           ;	Code Protection bit
  1791                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1792                           ;	Code Protection bit
  1793                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1794                           ;	Code Protection bit
  1795                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1796                           ;	Code Protection bit
  1797                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1798  300008                     	org	3145736
  1799  300008  0F                 	db	15
  1800                           
  1801                           ;Config register CONFIG5H @ 0x300009
  1802                           ;	Boot Block Code Protection bit
  1803                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1804                           ;	Data EEPROM Code Protection bit
  1805                           ;	CPD = OFF, Data EEPROM is not code-protected
  1806  300009                     	org	3145737
  1807  300009  C0                 	db	192
  1808                           
  1809                           ;Config register CONFIG6L @ 0x30000A
  1810                           ;	Write Protection bit
  1811                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1812                           ;	Write Protection bit
  1813                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1814                           ;	Write Protection bit
  1815                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1816                           ;	Write Protection bit
  1817                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1818  30000A                     	org	3145738
  1819  30000A  0F                 	db	15
  1820                           
  1821                           ;Config register CONFIG6H @ 0x30000B
  1822                           ;	Configuration Register Write Protection bit
  1823                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1824                           ;	Boot Block Write Protection bit
  1825                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1826                           ;	Data EEPROM Write Protection bit
  1827                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1828  30000B                     	org	3145739
  1829  30000B  E0                 	db	224
  1830                           
  1831                           ;Config register CONFIG7L @ 0x30000C
  1832                           ;	Table Read Protection bit
  1833                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1834                           ;	Table Read Protection bit
  1835                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1836                           ;	Table Read Protection bit
  1837                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1838                           ;	Table Read Protection bit
  1839                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1840  30000C                     	org	3145740
  1841  30000C  0F                 	db	15
  1842                           
  1843                           ;Config register CONFIG7H @ 0x30000D
  1844                           ;	Boot Block Table Read Protection bit
  1845                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1846  30000D                     	org	3145741
  1847  30000D  40                 	db	64
  1848                           tosu	equ	0xFFF
  1849                           tosh	equ	0xFFE
  1850                           tosl	equ	0xFFD
  1851                           stkptr	equ	0xFFC
  1852                           pclatu	equ	0xFFB
  1853                           pclath	equ	0xFFA
  1854                           pcl	equ	0xFF9
  1855                           tblptru	equ	0xFF8
  1856                           tblptrh	equ	0xFF7
  1857                           tblptrl	equ	0xFF6
  1858                           tablat	equ	0xFF5
  1859                           prodh	equ	0xFF4
  1860                           prodl	equ	0xFF3
  1861                           indf0	equ	0xFEF
  1862                           postinc0	equ	0xFEE
  1863                           postdec0	equ	0xFED
  1864                           preinc0	equ	0xFEC
  1865                           plusw0	equ	0xFEB
  1866                           fsr0h	equ	0xFEA
  1867                           fsr0l	equ	0xFE9
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           postinc1	equ	0xFE6
  1871                           postdec1	equ	0xFE5
  1872                           preinc1	equ	0xFE4
  1873                           plusw1	equ	0xFE3
  1874                           fsr1h	equ	0xFE2
  1875                           fsr1l	equ	0xFE1
  1876                           bsr	equ	0xFE0
  1877                           indf2	equ	0xFDF
  1878                           postinc2	equ	0xFDE
  1879                           postdec2	equ	0xFDD
  1880                           preinc2	equ	0xFDC
  1881                           plusw2	equ	0xFDB
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _inicio_LCD->_CURSOR_ONOFF
    _inicio_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1172
                                             11 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                         _inicio_LCD
 ---------------------------------------------------------------------------------
 (1) _inicio_LCD                                           1     1      0     525
                                              6 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              5 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _inicio_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D       E       1       14.9%
BITBIGSFRhhll       2A      0       0      23        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhlh       11      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRhl          7      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      27        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 27 20:52:14 2022

                     l24 0B9C                       l42 0C34                       l51 0C04  
                     l60 0C78                       l37 0CA4                       l54 0CAC  
                     l63 0BD0                       l48 0B26                       l57 0AE8  
                     l67 0A4E                       l69 0A88                       u10 0A88  
                     u11 0A84                       u20 0C18                       u21 0C14  
                     u30 0C2E                       u31 0C2A            ENVIA_CHAR@aux 0005  
                    l110 0C5C                      l120 087E                      l121 08A4  
                    l122 08CA                      l107 0C8C                      l123 08F0  
                    l124 0916                      l125 093C                      l117 083A  
                    l126 0962                      l127 0988                      l119 085A  
                    l821 0A22                      l813 0A18                      l901 0BE8  
                    l831 0A3A                      l823 0A2A                      l815 0A1C  
                    l911 0BFE                      l903 0BEA                      l841 0A5C  
                    l833 0A42                      l825 0A2E                      l817 0A1E  
                    l905 0BEC                      l913 0CA6                      l921 0AA2  
                    l851 0C60                      l843 0A66                      l835 0A44  
                    l827 0A30                      l819 0A20                      l907 0BF2  
                    l931 0AD0                      l923 0AB6                      l915 0A8A  
                    l853 0C6C                      l845 0A70                      l837 0A50  
                    l829 0A38                      l909 0BF8                      l861 0BA2  
                    l933 0AD6                      l925 0ABE                      l917 0A8E  
                    l855 0C6E                      l839 0A58                      l871 0BB6  
                    l863 0BA6                      l935 0ADC                      l927 0AC4  
                    l919 0A94                      l857 0C76                      l849 0A76  
                    l873 0BB8                      l865 0BAA                      l961 0C86  
                    l881 0C9E                      l937 0AE2                      l929 0ACA  
                    l891 0BD4                      l875 0BBE                      l867 0BB2  
                    l859 0BA0                      l963 0C88                      l955 0C7A  
                    l883 0C08                      l971 0C3E                      l893 0BD6  
                    l877 0BC4                      l869 0BB4                      l965 0C8A  
                    l957 0C7E                      l885 0C18                      l973 0C4E  
                    l895 0BDA                      l879 0BCA                      l959 0C84  
                    l887 0C1E                      l975 0C52                      l967 0C36  
                    l897 0BDE                      l889 0C2E                      l977 0C56  
                    l969 0C3A                      l899 0BE6                      u130 0B76  
                    u131 0B72                      u140 0B94                      u141 0B90  
                    u150 0B26                      u151 0B22                      u207 0886  
                    u217 0896                      u307 0944                      u227 08AC  
                    u317 0956                      u237 08BE                      u407 0BAC  
                    u327 096A                      u247 08D2                      u167 083E  
                    u417 0BE0                      u337 097A                      u257 08E2  
                    u177 084C                      u427 0A24                      u347 0990  
                    u267 08F8                      u187 085E                      u437 0A32  
                    u357 09A2                      u277 090A                      u197 0872  
                    u447 0A3C                      u367 0C44                      u287 091E  
                    u457 0A52                      u377 0A9A                      u297 092E  
                    u467 0A60                      u387 0AA8                      u477 0A6A  
                    u397 0AB8                      u487 0C70              LEER_LCD@aux 0003  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0003  
         ENVIA_CHAR@dato 0004                     l1101 081C                     l1111 086A  
                   l1103 0826                     l1121 08CC                     l1113 0880  
                   l1105 083C                     l1131 0926                     l1123 08DA  
                   l1115 088E                     l1107 0844                     l1141 098A  
                   l1133 093E                     l1125 08F2                     l1117 08A6  
                   l1109 085C                     l1143 099A                     l1135 094E  
                   l1127 0902                     l1119 08B6                     l1081 0B66  
                   l1137 0964                     l1129 0918                     l1091 0AF6  
                   l1083 0B76                     l1139 0972                     l1147 09AA  
                   l1093 0B12                     l1085 0B82                     l1157 09BE  
                   l1095 0B14                     l1087 0B94                     l1089 0AEA  
                   l1097 0814                     l1099 0818                     STR_1 0801  
                   _LATD 000F8C                     _main 0814                     btemp 000F  
                   start 000E            ?_CURSOR_ONOFF 0001             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0004         __end_of_LEER_LCD 0A8A         __end_of_INT0_ISR 0B64  
                  ?_main 0001                    i2l137 0B60                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0006                    tablat 000FF5  
                  ttemp5 0010                    ttemp6 0013                    ttemp7 0017  
                  status 000FD8                    wtemp8 0010           ??_CURSOR_ONOFF 0006  
        __initialization 0C8E             __end_of_main 0A18          _ESCRIBE_MENSAJE 0AEA  
                 ??_main 000C            __activetblptr 000002                   _ADCON1 000FC1  
                 i2l1071 0B3E                   i2l1073 0B46                   i2l1075 0B48  
                 i2l1067 0B2A                   i2l1069 0B2C                   _OSCCON 000FD3  
   __end_of_ENVIA_NIBBLE 0C7A                   isa$std 000001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0006                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0C90                ?_INT0_ISR 0001             ??_LCD_CONFIG 0006  
          ___rparam_used 000001             ??_ENVIA_CHAR 0004  __end_of_ESCRIBE_MENSAJE 0B28  
         __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0CAE         ENVIA_LCD_CMD@aux 0005  
   __end_of_CURSOR_ONOFF 0C36       __end_of_LCD_CONFIG 0AEA       __end_of_ENVIA_CHAR 0C06  
             ??_LEER_LCD 0003         ENVIA_NIBBLE@dato 0003               ??_INT0_ISR 0001  
                i2u12_40 0B3E                  i2u12_41 0B3A                  i2u49_47 0B52  
           ??_POS_CURSOR 0007                  __Hparam 0000               _inicio_LCD 0C36  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0006        __end_of_configuro 0C8E  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0BD2                  __pcinit 0C8E  
     __end_of_POS_CURSOR 0B9E                  __ramtop 0800                  __ptext0 0814  
                __ptext1 0C36                  __ptext2 0A8A                  __ptext3 0C06  
                __ptext4 0C9E                  __ptext5 0CA6                  __ptext6 0C7A  
                __ptext7 0B64                  __ptext8 0B9E                  __ptext9 0AEA  
         __pintcode_body 0B28             _ENVIA_NIBBLE 0C5E     end_of_initialization 0C90  
          __Lmediumconst 0000                  int_func 0B28                _TRISEbits 000F96  
            ?_inicio_LCD 0001             _CURSOR_ONOFF 0C06       CURSOR_ONOFF@estado 0006  
          ??_CURSOR_HOME 0006      start_initialization 0C8E        ENVIA_LCD_CMD@dato 0004  
            __pbssCOMRAM 000E      __end_of_CURSOR_HOME 0CA6                __pintcode 0008  
              _configuro 0C7A              __smallconst 0800                _indicador 000E  
               _LEER_LCD 0A18                 _INT0_ISR 0008                 _LATDbits 000F8C  
               _LATEbits 000F8D         ESCRIBE_MENSAJE@i 000B           POS_CURSOR@fila 0007  
             ?_configuro 0001              _CURSOR_HOME 0C9E              _INTCON2bits 000FF1  
           ??_inicio_LCD 0007                 __Hrparam 0000                 __Lrparam 0000  
               __ptext10 0BD2                 __ptext11 0A18                 __ptext12 0C5E  
     __end_of_inicio_LCD 0C5E               _BORRAR_LCD 0CA6               _LCD_CONFIG 0A8A  
             _ENVIA_CHAR 0BD2                 isa$xinst 000000                 int$flags 000F  
          _ENVIA_LCD_CMD 0B9E              ??_configuro 0003               _INTCONbits 000FF2  
      ??_ESCRIBE_MENSAJE 0009                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0006  
         ?_ENVIA_LCD_CMD 0001              ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001  
             _POS_CURSOR 0B64              ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0008  
            ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0006  
