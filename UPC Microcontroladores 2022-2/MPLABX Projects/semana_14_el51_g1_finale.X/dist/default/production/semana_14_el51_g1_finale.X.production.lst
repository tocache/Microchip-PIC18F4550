

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 16 18:00:19 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001550                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _erro
    80  001550  1F                 	db	31
    81  001551  15                 	db	21
    82  001552  15                 	db	21
    83  001553  00                 	db	0
    84  001554  1F                 	db	31
    85  001555  05                 	db	5
    86  001556  0D                 	db	13
    87  001557  17                 	db	23
    88                           
    89                           ;initializer for _okay
    90  001558  1F                 	db	31
    91  001559  11                 	db	17
    92  00155A  1F                 	db	31
    93  00155B  00                 	db	0
    94  00155C  1F                 	db	31
    95  00155D  0C                 	db	12
    96  00155E  0A                 	db	10
    97  00155F  11                 	db	17
    98  0000                     _TMR1L	set	4046
    99  0000                     _TMR1H	set	4047
   100                           
   101                           	psect	nvCOMRAM
   102  000042                     __pnvCOMRAM:
   103                           	callstack 0
   104  000042                     _estado:
   105                           	callstack 0
   106  000042                     	ds	1
   107  0000                     _LATD	set	3980
   108  0000                     _PORTBbits	set	3969
   109  0000                     _PORTD	set	3971
   110  0000                     _LATDbits	set	3980
   111  0000                     _TRISBbits	set	3987
   112  0000                     _LATEbits	set	3981
   113  0000                     _TRISCbits	set	3988
   114  0000                     _TRISD	set	3989
   115  0000                     _PIE1bits	set	3997
   116  0000                     _CCP1CON	set	4029
   117  0000                     _TRISEbits	set	3990
   118  0000                     _ADCON1	set	4033
   119  0000                     _OSCCON	set	4051
   120  0000                     _LATBbits	set	3978
   121  0000                     _LATCbits	set	3979
   122  0000                     _INTCONbits	set	4082
   123  0000                     _T1CON	set	4045
   124  0000                     _CCPR1	set	4030
   125  0000                     _PIR1bits	set	3998
   126                           
   127                           	psect	smallconst
   128  000800                     __psmallconst:
   129                           	callstack 0
   130  000800  00                 	db	0
   131  000801                     STR_3:
   132  000801  53                 	db	83	;'S'
   133  000802  65                 	db	101	;'e'
   134  000803  6D                 	db	109	;'m'
   135  000804  20                 	db	32
   136  000805  31                 	db	49	;'1'
   137  000806  34                 	db	52	;'4'
   138  000807  20                 	db	32
   139  000808  46                 	db	70	;'F'
   140  000809  69                 	db	105	;'i'
   141  00080A  6E                 	db	110	;'n'
   142  00080B  61                 	db	97	;'a'
   143  00080C  6C                 	db	108	;'l'
   144  00080D  65                 	db	101	;'e'
   145  00080E  00                 	db	0
   146  00080F                     STR_4:
   147  00080F  44                 	db	68	;'D'
   148  000810  69                 	db	105	;'i'
   149  000811  73                 	db	115	;'s'
   150  000812  74                 	db	116	;'t'
   151  000813  3A                 	db	58	;':'
   152  000814  20                 	db	32
   153  000815  00                 	db	0
   154  000816  25                 	db	37
   155  000817  20                 	db	32
   156  000818  54                 	db	84	;'T'
   157  000819  3A                 	db	58	;':'
   158  00081A  00                 	db	0
   159  00081B  52                 	db	82	;'R'
   160  00081C  48                 	db	72	;'H'
   161  00081D  3A                 	db	58	;':'
   162  00081E  00                 	db	0
   163  00081F                     STR_5:
   164  00081F  20                 	db	32
   165  000820  63                 	db	99	;'c'
   166  000821  6D                 	db	109	;'m'
   167  000822  00                 	db	0
   168  000823  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           ; #config settings
   171                           
   172                           	psect	cinit
   173  001400                     __pcinit:
   174                           	callstack 0
   175  001400                     start_initialization:
   176                           	callstack 0
   177  001400                     __initialization:
   178                           	callstack 0
   179                           
   180                           ; Initialize objects allocated to COMRAM (16 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  001400  0E50               	movlw	low __pidataCOMRAM
   183  001402  6EF6               	movwf	tblptrl,c
   184  001404  0E15               	movlw	high __pidataCOMRAM
   185  001406  6EF7               	movwf	tblptrh,c
   186  001408  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  00140A  6EF8               	movwf	tblptru,c
   188  00140C  EE00  F024         	lfsr	0,__pdataCOMRAM
   189  001410  EE10 F010          	lfsr	1,16
   190  001414                     copy_data0:
   191  001414  0009               	tblrd		*+
   192  001416  CFF5 FFEE          	movff	tablat,postinc0
   193  00141A  50E5               	movf	postdec1,w,c
   194  00141C  50E1               	movf	fsr1l,w,c
   195  00141E  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to COMRAM (14 bytes)
   198  001420  EE00  F034         	lfsr	0,__pbssCOMRAM
   199  001424  0E0E               	movlw	14
   200  001426                     clear_0:
   201  001426  6AEE               	clrf	postinc0,c
   202  001428  06E8               	decf	wreg,f,c
   203  00142A  E1FD               	bnz	clear_0
   204  00142C                     end_of_initialization:
   205                           	callstack 0
   206  00142C                     __end_of__initialization:
   207                           	callstack 0
   208  00142C  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209  00142E  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210  001430  0E00               	movlw	low (__Lmediumconst shr (0+16))
   211  001432  6EF8               	movwf	tblptru,c
   212  001434  0100               	movlb	0
   213  001436  EF27  F006         	goto	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMRAM
   216  000034                     __pbssCOMRAM:
   217                           	callstack 0
   218  000034                     _tiempo:
   219                           	callstack 0
   220  000034                     	ds	4
   221  000038                     _distancia:
   222                           	callstack 0
   223  000038                     	ds	2
   224  00003A                     _unidades:
   225                           	callstack 0
   226  00003A                     	ds	1
   227  00003B                     _decenas:
   228                           	callstack 0
   229  00003B                     	ds	1
   230  00003C                     _centenas:
   231                           	callstack 0
   232  00003C                     	ds	1
   233  00003D                     _Checksum:
   234                           	callstack 0
   235  00003D                     	ds	1
   236  00003E                     _T_Integer:
   237                           	callstack 0
   238  00003E                     	ds	1
   239  00003F                     _T_Decimal:
   240                           	callstack 0
   241  00003F                     	ds	1
   242  000040                     _RH_Integer:
   243                           	callstack 0
   244  000040                     	ds	1
   245  000041                     _RH_Decimal:
   246                           	callstack 0
   247  000041                     	ds	1
   248                           
   249                           	psect	dataCOMRAM
   250  000024                     __pdataCOMRAM:
   251                           	callstack 0
   252  000024                     _erro:
   253                           	callstack 0
   254  000024                     	ds	8
   255  00002C                     _okay:
   256                           	callstack 0
   257  00002C                     	ds	8
   258                           
   259                           	psect	cstackCOMRAM
   260  000001                     __pcstackCOMRAM:
   261                           	callstack 0
   262  000001                     ??_CCP1_TMR1:
   263                           
   264                           ; 1 bytes @ 0x0
   265  000001                     	ds	2
   266  000003                     ?___lwmod:
   267                           	callstack 0
   268  000003                     ?___flmul:
   269                           	callstack 0
   270  000003                     ?___fltol:
   271                           	callstack 0
   272  000003                     ?___xxtofl:
   273                           	callstack 0
   274  000003                     ENVIA_NIBBLE@dato:
   275                           	callstack 0
   276  000003                     LEER_LCD@aux:
   277                           	callstack 0
   278  000003                     ___lwmod@dividend:
   279                           	callstack 0
   280  000003                     ___fltol@f1:
   281                           	callstack 0
   282  000003                     ___flmul@b:
   283                           	callstack 0
   284  000003                     ___xxtofl@val:
   285                           	callstack 0
   286                           
   287                           ; 4 bytes @ 0x2
   288  000003                     	ds	1
   289  000004                     ENVIA_CHAR@dato:
   290                           	callstack 0
   291  000004                     ENVIA_LCD_CMD@dato:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x3
   295  000004                     	ds	1
   296  000005                     ENVIA_CHAR@aux:
   297                           	callstack 0
   298  000005                     ENVIA_LCD_CMD@aux:
   299                           	callstack 0
   300  000005                     ___lwmod@divisor:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x4
   304  000005                     	ds	1
   305  000006                     ??_LCD_CONFIG:
   306  000006                     POS_CURSOR@columna:
   307                           	callstack 0
   308  000006                     CURSOR_ONOFF@estado:
   309                           	callstack 0
   310  000006                     ESCRIBE_MENSAJE@cadena:
   311                           	callstack 0
   312  000006                     GENERACARACTER@vector:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x5
   316  000006                     	ds	1
   317  000007                     ??___fltol:
   318  000007                     ??___xxtofl:
   319  000007                     POS_CURSOR@fila:
   320                           	callstack 0
   321  000007                     ___lwmod@counter:
   322                           	callstack 0
   323  000007                     ___flmul@a:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x6
   327  000007                     	ds	1
   328  000008                     ?___lwdiv:
   329                           	callstack 0
   330  000008                     ESCRIBE_MENSAJE@tam:
   331                           	callstack 0
   332  000008                     GENERACARACTER@pos:
   333                           	callstack 0
   334  000008                     ___lwdiv@dividend:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x7
   338  000008                     	ds	1
   339  000009                     ??_ESCRIBE_MENSAJE:
   340  000009                     GENERACARACTER@i:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x8
   344  000009                     	ds	1
   345  00000A                     ??_init_LCD:
   346  00000A                     ___lwdiv@divisor:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x9
   350  00000A                     	ds	1
   351  00000B                     ??___flmul:
   352  00000B                     ESCRIBE_MENSAJE@i:
   353                           	callstack 0
   354  00000B                     ___fltol@sign1:
   355                           	callstack 0
   356  00000B                     ___xxtofl@sign:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xA
   360  00000B                     	ds	1
   361  00000C                     ___fltol@exp1:
   362                           	callstack 0
   363  00000C                     ___xxtofl@exp:
   364                           	callstack 0
   365  00000C                     ___lwdiv@quotient:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xB
   369  00000C                     	ds	1
   370  00000D                     ___xxtofl@arg:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0xC
   374  00000D                     	ds	1
   375  00000E                     ___lwdiv@counter:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0xD
   379  00000E                     	ds	1
   380  00000F                     ___flmul@sign:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xE
   384  00000F                     	ds	1
   385  000010                     ___flmul@grs:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0xF
   389  000010                     	ds	4
   390  000014                     ___flmul@aexp:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x13
   394  000014                     	ds	1
   395  000015                     ___flmul@bexp:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x14
   399  000015                     	ds	1
   400  000016                     ___flmul@prod:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x15
   404  000016                     	ds	4
   405  00001A                     ___flmul@temp:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x19
   409  00001A                     	ds	2
   410  00001C                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x1B
   413  00001C                     	ds	2
   414  00001E                     _main$1260:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x1D
   418  00001E                     	ds	4
   419  000022                     _main$1261:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x21
   423  000022                     	ds	2
   424                           
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 126 in file "maincode02.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         6       0       0       0       0       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0       0       0       0       0
   447 ;;      Totals:         8       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        8 bytes
   449 ;; Hardware stack levels required when called: 5
   450 ;; This function calls:
   451 ;;		_ENVIA_CHAR
   452 ;;		_ESCRIBE_MENSAJE
   453 ;;		_POS_CURSOR
   454 ;;		___flmul
   455 ;;		___fltol
   456 ;;		___lwdiv
   457 ;;		___lwmod
   458 ;;		___xxtofl
   459 ;;		_configuro
   460 ;;		_init_LCD
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text0
   467  000C4E                     __ptext0:
   468                           	callstack 0
   469  000C4E                     _main:
   470                           	callstack 26
   471  000C4E                     
   472                           ;maincode02.c: 127:     configuro();
   473  000C4E  EC86  F00A         	call	_configuro	;wreg free
   474  000C52                     
   475                           ;maincode02.c: 128:     init_LCD();
   476  000C52  ECA0  F009         	call	_init_LCD	;wreg free
   477  000C56                     
   478                           ;maincode02.c: 129:     POS_CURSOR(1,0);
   479  000C56  0E00               	movlw	0
   480  000C58  6E06               	movwf	POS_CURSOR@columna^0,c
   481  000C5A  0E01               	movlw	1
   482  000C5C  EC1D  F00A         	call	_POS_CURSOR
   483  000C60                     
   484                           ;maincode02.c: 130:     ESCRIBE_MENSAJE("Sem 14 Finale",13);
   485  000C60  0E01               	movlw	low STR_3
   486  000C62  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   487  000C64  0E08               	movlw	high STR_3
   488  000C66  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   489  000C68  0E0D               	movlw	13
   490  000C6A  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   491  000C6C  ECC3  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   492  000C70  EF15  F007         	goto	l2090
   493  000C74                     l206:
   494                           
   495                           ;maincode02.c: 136:                 LATEbits.LE0=1;
   496  000C74  808D               	bsf	141,0,c	;volatile
   497  000C76                     
   498                           ;maincode02.c: 137:                 _delay((unsigned long)((10)*(8000000UL/4000000.0)));
   499  000C76  0E06               	movlw	6
   500  000C78                     u1187:
   501  000C78  2EE8               	decfsz	wreg,f,c
   502  000C7A  D7FE               	bra	u1187
   503  000C7C  D000               	nop2	
   504  000C7E                     
   505                           ;maincode02.c: 138:                 LATEbits.LE0=0;
   506  000C7E  908D               	bcf	141,0,c	;volatile
   507  000C80                     
   508                           ;maincode02.c: 139:                 estado=2;
   509  000C80  0E02               	movlw	2
   510  000C82  6E42               	movwf	_estado^0,c
   511                           
   512                           ;maincode02.c: 140:                 break;
   513  000C84  EF15  F007         	goto	l2090
   514  000C88                     l2058:
   515                           
   516                           ;maincode02.c: 142:                 tiempo=(float)distancia;
   517  000C88  C038  F003         	movff	_distancia,___xxtofl@val
   518  000C8C  C039  F004         	movff	_distancia+1,___xxtofl@val+1
   519  000C90  6A05               	clrf	(___xxtofl@val+2)^0,c
   520  000C92  6A06               	clrf	(___xxtofl@val+3)^0,c
   521  000C94  0E00               	movlw	0
   522  000C96  EC30  F007         	call	___xxtofl
   523  000C9A  C003  F034         	movff	?___xxtofl,_tiempo
   524  000C9E  C004  F035         	movff	?___xxtofl+1,_tiempo+1
   525  000CA2  C005  F036         	movff	?___xxtofl+2,_tiempo+2
   526  000CA6  C006  F037         	movff	?___xxtofl+3,_tiempo+3
   527  000CAA                     
   528                           ;maincode02.c: 143:                 tiempo=tiempo*8*0.0833;
   529  000CAA  0E00               	movlw	0
   530  000CAC  6E07               	movwf	___flmul@a^0,c
   531  000CAE  0E00               	movlw	0
   532  000CB0  6E08               	movwf	(___flmul@a+1)^0,c
   533  000CB2  0E00               	movlw	0
   534  000CB4  6E09               	movwf	(___flmul@a+2)^0,c
   535  000CB6  0E41               	movlw	65
   536  000CB8  6E0A               	movwf	(___flmul@a+3)^0,c
   537  000CBA  C034  F003         	movff	_tiempo,___flmul@b
   538  000CBE  C035  F004         	movff	_tiempo+1,___flmul@b+1
   539  000CC2  C036  F005         	movff	_tiempo+2,___flmul@b+2
   540  000CC6  C037  F006         	movff	_tiempo+3,___flmul@b+3
   541  000CCA  EC12  F004         	call	___flmul	;wreg free
   542  000CCE  C003  F01E         	movff	?___flmul,_main$1260
   543  000CD2  C004  F01F         	movff	?___flmul+1,_main$1260+1
   544  000CD6  C005  F020         	movff	?___flmul+2,_main$1260+2
   545  000CDA  C006  F021         	movff	?___flmul+3,_main$1260+3
   546  000CDE                     
   547                           ;maincode02.c: 143:                 tiempo=tiempo*8*0.0833;
   548  000CDE  C01E  F003         	movff	_main$1260,___flmul@b
   549  000CE2  C01F  F004         	movff	_main$1260+1,___flmul@b+1
   550  000CE6  C020  F005         	movff	_main$1260+2,___flmul@b+2
   551  000CEA  C021  F006         	movff	_main$1260+3,___flmul@b+3
   552  000CEE  0E31               	movlw	49
   553  000CF0  6E07               	movwf	___flmul@a^0,c
   554  000CF2  0E99               	movlw	153
   555  000CF4  6E08               	movwf	(___flmul@a+1)^0,c
   556  000CF6  0EAA               	movlw	170
   557  000CF8  6E09               	movwf	(___flmul@a+2)^0,c
   558  000CFA  0E3D               	movlw	61
   559  000CFC  6E0A               	movwf	(___flmul@a+3)^0,c
   560  000CFE  EC12  F004         	call	___flmul	;wreg free
   561  000D02  C003  F034         	movff	?___flmul,_tiempo
   562  000D06  C004  F035         	movff	?___flmul+1,_tiempo+1
   563  000D0A  C005  F036         	movff	?___flmul+2,_tiempo+2
   564  000D0E  C006  F037         	movff	?___flmul+3,_tiempo+3
   565  000D12                     
   566                           ;maincode02.c: 144:                 tiempo=tiempo*0.017;
   567  000D12  C034  F003         	movff	_tiempo,___flmul@b
   568  000D16  C035  F004         	movff	_tiempo+1,___flmul@b+1
   569  000D1A  C036  F005         	movff	_tiempo+2,___flmul@b+2
   570  000D1E  C037  F006         	movff	_tiempo+3,___flmul@b+3
   571  000D22  0E96               	movlw	150
   572  000D24  6E07               	movwf	___flmul@a^0,c
   573  000D26  0E43               	movlw	67
   574  000D28  6E08               	movwf	(___flmul@a+1)^0,c
   575  000D2A  0E8B               	movlw	139
   576  000D2C  6E09               	movwf	(___flmul@a+2)^0,c
   577  000D2E  0E3C               	movlw	60
   578  000D30  6E0A               	movwf	(___flmul@a+3)^0,c
   579  000D32  EC12  F004         	call	___flmul	;wreg free
   580  000D36  C003  F034         	movff	?___flmul,_tiempo
   581  000D3A  C004  F035         	movff	?___flmul+1,_tiempo+1
   582  000D3E  C005  F036         	movff	?___flmul+2,_tiempo+2
   583  000D42  C006  F037         	movff	?___flmul+3,_tiempo+3
   584  000D46                     
   585                           ;maincode02.c: 145:                 distancia = (int)tiempo;
   586  000D46  C034  F003         	movff	_tiempo,___fltol@f1
   587  000D4A  C035  F004         	movff	_tiempo+1,___fltol@f1+1
   588  000D4E  C036  F005         	movff	_tiempo+2,___fltol@f1+2
   589  000D52  C037  F006         	movff	_tiempo+3,___fltol@f1+3
   590  000D56  EC0A  F008         	call	___fltol	;wreg free
   591  000D5A  C003  F038         	movff	?___fltol,_distancia
   592  000D5E  C004  F039         	movff	?___fltol+1,_distancia+1
   593  000D62                     
   594                           ;maincode02.c: 146:                 estado = 5;
   595  000D62  0E05               	movlw	5
   596  000D64  6E42               	movwf	_estado^0,c
   597                           
   598                           ;maincode02.c: 147:                 break;
   599  000D66  EF15  F007         	goto	l2090
   600  000D6A                     l2070:
   601                           
   602                           ;maincode02.c: 149:                 POS_CURSOR(2,0);
   603  000D6A  0E00               	movlw	0
   604  000D6C  6E06               	movwf	POS_CURSOR@columna^0,c
   605  000D6E  0E02               	movlw	2
   606  000D70  EC1D  F00A         	call	_POS_CURSOR
   607  000D74                     
   608                           ;maincode02.c: 150:                 ESCRIBE_MENSAJE("Dist: ",6);
   609  000D74  0E0F               	movlw	low STR_4
   610  000D76  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   611  000D78  0E08               	movlw	high STR_4
   612  000D7A  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   613  000D7C  0E06               	movlw	6
   614  000D7E  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   615  000D80  ECC3  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   616  000D84                     
   617                           ;maincode02.c: 151:                 ENVIA_CHAR(distancia/100+'0');
   618  000D84  C038  F008         	movff	_distancia,___lwdiv@dividend
   619  000D88  C039  F009         	movff	_distancia+1,___lwdiv@dividend+1
   620  000D8C  0E00               	movlw	0
   621  000D8E  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
   622  000D90  0E64               	movlw	100
   623  000D92  6E0A               	movwf	___lwdiv@divisor^0,c
   624  000D94  ECCB  F008         	call	___lwdiv	;wreg free
   625  000D98  5008               	movf	?___lwdiv^0,w,c
   626  000D9A  0F30               	addlw	48
   627  000D9C  EC54  F00A         	call	_ENVIA_CHAR
   628  000DA0                     
   629                           ;maincode02.c: 152:                 ENVIA_CHAR((distancia%100)/10+'0');
   630  000DA0  0E00               	movlw	0
   631  000DA2  6E06               	movwf	(___lwmod@divisor+1)^0,c
   632  000DA4  0E64               	movlw	100
   633  000DA6  6E05               	movwf	___lwmod@divisor^0,c
   634  000DA8  C038  F003         	movff	_distancia,___lwmod@dividend
   635  000DAC  C039  F004         	movff	_distancia+1,___lwmod@dividend+1
   636  000DB0  EC3E  F009         	call	___lwmod	;wreg free
   637  000DB4  C003  F008         	movff	?___lwmod,___lwdiv@dividend
   638  000DB8  C004  F009         	movff	?___lwmod+1,___lwdiv@dividend+1
   639  000DBC  0E00               	movlw	0
   640  000DBE  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
   641  000DC0  0E0A               	movlw	10
   642  000DC2  6E0A               	movwf	___lwdiv@divisor^0,c
   643  000DC4  ECCB  F008         	call	___lwdiv	;wreg free
   644  000DC8  5008               	movf	?___lwdiv^0,w,c
   645  000DCA  0F30               	addlw	48
   646  000DCC  EC54  F00A         	call	_ENVIA_CHAR
   647  000DD0                     
   648                           ;maincode02.c: 153:                 ENVIA_CHAR((distancia%100)%10+'0');
   649  000DD0  0E00               	movlw	0
   650  000DD2  6E06               	movwf	(___lwmod@divisor+1)^0,c
   651  000DD4  0E64               	movlw	100
   652  000DD6  6E05               	movwf	___lwmod@divisor^0,c
   653  000DD8  C038  F003         	movff	_distancia,___lwmod@dividend
   654  000DDC  C039  F004         	movff	_distancia+1,___lwmod@dividend+1
   655  000DE0  EC3E  F009         	call	___lwmod	;wreg free
   656  000DE4  C003  F022         	movff	?___lwmod,_main$1261
   657  000DE8  C004  F023         	movff	?___lwmod+1,_main$1261+1
   658  000DEC                     
   659                           ;maincode02.c: 153:                 ENVIA_CHAR((distancia%100)%10+'0');
   660  000DEC  C022  F003         	movff	_main$1261,___lwmod@dividend
   661  000DF0  C023  F004         	movff	_main$1261+1,___lwmod@dividend+1
   662  000DF4  0E00               	movlw	0
   663  000DF6  6E06               	movwf	(___lwmod@divisor+1)^0,c
   664  000DF8  0E0A               	movlw	10
   665  000DFA  6E05               	movwf	___lwmod@divisor^0,c
   666  000DFC  EC3E  F009         	call	___lwmod	;wreg free
   667  000E00  5003               	movf	?___lwmod^0,w,c
   668  000E02  0F30               	addlw	48
   669  000E04  EC54  F00A         	call	_ENVIA_CHAR
   670  000E08                     
   671                           ;maincode02.c: 154:                 ESCRIBE_MENSAJE(" cm",3);
   672  000E08  0E1F               	movlw	low STR_5
   673  000E0A  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   674  000E0C  0E08               	movlw	high STR_5
   675  000E0E  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   676  000E10  0E03               	movlw	3
   677  000E12  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   678  000E14  ECC3  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   679  000E18                     
   680                           ;maincode02.c: 155:                 _delay((unsigned long)((20)*(8000000UL/4000.0)));
   681  000E18  0E34               	movlw	52
   682  000E1A  6E1C               	movwf	??_main^0,c
   683  000E1C  0EF2               	movlw	242
   684  000E1E                     u1197:
   685  000E1E  2EE8               	decfsz	wreg,f,c
   686  000E20  D7FE               	bra	u1197
   687  000E22  2E1C               	decfsz	??_main^0,f,c
   688  000E24  D7FC               	bra	u1197
   689  000E26                     
   690                           ;maincode02.c: 156:                 estado = 1;
   691  000E26  0E01               	movlw	1
   692  000E28  6E42               	movwf	_estado^0,c
   693  000E2A                     l2090:
   694  000E2A  5042               	movf	_estado^0,w,c
   695  000E2C  6E1C               	movwf	??_main^0,c
   696  000E2E  6A1D               	clrf	(??_main+1)^0,c
   697                           
   698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   699                           ; Switch size 1, requested type "simple"
   700                           ; Number of cases is 1, Range of values is 0 to 0
   701                           ; switch strategies available:
   702                           ; Name         Instructions Cycles
   703                           ; simple_byte            4     3 (average)
   704                           ;	Chosen strategy is simple_byte
   705  000E30  501D               	movf	(??_main+1)^0,w,c
   706  000E32  0A00               	xorlw	0	; case 0
   707  000E34  B4D8               	btfsc	status,2,c
   708  000E36  EF1F  F007         	goto	l2104
   709  000E3A  EF15  F007         	goto	l2090
   710  000E3E                     l2104:
   711                           
   712                           ; Switch size 1, requested type "simple"
   713                           ; Number of cases is 3, Range of values is 1 to 5
   714                           ; switch strategies available:
   715                           ; Name         Instructions Cycles
   716                           ; simple_byte           10     6 (average)
   717                           ;	Chosen strategy is simple_byte
   718  000E3E  501C               	movf	??_main^0,w,c
   719  000E40  0A01               	xorlw	1	; case 1
   720  000E42  B4D8               	btfsc	status,2,c
   721  000E44  EF3A  F006         	goto	l206
   722  000E48  0A05               	xorlw	5	; case 4
   723  000E4A  B4D8               	btfsc	status,2,c
   724  000E4C  EF44  F006         	goto	l2058
   725  000E50  0A01               	xorlw	1	; case 5
   726  000E52  B4D8               	btfsc	status,2,c
   727  000E54  EFB5  F006         	goto	l2070
   728  000E58  EF15  F007         	goto	l2090
   729  000E5C  EF07  F000         	goto	start
   730  000E60                     __end_of_main:
   731                           	callstack 0
   732                           
   733 ;; *************** function _init_LCD *****************
   734 ;; Defined at:
   735 ;;		line 40 in file "maincode02.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   749 ;;      Params:         0       0       0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0
   751 ;;      Temps:          1       0       0       0       0       0       0       0       0
   752 ;;      Totals:         1       0       0       0       0       0       0       0       0
   753 ;;Total ram usage:        1 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 4
   756 ;; This function calls:
   757 ;;		_BORRAR_LCD
   758 ;;		_CURSOR_HOME
   759 ;;		_CURSOR_ONOFF
   760 ;;		_GENERACARACTER
   761 ;;		_LCD_CONFIG
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text1
   768  001340                     __ptext1:
   769                           	callstack 0
   770  001340                     _init_LCD:
   771                           	callstack 26
   772  001340                     
   773                           ;maincode02.c: 41:     TRISD = 0x00;
   774  001340  0E00               	movlw	0
   775  001342  6E95               	movwf	149,c	;volatile
   776  001344                     
   777                           ;maincode02.c: 42:     LCD_CONFIG();
   778  001344  EC70  F009         	call	_LCD_CONFIG	;wreg free
   779  001348                     
   780                           ;maincode02.c: 43:     _delay((unsigned long)((16)*(8000000UL/4000.0)));
   781  001348  0E2A               	movlw	42
   782  00134A  6E0A               	movwf	??_init_LCD^0,c
   783  00134C  0E8E               	movlw	142
   784  00134E                     u1207:
   785  00134E  2EE8               	decfsz	wreg,f,c
   786  001350  D7FE               	bra	u1207
   787  001352  2E0A               	decfsz	??_init_LCD^0,f,c
   788  001354  D7FC               	bra	u1207
   789  001356                     
   790                           ;maincode02.c: 44:     BORRAR_LCD();
   791  001356  ECB4  F00A         	call	_BORRAR_LCD	;wreg free
   792  00135A                     
   793                           ;maincode02.c: 45:     CURSOR_HOME();
   794  00135A  ECB0  F00A         	call	_CURSOR_HOME	;wreg free
   795  00135E                     
   796                           ;maincode02.c: 46:     CURSOR_ONOFF(1);
   797  00135E  0E01               	movlw	1
   798  001360  EC6E  F00A         	call	_CURSOR_ONOFF
   799  001364                     
   800                           ;maincode02.c: 47:     GENERACARACTER(okay,0);
   801  001364  0E2C               	movlw	low _okay
   802  001366  6E06               	movwf	GENERACARACTER@vector^0,c
   803  001368  0E00               	movlw	high _okay
   804  00136A  6E07               	movwf	(GENERACARACTER@vector+1)^0,c
   805  00136C  0E00               	movlw	0
   806  00136E  6E08               	movwf	GENERACARACTER@pos^0,c
   807  001370  ECE2  F009         	call	_GENERACARACTER	;wreg free
   808  001374                     
   809                           ;maincode02.c: 48:     GENERACARACTER(erro,1);
   810  001374  0E24               	movlw	low _erro
   811  001376  6E06               	movwf	GENERACARACTER@vector^0,c
   812  001378  0E00               	movlw	high _erro
   813  00137A  6E07               	movwf	(GENERACARACTER@vector+1)^0,c
   814  00137C  0E01               	movlw	1
   815  00137E  6E08               	movwf	GENERACARACTER@pos^0,c
   816  001380  ECE2  F009         	call	_GENERACARACTER	;wreg free
   817  001384  0012               	return		;funcret
   818  001386                     __end_of_init_LCD:
   819                           	callstack 0
   820                           
   821 ;; *************** function _LCD_CONFIG *****************
   822 ;; Defined at:
   823 ;;		line 72 in file "LCD.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0
   839 ;;      Temps:          1       0       0       0       0       0       0       0       0
   840 ;;      Totals:         1       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        1 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 3
   844 ;; This function calls:
   845 ;;		_ENVIA_LCD_CMD
   846 ;;		_ENVIA_NIBBLE
   847 ;; This function is called by:
   848 ;;		_init_LCD
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text2
   853  0012E0                     __ptext2:
   854                           	callstack 0
   855  0012E0                     _LCD_CONFIG:
   856                           	callstack 26
   857  0012E0                     
   858                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   859  0012E0  908C               	bcf	140,0,c	;volatile
   860                           
   861                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   862  0012E2  928C               	bcf	140,1,c	;volatile
   863  0012E4                     
   864                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   865  0012E4  0E30               	movlw	48
   866  0012E6  EC9A  F00A         	call	_ENVIA_NIBBLE
   867  0012EA                     
   868                           ;LCD.c: 77:         _delay(24000);
   869  0012EA  0E20               	movlw	32
   870  0012EC  6E06               	movwf	??_LCD_CONFIG^0,c
   871  0012EE  0E2A               	movlw	42
   872  0012F0                     u1217:
   873  0012F0  2EE8               	decfsz	wreg,f,c
   874  0012F2  D7FE               	bra	u1217
   875  0012F4  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   876  0012F6  D7FC               	bra	u1217
   877  0012F8                     
   878                           ;LCD.c: 78:         _delay(24000);
   879  0012F8  0E20               	movlw	32
   880  0012FA  6E06               	movwf	??_LCD_CONFIG^0,c
   881  0012FC  0E2A               	movlw	42
   882  0012FE                     u1227:
   883  0012FE  2EE8               	decfsz	wreg,f,c
   884  001300  D7FE               	bra	u1227
   885  001302  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   886  001304  D7FC               	bra	u1227
   887                           
   888                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   889  001306  0E30               	movlw	48
   890  001308  EC9A  F00A         	call	_ENVIA_NIBBLE
   891  00130C                     
   892                           ;LCD.c: 83:  _delay(1200);
   893  00130C  0EF0               	movlw	240
   894  00130E                     u1237:
   895  00130E  D000               	nop2	
   896  001310  2EE8               	decfsz	wreg,f,c
   897  001312  D7FD               	bra	u1237
   898  001314                     
   899                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   900  001314  0E30               	movlw	48
   901  001316  EC9A  F00A         	call	_ENVIA_NIBBLE
   902  00131A                     
   903                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   904  00131A  0E20               	movlw	32
   905  00131C  EC9A  F00A         	call	_ENVIA_NIBBLE
   906  001320                     
   907                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   908  001320  0E01               	movlw	1
   909  001322  EC3A  F00A         	call	_ENVIA_LCD_CMD
   910  001326                     
   911                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   912  001326  0E28               	movlw	40
   913  001328  EC3A  F00A         	call	_ENVIA_LCD_CMD
   914  00132C                     
   915                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   916  00132C  0E0F               	movlw	15
   917  00132E  EC3A  F00A         	call	_ENVIA_LCD_CMD
   918  001332                     
   919                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   920  001332  0E06               	movlw	6
   921  001334  EC3A  F00A         	call	_ENVIA_LCD_CMD
   922  001338                     
   923                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   924  001338  0E01               	movlw	1
   925  00133A  EC3A  F00A         	call	_ENVIA_LCD_CMD
   926  00133E  0012               	return		;funcret
   927  001340                     __end_of_LCD_CONFIG:
   928                           	callstack 0
   929                           
   930 ;; *************** function _GENERACARACTER *****************
   931 ;; Defined at:
   932 ;;		line 153 in file "LCD.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  vector          2    5[COMRAM] PTR const unsigned char 
   935 ;;		 -> erro(8), okay(8), 
   936 ;;  pos             1    7[COMRAM] unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  i               1    8[COMRAM] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   948 ;;      Params:         3       0       0       0       0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0
   951 ;;      Totals:         4       0       0       0       0       0       0       0       0
   952 ;;Total ram usage:        4 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 3
   955 ;; This function calls:
   956 ;;		_ENVIA_CHAR
   957 ;;		_ENVIA_LCD_CMD
   958 ;; This function is called by:
   959 ;;		_init_LCD
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text3
   964  0013C4                     __ptext3:
   965                           	callstack 0
   966  0013C4                     _GENERACARACTER:
   967                           	callstack 26
   968  0013C4                     
   969                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
   970  0013C4  5008               	movf	GENERACARACTER@pos^0,w,c
   971  0013C6  0D08               	mullw	8
   972  0013C8  50F3               	movf	243,w,c
   973  0013CA  0F40               	addlw	64
   974  0013CC  EC3A  F00A         	call	_ENVIA_LCD_CMD
   975  0013D0                     
   976                           ;LCD.c: 157:  for(i=0;i<8;i++)
   977  0013D0  0E00               	movlw	0
   978  0013D2  6E09               	movwf	GENERACARACTER@i^0,c
   979  0013D4                     l1666:
   980                           
   981                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
   982  0013D4  5009               	movf	GENERACARACTER@i^0,w,c
   983  0013D6  2406               	addwf	GENERACARACTER@vector^0,w,c
   984  0013D8  6ED9               	movwf	fsr2l,c
   985  0013DA  0E00               	movlw	0
   986  0013DC  2007               	addwfc	(GENERACARACTER@vector+1)^0,w,c
   987  0013DE  6EDA               	movwf	fsr2h,c
   988  0013E0  50DF               	movf	indf2,w,c
   989  0013E2  EC54  F00A         	call	_ENVIA_CHAR
   990  0013E6                     
   991                           ;LCD.c: 160:  }
   992  0013E6  2A09               	incf	GENERACARACTER@i^0,f,c
   993  0013E8  0E07               	movlw	7
   994  0013EA  6409               	cpfsgt	GENERACARACTER@i^0,c
   995  0013EC  EFFA  F009         	goto	u671
   996  0013F0  EFFC  F009         	goto	u670
   997  0013F4                     u671:
   998  0013F4  EFEA  F009         	goto	l1666
   999  0013F8                     u670:
  1000  0013F8                     
  1001                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1002  0013F8  0E80               	movlw	128
  1003  0013FA  EC3A  F00A         	call	_ENVIA_LCD_CMD
  1004  0013FE  0012               	return		;funcret
  1005  001400                     __end_of_GENERACARACTER:
  1006                           	callstack 0
  1007                           
  1008 ;; *************** function _CURSOR_ONOFF *****************
  1009 ;; Defined at:
  1010 ;;		line 35 in file "LCD.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  estado          1    wreg     unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  estado          1    5[COMRAM] unsigned char 
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1024 ;;      Params:         0       0       0       0       0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1027 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 3
  1031 ;; This function calls:
  1032 ;;		_ENVIA_LCD_CMD
  1033 ;; This function is called by:
  1034 ;;		_init_LCD
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text4
  1039  0014DC                     __ptext4:
  1040                           	callstack 0
  1041  0014DC                     _CURSOR_ONOFF:
  1042                           	callstack 26
  1043                           
  1044                           ;incstack = 0
  1045                           ;CURSOR_ONOFF@estado stored from wreg
  1046  0014DC  6E06               	movwf	CURSOR_ONOFF@estado^0,c
  1047  0014DE                     
  1048                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1049  0014DE  5006               	movf	CURSOR_ONOFF@estado^0,w,c
  1050  0014E0  A4D8               	btfss	status,2,c
  1051  0014E2  EF75  F00A         	goto	u651
  1052  0014E6  EF77  F00A         	goto	u650
  1053  0014EA                     u651:
  1054  0014EA  EF7A  F00A         	goto	l1628
  1055  0014EE                     u650:
  1056  0014EE  0E0E               	movlw	14
  1057  0014F0  EC3A  F00A         	call	_ENVIA_LCD_CMD
  1058  0014F4                     l1628:
  1059                           
  1060                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1061  0014F4  0406               	decf	CURSOR_ONOFF@estado^0,w,c
  1062  0014F6  A4D8               	btfss	status,2,c
  1063  0014F8  EF80  F00A         	goto	u661
  1064  0014FC  EF82  F00A         	goto	u660
  1065  001500                     u661:
  1066  001500  EF85  F00A         	goto	l42
  1067  001504                     u660:
  1068  001504  0E0C               	movlw	12
  1069  001506  EC3A  F00A         	call	_ENVIA_LCD_CMD
  1070  00150A                     l42:
  1071  00150A  0012               	return		;funcret
  1072  00150C                     __end_of_CURSOR_ONOFF:
  1073                           	callstack 0
  1074                           
  1075 ;; *************** function _CURSOR_HOME *****************
  1076 ;; Defined at:
  1077 ;;		line 30 in file "LCD.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 3
  1098 ;; This function calls:
  1099 ;;		_ENVIA_LCD_CMD
  1100 ;; This function is called by:
  1101 ;;		_init_LCD
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106  001560                     __ptext5:
  1107                           	callstack 0
  1108  001560                     _CURSOR_HOME:
  1109                           	callstack 26
  1110  001560                     
  1111                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1112  001560  0E02               	movlw	2
  1113  001562  EC3A  F00A         	call	_ENVIA_LCD_CMD
  1114  001566  0012               	return		;funcret
  1115  001568                     __end_of_CURSOR_HOME:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _BORRAR_LCD *****************
  1119 ;; Defined at:
  1120 ;;		line 67 in file "LCD.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 3
  1141 ;; This function calls:
  1142 ;;		_ENVIA_LCD_CMD
  1143 ;; This function is called by:
  1144 ;;		_init_LCD
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text6
  1149  001568                     __ptext6:
  1150                           	callstack 0
  1151  001568                     _BORRAR_LCD:
  1152                           	callstack 26
  1153  001568                     
  1154                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1155  001568  0E01               	movlw	1
  1156  00156A  EC3A  F00A         	call	_ENVIA_LCD_CMD
  1157  00156E  0012               	return		;funcret
  1158  001570                     __end_of_BORRAR_LCD:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _configuro *****************
  1162 ;; Defined at:
  1163 ;;		line 23 in file "maincode02.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text7
  1192  00150C                     __ptext7:
  1193                           	callstack 0
  1194  00150C                     _configuro:
  1195                           	callstack 29
  1196  00150C                     
  1197                           ;maincode02.c: 24:     OSCCON = 0x72;
  1198  00150C  0E72               	movlw	114
  1199  00150E  6ED3               	movwf	211,c	;volatile
  1200                           
  1201                           ;maincode02.c: 25:     ADCON1 = 0x0F;
  1202  001510  0E0F               	movlw	15
  1203  001512  6EC1               	movwf	193,c	;volatile
  1204  001514                     
  1205                           ;maincode02.c: 26:     TRISCbits.RC1 = 0;
  1206  001514  9294               	bcf	148,1,c	;volatile
  1207  001516                     
  1208                           ;maincode02.c: 27:     LATCbits.LC1 = 1;
  1209  001516  828B               	bsf	139,1,c	;volatile
  1210  001518                     
  1211                           ;maincode02.c: 28:     LATBbits.LB3 = 1;
  1212  001518  868A               	bsf	138,3,c	;volatile
  1213  00151A                     
  1214                           ;maincode02.c: 29:     TRISEbits.RE0 = 0;
  1215  00151A  9096               	bcf	150,0,c	;volatile
  1216  00151C                     
  1217                           ;maincode02.c: 30:     LATEbits.LE0 = 0;
  1218  00151C  908D               	bcf	141,0,c	;volatile
  1219                           
  1220                           ;maincode02.c: 31:     CCP1CON = 0x05;
  1221  00151E  0E05               	movlw	5
  1222  001520  6EBD               	movwf	189,c	;volatile
  1223                           
  1224                           ;maincode02.c: 32:     T1CON = 0x91;
  1225  001522  0E91               	movlw	145
  1226  001524  6ECD               	movwf	205,c	;volatile
  1227  001526                     
  1228                           ;maincode02.c: 33:     INTCONbits.GIE = 1;
  1229  001526  8EF2               	bsf	242,7,c	;volatile
  1230  001528                     
  1231                           ;maincode02.c: 34:     INTCONbits.PEIE = 1;
  1232  001528  8CF2               	bsf	242,6,c	;volatile
  1233  00152A                     
  1234                           ;maincode02.c: 35:     PIE1bits.TMR1IE=1;
  1235  00152A  809D               	bsf	157,0,c	;volatile
  1236  00152C                     
  1237                           ;maincode02.c: 36:     PIE1bits.CCP1IE=1;
  1238  00152C  849D               	bsf	157,2,c	;volatile
  1239                           
  1240                           ;maincode02.c: 37:     estado = 1;
  1241  00152E  0E01               	movlw	1
  1242  001530  6E42               	movwf	_estado^0,c
  1243  001532  0012               	return		;funcret
  1244  001534                     __end_of_configuro:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function ___xxtofl *****************
  1248 ;; Defined at:
  1249 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  sign            1    wreg     unsigned char 
  1252 ;;  val             4    2[COMRAM] long 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  sign            1   10[COMRAM] unsigned char 
  1255 ;;  arg             4   12[COMRAM] unsigned long 
  1256 ;;  exp             1   11[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  4    2[COMRAM] unsigned char 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         4       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1269 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:       14 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_main
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text8
  1281  000E60                     __ptext8:
  1282                           	callstack 0
  1283  000E60                     ___xxtofl:
  1284                           	callstack 29
  1285                           
  1286                           ;incstack = 0
  1287                           ;___xxtofl@sign stored from wreg
  1288  000E60  6E0B               	movwf	___xxtofl@sign^0,c
  1289  000E62  500B               	movf	___xxtofl@sign^0,w,c
  1290  000E64  B4D8               	btfsc	status,2,c
  1291  000E66  EF37  F007         	goto	u1031
  1292  000E6A  EF39  F007         	goto	u1030
  1293  000E6E                     u1031:
  1294  000E6E  EF5B  F007         	goto	l882
  1295  000E72                     u1030:
  1296  000E72  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  1297  000E74  EF40  F007         	goto	u1040
  1298  000E78  EF3E  F007         	goto	u1041
  1299  000E7C                     u1041:
  1300  000E7C  EF5B  F007         	goto	l882
  1301  000E80                     u1040:
  1302  000E80  C003  F007         	movff	___xxtofl@val,??___xxtofl
  1303  000E84  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  1304  000E88  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  1305  000E8C  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  1306  000E90  1E07               	comf	??___xxtofl^0,f,c
  1307  000E92  1E08               	comf	(??___xxtofl+1)^0,f,c
  1308  000E94  1E09               	comf	(??___xxtofl+2)^0,f,c
  1309  000E96  1E0A               	comf	(??___xxtofl+3)^0,f,c
  1310  000E98  2A07               	incf	??___xxtofl^0,f,c
  1311  000E9A  0E00               	movlw	0
  1312  000E9C  2208               	addwfc	(??___xxtofl+1)^0,f,c
  1313  000E9E  2209               	addwfc	(??___xxtofl+2)^0,f,c
  1314  000EA0  220A               	addwfc	(??___xxtofl+3)^0,f,c
  1315  000EA2  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  1316  000EA6  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  1317  000EAA  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  1318  000EAE  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  1319  000EB2  EF63  F007         	goto	l1944
  1320  000EB6                     l882:
  1321  000EB6  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  1322  000EBA  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1323  000EBE  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1324  000EC2  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1325  000EC6                     l1944:
  1326  000EC6  5003               	movf	___xxtofl@val^0,w,c
  1327  000EC8  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  1328  000ECA  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  1329  000ECC  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  1330  000ECE  A4D8               	btfss	status,2,c
  1331  000ED0  EF6C  F007         	goto	u1051
  1332  000ED4  EF6E  F007         	goto	u1050
  1333  000ED8                     u1051:
  1334  000ED8  EF78  F007         	goto	l1950
  1335  000EDC                     u1050:
  1336  000EDC  0E00               	movlw	0
  1337  000EDE  6E03               	movwf	?___xxtofl^0,c
  1338  000EE0  0E00               	movlw	0
  1339  000EE2  6E04               	movwf	(?___xxtofl+1)^0,c
  1340  000EE4  0E00               	movlw	0
  1341  000EE6  6E05               	movwf	(?___xxtofl+2)^0,c
  1342  000EE8  0E00               	movlw	0
  1343  000EEA  6E06               	movwf	(?___xxtofl+3)^0,c
  1344  000EEC  EF09  F008         	goto	l885
  1345  000EF0                     l1950:
  1346  000EF0  0E96               	movlw	150
  1347  000EF2  6E0C               	movwf	___xxtofl@exp^0,c
  1348  000EF4  EF82  F007         	goto	l1954
  1349  000EF8                     l1952:
  1350  000EF8  2A0C               	incf	___xxtofl@exp^0,f,c
  1351  000EFA  90D8               	bcf	status,0,c
  1352  000EFC  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  1353  000EFE  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  1354  000F00  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  1355  000F02  320D               	rrcf	___xxtofl@arg^0,f,c
  1356  000F04                     l1954:
  1357  000F04  0E00               	movlw	0
  1358  000F06  140D               	andwf	___xxtofl@arg^0,w,c
  1359  000F08  6E07               	movwf	??___xxtofl^0,c
  1360  000F0A  0E00               	movlw	0
  1361  000F0C  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  1362  000F0E  6E08               	movwf	(??___xxtofl+1)^0,c
  1363  000F10  0E00               	movlw	0
  1364  000F12  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  1365  000F14  6E09               	movwf	(??___xxtofl+2)^0,c
  1366  000F16  0EFE               	movlw	254
  1367  000F18  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1368  000F1A  6E0A               	movwf	(??___xxtofl+3)^0,c
  1369  000F1C  5007               	movf	??___xxtofl^0,w,c
  1370  000F1E  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1371  000F20  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1372  000F22  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1373  000F24  A4D8               	btfss	status,2,c
  1374  000F26  EF97  F007         	goto	u1061
  1375  000F2A  EF99  F007         	goto	u1060
  1376  000F2E                     u1061:
  1377  000F2E  EF7C  F007         	goto	l1952
  1378  000F32                     u1060:
  1379  000F32  EFA7  F007         	goto	l889
  1380  000F36                     l1956:
  1381  000F36  2A0C               	incf	___xxtofl@exp^0,f,c
  1382  000F38  0E01               	movlw	1
  1383  000F3A  260D               	addwf	___xxtofl@arg^0,f,c
  1384  000F3C  0E00               	movlw	0
  1385  000F3E  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  1386  000F40  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  1387  000F42  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  1388  000F44  90D8               	bcf	status,0,c
  1389  000F46  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  1390  000F48  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  1391  000F4A  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  1392  000F4C  320D               	rrcf	___xxtofl@arg^0,f,c
  1393  000F4E                     l889:
  1394  000F4E  0E00               	movlw	0
  1395  000F50  140D               	andwf	___xxtofl@arg^0,w,c
  1396  000F52  6E07               	movwf	??___xxtofl^0,c
  1397  000F54  0E00               	movlw	0
  1398  000F56  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  1399  000F58  6E08               	movwf	(??___xxtofl+1)^0,c
  1400  000F5A  0E00               	movlw	0
  1401  000F5C  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  1402  000F5E  6E09               	movwf	(??___xxtofl+2)^0,c
  1403  000F60  0EFF               	movlw	255
  1404  000F62  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  1405  000F64  6E0A               	movwf	(??___xxtofl+3)^0,c
  1406  000F66  5007               	movf	??___xxtofl^0,w,c
  1407  000F68  1008               	iorwf	(??___xxtofl+1)^0,w,c
  1408  000F6A  1009               	iorwf	(??___xxtofl+2)^0,w,c
  1409  000F6C  100A               	iorwf	(??___xxtofl+3)^0,w,c
  1410  000F6E  A4D8               	btfss	status,2,c
  1411  000F70  EFBC  F007         	goto	u1071
  1412  000F74  EFBE  F007         	goto	u1070
  1413  000F78                     u1071:
  1414  000F78  EF9B  F007         	goto	l1956
  1415  000F7C                     u1070:
  1416  000F7C  EFC6  F007         	goto	l1964
  1417  000F80                     l1962:
  1418  000F80  060C               	decf	___xxtofl@exp^0,f,c
  1419  000F82  90D8               	bcf	status,0,c
  1420  000F84  360D               	rlcf	___xxtofl@arg^0,f,c
  1421  000F86  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  1422  000F88  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  1423  000F8A  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  1424  000F8C                     l1964:
  1425  000F8C  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  1426  000F8E  EFCB  F007         	goto	u1081
  1427  000F92  EFCD  F007         	goto	u1080
  1428  000F96                     u1081:
  1429  000F96  EFD5  F007         	goto	l896
  1430  000F9A                     u1080:
  1431  000F9A  0E02               	movlw	2
  1432  000F9C  600C               	cpfslt	___xxtofl@exp^0,c
  1433  000F9E  EFD3  F007         	goto	u1091
  1434  000FA2  EFD5  F007         	goto	u1090
  1435  000FA6                     u1091:
  1436  000FA6  EFC0  F007         	goto	l1962
  1437  000FAA                     u1090:
  1438  000FAA                     l896:
  1439  000FAA  B00C               	btfsc	___xxtofl@exp^0,0,c
  1440  000FAC  EFDA  F007         	goto	u1101
  1441  000FB0  EFDC  F007         	goto	u1100
  1442  000FB4                     u1101:
  1443  000FB4  EFDD  F007         	goto	l1970
  1444  000FB8                     u1100:
  1445  000FB8  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  1446  000FBA                     l1970:
  1447  000FBA  90D8               	bcf	status,0,c
  1448  000FBC  320C               	rrcf	___xxtofl@exp^0,f,c
  1449  000FBE  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  1450  000FC2  6A08               	clrf	(??___xxtofl+1)^0,c
  1451  000FC4  6A09               	clrf	(??___xxtofl+2)^0,c
  1452  000FC6  6A0A               	clrf	(??___xxtofl+3)^0,c
  1453  000FC8  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  1454  000FCC  6A09               	clrf	(??___xxtofl+2)^0,c
  1455  000FCE  6A08               	clrf	(??___xxtofl+1)^0,c
  1456  000FD0  6A07               	clrf	??___xxtofl^0,c
  1457  000FD2  5007               	movf	??___xxtofl^0,w,c
  1458  000FD4  120D               	iorwf	___xxtofl@arg^0,f,c
  1459  000FD6  5008               	movf	(??___xxtofl+1)^0,w,c
  1460  000FD8  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  1461  000FDA  5009               	movf	(??___xxtofl+2)^0,w,c
  1462  000FDC  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  1463  000FDE  500A               	movf	(??___xxtofl+3)^0,w,c
  1464  000FE0  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  1465  000FE2  500B               	movf	___xxtofl@sign^0,w,c
  1466  000FE4  B4D8               	btfsc	status,2,c
  1467  000FE6  EFF7  F007         	goto	u1111
  1468  000FEA  EFF9  F007         	goto	u1110
  1469  000FEE                     u1111:
  1470  000FEE  EF01  F008         	goto	l1980
  1471  000FF2                     u1110:
  1472  000FF2  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  1473  000FF4  EF00  F008         	goto	u1120
  1474  000FF8  EFFE  F007         	goto	u1121
  1475  000FFC                     u1121:
  1476  000FFC  EF01  F008         	goto	l1980
  1477  001000                     u1120:
  1478  001000  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  1479  001002                     l1980:
  1480  001002  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  1481  001006  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  1482  00100A  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  1483  00100E  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  1484  001012                     l885:
  1485  001012  0012               	return		;funcret
  1486  001014                     __end_of___xxtofl:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function ___lwmod *****************
  1490 ;; Defined at:
  1491 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  dividend        2    2[COMRAM] unsigned int 
  1494 ;;  divisor         2    4[COMRAM] unsigned int 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  counter         1    6[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  2    2[COMRAM] unsigned int 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1506 ;;      Params:         4       0       0       0       0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1509 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1510 ;;Total ram usage:        5 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text9
  1521  00127C                     __ptext9:
  1522                           	callstack 0
  1523  00127C                     ___lwmod:
  1524                           	callstack 29
  1525  00127C  5005               	movf	___lwmod@divisor^0,w,c
  1526  00127E  1006               	iorwf	(___lwmod@divisor+1)^0,w,c
  1527  001280  B4D8               	btfsc	status,2,c
  1528  001282  EF45  F009         	goto	u1001
  1529  001286  EF47  F009         	goto	u1000
  1530  00128A                     u1001:
  1531  00128A  EF6B  F009         	goto	l728
  1532  00128E                     u1000:
  1533  00128E  0E01               	movlw	1
  1534  001290  6E07               	movwf	___lwmod@counter^0,c
  1535  001292  EF4F  F009         	goto	l1928
  1536  001296                     l1926:
  1537  001296  90D8               	bcf	status,0,c
  1538  001298  3605               	rlcf	___lwmod@divisor^0,f,c
  1539  00129A  3606               	rlcf	(___lwmod@divisor+1)^0,f,c
  1540  00129C  2A07               	incf	___lwmod@counter^0,f,c
  1541  00129E                     l1928:
  1542  00129E  AE06               	btfss	(___lwmod@divisor+1)^0,7,c
  1543  0012A0  EF54  F009         	goto	u1011
  1544  0012A4  EF56  F009         	goto	u1010
  1545  0012A8                     u1011:
  1546  0012A8  EF4B  F009         	goto	l1926
  1547  0012AC                     u1010:
  1548  0012AC                     l1930:
  1549  0012AC  5005               	movf	___lwmod@divisor^0,w,c
  1550  0012AE  5C03               	subwf	___lwmod@dividend^0,w,c
  1551  0012B0  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1552  0012B2  5804               	subwfb	(___lwmod@dividend+1)^0,w,c
  1553  0012B4  A0D8               	btfss	status,0,c
  1554  0012B6  EF5F  F009         	goto	u1021
  1555  0012BA  EF61  F009         	goto	u1020
  1556  0012BE                     u1021:
  1557  0012BE  EF65  F009         	goto	l1934
  1558  0012C2                     u1020:
  1559  0012C2  5005               	movf	___lwmod@divisor^0,w,c
  1560  0012C4  5E03               	subwf	___lwmod@dividend^0,f,c
  1561  0012C6  5006               	movf	(___lwmod@divisor+1)^0,w,c
  1562  0012C8  5A04               	subwfb	(___lwmod@dividend+1)^0,f,c
  1563  0012CA                     l1934:
  1564  0012CA  90D8               	bcf	status,0,c
  1565  0012CC  3206               	rrcf	(___lwmod@divisor+1)^0,f,c
  1566  0012CE  3205               	rrcf	___lwmod@divisor^0,f,c
  1567  0012D0  2E07               	decfsz	___lwmod@counter^0,f,c
  1568  0012D2  EF56  F009         	goto	l1930
  1569  0012D6                     l728:
  1570  0012D6  C003  F003         	movff	___lwmod@dividend,?___lwmod
  1571  0012DA  C004  F004         	movff	___lwmod@dividend+1,?___lwmod+1
  1572  0012DE  0012               	return		;funcret
  1573  0012E0                     __end_of___lwmod:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function ___lwdiv *****************
  1577 ;; Defined at:
  1578 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  dividend        2    7[COMRAM] unsigned int 
  1581 ;;  divisor         2    9[COMRAM] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  quotient        2   11[COMRAM] unsigned int 
  1584 ;;  counter         1   13[COMRAM] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    7[COMRAM] unsigned int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         4       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        7 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text10
  1609  001196                     __ptext10:
  1610                           	callstack 0
  1611  001196                     ___lwdiv:
  1612                           	callstack 29
  1613  001196  0E00               	movlw	0
  1614  001198  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  1615  00119A  0E00               	movlw	0
  1616  00119C  6E0C               	movwf	___lwdiv@quotient^0,c
  1617  00119E  500A               	movf	___lwdiv@divisor^0,w,c
  1618  0011A0  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1619  0011A2  B4D8               	btfsc	status,2,c
  1620  0011A4  EFD6  F008         	goto	u971
  1621  0011A8  EFD8  F008         	goto	u970
  1622  0011AC                     u971:
  1623  0011AC  EF00  F009         	goto	l718
  1624  0011B0                     u970:
  1625  0011B0  0E01               	movlw	1
  1626  0011B2  6E0E               	movwf	___lwdiv@counter^0,c
  1627  0011B4  EFE0  F008         	goto	l1908
  1628  0011B8                     l1906:
  1629  0011B8  90D8               	bcf	status,0,c
  1630  0011BA  360A               	rlcf	___lwdiv@divisor^0,f,c
  1631  0011BC  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1632  0011BE  2A0E               	incf	___lwdiv@counter^0,f,c
  1633  0011C0                     l1908:
  1634  0011C0  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
  1635  0011C2  EFE5  F008         	goto	u981
  1636  0011C6  EFE7  F008         	goto	u980
  1637  0011CA                     u981:
  1638  0011CA  EFDC  F008         	goto	l1906
  1639  0011CE                     u980:
  1640  0011CE                     l1910:
  1641  0011CE  90D8               	bcf	status,0,c
  1642  0011D0  360C               	rlcf	___lwdiv@quotient^0,f,c
  1643  0011D2  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1644  0011D4  500A               	movf	___lwdiv@divisor^0,w,c
  1645  0011D6  5C08               	subwf	___lwdiv@dividend^0,w,c
  1646  0011D8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1647  0011DA  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1648  0011DC  A0D8               	btfss	status,0,c
  1649  0011DE  EFF3  F008         	goto	u991
  1650  0011E2  EFF5  F008         	goto	u990
  1651  0011E6                     u991:
  1652  0011E6  EFFA  F008         	goto	l1918
  1653  0011EA                     u990:
  1654  0011EA  500A               	movf	___lwdiv@divisor^0,w,c
  1655  0011EC  5E08               	subwf	___lwdiv@dividend^0,f,c
  1656  0011EE  500B               	movf	(___lwdiv@divisor+1)^0,w,c
  1657  0011F0  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1658  0011F2  800C               	bsf	___lwdiv@quotient^0,0,c
  1659  0011F4                     l1918:
  1660  0011F4  90D8               	bcf	status,0,c
  1661  0011F6  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1662  0011F8  320A               	rrcf	___lwdiv@divisor^0,f,c
  1663  0011FA  2E0E               	decfsz	___lwdiv@counter^0,f,c
  1664  0011FC  EFE7  F008         	goto	l1910
  1665  001200                     l718:
  1666  001200  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
  1667  001204  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1668  001208  0012               	return		;funcret
  1669  00120A                     __end_of___lwdiv:
  1670                           	callstack 0
  1671                           
  1672 ;; *************** function ___fltol *****************
  1673 ;; Defined at:
  1674 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  f1              4    2[COMRAM] unsigned int 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  exp1            1   11[COMRAM] unsigned char 
  1679 ;;  sign1           1   10[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  4    2[COMRAM] long 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1689 ;;      Params:         4       0       0       0       0       0       0       0       0
  1690 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1691 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1692 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1693 ;;Total ram usage:       10 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text11
  1704  001014                     __ptext11:
  1705                           	callstack 0
  1706  001014                     ___fltol:
  1707                           	callstack 29
  1708  001014  3405               	rlcf	(___fltol@f1+2)^0,w,c
  1709  001016  3406               	rlcf	(___fltol@f1+3)^0,w,c
  1710  001018  6E0C               	movwf	___fltol@exp1^0,c
  1711  00101A  500C               	movf	___fltol@exp1^0,w,c
  1712  00101C  A4D8               	btfss	status,2,c
  1713  00101E  EF13  F008         	goto	u901
  1714  001022  EF15  F008         	goto	u900
  1715  001026                     u901:
  1716  001026  EF1F  F008         	goto	l1862
  1717  00102A                     u900:
  1718  00102A                     l1858:
  1719  00102A  0E00               	movlw	0
  1720  00102C  6E03               	movwf	?___fltol^0,c
  1721  00102E  0E00               	movlw	0
  1722  001030  6E04               	movwf	(?___fltol+1)^0,c
  1723  001032  0E00               	movlw	0
  1724  001034  6E05               	movwf	(?___fltol+2)^0,c
  1725  001036  0E00               	movlw	0
  1726  001038  6E06               	movwf	(?___fltol+3)^0,c
  1727  00103A  EF8C  F008         	goto	l524
  1728  00103E                     l1862:
  1729  00103E  C003  F007         	movff	___fltol@f1,??___fltol
  1730  001042  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  1731  001046  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  1732  00104A  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  1733  00104E  0E20               	movlw	32
  1734  001050  EF2F  F008         	goto	u910
  1735  001054                     u915:
  1736  001054  90D8               	bcf	status,0,c
  1737  001056  320A               	rrcf	(??___fltol+3)^0,f,c
  1738  001058  3209               	rrcf	(??___fltol+2)^0,f,c
  1739  00105A  3208               	rrcf	(??___fltol+1)^0,f,c
  1740  00105C  3207               	rrcf	??___fltol^0,f,c
  1741  00105E                     u910:
  1742  00105E  2EE8               	decfsz	wreg,f,c
  1743  001060  EF2A  F008         	goto	u915
  1744  001064  5007               	movf	??___fltol^0,w,c
  1745  001066  6E0B               	movwf	___fltol@sign1^0,c
  1746  001068  8E05               	bsf	(___fltol@f1+2)^0,7,c
  1747  00106A  0EFF               	movlw	255
  1748  00106C  1603               	andwf	___fltol@f1^0,f,c
  1749  00106E  0EFF               	movlw	255
  1750  001070  1604               	andwf	(___fltol@f1+1)^0,f,c
  1751  001072  0EFF               	movlw	255
  1752  001074  1605               	andwf	(___fltol@f1+2)^0,f,c
  1753  001076  0E00               	movlw	0
  1754  001078  1606               	andwf	(___fltol@f1+3)^0,f,c
  1755  00107A  0E96               	movlw	150
  1756  00107C  5E0C               	subwf	___fltol@exp1^0,f,c
  1757  00107E  BE0C               	btfsc	___fltol@exp1^0,7,c
  1758  001080  EF46  F008         	goto	u920
  1759  001084  EF44  F008         	goto	u921
  1760  001088                     u921:
  1761  001088  EF5C  F008         	goto	l1882
  1762  00108C                     u920:
  1763  00108C  500C               	movf	___fltol@exp1^0,w,c
  1764  00108E  0A80               	xorlw	128
  1765  001090  0F97               	addlw	151
  1766  001092  B0D8               	btfsc	status,0,c
  1767  001094  EF4E  F008         	goto	u931
  1768  001098  EF50  F008         	goto	u930
  1769  00109C                     u931:
  1770  00109C  EF52  F008         	goto	l1878
  1771  0010A0                     u930:
  1772  0010A0  EF15  F008         	goto	l1858
  1773  0010A4                     l1878:
  1774  0010A4  90D8               	bcf	status,0,c
  1775  0010A6  3206               	rrcf	(___fltol@f1+3)^0,f,c
  1776  0010A8  3205               	rrcf	(___fltol@f1+2)^0,f,c
  1777  0010AA  3204               	rrcf	(___fltol@f1+1)^0,f,c
  1778  0010AC  3203               	rrcf	___fltol@f1^0,f,c
  1779  0010AE  3E0C               	incfsz	___fltol@exp1^0,f,c
  1780  0010B0  EF52  F008         	goto	l1878
  1781  0010B4  EF74  F008         	goto	l1892
  1782  0010B8                     l1882:
  1783  0010B8  0E1F               	movlw	31
  1784  0010BA  640C               	cpfsgt	___fltol@exp1^0,c
  1785  0010BC  EF62  F008         	goto	u941
  1786  0010C0  EF64  F008         	goto	u940
  1787  0010C4                     u941:
  1788  0010C4  EF6C  F008         	goto	l1890
  1789  0010C8                     u940:
  1790  0010C8  EF15  F008         	goto	l1858
  1791  0010CC                     l1888:
  1792  0010CC  90D8               	bcf	status,0,c
  1793  0010CE  3603               	rlcf	___fltol@f1^0,f,c
  1794  0010D0  3604               	rlcf	(___fltol@f1+1)^0,f,c
  1795  0010D2  3605               	rlcf	(___fltol@f1+2)^0,f,c
  1796  0010D4  3606               	rlcf	(___fltol@f1+3)^0,f,c
  1797  0010D6  060C               	decf	___fltol@exp1^0,f,c
  1798  0010D8                     l1890:
  1799  0010D8  500C               	movf	___fltol@exp1^0,w,c
  1800  0010DA  A4D8               	btfss	status,2,c
  1801  0010DC  EF72  F008         	goto	u951
  1802  0010E0  EF74  F008         	goto	u950
  1803  0010E4                     u951:
  1804  0010E4  EF66  F008         	goto	l1888
  1805  0010E8                     u950:
  1806  0010E8                     l1892:
  1807  0010E8  500B               	movf	___fltol@sign1^0,w,c
  1808  0010EA  B4D8               	btfsc	status,2,c
  1809  0010EC  EF7A  F008         	goto	u961
  1810  0010F0  EF7C  F008         	goto	u960
  1811  0010F4                     u961:
  1812  0010F4  EF84  F008         	goto	l1896
  1813  0010F8                     u960:
  1814  0010F8  1E06               	comf	(___fltol@f1+3)^0,f,c
  1815  0010FA  1E05               	comf	(___fltol@f1+2)^0,f,c
  1816  0010FC  1E04               	comf	(___fltol@f1+1)^0,f,c
  1817  0010FE  6C03               	negf	___fltol@f1^0,c
  1818  001100  0E00               	movlw	0
  1819  001102  2204               	addwfc	(___fltol@f1+1)^0,f,c
  1820  001104  2205               	addwfc	(___fltol@f1+2)^0,f,c
  1821  001106  2206               	addwfc	(___fltol@f1+3)^0,f,c
  1822  001108                     l1896:
  1823  001108  C003  F003         	movff	___fltol@f1,?___fltol
  1824  00110C  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  1825  001110  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  1826  001114  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  1827  001118                     l524:
  1828  001118  0012               	return		;funcret
  1829  00111A                     __end_of___fltol:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function ___flmul *****************
  1833 ;; Defined at:
  1834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  b               4    2[COMRAM] long 
  1837 ;;  a               4    6[COMRAM] long 
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;  prod            4   21[COMRAM] struct .
  1840 ;;  grs             4   15[COMRAM] unsigned long 
  1841 ;;  temp            2   25[COMRAM] struct .
  1842 ;;  bexp            1   20[COMRAM] unsigned char 
  1843 ;;  aexp            1   19[COMRAM] unsigned char 
  1844 ;;  sign            1   14[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  4    2[COMRAM] unsigned char 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, prodl, prodh
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         8       0       0       0       0       0       0       0       0
  1855 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1857 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:       25 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text12
  1869  000824                     __ptext12:
  1870                           	callstack 0
  1871  000824                     ___flmul:
  1872                           	callstack 29
  1873  000824  5006               	movf	(___flmul@b+3)^0,w,c
  1874  000826  0B80               	andlw	128
  1875  000828  6E0F               	movwf	___flmul@sign^0,c
  1876  00082A  5006               	movf	(___flmul@b+3)^0,w,c
  1877  00082C  2406               	addwf	(___flmul@b+3)^0,w,c
  1878  00082E  6E15               	movwf	___flmul@bexp^0,c
  1879  000830  AE05               	btfss	(___flmul@b+2)^0,7,c
  1880  000832  EF1D  F004         	goto	u711
  1881  000836  EF1F  F004         	goto	u710
  1882  00083A                     u711:
  1883  00083A  EF20  F004         	goto	l1732
  1884  00083E                     u710:
  1885  00083E  8015               	bsf	___flmul@bexp^0,0,c
  1886  000840                     l1732:
  1887  000840  5015               	movf	___flmul@bexp^0,w,c
  1888  000842  B4D8               	btfsc	status,2,c
  1889  000844  EF26  F004         	goto	u721
  1890  000848  EF28  F004         	goto	u720
  1891  00084C                     u721:
  1892  00084C  EF3B  F004         	goto	l1740
  1893  000850                     u720:
  1894  000850  2815               	incf	___flmul@bexp^0,w,c
  1895  000852  A4D8               	btfss	status,2,c
  1896  000854  EF2E  F004         	goto	u731
  1897  000858  EF30  F004         	goto	u730
  1898  00085C                     u731:
  1899  00085C  EF38  F004         	goto	l1738
  1900  000860                     u730:
  1901  000860  0E00               	movlw	0
  1902  000862  6E03               	movwf	___flmul@b^0,c
  1903  000864  0E00               	movlw	0
  1904  000866  6E04               	movwf	(___flmul@b+1)^0,c
  1905  000868  0E00               	movlw	0
  1906  00086A  6E05               	movwf	(___flmul@b+2)^0,c
  1907  00086C  0E00               	movlw	0
  1908  00086E  6E06               	movwf	(___flmul@b+3)^0,c
  1909  000870                     l1738:
  1910  000870  8E05               	bsf	(___flmul@b+2)^0,7,c
  1911  000872  EF43  F004         	goto	l1742
  1912  000876                     l1740:
  1913  000876  0E00               	movlw	0
  1914  000878  6E03               	movwf	___flmul@b^0,c
  1915  00087A  0E00               	movlw	0
  1916  00087C  6E04               	movwf	(___flmul@b+1)^0,c
  1917  00087E  0E00               	movlw	0
  1918  000880  6E05               	movwf	(___flmul@b+2)^0,c
  1919  000882  0E00               	movlw	0
  1920  000884  6E06               	movwf	(___flmul@b+3)^0,c
  1921  000886                     l1742:
  1922  000886  500A               	movf	(___flmul@a+3)^0,w,c
  1923  000888  0B80               	andlw	128
  1924  00088A  1A0F               	xorwf	___flmul@sign^0,f,c
  1925  00088C  500A               	movf	(___flmul@a+3)^0,w,c
  1926  00088E  240A               	addwf	(___flmul@a+3)^0,w,c
  1927  000890  6E14               	movwf	___flmul@aexp^0,c
  1928  000892  AE09               	btfss	(___flmul@a+2)^0,7,c
  1929  000894  EF4E  F004         	goto	u741
  1930  000898  EF50  F004         	goto	u740
  1931  00089C                     u741:
  1932  00089C  EF51  F004         	goto	l1750
  1933  0008A0                     u740:
  1934  0008A0  8014               	bsf	___flmul@aexp^0,0,c
  1935  0008A2                     l1750:
  1936  0008A2  5014               	movf	___flmul@aexp^0,w,c
  1937  0008A4  B4D8               	btfsc	status,2,c
  1938  0008A6  EF57  F004         	goto	u751
  1939  0008AA  EF59  F004         	goto	u750
  1940  0008AE                     u751:
  1941  0008AE  EF6C  F004         	goto	l1758
  1942  0008B2                     u750:
  1943  0008B2  2814               	incf	___flmul@aexp^0,w,c
  1944  0008B4  A4D8               	btfss	status,2,c
  1945  0008B6  EF5F  F004         	goto	u761
  1946  0008BA  EF61  F004         	goto	u760
  1947  0008BE                     u761:
  1948  0008BE  EF69  F004         	goto	l1756
  1949  0008C2                     u760:
  1950  0008C2  0E00               	movlw	0
  1951  0008C4  6E07               	movwf	___flmul@a^0,c
  1952  0008C6  0E00               	movlw	0
  1953  0008C8  6E08               	movwf	(___flmul@a+1)^0,c
  1954  0008CA  0E00               	movlw	0
  1955  0008CC  6E09               	movwf	(___flmul@a+2)^0,c
  1956  0008CE  0E00               	movlw	0
  1957  0008D0  6E0A               	movwf	(___flmul@a+3)^0,c
  1958  0008D2                     l1756:
  1959  0008D2  8E09               	bsf	(___flmul@a+2)^0,7,c
  1960  0008D4  EF74  F004         	goto	l841
  1961  0008D8                     l1758:
  1962  0008D8  0E00               	movlw	0
  1963  0008DA  6E07               	movwf	___flmul@a^0,c
  1964  0008DC  0E00               	movlw	0
  1965  0008DE  6E08               	movwf	(___flmul@a+1)^0,c
  1966  0008E0  0E00               	movlw	0
  1967  0008E2  6E09               	movwf	(___flmul@a+2)^0,c
  1968  0008E4  0E00               	movlw	0
  1969  0008E6  6E0A               	movwf	(___flmul@a+3)^0,c
  1970  0008E8                     l841:
  1971  0008E8  5014               	movf	___flmul@aexp^0,w,c
  1972  0008EA  B4D8               	btfsc	status,2,c
  1973  0008EC  EF7A  F004         	goto	u771
  1974  0008F0  EF7C  F004         	goto	u770
  1975  0008F4                     u771:
  1976  0008F4  EF84  F004         	goto	l1762
  1977  0008F8                     u770:
  1978  0008F8  5015               	movf	___flmul@bexp^0,w,c
  1979  0008FA  A4D8               	btfss	status,2,c
  1980  0008FC  EF82  F004         	goto	u781
  1981  000900  EF84  F004         	goto	u780
  1982  000904                     u781:
  1983  000904  EF8E  F004         	goto	l1766
  1984  000908                     u780:
  1985  000908                     l1762:
  1986  000908  0E00               	movlw	0
  1987  00090A  6E03               	movwf	?___flmul^0,c
  1988  00090C  0E00               	movlw	0
  1989  00090E  6E04               	movwf	(?___flmul+1)^0,c
  1990  000910  0E00               	movlw	0
  1991  000912  6E05               	movwf	(?___flmul+2)^0,c
  1992  000914  0E00               	movlw	0
  1993  000916  6E06               	movwf	(?___flmul+3)^0,c
  1994  000918  EF26  F006         	goto	l845
  1995  00091C                     l1766:
  1996  00091C  5009               	movf	(___flmul@a+2)^0,w,c
  1997  00091E  0203               	mulwf	___flmul@b^0,c
  1998  000920  CFF3 F01A          	movff	prodl,___flmul@temp
  1999  000924  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2000  000928  501A               	movf	___flmul@temp^0,w,c
  2001  00092A  6E10               	movwf	___flmul@grs^0,c
  2002  00092C  6A11               	clrf	(___flmul@grs+1)^0,c
  2003  00092E  6A12               	clrf	(___flmul@grs+2)^0,c
  2004  000930  6A13               	clrf	(___flmul@grs+3)^0,c
  2005  000932  501B               	movf	(___flmul@temp+1)^0,w,c
  2006  000934  6E16               	movwf	___flmul@prod^0,c
  2007  000936  6A17               	clrf	(___flmul@prod+1)^0,c
  2008  000938  6A18               	clrf	(___flmul@prod+2)^0,c
  2009  00093A  6A19               	clrf	(___flmul@prod+3)^0,c
  2010  00093C  5008               	movf	(___flmul@a+1)^0,w,c
  2011  00093E  0204               	mulwf	(___flmul@b+1)^0,c
  2012  000940  CFF3 F01A          	movff	prodl,___flmul@temp
  2013  000944  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2014  000948  501A               	movf	___flmul@temp^0,w,c
  2015  00094A  2610               	addwf	___flmul@grs^0,f,c
  2016  00094C  0E00               	movlw	0
  2017  00094E  2211               	addwfc	(___flmul@grs+1)^0,f,c
  2018  000950  2212               	addwfc	(___flmul@grs+2)^0,f,c
  2019  000952  2213               	addwfc	(___flmul@grs+3)^0,f,c
  2020  000954  501B               	movf	(___flmul@temp+1)^0,w,c
  2021  000956  2616               	addwf	___flmul@prod^0,f,c
  2022  000958  0E00               	movlw	0
  2023  00095A  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2024  00095C  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2025  00095E  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2026  000960  5007               	movf	___flmul@a^0,w,c
  2027  000962  0205               	mulwf	(___flmul@b+2)^0,c
  2028  000964  CFF3 F01A          	movff	prodl,___flmul@temp
  2029  000968  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2030  00096C  501A               	movf	___flmul@temp^0,w,c
  2031  00096E  2610               	addwf	___flmul@grs^0,f,c
  2032  000970  0E00               	movlw	0
  2033  000972  2211               	addwfc	(___flmul@grs+1)^0,f,c
  2034  000974  2212               	addwfc	(___flmul@grs+2)^0,f,c
  2035  000976  2213               	addwfc	(___flmul@grs+3)^0,f,c
  2036  000978  501B               	movf	(___flmul@temp+1)^0,w,c
  2037  00097A  2616               	addwf	___flmul@prod^0,f,c
  2038  00097C  0E00               	movlw	0
  2039  00097E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2040  000980  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2041  000982  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2042  000984  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  2043  000988  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  2044  00098C  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  2045  000990  6A10               	clrf	___flmul@grs^0,c
  2046  000992  5007               	movf	___flmul@a^0,w,c
  2047  000994  0204               	mulwf	(___flmul@b+1)^0,c
  2048  000996  CFF3 F01A          	movff	prodl,___flmul@temp
  2049  00099A  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2050  00099E  501A               	movf	___flmul@temp^0,w,c
  2051  0009A0  2610               	addwf	___flmul@grs^0,f,c
  2052  0009A2  501B               	movf	(___flmul@temp+1)^0,w,c
  2053  0009A4  2211               	addwfc	(___flmul@grs+1)^0,f,c
  2054  0009A6  0E00               	movlw	0
  2055  0009A8  2212               	addwfc	(___flmul@grs+2)^0,f,c
  2056  0009AA  0E00               	movlw	0
  2057  0009AC  2213               	addwfc	(___flmul@grs+3)^0,f,c
  2058  0009AE  5008               	movf	(___flmul@a+1)^0,w,c
  2059  0009B0  0203               	mulwf	___flmul@b^0,c
  2060  0009B2  CFF3 F01A          	movff	prodl,___flmul@temp
  2061  0009B6  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2062  0009BA  501A               	movf	___flmul@temp^0,w,c
  2063  0009BC  2610               	addwf	___flmul@grs^0,f,c
  2064  0009BE  501B               	movf	(___flmul@temp+1)^0,w,c
  2065  0009C0  2211               	addwfc	(___flmul@grs+1)^0,f,c
  2066  0009C2  0E00               	movlw	0
  2067  0009C4  2212               	addwfc	(___flmul@grs+2)^0,f,c
  2068  0009C6  0E00               	movlw	0
  2069  0009C8  2213               	addwfc	(___flmul@grs+3)^0,f,c
  2070  0009CA  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  2071  0009CE  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  2072  0009D2  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  2073  0009D6  6A10               	clrf	___flmul@grs^0,c
  2074  0009D8  5007               	movf	___flmul@a^0,w,c
  2075  0009DA  0203               	mulwf	___flmul@b^0,c
  2076  0009DC  CFF3 F01A          	movff	prodl,___flmul@temp
  2077  0009E0  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2078  0009E4  501A               	movf	___flmul@temp^0,w,c
  2079  0009E6  2610               	addwf	___flmul@grs^0,f,c
  2080  0009E8  501B               	movf	(___flmul@temp+1)^0,w,c
  2081  0009EA  2211               	addwfc	(___flmul@grs+1)^0,f,c
  2082  0009EC  0E00               	movlw	0
  2083  0009EE  2212               	addwfc	(___flmul@grs+2)^0,f,c
  2084  0009F0  0E00               	movlw	0
  2085  0009F2  2213               	addwfc	(___flmul@grs+3)^0,f,c
  2086  0009F4  5009               	movf	(___flmul@a+2)^0,w,c
  2087  0009F6  0204               	mulwf	(___flmul@b+1)^0,c
  2088  0009F8  CFF3 F01A          	movff	prodl,___flmul@temp
  2089  0009FC  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2090  000A00  501A               	movf	___flmul@temp^0,w,c
  2091  000A02  2616               	addwf	___flmul@prod^0,f,c
  2092  000A04  501B               	movf	(___flmul@temp+1)^0,w,c
  2093  000A06  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2094  000A08  0E00               	movlw	0
  2095  000A0A  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2096  000A0C  0E00               	movlw	0
  2097  000A0E  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2098  000A10  5008               	movf	(___flmul@a+1)^0,w,c
  2099  000A12  0205               	mulwf	(___flmul@b+2)^0,c
  2100  000A14  CFF3 F01A          	movff	prodl,___flmul@temp
  2101  000A18  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2102  000A1C  501A               	movf	___flmul@temp^0,w,c
  2103  000A1E  2616               	addwf	___flmul@prod^0,f,c
  2104  000A20  501B               	movf	(___flmul@temp+1)^0,w,c
  2105  000A22  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2106  000A24  0E00               	movlw	0
  2107  000A26  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2108  000A28  0E00               	movlw	0
  2109  000A2A  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2110  000A2C  5009               	movf	(___flmul@a+2)^0,w,c
  2111  000A2E  0205               	mulwf	(___flmul@b+2)^0,c
  2112  000A30  CFF3 F01A          	movff	prodl,___flmul@temp
  2113  000A34  CFF4 F01B          	movff	prodh,___flmul@temp+1
  2114  000A38  501A               	movf	___flmul@temp^0,w,c
  2115  000A3A  6E0B               	movwf	??___flmul^0,c
  2116  000A3C  501B               	movf	(___flmul@temp+1)^0,w,c
  2117  000A3E  6E0C               	movwf	(??___flmul+1)^0,c
  2118  000A40  6A0D               	clrf	(??___flmul+2)^0,c
  2119  000A42  6A0E               	clrf	(??___flmul+3)^0,c
  2120  000A44  C00D  F00E         	movff	??___flmul+2,??___flmul+3
  2121  000A48  C00C  F00D         	movff	??___flmul+1,??___flmul+2
  2122  000A4C  C00B  F00C         	movff	??___flmul,??___flmul+1
  2123  000A50  6A0B               	clrf	??___flmul^0,c
  2124  000A52  500B               	movf	??___flmul^0,w,c
  2125  000A54  2616               	addwf	___flmul@prod^0,f,c
  2126  000A56  500C               	movf	(??___flmul+1)^0,w,c
  2127  000A58  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2128  000A5A  500D               	movf	(??___flmul+2)^0,w,c
  2129  000A5C  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2130  000A5E  500E               	movf	(??___flmul+3)^0,w,c
  2131  000A60  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2132  000A62  C010  F00B         	movff	___flmul@grs,??___flmul
  2133  000A66  C011  F00C         	movff	___flmul@grs+1,??___flmul+1
  2134  000A6A  C012  F00D         	movff	___flmul@grs+2,??___flmul+2
  2135  000A6E  C013  F00E         	movff	___flmul@grs+3,??___flmul+3
  2136  000A72  0E19               	movlw	25
  2137  000A74  EF41  F005         	goto	u790
  2138  000A78                     u795:
  2139  000A78  90D8               	bcf	status,0,c
  2140  000A7A  320E               	rrcf	(??___flmul+3)^0,f,c
  2141  000A7C  320D               	rrcf	(??___flmul+2)^0,f,c
  2142  000A7E  320C               	rrcf	(??___flmul+1)^0,f,c
  2143  000A80  320B               	rrcf	??___flmul^0,f,c
  2144  000A82                     u790:
  2145  000A82  2EE8               	decfsz	wreg,f,c
  2146  000A84  EF3C  F005         	goto	u795
  2147  000A88  500B               	movf	??___flmul^0,w,c
  2148  000A8A  2616               	addwf	___flmul@prod^0,f,c
  2149  000A8C  500C               	movf	(??___flmul+1)^0,w,c
  2150  000A8E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2151  000A90  500D               	movf	(??___flmul+2)^0,w,c
  2152  000A92  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2153  000A94  500E               	movf	(??___flmul+3)^0,w,c
  2154  000A96  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2155  000A98  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  2156  000A9C  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  2157  000AA0  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  2158  000AA4  6A10               	clrf	___flmul@grs^0,c
  2159  000AA6  5014               	movf	___flmul@aexp^0,w,c
  2160  000AA8  C015  F00B         	movff	___flmul@bexp,??___flmul
  2161  000AAC  6A0C               	clrf	(??___flmul+1)^0,c
  2162  000AAE  260B               	addwf	??___flmul^0,f,c
  2163  000AB0  0E00               	movlw	0
  2164  000AB2  220C               	addwfc	(??___flmul+1)^0,f,c
  2165  000AB4  0E82               	movlw	130
  2166  000AB6  240B               	addwf	??___flmul^0,w,c
  2167  000AB8  6E1A               	movwf	___flmul@temp^0,c
  2168  000ABA  0EFF               	movlw	255
  2169  000ABC  200C               	addwfc	(??___flmul+1)^0,w,c
  2170  000ABE  6E1B               	movwf	(___flmul@temp+1)^0,c
  2171  000AC0  EF77  F005         	goto	l1814
  2172  000AC4                     l1808:
  2173  000AC4  90D8               	bcf	status,0,c
  2174  000AC6  3616               	rlcf	___flmul@prod^0,f,c
  2175  000AC8  3617               	rlcf	(___flmul@prod+1)^0,f,c
  2176  000ACA  3618               	rlcf	(___flmul@prod+2)^0,f,c
  2177  000ACC  3619               	rlcf	(___flmul@prod+3)^0,f,c
  2178  000ACE  AE13               	btfss	(___flmul@grs+3)^0,7,c
  2179  000AD0  EF6C  F005         	goto	u801
  2180  000AD4  EF6E  F005         	goto	u800
  2181  000AD8                     u801:
  2182  000AD8  EF6F  F005         	goto	l848
  2183  000ADC                     u800:
  2184  000ADC  8016               	bsf	___flmul@prod^0,0,c
  2185  000ADE                     l848:
  2186  000ADE  90D8               	bcf	status,0,c
  2187  000AE0  3610               	rlcf	___flmul@grs^0,f,c
  2188  000AE2  3611               	rlcf	(___flmul@grs+1)^0,f,c
  2189  000AE4  3612               	rlcf	(___flmul@grs+2)^0,f,c
  2190  000AE6  3613               	rlcf	(___flmul@grs+3)^0,f,c
  2191  000AE8  061A               	decf	___flmul@temp^0,f,c
  2192  000AEA  A0D8               	btfss	status,0,c
  2193  000AEC  061B               	decf	(___flmul@temp+1)^0,f,c
  2194  000AEE                     l1814:
  2195  000AEE  AE18               	btfss	(___flmul@prod+2)^0,7,c
  2196  000AF0  EF7C  F005         	goto	u811
  2197  000AF4  EF7E  F005         	goto	u810
  2198  000AF8                     u811:
  2199  000AF8  EF62  F005         	goto	l1808
  2200  000AFC                     u810:
  2201  000AFC  0E00               	movlw	0
  2202  000AFE  6E14               	movwf	___flmul@aexp^0,c
  2203  000B00  AE13               	btfss	(___flmul@grs+3)^0,7,c
  2204  000B02  EF85  F005         	goto	u821
  2205  000B06  EF87  F005         	goto	u820
  2206  000B0A                     u821:
  2207  000B0A  EFAB  F005         	goto	l850
  2208  000B0E                     u820:
  2209  000B0E  0EFF               	movlw	255
  2210  000B10  1410               	andwf	___flmul@grs^0,w,c
  2211  000B12  6E0B               	movwf	??___flmul^0,c
  2212  000B14  0EFF               	movlw	255
  2213  000B16  1411               	andwf	(___flmul@grs+1)^0,w,c
  2214  000B18  6E0C               	movwf	(??___flmul+1)^0,c
  2215  000B1A  0EFF               	movlw	255
  2216  000B1C  1412               	andwf	(___flmul@grs+2)^0,w,c
  2217  000B1E  6E0D               	movwf	(??___flmul+2)^0,c
  2218  000B20  0E7F               	movlw	127
  2219  000B22  1413               	andwf	(___flmul@grs+3)^0,w,c
  2220  000B24  6E0E               	movwf	(??___flmul+3)^0,c
  2221  000B26  500B               	movf	??___flmul^0,w,c
  2222  000B28  100C               	iorwf	(??___flmul+1)^0,w,c
  2223  000B2A  100D               	iorwf	(??___flmul+2)^0,w,c
  2224  000B2C  100E               	iorwf	(??___flmul+3)^0,w,c
  2225  000B2E  B4D8               	btfsc	status,2,c
  2226  000B30  EF9C  F005         	goto	u831
  2227  000B34  EF9E  F005         	goto	u830
  2228  000B38                     u831:
  2229  000B38  EFA2  F005         	goto	l851
  2230  000B3C                     u830:
  2231  000B3C                     l1822:
  2232  000B3C  0E01               	movlw	1
  2233  000B3E  6E14               	movwf	___flmul@aexp^0,c
  2234  000B40  EFAB  F005         	goto	l850
  2235  000B44                     l851:
  2236  000B44  A016               	btfss	___flmul@prod^0,0,c
  2237  000B46  EFA7  F005         	goto	u841
  2238  000B4A  EFA9  F005         	goto	u840
  2239  000B4E                     u841:
  2240  000B4E  EFAB  F005         	goto	l850
  2241  000B52                     u840:
  2242  000B52  EF9E  F005         	goto	l1822
  2243  000B56                     l850:
  2244  000B56  5014               	movf	___flmul@aexp^0,w,c
  2245  000B58  B4D8               	btfsc	status,2,c
  2246  000B5A  EFB1  F005         	goto	u851
  2247  000B5E  EFB3  F005         	goto	u850
  2248  000B62                     u851:
  2249  000B62  EFD7  F005         	goto	l1834
  2250  000B66                     u850:
  2251  000B66  0E01               	movlw	1
  2252  000B68  2616               	addwf	___flmul@prod^0,f,c
  2253  000B6A  0E00               	movlw	0
  2254  000B6C  2217               	addwfc	(___flmul@prod+1)^0,f,c
  2255  000B6E  2218               	addwfc	(___flmul@prod+2)^0,f,c
  2256  000B70  2219               	addwfc	(___flmul@prod+3)^0,f,c
  2257  000B72  A019               	btfss	(___flmul@prod+3)^0,0,c
  2258  000B74  EFBE  F005         	goto	u861
  2259  000B78  EFC0  F005         	goto	u860
  2260  000B7C                     u861:
  2261  000B7C  EFD7  F005         	goto	l1834
  2262  000B80                     u860:
  2263  000B80  C016  F00B         	movff	___flmul@prod,??___flmul
  2264  000B84  C017  F00C         	movff	___flmul@prod+1,??___flmul+1
  2265  000B88  C018  F00D         	movff	___flmul@prod+2,??___flmul+2
  2266  000B8C  C019  F00E         	movff	___flmul@prod+3,??___flmul+3
  2267  000B90  340E               	rlcf	(??___flmul+3)^0,w,c
  2268  000B92  320E               	rrcf	(??___flmul+3)^0,f,c
  2269  000B94  320D               	rrcf	(??___flmul+2)^0,f,c
  2270  000B96  320C               	rrcf	(??___flmul+1)^0,f,c
  2271  000B98  320B               	rrcf	??___flmul^0,f,c
  2272  000B9A  C00B  F016         	movff	??___flmul,___flmul@prod
  2273  000B9E  C00C  F017         	movff	??___flmul+1,___flmul@prod+1
  2274  000BA2  C00D  F018         	movff	??___flmul+2,___flmul@prod+2
  2275  000BA6  C00E  F019         	movff	??___flmul+3,___flmul@prod+3
  2276  000BAA  4A1A               	infsnz	___flmul@temp^0,f,c
  2277  000BAC  2A1B               	incf	(___flmul@temp+1)^0,f,c
  2278  000BAE                     l1834:
  2279  000BAE  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  2280  000BB0  EFE2  F005         	goto	u871
  2281  000BB4  501B               	movf	(___flmul@temp+1)^0,w,c
  2282  000BB6  E108               	bnz	u870
  2283  000BB8  281A               	incf	___flmul@temp^0,w,c
  2284  000BBA  A0D8               	btfss	status,0,c
  2285  000BBC  EFE2  F005         	goto	u871
  2286  000BC0  EFE4  F005         	goto	u870
  2287  000BC4                     u871:
  2288  000BC4  EFEE  F005         	goto	l1838
  2289  000BC8                     u870:
  2290  000BC8  0E00               	movlw	0
  2291  000BCA  6E16               	movwf	___flmul@prod^0,c
  2292  000BCC  0E00               	movlw	0
  2293  000BCE  6E17               	movwf	(___flmul@prod+1)^0,c
  2294  000BD0  0E80               	movlw	128
  2295  000BD2  6E18               	movwf	(___flmul@prod+2)^0,c
  2296  000BD4  0E7F               	movlw	127
  2297  000BD6  6E19               	movwf	(___flmul@prod+3)^0,c
  2298  000BD8  EF1C  F006         	goto	l1850
  2299  000BDC                     l1838:
  2300  000BDC  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  2301  000BDE  EFFB  F005         	goto	u880
  2302  000BE2  501B               	movf	(___flmul@temp+1)^0,w,c
  2303  000BE4  E106               	bnz	u881
  2304  000BE6  041A               	decf	___flmul@temp^0,w,c
  2305  000BE8  B0D8               	btfsc	status,0,c
  2306  000BEA  EFF9  F005         	goto	u881
  2307  000BEE  EFFB  F005         	goto	u880
  2308  000BF2                     u881:
  2309  000BF2  EF07  F006         	goto	l858
  2310  000BF6                     u880:
  2311  000BF6  0E00               	movlw	0
  2312  000BF8  6E16               	movwf	___flmul@prod^0,c
  2313  000BFA  0E00               	movlw	0
  2314  000BFC  6E17               	movwf	(___flmul@prod+1)^0,c
  2315  000BFE  0E00               	movlw	0
  2316  000C00  6E18               	movwf	(___flmul@prod+2)^0,c
  2317  000C02  0E00               	movlw	0
  2318  000C04  6E19               	movwf	(___flmul@prod+3)^0,c
  2319  000C06  0E00               	movlw	0
  2320  000C08  6E0F               	movwf	___flmul@sign^0,c
  2321  000C0A  EF1C  F006         	goto	l1850
  2322  000C0E                     l858:
  2323  000C0E  C01A  F015         	movff	___flmul@temp,___flmul@bexp
  2324  000C12  0EFF               	movlw	255
  2325  000C14  1616               	andwf	___flmul@prod^0,f,c
  2326  000C16  0EFF               	movlw	255
  2327  000C18  1617               	andwf	(___flmul@prod+1)^0,f,c
  2328  000C1A  0E7F               	movlw	127
  2329  000C1C  1618               	andwf	(___flmul@prod+2)^0,f,c
  2330  000C1E  0E00               	movlw	0
  2331  000C20  1619               	andwf	(___flmul@prod+3)^0,f,c
  2332  000C22  A015               	btfss	___flmul@bexp^0,0,c
  2333  000C24  EF16  F006         	goto	u891
  2334  000C28  EF18  F006         	goto	u890
  2335  000C2C                     u891:
  2336  000C2C  EF19  F006         	goto	l1848
  2337  000C30                     u890:
  2338  000C30  8E18               	bsf	(___flmul@prod+2)^0,7,c
  2339  000C32                     l1848:
  2340  000C32  90D8               	bcf	status,0,c
  2341  000C34  3015               	rrcf	___flmul@bexp^0,w,c
  2342  000C36  6E19               	movwf	(___flmul@prod+3)^0,c
  2343  000C38                     l1850:
  2344  000C38  500F               	movf	___flmul@sign^0,w,c
  2345  000C3A  1219               	iorwf	(___flmul@prod+3)^0,f,c
  2346  000C3C  C016  F003         	movff	___flmul@prod,?___flmul
  2347  000C40  C017  F004         	movff	___flmul@prod+1,?___flmul+1
  2348  000C44  C018  F005         	movff	___flmul@prod+2,?___flmul+2
  2349  000C48  C019  F006         	movff	___flmul@prod+3,?___flmul+3
  2350  000C4C                     l845:
  2351  000C4C  0012               	return		;funcret
  2352  000C4E                     __end_of___flmul:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _POS_CURSOR *****************
  2356 ;; Defined at:
  2357 ;;		line 6 in file "LCD.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  fila            1    wreg     unsigned char 
  2360 ;;  columna         1    5[COMRAM] unsigned char 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  fila            1    6[COMRAM] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         1       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 3
  2379 ;; This function calls:
  2380 ;;		_ENVIA_LCD_CMD
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;;		_vis_DHT11
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text13
  2388  00143A                     __ptext13:
  2389                           	callstack 0
  2390  00143A                     _POS_CURSOR:
  2391                           	callstack 27
  2392                           
  2393                           ;incstack = 0
  2394                           ;POS_CURSOR@fila stored from wreg
  2395  00143A  6E07               	movwf	POS_CURSOR@fila^0,c
  2396  00143C                     
  2397                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2398  00143C  0407               	decf	POS_CURSOR@fila^0,w,c
  2399  00143E  A4D8               	btfss	status,2,c
  2400  001440  EF24  F00A         	goto	u681
  2401  001444  EF26  F00A         	goto	u680
  2402  001448                     u681:
  2403  001448  EF2C  F00A         	goto	l1678
  2404  00144C                     u680:
  2405  00144C                     
  2406                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2407  00144C  5006               	movf	POS_CURSOR@columna^0,w,c
  2408  00144E  0F80               	addlw	128
  2409  001450  EC3A  F00A         	call	_ENVIA_LCD_CMD
  2410                           
  2411                           ;LCD.c: 11:  }
  2412  001454  EF39  F00A         	goto	l24
  2413  001458                     l1678:
  2414  001458  0E02               	movlw	2
  2415  00145A  1807               	xorwf	POS_CURSOR@fila^0,w,c
  2416  00145C  A4D8               	btfss	status,2,c
  2417  00145E  EF33  F00A         	goto	u691
  2418  001462  EF35  F00A         	goto	u690
  2419  001466                     u691:
  2420  001466  EF39  F00A         	goto	l24
  2421  00146A                     u690:
  2422  00146A                     
  2423                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2424  00146A  5006               	movf	POS_CURSOR@columna^0,w,c
  2425  00146C  0FC0               	addlw	192
  2426  00146E  EC3A  F00A         	call	_ENVIA_LCD_CMD
  2427  001472                     l24:
  2428  001472  0012               	return		;funcret
  2429  001474                     __end_of_POS_CURSOR:
  2430                           	callstack 0
  2431                           
  2432 ;; *************** function _ENVIA_LCD_CMD *****************
  2433 ;; Defined at:
  2434 ;;		line 104 in file "LCD.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  dato            1    wreg     unsigned char 
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  dato            1    3[COMRAM] unsigned char 
  2439 ;;  aux             1    4[COMRAM] unsigned char 
  2440 ;; Return value:  Size  Location     Type
  2441 ;;                  1    wreg      void 
  2442 ;; Registers used:
  2443 ;;		wreg, status,2, status,0, cstack
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0
  2450 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2452 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2453 ;;Total ram usage:        2 bytes
  2454 ;; Hardware stack levels used: 1
  2455 ;; Hardware stack levels required when called: 2
  2456 ;; This function calls:
  2457 ;;		_ENVIA_NIBBLE
  2458 ;;		_LEER_LCD
  2459 ;; This function is called by:
  2460 ;;		_POS_CURSOR
  2461 ;;		_CURSOR_HOME
  2462 ;;		_CURSOR_ONOFF
  2463 ;;		_BORRAR_LCD
  2464 ;;		_LCD_CONFIG
  2465 ;;		_GENERACARACTER
  2466 ;;		_BLINK_CURSOR
  2467 ;;		_DISPLAY_ONOFF
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text14
  2472  001474                     __ptext14:
  2473                           	callstack 0
  2474  001474                     _ENVIA_LCD_CMD:
  2475                           	callstack 26
  2476                           
  2477                           ;incstack = 0
  2478                           ;ENVIA_LCD_CMD@dato stored from wreg
  2479  001474  6E04               	movwf	ENVIA_LCD_CMD@dato^0,c
  2480  001476                     
  2481                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2482  001476  908C               	bcf	140,0,c	;volatile
  2483  001478                     
  2484                           ;LCD.c: 108:  LEER_LCD();
  2485  001478  EC05  F009         	call	_LEER_LCD	;wreg free
  2486  00147C                     
  2487                           ;LCD.c: 109:  TRISD = 0b00000000;
  2488  00147C  0E00               	movlw	0
  2489  00147E  6E95               	movwf	149,c	;volatile
  2490  001480                     
  2491                           ;LCD.c: 111:         _delay(1200);
  2492  001480  0EF0               	movlw	240
  2493  001482                     u1247:
  2494  001482  D000               	nop2	
  2495  001484  2EE8               	decfsz	wreg,f,c
  2496  001486  D7FD               	bra	u1247
  2497  001488                     
  2498                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2499  001488  928C               	bcf	140,1,c	;volatile
  2500  00148A                     
  2501                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2502  00148A  948C               	bcf	140,2,c	;volatile
  2503  00148C                     
  2504                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2505  00148C  908C               	bcf	140,0,c	;volatile
  2506  00148E                     
  2507                           ;LCD.c: 115:  aux = dato & 0xF0;
  2508  00148E  5004               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2509  001490  0BF0               	andlw	240
  2510  001492  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  2511  001494                     
  2512                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2513  001494  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2514  001496  EC9A  F00A         	call	_ENVIA_NIBBLE
  2515  00149A                     
  2516                           ;LCD.c: 117:  aux = dato<<4;
  2517  00149A  3804               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2518  00149C  0BF0               	andlw	240
  2519  00149E  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  2520  0014A0                     
  2521                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2522  0014A0  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2523  0014A2  EC9A  F00A         	call	_ENVIA_NIBBLE
  2524  0014A6  0012               	return		;funcret
  2525  0014A8                     __end_of_ENVIA_LCD_CMD:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _ESCRIBE_MENSAJE *****************
  2529 ;; Defined at:
  2530 ;;		line 41 in file "LCD.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  cadena          2    5[COMRAM] PTR const unsigned char 
  2533 ;;		 -> STR_5(4), STR_4(7), STR_3(14), STR_2(5), 
  2534 ;;		 -> STR_1(4), 
  2535 ;;  tam             1    7[COMRAM] unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  i               1   10[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         3       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2550 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        6 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 3
  2554 ;; This function calls:
  2555 ;;		_ENVIA_CHAR
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;;		_vis_DHT11
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text15
  2563  001386                     __ptext15:
  2564                           	callstack 0
  2565  001386                     _ESCRIBE_MENSAJE:
  2566                           	callstack 27
  2567  001386                     
  2568                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2569  001386  0E00               	movlw	0
  2570  001388  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  2571                           
  2572                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2573  00138A  0E00               	movlw	0
  2574  00138C  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  2575  00138E  EFD8  F009         	goto	l1688
  2576  001392                     l1684:
  2577                           
  2578                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2579  001392  500B               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2580  001394  2406               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2581  001396  6E09               	movwf	??_ESCRIBE_MENSAJE^0,c
  2582  001398  0E00               	movlw	0
  2583  00139A  2007               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2584  00139C  6E0A               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2585  00139E  C009  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2586  0013A2  C00A  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2587  0013A6                     	if	0	;tblptru may be non-zero
  2588  0013A6                     	endif
  2589  0013A6                     	if	0	;tblptru may be non-zero
  2590  0013A6                     	endif
  2591  0013A6  0008               	tblrd		*
  2592  0013A8  50F5               	movf	tablat,w,c
  2593  0013AA  EC54  F00A         	call	_ENVIA_CHAR
  2594  0013AE                     
  2595                           ;LCD.c: 47:  }
  2596  0013AE  2A0B               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2597  0013B0                     l1688:
  2598  0013B0  5008               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2599  0013B2  5C0B               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2600  0013B4  A0D8               	btfss	status,0,c
  2601  0013B6  EFDF  F009         	goto	u701
  2602  0013BA  EFE1  F009         	goto	u700
  2603  0013BE                     u701:
  2604  0013BE  EFC9  F009         	goto	l1684
  2605  0013C2                     u700:
  2606  0013C2  0012               	return		;funcret
  2607  0013C4                     __end_of_ESCRIBE_MENSAJE:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _ENVIA_CHAR *****************
  2611 ;; Defined at:
  2612 ;;		line 50 in file "LCD.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  dato            1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  dato            1    3[COMRAM] unsigned char 
  2617 ;;  aux             1    4[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2630 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 2
  2634 ;; This function calls:
  2635 ;;		_ENVIA_NIBBLE
  2636 ;;		_LEER_LCD
  2637 ;; This function is called by:
  2638 ;;		_ESCRIBE_MENSAJE
  2639 ;;		_GENERACARACTER
  2640 ;;		_main
  2641 ;;		_vis_DHT11
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text16
  2646  0014A8                     __ptext16:
  2647                           	callstack 0
  2648  0014A8                     _ENVIA_CHAR:
  2649                           	callstack 26
  2650                           
  2651                           ;incstack = 0
  2652                           ;ENVIA_CHAR@dato stored from wreg
  2653  0014A8  6E04               	movwf	ENVIA_CHAR@dato^0,c
  2654  0014AA                     
  2655                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2656  0014AA  808C               	bsf	140,0,c	;volatile
  2657  0014AC                     
  2658                           ;LCD.c: 54:  LEER_LCD();
  2659  0014AC  EC05  F009         	call	_LEER_LCD	;wreg free
  2660  0014B0                     
  2661                           ;LCD.c: 55:  TRISD = 0x00;
  2662  0014B0  0E00               	movlw	0
  2663  0014B2  6E95               	movwf	149,c	;volatile
  2664  0014B4                     
  2665                           ;LCD.c: 56:         _delay(1200);
  2666  0014B4  0EF0               	movlw	240
  2667  0014B6                     u1257:
  2668  0014B6  D000               	nop2	
  2669  0014B8  2EE8               	decfsz	wreg,f,c
  2670  0014BA  D7FD               	bra	u1257
  2671  0014BC                     
  2672                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2673  0014BC  928C               	bcf	140,1,c	;volatile
  2674  0014BE                     
  2675                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2676  0014BE  948C               	bcf	140,2,c	;volatile
  2677  0014C0                     
  2678                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2679  0014C0  808C               	bsf	140,0,c	;volatile
  2680  0014C2                     
  2681                           ;LCD.c: 61:  aux = dato & 0xF0;
  2682  0014C2  5004               	movf	ENVIA_CHAR@dato^0,w,c
  2683  0014C4  0BF0               	andlw	240
  2684  0014C6  6E05               	movwf	ENVIA_CHAR@aux^0,c
  2685  0014C8                     
  2686                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2687  0014C8  5005               	movf	ENVIA_CHAR@aux^0,w,c
  2688  0014CA  EC9A  F00A         	call	_ENVIA_NIBBLE
  2689  0014CE                     
  2690                           ;LCD.c: 63:  aux = dato << 4;
  2691  0014CE  3804               	swapf	ENVIA_CHAR@dato^0,w,c
  2692  0014D0  0BF0               	andlw	240
  2693  0014D2  6E05               	movwf	ENVIA_CHAR@aux^0,c
  2694  0014D4                     
  2695                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2696  0014D4  5005               	movf	ENVIA_CHAR@aux^0,w,c
  2697  0014D6  EC9A  F00A         	call	_ENVIA_NIBBLE
  2698  0014DA  0012               	return		;funcret
  2699  0014DC                     __end_of_ENVIA_CHAR:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _LEER_LCD *****************
  2703 ;; Defined at:
  2704 ;;		line 121 in file "LCD.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  aux             1    2[COMRAM] unsigned char 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2721 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:        1 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_ENVIA_CHAR
  2729 ;;		_ENVIA_LCD_CMD
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text17
  2734  00120A                     __ptext17:
  2735                           	callstack 0
  2736  00120A                     _LEER_LCD:
  2737                           	callstack 26
  2738  00120A                     
  2739                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2740  00120A  0EF8               	movlw	248
  2741  00120C  6E95               	movwf	149,c	;volatile
  2742  00120E                     
  2743                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2744  00120E  908C               	bcf	140,0,c	;volatile
  2745  001210                     
  2746                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2747  001210  828C               	bsf	140,1,c	;volatile
  2748  001212                     
  2749                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2750  001212  848C               	bsf	140,2,c	;volatile
  2751  001214                     
  2752                           ;LCD.c: 128:         _delay(1200);
  2753  001214  0EF0               	movlw	240
  2754  001216                     u1267:
  2755  001216  D000               	nop2	
  2756  001218  2EE8               	decfsz	wreg,f,c
  2757  00121A  D7FD               	bra	u1267
  2758  00121C                     
  2759                           ;LCD.c: 130:  aux = PORTD;
  2760  00121C  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  2761  001220                     
  2762                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2763  001220  948C               	bcf	140,2,c	;volatile
  2764  001222                     
  2765                           ;LCD.c: 132:         _delay(1200);
  2766  001222  0EF0               	movlw	240
  2767  001224                     u1277:
  2768  001224  D000               	nop2	
  2769  001226  2EE8               	decfsz	wreg,f,c
  2770  001228  D7FD               	bra	u1277
  2771  00122A                     
  2772                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2773  00122A  848C               	bsf	140,2,c	;volatile
  2774  00122C                     
  2775                           ;LCD.c: 135:         _delay(1200);
  2776  00122C  0EF0               	movlw	240
  2777  00122E                     u1287:
  2778  00122E  D000               	nop2	
  2779  001230  2EE8               	decfsz	wreg,f,c
  2780  001232  D7FD               	bra	u1287
  2781  001234                     
  2782                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2783  001234  948C               	bcf	140,2,c	;volatile
  2784  001236                     l1554:
  2785                           
  2786                           ;LCD.c: 138:  aux = aux & 0x80;
  2787  001236  5003               	movf	LEER_LCD@aux^0,w,c
  2788  001238  0B80               	andlw	128
  2789  00123A  6E03               	movwf	LEER_LCD@aux^0,c
  2790                           
  2791                           ;LCD.c: 139:  while(aux == 0x80)
  2792  00123C  EF34  F009         	goto	l1568
  2793  001240                     l67:
  2794                           
  2795                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2796  001240  848C               	bsf	140,2,c	;volatile
  2797  001242                     
  2798                           ;LCD.c: 142:             _delay(1200);
  2799  001242  0EF0               	movlw	240
  2800  001244                     u1297:
  2801  001244  D000               	nop2	
  2802  001246  2EE8               	decfsz	wreg,f,c
  2803  001248  D7FD               	bra	u1297
  2804  00124A                     
  2805                           ;LCD.c: 143:             aux = PORTD;
  2806  00124A  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  2807  00124E                     
  2808                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2809  00124E  948C               	bcf	140,2,c	;volatile
  2810                           
  2811                           ;LCD.c: 145:             _delay(1200);
  2812  001250  0EF0               	movlw	240
  2813  001252                     u1307:
  2814  001252  D000               	nop2	
  2815  001254  2EE8               	decfsz	wreg,f,c
  2816  001256  D7FD               	bra	u1307
  2817  001258                     
  2818                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2819  001258  848C               	bsf	140,2,c	;volatile
  2820                           
  2821                           ;LCD.c: 147:             _delay(1200);
  2822  00125A  0EF0               	movlw	240
  2823  00125C                     u1317:
  2824  00125C  D000               	nop2	
  2825  00125E  2EE8               	decfsz	wreg,f,c
  2826  001260  D7FD               	bra	u1317
  2827  001262                     
  2828                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2829  001262  948C               	bcf	140,2,c	;volatile
  2830  001264  EF1B  F009         	goto	l1554
  2831  001268                     l1568:
  2832                           
  2833                           ;LCD.c: 139:  while(aux == 0x80)
  2834  001268  0E80               	movlw	128
  2835  00126A  1803               	xorwf	LEER_LCD@aux^0,w,c
  2836  00126C  B4D8               	btfsc	status,2,c
  2837  00126E  EF3B  F009         	goto	u641
  2838  001272  EF3D  F009         	goto	u640
  2839  001276                     u641:
  2840  001276  EF20  F009         	goto	l67
  2841  00127A                     u640:
  2842  00127A  0012               	return		;funcret
  2843  00127C                     __end_of_LEER_LCD:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _ENVIA_NIBBLE *****************
  2847 ;; Defined at:
  2848 ;;		line 93 in file "LCD.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  dato            1    wreg     unsigned char 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  dato            1    2[COMRAM] unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg, status,2, status,0
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2862 ;;      Params:         0       0       0       0       0       0       0       0       0
  2863 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2865 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2866 ;;Total ram usage:        1 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 1
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_ENVIA_CHAR
  2873 ;;		_LCD_CONFIG
  2874 ;;		_ENVIA_LCD_CMD
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text18
  2879  001534                     __ptext18:
  2880                           	callstack 0
  2881  001534                     _ENVIA_NIBBLE:
  2882                           	callstack 27
  2883                           
  2884                           ;incstack = 0
  2885                           ;ENVIA_NIBBLE@dato stored from wreg
  2886  001534  6E03               	movwf	ENVIA_NIBBLE@dato^0,c
  2887  001536                     
  2888                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2889  001536  0E0F               	movlw	15
  2890  001538  168C               	andwf	140,f,c	;volatile
  2891                           
  2892                           ;LCD.c: 96:  dato &= 0xF0;
  2893  00153A  0EF0               	movlw	240
  2894  00153C  1603               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2895                           
  2896                           ;LCD.c: 97:  LATD|= dato;
  2897  00153E  5003               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2898  001540  128C               	iorwf	140,f,c	;volatile
  2899  001542                     
  2900                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2901  001542  848C               	bsf	140,2,c	;volatile
  2902  001544                     
  2903                           ;LCD.c: 100:         _delay(1200);
  2904  001544  0EF0               	movlw	240
  2905  001546                     u1327:
  2906  001546  D000               	nop2	
  2907  001548  2EE8               	decfsz	wreg,f,c
  2908  00154A  D7FD               	bra	u1327
  2909  00154C                     
  2910                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2911  00154C  948C               	bcf	140,2,c	;volatile
  2912  00154E  0012               	return		;funcret
  2913  001550                     __end_of_ENVIA_NIBBLE:
  2914                           	callstack 0
  2915                           
  2916 ;; *************** function _CCP1_TMR1 *****************
  2917 ;; Defined at:
  2918 ;;		line 162 in file "maincode02.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  dato            1    0        unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2934 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2935 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2936 ;;Total ram usage:        2 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		Interrupt level 2
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	intcode
  2946  000008                     __pintcode:
  2947                           	callstack 0
  2948  000008                     _CCP1_TMR1:
  2949                           	callstack 26
  2950                           
  2951                           ;incstack = 0
  2952  000008  8243               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2953  00000A  ED8D  F008         	call	int_func,f	;refresh shadow registers
  2954                           
  2955                           	psect	intcode_body
  2956  00111A                     __pintcode_body:
  2957                           	callstack 26
  2958  00111A                     int_func:
  2959                           	callstack 26
  2960  00111A  0006               	pop		; remove dummy address from shadow register refresh
  2961  00111C                     
  2962                           ;maincode02.c: 164:     if(PIR1bits.CCP1IF==1){
  2963  00111C  A49E               	btfss	158,2,c	;volatile
  2964  00111E  EF93  F008         	goto	i2u62_41
  2965  001122  EF95  F008         	goto	i2u62_40
  2966  001126                     i2u62_41:
  2967  001126  EFC1  F008         	goto	i2l217
  2968  00112A                     i2u62_40:
  2969  00112A                     
  2970                           ;maincode02.c: 165:         PIR1bits.CCP1IF=0;
  2971  00112A  949E               	bcf	158,2,c	;volatile
  2972                           
  2973                           ;maincode02.c: 166:         switch(estado)
  2974  00112C  EFAC  F008         	goto	i2l1516
  2975  001130                     i2l1510:
  2976                           
  2977                           ;maincode02.c: 169:                 TMR1H=0;
  2978  001130  0E00               	movlw	0
  2979  001132  6ECF               	movwf	207,c	;volatile
  2980                           
  2981                           ;maincode02.c: 170:                 TMR1L=0;
  2982  001134  0E00               	movlw	0
  2983  001136  6ECE               	movwf	206,c	;volatile
  2984                           
  2985                           ;maincode02.c: 171:                 CCP1CON=0x04;
  2986  001138  0E04               	movlw	4
  2987  00113A  6EBD               	movwf	189,c	;volatile
  2988                           
  2989                           ;maincode02.c: 172:                 estado = 3;
  2990  00113C  0E03               	movlw	3
  2991  00113E  6E42               	movwf	_estado^0,c
  2992                           
  2993                           ;maincode02.c: 173:                 break;
  2994  001140  EFC9  F008         	goto	i2l224
  2995  001144                     i2l221:
  2996                           
  2997                           ;maincode02.c: 175:                 distancia=CCPR1;
  2998  001144  CFBE F038          	movff	4030,_distancia	;volatile
  2999  001148  CFBF F039          	movff	4031,_distancia+1	;volatile
  3000  00114C                     
  3001                           ;maincode02.c: 176:                 estado = 4;
  3002  00114C  0E04               	movlw	4
  3003  00114E  6E42               	movwf	_estado^0,c
  3004                           
  3005                           ;maincode02.c: 177:                 CCP1CON = 0x05;
  3006  001150  0E05               	movlw	5
  3007  001152  6EBD               	movwf	189,c	;volatile
  3008                           
  3009                           ;maincode02.c: 178:                 break;
  3010  001154  EFC9  F008         	goto	i2l224
  3011  001158                     i2l1516:
  3012  001158  5042               	movf	_estado^0,w,c
  3013  00115A  6E01               	movwf	??_CCP1_TMR1^0,c
  3014  00115C  6A02               	clrf	(??_CCP1_TMR1+1)^0,c
  3015                           
  3016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3017                           ; Switch size 1, requested type "simple"
  3018                           ; Number of cases is 1, Range of values is 0 to 0
  3019                           ; switch strategies available:
  3020                           ; Name         Instructions Cycles
  3021                           ; simple_byte            4     3 (average)
  3022                           ;	Chosen strategy is simple_byte
  3023  00115E  5002               	movf	(??_CCP1_TMR1+1)^0,w,c
  3024  001160  0A00               	xorlw	0	; case 0
  3025  001162  B4D8               	btfsc	status,2,c
  3026  001164  EFB6  F008         	goto	i2l2106
  3027  001168  EFC9  F008         	goto	i2l224
  3028  00116C                     i2l2106:
  3029                           
  3030                           ; Switch size 1, requested type "simple"
  3031                           ; Number of cases is 2, Range of values is 2 to 3
  3032                           ; switch strategies available:
  3033                           ; Name         Instructions Cycles
  3034                           ; simple_byte            7     4 (average)
  3035                           ;	Chosen strategy is simple_byte
  3036  00116C  5001               	movf	??_CCP1_TMR1^0,w,c
  3037  00116E  0A02               	xorlw	2	; case 2
  3038  001170  B4D8               	btfsc	status,2,c
  3039  001172  EF98  F008         	goto	i2l1510
  3040  001176  0A01               	xorlw	1	; case 3
  3041  001178  B4D8               	btfsc	status,2,c
  3042  00117A  EFA2  F008         	goto	i2l221
  3043  00117E  EFC9  F008         	goto	i2l224
  3044  001182                     i2l217:
  3045  001182  A09E               	btfss	158,0,c	;volatile
  3046  001184  EFC6  F008         	goto	i2u63_41
  3047  001188  EFC8  F008         	goto	i2u63_40
  3048  00118C                     i2u63_41:
  3049  00118C  EFC9  F008         	goto	i2l224
  3050  001190                     i2u63_40:
  3051  001190                     
  3052                           ;maincode02.c: 183:         PIR1bits.TMR1IF=0;
  3053  001190  909E               	bcf	158,0,c	;volatile
  3054  001192                     i2l224:
  3055  001192  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3056  001194  0011               	retfie		f
  3057  001196                     __end_of_CCP1_TMR1:
  3058                           	callstack 0
  3059                           
  3060                           	psect	rparam
  3061  0000                     
  3062                           	psect	temp
  3063  000043                     btemp:
  3064                           	callstack 0
  3065  000043                     	ds	1
  3066  0000                     int$flags	set	btemp
  3067  0000                     wtemp8	set	btemp+1
  3068  0000                     ttemp5	set	btemp+1
  3069  0000                     ttemp6	set	btemp+4
  3070  0000                     ttemp7	set	btemp+8
  3071                           
  3072                           	psect	idloc
  3073                           
  3074                           ;Config register IDLOC0 @ 0x200000
  3075                           ;	unspecified, using default values
  3076  200000                     	org	2097152
  3077  200000  FF                 	db	255
  3078                           
  3079                           ;Config register IDLOC1 @ 0x200001
  3080                           ;	unspecified, using default values
  3081  200001                     	org	2097153
  3082  200001  FF                 	db	255
  3083                           
  3084                           ;Config register IDLOC2 @ 0x200002
  3085                           ;	unspecified, using default values
  3086  200002                     	org	2097154
  3087  200002  FF                 	db	255
  3088                           
  3089                           ;Config register IDLOC3 @ 0x200003
  3090                           ;	unspecified, using default values
  3091  200003                     	org	2097155
  3092  200003  FF                 	db	255
  3093                           
  3094                           ;Config register IDLOC4 @ 0x200004
  3095                           ;	unspecified, using default values
  3096  200004                     	org	2097156
  3097  200004  FF                 	db	255
  3098                           
  3099                           ;Config register IDLOC5 @ 0x200005
  3100                           ;	unspecified, using default values
  3101  200005                     	org	2097157
  3102  200005  FF                 	db	255
  3103                           
  3104                           ;Config register IDLOC6 @ 0x200006
  3105                           ;	unspecified, using default values
  3106  200006                     	org	2097158
  3107  200006  FF                 	db	255
  3108                           
  3109                           ;Config register IDLOC7 @ 0x200007
  3110                           ;	unspecified, using default values
  3111  200007                     	org	2097159
  3112  200007  FF                 	db	255
  3113                           
  3114                           	psect	config
  3115                           
  3116                           ;Config register CONFIG1L @ 0x300000
  3117                           ;	PLL Prescaler Selection bits
  3118                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3119                           ;	System Clock Postscaler Selection bits
  3120                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3121                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3122                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3123  300000                     	org	3145728
  3124  300000  00                 	db	0
  3125                           
  3126                           ;Config register CONFIG1H @ 0x300001
  3127                           ;	Oscillator Selection bits
  3128                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  3129                           ;	Fail-Safe Clock Monitor Enable bit
  3130                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3131                           ;	Internal/External Oscillator Switchover bit
  3132                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3133  300001                     	org	3145729
  3134  300001  08                 	db	8
  3135                           
  3136                           ;Config register CONFIG2L @ 0x300002
  3137                           ;	Power-up Timer Enable bit
  3138                           ;	PWRT = ON, PWRT enabled
  3139                           ;	Brown-out Reset Enable bits
  3140                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3141                           ;	Brown-out Reset Voltage bits
  3142                           ;	BORV = 3, Minimum setting 2.05V
  3143                           ;	USB Voltage Regulator Enable bit
  3144                           ;	VREGEN = OFF, USB voltage regulator disabled
  3145  300002                     	org	3145730
  3146  300002  18                 	db	24
  3147                           
  3148                           ;Config register CONFIG2H @ 0x300003
  3149                           ;	Watchdog Timer Enable bit
  3150                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3151                           ;	Watchdog Timer Postscale Select bits
  3152                           ;	WDTPS = 32768, 1:32768
  3153  300003                     	org	3145731
  3154  300003  1E                 	db	30
  3155                           
  3156                           ; Padding undefined space
  3157  300004                     	org	3145732
  3158  300004  FF                 	db	255
  3159                           
  3160                           ;Config register CONFIG3H @ 0x300005
  3161                           ;	CCP2 MUX bit
  3162                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3163                           ;	PORTB A/D Enable bit
  3164                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3165                           ;	Low-Power Timer 1 Oscillator Enable bit
  3166                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3167                           ;	MCLR Pin Enable bit
  3168                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3169  300005                     	org	3145733
  3170  300005  81                 	db	129
  3171                           
  3172                           ;Config register CONFIG4L @ 0x300006
  3173                           ;	Stack Full/Underflow Reset Enable bit
  3174                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3175                           ;	Single-Supply ICSP Enable bit
  3176                           ;	LVP = OFF, Single-Supply ICSP disabled
  3177                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3178                           ;	ICPRT = OFF, ICPORT disabled
  3179                           ;	Extended Instruction Set Enable bit
  3180                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3181                           ;	Background Debugger Enable bit
  3182                           ;	DEBUG = 0x1, unprogrammed default
  3183  300006                     	org	3145734
  3184  300006  81                 	db	129
  3185                           
  3186                           ; Padding undefined space
  3187  300007                     	org	3145735
  3188  300007  FF                 	db	255
  3189                           
  3190                           ;Config register CONFIG5L @ 0x300008
  3191                           ;	Code Protection bit
  3192                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3193                           ;	Code Protection bit
  3194                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3195                           ;	Code Protection bit
  3196                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3197                           ;	Code Protection bit
  3198                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3199  300008                     	org	3145736
  3200  300008  0F                 	db	15
  3201                           
  3202                           ;Config register CONFIG5H @ 0x300009
  3203                           ;	Boot Block Code Protection bit
  3204                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3205                           ;	Data EEPROM Code Protection bit
  3206                           ;	CPD = OFF, Data EEPROM is not code-protected
  3207  300009                     	org	3145737
  3208  300009  C0                 	db	192
  3209                           
  3210                           ;Config register CONFIG6L @ 0x30000A
  3211                           ;	Write Protection bit
  3212                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3213                           ;	Write Protection bit
  3214                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3215                           ;	Write Protection bit
  3216                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3217                           ;	Write Protection bit
  3218                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3219  30000A                     	org	3145738
  3220  30000A  0F                 	db	15
  3221                           
  3222                           ;Config register CONFIG6H @ 0x30000B
  3223                           ;	Configuration Register Write Protection bit
  3224                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3225                           ;	Boot Block Write Protection bit
  3226                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3227                           ;	Data EEPROM Write Protection bit
  3228                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3229  30000B                     	org	3145739
  3230  30000B  E0                 	db	224
  3231                           
  3232                           ;Config register CONFIG7L @ 0x30000C
  3233                           ;	Table Read Protection bit
  3234                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3235                           ;	Table Read Protection bit
  3236                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3237                           ;	Table Read Protection bit
  3238                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3239                           ;	Table Read Protection bit
  3240                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3241  30000C                     	org	3145740
  3242  30000C  0F                 	db	15
  3243                           
  3244                           ;Config register CONFIG7H @ 0x30000D
  3245                           ;	Boot Block Table Read Protection bit
  3246                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3247  30000D                     	org	3145741
  3248  30000D  40                 	db	64
  3249                           tosu	equ	0xFFF
  3250                           tosh	equ	0xFFE
  3251                           tosl	equ	0xFFD
  3252                           stkptr	equ	0xFFC
  3253                           pclatu	equ	0xFFB
  3254                           pclath	equ	0xFFA
  3255                           pcl	equ	0xFF9
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           indf0	equ	0xFEF
  3263                           postinc0	equ	0xFEE
  3264                           postdec0	equ	0xFED
  3265                           preinc0	equ	0xFEC
  3266                           plusw0	equ	0xFEB
  3267                           fsr0h	equ	0xFEA
  3268                           fsr0l	equ	0xFE9
  3269                           wreg	equ	0xFE8
  3270                           indf1	equ	0xFE7
  3271                           postinc1	equ	0xFE6
  3272                           postdec1	equ	0xFE5
  3273                           preinc1	equ	0xFE4
  3274                           plusw1	equ	0xFE3
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           bsr	equ	0xFE0
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           preinc2	equ	0xFDC
  3282                           plusw2	equ	0xFDB
  3283                           fsr2h	equ	0xFDA
  3284                           fsr2l	equ	0xFD9
  3285                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        16
    BSS         14
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> erro(COMRAM[8]), okay(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[4]), STR_4(CODE[7]), STR_3(CODE[14]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _CCP1_TMR1 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CCP1_TMR1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CCP1_TMR1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CCP1_TMR1 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CCP1_TMR1 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CCP1_TMR1 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_TMR1 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_TMR1 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_TMR1 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7175
                                             27 COMRAM     8     8      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
                          _configuro
                           _init_LCD
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1581
                                              9 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     782
                                              5 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     615
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     466
                                              7 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2048
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     499
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     183
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3    1034
                                              5 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     183
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      70
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_TMR1                                            3     3      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___flmul
   ___fltol
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___xxtofl
   _configuro
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _CCP1_TMR1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      42       1       70.2%
BITBIGSFRlll        21      0       0      30        0.0%
BITBIGSFRhhlllh     1E      0       0      25        0.0%
BITBIGSFRhhhl       1E      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhlhl       B      0       0      23        0.0%
BITBIGSFRlh          6      0       0      28        0.0%
BITBIGSFRhhllll      6      0       0      26        0.0%
BITBIGSFRhl          5      0       0      27        0.0%
BITBIGSFRhhlhhh      3      0       0      22        0.0%
BITBIGSFRllh         1      0       0      29        0.0%
BITBIGSFRhhllh       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      31        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 16 18:00:19 2022

                     l24 1472                       l42 150A                       l51 14DA  
                     l60 154E                       l37 1566                       l54 156E  
                     l63 14A6                       l48 13C2                       l57 133E  
                     l74 13FE                       l67 1240                       l69 127A  
          ENVIA_CHAR@aux 0005                      l206 0C74                      l160 1384  
                    l157 1532                      l524 1118                      l725 1208  
                    l718 1200                      l735 12DE                      l728 12D6  
                    l841 08E8                      l850 0B56                      l851 0B44  
                    l845 0C4C                      l848 0ADE                      l858 0C0E  
                    l882 0EB6                      l885 1012                      l896 0FAA  
                    l889 0F4E                      u700 13C2                      u701 13BE  
                    u710 083E                      u711 083A                      u640 127A  
                    u800 0ADC                      u720 0850                      u641 1276  
                    u801 0AD8                      u721 084C                      u810 0AFC  
                    u730 0860                      u650 14EE                      u811 0AF8  
                    u731 085C                      u651 14EA                      u820 0B0E  
                    u740 08A0                      u900 102A                      u660 1504  
                    u821 0B0A                      u741 089C                      u901 1026  
                    u661 1500                      u830 0B3C                      u750 08B2  
                    u910 105E                      u670 13F8                      u831 0B38  
                    u751 08AE                      u671 13F4                      u680 144C  
                    u840 0B52                      u760 08C2                      u920 108C  
                    u681 1448                      u841 0B4E                      u761 08BE  
                    u921 1088                      u690 146A                      u850 0B66  
                    u770 08F8                      u930 10A0                      u691 1466  
                    u851 0B62                      u771 08F4                      u931 109C  
                    u915 1054                      u860 0B80                      u780 0908  
                    u940 10C8                      u861 0B7C                      u781 0904  
                    u941 10C4                      u870 0BC8                      u790 0A82  
                    u950 10E8                      u871 0BC4                      u951 10E4  
                    u880 0BF6                      u960 10F8                      u881 0BF2  
                    u961 10F4                      u890 0C30                      u970 11B0  
                    u891 0C2C                      u795 0A78                      u971 11AC  
                    u980 11CE                      u981 11CA                      u990 11EA  
                    u991 11E6              LEER_LCD@aux 0003                      wreg 000FE8  
           ?_CURSOR_HOME 0001             ___flmul@aexp 0014             ___flmul@bexp 0015  
           ___flmul@sign 000F             ___flmul@temp 001A             ___flmul@prod 0016  
         ??_ENVIA_NIBBLE 0003             ___fltol@exp1 000C           ENVIA_CHAR@dato 0004  
                   l2104 0E3E                     l2050 0C60                     l2060 0CAA  
                   l2052 0C76                     l2044 0C4E                     l2070 0D6A  
                   l2062 0CDE                     l2054 0C7E                     l2046 0C52  
                   l1600 14AA                     l2080 0DEC                     l2072 0D74  
                   l2064 0D12                     l2056 0C80                     l2048 0C56  
                   l1610 14BE                     l1602 14AC                     l2082 0E08  
                   l2074 0D84                     l2066 0D46                     l2058 0C88  
                   l2090 0E2A                     l1540 1214                     l1532 120A  
                   l1620 14D4                     l1612 14C0                     l1604 14B0  
                   l1700 151C                     l2084 0E18                     l2076 0DA0  
                   l2068 0D62                     l1550 122C                     l1542 121C  
                   l1534 120E                     l1614 14C2                     l1606 14B4  
                   l1702 1526                     l1622 1560                     l1630 1504  
                   l1710 1340                     l2086 0E26                     l2078 0DD0  
                   l1560 124E                     l1552 1234                     l1544 1220  
                   l1536 1210                     l1616 14C8                     l1608 14BC  
                   l1800 0A38                     l1704 1528                     l1632 1568  
                   l1624 14DE                     l1640 12F8                     l1720 135E  
                   l1712 1344                     l1570 1536                     l1562 1258  
                   l1554 1236                     l1546 1222                     l1538 1212  
                   l1618 14CE                     l1810 0ACE                     l1802 0A62  
                   l1730 083E                     l1706 152A                     l1626 14EE  
                   l1650 1326                     l1642 130C                     l1634 12E0  
                   l1722 1364                     l1714 1348                     l1572 1542  
                   l1564 1262                     l1556 1242                     l1548 122A  
                   l1580 1478                     l1820 0B0E                     l1812 0ADC  
                   l1804 0A98                     l1740 0876                     l1732 0840  
                   l1900 1196                     l1708 152C                     l1628 14F4  
                   l1660 13D0                     l1652 132C                     l1644 1314  
                   l1636 12E4                     l1724 1374                     l1716 1356  
                   l1574 1544                     l1558 124A                     l1590 148C  
                   l1582 147C                     l1830 0B80                     l1822 0B3C  
                   l1814 0AEE                     l1806 0AA6                     l1750 08A2  
                   l1742 0886                     l1734 0850                     l1726 0824  
                   l1910 11CE                     l1902 119E                     l1670 13E8  
                   l1654 1332                     l1646 131A                     l1638 12EA  
                   l1718 135A                     l1576 154C                     l1568 1268  
                   l1592 148E                     l1584 1480                     l1680 146A  
                   l1840 0BF6                     l1832 0BAA                     l1816 0AFC  
                   l1808 0AC4                     l1760 08F8                     l1752 08B2  
                   l1744 088C                     l1736 0860                     l1728 0830  
                   l1920 11FA                     l1912 11D4                     l1904 11B0  
                   l1672 13F8                     l1656 1338                     l1648 1320  
                   l1682 1386                     l1594 1494                     l1586 1488  
                   l1578 1476                     l1674 143C                     l1842 0C12  
                   l1850 0C38                     l1826 0B66                     l1834 0BAE  
                   l1818 0B00                     l1770 0932                     l1762 0908  
                   l1754 08C2                     l1746 0892                     l1738 0870  
                   l1914 11EA                     l1906 11B8                     l1930 12AC  
                   l1922 127C                     l1690 150C                     l1666 13D4  
                   l1658 13C4                     l1684 1392                     l1596 149A  
                   l1588 148A                     l1676 144C                     l1852 0C3C  
                   l1844 0C22                     l1836 0BC8                     l1828 0B72  
                   l1780 0984                     l1772 0948                     l1756 08D2  
                   l1748 08A0                     l1916 11F2                     l1908 11C0  
                   l1932 12C2                     l1924 128E                     l1940 0E72  
                   l1692 1514                     l1668 13E6                     l1686 13AE  
                   l1598 14A0                     l1678 1458                     l1846 0C30  
                   l1838 0BDC                     l1790 09CA                     l1782 0992  
                   l1774 0954                     l1766 091C                     l1758 08D8  
                   l1870 107E                     l1862 103E                     l1918 11F4  
                   l1934 12CA                     l1926 1296                     l1950 0EF0  
                   l1942 0E80                     l1694 1516                     l1688 13B0  
                   l1848 0C32                     l1792 09E4                     l1784 099E  
                   l1776 096C                     l1768 0928                     l1880 10AE  
                   l1872 108C                     l1864 1068                     l1856 1014  
                   l1936 12D0                     l1928 129E                     l1960 0F44  
                   l1952 0EF8                     l1944 0EC6                     l1696 1518  
                   l1794 09F4                     l1786 09AE                     l1778 0978  
                   l1890 10D8                     l1882 10B8                     l1866 106A  
                   l1858 102A                     l1970 0FBA                     l1962 0F80  
                   l1954 0F04                     l1946 0EDC                     l1938 0E62  
                   l1698 151A                     l1796 0A10                     l1788 09BA  
                   l1892 10E8                     l1868 107A                     l1980 1002  
                   l1972 0FBE                     l1964 0F8C                     l1956 0F36  
                   l1798 0A1C                     l1894 10F8                     l1878 10A4  
                   l1974 0FE2                     l1966 0F9A                     l1958 0F38  
                   l1896 1108                     l1888 10CC                     l1976 0FF2  
                   l1968 0FB8                     l1978 1000                     STR_1 081B  
                   STR_2 0816                     STR_3 0801                     STR_4 080F  
                   STR_5 081F                     u1000 128E                     u1001 128A  
                   u1010 12AC                     u1011 12A8                     u1020 12C2  
                   u1100 0FB8                     u1021 12BE                     u1101 0FB4  
                   u1110 0FF2                     u1030 0E72                     u1111 0FEE  
                   u1031 0E6E                     u1120 1000                     u1040 0E80  
                   u1121 0FFC                     u1041 0E7C                     u1050 0EDC  
                   u1051 0ED8                     u1060 0F32                     u1061 0F2E  
                   u1070 0F7C                     u1071 0F78                     u1207 134E  
                   u1080 0F9A                     u1081 0F96                     u1217 12F0  
                   u1090 0FAA                     u1307 1252                     u1091 0FA6  
                   u1227 12FE                     u1317 125C                     u1237 130E  
                   u1327 1546                     u1247 1482                     _LATD 000F8C  
                   u1257 14B6                     u1267 1216                     u1187 0C78  
                   u1277 1224                     u1197 0E1E                     u1287 122E  
                   u1297 1244                     _main 0C4E                     _erro 0024  
                   _okay 002C                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0043                     prodh 000FF4  
                   prodl 000FF3                     start 000E            ?_CURSOR_ONOFF 0001  
           ___param_bank 000000          ??_ENVIA_LCD_CMD 0004         __end_of_LEER_LCD 127C  
         _GENERACARACTER 13C4            ___fltol@sign1 000B                    ?_main 0001  
                  _CCPR1 000FBE          __end_of___flmul 0C4E          __end_of___fltol 111A  
                  _T1CON 000FCD          __end_of___lwdiv 120A          __end_of___lwmod 12E0  
                  i2l221 1144                    i2l224 1192                    i2l217 1182  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _PORTD 000F83  
                  _TRISD 000F95        __end_of_CCP1_TMR1 1196              ?_POS_CURSOR 0006  
                  tablat 000FF5                    ttemp5 0044                    ttemp6 0047  
                  ttemp7 004B                    status 000FD8                    wtemp8 0044  
         ??_CURSOR_ONOFF 0006          __initialization 1400             __end_of_main 0E60  
 __end_of_GENERACARACTER 1400          _ESCRIBE_MENSAJE 1386                   ??_main 001C  
          __activetblptr 000002                   _ADCON1 000FC1                   i2l2106 116C  
                 i2l1510 1130                   i2l1512 114C                   i2l1504 111C  
                 i2l1506 111C                   i2l1516 1158                   i2l1508 112A  
                 i2l1518 1190                   _OSCCON 000FD3         __end_of___xxtofl 1014  
   __end_of_ENVIA_NIBBLE 1550                ??___flmul 000B                ??___fltol 0007  
              ??___lwdiv 000C         __end_of_init_LCD 1386                ??___lwmod 0007  
        ?_GENERACARACTER 0006                   _estado 0042                   clear_0 1426  
                 isa$std 000001                   _tiempo 0034             __pdataCOMRAM 0024  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ??_BORRAR_LCD 0006             ___xxtofl@arg 000D  
           ___xxtofl@exp 000C             ___xxtofl@val 0003                ?_LEER_LCD 0001  
             __accesstop 0060  __end_of__initialization 142C             ??_LCD_CONFIG 0006  
          ___rparam_used 000001             ??_ENVIA_CHAR 0004               ___fltol@f1 0003  
__end_of_ESCRIBE_MENSAJE 13C4           __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 1570  
       ENVIA_LCD_CMD@aux 0005     __end_of_CURSOR_ONOFF 150C       __end_of_LCD_CONFIG 1340  
     __end_of_ENVIA_CHAR 14DC               ??_LEER_LCD 0003         ENVIA_NIBBLE@dato 0003  
             __pnvCOMRAM 0042                  _CCP1CON 000FBD                ?___xxtofl 0003  
                i2u62_40 112A                  i2u62_41 1126                  i2u63_40 1190  
                i2u63_41 118C             ??_POS_CURSOR 0007                ?_init_LCD 0001  
              _CCP1_TMR1 0008                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0006        __end_of_configuro 1534                  ___flmul 0824  
                ___fltol 1014                  ___lwdiv 1196                  ___lwmod 127C  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 14A8                  _decenas 003B  
                __pcinit 1400       __end_of_POS_CURSOR 1474                  __ramtop 0800  
                __ptext0 0C4E                  __ptext1 1340                  __ptext2 12E0  
                __ptext3 13C4                  __ptext4 14DC                  __ptext5 1560  
                __ptext6 1568                  __ptext7 150C                  __ptext8 0E60  
                __ptext9 127C          GENERACARACTER@i 0009               ??___xxtofl 0007  
         __pintcode_body 111A             _ENVIA_NIBBLE 1534     end_of_initialization 142C  
             ??_init_LCD 000A            __Lmediumconst 0000               ?_CCP1_TMR1 0001  
                int_func 111A         ??_GENERACARACTER 0009                  postdec1 000FE5  
                postinc0 000FEE     GENERACARACTER@vector 0006                _PORTBbits 000F81  
          ___xxtofl@sign 000B                _TRISBbits 000F93                _TRISCbits 000F94  
              _TRISEbits 000F96              ___flmul@grs 0010             _CURSOR_ONOFF 14DC  
     CURSOR_ONOFF@estado 0006                _T_Decimal 003F            __pidataCOMRAM 1550  
              _T_Integer 003E            ??_CURSOR_HOME 0006      start_initialization 1400  
      ENVIA_LCD_CMD@dato 0004              ??_CCP1_TMR1 0001                ___flmul@a 0007  
              ___flmul@b 0003              __pbssCOMRAM 0034      __end_of_CURSOR_HOME 1568  
              _main$1260 001E                _main$1261 0022         ___lwdiv@dividend 0008  
              __pintcode 0008                 ?___flmul 0003                 ?___fltol 0003  
               ?___lwdiv 0008                 ?___lwmod 0003        GENERACARACTER@pos 0008  
              _configuro 150C                _distancia 0038              __smallconst 0800  
       ___lwdiv@quotient 000C                 _LEER_LCD 120A                 _LATBbits 000F8A  
               _LATCbits 000F8B                 _LATDbits 000F8C                 _LATEbits 000F8D  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         ESCRIBE_MENSAJE@i 000B  
         POS_CURSOR@fila 0007               ?_configuro 0001                 _Checksum 003D  
            _CURSOR_HOME 1560                copy_data0 1414                 __Hrparam 0000  
               __Lrparam 0000                 ___xxtofl 0E60          ___lwdiv@divisor 000A  
               _centenas 003C          ___lwdiv@counter 000E                 __ptext10 1196  
               __ptext11 1014                 __ptext12 0824                 __ptext13 143A  
               __ptext14 1474                 __ptext15 1386                 __ptext16 14A8  
               __ptext17 120A                 __ptext18 1534               _BORRAR_LCD 1568  
               _init_LCD 1340               _LCD_CONFIG 12E0               _ENVIA_CHAR 14A8  
               isa$xinst 000000                 int$flags 0043                 _unidades 003A  
          _ENVIA_LCD_CMD 1474              ??_configuro 0003               _INTCONbits 000FF2  
      ??_ESCRIBE_MENSAJE 0009                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0006  
       ___lwmod@dividend 0003           ?_ENVIA_LCD_CMD 0001          ___lwmod@divisor 0005  
        ___lwmod@counter 0007              ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001  
             _POS_CURSOR 143A               _RH_Decimal 0041              ?_LCD_CONFIG 0001  
     ESCRIBE_MENSAJE@tam 0008              ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0006  
             _RH_Integer 0040  
