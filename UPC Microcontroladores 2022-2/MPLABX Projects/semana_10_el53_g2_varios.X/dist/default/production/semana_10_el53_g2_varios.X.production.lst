

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 21 18:24:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  000490                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _mensaje
    75  000490  20                 	db	32
    76  000491  20                 	db	32
    77  000492  20                 	db	32
    78  000493  20                 	db	32
    79  000494  20                 	db	32
    80  000495  20                 	db	32
    81  000496  20                 	db	32
    82  000497  20                 	db	32
    83  000498  20                 	db	32
    84  000499  20                 	db	32
    85  00049A  20                 	db	32
    86  00049B  20                 	db	32
    87  00049C  20                 	db	32
    88  00049D  20                 	db	32
    89  00049E  20                 	db	32
    90  00049F  20                 	db	32
    91  0004A0  4D                 	db	77
    92  0004A1  69                 	db	105
    93  0004A2  63                 	db	99
    94  0004A3  72                 	db	114
    95  0004A4  6F                 	db	111
    96  0004A5  63                 	db	99
    97  0004A6  6F                 	db	111
    98  0004A7  6E                 	db	110
    99  0004A8  74                 	db	116
   100  0004A9  72                 	db	114
   101  0004AA  6F                 	db	111
   102  0004AB  6C                 	db	108
   103  0004AC  61                 	db	97
   104  0004AD  64                 	db	100
   105  0004AE  6F                 	db	111
   106  0004AF  72                 	db	114
   107  0004B0  65                 	db	101
   108  0004B1  73                 	db	115
   109  0004B2  20                 	db	32
   110  0004B3  20                 	db	32
   111  0004B4  20                 	db	32
   112  0004B5  20                 	db	32
   113  0004B6  20                 	db	32
   114  0004B7  20                 	db	32
   115  0004B8  20                 	db	32
   116  0004B9  20                 	db	32
   117  0004BA  20                 	db	32
   118  0004BB  20                 	db	32
   119  0004BC  20                 	db	32
   120  0004BD  20                 	db	32
   121  0004BE  20                 	db	32
   122  0004BF  20                 	db	32
   123  0004C0  20                 	db	32
   124  0004C1  20                 	db	32
   125  0004C2  00                 	db	0
   126                           
   127                           ;initializer for _segundos
   128  0004C3  38                 	db	56
   129                           
   130                           ;initializer for _minutos
   131  0004C4  11                 	db	17
   132                           
   133                           ;initializer for _horas
   134  0004C5  12                 	db	18
   135  0000                     _CCPR1L	set	4030
   136  0000                     _CCPR1H	set	4031
   137  0000                     _LATD	set	3980
   138  0000                     _ADCON0bits	set	4034
   139  0000                     _PORTD	set	3971
   140  0000                     _LATDbits	set	3980
   141  0000                     _TRISD	set	3989
   142  0000                     _PIE1bits	set	3997
   143  0000                     _CCP1CON	set	4029
   144  0000                     _ADCON2	set	4032
   145  0000                     _ADRESH	set	4036
   146  0000                     _T1CON	set	4045
   147  0000                     _ADCON0	set	4034
   148  0000                     _ADCON1	set	4033
   149  0000                     _INTCONbits	set	4082
   150  0000                     _PIR1bits	set	3998
   151                           
   152                           ; #config settings
   153                           
   154                           	psect	cinit
   155  0004C6                     __pcinit:
   156                           	callstack 0
   157  0004C6                     start_initialization:
   158                           	callstack 0
   159  0004C6                     __initialization:
   160                           	callstack 0
   161                           
   162                           ; Initialize objects allocated to COMRAM (54 bytes)
   163                           ; load TBLPTR registers with __pidataCOMRAM
   164  0004C6  0E90               	movlw	low __pidataCOMRAM
   165  0004C8  6EF6               	movwf	tblptrl,c
   166  0004CA  0E04               	movlw	high __pidataCOMRAM
   167  0004CC  6EF7               	movwf	tblptrh,c
   168  0004CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   169  0004D0  6EF8               	movwf	tblptru,c
   170  0004D2  EE00  F001         	lfsr	0,__pdataCOMRAM
   171  0004D6  EE10 F036          	lfsr	1,54
   172  0004DA                     copy_data0:
   173  0004DA  0009               	tblrd		*+
   174  0004DC  CFF5 FFEE          	movff	tablat,postinc0
   175  0004E0  50E5               	movf	postdec1,w,c
   176  0004E2  50E1               	movf	fsr1l,w,c
   177  0004E4  E1FA               	bnz	copy_data0
   178                           
   179                           ; Clear objects allocated to COMRAM (7 bytes)
   180  0004E6  EE00  F046         	lfsr	0,__pbssCOMRAM
   181  0004EA  0E07               	movlw	7
   182  0004EC                     clear_0:
   183  0004EC  6AEE               	clrf	postinc0,c
   184  0004EE  06E8               	decf	wreg,f,c
   185  0004F0  E1FD               	bnz	clear_0
   186  0004F2                     end_of_initialization:
   187                           	callstack 0
   188  0004F2                     __end_of__initialization:
   189                           	callstack 0
   190  0004F2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   191  0004F4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   192  0004F6  0100               	movlb	0
   193  0004F8  EF6B  F000         	goto	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMRAM
   196  000046                     __pbssCOMRAM:
   197                           	callstack 0
   198  000046                     _ticks:
   199                           	callstack 0
   200  000046                     	ds	1
   201  000047                     _unidad:
   202                           	callstack 0
   203  000047                     	ds	1
   204  000048                     _decena:
   205                           	callstack 0
   206  000048                     	ds	1
   207  000049                     _centena:
   208                           	callstack 0
   209  000049                     	ds	1
   210  00004A                     _resultado_ad:
   211                           	callstack 0
   212  00004A                     	ds	1
   213  00004B                     _y:
   214                           	callstack 0
   215  00004B                     	ds	1
   216  00004C                     _x:
   217                           	callstack 0
   218  00004C                     	ds	1
   219                           
   220                           	psect	dataCOMRAM
   221  000001                     __pdataCOMRAM:
   222                           	callstack 0
   223  000001                     _mensaje:
   224                           	callstack 0
   225  000001                     	ds	51
   226  000034                     _segundos:
   227                           	callstack 0
   228  000034                     	ds	1
   229  000035                     _minutos:
   230                           	callstack 0
   231  000035                     	ds	1
   232  000036                     _horas:
   233                           	callstack 0
   234  000036                     	ds	1
   235                           
   236                           	psect	cstackCOMRAM
   237  000037                     __pcstackCOMRAM:
   238                           	callstack 0
   239  000037                     ?___awmod:
   240                           	callstack 0
   241  000037                     ENVIA_NIBBLE@dato:
   242                           	callstack 0
   243  000037                     LEER_LCD@aux:
   244                           	callstack 0
   245  000037                     ___awmod@dividend:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x0
   249  000037                     	ds	1
   250  000038                     ENVIA_CHAR@dato:
   251                           	callstack 0
   252  000038                     ENVIA_LCD_CMD@dato:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000038                     	ds	1
   257  000039                     ENVIA_CHAR@aux:
   258                           	callstack 0
   259  000039                     ENVIA_LCD_CMD@aux:
   260                           	callstack 0
   261  000039                     ___awmod@divisor:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x2
   265  000039                     	ds	1
   266  00003A                     ??_LCD_CONFIG:
   267  00003A                     POS_CURSOR@columna:
   268                           	callstack 0
   269  00003A                     CURSOR_ONOFF@estado:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x3
   273  00003A                     	ds	1
   274  00003B                     ??_arranque_LCD:
   275  00003B                     POS_CURSOR@fila:
   276                           	callstack 0
   277  00003B                     ___awmod@counter:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x4
   281  00003B                     	ds	1
   282  00003C                     ??_titulaso:
   283  00003C                     ___awmod@sign:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x5
   287  00003C                     	ds	1
   288  00003D                     ?___awdiv:
   289                           	callstack 0
   290  00003D                     ___awdiv@dividend:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x6
   294  00003D                     	ds	2
   295  00003F                     ___awdiv@divisor:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x8
   299  00003F                     	ds	2
   300  000041                     ___awdiv@counter:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xA
   304  000041                     	ds	1
   305  000042                     ___awdiv@sign:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xB
   309  000042                     	ds	1
   310  000043                     ___awdiv@quotient:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xC
   314  000043                     	ds	2
   315  000045                     convierte_digitos@numero:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xE
   319  000045                     	ds	1
   320  000046                     
   321                           ; 1 bytes @ 0xF
   322 ;;
   323 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   324 ;;
   325 ;; *************** function _main *****************
   326 ;; Defined at:
   327 ;;		line 58 in file "maincode1.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:          0       0       0       0       0       0       0       0       0
   344 ;;      Totals:         0       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:        0 bytes
   346 ;; Hardware stack levels required when called: 5
   347 ;; This function calls:
   348 ;;		_ENVIA_CHAR
   349 ;;		_POS_CURSOR
   350 ;;		_arranque_LCD
   351 ;;		_configuro
   352 ;;		_convierte_digitos
   353 ;;		_titulaso
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text0
   360  0000D6                     __ptext0:
   361                           	callstack 0
   362  0000D6                     _main:
   363                           	callstack 26
   364  0000D6                     
   365                           ;maincode1.c: 59:     configuro();
   366  0000D6  ECDE  F002         	call	_configuro	;wreg free
   367  0000DA                     
   368                           ;maincode1.c: 60:     arranque_LCD();
   369  0000DA  ECCA  F002         	call	_arranque_LCD	;wreg free
   370  0000DE                     l1340:
   371                           
   372                           ;maincode1.c: 62:         titulaso();
   373  0000DE  EC1D  F001         	call	_titulaso	;wreg free
   374  0000E2                     
   375                           ;maincode1.c: 63:         ADCON0bits.GO_DONE = 1;
   376  0000E2  82C2               	bsf	194,1,c	;volatile
   377  0000E4                     l84:
   378  0000E4  B2C2               	btfsc	194,1,c	;volatile
   379  0000E6  EF77  F000         	goto	u471
   380  0000EA  EF79  F000         	goto	u470
   381  0000EE                     u471:
   382  0000EE  EF72  F000         	goto	l84
   383  0000F2                     u470:
   384  0000F2                     
   385                           ;maincode1.c: 65:         resultado_ad = (ADRESH >> 1) & 0x7F;
   386  0000F2  90D8               	bcf	status,0,c
   387  0000F4  30C4               	rrcf	196,w,c	;volatile
   388  0000F6  0B7F               	andlw	127
   389  0000F8  6E4A               	movwf	_resultado_ad^0,c
   390  0000FA                     
   391                           ;maincode1.c: 66:         convierte_digitos(resultado_ad);
   392  0000FA  504A               	movf	_resultado_ad^0,w,c
   393  0000FC  ECFE  F001         	call	_convierte_digitos
   394  000100                     
   395                           ;maincode1.c: 67:         POS_CURSOR(2,0);
   396  000100  0E00               	movlw	0
   397  000102  6E3A               	movwf	POS_CURSOR@columna^0,c
   398  000104  0E02               	movlw	2
   399  000106  EC2B  F002         	call	_POS_CURSOR
   400  00010A                     
   401                           ;maincode1.c: 68:         ENVIA_CHAR(centena + 0x30);
   402  00010A  5049               	movf	_centena^0,w,c
   403  00010C  0F30               	addlw	48
   404  00010E  EC7E  F002         	call	_ENVIA_CHAR
   405  000112                     
   406                           ;maincode1.c: 69:         ENVIA_CHAR(decena + 0x30);
   407  000112  5048               	movf	_decena^0,w,c
   408  000114  0F30               	addlw	48
   409  000116  EC7E  F002         	call	_ENVIA_CHAR
   410  00011A                     
   411                           ;maincode1.c: 70:         ENVIA_CHAR(unidad + 0x30);
   412  00011A  5047               	movf	_unidad^0,w,c
   413  00011C  0F30               	addlw	48
   414  00011E  EC7E  F002         	call	_ENVIA_CHAR
   415  000122                     
   416                           ;maincode1.c: 71:         ENVIA_CHAR(0xDF);
   417  000122  0EDF               	movlw	223
   418  000124  EC7E  F002         	call	_ENVIA_CHAR
   419  000128                     
   420                           ;maincode1.c: 72:         ENVIA_CHAR('C');
   421  000128  0E43               	movlw	67
   422  00012A  EC7E  F002         	call	_ENVIA_CHAR
   423  00012E                     
   424                           ;maincode1.c: 73:         ENVIA_CHAR(' ');
   425  00012E  0E20               	movlw	32
   426  000130  EC7E  F002         	call	_ENVIA_CHAR
   427  000134                     
   428                           ;maincode1.c: 74:         convierte_digitos(horas);
   429  000134  5036               	movf	_horas^0,w,c
   430  000136  ECFE  F001         	call	_convierte_digitos
   431  00013A                     
   432                           ;maincode1.c: 75:         ENVIA_CHAR(decena + 0x30);
   433  00013A  5048               	movf	_decena^0,w,c
   434  00013C  0F30               	addlw	48
   435  00013E  EC7E  F002         	call	_ENVIA_CHAR
   436  000142                     
   437                           ;maincode1.c: 76:         ENVIA_CHAR(unidad + 0x30);
   438  000142  5047               	movf	_unidad^0,w,c
   439  000144  0F30               	addlw	48
   440  000146  EC7E  F002         	call	_ENVIA_CHAR
   441  00014A                     
   442                           ;maincode1.c: 77:         ENVIA_CHAR(':');
   443  00014A  0E3A               	movlw	58
   444  00014C  EC7E  F002         	call	_ENVIA_CHAR
   445  000150                     
   446                           ;maincode1.c: 78:         convierte_digitos(minutos);
   447  000150  5035               	movf	_minutos^0,w,c
   448  000152  ECFE  F001         	call	_convierte_digitos
   449  000156                     
   450                           ;maincode1.c: 79:         ENVIA_CHAR(decena + 0x30);
   451  000156  5048               	movf	_decena^0,w,c
   452  000158  0F30               	addlw	48
   453  00015A  EC7E  F002         	call	_ENVIA_CHAR
   454  00015E                     
   455                           ;maincode1.c: 80:         ENVIA_CHAR(unidad + 0x30);
   456  00015E  5047               	movf	_unidad^0,w,c
   457  000160  0F30               	addlw	48
   458  000162  EC7E  F002         	call	_ENVIA_CHAR
   459  000166                     
   460                           ;maincode1.c: 81:         ENVIA_CHAR(':');
   461  000166  0E3A               	movlw	58
   462  000168  EC7E  F002         	call	_ENVIA_CHAR
   463  00016C                     
   464                           ;maincode1.c: 82:         convierte_digitos(segundos);
   465  00016C  5034               	movf	_segundos^0,w,c
   466  00016E  ECFE  F001         	call	_convierte_digitos
   467  000172                     
   468                           ;maincode1.c: 83:         ENVIA_CHAR(decena + 0x30);
   469  000172  5048               	movf	_decena^0,w,c
   470  000174  0F30               	addlw	48
   471  000176  EC7E  F002         	call	_ENVIA_CHAR
   472  00017A                     
   473                           ;maincode1.c: 84:         ENVIA_CHAR(unidad + 0x30);
   474  00017A  5047               	movf	_unidad^0,w,c
   475  00017C  0F30               	addlw	48
   476  00017E  EC7E  F002         	call	_ENVIA_CHAR
   477  000182  EF6F  F000         	goto	l1340
   478  000186  EF07  F000         	goto	start
   479  00018A                     __end_of_main:
   480                           	callstack 0
   481                           
   482 ;; *************** function _titulaso *****************
   483 ;; Defined at:
   484 ;;		line 38 in file "maincode1.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   498 ;;      Params:         0       0       0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0
   500 ;;      Temps:          2       0       0       0       0       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 4
   505 ;; This function calls:
   506 ;;		_ENVIA_CHAR
   507 ;;		_POS_CURSOR
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514  00023A                     __ptext1:
   515                           	callstack 0
   516  00023A                     _titulaso:
   517                           	callstack 26
   518  00023A                     
   519                           ;maincode1.c: 39:     POS_CURSOR(1,0);
   520  00023A  0E00               	movlw	0
   521  00023C  6E3A               	movwf	POS_CURSOR@columna^0,c
   522  00023E  0E01               	movlw	1
   523  000240  EC2B  F002         	call	_POS_CURSOR
   524  000244                     
   525                           ;maincode1.c: 40:     for(x=0;x<17;x++){
   526  000244  0E00               	movlw	0
   527  000246  6E4C               	movwf	_x^0,c
   528  000248                     l1320:
   529                           
   530                           ;maincode1.c: 41:         ENVIA_CHAR(mensaje[x+y]);
   531  000248  0E01               	movlw	low _mensaje
   532  00024A  6E3C               	movwf	??_titulaso^0,c
   533  00024C  0E00               	movlw	high _mensaje
   534  00024E  6E3D               	movwf	(??_titulaso+1)^0,c
   535  000250  504C               	movf	_x^0,w,c
   536  000252  263C               	addwf	??_titulaso^0,f,c
   537  000254  0E00               	movlw	0
   538  000256  223D               	addwfc	(??_titulaso+1)^0,f,c
   539  000258  504B               	movf	_y^0,w,c
   540  00025A  243C               	addwf	??_titulaso^0,w,c
   541  00025C  6ED9               	movwf	fsr2l,c
   542  00025E  0E00               	movlw	0
   543  000260  203D               	addwfc	(??_titulaso+1)^0,w,c
   544  000262  6EDA               	movwf	fsr2h,c
   545  000264  50DF               	movf	indf2,w,c
   546  000266  EC7E  F002         	call	_ENVIA_CHAR
   547  00026A                     
   548                           ;maincode1.c: 42:     }
   549  00026A  2A4C               	incf	_x^0,f,c
   550  00026C  0E10               	movlw	16
   551  00026E  644C               	cpfsgt	_x^0,c
   552  000270  EF3C  F001         	goto	u451
   553  000274  EF3E  F001         	goto	u450
   554  000278                     u451:
   555  000278  EF24  F001         	goto	l1320
   556  00027C                     u450:
   557  00027C                     
   558                           ;maincode1.c: 43:     _delay((unsigned long)((150)*(32000000UL/4000.0)));
   559  00027C  0E07               	movlw	7
   560  00027E  6E3D               	movwf	(??_titulaso+1)^0,c
   561  000280  0E17               	movlw	23
   562  000282  6E3C               	movwf	??_titulaso^0,c
   563  000284  0E6A               	movlw	106
   564  000286                     u487:
   565  000286  2EE8               	decfsz	wreg,f,c
   566  000288  D7FE               	bra	u487
   567  00028A  2E3C               	decfsz	??_titulaso^0,f,c
   568  00028C  D7FC               	bra	u487
   569  00028E  2E3D               	decfsz	(??_titulaso+1)^0,f,c
   570  000290  D7FA               	bra	u487
   571  000292  D000               	nop2	
   572  000294                     
   573                           ;maincode1.c: 44:     if(y == 34){
   574  000294  0E22               	movlw	34
   575  000296  184B               	xorwf	_y^0,w,c
   576  000298  A4D8               	btfss	status,2,c
   577  00029A  EF51  F001         	goto	u461
   578  00029E  EF53  F001         	goto	u460
   579  0002A2                     u461:
   580  0002A2  EF57  F001         	goto	l1332
   581  0002A6                     u460:
   582  0002A6                     
   583                           ;maincode1.c: 45:         y = 0;
   584  0002A6  0E00               	movlw	0
   585  0002A8  6E4B               	movwf	_y^0,c
   586                           
   587                           ;maincode1.c: 46:     }
   588  0002AA  EF58  F001         	goto	l75
   589  0002AE                     l1332:
   590                           
   591                           ;maincode1.c: 48:         y++;
   592  0002AE  2A4B               	incf	_y^0,f,c
   593  0002B0                     l75:
   594  0002B0  0012               	return		;funcret
   595  0002B2                     __end_of_titulaso:
   596                           	callstack 0
   597                           
   598 ;; *************** function _POS_CURSOR *****************
   599 ;; Defined at:
   600 ;;		line 6 in file "LCD.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  fila            1    wreg     unsigned char 
   603 ;;  columna         1    3[COMRAM] unsigned char 
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  fila            1    4[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         1       0       0       0       0       0       0       0       0
   616 ;;      Locals:         1       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         2       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        2 bytes
   620 ;; Hardware stack levels used: 1
   621 ;; Hardware stack levels required when called: 3
   622 ;; This function calls:
   623 ;;		_ENVIA_LCD_CMD
   624 ;; This function is called by:
   625 ;;		_titulaso
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text2
   631  000456                     __ptext2:
   632                           	callstack 0
   633  000456                     _POS_CURSOR:
   634                           	callstack 26
   635                           
   636                           ;incstack = 0
   637                           ;POS_CURSOR@fila stored from wreg
   638  000456  6E3B               	movwf	POS_CURSOR@fila^0,c
   639  000458                     
   640                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   641  000458  043B               	decf	POS_CURSOR@fila^0,w,c
   642  00045A  A4D8               	btfss	status,2,c
   643  00045C  EF32  F002         	goto	u311
   644  000460  EF34  F002         	goto	u310
   645  000464                     u311:
   646  000464  EF3A  F002         	goto	l1228
   647  000468                     u310:
   648  000468                     
   649                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   650  000468  503A               	movf	POS_CURSOR@columna^0,w,c
   651  00046A  0F80               	addlw	128
   652  00046C  EC98  F002         	call	_ENVIA_LCD_CMD
   653                           
   654                           ;LCD.c: 11:  }
   655  000470  EF47  F002         	goto	l126
   656  000474                     l1228:
   657  000474  0E02               	movlw	2
   658  000476  183B               	xorwf	POS_CURSOR@fila^0,w,c
   659  000478  A4D8               	btfss	status,2,c
   660  00047A  EF41  F002         	goto	u321
   661  00047E  EF43  F002         	goto	u320
   662  000482                     u321:
   663  000482  EF47  F002         	goto	l126
   664  000486                     u320:
   665  000486                     
   666                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   667  000486  503A               	movf	POS_CURSOR@columna^0,w,c
   668  000488  0FC0               	addlw	192
   669  00048A  EC98  F002         	call	_ENVIA_LCD_CMD
   670  00048E                     l126:
   671  00048E  0012               	return		;funcret
   672  000490                     __end_of_POS_CURSOR:
   673                           	callstack 0
   674                           
   675 ;; *************** function _ENVIA_CHAR *****************
   676 ;; Defined at:
   677 ;;		line 50 in file "LCD.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  dato            1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  dato            1    1[COMRAM] unsigned char 
   682 ;;  aux             1    2[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   692 ;;      Params:         0       0       0       0       0       0       0       0       0
   693 ;;      Locals:         2       0       0       0       0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0
   695 ;;      Totals:         2       0       0       0       0       0       0       0       0
   696 ;;Total ram usage:        2 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 2
   699 ;; This function calls:
   700 ;;		_ENVIA_NIBBLE
   701 ;;		_LEER_LCD
   702 ;; This function is called by:
   703 ;;		_titulaso
   704 ;;		_main
   705 ;;		_ESCRIBE_MENSAJE
   706 ;;		_GENERACARACTER
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text3
   711  0004FC                     __ptext3:
   712                           	callstack 0
   713  0004FC                     _ENVIA_CHAR:
   714                           	callstack 27
   715                           
   716                           ;incstack = 0
   717                           ;ENVIA_CHAR@dato stored from wreg
   718  0004FC  6E38               	movwf	ENVIA_CHAR@dato^0,c
   719  0004FE                     
   720                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   721  0004FE  808C               	bsf	140,0,c	;volatile
   722  000500                     
   723                           ;LCD.c: 54:  LEER_LCD();
   724  000500  EC95  F001         	call	_LEER_LCD	;wreg free
   725  000504                     
   726                           ;LCD.c: 55:  TRISD = 0x00;
   727  000504  0E00               	movlw	0
   728  000506  6E95               	movwf	149,c	;volatile
   729  000508                     
   730                           ;LCD.c: 56:         _delay(1200);
   731  000508  0EF0               	movlw	240
   732  00050A                     u497:
   733  00050A  D000               	nop2	
   734  00050C  2EE8               	decfsz	wreg,f,c
   735  00050E  D7FD               	bra	u497
   736  000510                     
   737                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   738  000510  928C               	bcf	140,1,c	;volatile
   739  000512                     
   740                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   741  000512  948C               	bcf	140,2,c	;volatile
   742  000514                     
   743                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   744  000514  808C               	bsf	140,0,c	;volatile
   745  000516                     
   746                           ;LCD.c: 61:  aux = dato & 0xF0;
   747  000516  5038               	movf	ENVIA_CHAR@dato^0,w,c
   748  000518  0BF0               	andlw	240
   749  00051A  6E39               	movwf	ENVIA_CHAR@aux^0,c
   750  00051C                     
   751                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   752  00051C  5039               	movf	ENVIA_CHAR@aux^0,w,c
   753  00051E  ECF0  F002         	call	_ENVIA_NIBBLE
   754  000522                     
   755                           ;LCD.c: 63:  aux = dato << 4;
   756  000522  3838               	swapf	ENVIA_CHAR@dato^0,w,c
   757  000524  0BF0               	andlw	240
   758  000526  6E39               	movwf	ENVIA_CHAR@aux^0,c
   759  000528                     
   760                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   761  000528  5039               	movf	ENVIA_CHAR@aux^0,w,c
   762  00052A  ECF0  F002         	call	_ENVIA_NIBBLE
   763  00052E  0012               	return		;funcret
   764  000530                     __end_of_ENVIA_CHAR:
   765                           	callstack 0
   766                           
   767 ;; *************** function _convierte_digitos *****************
   768 ;; Defined at:
   769 ;;		line 52 in file "maincode1.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  numero          1    wreg     unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  numero          1   14[COMRAM] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   783 ;;      Params:         0       0       0       0       0       0       0       0       0
   784 ;;      Locals:         1       0       0       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0       0       0
   786 ;;      Totals:         1       0       0       0       0       0       0       0       0
   787 ;;Total ram usage:        1 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 2
   790 ;; This function calls:
   791 ;;		___awdiv
   792 ;;		___awmod
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text4
   799  0003FC                     __ptext4:
   800                           	callstack 0
   801  0003FC                     _convierte_digitos:
   802                           	callstack 28
   803                           
   804                           ;incstack = 0
   805                           ;convierte_digitos@numero stored from wreg
   806  0003FC  6E45               	movwf	convierte_digitos@numero^0,c
   807  0003FE                     
   808                           ;maincode1.c: 53:     centena = numero / 100;
   809  0003FE  C045  F03D         	movff	convierte_digitos@numero,___awdiv@dividend
   810  000402  6A3E               	clrf	(___awdiv@dividend+1)^0,c
   811  000404  0E00               	movlw	0
   812  000406  6E40               	movwf	(___awdiv@divisor+1)^0,c
   813  000408  0E64               	movlw	100
   814  00040A  6E3F               	movwf	___awdiv@divisor^0,c
   815  00040C  EC09  F000         	call	___awdiv	;wreg free
   816  000410  503D               	movf	?___awdiv^0,w,c
   817  000412  6E49               	movwf	_centena^0,c
   818                           
   819                           ;maincode1.c: 54:     decena = (numero % 100) / 10;
   820  000414  0E00               	movlw	0
   821  000416  6E3A               	movwf	(___awmod@divisor+1)^0,c
   822  000418  0E64               	movlw	100
   823  00041A  6E39               	movwf	___awmod@divisor^0,c
   824  00041C  C045  F037         	movff	convierte_digitos@numero,___awmod@dividend
   825  000420  6A38               	clrf	(___awmod@dividend+1)^0,c
   826  000422  ECC5  F000         	call	___awmod	;wreg free
   827  000426  C037  F03D         	movff	?___awmod,___awdiv@dividend
   828  00042A  C038  F03E         	movff	?___awmod+1,___awdiv@dividend+1
   829  00042E  0E00               	movlw	0
   830  000430  6E40               	movwf	(___awdiv@divisor+1)^0,c
   831  000432  0E0A               	movlw	10
   832  000434  6E3F               	movwf	___awdiv@divisor^0,c
   833  000436  EC09  F000         	call	___awdiv	;wreg free
   834  00043A  503D               	movf	?___awdiv^0,w,c
   835  00043C  6E48               	movwf	_decena^0,c
   836                           
   837                           ;maincode1.c: 55:     unidad = numero % 10;
   838  00043E  C045  F037         	movff	convierte_digitos@numero,___awmod@dividend
   839  000442  6A38               	clrf	(___awmod@dividend+1)^0,c
   840  000444  0E00               	movlw	0
   841  000446  6E3A               	movwf	(___awmod@divisor+1)^0,c
   842  000448  0E0A               	movlw	10
   843  00044A  6E39               	movwf	___awmod@divisor^0,c
   844  00044C  ECC5  F000         	call	___awmod	;wreg free
   845  000450  5037               	movf	?___awmod^0,w,c
   846  000452  6E47               	movwf	_unidad^0,c
   847  000454  0012               	return		;funcret
   848  000456                     __end_of_convierte_digitos:
   849                           	callstack 0
   850                           
   851 ;; *************** function ___awmod *****************
   852 ;; Defined at:
   853 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  dividend        2    0[COMRAM] int 
   856 ;;  divisor         2    2[COMRAM] int 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  sign            1    5[COMRAM] unsigned char 
   859 ;;  counter         1    4[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2    0[COMRAM] int 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         4       0       0       0       0       0       0       0       0
   870 ;;      Locals:         2       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         6       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        6 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_convierte_digitos
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text5
   884  00018A                     __ptext5:
   885                           	callstack 0
   886  00018A                     ___awmod:
   887                           	callstack 28
   888  00018A  0E00               	movlw	0
   889  00018C  6E3C               	movwf	___awmod@sign^0,c
   890  00018E  BE38               	btfsc	(___awmod@dividend+1)^0,7,c
   891  000190  EFCE  F000         	goto	u390
   892  000194  EFCC  F000         	goto	u391
   893  000198                     u391:
   894  000198  EFD4  F000         	goto	l1284
   895  00019C                     u390:
   896  00019C  6C37               	negf	___awmod@dividend^0,c
   897  00019E  1E38               	comf	(___awmod@dividend+1)^0,f,c
   898  0001A0  B0D8               	btfsc	status,0,c
   899  0001A2  2A38               	incf	(___awmod@dividend+1)^0,f,c
   900  0001A4  0E01               	movlw	1
   901  0001A6  6E3C               	movwf	___awmod@sign^0,c
   902  0001A8                     l1284:
   903  0001A8  BE3A               	btfsc	(___awmod@divisor+1)^0,7,c
   904  0001AA  EFDB  F000         	goto	u400
   905  0001AE  EFD9  F000         	goto	u401
   906  0001B2                     u401:
   907  0001B2  EFDF  F000         	goto	l1288
   908  0001B6                     u400:
   909  0001B6  6C39               	negf	___awmod@divisor^0,c
   910  0001B8  1E3A               	comf	(___awmod@divisor+1)^0,f,c
   911  0001BA  B0D8               	btfsc	status,0,c
   912  0001BC  2A3A               	incf	(___awmod@divisor+1)^0,f,c
   913  0001BE                     l1288:
   914  0001BE  5039               	movf	___awmod@divisor^0,w,c
   915  0001C0  103A               	iorwf	(___awmod@divisor+1)^0,w,c
   916  0001C2  B4D8               	btfsc	status,2,c
   917  0001C4  EFE6  F000         	goto	u411
   918  0001C8  EFE8  F000         	goto	u410
   919  0001CC                     u411:
   920  0001CC  EF0C  F001         	goto	l1304
   921  0001D0                     u410:
   922  0001D0  0E01               	movlw	1
   923  0001D2  6E3B               	movwf	___awmod@counter^0,c
   924  0001D4  EFF0  F000         	goto	l1294
   925  0001D8                     l1292:
   926  0001D8  90D8               	bcf	status,0,c
   927  0001DA  3639               	rlcf	___awmod@divisor^0,f,c
   928  0001DC  363A               	rlcf	(___awmod@divisor+1)^0,f,c
   929  0001DE  2A3B               	incf	___awmod@counter^0,f,c
   930  0001E0                     l1294:
   931  0001E0  AE3A               	btfss	(___awmod@divisor+1)^0,7,c
   932  0001E2  EFF5  F000         	goto	u421
   933  0001E6  EFF7  F000         	goto	u420
   934  0001EA                     u421:
   935  0001EA  EFEC  F000         	goto	l1292
   936  0001EE                     u420:
   937  0001EE                     l1296:
   938  0001EE  5039               	movf	___awmod@divisor^0,w,c
   939  0001F0  5C37               	subwf	___awmod@dividend^0,w,c
   940  0001F2  503A               	movf	(___awmod@divisor+1)^0,w,c
   941  0001F4  5838               	subwfb	(___awmod@dividend+1)^0,w,c
   942  0001F6  A0D8               	btfss	status,0,c
   943  0001F8  EF00  F001         	goto	u431
   944  0001FC  EF02  F001         	goto	u430
   945  000200                     u431:
   946  000200  EF06  F001         	goto	l1300
   947  000204                     u430:
   948  000204  5039               	movf	___awmod@divisor^0,w,c
   949  000206  5E37               	subwf	___awmod@dividend^0,f,c
   950  000208  503A               	movf	(___awmod@divisor+1)^0,w,c
   951  00020A  5A38               	subwfb	(___awmod@dividend+1)^0,f,c
   952  00020C                     l1300:
   953  00020C  90D8               	bcf	status,0,c
   954  00020E  323A               	rrcf	(___awmod@divisor+1)^0,f,c
   955  000210  3239               	rrcf	___awmod@divisor^0,f,c
   956  000212  2E3B               	decfsz	___awmod@counter^0,f,c
   957  000214  EFF7  F000         	goto	l1296
   958  000218                     l1304:
   959  000218  503C               	movf	___awmod@sign^0,w,c
   960  00021A  B4D8               	btfsc	status,2,c
   961  00021C  EF12  F001         	goto	u441
   962  000220  EF14  F001         	goto	u440
   963  000224                     u441:
   964  000224  EF18  F001         	goto	l1308
   965  000228                     u440:
   966  000228  6C37               	negf	___awmod@dividend^0,c
   967  00022A  1E38               	comf	(___awmod@dividend+1)^0,f,c
   968  00022C  B0D8               	btfsc	status,0,c
   969  00022E  2A38               	incf	(___awmod@dividend+1)^0,f,c
   970  000230                     l1308:
   971  000230  C037  F037         	movff	___awmod@dividend,?___awmod
   972  000234  C038  F038         	movff	___awmod@dividend+1,?___awmod+1
   973  000238  0012               	return		;funcret
   974  00023A                     __end_of___awmod:
   975                           	callstack 0
   976                           
   977 ;; *************** function ___awdiv *****************
   978 ;; Defined at:
   979 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  dividend        2    6[COMRAM] int 
   982 ;;  divisor         2    8[COMRAM] int 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  quotient        2   12[COMRAM] int 
   985 ;;  sign            1   11[COMRAM] unsigned char 
   986 ;;  counter         1   10[COMRAM] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  2    6[COMRAM] int 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         4       0       0       0       0       0       0       0       0
   997 ;;      Locals:         4       0       0       0       0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0
   999 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1000 ;;Total ram usage:        8 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_convierte_digitos
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text6
  1011  000012                     __ptext6:
  1012                           	callstack 0
  1013  000012                     ___awdiv:
  1014                           	callstack 28
  1015  000012  0E00               	movlw	0
  1016  000014  6E42               	movwf	___awdiv@sign^0,c
  1017  000016  BE40               	btfsc	(___awdiv@divisor+1)^0,7,c
  1018  000018  EF12  F000         	goto	u330
  1019  00001C  EF10  F000         	goto	u331
  1020  000020                     u331:
  1021  000020  EF18  F000         	goto	l1240
  1022  000024                     u330:
  1023  000024  6C3F               	negf	___awdiv@divisor^0,c
  1024  000026  1E40               	comf	(___awdiv@divisor+1)^0,f,c
  1025  000028  B0D8               	btfsc	status,0,c
  1026  00002A  2A40               	incf	(___awdiv@divisor+1)^0,f,c
  1027  00002C  0E01               	movlw	1
  1028  00002E  6E42               	movwf	___awdiv@sign^0,c
  1029  000030                     l1240:
  1030  000030  BE3E               	btfsc	(___awdiv@dividend+1)^0,7,c
  1031  000032  EF1F  F000         	goto	u340
  1032  000036  EF1D  F000         	goto	u341
  1033  00003A                     u341:
  1034  00003A  EF25  F000         	goto	l1246
  1035  00003E                     u340:
  1036  00003E  6C3D               	negf	___awdiv@dividend^0,c
  1037  000040  1E3E               	comf	(___awdiv@dividend+1)^0,f,c
  1038  000042  B0D8               	btfsc	status,0,c
  1039  000044  2A3E               	incf	(___awdiv@dividend+1)^0,f,c
  1040  000046  0E01               	movlw	1
  1041  000048  1A42               	xorwf	___awdiv@sign^0,f,c
  1042  00004A                     l1246:
  1043  00004A  0E00               	movlw	0
  1044  00004C  6E44               	movwf	(___awdiv@quotient+1)^0,c
  1045  00004E  0E00               	movlw	0
  1046  000050  6E43               	movwf	___awdiv@quotient^0,c
  1047  000052  503F               	movf	___awdiv@divisor^0,w,c
  1048  000054  1040               	iorwf	(___awdiv@divisor+1)^0,w,c
  1049  000056  B4D8               	btfsc	status,2,c
  1050  000058  EF30  F000         	goto	u351
  1051  00005C  EF32  F000         	goto	u350
  1052  000060                     u351:
  1053  000060  EF5A  F000         	goto	l1268
  1054  000064                     u350:
  1055  000064  0E01               	movlw	1
  1056  000066  6E41               	movwf	___awdiv@counter^0,c
  1057  000068  EF3A  F000         	goto	l1254
  1058  00006C                     l1252:
  1059  00006C  90D8               	bcf	status,0,c
  1060  00006E  363F               	rlcf	___awdiv@divisor^0,f,c
  1061  000070  3640               	rlcf	(___awdiv@divisor+1)^0,f,c
  1062  000072  2A41               	incf	___awdiv@counter^0,f,c
  1063  000074                     l1254:
  1064  000074  AE40               	btfss	(___awdiv@divisor+1)^0,7,c
  1065  000076  EF3F  F000         	goto	u361
  1066  00007A  EF41  F000         	goto	u360
  1067  00007E                     u361:
  1068  00007E  EF36  F000         	goto	l1252
  1069  000082                     u360:
  1070  000082                     l1256:
  1071  000082  90D8               	bcf	status,0,c
  1072  000084  3643               	rlcf	___awdiv@quotient^0,f,c
  1073  000086  3644               	rlcf	(___awdiv@quotient+1)^0,f,c
  1074  000088  503F               	movf	___awdiv@divisor^0,w,c
  1075  00008A  5C3D               	subwf	___awdiv@dividend^0,w,c
  1076  00008C  5040               	movf	(___awdiv@divisor+1)^0,w,c
  1077  00008E  583E               	subwfb	(___awdiv@dividend+1)^0,w,c
  1078  000090  A0D8               	btfss	status,0,c
  1079  000092  EF4D  F000         	goto	u371
  1080  000096  EF4F  F000         	goto	u370
  1081  00009A                     u371:
  1082  00009A  EF54  F000         	goto	l1264
  1083  00009E                     u370:
  1084  00009E  503F               	movf	___awdiv@divisor^0,w,c
  1085  0000A0  5E3D               	subwf	___awdiv@dividend^0,f,c
  1086  0000A2  5040               	movf	(___awdiv@divisor+1)^0,w,c
  1087  0000A4  5A3E               	subwfb	(___awdiv@dividend+1)^0,f,c
  1088  0000A6  8043               	bsf	___awdiv@quotient^0,0,c
  1089  0000A8                     l1264:
  1090  0000A8  90D8               	bcf	status,0,c
  1091  0000AA  3240               	rrcf	(___awdiv@divisor+1)^0,f,c
  1092  0000AC  323F               	rrcf	___awdiv@divisor^0,f,c
  1093  0000AE  2E41               	decfsz	___awdiv@counter^0,f,c
  1094  0000B0  EF41  F000         	goto	l1256
  1095  0000B4                     l1268:
  1096  0000B4  5042               	movf	___awdiv@sign^0,w,c
  1097  0000B6  B4D8               	btfsc	status,2,c
  1098  0000B8  EF60  F000         	goto	u381
  1099  0000BC  EF62  F000         	goto	u380
  1100  0000C0                     u381:
  1101  0000C0  EF66  F000         	goto	l1272
  1102  0000C4                     u380:
  1103  0000C4  6C43               	negf	___awdiv@quotient^0,c
  1104  0000C6  1E44               	comf	(___awdiv@quotient+1)^0,f,c
  1105  0000C8  B0D8               	btfsc	status,0,c
  1106  0000CA  2A44               	incf	(___awdiv@quotient+1)^0,f,c
  1107  0000CC                     l1272:
  1108  0000CC  C043  F03D         	movff	___awdiv@quotient,?___awdiv
  1109  0000D0  C044  F03E         	movff	___awdiv@quotient+1,?___awdiv+1
  1110  0000D4  0012               	return		;funcret
  1111  0000D6                     __end_of___awdiv:
  1112                           	callstack 0
  1113                           
  1114 ;; *************** function _configuro *****************
  1115 ;; Defined at:
  1116 ;;		line 16 in file "maincode1.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 1
  1137 ;; This function calls:
  1138 ;;		Nothing
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text7
  1145  0005BC                     __ptext7:
  1146                           	callstack 0
  1147  0005BC                     _configuro:
  1148                           	callstack 29
  1149  0005BC                     
  1150                           ;maincode1.c: 17:     ADCON2 = 0x24;
  1151  0005BC  0E24               	movlw	36
  1152  0005BE  6EC0               	movwf	192,c	;volatile
  1153                           
  1154                           ;maincode1.c: 18:     ADCON1 = 0x1B;
  1155  0005C0  0E1B               	movlw	27
  1156  0005C2  6EC1               	movwf	193,c	;volatile
  1157                           
  1158                           ;maincode1.c: 19:     ADCON0 = 0x01;
  1159  0005C4  0E01               	movlw	1
  1160  0005C6  6EC2               	movwf	194,c	;volatile
  1161                           
  1162                           ;maincode1.c: 20:     T1CON = 0x31;
  1163  0005C8  0E31               	movlw	49
  1164  0005CA  6ECD               	movwf	205,c	;volatile
  1165                           
  1166                           ;maincode1.c: 21:     CCP1CON = 0x0B;
  1167  0005CC  0E0B               	movlw	11
  1168  0005CE  6EBD               	movwf	189,c	;volatile
  1169  0005D0                     
  1170                           ;maincode1.c: 22:     INTCONbits.GIE = 1;
  1171  0005D0  8EF2               	bsf	242,7,c	;volatile
  1172  0005D2                     
  1173                           ;maincode1.c: 23:     INTCONbits.PEIE = 1;
  1174  0005D2  8CF2               	bsf	242,6,c	;volatile
  1175  0005D4                     
  1176                           ;maincode1.c: 24:     PIE1bits.CCP1IE = 1;
  1177  0005D4  849D               	bsf	157,2,c	;volatile
  1178                           
  1179                           ;maincode1.c: 25:     CCPR1H = 0xF4;
  1180  0005D6  0EF4               	movlw	244
  1181  0005D8  6EBF               	movwf	191,c	;volatile
  1182                           
  1183                           ;maincode1.c: 26:     CCPR1L = 0x24;
  1184  0005DA  0E24               	movlw	36
  1185  0005DC  6EBE               	movwf	190,c	;volatile
  1186  0005DE  0012               	return		;funcret
  1187  0005E0                     __end_of_configuro:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _arranque_LCD *****************
  1191 ;; Defined at:
  1192 ;;		line 29 in file "maincode1.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1208 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        1 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 4
  1213 ;; This function calls:
  1214 ;;		_BORRAR_LCD
  1215 ;;		_CURSOR_HOME
  1216 ;;		_CURSOR_ONOFF
  1217 ;;		_LCD_CONFIG
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text8
  1224  000594                     __ptext8:
  1225                           	callstack 0
  1226  000594                     _arranque_LCD:
  1227                           	callstack 26
  1228  000594                     
  1229                           ;maincode1.c: 30:     TRISD = 0x00;
  1230  000594  0E00               	movlw	0
  1231  000596  6E95               	movwf	149,c	;volatile
  1232  000598                     
  1233                           ;maincode1.c: 31:     LCD_CONFIG();
  1234  000598  ECCE  F001         	call	_LCD_CONFIG	;wreg free
  1235  00059C                     
  1236                           ;maincode1.c: 32:     _delay((unsigned long)((24)*(32000000UL/4000.0)));
  1237  00059C  0EFA               	movlw	250
  1238  00059E  6E3B               	movwf	??_arranque_LCD^0,c
  1239  0005A0  0E58               	movlw	88
  1240  0005A2                     u507:
  1241  0005A2  2EE8               	decfsz	wreg,f,c
  1242  0005A4  D7FE               	bra	u507
  1243  0005A6  2E3B               	decfsz	??_arranque_LCD^0,f,c
  1244  0005A8  D7FC               	bra	u507
  1245  0005AA  D000               	nop2	
  1246  0005AC                     
  1247                           ;maincode1.c: 33:     BORRAR_LCD();
  1248  0005AC  EC02  F003         	call	_BORRAR_LCD	;wreg free
  1249  0005B0                     
  1250                           ;maincode1.c: 34:     CURSOR_HOME();
  1251  0005B0  ECFE  F002         	call	_CURSOR_HOME	;wreg free
  1252  0005B4                     
  1253                           ;maincode1.c: 35:     CURSOR_ONOFF(1);
  1254  0005B4  0E01               	movlw	1
  1255  0005B6  ECB2  F002         	call	_CURSOR_ONOFF
  1256  0005BA  0012               	return		;funcret
  1257  0005BC                     __end_of_arranque_LCD:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _LCD_CONFIG *****************
  1261 ;; Defined at:
  1262 ;;		line 72 in file "LCD.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1278 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1279 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1280 ;;Total ram usage:        1 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 3
  1283 ;; This function calls:
  1284 ;;		_ENVIA_LCD_CMD
  1285 ;;		_ENVIA_NIBBLE
  1286 ;; This function is called by:
  1287 ;;		_arranque_LCD
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text9
  1292  00039C                     __ptext9:
  1293                           	callstack 0
  1294  00039C                     _LCD_CONFIG:
  1295                           	callstack 26
  1296  00039C                     
  1297                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1298  00039C  908C               	bcf	140,0,c	;volatile
  1299                           
  1300                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1301  00039E  928C               	bcf	140,1,c	;volatile
  1302  0003A0                     
  1303                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1304  0003A0  0E30               	movlw	48
  1305  0003A2  ECF0  F002         	call	_ENVIA_NIBBLE
  1306  0003A6                     
  1307                           ;LCD.c: 77:         _delay(24000);
  1308  0003A6  0E20               	movlw	32
  1309  0003A8  6E3A               	movwf	??_LCD_CONFIG^0,c
  1310  0003AA  0E2A               	movlw	42
  1311  0003AC                     u517:
  1312  0003AC  2EE8               	decfsz	wreg,f,c
  1313  0003AE  D7FE               	bra	u517
  1314  0003B0  2E3A               	decfsz	??_LCD_CONFIG^0,f,c
  1315  0003B2  D7FC               	bra	u517
  1316  0003B4                     
  1317                           ;LCD.c: 78:         _delay(24000);
  1318  0003B4  0E20               	movlw	32
  1319  0003B6  6E3A               	movwf	??_LCD_CONFIG^0,c
  1320  0003B8  0E2A               	movlw	42
  1321  0003BA                     u527:
  1322  0003BA  2EE8               	decfsz	wreg,f,c
  1323  0003BC  D7FE               	bra	u527
  1324  0003BE  2E3A               	decfsz	??_LCD_CONFIG^0,f,c
  1325  0003C0  D7FC               	bra	u527
  1326                           
  1327                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1328  0003C2  0E30               	movlw	48
  1329  0003C4  ECF0  F002         	call	_ENVIA_NIBBLE
  1330  0003C8                     
  1331                           ;LCD.c: 83:  _delay(1200);
  1332  0003C8  0EF0               	movlw	240
  1333  0003CA                     u537:
  1334  0003CA  D000               	nop2	
  1335  0003CC  2EE8               	decfsz	wreg,f,c
  1336  0003CE  D7FD               	bra	u537
  1337  0003D0                     
  1338                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1339  0003D0  0E30               	movlw	48
  1340  0003D2  ECF0  F002         	call	_ENVIA_NIBBLE
  1341  0003D6                     
  1342                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1343  0003D6  0E20               	movlw	32
  1344  0003D8  ECF0  F002         	call	_ENVIA_NIBBLE
  1345  0003DC                     
  1346                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1347  0003DC  0E01               	movlw	1
  1348  0003DE  EC98  F002         	call	_ENVIA_LCD_CMD
  1349  0003E2                     
  1350                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1351  0003E2  0E28               	movlw	40
  1352  0003E4  EC98  F002         	call	_ENVIA_LCD_CMD
  1353  0003E8                     
  1354                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1355  0003E8  0E0F               	movlw	15
  1356  0003EA  EC98  F002         	call	_ENVIA_LCD_CMD
  1357  0003EE                     
  1358                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1359  0003EE  0E06               	movlw	6
  1360  0003F0  EC98  F002         	call	_ENVIA_LCD_CMD
  1361  0003F4                     
  1362                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1363  0003F4  0E01               	movlw	1
  1364  0003F6  EC98  F002         	call	_ENVIA_LCD_CMD
  1365  0003FA  0012               	return		;funcret
  1366  0003FC                     __end_of_LCD_CONFIG:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _CURSOR_ONOFF *****************
  1370 ;; Defined at:
  1371 ;;		line 35 in file "LCD.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  estado          1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  estado          1    3[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 3
  1392 ;; This function calls:
  1393 ;;		_ENVIA_LCD_CMD
  1394 ;; This function is called by:
  1395 ;;		_arranque_LCD
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text10
  1400  000564                     __ptext10:
  1401                           	callstack 0
  1402  000564                     _CURSOR_ONOFF:
  1403                           	callstack 26
  1404                           
  1405                           ;incstack = 0
  1406                           ;CURSOR_ONOFF@estado stored from wreg
  1407  000564  6E3A               	movwf	CURSOR_ONOFF@estado^0,c
  1408  000566                     
  1409                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1410  000566  503A               	movf	CURSOR_ONOFF@estado^0,w,c
  1411  000568  A4D8               	btfss	status,2,c
  1412  00056A  EFB9  F002         	goto	u21
  1413  00056E  EFBB  F002         	goto	u20
  1414  000572                     u21:
  1415  000572  EFBE  F002         	goto	l952
  1416  000576                     u20:
  1417  000576  0E0E               	movlw	14
  1418  000578  EC98  F002         	call	_ENVIA_LCD_CMD
  1419  00057C                     l952:
  1420                           
  1421                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1422  00057C  043A               	decf	CURSOR_ONOFF@estado^0,w,c
  1423  00057E  A4D8               	btfss	status,2,c
  1424  000580  EFC4  F002         	goto	u31
  1425  000584  EFC6  F002         	goto	u30
  1426  000588                     u31:
  1427  000588  EFC9  F002         	goto	l144
  1428  00058C                     u30:
  1429  00058C  0E0C               	movlw	12
  1430  00058E  EC98  F002         	call	_ENVIA_LCD_CMD
  1431  000592                     l144:
  1432  000592  0012               	return		;funcret
  1433  000594                     __end_of_CURSOR_ONOFF:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _CURSOR_HOME *****************
  1437 ;; Defined at:
  1438 ;;		line 30 in file "LCD.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 3
  1459 ;; This function calls:
  1460 ;;		_ENVIA_LCD_CMD
  1461 ;; This function is called by:
  1462 ;;		_arranque_LCD
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  0005FC                     __ptext11:
  1468                           	callstack 0
  1469  0005FC                     _CURSOR_HOME:
  1470                           	callstack 26
  1471  0005FC                     
  1472                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1473  0005FC  0E02               	movlw	2
  1474  0005FE  EC98  F002         	call	_ENVIA_LCD_CMD
  1475  000602  0012               	return		;funcret
  1476  000604                     __end_of_CURSOR_HOME:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _BORRAR_LCD *****************
  1480 ;; Defined at:
  1481 ;;		line 67 in file "LCD.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 3
  1502 ;; This function calls:
  1503 ;;		_ENVIA_LCD_CMD
  1504 ;; This function is called by:
  1505 ;;		_arranque_LCD
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text12
  1510  000604                     __ptext12:
  1511                           	callstack 0
  1512  000604                     _BORRAR_LCD:
  1513                           	callstack 26
  1514  000604                     
  1515                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1516  000604  0E01               	movlw	1
  1517  000606  EC98  F002         	call	_ENVIA_LCD_CMD
  1518  00060A  0012               	return		;funcret
  1519  00060C                     __end_of_BORRAR_LCD:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _ENVIA_LCD_CMD *****************
  1523 ;; Defined at:
  1524 ;;		line 104 in file "LCD.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  dato            1    wreg     unsigned char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  dato            1    1[COMRAM] unsigned char 
  1529 ;;  aux             1    2[COMRAM] unsigned char 
  1530 ;; Return value:  Size  Location     Type
  1531 ;;                  1    wreg      void 
  1532 ;; Registers used:
  1533 ;;		wreg, status,2, status,0, cstack
  1534 ;; Tracked objects:
  1535 ;;		On entry : 0/0
  1536 ;;		On exit  : 0/0
  1537 ;;		Unchanged: 0/0
  1538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1539 ;;      Params:         0       0       0       0       0       0       0       0       0
  1540 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1542 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1543 ;;Total ram usage:        2 bytes
  1544 ;; Hardware stack levels used: 1
  1545 ;; Hardware stack levels required when called: 2
  1546 ;; This function calls:
  1547 ;;		_ENVIA_NIBBLE
  1548 ;;		_LEER_LCD
  1549 ;; This function is called by:
  1550 ;;		_POS_CURSOR
  1551 ;;		_CURSOR_HOME
  1552 ;;		_CURSOR_ONOFF
  1553 ;;		_BORRAR_LCD
  1554 ;;		_LCD_CONFIG
  1555 ;;		_BLINK_CURSOR
  1556 ;;		_DISPLAY_ONOFF
  1557 ;;		_GENERACARACTER
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text13
  1562  000530                     __ptext13:
  1563                           	callstack 0
  1564  000530                     _ENVIA_LCD_CMD:
  1565                           	callstack 26
  1566                           
  1567                           ;incstack = 0
  1568                           ;ENVIA_LCD_CMD@dato stored from wreg
  1569  000530  6E38               	movwf	ENVIA_LCD_CMD@dato^0,c
  1570  000532                     
  1571                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1572  000532  908C               	bcf	140,0,c	;volatile
  1573  000534                     
  1574                           ;LCD.c: 108:  LEER_LCD();
  1575  000534  EC95  F001         	call	_LEER_LCD	;wreg free
  1576  000538                     
  1577                           ;LCD.c: 109:  TRISD = 0b00000000;
  1578  000538  0E00               	movlw	0
  1579  00053A  6E95               	movwf	149,c	;volatile
  1580  00053C                     
  1581                           ;LCD.c: 111:         _delay(1200);
  1582  00053C  0EF0               	movlw	240
  1583  00053E                     u547:
  1584  00053E  D000               	nop2	
  1585  000540  2EE8               	decfsz	wreg,f,c
  1586  000542  D7FD               	bra	u547
  1587  000544                     
  1588                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1589  000544  928C               	bcf	140,1,c	;volatile
  1590  000546                     
  1591                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1592  000546  948C               	bcf	140,2,c	;volatile
  1593  000548                     
  1594                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1595  000548  908C               	bcf	140,0,c	;volatile
  1596  00054A                     
  1597                           ;LCD.c: 115:  aux = dato & 0xF0;
  1598  00054A  5038               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1599  00054C  0BF0               	andlw	240
  1600  00054E  6E39               	movwf	ENVIA_LCD_CMD@aux^0,c
  1601  000550                     
  1602                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1603  000550  5039               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1604  000552  ECF0  F002         	call	_ENVIA_NIBBLE
  1605  000556                     
  1606                           ;LCD.c: 117:  aux = dato<<4;
  1607  000556  3838               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1608  000558  0BF0               	andlw	240
  1609  00055A  6E39               	movwf	ENVIA_LCD_CMD@aux^0,c
  1610  00055C                     
  1611                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1612  00055C  5039               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1613  00055E  ECF0  F002         	call	_ENVIA_NIBBLE
  1614  000562  0012               	return		;funcret
  1615  000564                     __end_of_ENVIA_LCD_CMD:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _LEER_LCD *****************
  1619 ;; Defined at:
  1620 ;;		line 121 in file "LCD.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  aux             1    0[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_ENVIA_CHAR
  1645 ;;		_ENVIA_LCD_CMD
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text14
  1650  00032A                     __ptext14:
  1651                           	callstack 0
  1652  00032A                     _LEER_LCD:
  1653                           	callstack 26
  1654  00032A                     
  1655                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1656  00032A  0EF8               	movlw	248
  1657  00032C  6E95               	movwf	149,c	;volatile
  1658  00032E                     
  1659                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1660  00032E  908C               	bcf	140,0,c	;volatile
  1661  000330                     
  1662                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1663  000330  828C               	bsf	140,1,c	;volatile
  1664  000332                     
  1665                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1666  000332  848C               	bsf	140,2,c	;volatile
  1667  000334                     
  1668                           ;LCD.c: 128:         _delay(1200);
  1669  000334  0EF0               	movlw	240
  1670  000336                     u557:
  1671  000336  D000               	nop2	
  1672  000338  2EE8               	decfsz	wreg,f,c
  1673  00033A  D7FD               	bra	u557
  1674  00033C                     
  1675                           ;LCD.c: 130:  aux = PORTD;
  1676  00033C  CF83 F037          	movff	3971,LEER_LCD@aux	;volatile
  1677  000340                     
  1678                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1679  000340  948C               	bcf	140,2,c	;volatile
  1680  000342                     
  1681                           ;LCD.c: 132:         _delay(1200);
  1682  000342  0EF0               	movlw	240
  1683  000344                     u567:
  1684  000344  D000               	nop2	
  1685  000346  2EE8               	decfsz	wreg,f,c
  1686  000348  D7FD               	bra	u567
  1687  00034A                     
  1688                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1689  00034A  848C               	bsf	140,2,c	;volatile
  1690  00034C                     
  1691                           ;LCD.c: 135:         _delay(1200);
  1692  00034C  0EF0               	movlw	240
  1693  00034E                     u577:
  1694  00034E  D000               	nop2	
  1695  000350  2EE8               	decfsz	wreg,f,c
  1696  000352  D7FD               	bra	u577
  1697  000354                     
  1698                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1699  000354  948C               	bcf	140,2,c	;volatile
  1700  000356                     l874:
  1701                           
  1702                           ;LCD.c: 138:  aux = aux & 0x80;
  1703  000356  5037               	movf	LEER_LCD@aux^0,w,c
  1704  000358  0B80               	andlw	128
  1705  00035A  6E37               	movwf	LEER_LCD@aux^0,c
  1706                           
  1707                           ;LCD.c: 139:  while(aux == 0x80)
  1708  00035C  EFC4  F001         	goto	l888
  1709  000360                     l169:
  1710                           
  1711                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1712  000360  848C               	bsf	140,2,c	;volatile
  1713  000362                     
  1714                           ;LCD.c: 142:             _delay(1200);
  1715  000362  0EF0               	movlw	240
  1716  000364                     u587:
  1717  000364  D000               	nop2	
  1718  000366  2EE8               	decfsz	wreg,f,c
  1719  000368  D7FD               	bra	u587
  1720  00036A                     
  1721                           ;LCD.c: 143:             aux = PORTD;
  1722  00036A  CF83 F037          	movff	3971,LEER_LCD@aux	;volatile
  1723  00036E                     
  1724                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1725  00036E  948C               	bcf	140,2,c	;volatile
  1726                           
  1727                           ;LCD.c: 145:             _delay(1200);
  1728  000370  0EF0               	movlw	240
  1729  000372                     u597:
  1730  000372  D000               	nop2	
  1731  000374  2EE8               	decfsz	wreg,f,c
  1732  000376  D7FD               	bra	u597
  1733  000378                     
  1734                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1735  000378  848C               	bsf	140,2,c	;volatile
  1736                           
  1737                           ;LCD.c: 147:             _delay(1200);
  1738  00037A  0EF0               	movlw	240
  1739  00037C                     u607:
  1740  00037C  D000               	nop2	
  1741  00037E  2EE8               	decfsz	wreg,f,c
  1742  000380  D7FD               	bra	u607
  1743  000382                     
  1744                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1745  000382  948C               	bcf	140,2,c	;volatile
  1746  000384  EFAB  F001         	goto	l874
  1747  000388                     l888:
  1748                           
  1749                           ;LCD.c: 139:  while(aux == 0x80)
  1750  000388  0E80               	movlw	128
  1751  00038A  1837               	xorwf	LEER_LCD@aux^0,w,c
  1752  00038C  B4D8               	btfsc	status,2,c
  1753  00038E  EFCB  F001         	goto	u11
  1754  000392  EFCD  F001         	goto	u10
  1755  000396                     u11:
  1756  000396  EFB0  F001         	goto	l169
  1757  00039A                     u10:
  1758  00039A  0012               	return		;funcret
  1759  00039C                     __end_of_LEER_LCD:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _ENVIA_NIBBLE *****************
  1763 ;; Defined at:
  1764 ;;		line 93 in file "LCD.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  dato            1    wreg     unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  dato            1    0[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      void 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         0       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 1
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_ENVIA_CHAR
  1789 ;;		_LCD_CONFIG
  1790 ;;		_ENVIA_LCD_CMD
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text15
  1795  0005E0                     __ptext15:
  1796                           	callstack 0
  1797  0005E0                     _ENVIA_NIBBLE:
  1798                           	callstack 26
  1799                           
  1800                           ;incstack = 0
  1801                           ;ENVIA_NIBBLE@dato stored from wreg
  1802  0005E0  6E37               	movwf	ENVIA_NIBBLE@dato^0,c
  1803  0005E2                     
  1804                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1805  0005E2  0E0F               	movlw	15
  1806  0005E4  168C               	andwf	140,f,c	;volatile
  1807                           
  1808                           ;LCD.c: 96:  dato &= 0xF0;
  1809  0005E6  0EF0               	movlw	240
  1810  0005E8  1637               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1811                           
  1812                           ;LCD.c: 97:  LATD|= dato;
  1813  0005EA  5037               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1814  0005EC  128C               	iorwf	140,f,c	;volatile
  1815  0005EE                     
  1816                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1817  0005EE  848C               	bsf	140,2,c	;volatile
  1818  0005F0                     
  1819                           ;LCD.c: 100:         _delay(1200);
  1820  0005F0  0EF0               	movlw	240
  1821  0005F2                     u617:
  1822  0005F2  D000               	nop2	
  1823  0005F4  2EE8               	decfsz	wreg,f,c
  1824  0005F6  D7FD               	bra	u617
  1825  0005F8                     
  1826                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1827  0005F8  948C               	bcf	140,2,c	;volatile
  1828  0005FA  0012               	return		;funcret
  1829  0005FC                     __end_of_ENVIA_NIBBLE:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _CCP1_ISR *****************
  1833 ;; Defined at:
  1834 ;;		line 88 in file "maincode1.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1848 ;;      Params:         0       0       0       0       0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		Interrupt level 2
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	intcode
  1862  000008                     __pintcode:
  1863                           	callstack 0
  1864  000008                     _CCP1_ISR:
  1865                           	callstack 26
  1866                           
  1867                           ;incstack = 0
  1868  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1869  00000A  ED59  F001         	call	int_func,f	;refresh shadow registers
  1870                           
  1871                           	psect	intcode_body
  1872  0002B2                     __pintcode_body:
  1873                           	callstack 26
  1874  0002B2                     int_func:
  1875                           	callstack 26
  1876  0002B2  0006               	pop		; remove dummy address from shadow register refresh
  1877  0002B4                     
  1878                           ;maincode1.c: 89:     PIR1bits.CCP1IF = 0;
  1879  0002B4  949E               	bcf	158,2,c	;volatile
  1880  0002B6                     
  1881                           ;maincode1.c: 90:     if(ticks == 15){
  1882  0002B6  0E0F               	movlw	15
  1883  0002B8  1846               	xorwf	_ticks^0,w,c
  1884  0002BA  A4D8               	btfss	status,2,c
  1885  0002BC  EF62  F001         	goto	i2u21_41
  1886  0002C0  EF64  F001         	goto	i2u21_40
  1887  0002C4                     i2u21_41:
  1888  0002C4  EF92  F001         	goto	i2l1182
  1889  0002C8                     i2u21_40:
  1890  0002C8                     
  1891                           ;maincode1.c: 91:         ticks = 0;
  1892  0002C8  0E00               	movlw	0
  1893  0002CA  6E46               	movwf	_ticks^0,c
  1894  0002CC                     
  1895                           ;maincode1.c: 92:         if(segundos == 59){
  1896  0002CC  0E3B               	movlw	59
  1897  0002CE  1834               	xorwf	_segundos^0,w,c
  1898  0002D0  A4D8               	btfss	status,2,c
  1899  0002D2  EF6D  F001         	goto	i2u22_41
  1900  0002D6  EF6F  F001         	goto	i2u22_40
  1901  0002DA                     i2u22_41:
  1902  0002DA  EF8F  F001         	goto	i2l1180
  1903  0002DE                     i2u22_40:
  1904  0002DE                     
  1905                           ;maincode1.c: 93:             segundos = 0;
  1906  0002DE  0E00               	movlw	0
  1907  0002E0  6E34               	movwf	_segundos^0,c
  1908  0002E2                     
  1909                           ;maincode1.c: 94:             if(minutos == 59){
  1910  0002E2  0E3B               	movlw	59
  1911  0002E4  1835               	xorwf	_minutos^0,w,c
  1912  0002E6  A4D8               	btfss	status,2,c
  1913  0002E8  EF78  F001         	goto	i2u23_41
  1914  0002EC  EF7A  F001         	goto	i2u23_40
  1915  0002F0                     i2u23_41:
  1916  0002F0  EF8C  F001         	goto	i2l1178
  1917  0002F4                     i2u23_40:
  1918  0002F4                     
  1919                           ;maincode1.c: 95:                 minutos = 0;
  1920  0002F4  0E00               	movlw	0
  1921  0002F6  6E35               	movwf	_minutos^0,c
  1922  0002F8                     
  1923                           ;maincode1.c: 96:                 if(horas == 23){
  1924  0002F8  0E17               	movlw	23
  1925  0002FA  1836               	xorwf	_horas^0,w,c
  1926  0002FC  A4D8               	btfss	status,2,c
  1927  0002FE  EF83  F001         	goto	i2u24_41
  1928  000302  EF85  F001         	goto	i2u24_40
  1929  000306                     i2u24_41:
  1930  000306  EF89  F001         	goto	i2l1176
  1931  00030A                     i2u24_40:
  1932  00030A                     
  1933                           ;maincode1.c: 97:                     horas = 0;
  1934  00030A  0E00               	movlw	0
  1935  00030C  6E36               	movwf	_horas^0,c
  1936                           
  1937                           ;maincode1.c: 98:                 }
  1938  00030E  EF93  F001         	goto	i2l102
  1939  000312                     i2l1176:
  1940                           
  1941                           ;maincode1.c: 100:                     horas++;
  1942  000312  2A36               	incf	_horas^0,f,c
  1943  000314  EF93  F001         	goto	i2l102
  1944  000318                     i2l1178:
  1945                           
  1946                           ;maincode1.c: 104:                 minutos++;
  1947  000318  2A35               	incf	_minutos^0,f,c
  1948  00031A  EF93  F001         	goto	i2l102
  1949  00031E                     i2l1180:
  1950                           
  1951                           ;maincode1.c: 108:             segundos++;
  1952  00031E  2A34               	incf	_segundos^0,f,c
  1953  000320  EF93  F001         	goto	i2l102
  1954  000324                     i2l1182:
  1955                           
  1956                           ;maincode1.c: 112:         ticks++;
  1957  000324  2A46               	incf	_ticks^0,f,c
  1958  000326                     i2l102:
  1959  000326  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1960  000328  0011               	retfie		f
  1961  00032A                     __end_of_CCP1_ISR:
  1962                           	callstack 0
  1963  0000                     
  1964                           	psect	rparam
  1965  0000                     
  1966                           	psect	temp
  1967  00004D                     btemp:
  1968                           	callstack 0
  1969  00004D                     	ds	1
  1970  0000                     int$flags	set	btemp
  1971  0000                     wtemp8	set	btemp+1
  1972  0000                     ttemp5	set	btemp+1
  1973  0000                     ttemp6	set	btemp+4
  1974  0000                     ttemp7	set	btemp+8
  1975                           
  1976                           	psect	idloc
  1977                           
  1978                           ;Config register IDLOC0 @ 0x200000
  1979                           ;	unspecified, using default values
  1980  200000                     	org	2097152
  1981  200000  FF                 	db	255
  1982                           
  1983                           ;Config register IDLOC1 @ 0x200001
  1984                           ;	unspecified, using default values
  1985  200001                     	org	2097153
  1986  200001  FF                 	db	255
  1987                           
  1988                           ;Config register IDLOC2 @ 0x200002
  1989                           ;	unspecified, using default values
  1990  200002                     	org	2097154
  1991  200002  FF                 	db	255
  1992                           
  1993                           ;Config register IDLOC3 @ 0x200003
  1994                           ;	unspecified, using default values
  1995  200003                     	org	2097155
  1996  200003  FF                 	db	255
  1997                           
  1998                           ;Config register IDLOC4 @ 0x200004
  1999                           ;	unspecified, using default values
  2000  200004                     	org	2097156
  2001  200004  FF                 	db	255
  2002                           
  2003                           ;Config register IDLOC5 @ 0x200005
  2004                           ;	unspecified, using default values
  2005  200005                     	org	2097157
  2006  200005  FF                 	db	255
  2007                           
  2008                           ;Config register IDLOC6 @ 0x200006
  2009                           ;	unspecified, using default values
  2010  200006                     	org	2097158
  2011  200006  FF                 	db	255
  2012                           
  2013                           ;Config register IDLOC7 @ 0x200007
  2014                           ;	unspecified, using default values
  2015  200007                     	org	2097159
  2016  200007  FF                 	db	255
  2017                           
  2018                           	psect	config
  2019                           
  2020                           ;Config register CONFIG1L @ 0x300000
  2021                           ;	PLL Prescaler Selection bits
  2022                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2023                           ;	System Clock Postscaler Selection bits
  2024                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  2025                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2026                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2027  300000                     	org	3145728
  2028  300000  08                 	db	8
  2029                           
  2030                           ;Config register CONFIG1H @ 0x300001
  2031                           ;	Oscillator Selection bits
  2032                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2033                           ;	Fail-Safe Clock Monitor Enable bit
  2034                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2035                           ;	Internal/External Oscillator Switchover bit
  2036                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2037  300001                     	org	3145729
  2038  300001  02                 	db	2
  2039                           
  2040                           ;Config register CONFIG2L @ 0x300002
  2041                           ;	Power-up Timer Enable bit
  2042                           ;	PWRT = ON, PWRT enabled
  2043                           ;	Brown-out Reset Enable bits
  2044                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2045                           ;	Brown-out Reset Voltage bits
  2046                           ;	BORV = 3, Minimum setting 2.05V
  2047                           ;	USB Voltage Regulator Enable bit
  2048                           ;	VREGEN = OFF, USB voltage regulator disabled
  2049  300002                     	org	3145730
  2050  300002  18                 	db	24
  2051                           
  2052                           ;Config register CONFIG2H @ 0x300003
  2053                           ;	Watchdog Timer Enable bit
  2054                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2055                           ;	Watchdog Timer Postscale Select bits
  2056                           ;	WDTPS = 32768, 1:32768
  2057  300003                     	org	3145731
  2058  300003  1E                 	db	30
  2059                           
  2060                           ; Padding undefined space
  2061  300004                     	org	3145732
  2062  300004  FF                 	db	255
  2063                           
  2064                           ;Config register CONFIG3H @ 0x300005
  2065                           ;	CCP2 MUX bit
  2066                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2067                           ;	PORTB A/D Enable bit
  2068                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2069                           ;	Low-Power Timer 1 Oscillator Enable bit
  2070                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2071                           ;	MCLR Pin Enable bit
  2072                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2073  300005                     	org	3145733
  2074  300005  81                 	db	129
  2075                           
  2076                           ;Config register CONFIG4L @ 0x300006
  2077                           ;	Stack Full/Underflow Reset Enable bit
  2078                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2079                           ;	Single-Supply ICSP Enable bit
  2080                           ;	LVP = OFF, Single-Supply ICSP disabled
  2081                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2082                           ;	ICPRT = OFF, ICPORT disabled
  2083                           ;	Extended Instruction Set Enable bit
  2084                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2085                           ;	Background Debugger Enable bit
  2086                           ;	DEBUG = 0x1, unprogrammed default
  2087  300006                     	org	3145734
  2088  300006  81                 	db	129
  2089                           
  2090                           ; Padding undefined space
  2091  300007                     	org	3145735
  2092  300007  FF                 	db	255
  2093                           
  2094                           ;Config register CONFIG5L @ 0x300008
  2095                           ;	Code Protection bit
  2096                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2097                           ;	Code Protection bit
  2098                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2099                           ;	Code Protection bit
  2100                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2101                           ;	Code Protection bit
  2102                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2103  300008                     	org	3145736
  2104  300008  0F                 	db	15
  2105                           
  2106                           ;Config register CONFIG5H @ 0x300009
  2107                           ;	Boot Block Code Protection bit
  2108                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2109                           ;	Data EEPROM Code Protection bit
  2110                           ;	CPD = OFF, Data EEPROM is not code-protected
  2111  300009                     	org	3145737
  2112  300009  C0                 	db	192
  2113                           
  2114                           ;Config register CONFIG6L @ 0x30000A
  2115                           ;	Write Protection bit
  2116                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2117                           ;	Write Protection bit
  2118                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2119                           ;	Write Protection bit
  2120                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2121                           ;	Write Protection bit
  2122                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2123  30000A                     	org	3145738
  2124  30000A  0F                 	db	15
  2125                           
  2126                           ;Config register CONFIG6H @ 0x30000B
  2127                           ;	Configuration Register Write Protection bit
  2128                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2129                           ;	Boot Block Write Protection bit
  2130                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2131                           ;	Data EEPROM Write Protection bit
  2132                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2133  30000B                     	org	3145739
  2134  30000B  E0                 	db	224
  2135                           
  2136                           ;Config register CONFIG7L @ 0x30000C
  2137                           ;	Table Read Protection bit
  2138                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2139                           ;	Table Read Protection bit
  2140                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2141                           ;	Table Read Protection bit
  2142                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2143                           ;	Table Read Protection bit
  2144                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2145  30000C                     	org	3145740
  2146  30000C  0F                 	db	15
  2147                           
  2148                           ;Config register CONFIG7H @ 0x30000D
  2149                           ;	Boot Block Table Read Protection bit
  2150                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2151  30000D                     	org	3145741
  2152  30000D  40                 	db	64
  2153                           tosu	equ	0xFFF
  2154                           tosh	equ	0xFFE
  2155                           tosl	equ	0xFFD
  2156                           stkptr	equ	0xFFC
  2157                           pclatu	equ	0xFFB
  2158                           pclath	equ	0xFFA
  2159                           pcl	equ	0xFF9
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           prodh	equ	0xFF4
  2165                           prodl	equ	0xFF3
  2166                           indf0	equ	0xFEF
  2167                           postinc0	equ	0xFEE
  2168                           postdec0	equ	0xFED
  2169                           preinc0	equ	0xFEC
  2170                           plusw0	equ	0xFEB
  2171                           fsr0h	equ	0xFEA
  2172                           fsr0l	equ	0xFE9
  2173                           wreg	equ	0xFE8
  2174                           indf1	equ	0xFE7
  2175                           postinc1	equ	0xFE6
  2176                           postdec1	equ	0xFE5
  2177                           preinc1	equ	0xFE4
  2178                           plusw1	equ	0xFE3
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           bsr	equ	0xFE0
  2182                           indf2	equ	0xFDF
  2183                           postinc2	equ	0xFDE
  2184                           postdec2	equ	0xFDD
  2185                           preinc2	equ	0xFDC
  2186                           plusw2	equ	0xFDB
  2187                           fsr2h	equ	0xFDA
  2188                           fsr2l	equ	0xFD9
  2189                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        54
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      76
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_convierte_digitos
    _titulaso->_POS_CURSOR
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _convierte_digitos->___awdiv
    ___awdiv->___awmod
    _arranque_LCD->_CURSOR_ONOFF
    _arranque_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CCP1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CCP1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CCP1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _CCP1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _CCP1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2755
                         _ENVIA_CHAR
                         _POS_CURSOR
                       _arranque_LCD
                          _configuro
                  _convierte_digitos
                           _titulaso
 ---------------------------------------------------------------------------------
 (1) _titulaso                                             2     2      0     480
                                              5 COMRAM     2     2      0
                         _ENVIA_CHAR
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _convierte_digitos                                    1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _arranque_LCD                                         1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _arranque_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
   _convierte_digitos
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _titulaso
     _ENVIA_CHAR
     _POS_CURSOR

 _CCP1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      4C       1       80.9%
BITBIGSFRhhl        24      0       0      21        0.0%
BITBIGSFRllllll     23      0       0      28        0.0%
BITBIGSFRllh        1E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRlllllh      8      0       0      27        0.0%
BITBIGSFRllllh       8      0       0      26        0.0%
BITBIGSFRhlh         8      0       0      22        0.0%
BITBIGSFRlllh        7      0       0      25        0.0%
BITBIGSFRhll         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4C      29        0.0%
DATA                 0      0      4C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 21 18:24:27 2022

                        _x 004C                          _y 004B                         l65 05DE  
                       l75 02B0                         l68 05BA                         l84 00E4  
                       l78 0454                         u10 039A                         u11 0396  
                       u20 0576                         u21 0572                         u30 058C  
                       u31 0588               ___awdiv@sign 0042              ?_arranque_LCD 0037  
            ENVIA_CHAR@aux 0039                        l126 048E                        l144 0592  
                      l153 052E                        l162 05FA                        l410 00D4  
                      l171 039A                        l139 0602                        l156 060A  
                      l165 0562                        l159 03FA                        l423 0238  
                      l169 0360                        l900 0534                        l910 0548  
                      l902 0538                        l912 054A                        l904 053C  
                      l920 039C                        l914 0550                        l906 0544  
                      l930 03D0                        l922 03A0                        l860 0334  
                      l852 032A                        l916 0556                        l908 0546  
                      l940 03EE                        l932 03D6                        l924 03A6  
                      l870 034C                        l862 033C                        l854 032E  
                      l918 055C                        l950 0576                        l942 03F4  
                      l934 03DC                        l926 03B4                        l880 036E  
                      l872 0354                        l864 0340                        l856 0330  
                      l944 0604                        l952 057C                        l936 03E2  
                      l928 03C8                        l890 05E2                        l882 0378  
                      l874 0356                        l866 0342                        l858 0332  
                      l946 05FC                        l954 058C                        l938 03E8  
                      l970 0508                        l892 05EE                        l884 0382  
                      l876 0362                        l868 034A                        l948 0566  
                      l980 051C                        l972 0510                        l964 04FE  
                      l894 05F0                        l878 036A                        l982 0522  
                      l974 0512                        l966 0500                        l896 05F8  
                      l888 0388                        l984 0528                        l976 0514  
                      l968 0504                        l898 0532                        l978 0516  
                      u310 0468                        u311 0464                        u400 01B6  
                      u320 0486                        u401 01B2                        u321 0482  
                      u330 0024                        u410 01D0                        u331 0020  
                      u411 01CC                        u340 003E                        u420 01EE  
                      u341 003A                        u421 01EA                        u350 0064  
                      u430 0204                        u351 0060                        u431 0200  
                      u360 0082                        u440 0228                        u361 007E  
                      u441 0224                        u370 009E                        u450 027C  
                      u507 05A2                        u371 009A                        u451 0278  
                      u380 00C4                        u460 02A6                        u517 03AC  
                      u381 00C0                        u461 02A2                        u390 019C  
                      u470 00F2                        u607 037C                        u527 03BA  
                      u391 0198                        u471 00EE                        u617 05F2  
                      u537 03CA                        u547 053E                        u557 0336  
                      u567 0344                        u487 0286                        u577 034E  
                      u497 050A                        u587 0364                        u597 0372  
             ___awmod@sign 003C                LEER_LCD@aux 0037                        wreg 000FE8  
             ?_CURSOR_HOME 0037             ??_ENVIA_NIBBLE 0037             ENVIA_CHAR@dato 0038  
                     l1300 020C                       l1070 05D2                       l1302 0212  
                     l1230 0486                       l1080 05AC                       l1072 05D4  
                     l1240 0030                       l1232 0012                       l1304 0218  
                     l1224 0458                       l1320 0248                       l1312 023A  
                     l1082 05B0                       l1074 0594                       l1066 05BC  
                     l1250 0064                       l1242 003E                       l1234 0016  
                     l1306 0228                       l1226 0468                       l1330 02A6  
                     l1322 026A                       l1314 0244                       l1084 05B4  
                     l1076 0598                       l1068 05D0                       l1260 009E  
                     l1252 006C                       l1244 0046                       l1236 0024  
                     l1308 0230                       l1228 0474                       l1332 02AE  
                     l1324 026C                       l1340 00DE                       l1078 059C  
                     l1270 00C4                       l1262 00A6                       l1254 0074  
                     l1246 004A                       l1238 002C                       l1334 03FE  
                     l1326 027C                       l1350 010A                       l1342 00E2  
                     l1272 00CC                       l1264 00A8                       l1256 0082  
                     l1248 0052                       l1280 019C                       l1328 0294  
                     l1360 012E                       l1352 0112                       l1344 00F2  
                     l1336 00D6                       l1266 00AE                       l1258 0088  
                     l1290 01D0                       l1282 01A4                       l1370 0150  
                     l1362 0134                       l1354 011A                       l1346 00FA  
                     l1338 00DA                       l1268 00B4                       l1292 01D8  
                     l1284 01A8                       l1276 018A                       l1380 0172  
                     l1372 0156                       l1364 013A                       l1356 0122  
                     l1348 0100                       l1294 01E0                       l1286 01B6  
                     l1278 018E                       l1382 017A                       l1374 015E  
                     l1366 0142                       l1358 0128                       l1296 01EE  
                     l1288 01BE                       l1376 0166                       l1368 014A  
                     l1298 0204                       l1378 016C                       _LATD 000F8C  
                     _main 00D6           __end_of_CCP1_ISR 032A                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       btemp 004D  
                     start 000E              ?_CURSOR_ONOFF 0037               ___param_bank 000000  
          ??_ENVIA_LCD_CMD 0038           __end_of_LEER_LCD 039C             ??_arranque_LCD 003B  
  convierte_digitos@numero 0045                      ?_main 0037            __end_of___awdiv 00D6  
          __end_of___awmod 023A            ___awdiv@divisor 003F                      _T1CON 000FCD  
                    i2l102 0326            ___awdiv@counter 0041                      _PORTD 000F83  
                    _TRISD 000F95                      _horas 0036                ?_POS_CURSOR 003A  
                    _ticks 0046                      tablat 000FF5                      ttemp5 004E  
                    ttemp6 0051                      ttemp7 0055                      status 000FD8  
                    wtemp8 004E             ??_CURSOR_ONOFF 003A            __initialization 04C6  
             __end_of_main 018A                     ??_main 0046              __activetblptr 000000  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _CCPR1H 000FBF                     _CCPR1L 000FBE  
         ___awdiv@dividend 003D                     i2l1160 02B6                     i2l1170 02F4  
                   i2l1162 02C8                     i2l1172 02F8                     i2l1180 031E  
                   i2l1164 02CC                     i2l1174 030A                     i2l1166 02DE  
                   i2l1182 0324                     i2l1158 02B4                     i2l1176 0312  
                   i2l1168 02E2                     i2l1178 0318                  ??___awdiv 0041  
                   _decena 0048                  ??___awmod 003B       __end_of_ENVIA_NIBBLE 05FC  
                   clear_0 04EC           ___awdiv@quotient 0043            ___awmod@divisor 0039  
                   isa$std 000001            ___awmod@counter 003B                     _unidad 0047  
                ?_CCP1_ISR 0037               __pdataCOMRAM 0001                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8               ??_BORRAR_LCD 003A  
         __end_of_titulaso 02B2       __end_of_arranque_LCD 05BC                  ?_LEER_LCD 0037  
               __accesstop 0060    __end_of__initialization 04F2               ??_LCD_CONFIG 003A  
            ___rparam_used 000001               ??_ENVIA_CHAR 0038             __pcstackCOMRAM 0037  
        _convierte_digitos 03FC         __end_of_BORRAR_LCD 060C         ?_convierte_digitos 0037  
               ??_CCP1_ISR 0037           ENVIA_LCD_CMD@aux 0039       __end_of_CURSOR_ONOFF 0594  
       __end_of_LCD_CONFIG 03FC         __end_of_ENVIA_CHAR 0530        ??_convierte_digitos 0045  
               ??_LEER_LCD 0037           ENVIA_NIBBLE@dato 0037  __end_of_convierte_digitos 0456  
                  _CCP1CON 000FBD                    i2u21_40 02C8                    i2u21_41 02C4  
                  i2u22_40 02DE                    i2u22_41 02DA                    i2u23_40 02F4  
                  i2u23_41 02F0                    i2u24_40 030A                    i2u24_41 0306  
             ??_POS_CURSOR 003B                    __Hparam 0000                    __Lparam 0000  
        __end_of_configuro 05E0                    ___awdiv 0012                    ___awmod 018A  
                ?_titulaso 0037      __end_of_ENVIA_LCD_CMD 0564                    __pcinit 04C6  
       __end_of_POS_CURSOR 0490                    __ramtop 0800                    _centena 0049  
                  __ptext0 00D6                    __ptext1 023A                    __ptext2 0456  
                  __ptext3 04FC                    __ptext4 03FC                    __ptext5 018A  
                  __ptext6 0012                    __ptext7 05BC                    __ptext8 0594  
                  __ptext9 039C                    _mensaje 0001           ___awmod@dividend 0037  
                  _minutos 0035             __pintcode_body 02B2               _ENVIA_NIBBLE 05E0  
     end_of_initialization 04F2                    int_func 02B2                    postdec1 000FE5  
                  postinc0 000FEE                 ??_titulaso 003C               _arranque_LCD 0594  
             _CURSOR_ONOFF 0564         CURSOR_ONOFF@estado 003A              __pidataCOMRAM 0490  
            ??_CURSOR_HOME 003A        start_initialization 04C6          ENVIA_LCD_CMD@dato 0038  
              __pbssCOMRAM 0046        __end_of_CURSOR_HOME 0604                  __pintcode 0008  
                 ?___awdiv 003D                   ?___awmod 0037                  _configuro 05BC  
                 _CCP1_ISR 0008                   _LEER_LCD 032A                   _LATDbits 000F8C  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E             POS_CURSOR@fila 003B  
               ?_configuro 0037                 _ADCON0bits 000FC2                _CURSOR_HOME 05FC  
                copy_data0 04DA                   __Hrparam 0000                   __Lrparam 0000  
                 __ptext10 0564                   __ptext11 05FC                   __ptext12 0604  
                 __ptext13 0530                   __ptext14 032A                   __ptext15 05E0  
               _BORRAR_LCD 0604                 _LCD_CONFIG 039C                 _ENVIA_CHAR 04FC  
                 _segundos 0034                   isa$xinst 000000                   int$flags 004D  
                 _titulaso 023A              _ENVIA_LCD_CMD 0530                ??_configuro 0037  
               _INTCONbits 000FF2                   intlevel2 0000               _resultado_ad 004A  
           ?_ENVIA_LCD_CMD 0037                ?_BORRAR_LCD 0037              ?_ENVIA_NIBBLE 0037  
               _POS_CURSOR 0456                ?_LCD_CONFIG 0037                ?_ENVIA_CHAR 0037  
        POS_CURSOR@columna 003A  
