

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 09 21:14:17 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  000B72                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _mensaje4
    79  000B72  55                 	db	85
    80  000B73  50                 	db	80
    81  000B74  43                 	db	67
    82  000B75  20                 	db	32
    83  000B76  49                 	db	73
    84  000B77  6E                 	db	110
    85  000B78  67                 	db	103
    86  000B79  65                 	db	101
    87  000B7A  6E                 	db	110
    88  000B7B  69                 	db	105
    89  000B7C  65                 	db	101
    90  000B7D  72                 	db	114
    91  000B7E  69                 	db	105
    92  000B7F  61                 	db	97
    93  000B80  20                 	db	32
    94  000B81  42                 	db	66
    95  000B82  69                 	db	105
    96  000B83  6F                 	db	111
    97  000B84  6D                 	db	109
    98  000B85  65                 	db	101
    99  000B86  64                 	db	100
   100  000B87  69                 	db	105
   101  000B88  63                 	db	99
   102  000B89  61                 	db	97
   103  000B8A  00                 	db	0
   104                           
   105                           ;initializer for _mensaje1
   106  000B8B  68                 	db	104
   107  000B8C  6F                 	db	111
   108  000B8D  6C                 	db	108
   109  000B8E  61                 	db	97
   110  000B8F  20                 	db	32
   111  000B90  6D                 	db	109
   112  000B91  75                 	db	117
   113  000B92  6E                 	db	110
   114  000B93  64                 	db	100
   115  000B94  6F                 	db	111
   116  000B95  00                 	db	0
   117                           
   118                           ;initializer for _salida
   119  000B96  01                 	db	1
   120  000B97  02                 	db	2
   121  000B98  04                 	db	4
   122  000B99  02                 	db	2
   123  000B9A  05                 	db	5
   124  000B9B  02                 	db	2
   125  000B9C  03                 	db	3
   126  000B9D  06                 	db	6
   127  000B9E  00                 	db	0
   128  000B9F  07                 	db	7
   129                           
   130                           ;initializer for _foco_on
   131  000BA0  0E                 	db	14
   132  000BA1  15                 	db	21
   133  000BA2  1F                 	db	31
   134  000BA3  1F                 	db	31
   135  000BA4  15                 	db	21
   136  000BA5  0E                 	db	14
   137  000BA6  0A                 	db	10
   138  000BA7  0E                 	db	14
   139                           
   140                           ;initializer for _foco_off
   141  000BA8  0E                 	db	14
   142  000BA9  11                 	db	17
   143  000BAA  11                 	db	17
   144  000BAB  11                 	db	17
   145  000BAC  11                 	db	17
   146  000BAD  0A                 	db	10
   147  000BAE  0A                 	db	10
   148  000BAF  0E                 	db	14
   149                           
   150                           	psect	idataBANK0
   151  000C64                     __pidataBANK0:
   152                           	callstack 0
   153                           
   154                           ;initializer for _mensaje3
   155  000C64  55                 	db	85
   156  000C65  50                 	db	80
   157  000C66  43                 	db	67
   158  000C67  20                 	db	32
   159  000C68  49                 	db	73
   160  000C69  6E                 	db	110
   161  000C6A  67                 	db	103
   162  000C6B  65                 	db	101
   163  000C6C  6E                 	db	110
   164  000C6D  69                 	db	105
   165  000C6E  65                 	db	101
   166  000C6F  72                 	db	114
   167  000C70  69                 	db	105
   168  000C71  61                 	db	97
   169  000C72  20                 	db	32
   170  000C73  45                 	db	69
   171  000C74  6C                 	db	108
   172  000C75  65                 	db	101
   173  000C76  63                 	db	99
   174  000C77  74                 	db	116
   175  000C78  72                 	db	114
   176  000C79  6F                 	db	111
   177  000C7A  6E                 	db	110
   178  000C7B  69                 	db	105
   179  000C7C  63                 	db	99
   180  000C7D  61                 	db	97
   181  000C7E  00                 	db	0
   182                           
   183                           ;initializer for _mensaje2
   184  000C7F  55                 	db	85
   185  000C80  50                 	db	80
   186  000C81  43                 	db	67
   187  000C82  20                 	db	32
   188  000C83  49                 	db	73
   189  000C84  6E                 	db	110
   190  000C85  67                 	db	103
   191  000C86  65                 	db	101
   192  000C87  6E                 	db	110
   193  000C88  69                 	db	105
   194  000C89  65                 	db	101
   195  000C8A  72                 	db	114
   196  000C8B  69                 	db	105
   197  000C8C  61                 	db	97
   198  000C8D  20                 	db	32
   199  000C8E  4D                 	db	77
   200  000C8F  65                 	db	101
   201  000C90  63                 	db	99
   202  000C91  61                 	db	97
   203  000C92  74                 	db	116
   204  000C93  72                 	db	114
   205  000C94  6F                 	db	111
   206  000C95  6E                 	db	110
   207  000C96  69                 	db	105
   208  000C97  63                 	db	99
   209  000C98  61                 	db	97
   210  000C99  00                 	db	0
   211  0000                     _LATD	set	3980
   212  0000                     _PORTD	set	3971
   213  0000                     _LATDbits	set	3980
   214  0000                     _LATE	set	3981
   215  0000                     _TRISCbits	set	3988
   216  0000                     _TRISD	set	3989
   217  0000                     _RCSTAbits	set	4011
   218  0000                     _SPBRG	set	4015
   219  0000                     _TRISE	set	3990
   220  0000                     _ADCON1	set	4033
   221  0000                     _OSCCON	set	4051
   222  0000                     _PORTEbits	set	3972
   223  0000                     _INTCON3bits	set	4080
   224  0000                     _INTCON2bits	set	4081
   225  0000                     _INTCONbits	set	4082
   226  0000                     _RCONbits	set	4048
   227  0000                     _TXREG	set	4013
   228  0000                     _TXSTAbits	set	4012
   229                           
   230                           	psect	smallconst
   231  000800                     __psmallconst:
   232                           	callstack 0
   233  000800  00                 	db	0
   234  000801                     STR_2:
   235  000801  55                 	db	85	;'U'
   236  000802  50                 	db	80	;'P'
   237  000803  43                 	db	67	;'C'
   238  000804  20                 	db	32
   239  000805  53                 	db	83	;'S'
   240  000806  65                 	db	101	;'e'
   241  000807  6D                 	db	109	;'m'
   242  000808  31                 	db	49	;'1'
   243  000809  33                 	db	51	;'3'
   244  00080A  20                 	db	32
   245  00080B  32                 	db	50	;'2'
   246  00080C  30                 	db	48	;'0'
   247  00080D  32                 	db	50	;'2'
   248  00080E  32                 	db	50	;'2'
   249  00080F  2D                 	db	45
   250  000810  32                 	db	50	;'2'
   251  000811  00                 	db	0
   252  000812                     STR_1:
   253  000812  4C                 	db	76	;'L'
   254  000813  45                 	db	69	;'E'
   255  000814  44                 	db	68	;'D'
   256  000815  73                 	db	115	;'s'
   257  000816  3A                 	db	58	;':'
   258  000817  00                 	db	0
   259  000818  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264  000ADA                     __pcinit:
   265                           	callstack 0
   266  000ADA                     start_initialization:
   267                           	callstack 0
   268  000ADA                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Initialize objects allocated to BANK0 (54 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273  000ADA  0E64               	movlw	low __pidataBANK0
   274  000ADC  6EF6               	movwf	tblptrl,c
   275  000ADE  0E0C               	movlw	high __pidataBANK0
   276  000AE0  6EF7               	movwf	tblptrh,c
   277  000AE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278  000AE4  6EF8               	movwf	tblptru,c
   279  000AE6  EE00  F060         	lfsr	0,__pdataBANK0
   280  000AEA  EE10 F036          	lfsr	1,54
   281  000AEE                     copy_data0:
   282  000AEE  0009               	tblrd		*+
   283  000AF0  CFF5 FFEE          	movff	tablat,postinc0
   284  000AF4  50E5               	movf	postdec1,w,c
   285  000AF6  50E1               	movf	fsr1l,w,c
   286  000AF8  E1FA               	bnz	copy_data0
   287                           
   288                           ; Initialize objects allocated to COMRAM (62 bytes)
   289                           ; load TBLPTR registers with __pidataCOMRAM
   290  000AFA  0E72               	movlw	low __pidataCOMRAM
   291  000AFC  6EF6               	movwf	tblptrl,c
   292  000AFE  0E0B               	movlw	high __pidataCOMRAM
   293  000B00  6EF7               	movwf	tblptrh,c
   294  000B02  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   295  000B04  6EF8               	movwf	tblptru,c
   296  000B06  EE00  F001         	lfsr	0,__pdataCOMRAM
   297  000B0A  EE10 F03E          	lfsr	1,62
   298  000B0E                     copy_data1:
   299  000B0E  0009               	tblrd		*+
   300  000B10  CFF5 FFEE          	movff	tablat,postinc0
   301  000B14  50E5               	movf	postdec1,w,c
   302  000B16  50E1               	movf	fsr1l,w,c
   303  000B18  E1FA               	bnz	copy_data1
   304                           
   305                           ; Clear objects allocated to COMRAM (2 bytes)
   306  000B1A  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   307  000B1C  6A53               	clrf	__pbssCOMRAM& (0+255),c
   308  000B1E                     end_of_initialization:
   309                           	callstack 0
   310  000B1E                     __end_of__initialization:
   311                           	callstack 0
   312  000B1E  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   313  000B20  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   314  000B22  0E00               	movlw	low (__Lmediumconst shr (0+16))
   315  000B24  6EF8               	movwf	tblptru,c
   316  000B26  0100               	movlb	0
   317  000B28  EF0D  F004         	goto	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMRAM
   320  000053                     __pbssCOMRAM:
   321                           	callstack 0
   322  000053                     _estado2:
   323                           	callstack 0
   324  000053                     	ds	1
   325  000054                     _estado1:
   326                           	callstack 0
   327  000054                     	ds	1
   328                           
   329                           	psect	dataCOMRAM
   330  000001                     __pdataCOMRAM:
   331                           	callstack 0
   332  000001                     _mensaje4:
   333                           	callstack 0
   334  000001                     	ds	25
   335  00001A                     _mensaje1:
   336                           	callstack 0
   337  00001A                     	ds	11
   338  000025                     _salida:
   339                           	callstack 0
   340  000025                     	ds	10
   341  00002F                     _foco_on:
   342                           	callstack 0
   343  00002F                     	ds	8
   344  000037                     _foco_off:
   345                           	callstack 0
   346  000037                     	ds	8
   347                           
   348                           	psect	dataBANK0
   349  000060                     __pdataBANK0:
   350                           	callstack 0
   351  000060                     _mensaje3:
   352                           	callstack 0
   353  000060                     	ds	27
   354  00007B                     _mensaje2:
   355                           	callstack 0
   356  00007B                     	ds	27
   357                           
   358                           	psect	cstackCOMRAM
   359  00003F                     __pcstackCOMRAM:
   360                           	callstack 0
   361  00003F                     ??_INT2_ISR:
   362                           
   363                           ; 1 bytes @ 0x0
   364  00003F                     	ds	7
   365  000046                     INT2_ISR@y:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x7
   369  000046                     	ds	1
   370  000047                     ENVIA_NIBBLE@dato:
   371                           	callstack 0
   372  000047                     LEER_LCD@aux:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x8
   376  000047                     	ds	1
   377  000048                     ENVIA_CHAR@dato:
   378                           	callstack 0
   379  000048                     ENVIA_LCD_CMD@dato:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x9
   383  000048                     	ds	1
   384  000049                     ENVIA_CHAR@aux:
   385                           	callstack 0
   386  000049                     ENVIA_LCD_CMD@aux:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0xA
   390  000049                     	ds	1
   391  00004A                     ??_LCD_CONFIG:
   392  00004A                     POS_CURSOR@columna:
   393                           	callstack 0
   394  00004A                     CURSOR_ONOFF@estado:
   395                           	callstack 0
   396  00004A                     ESCRIBE_MENSAJE@cadena:
   397                           	callstack 0
   398  00004A                     GENERACARACTER@vector:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xB
   402  00004A                     	ds	1
   403  00004B                     POS_CURSOR@fila:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0xC
   407  00004B                     	ds	1
   408  00004C                     ESCRIBE_MENSAJE@tam:
   409                           	callstack 0
   410  00004C                     GENERACARACTER@pos:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xD
   414  00004C                     	ds	1
   415  00004D                     ??_ESCRIBE_MENSAJE:
   416  00004D                     GENERACARACTER@i:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xE
   420  00004D                     	ds	1
   421  00004E                     ??_init_LCD:
   422                           
   423                           ; 1 bytes @ 0xF
   424  00004E                     	ds	1
   425  00004F                     ESCRIBE_MENSAJE@i:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x10
   429  00004F                     	ds	1
   430  000050                     ??_main:
   431                           
   432                           ; 1 bytes @ 0x11
   433  000050                     	ds	2
   434  000052                     main@x:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x13
   438  000052                     	ds	1
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 77 in file "maincode5.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  x               1   19[COMRAM] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         1       0       0       0       0       0       0       0       0
   461 ;;      Temps:          2       0       0       0       0       0       0       0       0
   462 ;;      Totals:         3       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        3 bytes
   464 ;; Hardware stack levels required when called: 7
   465 ;; This function calls:
   466 ;;		_ESCRIBE_MENSAJE
   467 ;;		_POS_CURSOR
   468 ;;		_configuro
   469 ;;		_init_LCD
   470 ;;		_vis_focos
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text0
   477  00081A                     __ptext0:
   478                           	callstack 0
   479  00081A                     _main:
   480                           	callstack 24
   481  00081A                     
   482                           ;maincode5.c: 78:     configuro();
   483  00081A  EC99  F006         	call	_configuro	;wreg free
   484  00081E                     
   485                           ;maincode5.c: 79:     init_LCD();
   486  00081E  EC96  F005         	call	_init_LCD	;wreg free
   487  000822                     
   488                           ;maincode5.c: 80:     POS_CURSOR(1,0);
   489  000822  0E00               	movlw	0
   490  000824  6E4A               	movwf	POS_CURSOR@columna^0,c
   491  000826  0E01               	movlw	1
   492  000828  EC15  F006         	call	_POS_CURSOR
   493  00082C                     
   494                           ;maincode5.c: 81:     ESCRIBE_MENSAJE("UPC Sem13 2022-2",16);
   495  00082C  0E01               	movlw	low STR_2
   496  00082E  6E4A               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   497  000830  0E08               	movlw	high STR_2
   498  000832  6E4B               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   499  000834  0E10               	movlw	16
   500  000836  6E4C               	movwf	ESCRIBE_MENSAJE@tam^0,c
   501  000838  ECD8  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   502  00083C  EFAA  F004         	goto	l1454
   503  000840                     l1388:
   504                           
   505                           ;maincode5.c: 86:                 for(x=0;x<4;x++){
   506  000840  0E00               	movlw	0
   507  000842  6E52               	movwf	main@x^0,c
   508  000844                     l1394:
   509                           
   510                           ;maincode5.c: 87:                     LATE = salida[x];
   511  000844  0E25               	movlw	low _salida
   512  000846  2452               	addwf	main@x^0,w,c
   513  000848  6ED9               	movwf	fsr2l,c
   514  00084A  6ADA               	clrf	fsr2h,c
   515  00084C  0E00               	movlw	high _salida
   516  00084E  22DA               	addwfc	fsr2h,f,c
   517  000850  50DF               	movf	indf2,w,c
   518  000852  6E8D               	movwf	141,c	;volatile
   519  000854                     
   520                           ;maincode5.c: 88:                     vis_focos();
   521  000854  ECC9  F004         	call	_vis_focos	;wreg free
   522  000858                     
   523                           ;maincode5.c: 89:                     _delay((unsigned long)((200)*(8000000UL/4000.0)));
   524  000858  0E03               	movlw	3
   525  00085A  6E51               	movwf	(??_main+1)^0,c
   526  00085C  0E08               	movlw	8
   527  00085E  6E50               	movwf	??_main^0,c
   528  000860  0E77               	movlw	119
   529  000862                     u537:
   530  000862  2EE8               	decfsz	wreg,f,c
   531  000864  D7FE               	bra	u537
   532  000866  2E50               	decfsz	??_main^0,f,c
   533  000868  D7FC               	bra	u537
   534  00086A  2E51               	decfsz	(??_main+1)^0,f,c
   535  00086C  D7FA               	bra	u537
   536  00086E  F000               	nop	
   537  000870                     
   538                           ;maincode5.c: 90:                 }
   539  000870  2A52               	incf	main@x^0,f,c
   540  000872  0E03               	movlw	3
   541  000874  6452               	cpfsgt	main@x^0,c
   542  000876  EF3F  F004         	goto	u401
   543  00087A  EF41  F004         	goto	u400
   544  00087E                     u401:
   545  00087E  EF22  F004         	goto	l1394
   546  000882                     u400:
   547  000882  EFAA  F004         	goto	l1454
   548  000886                     l1404:
   549                           
   550                           ;maincode5.c: 93:                 for(x=4;x<6;x++){
   551  000886  0E04               	movlw	4
   552  000888  6E52               	movwf	main@x^0,c
   553  00088A                     l1410:
   554                           
   555                           ;maincode5.c: 94:                     LATE = salida[x];
   556  00088A  0E25               	movlw	low _salida
   557  00088C  2452               	addwf	main@x^0,w,c
   558  00088E  6ED9               	movwf	fsr2l,c
   559  000890  6ADA               	clrf	fsr2h,c
   560  000892  0E00               	movlw	high _salida
   561  000894  22DA               	addwfc	fsr2h,f,c
   562  000896  50DF               	movf	indf2,w,c
   563  000898  6E8D               	movwf	141,c	;volatile
   564  00089A                     
   565                           ;maincode5.c: 95:                     vis_focos();
   566  00089A  ECC9  F004         	call	_vis_focos	;wreg free
   567  00089E                     
   568                           ;maincode5.c: 96:                     _delay((unsigned long)((200)*(8000000UL/4000.0)));
   569  00089E  0E03               	movlw	3
   570  0008A0  6E51               	movwf	(??_main+1)^0,c
   571  0008A2  0E08               	movlw	8
   572  0008A4  6E50               	movwf	??_main^0,c
   573  0008A6  0E77               	movlw	119
   574  0008A8                     u547:
   575  0008A8  2EE8               	decfsz	wreg,f,c
   576  0008AA  D7FE               	bra	u547
   577  0008AC  2E50               	decfsz	??_main^0,f,c
   578  0008AE  D7FC               	bra	u547
   579  0008B0  2E51               	decfsz	(??_main+1)^0,f,c
   580  0008B2  D7FA               	bra	u547
   581  0008B4  F000               	nop	
   582  0008B6                     
   583                           ;maincode5.c: 97:                 }
   584  0008B6  2A52               	incf	main@x^0,f,c
   585  0008B8  0E05               	movlw	5
   586  0008BA  6452               	cpfsgt	main@x^0,c
   587  0008BC  EF62  F004         	goto	u411
   588  0008C0  EF64  F004         	goto	u410
   589  0008C4                     u411:
   590  0008C4  EF45  F004         	goto	l1410
   591  0008C8                     u410:
   592  0008C8  EFAA  F004         	goto	l1454
   593  0008CC                     l1420:
   594                           
   595                           ;maincode5.c: 100:                 for(x=6;x<8;x++){
   596  0008CC  0E06               	movlw	6
   597  0008CE  6E52               	movwf	main@x^0,c
   598  0008D0                     l1426:
   599                           
   600                           ;maincode5.c: 101:                     LATE = salida[x];
   601  0008D0  0E25               	movlw	low _salida
   602  0008D2  2452               	addwf	main@x^0,w,c
   603  0008D4  6ED9               	movwf	fsr2l,c
   604  0008D6  6ADA               	clrf	fsr2h,c
   605  0008D8  0E00               	movlw	high _salida
   606  0008DA  22DA               	addwfc	fsr2h,f,c
   607  0008DC  50DF               	movf	indf2,w,c
   608  0008DE  6E8D               	movwf	141,c	;volatile
   609  0008E0                     
   610                           ;maincode5.c: 102:                     vis_focos();
   611  0008E0  ECC9  F004         	call	_vis_focos	;wreg free
   612  0008E4                     
   613                           ;maincode5.c: 103:                     _delay((unsigned long)((200)*(8000000UL/4000.0)))
      +                          ;
   614  0008E4  0E03               	movlw	3
   615  0008E6  6E51               	movwf	(??_main+1)^0,c
   616  0008E8  0E08               	movlw	8
   617  0008EA  6E50               	movwf	??_main^0,c
   618  0008EC  0E77               	movlw	119
   619  0008EE                     u557:
   620  0008EE  2EE8               	decfsz	wreg,f,c
   621  0008F0  D7FE               	bra	u557
   622  0008F2  2E50               	decfsz	??_main^0,f,c
   623  0008F4  D7FC               	bra	u557
   624  0008F6  2E51               	decfsz	(??_main+1)^0,f,c
   625  0008F8  D7FA               	bra	u557
   626  0008FA  F000               	nop	
   627  0008FC                     
   628                           ;maincode5.c: 104:                 }
   629  0008FC  2A52               	incf	main@x^0,f,c
   630  0008FE  0E07               	movlw	7
   631  000900  6452               	cpfsgt	main@x^0,c
   632  000902  EF85  F004         	goto	u421
   633  000906  EF87  F004         	goto	u420
   634  00090A                     u421:
   635  00090A  EF68  F004         	goto	l1426
   636  00090E                     u420:
   637  00090E  EFAA  F004         	goto	l1454
   638  000912                     l1436:
   639                           
   640                           ;maincode5.c: 107:                 for(x=8;x<10;x++){
   641  000912  0E08               	movlw	8
   642  000914  6E52               	movwf	main@x^0,c
   643  000916                     l1442:
   644                           
   645                           ;maincode5.c: 108:                     LATE = salida[x];
   646  000916  0E25               	movlw	low _salida
   647  000918  2452               	addwf	main@x^0,w,c
   648  00091A  6ED9               	movwf	fsr2l,c
   649  00091C  6ADA               	clrf	fsr2h,c
   650  00091E  0E00               	movlw	high _salida
   651  000920  22DA               	addwfc	fsr2h,f,c
   652  000922  50DF               	movf	indf2,w,c
   653  000924  6E8D               	movwf	141,c	;volatile
   654  000926                     
   655                           ;maincode5.c: 109:                     vis_focos();
   656  000926  ECC9  F004         	call	_vis_focos	;wreg free
   657  00092A                     
   658                           ;maincode5.c: 110:                     _delay((unsigned long)((200)*(8000000UL/4000.0)))
      +                          ;
   659  00092A  0E03               	movlw	3
   660  00092C  6E51               	movwf	(??_main+1)^0,c
   661  00092E  0E08               	movlw	8
   662  000930  6E50               	movwf	??_main^0,c
   663  000932  0E77               	movlw	119
   664  000934                     u567:
   665  000934  2EE8               	decfsz	wreg,f,c
   666  000936  D7FE               	bra	u567
   667  000938  2E50               	decfsz	??_main^0,f,c
   668  00093A  D7FC               	bra	u567
   669  00093C  2E51               	decfsz	(??_main+1)^0,f,c
   670  00093E  D7FA               	bra	u567
   671  000940  F000               	nop	
   672  000942                     
   673                           ;maincode5.c: 111:                 }
   674  000942  2A52               	incf	main@x^0,f,c
   675  000944  0E09               	movlw	9
   676  000946  6452               	cpfsgt	main@x^0,c
   677  000948  EFA8  F004         	goto	u431
   678  00094C  EFAA  F004         	goto	u430
   679  000950                     u431:
   680  000950  EF8B  F004         	goto	l1442
   681  000954                     u430:
   682  000954                     l1454:
   683  000954  5054               	movf	_estado1^0,w,c
   684  000956  6E50               	movwf	??_main^0,c
   685  000958  6A51               	clrf	(??_main+1)^0,c
   686                           
   687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   688                           ; Switch size 1, requested type "simple"
   689                           ; Number of cases is 1, Range of values is 0 to 0
   690                           ; switch strategies available:
   691                           ; Name         Instructions Cycles
   692                           ; simple_byte            4     3 (average)
   693                           ;	Chosen strategy is simple_byte
   694  00095A  5051               	movf	(??_main+1)^0,w,c
   695  00095C  0A00               	xorlw	0	; case 0
   696  00095E  B4D8               	btfsc	status,2,c
   697  000960  EFB4  F004         	goto	l1534
   698  000964  EFAA  F004         	goto	l1454
   699  000968                     l1534:
   700                           
   701                           ; Switch size 1, requested type "simple"
   702                           ; Number of cases is 4, Range of values is 0 to 3
   703                           ; switch strategies available:
   704                           ; Name         Instructions Cycles
   705                           ; simple_byte           13     7 (average)
   706                           ;	Chosen strategy is simple_byte
   707  000968  5050               	movf	??_main^0,w,c
   708  00096A  0A00               	xorlw	0	; case 0
   709  00096C  B4D8               	btfsc	status,2,c
   710  00096E  EF20  F004         	goto	l1388
   711  000972  0A01               	xorlw	1	; case 1
   712  000974  B4D8               	btfsc	status,2,c
   713  000976  EF43  F004         	goto	l1404
   714  00097A  0A03               	xorlw	3	; case 2
   715  00097C  B4D8               	btfsc	status,2,c
   716  00097E  EF66  F004         	goto	l1420
   717  000982  0A01               	xorlw	1	; case 3
   718  000984  B4D8               	btfsc	status,2,c
   719  000986  EF89  F004         	goto	l1436
   720  00098A  EFAA  F004         	goto	l1454
   721  00098E  EFC3  F000         	goto	start
   722  000992                     __end_of_main:
   723                           	callstack 0
   724                           
   725 ;; *************** function _vis_focos *****************
   726 ;; Defined at:
   727 ;;		line 47 in file "maincode5.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 6
   748 ;; This function calls:
   749 ;;		_ENVIA_CHAR
   750 ;;		_ESCRIBE_MENSAJE
   751 ;;		_POS_CURSOR
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text1
   758  000992                     __ptext1:
   759                           	callstack 0
   760  000992                     _vis_focos:
   761                           	callstack 24
   762  000992                     
   763                           ;maincode5.c: 48:     POS_CURSOR(2,0);
   764  000992  0E00               	movlw	0
   765  000994  6E4A               	movwf	POS_CURSOR@columna^0,c
   766  000996  0E02               	movlw	2
   767  000998  EC15  F006         	call	_POS_CURSOR
   768  00099C                     
   769                           ;maincode5.c: 49:     ESCRIBE_MENSAJE("LEDs:",5);
   770  00099C  0E12               	movlw	low STR_1
   771  00099E  6E4A               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   772  0009A0  0E08               	movlw	high STR_1
   773  0009A2  6E4B               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   774  0009A4  0E05               	movlw	5
   775  0009A6  6E4C               	movwf	ESCRIBE_MENSAJE@tam^0,c
   776  0009A8  ECD8  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   777  0009AC                     
   778                           ;maincode5.c: 50:     if(PORTEbits.RE2 == 0){
   779  0009AC  B484               	btfsc	132,2,c	;volatile
   780  0009AE  EFDB  F004         	goto	u351
   781  0009B2  EFDD  F004         	goto	u350
   782  0009B6                     u351:
   783  0009B6  EFE2  F004         	goto	l1362
   784  0009BA                     u350:
   785  0009BA                     
   786                           ;maincode5.c: 51:         ENVIA_CHAR(0);
   787  0009BA  0E00               	movlw	0
   788  0009BC  EC4D  F006         	call	_ENVIA_CHAR
   789                           
   790                           ;maincode5.c: 52:     }
   791  0009C0  EFE5  F004         	goto	l1364
   792  0009C4                     l1362:
   793                           
   794                           ;maincode5.c: 54:         ENVIA_CHAR(1);
   795  0009C4  0E01               	movlw	1
   796  0009C6  EC4D  F006         	call	_ENVIA_CHAR
   797  0009CA                     l1364:
   798                           
   799                           ;maincode5.c: 56:     if(PORTEbits.RE1 == 0){
   800  0009CA  B284               	btfsc	132,1,c	;volatile
   801  0009CC  EFEA  F004         	goto	u361
   802  0009D0  EFEC  F004         	goto	u360
   803  0009D4                     u361:
   804  0009D4  EFF1  F004         	goto	l1368
   805  0009D8                     u360:
   806  0009D8                     
   807                           ;maincode5.c: 57:         ENVIA_CHAR(0);
   808  0009D8  0E00               	movlw	0
   809  0009DA  EC4D  F006         	call	_ENVIA_CHAR
   810                           
   811                           ;maincode5.c: 58:     }
   812  0009DE  EFF4  F004         	goto	l1370
   813  0009E2                     l1368:
   814                           
   815                           ;maincode5.c: 60:         ENVIA_CHAR(1);
   816  0009E2  0E01               	movlw	1
   817  0009E4  EC4D  F006         	call	_ENVIA_CHAR
   818  0009E8                     l1370:
   819                           
   820                           ;maincode5.c: 62:     if(PORTEbits.RE0 == 0){
   821  0009E8  B084               	btfsc	132,0,c	;volatile
   822  0009EA  EFF9  F004         	goto	u371
   823  0009EE  EFFB  F004         	goto	u370
   824  0009F2                     u371:
   825  0009F2  EF00  F005         	goto	l1374
   826  0009F6                     u370:
   827  0009F6                     
   828                           ;maincode5.c: 63:         ENVIA_CHAR(0);
   829  0009F6  0E00               	movlw	0
   830  0009F8  EC4D  F006         	call	_ENVIA_CHAR
   831                           
   832                           ;maincode5.c: 64:     }
   833  0009FC  EF03  F005         	goto	l155
   834  000A00                     l1374:
   835                           
   836                           ;maincode5.c: 66:         ENVIA_CHAR(1);
   837  000A00  0E01               	movlw	1
   838  000A02  EC4D  F006         	call	_ENVIA_CHAR
   839  000A06                     l155:
   840  000A06  0012               	return		;funcret
   841  000A08                     __end_of_vis_focos:
   842                           	callstack 0
   843                           
   844 ;; *************** function _POS_CURSOR *****************
   845 ;; Defined at:
   846 ;;		line 6 in file "LCD.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  fila            1    wreg     unsigned char 
   849 ;;  columna         1   11[COMRAM] unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  fila            1   12[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         1       0       0       0       0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         2       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        2 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 5
   868 ;; This function calls:
   869 ;;		_ENVIA_LCD_CMD
   870 ;; This function is called by:
   871 ;;		_vis_focos
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text2
   877  000C2A                     __ptext2:
   878                           	callstack 0
   879  000C2A                     _POS_CURSOR:
   880                           	callstack 24
   881                           
   882                           ;incstack = 0
   883                           ;POS_CURSOR@fila stored from wreg
   884  000C2A  6E4B               	movwf	POS_CURSOR@fila^0,c
   885  000C2C                     
   886                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   887  000C2C  044B               	decf	POS_CURSOR@fila^0,w,c
   888  000C2E  A4D8               	btfss	status,2,c
   889  000C30  EF1C  F006         	goto	u311
   890  000C34  EF1E  F006         	goto	u310
   891  000C38                     u311:
   892  000C38  EF24  F006         	goto	l1310
   893  000C3C                     u310:
   894  000C3C                     
   895                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   896  000C3C  504A               	movf	POS_CURSOR@columna^0,w,c
   897  000C3E  0F80               	addlw	128
   898  000C40  EC67  F006         	call	_ENVIA_LCD_CMD
   899                           
   900                           ;LCD.c: 11:  }
   901  000C44  EF31  F006         	goto	l24
   902  000C48                     l1310:
   903  000C48  0E02               	movlw	2
   904  000C4A  184B               	xorwf	POS_CURSOR@fila^0,w,c
   905  000C4C  A4D8               	btfss	status,2,c
   906  000C4E  EF2B  F006         	goto	u321
   907  000C52  EF2D  F006         	goto	u320
   908  000C56                     u321:
   909  000C56  EF31  F006         	goto	l24
   910  000C5A                     u320:
   911  000C5A                     
   912                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   913  000C5A  504A               	movf	POS_CURSOR@columna^0,w,c
   914  000C5C  0FC0               	addlw	192
   915  000C5E  EC67  F006         	call	_ENVIA_LCD_CMD
   916  000C62                     l24:
   917  000C62  0012               	return		;funcret
   918  000C64                     __end_of_POS_CURSOR:
   919                           	callstack 0
   920                           
   921 ;; *************** function _ESCRIBE_MENSAJE *****************
   922 ;; Defined at:
   923 ;;		line 41 in file "LCD.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  cadena          2   11[COMRAM] PTR const unsigned char 
   926 ;;		 -> STR_2(17), STR_1(6), 
   927 ;;  tam             1   13[COMRAM] unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  i               1   16[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         3       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          2       0       0       0       0       0       0       0       0
   942 ;;      Totals:         6       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        6 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 5
   946 ;; This function calls:
   947 ;;		_ENVIA_CHAR
   948 ;; This function is called by:
   949 ;;		_vis_focos
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text3
   955  000BB0                     __ptext3:
   956                           	callstack 0
   957  000BB0                     _ESCRIBE_MENSAJE:
   958                           	callstack 24
   959  000BB0                     
   960                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   961  000BB0  0E00               	movlw	0
   962  000BB2  6E4F               	movwf	ESCRIBE_MENSAJE@i^0,c
   963                           
   964                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   965  000BB4  0E00               	movlw	0
   966  000BB6  6E4F               	movwf	ESCRIBE_MENSAJE@i^0,c
   967  000BB8  EFED  F005         	goto	l1320
   968  000BBC                     l1316:
   969                           
   970                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   971  000BBC  504F               	movf	ESCRIBE_MENSAJE@i^0,w,c
   972  000BBE  244A               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   973  000BC0  6E4D               	movwf	??_ESCRIBE_MENSAJE^0,c
   974  000BC2  0E00               	movlw	0
   975  000BC4  204B               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   976  000BC6  6E4E               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   977  000BC8  C04D  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   978  000BCC  C04E  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   979  000BD0                     	if	0	;tblptru may be non-zero
   980  000BD0                     	endif
   981  000BD0                     	if	0	;tblptru may be non-zero
   982  000BD0                     	endif
   983  000BD0  0008               	tblrd		*
   984  000BD2  50F5               	movf	tablat,w,c
   985  000BD4  EC4D  F006         	call	_ENVIA_CHAR
   986  000BD8                     
   987                           ;LCD.c: 47:  }
   988  000BD8  2A4F               	incf	ESCRIBE_MENSAJE@i^0,f,c
   989  000BDA                     l1320:
   990  000BDA  504C               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   991  000BDC  5C4F               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   992  000BDE  A0D8               	btfss	status,0,c
   993  000BE0  EFF4  F005         	goto	u331
   994  000BE4  EFF6  F005         	goto	u330
   995  000BE8                     u331:
   996  000BE8  EFDE  F005         	goto	l1316
   997  000BEC                     u330:
   998  000BEC  0012               	return		;funcret
   999  000BEE                     __end_of_ESCRIBE_MENSAJE:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _init_LCD *****************
  1003 ;; Defined at:
  1004 ;;		line 36 in file "maincode5.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1020 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1022 ;;Total ram usage:        1 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 6
  1025 ;; This function calls:
  1026 ;;		_BORRAR_LCD
  1027 ;;		_CURSOR_HOME
  1028 ;;		_CURSOR_ONOFF
  1029 ;;		_GENERACARACTER
  1030 ;;		_LCD_CONFIG
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text4
  1037  000B2C                     __ptext4:
  1038                           	callstack 0
  1039  000B2C                     _init_LCD:
  1040                           	callstack 24
  1041  000B2C                     
  1042                           ;maincode5.c: 37:     TRISD = 0x00;
  1043  000B2C  0E00               	movlw	0
  1044  000B2E  6E95               	movwf	149,c	;volatile
  1045  000B30                     
  1046                           ;maincode5.c: 38:     LCD_CONFIG();
  1047  000B30  EC3D  F005         	call	_LCD_CONFIG	;wreg free
  1048  000B34                     
  1049                           ;maincode5.c: 39:     _delay((unsigned long)((18)*(8000000UL/4000.0)));
  1050  000B34  0E2F               	movlw	47
  1051  000B36  6E4E               	movwf	??_init_LCD^0,c
  1052  000B38  0EC0               	movlw	192
  1053  000B3A                     u577:
  1054  000B3A  2EE8               	decfsz	wreg,f,c
  1055  000B3C  D7FE               	bra	u577
  1056  000B3E  2E4E               	decfsz	??_init_LCD^0,f,c
  1057  000B40  D7FC               	bra	u577
  1058  000B42                     
  1059                           ;maincode5.c: 40:     BORRAR_LCD();
  1060  000B42  ECE5  F006         	call	_BORRAR_LCD	;wreg free
  1061  000B46                     
  1062                           ;maincode5.c: 41:     CURSOR_HOME();
  1063  000B46  ECE1  F006         	call	_CURSOR_HOME	;wreg free
  1064  000B4A                     
  1065                           ;maincode5.c: 42:     CURSOR_ONOFF(1);
  1066  000B4A  0E01               	movlw	1
  1067  000B4C  EC81  F006         	call	_CURSOR_ONOFF
  1068  000B50                     
  1069                           ;maincode5.c: 43:     GENERACARACTER(foco_off,0);
  1070  000B50  0E37               	movlw	low _foco_off
  1071  000B52  6E4A               	movwf	GENERACARACTER@vector^0,c
  1072  000B54  0E00               	movlw	high _foco_off
  1073  000B56  6E4B               	movwf	(GENERACARACTER@vector+1)^0,c
  1074  000B58  0E00               	movlw	0
  1075  000B5A  6E4C               	movwf	GENERACARACTER@pos^0,c
  1076  000B5C  ECF7  F005         	call	_GENERACARACTER	;wreg free
  1077  000B60                     
  1078                           ;maincode5.c: 44:     GENERACARACTER(foco_on,1);
  1079  000B60  0E2F               	movlw	low _foco_on
  1080  000B62  6E4A               	movwf	GENERACARACTER@vector^0,c
  1081  000B64  0E00               	movlw	high _foco_on
  1082  000B66  6E4B               	movwf	(GENERACARACTER@vector+1)^0,c
  1083  000B68  0E01               	movlw	1
  1084  000B6A  6E4C               	movwf	GENERACARACTER@pos^0,c
  1085  000B6C  ECF7  F005         	call	_GENERACARACTER	;wreg free
  1086  000B70  0012               	return		;funcret
  1087  000B72                     __end_of_init_LCD:
  1088                           	callstack 0
  1089                           
  1090 ;; *************** function _LCD_CONFIG *****************
  1091 ;; Defined at:
  1092 ;;		line 72 in file "LCD.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1106 ;;      Params:         0       0       0       0       0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1108 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1109 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1110 ;;Total ram usage:        1 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; Hardware stack levels required when called: 5
  1113 ;; This function calls:
  1114 ;;		_ENVIA_LCD_CMD
  1115 ;;		_ENVIA_NIBBLE
  1116 ;; This function is called by:
  1117 ;;		_init_LCD
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text5
  1122  000A7A                     __ptext5:
  1123                           	callstack 0
  1124  000A7A                     _LCD_CONFIG:
  1125                           	callstack 24
  1126  000A7A                     
  1127                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1128  000A7A  908C               	bcf	140,0,c	;volatile
  1129                           
  1130                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1131  000A7C  928C               	bcf	140,1,c	;volatile
  1132  000A7E                     
  1133                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1134  000A7E  0E30               	movlw	48
  1135  000A80  ECD3  F006         	call	_ENVIA_NIBBLE
  1136  000A84                     
  1137                           ;LCD.c: 77:         _delay(24000);
  1138  000A84  0E20               	movlw	32
  1139  000A86  6E4A               	movwf	??_LCD_CONFIG^0,c
  1140  000A88  0E2A               	movlw	42
  1141  000A8A                     u587:
  1142  000A8A  2EE8               	decfsz	wreg,f,c
  1143  000A8C  D7FE               	bra	u587
  1144  000A8E  2E4A               	decfsz	??_LCD_CONFIG^0,f,c
  1145  000A90  D7FC               	bra	u587
  1146  000A92                     
  1147                           ;LCD.c: 78:         _delay(24000);
  1148  000A92  0E20               	movlw	32
  1149  000A94  6E4A               	movwf	??_LCD_CONFIG^0,c
  1150  000A96  0E2A               	movlw	42
  1151  000A98                     u597:
  1152  000A98  2EE8               	decfsz	wreg,f,c
  1153  000A9A  D7FE               	bra	u597
  1154  000A9C  2E4A               	decfsz	??_LCD_CONFIG^0,f,c
  1155  000A9E  D7FC               	bra	u597
  1156                           
  1157                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1158  000AA0  0E30               	movlw	48
  1159  000AA2  ECD3  F006         	call	_ENVIA_NIBBLE
  1160  000AA6                     
  1161                           ;LCD.c: 83:  _delay(1200);
  1162  000AA6  0EF0               	movlw	240
  1163  000AA8                     u607:
  1164  000AA8  D000               	nop2	
  1165  000AAA  2EE8               	decfsz	wreg,f,c
  1166  000AAC  D7FD               	bra	u607
  1167  000AAE                     
  1168                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1169  000AAE  0E30               	movlw	48
  1170  000AB0  ECD3  F006         	call	_ENVIA_NIBBLE
  1171  000AB4                     
  1172                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1173  000AB4  0E20               	movlw	32
  1174  000AB6  ECD3  F006         	call	_ENVIA_NIBBLE
  1175  000ABA                     
  1176                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1177  000ABA  0E01               	movlw	1
  1178  000ABC  EC67  F006         	call	_ENVIA_LCD_CMD
  1179  000AC0                     
  1180                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1181  000AC0  0E28               	movlw	40
  1182  000AC2  EC67  F006         	call	_ENVIA_LCD_CMD
  1183  000AC6                     
  1184                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1185  000AC6  0E0F               	movlw	15
  1186  000AC8  EC67  F006         	call	_ENVIA_LCD_CMD
  1187  000ACC                     
  1188                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1189  000ACC  0E06               	movlw	6
  1190  000ACE  EC67  F006         	call	_ENVIA_LCD_CMD
  1191  000AD2                     
  1192                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1193  000AD2  0E01               	movlw	1
  1194  000AD4  EC67  F006         	call	_ENVIA_LCD_CMD
  1195  000AD8  0012               	return		;funcret
  1196  000ADA                     __end_of_LCD_CONFIG:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _GENERACARACTER *****************
  1200 ;; Defined at:
  1201 ;;		line 153 in file "LCD.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;  vector          2   11[COMRAM] PTR const unsigned char 
  1204 ;;		 -> foco_on(8), foco_off(8), 
  1205 ;;  pos             1   13[COMRAM] unsigned char 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  i               1   14[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         3       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1221 ;;Total ram usage:        4 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 5
  1224 ;; This function calls:
  1225 ;;		_ENVIA_CHAR
  1226 ;;		_ENVIA_LCD_CMD
  1227 ;; This function is called by:
  1228 ;;		_init_LCD
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text6
  1233  000BEE                     __ptext6:
  1234                           	callstack 0
  1235  000BEE                     _GENERACARACTER:
  1236                           	callstack 24
  1237  000BEE                     
  1238                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1239  000BEE  504C               	movf	GENERACARACTER@pos^0,w,c
  1240  000BF0  0D08               	mullw	8
  1241  000BF2  50F3               	movf	243,w,c
  1242  000BF4  0F40               	addlw	64
  1243  000BF6  EC67  F006         	call	_ENVIA_LCD_CMD
  1244  000BFA                     
  1245                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1246  000BFA  0E00               	movlw	0
  1247  000BFC  6E4D               	movwf	GENERACARACTER@i^0,c
  1248  000BFE                     l1330:
  1249                           
  1250                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1251  000BFE  504D               	movf	GENERACARACTER@i^0,w,c
  1252  000C00  244A               	addwf	GENERACARACTER@vector^0,w,c
  1253  000C02  6ED9               	movwf	fsr2l,c
  1254  000C04  0E00               	movlw	0
  1255  000C06  204B               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1256  000C08  6EDA               	movwf	fsr2h,c
  1257  000C0A  50DF               	movf	indf2,w,c
  1258  000C0C  EC4D  F006         	call	_ENVIA_CHAR
  1259  000C10                     
  1260                           ;LCD.c: 160:  }
  1261  000C10  2A4D               	incf	GENERACARACTER@i^0,f,c
  1262  000C12  0E07               	movlw	7
  1263  000C14  644D               	cpfsgt	GENERACARACTER@i^0,c
  1264  000C16  EF0F  F006         	goto	u341
  1265  000C1A  EF11  F006         	goto	u340
  1266  000C1E                     u341:
  1267  000C1E  EFFF  F005         	goto	l1330
  1268  000C22                     u340:
  1269  000C22                     
  1270                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1271  000C22  0E80               	movlw	128
  1272  000C24  EC67  F006         	call	_ENVIA_LCD_CMD
  1273  000C28  0012               	return		;funcret
  1274  000C2A                     __end_of_GENERACARACTER:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _ENVIA_CHAR *****************
  1278 ;; Defined at:
  1279 ;;		line 50 in file "LCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  dato            1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  dato            1    9[COMRAM] unsigned char 
  1284 ;;  aux             1   10[COMRAM] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1297 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1298 ;;Total ram usage:        2 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; Hardware stack levels required when called: 4
  1301 ;; This function calls:
  1302 ;;		_ENVIA_NIBBLE
  1303 ;;		_LEER_LCD
  1304 ;; This function is called by:
  1305 ;;		_ESCRIBE_MENSAJE
  1306 ;;		_GENERACARACTER
  1307 ;;		_vis_focos
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text7
  1312  000C9A                     __ptext7:
  1313                           	callstack 0
  1314  000C9A                     _ENVIA_CHAR:
  1315                           	callstack 24
  1316                           
  1317                           ;incstack = 0
  1318                           ;ENVIA_CHAR@dato stored from wreg
  1319  000C9A  6E48               	movwf	ENVIA_CHAR@dato^0,c
  1320  000C9C                     
  1321                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1322  000C9C  808C               	bsf	140,0,c	;volatile
  1323  000C9E                     
  1324                           ;LCD.c: 54:  LEER_LCD();
  1325  000C9E  EC04  F005         	call	_LEER_LCD	;wreg free
  1326  000CA2                     
  1327                           ;LCD.c: 55:  TRISD = 0x00;
  1328  000CA2  0E00               	movlw	0
  1329  000CA4  6E95               	movwf	149,c	;volatile
  1330  000CA6                     
  1331                           ;LCD.c: 56:         _delay(1200);
  1332  000CA6  0EF0               	movlw	240
  1333  000CA8                     u617:
  1334  000CA8  D000               	nop2	
  1335  000CAA  2EE8               	decfsz	wreg,f,c
  1336  000CAC  D7FD               	bra	u617
  1337  000CAE                     
  1338                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1339  000CAE  928C               	bcf	140,1,c	;volatile
  1340  000CB0                     
  1341                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1342  000CB0  948C               	bcf	140,2,c	;volatile
  1343  000CB2                     
  1344                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1345  000CB2  808C               	bsf	140,0,c	;volatile
  1346  000CB4                     
  1347                           ;LCD.c: 61:  aux = dato & 0xF0;
  1348  000CB4  5048               	movf	ENVIA_CHAR@dato^0,w,c
  1349  000CB6  0BF0               	andlw	240
  1350  000CB8  6E49               	movwf	ENVIA_CHAR@aux^0,c
  1351  000CBA                     
  1352                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1353  000CBA  5049               	movf	ENVIA_CHAR@aux^0,w,c
  1354  000CBC  ECD3  F006         	call	_ENVIA_NIBBLE
  1355  000CC0                     
  1356                           ;LCD.c: 63:  aux = dato << 4;
  1357  000CC0  3848               	swapf	ENVIA_CHAR@dato^0,w,c
  1358  000CC2  0BF0               	andlw	240
  1359  000CC4  6E49               	movwf	ENVIA_CHAR@aux^0,c
  1360  000CC6                     
  1361                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1362  000CC6  5049               	movf	ENVIA_CHAR@aux^0,w,c
  1363  000CC8  ECD3  F006         	call	_ENVIA_NIBBLE
  1364  000CCC  0012               	return		;funcret
  1365  000CCE                     __end_of_ENVIA_CHAR:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _CURSOR_ONOFF *****************
  1369 ;; Defined at:
  1370 ;;		line 35 in file "LCD.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  estado          1    wreg     unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  estado          1   11[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1387 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 5
  1391 ;; This function calls:
  1392 ;;		_ENVIA_LCD_CMD
  1393 ;; This function is called by:
  1394 ;;		_init_LCD
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text8
  1399  000D02                     __ptext8:
  1400                           	callstack 0
  1401  000D02                     _CURSOR_ONOFF:
  1402                           	callstack 24
  1403                           
  1404                           ;incstack = 0
  1405                           ;CURSOR_ONOFF@estado stored from wreg
  1406  000D02  6E4A               	movwf	CURSOR_ONOFF@estado^0,c
  1407  000D04                     
  1408                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1409  000D04  504A               	movf	CURSOR_ONOFF@estado^0,w,c
  1410  000D06  A4D8               	btfss	status,2,c
  1411  000D08  EF88  F006         	goto	u41
  1412  000D0C  EF8A  F006         	goto	u40
  1413  000D10                     u41:
  1414  000D10  EF8D  F006         	goto	l1006
  1415  000D14                     u40:
  1416  000D14  0E0E               	movlw	14
  1417  000D16  EC67  F006         	call	_ENVIA_LCD_CMD
  1418  000D1A                     l1006:
  1419                           
  1420                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1421  000D1A  044A               	decf	CURSOR_ONOFF@estado^0,w,c
  1422  000D1C  A4D8               	btfss	status,2,c
  1423  000D1E  EF93  F006         	goto	u51
  1424  000D22  EF95  F006         	goto	u50
  1425  000D26                     u51:
  1426  000D26  EF98  F006         	goto	l42
  1427  000D2A                     u50:
  1428  000D2A  0E0C               	movlw	12
  1429  000D2C  EC67  F006         	call	_ENVIA_LCD_CMD
  1430  000D30                     l42:
  1431  000D30  0012               	return		;funcret
  1432  000D32                     __end_of_CURSOR_ONOFF:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _CURSOR_HOME *****************
  1436 ;; Defined at:
  1437 ;;		line 30 in file "LCD.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, status,2, status,0, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1454 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 5
  1458 ;; This function calls:
  1459 ;;		_ENVIA_LCD_CMD
  1460 ;; This function is called by:
  1461 ;;		_init_LCD
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text9
  1466  000DC2                     __ptext9:
  1467                           	callstack 0
  1468  000DC2                     _CURSOR_HOME:
  1469                           	callstack 24
  1470  000DC2                     
  1471                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1472  000DC2  0E02               	movlw	2
  1473  000DC4  EC67  F006         	call	_ENVIA_LCD_CMD
  1474  000DC8  0012               	return		;funcret
  1475  000DCA                     __end_of_CURSOR_HOME:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _BORRAR_LCD *****************
  1479 ;; Defined at:
  1480 ;;		line 67 in file "LCD.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;		None
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;		None
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0
  1495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        0 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 5
  1501 ;; This function calls:
  1502 ;;		_ENVIA_LCD_CMD
  1503 ;; This function is called by:
  1504 ;;		_init_LCD
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text10
  1509  000DCA                     __ptext10:
  1510                           	callstack 0
  1511  000DCA                     _BORRAR_LCD:
  1512                           	callstack 24
  1513  000DCA                     
  1514                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1515  000DCA  0E01               	movlw	1
  1516  000DCC  EC67  F006         	call	_ENVIA_LCD_CMD
  1517  000DD0  0012               	return		;funcret
  1518  000DD2                     __end_of_BORRAR_LCD:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _ENVIA_LCD_CMD *****************
  1522 ;; Defined at:
  1523 ;;		line 104 in file "LCD.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  dato            1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  dato            1    9[COMRAM] unsigned char 
  1528 ;;  aux             1   10[COMRAM] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        2 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		_ENVIA_NIBBLE
  1547 ;;		_LEER_LCD
  1548 ;; This function is called by:
  1549 ;;		_POS_CURSOR
  1550 ;;		_CURSOR_HOME
  1551 ;;		_CURSOR_ONOFF
  1552 ;;		_BORRAR_LCD
  1553 ;;		_LCD_CONFIG
  1554 ;;		_GENERACARACTER
  1555 ;;		_BLINK_CURSOR
  1556 ;;		_DISPLAY_ONOFF
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text11
  1561  000CCE                     __ptext11:
  1562                           	callstack 0
  1563  000CCE                     _ENVIA_LCD_CMD:
  1564                           	callstack 24
  1565                           
  1566                           ;incstack = 0
  1567                           ;ENVIA_LCD_CMD@dato stored from wreg
  1568  000CCE  6E48               	movwf	ENVIA_LCD_CMD@dato^0,c
  1569  000CD0                     
  1570                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1571  000CD0  908C               	bcf	140,0,c	;volatile
  1572  000CD2                     
  1573                           ;LCD.c: 108:  LEER_LCD();
  1574  000CD2  EC04  F005         	call	_LEER_LCD	;wreg free
  1575  000CD6                     
  1576                           ;LCD.c: 109:  TRISD = 0b00000000;
  1577  000CD6  0E00               	movlw	0
  1578  000CD8  6E95               	movwf	149,c	;volatile
  1579  000CDA                     
  1580                           ;LCD.c: 111:         _delay(1200);
  1581  000CDA  0EF0               	movlw	240
  1582  000CDC                     u627:
  1583  000CDC  D000               	nop2	
  1584  000CDE  2EE8               	decfsz	wreg,f,c
  1585  000CE0  D7FD               	bra	u627
  1586  000CE2                     
  1587                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1588  000CE2  928C               	bcf	140,1,c	;volatile
  1589  000CE4                     
  1590                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1591  000CE4  948C               	bcf	140,2,c	;volatile
  1592  000CE6                     
  1593                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1594  000CE6  908C               	bcf	140,0,c	;volatile
  1595  000CE8                     
  1596                           ;LCD.c: 115:  aux = dato & 0xF0;
  1597  000CE8  5048               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1598  000CEA  0BF0               	andlw	240
  1599  000CEC  6E49               	movwf	ENVIA_LCD_CMD@aux^0,c
  1600  000CEE                     
  1601                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1602  000CEE  5049               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1603  000CF0  ECD3  F006         	call	_ENVIA_NIBBLE
  1604  000CF4                     
  1605                           ;LCD.c: 117:  aux = dato<<4;
  1606  000CF4  3848               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1607  000CF6  0BF0               	andlw	240
  1608  000CF8  6E49               	movwf	ENVIA_LCD_CMD@aux^0,c
  1609  000CFA                     
  1610                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1611  000CFA  5049               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1612  000CFC  ECD3  F006         	call	_ENVIA_NIBBLE
  1613  000D00  0012               	return		;funcret
  1614  000D02                     __end_of_ENVIA_LCD_CMD:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _LEER_LCD *****************
  1618 ;; Defined at:
  1619 ;;		line 121 in file "LCD.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  aux             1    8[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        1 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 3
  1640 ;; This function calls:
  1641 ;;		Nothing
  1642 ;; This function is called by:
  1643 ;;		_ENVIA_CHAR
  1644 ;;		_ENVIA_LCD_CMD
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text12
  1649  000A08                     __ptext12:
  1650                           	callstack 0
  1651  000A08                     _LEER_LCD:
  1652                           	callstack 24
  1653  000A08                     
  1654                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1655  000A08  0EF8               	movlw	248
  1656  000A0A  6E95               	movwf	149,c	;volatile
  1657  000A0C                     
  1658                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1659  000A0C  908C               	bcf	140,0,c	;volatile
  1660  000A0E                     
  1661                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1662  000A0E  828C               	bsf	140,1,c	;volatile
  1663  000A10                     
  1664                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1665  000A10  848C               	bsf	140,2,c	;volatile
  1666  000A12                     
  1667                           ;LCD.c: 128:         _delay(1200);
  1668  000A12  0EF0               	movlw	240
  1669  000A14                     u637:
  1670  000A14  D000               	nop2	
  1671  000A16  2EE8               	decfsz	wreg,f,c
  1672  000A18  D7FD               	bra	u637
  1673  000A1A                     
  1674                           ;LCD.c: 130:  aux = PORTD;
  1675  000A1A  CF83 F047          	movff	3971,LEER_LCD@aux	;volatile
  1676  000A1E                     
  1677                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1678  000A1E  948C               	bcf	140,2,c	;volatile
  1679  000A20                     
  1680                           ;LCD.c: 132:         _delay(1200);
  1681  000A20  0EF0               	movlw	240
  1682  000A22                     u647:
  1683  000A22  D000               	nop2	
  1684  000A24  2EE8               	decfsz	wreg,f,c
  1685  000A26  D7FD               	bra	u647
  1686  000A28                     
  1687                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1688  000A28  848C               	bsf	140,2,c	;volatile
  1689  000A2A                     
  1690                           ;LCD.c: 135:         _delay(1200);
  1691  000A2A  0EF0               	movlw	240
  1692  000A2C                     u657:
  1693  000A2C  D000               	nop2	
  1694  000A2E  2EE8               	decfsz	wreg,f,c
  1695  000A30  D7FD               	bra	u657
  1696  000A32                     
  1697                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1698  000A32  948C               	bcf	140,2,c	;volatile
  1699  000A34                     l924:
  1700                           
  1701                           ;LCD.c: 138:  aux = aux & 0x80;
  1702  000A34  5047               	movf	LEER_LCD@aux^0,w,c
  1703  000A36  0B80               	andlw	128
  1704  000A38  6E47               	movwf	LEER_LCD@aux^0,c
  1705                           
  1706                           ;LCD.c: 139:  while(aux == 0x80)
  1707  000A3A  EF33  F005         	goto	l938
  1708  000A3E                     l67:
  1709                           
  1710                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1711  000A3E  848C               	bsf	140,2,c	;volatile
  1712  000A40                     
  1713                           ;LCD.c: 142:             _delay(1200);
  1714  000A40  0EF0               	movlw	240
  1715  000A42                     u667:
  1716  000A42  D000               	nop2	
  1717  000A44  2EE8               	decfsz	wreg,f,c
  1718  000A46  D7FD               	bra	u667
  1719  000A48                     
  1720                           ;LCD.c: 143:             aux = PORTD;
  1721  000A48  CF83 F047          	movff	3971,LEER_LCD@aux	;volatile
  1722  000A4C                     
  1723                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1724  000A4C  948C               	bcf	140,2,c	;volatile
  1725                           
  1726                           ;LCD.c: 145:             _delay(1200);
  1727  000A4E  0EF0               	movlw	240
  1728  000A50                     u677:
  1729  000A50  D000               	nop2	
  1730  000A52  2EE8               	decfsz	wreg,f,c
  1731  000A54  D7FD               	bra	u677
  1732  000A56                     
  1733                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1734  000A56  848C               	bsf	140,2,c	;volatile
  1735                           
  1736                           ;LCD.c: 147:             _delay(1200);
  1737  000A58  0EF0               	movlw	240
  1738  000A5A                     u687:
  1739  000A5A  D000               	nop2	
  1740  000A5C  2EE8               	decfsz	wreg,f,c
  1741  000A5E  D7FD               	bra	u687
  1742  000A60                     
  1743                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1744  000A60  948C               	bcf	140,2,c	;volatile
  1745  000A62  EF1A  F005         	goto	l924
  1746  000A66                     l938:
  1747                           
  1748                           ;LCD.c: 139:  while(aux == 0x80)
  1749  000A66  0E80               	movlw	128
  1750  000A68  1847               	xorwf	LEER_LCD@aux^0,w,c
  1751  000A6A  B4D8               	btfsc	status,2,c
  1752  000A6C  EF3A  F005         	goto	u11
  1753  000A70  EF3C  F005         	goto	u10
  1754  000A74                     u11:
  1755  000A74  EF1F  F005         	goto	l67
  1756  000A78                     u10:
  1757  000A78  0012               	return		;funcret
  1758  000A7A                     __end_of_LEER_LCD:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _ENVIA_NIBBLE *****************
  1762 ;; Defined at:
  1763 ;;		line 93 in file "LCD.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  dato            1    wreg     unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  dato            1    8[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        1 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_ENVIA_CHAR
  1788 ;;		_LCD_CONFIG
  1789 ;;		_ENVIA_LCD_CMD
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text13
  1794  000DA6                     __ptext13:
  1795                           	callstack 0
  1796  000DA6                     _ENVIA_NIBBLE:
  1797                           	callstack 24
  1798                           
  1799                           ;incstack = 0
  1800                           ;ENVIA_NIBBLE@dato stored from wreg
  1801  000DA6  6E47               	movwf	ENVIA_NIBBLE@dato^0,c
  1802  000DA8                     
  1803                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1804  000DA8  0E0F               	movlw	15
  1805  000DAA  168C               	andwf	140,f,c	;volatile
  1806                           
  1807                           ;LCD.c: 96:  dato &= 0xF0;
  1808  000DAC  0EF0               	movlw	240
  1809  000DAE  1647               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1810                           
  1811                           ;LCD.c: 97:  LATD|= dato;
  1812  000DB0  5047               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1813  000DB2  128C               	iorwf	140,f,c	;volatile
  1814  000DB4                     
  1815                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1816  000DB4  848C               	bsf	140,2,c	;volatile
  1817  000DB6                     
  1818                           ;LCD.c: 100:         _delay(1200);
  1819  000DB6  0EF0               	movlw	240
  1820  000DB8                     u697:
  1821  000DB8  D000               	nop2	
  1822  000DBA  2EE8               	decfsz	wreg,f,c
  1823  000DBC  D7FD               	bra	u697
  1824  000DBE                     
  1825                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1826  000DBE  948C               	bcf	140,2,c	;volatile
  1827  000DC0  0012               	return		;funcret
  1828  000DC2                     __end_of_ENVIA_NIBBLE:
  1829                           	callstack 0
  1830                           
  1831 ;; *************** function _configuro *****************
  1832 ;; Defined at:
  1833 ;;		line 17 in file "maincode5.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 3
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_main
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text14
  1862  000D32                     __ptext14:
  1863                           	callstack 0
  1864  000D32                     _configuro:
  1865                           	callstack 27
  1866  000D32                     
  1867                           ;maincode5.c: 18:     OSCCON = 0x70;
  1868  000D32  0E70               	movlw	112
  1869  000D34  6ED3               	movwf	211,c	;volatile
  1870                           
  1871                           ;maincode5.c: 19:     ADCON1 = 0x0F;
  1872  000D36  0E0F               	movlw	15
  1873  000D38  6EC1               	movwf	193,c	;volatile
  1874                           
  1875                           ;maincode5.c: 20:     TRISE = 0xF8;
  1876  000D3A  0EF8               	movlw	248
  1877  000D3C  6E96               	movwf	150,c	;volatile
  1878  000D3E                     
  1879                           ;maincode5.c: 21:     RCONbits.IPEN = 1;
  1880  000D3E  8ED0               	bsf	208,7,c	;volatile
  1881  000D40                     
  1882                           ;maincode5.c: 22:     INTCONbits.GIEH = 1;
  1883  000D40  8EF2               	bsf	242,7,c	;volatile
  1884  000D42                     
  1885                           ;maincode5.c: 23:     INTCONbits.GIEL = 1;
  1886  000D42  8CF2               	bsf	242,6,c	;volatile
  1887  000D44                     
  1888                           ;maincode5.c: 24:     INTCONbits.INT0IE = 1;
  1889  000D44  88F2               	bsf	242,4,c	;volatile
  1890  000D46                     
  1891                           ;maincode5.c: 25:     INTCON2bits.RBPU = 0;
  1892  000D46  9EF1               	bcf	241,7,c	;volatile
  1893  000D48                     
  1894                           ;maincode5.c: 26:     INTCON2bits.INTEDG0 = 0;
  1895  000D48  9CF1               	bcf	241,6,c	;volatile
  1896  000D4A                     
  1897                           ;maincode5.c: 27:     INTCON3bits.INT2IP = 0;
  1898  000D4A  9EF0               	bcf	240,7,c	;volatile
  1899  000D4C                     
  1900                           ;maincode5.c: 28:     INTCON2bits.INTEDG2 = 0;
  1901  000D4C  98F1               	bcf	241,4,c	;volatile
  1902  000D4E                     
  1903                           ;maincode5.c: 29:     INTCON3bits.INT2IE = 1;
  1904  000D4E  88F0               	bsf	240,4,c	;volatile
  1905                           
  1906                           ;maincode5.c: 30:     SPBRG = 12;
  1907  000D50  0E0C               	movlw	12
  1908  000D52  6EAF               	movwf	175,c	;volatile
  1909  000D54                     
  1910                           ;maincode5.c: 31:     TRISCbits.RC6 = 0;
  1911  000D54  9C94               	bcf	148,6,c	;volatile
  1912  000D56                     
  1913                           ;maincode5.c: 32:     RCSTAbits.SPEN = 1;
  1914  000D56  8EAB               	bsf	171,7,c	;volatile
  1915  000D58                     
  1916                           ;maincode5.c: 33:     TXSTAbits.TXEN = 1;
  1917  000D58  8AAC               	bsf	172,5,c	;volatile
  1918  000D5A  0012               	return		;funcret
  1919  000D5C                     __end_of_configuro:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _INT2_ISR *****************
  1923 ;; Defined at:
  1924 ;;		line 127 in file "maincode5.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  y               1    7[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1940 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1941 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1942 ;;Total ram usage:        8 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 2
  1945 ;; This function calls:
  1946 ;;		_salto_del_tigre
  1947 ;; This function is called by:
  1948 ;;		Interrupt level 1
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	intcodelo
  1953  000018                     __pintcodelo:
  1954                           	callstack 0
  1955  000018                     _INT2_ISR:
  1956                           	callstack 24
  1957                           
  1958                           ;incstack = 0
  1959  000018  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1960  00001A  CFD8 F041          	movff	status,??_INT2_ISR+2
  1961  00001E  CFE8 F042          	movff	wreg,??_INT2_ISR+3
  1962  000022  CFE0 F043          	movff	bsr,??_INT2_ISR+4
  1963  000026  CFD9 F044          	movff	fsr2l,??_INT2_ISR+5
  1964  00002A  CFDA F045          	movff	fsr2h,??_INT2_ISR+6
  1965  00002E                     
  1966                           ;maincode5.c: 128:     INTCON3bits.INT2IF = 0;
  1967  00002E  92F0               	bcf	240,1,c	;volatile
  1968                           
  1969                           ;maincode5.c: 129:     unsigned char y;;maincode5.c: 130:     switch(estado2){
  1970  000030  EF8A  F000         	goto	i1l1512
  1971  000034                     i1l1462:
  1972                           
  1973                           ;maincode5.c: 132:             for(y=0;y<10;y++){
  1974  000034  0E00               	movlw	0
  1975  000036  6E46               	movwf	INT2_ISR@y^0,c
  1976  000038                     i1l1468:
  1977                           
  1978                           ;maincode5.c: 133:                 TXREG = mensaje1[y];
  1979  000038  0E1A               	movlw	low _mensaje1
  1980  00003A  2446               	addwf	INT2_ISR@y^0,w,c
  1981  00003C  6ED9               	movwf	fsr2l,c
  1982  00003E  6ADA               	clrf	fsr2h,c
  1983  000040  0E00               	movlw	high _mensaje1
  1984  000042  22DA               	addwfc	fsr2h,f,c
  1985  000044  50DF               	movf	indf2,w,c
  1986  000046  6EAD               	movwf	173,c	;volatile
  1987  000048                     i1l202:
  1988  000048  A2AC               	btfss	172,1,c	;volatile
  1989  00004A  EF29  F000         	goto	i1u44_21
  1990  00004E  EF2B  F000         	goto	i1u44_20
  1991  000052                     i1u44_21:
  1992  000052  EF24  F000         	goto	i1l202
  1993  000056                     i1u44_20:
  1994  000056                     
  1995                           ;maincode5.c: 135:             }
  1996  000056  2A46               	incf	INT2_ISR@y^0,f,c
  1997  000058  0E09               	movlw	9
  1998  00005A  6446               	cpfsgt	INT2_ISR@y^0,c
  1999  00005C  EF32  F000         	goto	i1u45_21
  2000  000060  EF34  F000         	goto	i1u45_20
  2001  000064                     i1u45_21:
  2002  000064  EF1C  F000         	goto	i1l1468
  2003  000068                     i1u45_20:
  2004  000068  EFA7  F000         	goto	i1l1514
  2005  00006C                     i1l1474:
  2006                           
  2007                           ;maincode5.c: 138:             for(y=0;y<26;y++){
  2008  00006C  0E00               	movlw	0
  2009  00006E  6E46               	movwf	INT2_ISR@y^0,c
  2010  000070                     i1l1480:
  2011                           
  2012                           ;maincode5.c: 139:                 TXREG = mensaje2[y];
  2013  000070  0E7B               	movlw	low _mensaje2
  2014  000072  2446               	addwf	INT2_ISR@y^0,w,c
  2015  000074  6ED9               	movwf	fsr2l,c
  2016  000076  6ADA               	clrf	fsr2h,c
  2017  000078  0E00               	movlw	high _mensaje2
  2018  00007A  22DA               	addwfc	fsr2h,f,c
  2019  00007C  50DF               	movf	indf2,w,c
  2020  00007E  6EAD               	movwf	173,c	;volatile
  2021  000080                     i1l209:
  2022  000080  A2AC               	btfss	172,1,c	;volatile
  2023  000082  EF45  F000         	goto	i1u46_21
  2024  000086  EF47  F000         	goto	i1u46_20
  2025  00008A                     i1u46_21:
  2026  00008A  EF40  F000         	goto	i1l209
  2027  00008E                     i1u46_20:
  2028  00008E                     
  2029                           ;maincode5.c: 141:             }
  2030  00008E  2A46               	incf	INT2_ISR@y^0,f,c
  2031  000090  0E19               	movlw	25
  2032  000092  6446               	cpfsgt	INT2_ISR@y^0,c
  2033  000094  EF4E  F000         	goto	i1u47_21
  2034  000098  EF50  F000         	goto	i1u47_20
  2035  00009C                     i1u47_21:
  2036  00009C  EF38  F000         	goto	i1l1480
  2037  0000A0                     i1u47_20:
  2038  0000A0  EFA7  F000         	goto	i1l1514
  2039  0000A4                     i1l1486:
  2040                           
  2041                           ;maincode5.c: 144:             for(y=0;y<26;y++){
  2042  0000A4  0E00               	movlw	0
  2043  0000A6  6E46               	movwf	INT2_ISR@y^0,c
  2044  0000A8                     i1l1492:
  2045                           
  2046                           ;maincode5.c: 145:                 TXREG = mensaje3[y];
  2047  0000A8  0E60               	movlw	low _mensaje3
  2048  0000AA  2446               	addwf	INT2_ISR@y^0,w,c
  2049  0000AC  6ED9               	movwf	fsr2l,c
  2050  0000AE  6ADA               	clrf	fsr2h,c
  2051  0000B0  0E00               	movlw	high _mensaje3
  2052  0000B2  22DA               	addwfc	fsr2h,f,c
  2053  0000B4  50DF               	movf	indf2,w,c
  2054  0000B6  6EAD               	movwf	173,c	;volatile
  2055  0000B8                     i1l215:
  2056  0000B8  A2AC               	btfss	172,1,c	;volatile
  2057  0000BA  EF61  F000         	goto	i1u48_21
  2058  0000BE  EF63  F000         	goto	i1u48_20
  2059  0000C2                     i1u48_21:
  2060  0000C2  EF5C  F000         	goto	i1l215
  2061  0000C6                     i1u48_20:
  2062  0000C6                     
  2063                           ;maincode5.c: 147:             }
  2064  0000C6  2A46               	incf	INT2_ISR@y^0,f,c
  2065  0000C8  0E19               	movlw	25
  2066  0000CA  6446               	cpfsgt	INT2_ISR@y^0,c
  2067  0000CC  EF6A  F000         	goto	i1u49_21
  2068  0000D0  EF6C  F000         	goto	i1u49_20
  2069  0000D4                     i1u49_21:
  2070  0000D4  EF54  F000         	goto	i1l1492
  2071  0000D8                     i1u49_20:
  2072  0000D8  EFA7  F000         	goto	i1l1514
  2073  0000DC                     i1l1498:
  2074                           
  2075                           ;maincode5.c: 150:             for(y=0;y<24;y++){
  2076  0000DC  0E00               	movlw	0
  2077  0000DE  6E46               	movwf	INT2_ISR@y^0,c
  2078  0000E0                     i1l1504:
  2079                           
  2080                           ;maincode5.c: 151:                 TXREG = mensaje4[y];
  2081  0000E0  0E01               	movlw	low _mensaje4
  2082  0000E2  2446               	addwf	INT2_ISR@y^0,w,c
  2083  0000E4  6ED9               	movwf	fsr2l,c
  2084  0000E6  6ADA               	clrf	fsr2h,c
  2085  0000E8  0E00               	movlw	high _mensaje4
  2086  0000EA  22DA               	addwfc	fsr2h,f,c
  2087  0000EC  50DF               	movf	indf2,w,c
  2088  0000EE  6EAD               	movwf	173,c	;volatile
  2089  0000F0                     i1l221:
  2090  0000F0  A2AC               	btfss	172,1,c	;volatile
  2091  0000F2  EF7D  F000         	goto	i1u50_21
  2092  0000F6  EF7F  F000         	goto	i1u50_20
  2093  0000FA                     i1u50_21:
  2094  0000FA  EF78  F000         	goto	i1l221
  2095  0000FE                     i1u50_20:
  2096  0000FE                     
  2097                           ;maincode5.c: 153:             }
  2098  0000FE  2A46               	incf	INT2_ISR@y^0,f,c
  2099  000100  0E17               	movlw	23
  2100  000102  6446               	cpfsgt	INT2_ISR@y^0,c
  2101  000104  EF86  F000         	goto	i1u51_21
  2102  000108  EF88  F000         	goto	i1u51_20
  2103  00010C                     i1u51_21:
  2104  00010C  EF70  F000         	goto	i1l1504
  2105  000110                     i1u51_20:
  2106  000110  EFA7  F000         	goto	i1l1514
  2107  000114                     i1l1512:
  2108  000114  5053               	movf	_estado2^0,w,c
  2109  000116  6E3F               	movwf	??_INT2_ISR^0,c
  2110  000118  6A40               	clrf	(??_INT2_ISR+1)^0,c
  2111                           
  2112                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2113                           ; Switch size 1, requested type "simple"
  2114                           ; Number of cases is 1, Range of values is 0 to 0
  2115                           ; switch strategies available:
  2116                           ; Name         Instructions Cycles
  2117                           ; simple_byte            4     3 (average)
  2118                           ;	Chosen strategy is simple_byte
  2119  00011A  5040               	movf	(??_INT2_ISR+1)^0,w,c
  2120  00011C  0A00               	xorlw	0	; case 0
  2121  00011E  B4D8               	btfsc	status,2,c
  2122  000120  EF94  F000         	goto	i1l1536
  2123  000124  EFA7  F000         	goto	i1l1514
  2124  000128                     i1l1536:
  2125                           
  2126                           ; Switch size 1, requested type "simple"
  2127                           ; Number of cases is 4, Range of values is 0 to 3
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte           13     7 (average)
  2131                           ;	Chosen strategy is simple_byte
  2132  000128  503F               	movf	??_INT2_ISR^0,w,c
  2133  00012A  0A00               	xorlw	0	; case 0
  2134  00012C  B4D8               	btfsc	status,2,c
  2135  00012E  EF1A  F000         	goto	i1l1462
  2136  000132  0A01               	xorlw	1	; case 1
  2137  000134  B4D8               	btfsc	status,2,c
  2138  000136  EF36  F000         	goto	i1l1474
  2139  00013A  0A03               	xorlw	3	; case 2
  2140  00013C  B4D8               	btfsc	status,2,c
  2141  00013E  EF52  F000         	goto	i1l1486
  2142  000142  0A01               	xorlw	1	; case 3
  2143  000144  B4D8               	btfsc	status,2,c
  2144  000146  EF6E  F000         	goto	i1l1498
  2145  00014A  EFA7  F000         	goto	i1l1514
  2146  00014E                     i1l1514:
  2147                           
  2148                           ;maincode5.c: 156:     salto_del_tigre();
  2149  00014E  ECAE  F006         	call	_salto_del_tigre	;wreg free
  2150  000152                     
  2151                           ;maincode5.c: 157:     if(estado2 == 3){
  2152  000152  0E03               	movlw	3
  2153  000154  1853               	xorwf	_estado2^0,w,c
  2154  000156  A4D8               	btfss	status,2,c
  2155  000158  EFB0  F000         	goto	i1u52_21
  2156  00015C  EFB2  F000         	goto	i1u52_20
  2157  000160                     i1u52_21:
  2158  000160  EFB6  F000         	goto	i1l1520
  2159  000164                     i1u52_20:
  2160  000164                     
  2161                           ;maincode5.c: 158:         estado2 = 0;
  2162  000164  0E00               	movlw	0
  2163  000166  6E53               	movwf	_estado2^0,c
  2164                           
  2165                           ;maincode5.c: 159:     }
  2166  000168  EFB7  F000         	goto	i1l226
  2167  00016C                     i1l1520:
  2168                           
  2169                           ;maincode5.c: 161:         estado2++;
  2170  00016C  2A53               	incf	_estado2^0,f,c
  2171  00016E                     i1l226:
  2172  00016E  C045  FFDA         	movff	??_INT2_ISR+6,fsr2h
  2173  000172  C044  FFD9         	movff	??_INT2_ISR+5,fsr2l
  2174  000176  C043  FFE0         	movff	??_INT2_ISR+4,bsr
  2175  00017A  C042  FFE8         	movff	??_INT2_ISR+3,wreg
  2176  00017E  C041  FFD8         	movff	??_INT2_ISR+2,status
  2177  000182  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2178  000184  0010               	retfie	
  2179  000186                     __end_of_INT2_ISR:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _salto_del_tigre *****************
  2183 ;; Defined at:
  2184 ;;		line 70 in file "maincode5.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_INT2_ISR
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text16
  2213  000D5C                     __ptext16:
  2214                           	callstack 0
  2215  000D5C                     _salto_del_tigre:
  2216                           	callstack 24
  2217  000D5C                     
  2218                           ;maincode5.c: 71:     TXREG = 0x0A;
  2219  000D5C  0E0A               	movlw	10
  2220  000D5E  6EAD               	movwf	173,c	;volatile
  2221  000D60                     i1l158:
  2222  000D60  A2AC               	btfss	172,1,c	;volatile
  2223  000D62  EFB5  F006         	goto	i1u38_21
  2224  000D66  EFB7  F006         	goto	i1u38_20
  2225  000D6A                     i1u38_21:
  2226  000D6A  EFB0  F006         	goto	i1l158
  2227  000D6E                     i1u38_20:
  2228  000D6E                     
  2229                           ;maincode5.c: 73:     TXREG = 0x0D;
  2230  000D6E  0E0D               	movlw	13
  2231  000D70  6EAD               	movwf	173,c	;volatile
  2232  000D72                     i1l161:
  2233  000D72  A2AC               	btfss	172,1,c	;volatile
  2234  000D74  EFBE  F006         	goto	i1u39_21
  2235  000D78  EFC0  F006         	goto	i1u39_20
  2236  000D7C                     i1u39_21:
  2237  000D7C  EFB9  F006         	goto	i1l161
  2238  000D80                     i1u39_20:
  2239  000D80  0012               	return		;funcret
  2240  000D82                     __end_of_salto_del_tigre:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _INT0_ISR *****************
  2244 ;; Defined at:
  2245 ;;		line 117 in file "maincode5.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		Interrupt level 2
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	intcode
  2273  000008                     __pintcode:
  2274                           	callstack 0
  2275  000008                     _INT0_ISR:
  2276                           	callstack 24
  2277                           
  2278                           ;incstack = 0
  2279  000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2280  00000A  EDC1  F006         	call	int_func,f	;refresh shadow registers
  2281                           
  2282                           	psect	intcode_body
  2283  000D82                     __pintcode_body:
  2284                           	callstack 24
  2285  000D82                     int_func:
  2286                           	callstack 24
  2287  000D82  0006               	pop		; remove dummy address from shadow register refresh
  2288  000D84                     
  2289                           ;maincode5.c: 118:     INTCONbits.INT0IF = 0;
  2290  000D84  92F2               	bcf	242,1,c	;volatile
  2291  000D86                     
  2292                           ;maincode5.c: 119:     if(estado1 == 3){
  2293  000D86  0E03               	movlw	3
  2294  000D88  1854               	xorwf	_estado1^0,w,c
  2295  000D8A  A4D8               	btfss	status,2,c
  2296  000D8C  EFCA  F006         	goto	i2u21_41
  2297  000D90  EFCC  F006         	goto	i2u21_40
  2298  000D94                     i2u21_41:
  2299  000D94  EFD0  F006         	goto	i2l1230
  2300  000D98                     i2u21_40:
  2301  000D98                     
  2302                           ;maincode5.c: 120:         estado1 = 0;
  2303  000D98  0E00               	movlw	0
  2304  000D9A  6E54               	movwf	_estado1^0,c
  2305                           
  2306                           ;maincode5.c: 121:     }
  2307  000D9C  EFD1  F006         	goto	i2l193
  2308  000DA0                     i2l1230:
  2309                           
  2310                           ;maincode5.c: 123:         estado1++;
  2311  000DA0  2A54               	incf	_estado1^0,f,c
  2312  000DA2                     i2l193:
  2313  000DA2  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2314  000DA4  0011               	retfie		f
  2315  000DA6                     __end_of_INT0_ISR:
  2316                           	callstack 0
  2317                           
  2318                           	psect	rparam
  2319  0000                     
  2320                           	psect	temp
  2321  000055                     btemp:
  2322                           	callstack 0
  2323  000055                     	ds	1
  2324  0000                     int$flags	set	btemp
  2325  0000                     wtemp8	set	btemp+1
  2326  0000                     ttemp5	set	btemp+1
  2327  0000                     ttemp6	set	btemp+4
  2328  0000                     ttemp7	set	btemp+8
  2329                           
  2330                           	psect	idloc
  2331                           
  2332                           ;Config register IDLOC0 @ 0x200000
  2333                           ;	unspecified, using default values
  2334  200000                     	org	2097152
  2335  200000  FF                 	db	255
  2336                           
  2337                           ;Config register IDLOC1 @ 0x200001
  2338                           ;	unspecified, using default values
  2339  200001                     	org	2097153
  2340  200001  FF                 	db	255
  2341                           
  2342                           ;Config register IDLOC2 @ 0x200002
  2343                           ;	unspecified, using default values
  2344  200002                     	org	2097154
  2345  200002  FF                 	db	255
  2346                           
  2347                           ;Config register IDLOC3 @ 0x200003
  2348                           ;	unspecified, using default values
  2349  200003                     	org	2097155
  2350  200003  FF                 	db	255
  2351                           
  2352                           ;Config register IDLOC4 @ 0x200004
  2353                           ;	unspecified, using default values
  2354  200004                     	org	2097156
  2355  200004  FF                 	db	255
  2356                           
  2357                           ;Config register IDLOC5 @ 0x200005
  2358                           ;	unspecified, using default values
  2359  200005                     	org	2097157
  2360  200005  FF                 	db	255
  2361                           
  2362                           ;Config register IDLOC6 @ 0x200006
  2363                           ;	unspecified, using default values
  2364  200006                     	org	2097158
  2365  200006  FF                 	db	255
  2366                           
  2367                           ;Config register IDLOC7 @ 0x200007
  2368                           ;	unspecified, using default values
  2369  200007                     	org	2097159
  2370  200007  FF                 	db	255
  2371                           
  2372                           	psect	config
  2373                           
  2374                           ;Config register CONFIG1L @ 0x300000
  2375                           ;	PLL Prescaler Selection bits
  2376                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2377                           ;	System Clock Postscaler Selection bits
  2378                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2379                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2380                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2381  300000                     	org	3145728
  2382  300000  00                 	db	0
  2383                           
  2384                           ;Config register CONFIG1H @ 0x300001
  2385                           ;	Oscillator Selection bits
  2386                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2387                           ;	Fail-Safe Clock Monitor Enable bit
  2388                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2389                           ;	Internal/External Oscillator Switchover bit
  2390                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2391  300001                     	org	3145729
  2392  300001  08                 	db	8
  2393                           
  2394                           ;Config register CONFIG2L @ 0x300002
  2395                           ;	Power-up Timer Enable bit
  2396                           ;	PWRT = ON, PWRT enabled
  2397                           ;	Brown-out Reset Enable bits
  2398                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2399                           ;	Brown-out Reset Voltage bits
  2400                           ;	BORV = 3, Minimum setting 2.05V
  2401                           ;	USB Voltage Regulator Enable bit
  2402                           ;	VREGEN = OFF, USB voltage regulator disabled
  2403  300002                     	org	3145730
  2404  300002  18                 	db	24
  2405                           
  2406                           ;Config register CONFIG2H @ 0x300003
  2407                           ;	Watchdog Timer Enable bit
  2408                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2409                           ;	Watchdog Timer Postscale Select bits
  2410                           ;	WDTPS = 32768, 1:32768
  2411  300003                     	org	3145731
  2412  300003  1E                 	db	30
  2413                           
  2414                           ; Padding undefined space
  2415  300004                     	org	3145732
  2416  300004  FF                 	db	255
  2417                           
  2418                           ;Config register CONFIG3H @ 0x300005
  2419                           ;	CCP2 MUX bit
  2420                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2421                           ;	PORTB A/D Enable bit
  2422                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2423                           ;	Low-Power Timer 1 Oscillator Enable bit
  2424                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2425                           ;	MCLR Pin Enable bit
  2426                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2427  300005                     	org	3145733
  2428  300005  81                 	db	129
  2429                           
  2430                           ;Config register CONFIG4L @ 0x300006
  2431                           ;	Stack Full/Underflow Reset Enable bit
  2432                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2433                           ;	Single-Supply ICSP Enable bit
  2434                           ;	LVP = OFF, Single-Supply ICSP disabled
  2435                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2436                           ;	ICPRT = OFF, ICPORT disabled
  2437                           ;	Extended Instruction Set Enable bit
  2438                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2439                           ;	Background Debugger Enable bit
  2440                           ;	DEBUG = 0x1, unprogrammed default
  2441  300006                     	org	3145734
  2442  300006  81                 	db	129
  2443                           
  2444                           ; Padding undefined space
  2445  300007                     	org	3145735
  2446  300007  FF                 	db	255
  2447                           
  2448                           ;Config register CONFIG5L @ 0x300008
  2449                           ;	Code Protection bit
  2450                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2451                           ;	Code Protection bit
  2452                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2453                           ;	Code Protection bit
  2454                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2455                           ;	Code Protection bit
  2456                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2457  300008                     	org	3145736
  2458  300008  0F                 	db	15
  2459                           
  2460                           ;Config register CONFIG5H @ 0x300009
  2461                           ;	Boot Block Code Protection bit
  2462                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2463                           ;	Data EEPROM Code Protection bit
  2464                           ;	CPD = OFF, Data EEPROM is not code-protected
  2465  300009                     	org	3145737
  2466  300009  C0                 	db	192
  2467                           
  2468                           ;Config register CONFIG6L @ 0x30000A
  2469                           ;	Write Protection bit
  2470                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2471                           ;	Write Protection bit
  2472                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2473                           ;	Write Protection bit
  2474                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2475                           ;	Write Protection bit
  2476                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2477  30000A                     	org	3145738
  2478  30000A  0F                 	db	15
  2479                           
  2480                           ;Config register CONFIG6H @ 0x30000B
  2481                           ;	Configuration Register Write Protection bit
  2482                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2483                           ;	Boot Block Write Protection bit
  2484                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2485                           ;	Data EEPROM Write Protection bit
  2486                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2487  30000B                     	org	3145739
  2488  30000B  E0                 	db	224
  2489                           
  2490                           ;Config register CONFIG7L @ 0x30000C
  2491                           ;	Table Read Protection bit
  2492                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2493                           ;	Table Read Protection bit
  2494                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2495                           ;	Table Read Protection bit
  2496                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2497                           ;	Table Read Protection bit
  2498                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2499  30000C                     	org	3145740
  2500  30000C  0F                 	db	15
  2501                           
  2502                           ;Config register CONFIG7H @ 0x30000D
  2503                           ;	Boot Block Table Read Protection bit
  2504                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2505  30000D                     	org	3145741
  2506  30000D  40                 	db	64
  2507                           tosu	equ	0xFFF
  2508                           tosh	equ	0xFFE
  2509                           tosl	equ	0xFFD
  2510                           stkptr	equ	0xFFC
  2511                           pclatu	equ	0xFFB
  2512                           pclath	equ	0xFFA
  2513                           pcl	equ	0xFF9
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           indf0	equ	0xFEF
  2521                           postinc0	equ	0xFEE
  2522                           postdec0	equ	0xFED
  2523                           preinc0	equ	0xFEC
  2524                           plusw0	equ	0xFEB
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           indf1	equ	0xFE7
  2529                           postinc1	equ	0xFE6
  2530                           postdec1	equ	0xFE5
  2531                           preinc1	equ	0xFE4
  2532                           plusw1	equ	0xFE3
  2533                           fsr1h	equ	0xFE2
  2534                           fsr1l	equ	0xFE1
  2535                           bsr	equ	0xFE0
  2536                           indf2	equ	0xFDF
  2537                           postinc2	equ	0xFDE
  2538                           postdec2	equ	0xFDD
  2539                           preinc2	equ	0xFDC
  2540                           plusw2	equ	0xFDB
  2541                           fsr2h	equ	0xFDA
  2542                           fsr2l	equ	0xFD9
  2543                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    0
    Data        116
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      84
    BANK0           160      0      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> foco_on(COMRAM[8]), foco_off(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _vis_focos->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3323
                                             17 COMRAM     3     3      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _init_LCD
                          _vis_focos
 ---------------------------------------------------------------------------------
 (1) _vis_focos                                            0     0      0     995
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                             11 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     515
                                             11 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1181
                                             15 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             11 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     656
                                             11 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              9 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             11 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              9 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             8     8      0     272
                                              0 COMRAM     8     8      0
                    _salto_del_tigre
 ---------------------------------------------------------------------------------
 (6) _salto_del_tigre                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _vis_focos
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 _INT2_ISR (ROOT)
   _salto_del_tigre

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      36       5       33.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      54       1       89.4%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhllll     14      0       0      26        0.0%
BITBIGSFRhhllh      11      0       0      24        0.0%
BITBIGSFRhhlhl       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          7      0       0      28        0.0%
BITBIGSFRhl          6      0       0      27        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRhhlllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8A      30        0.0%
DATA                 0      0      8A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 09 21:14:17 2022

                     l24 0C62                       l42 0D30                       l51 0CCC  
                     l60 0DC0                       l37 0DC8                       l54 0DD0  
                     l63 0D00                       l48 0BEC                       l57 0AD8  
                     l74 0C28                       l67 0A3E                       l69 0A78  
                     u10 0A78                       u11 0A74                       u40 0D14  
                     u41 0D10                       u50 0D2A                       u51 0D26  
                     bsr 000FE0            ENVIA_CHAR@aux 0049                      l143 0D5A  
                    l146 0B70                      l155 0A06                      l910 0A12  
                    l902 0A08                      l920 0A2A                      l912 0A1A  
                    l904 0A0C                      l930 0A4C                      l922 0A32  
                    l914 0A1E                      l906 0A0E                      l940 0DA8  
                    l932 0A56                      l924 0A34                      l916 0A20  
                    l908 0A10                      l942 0DB4                      l934 0A60  
                    l926 0A40                      l918 0A28                      l950 0CD2  
                    l944 0DB6                      l928 0A48                      l960 0CE6  
                    l952 0CD6                      l946 0DBE                      l938 0A66  
                    l962 0CE8                      l954 0CDA                      l970 0C9C  
                    l964 0CEE                      l956 0CE2                      l948 0CD0  
                    l980 0CB0                      l972 0C9E                      l966 0CF4  
                    l958 0CE4                      l990 0CC6                      l982 0CB2  
                    l974 0CA2                      l968 0CFA                      l984 0CB4  
                    l976 0CA6                      l986 0CBA                      l978 0CAE  
                    l988 0CC0                      u310 0C3C                      u311 0C38  
                    u320 0C5A                      u400 0882                      u321 0C56  
                    u401 087E                      u330 0BEC                      u410 08C8  
                    u331 0BE8                      u411 08C4                      u340 0C22  
                    u420 090E                      u341 0C1E                      u421 090A  
                    u350 09BA                      u430 0954                      u351 09B6  
                    u431 0950                      u360 09D8                      u361 09D4  
                    u370 09F6                      u371 09F2                      u607 0AA8  
                    u617 0CA8                      u537 0862                      u627 0CDC  
                    u547 08A8                      u637 0A14                      u557 08EE  
                    u647 0A22                      u567 0934                      u657 0A2C  
                    u577 0B3A                      u667 0A42                      u587 0A8A  
                    u677 0A50                      u597 0A98                      u687 0A5A  
                    u697 0DB8              LEER_LCD@aux 0047                      wreg 000FE8  
           ?_CURSOR_HOME 003F           ??_ENVIA_NIBBLE 0047           ENVIA_CHAR@dato 0048  
                   l1000 0DC2                     l1002 0D04                     l1004 0D14  
                   l1020 0A7A                     l1006 0D1A                     l1030 0AAE  
                   l1022 0A7E                     l1008 0D2A                     l1040 0ACC  
                   l1032 0AB4                     l1024 0A84                     l1018 0DCA  
                   l1042 0AD2                     l1034 0ABA                     l1026 0A92  
                   l1060 0D32                     l1036 0AC0                     l1028 0AA6  
                   l1070 0D46                     l1062 0D3E                     l1038 0AC6  
                   l1310 0C48                     l1080 0D54                     l1072 0D48  
                   l1064 0D40                     l1320 0BDA                     l1312 0C5A  
                   l1400 0870                     l1082 0D56                     l1074 0D4A  
                   l1066 0D42                     l1330 0BFE                     l1322 0BEE  
                   l1314 0BB0                     l1306 0C2C                     l1410 088A  
                   l1402 0872                     l1084 0D58                     l1076 0D4C  
                   l1068 0D44                     l1332 0C10                     l1324 0BFA  
                   l1340 0B30                     l1316 0BBC                     l1308 0C3C  
                   l1420 08CC                     l1412 089A                     l1404 0886  
                   l1078 0D4E                     l1334 0C12                     l1350 0B50  
                   l1342 0B34                     l1318 0BD8                     l1430 08E4  
                   l1414 089E                     l1336 0C22                     l1352 0B60  
                   l1344 0B42                     l1360 09BA                     l1432 08FC  
                   l1416 08B6                     l1346 0B46                     l1338 0B2C  
                   l1370 09E8                     l1362 09C4                     l1354 0992  
                   l1450 0944                     l1442 0916                     l1434 08FE  
                   l1426 08D0                     l1418 08B8                     l1348 0B4A  
                   l1372 09F6                     l1364 09CA                     l1356 099C  
                   l1444 0926                     l1436 0912                     l1428 08E0  
                   l1380 081A                     l1374 0A00                     l1366 09D8  
                   l1358 09AC                     l1534 0968                     l1446 092A  
                   l1454 0954                     l1382 081E                     l1368 09E2  
                   l1448 0942                     l1384 0822                     l1394 0844  
                   l1386 082C                     l1396 0854                     l1388 0840  
                   l1398 0858                     STR_1 0812                     STR_2 0801  
                   _LATD 000F8C                     _LATE 000F8D                     _main 081A  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0055                     prodl 000FF3  
                   start 0186            ?_CURSOR_ONOFF 003F             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0048         __end_of_LEER_LCD 0A7A         __end_of_INT0_ISR 0DA6  
       __end_of_INT2_ISR 0186           _GENERACARACTER 0BEE                    ?_main 003F  
                  i1l202 0048                    i1l221 00F0                    i1l215 00B8  
                  i1l161 0D72                    i1l209 0080                    i1l226 016E  
                  i1l164 0D80                    i1l158 0D60                    i2l193 0DA2  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD              ?_POS_CURSOR 004A  
                  main@x 0052                    tablat 000FF5                    ttemp5 0056  
                  ttemp6 0059                    ttemp7 005D                    status 000FD8  
                  wtemp8 0056           ??_CURSOR_ONOFF 004A          __initialization 0ADA  
           __end_of_main 0992   __end_of_GENERACARACTER 0C2A          _ESCRIBE_MENSAJE 0BB0  
                 ??_main 0050            __activetblptr 000002                   _ADCON1 000FC1  
                 i1l1520 016C                   i1l1504 00E0                   i1l1512 0114  
                 i1l1506 00FE                   i1l1514 014E                   i1l1516 0152  
                 i1l1508 0100                   i1l1460 002E                   i1l1518 0164  
                 i1l1470 0056                   i1l1462 0034                   i1l1376 0D5C  
                 i1l1536 0128                   i1l1480 0070                   i1l1472 0058  
                 i1l1378 0D6E                   i1l1482 008E                   i1l1474 006C  
                 i1l1492 00A8                   i1l1484 0090                   i1l1468 0038  
                 i1l1494 00C6                   i1l1486 00A4                   i1l1496 00C8  
                 i1l1498 00DC                   i2l1230 0DA0                   i2l1224 0D84  
                 i2l1226 0D86                   i2l1228 0D98                   _OSCCON 000FD3  
   __end_of_ENVIA_NIBBLE 0DC2         __end_of_init_LCD 0B72          ?_GENERACARACTER 004A  
                 _salida 0025                   isa$std 000001             __pdataCOMRAM 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ??_BORRAR_LCD 004A                ?_LEER_LCD 003F  
             __accesstop 0060  __end_of__initialization 0B1E                ?_INT0_ISR 003F  
              ?_INT2_ISR 003F             ??_LCD_CONFIG 004A            ___rparam_used 000001  
           ??_ENVIA_CHAR 0048  __end_of_ESCRIBE_MENSAJE 0BEE           __pcstackCOMRAM 003F  
              INT2_ISR@y 0046             __pidataBANK0 0C64       __end_of_BORRAR_LCD 0DD2  
      ??_salto_del_tigre 003F         ENVIA_LCD_CMD@aux 0049     __end_of_CURSOR_ONOFF 0D32  
     __end_of_LCD_CONFIG 0ADA       __end_of_ENVIA_CHAR 0CCE               ??_LEER_LCD 0047  
       ENVIA_NIBBLE@dato 0047               ??_INT0_ISR 003F               ??_INT2_ISR 003F  
                i1u50_20 00FE                  i1u50_21 00FA                  i1u51_20 0110  
                i1u51_21 010C                  i1u52_20 0164                  i1u44_20 0056  
                i1u52_21 0160                  i1u44_21 0052                  i1u45_20 0068  
                i1u45_21 0064                  i2u21_40 0D98                  i2u21_41 0D94  
                i1u38_20 0D6E                  i1u46_20 008E                  i1u38_21 0D6A  
                i1u46_21 008A                  i1u39_20 0D80                  i1u47_20 00A0  
                i1u39_21 0D7C                  i1u47_21 009C                  i1u48_20 00C6  
                i1u48_21 00C2                  i1u49_20 00D8                  i1u49_21 00D4  
           ??_POS_CURSOR 004B                ?_init_LCD 003F                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 004A        __end_of_configuro 0D5C  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0D02                  __pcinit 0ADA  
     __end_of_POS_CURSOR 0C64                  __ramtop 0800                  __ptext0 081A  
                __ptext1 0992                  __ptext2 0C2A                  __ptext3 0BB0  
                __ptext4 0B2C                  __ptext5 0A7A                  __ptext6 0BEE  
                __ptext7 0C9A                  __ptext8 0D02                  __ptext9 0DC2  
        GENERACARACTER@i 004D                  _foco_on 002F                  _estado1 0054  
                _estado2 0053           __pintcode_body 0D82             _ENVIA_NIBBLE 0DA6  
   end_of_initialization 0B1E               ??_init_LCD 004E            __Lmediumconst 0000  
                int_func 0D82         ??_GENERACARACTER 004D                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE        __end_of_vis_focos 0A08  
   GENERACARACTER@vector 004A                _PORTEbits 000F84                _TRISCbits 000F94  
              _TXSTAbits 000FAC          _salto_del_tigre 0D5C             _CURSOR_ONOFF 0D02  
     CURSOR_ONOFF@estado 004A            __pidataCOMRAM 0B72            ??_CURSOR_HOME 004A  
    start_initialization 0ADA        ENVIA_LCD_CMD@dato 0048              __pdataBANK0 0060  
            __pbssCOMRAM 0053  __end_of_salto_del_tigre 0D82      __end_of_CURSOR_HOME 0DCA  
              __pintcode 0008              __pintcodelo 0018        GENERACARACTER@pos 004C  
              _configuro 0D32              __smallconst 0800                 _LEER_LCD 0A08  
               _INT0_ISR 0008                 _INT2_ISR 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0         ESCRIBE_MENSAJE@i 004F           POS_CURSOR@fila 004B  
             ?_configuro 003F                _vis_focos 0992              _CURSOR_HOME 0DC2  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                copy_data0 0AEE  
              copy_data1 0B0E         ?_salto_del_tigre 003F                 __Hrparam 0000  
               __Lrparam 0000               ?_vis_focos 003F                 __ptext10 0DCA  
               __ptext11 0CCE                 __ptext12 0A08                 __ptext13 0DA6  
               __ptext14 0D32                 __ptext16 0D5C               _BORRAR_LCD 0DCA  
               _foco_off 0037                 _init_LCD 0B2C                 _mensaje1 001A  
               _mensaje2 007B                 _mensaje3 0060                 _mensaje4 0001  
             _LCD_CONFIG 0A7A               _ENVIA_CHAR 0C9A                 isa$xinst 000000  
               int$flags 0055            _ENVIA_LCD_CMD 0CCE              ??_configuro 0047  
             _INTCONbits 000FF2        ??_ESCRIBE_MENSAJE 004D                 intlevel1 0000  
               intlevel2 0000    ESCRIBE_MENSAJE@cadena 004A           ?_ENVIA_LCD_CMD 003F  
            ??_vis_focos 0050              ?_BORRAR_LCD 003F            ?_ENVIA_NIBBLE 003F  
             _POS_CURSOR 0C2A              ?_LCD_CONFIG 003F       ESCRIBE_MENSAJE@tam 004C  
            ?_ENVIA_CHAR 003F        POS_CURSOR@columna 004A  
