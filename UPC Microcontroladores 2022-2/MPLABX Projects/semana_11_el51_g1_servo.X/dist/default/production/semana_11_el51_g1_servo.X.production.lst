

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 26 17:53:28 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _LATD	set	3980
    69  0000                     _PORTD	set	3971
    70  0000                     _LATDbits	set	3980
    71  0000                     _LATEbits	set	3981
    72  0000                     _TRISD	set	3989
    73  0000                     _ADCON1	set	4033
    74  0000                     _TRISEbits	set	3990
    75  0000                     _OSCCON	set	4051
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _INTCONbits	set	4082
    78                           
    79                           	psect	smallconst
    80  000800                     __psmallconst:
    81                           	callstack 0
    82  000800  00                 	db	0
    83  000801                     STR_1:
    84  000801  53                 	db	83	;'S'
    85  000802  65                 	db	101	;'e'
    86  000803  6D                 	db	109	;'m'
    87  000804  61                 	db	97	;'a'
    88  000805  6E                 	db	110	;'n'
    89  000806  61                 	db	97	;'a'
    90  000807  20                 	db	32
    91  000808  31                 	db	49	;'1'
    92  000809  31                 	db	49	;'1'
    93  00080A  20                 	db	32
    94  00080B  53                 	db	83	;'S'
    95  00080C  65                 	db	101	;'e'
    96  00080D  72                 	db	114	;'r'
    97  00080E  76                 	db	118	;'v'
    98  00080F  6F                 	db	111	;'o'
    99  000810  73                 	db	115	;'s'
   100  000811  00                 	db	0
   101  000812                     STR_2:
   102  000812  41                 	db	65	;'A'
   103  000813  6E                 	db	110	;'n'
   104  000814  67                 	db	103	;'g'
   105  000815  75                 	db	117	;'u'
   106  000816  6C                 	db	108	;'l'
   107  000817  6F                 	db	111	;'o'
   108  000818  3A                 	db	58	;':'
   109  000819  20                 	db	32
   110  00081A  20                 	db	32
   111  00081B  20                 	db	32
   112  00081C  30                 	db	48	;'0'
   113  00081D  00                 	db	0
   114  00081E                     STR_4:
   115  00081E  41                 	db	65	;'A'
   116  00081F  6E                 	db	110	;'n'
   117  000820  67                 	db	103	;'g'
   118  000821  75                 	db	117	;'u'
   119  000822  6C                 	db	108	;'l'
   120  000823  6F                 	db	111	;'o'
   121  000824  3A                 	db	58	;':'
   122  000825  20                 	db	32
   123  000826  31                 	db	49	;'1'
   124  000827  38                 	db	56	;'8'
   125  000828  30                 	db	48	;'0'
   126  000829  00                 	db	0
   127  00082A                     STR_3:
   128  00082A  41                 	db	65	;'A'
   129  00082B  6E                 	db	110	;'n'
   130  00082C  67                 	db	103	;'g'
   131  00082D  75                 	db	117	;'u'
   132  00082E  6C                 	db	108	;'l'
   133  00082F  6F                 	db	111	;'o'
   134  000830  3A                 	db	58	;':'
   135  000831  20                 	db	32
   136  000832  20                 	db	32
   137  000833  39                 	db	57	;'9'
   138  000834  30                 	db	48	;'0'
   139  000835  00                 	db	0
   140  000836  00                 	db	0	; dummy byte at the end
   141  0000                     
   142                           ; #config settings
   143                           
   144                           	psect	cinit
   145  000BFE                     __pcinit:
   146                           	callstack 0
   147  000BFE                     start_initialization:
   148                           	callstack 0
   149  000BFE                     __initialization:
   150                           	callstack 0
   151                           
   152                           ; Clear objects allocated to COMRAM (1 bytes)
   153  000BFE  6A0C               	clrf	__pbssCOMRAM& (0+255),c
   154  000C00                     end_of_initialization:
   155                           	callstack 0
   156  000C00                     __end_of__initialization:
   157                           	callstack 0
   158  000C00  900D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   159  000C02  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   160  000C04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   161  000C06  6EF8               	movwf	tblptru,c
   162  000C08  0100               	movlb	0
   163  000C0A  EF1C  F004         	goto	_main	;jump to C main() function
   164                           
   165                           	psect	bssCOMRAM
   166  00000C                     __pbssCOMRAM:
   167                           	callstack 0
   168  00000C                     _indicador:
   169                           	callstack 0
   170  00000C                     	ds	1
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	callstack 0
   175  000001                     ??_servo_a_cero:
   176  000001                     ??_servo_a_cientoochenta:
   177  000001                     ??_servo_a_noventa:
   178  000001                     ENVIA_NIBBLE@dato:
   179                           	callstack 0
   180  000001                     LEER_LCD@aux:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x0
   184  000001                     	ds	1
   185  000002                     ENVIA_CHAR@dato:
   186                           	callstack 0
   187  000002                     ENVIA_LCD_CMD@dato:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x1
   191  000002                     	ds	1
   192  000003                     ENVIA_CHAR@aux:
   193                           	callstack 0
   194  000003                     ENVIA_LCD_CMD@aux:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x2
   198  000003                     	ds	1
   199  000004                     ??_LCD_CONFIG:
   200  000004                     POS_CURSOR@columna:
   201                           	callstack 0
   202  000004                     CURSOR_ONOFF@estado:
   203                           	callstack 0
   204  000004                     ESCRIBE_MENSAJE@cadena:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x3
   208  000004                     	ds	1
   209  000005                     ??_inicializacion_LCD:
   210  000005                     POS_CURSOR@fila:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x4
   214  000005                     	ds	1
   215  000006                     ESCRIBE_MENSAJE@tam:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x5
   219  000006                     	ds	1
   220  000007                     ??_ESCRIBE_MENSAJE:
   221                           
   222                           ; 1 bytes @ 0x6
   223  000007                     	ds	2
   224  000009                     ESCRIBE_MENSAJE@i:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x8
   228  000009                     	ds	1
   229  00000A                     ??_main:
   230                           
   231                           ; 1 bytes @ 0x9
   232  00000A                     	ds	2
   233                           
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   236 ;;
   237 ;; *************** function _main *****************
   238 ;; Defined at:
   239 ;;		line 49 in file "maincode3.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 0/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   253 ;;      Params:         0       0       0       0       0       0       0       0       0
   254 ;;      Locals:         0       0       0       0       0       0       0       0       0
   255 ;;      Temps:          2       0       0       0       0       0       0       0       0
   256 ;;      Totals:         2       0       0       0       0       0       0       0       0
   257 ;;Total ram usage:        2 bytes
   258 ;; Hardware stack levels required when called: 5
   259 ;; This function calls:
   260 ;;		_ENVIA_CHAR
   261 ;;		_ESCRIBE_MENSAJE
   262 ;;		_POS_CURSOR
   263 ;;		_configuro
   264 ;;		_inicializacion_LCD
   265 ;;		_servo_a_cero
   266 ;;		_servo_a_cientoochenta
   267 ;;		_servo_a_noventa
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274  000838                     __ptext0:
   275                           	callstack 0
   276  000838                     _main:
   277                           	callstack 26
   278  000838                     
   279                           ;maincode3.c: 50:     configuro();
   280  000838  ECF5  F005         	call	_configuro	;wreg free
   281  00083C                     
   282                           ;maincode3.c: 51:     inicializacion_LCD();
   283  00083C  EC8D  F005         	call	_inicializacion_LCD	;wreg free
   284  000840                     
   285                           ;maincode3.c: 52:     POS_CURSOR(1,0);
   286  000840  0E00               	movlw	0
   287  000842  6E04               	movwf	POS_CURSOR@columna^0,c
   288  000844  0E01               	movlw	1
   289  000846  EC24  F005         	call	_POS_CURSOR
   290  00084A                     
   291                           ;maincode3.c: 53:     ESCRIBE_MENSAJE("Semana 11 Servos", 16);
   292  00084A  0E01               	movlw	low STR_1
   293  00084C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   294  00084E  0E08               	movlw	high STR_1
   295  000850  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   296  000852  0E10               	movlw	16
   297  000854  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   298  000856  EC05  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   299  00085A  EF7D  F004         	goto	l1152
   300  00085E                     l1118:
   301                           
   302                           ;maincode3.c: 57:                 POS_CURSOR(2,0);
   303  00085E  0E00               	movlw	0
   304  000860  6E04               	movwf	POS_CURSOR@columna^0,c
   305  000862  0E02               	movlw	2
   306  000864  EC24  F005         	call	_POS_CURSOR
   307  000868                     
   308                           ;maincode3.c: 58:                 ESCRIBE_MENSAJE("Angulo:   0", 11);
   309  000868  0E12               	movlw	low STR_2
   310  00086A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   311  00086C  0E08               	movlw	high STR_2
   312  00086E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   313  000870  0E0B               	movlw	11
   314  000872  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   315  000874  EC05  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   316  000878                     
   317                           ;maincode3.c: 59:                 ENVIA_CHAR(0xDF);
   318  000878  0EDF               	movlw	223
   319  00087A  EC5B  F005         	call	_ENVIA_CHAR
   320  00087E                     
   321                           ;maincode3.c: 60:                 servo_a_cero();
   322  00087E  ECD8  F005         	call	_servo_a_cero	;wreg free
   323                           
   324                           ;maincode3.c: 61:                 break;
   325  000882  EF7D  F004         	goto	l1152
   326  000886                     l1126:
   327                           
   328                           ;maincode3.c: 63:                 POS_CURSOR(2,0);
   329  000886  0E00               	movlw	0
   330  000888  6E04               	movwf	POS_CURSOR@columna^0,c
   331  00088A  0E02               	movlw	2
   332  00088C  EC24  F005         	call	_POS_CURSOR
   333  000890                     
   334                           ;maincode3.c: 64:                 ESCRIBE_MENSAJE("Angulo:  90", 11);
   335  000890  0E2A               	movlw	low STR_3
   336  000892  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   337  000894  0E08               	movlw	high STR_3
   338  000896  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   339  000898  0E0B               	movlw	11
   340  00089A  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   341  00089C  EC05  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   342  0008A0                     
   343                           ;maincode3.c: 65:                 ENVIA_CHAR(0xDF);
   344  0008A0  0EDF               	movlw	223
   345  0008A2  EC5B  F005         	call	_ENVIA_CHAR
   346  0008A6                     l1132:
   347                           
   348                           ;maincode3.c: 66:                 servo_a_noventa();
   349  0008A6  ECB4  F005         	call	_servo_a_noventa	;wreg free
   350                           
   351                           ;maincode3.c: 67:                 break;
   352  0008AA  EF7D  F004         	goto	l1152
   353  0008AE                     l1134:
   354                           
   355                           ;maincode3.c: 69:                 POS_CURSOR(2,0);
   356  0008AE  0E00               	movlw	0
   357  0008B0  6E04               	movwf	POS_CURSOR@columna^0,c
   358  0008B2  0E02               	movlw	2
   359  0008B4  EC24  F005         	call	_POS_CURSOR
   360  0008B8                     
   361                           ;maincode3.c: 70:                 ESCRIBE_MENSAJE("Angulo: 180", 11);
   362  0008B8  0E1E               	movlw	low STR_4
   363  0008BA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   364  0008BC  0E08               	movlw	high STR_4
   365  0008BE  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   366  0008C0  0E0B               	movlw	11
   367  0008C2  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   368  0008C4  EC05  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   369  0008C8                     
   370                           ;maincode3.c: 71:                 ENVIA_CHAR(0xDF);
   371  0008C8  0EDF               	movlw	223
   372  0008CA  EC5B  F005         	call	_ENVIA_CHAR
   373  0008CE                     
   374                           ;maincode3.c: 72:                 servo_a_cientoochenta();
   375  0008CE  ECA1  F005         	call	_servo_a_cientoochenta	;wreg free
   376                           
   377                           ;maincode3.c: 73:                 break;
   378  0008D2  EF7D  F004         	goto	l1152
   379  0008D6                     l1142:
   380                           
   381                           ;maincode3.c: 75:                 POS_CURSOR(2,0);
   382  0008D6  0E00               	movlw	0
   383  0008D8  6E04               	movwf	POS_CURSOR@columna^0,c
   384  0008DA  0E02               	movlw	2
   385  0008DC  EC24  F005         	call	_POS_CURSOR
   386  0008E0                     
   387                           ;maincode3.c: 76:                 ESCRIBE_MENSAJE("Angulo:  90", 11);
   388  0008E0  0E2A               	movlw	low STR_3
   389  0008E2  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   390  0008E4  0E08               	movlw	high STR_3
   391  0008E6  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   392  0008E8  0E0B               	movlw	11
   393  0008EA  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   394  0008EC  EC05  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   395  0008F0                     
   396                           ;maincode3.c: 77:                 ENVIA_CHAR(0xDF);
   397  0008F0  0EDF               	movlw	223
   398  0008F2  EC5B  F005         	call	_ENVIA_CHAR
   399  0008F6  EF53  F004         	goto	l1132
   400  0008FA                     l1152:
   401  0008FA  500C               	movf	_indicador^0,w,c
   402  0008FC  6E0A               	movwf	??_main^0,c
   403  0008FE  6A0B               	clrf	(??_main+1)^0,c
   404                           
   405                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   406                           ; Switch size 1, requested type "simple"
   407                           ; Number of cases is 1, Range of values is 0 to 0
   408                           ; switch strategies available:
   409                           ; Name         Instructions Cycles
   410                           ; simple_byte            4     3 (average)
   411                           ;	Chosen strategy is simple_byte
   412  000900  500B               	movf	(??_main+1)^0,w,c
   413  000902  0A00               	xorlw	0	; case 0
   414  000904  B4D8               	btfsc	status,2,c
   415  000906  EF87  F004         	goto	l1162
   416  00090A  EF7D  F004         	goto	l1152
   417  00090E                     l1162:
   418                           
   419                           ; Switch size 1, requested type "simple"
   420                           ; Number of cases is 4, Range of values is 0 to 3
   421                           ; switch strategies available:
   422                           ; Name         Instructions Cycles
   423                           ; simple_byte           13     7 (average)
   424                           ;	Chosen strategy is simple_byte
   425  00090E  500A               	movf	??_main^0,w,c
   426  000910  0A00               	xorlw	0	; case 0
   427  000912  B4D8               	btfsc	status,2,c
   428  000914  EF2F  F004         	goto	l1118
   429  000918  0A01               	xorlw	1	; case 1
   430  00091A  B4D8               	btfsc	status,2,c
   431  00091C  EF43  F004         	goto	l1126
   432  000920  0A03               	xorlw	3	; case 2
   433  000922  B4D8               	btfsc	status,2,c
   434  000924  EF57  F004         	goto	l1134
   435  000928  0A01               	xorlw	1	; case 3
   436  00092A  B4D8               	btfsc	status,2,c
   437  00092C  EF6B  F004         	goto	l1142
   438  000930  EF7D  F004         	goto	l1152
   439  000934  EF07  F000         	goto	start
   440  000938                     __end_of_main:
   441                           	callstack 0
   442                           
   443 ;; *************** function _servo_a_noventa *****************
   444 ;; Defined at:
   445 ;;		line 41 in file "maincode3.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;		None
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   459 ;;      Params:         0       0       0       0       0       0       0       0       0
   460 ;;      Locals:         0       0       0       0       0       0       0       0       0
   461 ;;      Temps:          1       0       0       0       0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text1
   474  000B68                     __ptext1:
   475                           	callstack 0
   476  000B68                     _servo_a_noventa:
   477                           	callstack 29
   478  000B68                     
   479                           ;maincode3.c: 42:     LATEbits.LE0 = 1;
   480  000B68  808D               	bsf	141,0,c	;volatile
   481  000B6A                     
   482                           ;maincode3.c: 43:     _delay((unsigned long)((1500)*(8000000UL/4000000.0)));
   483  000B6A  0E04               	movlw	4
   484  000B6C  6E01               	movwf	??_servo_a_noventa^0,c
   485  000B6E  0EE4               	movlw	228
   486  000B70                     u167:
   487  000B70  2EE8               	decfsz	wreg,f,c
   488  000B72  D7FE               	bra	u167
   489  000B74  2E01               	decfsz	??_servo_a_noventa^0,f,c
   490  000B76  D7FC               	bra	u167
   491  000B78  D000               	nop2	
   492  000B7A                     
   493                           ;maincode3.c: 44:     LATEbits.LE0 = 0;
   494  000B7A  908D               	bcf	141,0,c	;volatile
   495                           
   496                           ;maincode3.c: 45:     _delay((unsigned long)((18500)*(8000000UL/4000000.0)));
   497  000B7C  0E31               	movlw	49
   498  000B7E  6E01               	movwf	??_servo_a_noventa^0,c
   499  000B80  0E0C               	movlw	12
   500  000B82                     u177:
   501  000B82  2EE8               	decfsz	wreg,f,c
   502  000B84  D7FE               	bra	u177
   503  000B86  2E01               	decfsz	??_servo_a_noventa^0,f,c
   504  000B88  D7FC               	bra	u177
   505  000B8A  0012               	return		;funcret
   506  000B8C                     __end_of_servo_a_noventa:
   507                           	callstack 0
   508                           
   509 ;; *************** function _servo_a_cientoochenta *****************
   510 ;; Defined at:
   511 ;;		line 34 in file "maincode3.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0
   527 ;;      Temps:          1       0       0       0       0       0       0       0       0
   528 ;;      Totals:         1       0       0       0       0       0       0       0       0
   529 ;;Total ram usage:        1 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text2
   540  000B42                     __ptext2:
   541                           	callstack 0
   542  000B42                     _servo_a_cientoochenta:
   543                           	callstack 29
   544  000B42                     
   545                           ;maincode3.c: 35:     LATEbits.LE0 = 1;
   546  000B42  808D               	bsf	141,0,c	;volatile
   547  000B44                     
   548                           ;maincode3.c: 36:     _delay((unsigned long)((2300)*(8000000UL/4000000.0)));
   549  000B44  0E06               	movlw	6
   550  000B46  6E01               	movwf	??_servo_a_cientoochenta^0,c
   551  000B48  0EF8               	movlw	248
   552  000B4A                     u187:
   553  000B4A  2EE8               	decfsz	wreg,f,c
   554  000B4C  D7FE               	bra	u187
   555  000B4E  2E01               	decfsz	??_servo_a_cientoochenta^0,f,c
   556  000B50  D7FC               	bra	u187
   557  000B52  D000               	nop2	
   558  000B54                     
   559                           ;maincode3.c: 37:     LATEbits.LE0 = 0;
   560  000B54  908D               	bcf	141,0,c	;volatile
   561                           
   562                           ;maincode3.c: 38:     _delay((unsigned long)((17700)*(8000000UL/4000000.0)));
   563  000B56  0E2E               	movlw	46
   564  000B58  6E01               	movwf	??_servo_a_cientoochenta^0,c
   565  000B5A  0EF8               	movlw	248
   566  000B5C                     u197:
   567  000B5C  2EE8               	decfsz	wreg,f,c
   568  000B5E  D7FE               	bra	u197
   569  000B60  2E01               	decfsz	??_servo_a_cientoochenta^0,f,c
   570  000B62  D7FC               	bra	u197
   571  000B64  D000               	nop2	
   572  000B66  0012               	return		;funcret
   573  000B68                     __end_of_servo_a_cientoochenta:
   574                           	callstack 0
   575                           
   576 ;; *************** function _servo_a_cero *****************
   577 ;; Defined at:
   578 ;;		line 27 in file "maincode3.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   592 ;;      Params:         0       0       0       0       0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0
   594 ;;      Temps:          1       0       0       0       0       0       0       0       0
   595 ;;      Totals:         1       0       0       0       0       0       0       0       0
   596 ;;Total ram usage:        1 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text3
   607  000BB0                     __ptext3:
   608                           	callstack 0
   609  000BB0                     _servo_a_cero:
   610                           	callstack 29
   611  000BB0                     
   612                           ;maincode3.c: 28:     LATEbits.LE0 = 1;
   613  000BB0  808D               	bsf	141,0,c	;volatile
   614  000BB2                     
   615                           ;maincode3.c: 29:     _delay((unsigned long)((700)*(8000000UL/4000000.0)));
   616  000BB2  0EC8               	movlw	200
   617  000BB4                     u207:
   618  000BB4  D000               	nop2	
   619  000BB6  D000               	nop2	
   620  000BB8  2EE8               	decfsz	wreg,f,c
   621  000BBA  D7FC               	bra	u207
   622  000BBC                     
   623                           ;maincode3.c: 30:     LATEbits.LE0 = 0;
   624  000BBC  908D               	bcf	141,0,c	;volatile
   625                           
   626                           ;maincode3.c: 31:     _delay((unsigned long)((19300)*(8000000UL/4000000.0)));
   627  000BBE  0E33               	movlw	51
   628  000BC0  6E01               	movwf	??_servo_a_cero^0,c
   629  000BC2  0E20               	movlw	32
   630  000BC4                     u217:
   631  000BC4  2EE8               	decfsz	wreg,f,c
   632  000BC6  D7FE               	bra	u217
   633  000BC8  2E01               	decfsz	??_servo_a_cero^0,f,c
   634  000BCA  D7FC               	bra	u217
   635  000BCC  0012               	return		;funcret
   636  000BCE                     __end_of_servo_a_cero:
   637                           	callstack 0
   638                           
   639 ;; *************** function _inicializacion_LCD *****************
   640 ;; Defined at:
   641 ;;		line 18 in file "maincode3.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         0       0       0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0       0       0
   657 ;;      Temps:          1       0       0       0       0       0       0       0       0
   658 ;;      Totals:         1       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        1 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 4
   662 ;; This function calls:
   663 ;;		_BORRAR_LCD
   664 ;;		_CURSOR_HOME
   665 ;;		_CURSOR_ONOFF
   666 ;;		_LCD_CONFIG
   667 ;; This function is called by:
   668 ;;		_main
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text4
   673  000B1A                     __ptext4:
   674                           	callstack 0
   675  000B1A                     _inicializacion_LCD:
   676                           	callstack 26
   677  000B1A                     
   678                           ;maincode3.c: 19:     TRISD = 0x00;
   679  000B1A  0E00               	movlw	0
   680  000B1C  6E95               	movwf	149,c	;volatile
   681  000B1E                     
   682                           ;maincode3.c: 20:     LCD_CONFIG();
   683  000B1E  ECD5  F004         	call	_LCD_CONFIG	;wreg free
   684  000B22                     
   685                           ;maincode3.c: 21:     _delay((unsigned long)((21)*(8000000UL/4000.0)));
   686  000B22  0E37               	movlw	55
   687  000B24  6E05               	movwf	??_inicializacion_LCD^0,c
   688  000B26  0E8A               	movlw	138
   689  000B28                     u227:
   690  000B28  2EE8               	decfsz	wreg,f,c
   691  000B2A  D7FE               	bra	u227
   692  000B2C  2E05               	decfsz	??_inicializacion_LCD^0,f,c
   693  000B2E  D7FC               	bra	u227
   694  000B30  D000               	nop2	
   695  000B32                     
   696                           ;maincode3.c: 22:     BORRAR_LCD();
   697  000B32  EC0B  F006         	call	_BORRAR_LCD	;wreg free
   698  000B36                     
   699                           ;maincode3.c: 23:     CURSOR_HOME();
   700  000B36  EC07  F006         	call	_CURSOR_HOME	;wreg free
   701  000B3A                     
   702                           ;maincode3.c: 24:     CURSOR_ONOFF(1);
   703  000B3A  0E01               	movlw	1
   704  000B3C  EC75  F005         	call	_CURSOR_ONOFF
   705  000B40  0012               	return		;funcret
   706  000B42                     __end_of_inicializacion_LCD:
   707                           	callstack 0
   708                           
   709 ;; *************** function _LCD_CONFIG *****************
   710 ;; Defined at:
   711 ;;		line 72 in file "LCD.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         0       0       0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0
   727 ;;      Temps:          1       0       0       0       0       0       0       0       0
   728 ;;      Totals:         1       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        1 bytes
   730 ;; Hardware stack levels used: 1
   731 ;; Hardware stack levels required when called: 3
   732 ;; This function calls:
   733 ;;		_ENVIA_LCD_CMD
   734 ;;		_ENVIA_NIBBLE
   735 ;; This function is called by:
   736 ;;		_inicializacion_LCD
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text5
   741  0009AA                     __ptext5:
   742                           	callstack 0
   743  0009AA                     _LCD_CONFIG:
   744                           	callstack 26
   745  0009AA                     
   746                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   747  0009AA  908C               	bcf	140,0,c	;volatile
   748                           
   749                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   750  0009AC  928C               	bcf	140,1,c	;volatile
   751  0009AE                     
   752                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   753  0009AE  0E30               	movlw	48
   754  0009B0  ECE7  F005         	call	_ENVIA_NIBBLE
   755  0009B4                     
   756                           ;LCD.c: 77:         _delay(24000);
   757  0009B4  0E20               	movlw	32
   758  0009B6  6E04               	movwf	??_LCD_CONFIG^0,c
   759  0009B8  0E2A               	movlw	42
   760  0009BA                     u237:
   761  0009BA  2EE8               	decfsz	wreg,f,c
   762  0009BC  D7FE               	bra	u237
   763  0009BE  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   764  0009C0  D7FC               	bra	u237
   765  0009C2                     
   766                           ;LCD.c: 78:         _delay(24000);
   767  0009C2  0E20               	movlw	32
   768  0009C4  6E04               	movwf	??_LCD_CONFIG^0,c
   769  0009C6  0E2A               	movlw	42
   770  0009C8                     u247:
   771  0009C8  2EE8               	decfsz	wreg,f,c
   772  0009CA  D7FE               	bra	u247
   773  0009CC  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   774  0009CE  D7FC               	bra	u247
   775                           
   776                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   777  0009D0  0E30               	movlw	48
   778  0009D2  ECE7  F005         	call	_ENVIA_NIBBLE
   779  0009D6                     
   780                           ;LCD.c: 83:  _delay(1200);
   781  0009D6  0EF0               	movlw	240
   782  0009D8                     u257:
   783  0009D8  D000               	nop2	
   784  0009DA  2EE8               	decfsz	wreg,f,c
   785  0009DC  D7FD               	bra	u257
   786  0009DE                     
   787                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   788  0009DE  0E30               	movlw	48
   789  0009E0  ECE7  F005         	call	_ENVIA_NIBBLE
   790  0009E4                     
   791                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   792  0009E4  0E20               	movlw	32
   793  0009E6  ECE7  F005         	call	_ENVIA_NIBBLE
   794  0009EA                     
   795                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   796  0009EA  0E01               	movlw	1
   797  0009EC  EC41  F005         	call	_ENVIA_LCD_CMD
   798  0009F0                     
   799                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   800  0009F0  0E28               	movlw	40
   801  0009F2  EC41  F005         	call	_ENVIA_LCD_CMD
   802  0009F6                     
   803                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   804  0009F6  0E0F               	movlw	15
   805  0009F8  EC41  F005         	call	_ENVIA_LCD_CMD
   806  0009FC                     
   807                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   808  0009FC  0E06               	movlw	6
   809  0009FE  EC41  F005         	call	_ENVIA_LCD_CMD
   810  000A02                     
   811                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   812  000A02  0E01               	movlw	1
   813  000A04  EC41  F005         	call	_ENVIA_LCD_CMD
   814  000A08  0012               	return		;funcret
   815  000A0A                     __end_of_LCD_CONFIG:
   816                           	callstack 0
   817                           
   818 ;; *************** function _CURSOR_ONOFF *****************
   819 ;; Defined at:
   820 ;;		line 35 in file "LCD.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  estado          1    wreg     unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  estado          1    3[COMRAM] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0, cstack
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   834 ;;      Params:         0       0       0       0       0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0       0       0       0       0
   836 ;;      Temps:          0       0       0       0       0       0       0       0       0
   837 ;;      Totals:         1       0       0       0       0       0       0       0       0
   838 ;;Total ram usage:        1 bytes
   839 ;; Hardware stack levels used: 1
   840 ;; Hardware stack levels required when called: 3
   841 ;; This function calls:
   842 ;;		_ENVIA_LCD_CMD
   843 ;; This function is called by:
   844 ;;		_inicializacion_LCD
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text6
   849  000AEA                     __ptext6:
   850                           	callstack 0
   851  000AEA                     _CURSOR_ONOFF:
   852                           	callstack 26
   853                           
   854                           ;incstack = 0
   855                           ;CURSOR_ONOFF@estado stored from wreg
   856  000AEA  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   857  000AEC                     
   858                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   859  000AEC  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   860  000AEE  A4D8               	btfss	status,2,c
   861  000AF0  EF7C  F005         	goto	u21
   862  000AF4  EF7E  F005         	goto	u20
   863  000AF8                     u21:
   864  000AF8  EF81  F005         	goto	l892
   865  000AFC                     u20:
   866  000AFC  0E0E               	movlw	14
   867  000AFE  EC41  F005         	call	_ENVIA_LCD_CMD
   868  000B02                     l892:
   869                           
   870                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   871  000B02  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   872  000B04  A4D8               	btfss	status,2,c
   873  000B06  EF87  F005         	goto	u31
   874  000B0A  EF89  F005         	goto	u30
   875  000B0E                     u31:
   876  000B0E  EF8C  F005         	goto	l42
   877  000B12                     u30:
   878  000B12  0E0C               	movlw	12
   879  000B14  EC41  F005         	call	_ENVIA_LCD_CMD
   880  000B18                     l42:
   881  000B18  0012               	return		;funcret
   882  000B1A                     __end_of_CURSOR_ONOFF:
   883                           	callstack 0
   884                           
   885 ;; *************** function _CURSOR_HOME *****************
   886 ;; Defined at:
   887 ;;		line 30 in file "LCD.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;		None
   890 ;; Auto vars:     Size  Location     Type
   891 ;;		None
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         0       0       0       0       0       0       0       0       0
   902 ;;      Locals:         0       0       0       0       0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0
   904 ;;      Totals:         0       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        0 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 3
   908 ;; This function calls:
   909 ;;		_ENVIA_LCD_CMD
   910 ;; This function is called by:
   911 ;;		_inicializacion_LCD
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text7
   916  000C0E                     __ptext7:
   917                           	callstack 0
   918  000C0E                     _CURSOR_HOME:
   919                           	callstack 26
   920  000C0E                     
   921                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   922  000C0E  0E02               	movlw	2
   923  000C10  EC41  F005         	call	_ENVIA_LCD_CMD
   924  000C14  0012               	return		;funcret
   925  000C16                     __end_of_CURSOR_HOME:
   926                           	callstack 0
   927                           
   928 ;; *************** function _BORRAR_LCD *****************
   929 ;; Defined at:
   930 ;;		line 67 in file "LCD.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   944 ;;      Params:         0       0       0       0       0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0
   947 ;;      Totals:         0       0       0       0       0       0       0       0       0
   948 ;;Total ram usage:        0 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 3
   951 ;; This function calls:
   952 ;;		_ENVIA_LCD_CMD
   953 ;; This function is called by:
   954 ;;		_inicializacion_LCD
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text8
   959  000C16                     __ptext8:
   960                           	callstack 0
   961  000C16                     _BORRAR_LCD:
   962                           	callstack 26
   963  000C16                     
   964                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   965  000C16  0E01               	movlw	1
   966  000C18  EC41  F005         	call	_ENVIA_LCD_CMD
   967  000C1C  0012               	return		;funcret
   968  000C1E                     __end_of_BORRAR_LCD:
   969                           	callstack 0
   970                           
   971 ;; *************** function _configuro *****************
   972 ;; Defined at:
   973 ;;		line 8 in file "maincode3.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   987 ;;      Params:         0       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0
   989 ;;      Temps:          0       0       0       0       0       0       0       0       0
   990 ;;      Totals:         0       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; Hardware stack levels required when called: 1
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text9
  1002  000BEA                     __ptext9:
  1003                           	callstack 0
  1004  000BEA                     _configuro:
  1005                           	callstack 29
  1006  000BEA                     
  1007                           ;maincode3.c: 9:     OSCCON = 0x70;
  1008  000BEA  0E70               	movlw	112
  1009  000BEC  6ED3               	movwf	211,c	;volatile
  1010  000BEE                     
  1011                           ;maincode3.c: 10:     TRISEbits.RE0 = 0;
  1012  000BEE  9096               	bcf	150,0,c	;volatile
  1013                           
  1014                           ;maincode3.c: 11:     ADCON1 = 0x0F;
  1015  000BF0  0E0F               	movlw	15
  1016  000BF2  6EC1               	movwf	193,c	;volatile
  1017  000BF4                     
  1018                           ;maincode3.c: 12:     INTCONbits.GIE = 1;
  1019  000BF4  8EF2               	bsf	242,7,c	;volatile
  1020  000BF6                     
  1021                           ;maincode3.c: 13:     INTCONbits.INT0IE = 1;
  1022  000BF6  88F2               	bsf	242,4,c	;volatile
  1023  000BF8                     
  1024                           ;maincode3.c: 14:     INTCON2bits.INTEDG0 = 0;
  1025  000BF8  9CF1               	bcf	241,6,c	;volatile
  1026  000BFA                     
  1027                           ;maincode3.c: 15:     INTCON2bits.RBPU = 0;
  1028  000BFA  9EF1               	bcf	241,7,c	;volatile
  1029  000BFC  0012               	return		;funcret
  1030  000BFE                     __end_of_configuro:
  1031                           	callstack 0
  1032                           
  1033 ;; *************** function _POS_CURSOR *****************
  1034 ;; Defined at:
  1035 ;;		line 6 in file "LCD.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  fila            1    wreg     unsigned char 
  1038 ;;  columna         1    3[COMRAM] unsigned char 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  fila            1    4[COMRAM] unsigned char 
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1050 ;;      Params:         1       0       0       0       0       0       0       0       0
  1051 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1053 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 3
  1057 ;; This function calls:
  1058 ;;		_ENVIA_LCD_CMD
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           	psect	text10
  1065  000A48                     __ptext10:
  1066                           	callstack 0
  1067  000A48                     _POS_CURSOR:
  1068                           	callstack 27
  1069                           
  1070                           ;incstack = 0
  1071                           ;POS_CURSOR@fila stored from wreg
  1072  000A48  6E05               	movwf	POS_CURSOR@fila^0,c
  1073  000A4A                     
  1074                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1075  000A4A  0405               	decf	POS_CURSOR@fila^0,w,c
  1076  000A4C  A4D8               	btfss	status,2,c
  1077  000A4E  EF2B  F005         	goto	u131
  1078  000A52  EF2D  F005         	goto	u130
  1079  000A56                     u131:
  1080  000A56  EF33  F005         	goto	l1098
  1081  000A5A                     u130:
  1082  000A5A                     
  1083                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1084  000A5A  5004               	movf	POS_CURSOR@columna^0,w,c
  1085  000A5C  0F80               	addlw	128
  1086  000A5E  EC41  F005         	call	_ENVIA_LCD_CMD
  1087                           
  1088                           ;LCD.c: 11:  }
  1089  000A62  EF40  F005         	goto	l24
  1090  000A66                     l1098:
  1091  000A66  0E02               	movlw	2
  1092  000A68  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1093  000A6A  A4D8               	btfss	status,2,c
  1094  000A6C  EF3A  F005         	goto	u141
  1095  000A70  EF3C  F005         	goto	u140
  1096  000A74                     u141:
  1097  000A74  EF40  F005         	goto	l24
  1098  000A78                     u140:
  1099  000A78                     
  1100                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1101  000A78  5004               	movf	POS_CURSOR@columna^0,w,c
  1102  000A7A  0FC0               	addlw	192
  1103  000A7C  EC41  F005         	call	_ENVIA_LCD_CMD
  1104  000A80                     l24:
  1105  000A80  0012               	return		;funcret
  1106  000A82                     __end_of_POS_CURSOR:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _ENVIA_LCD_CMD *****************
  1110 ;; Defined at:
  1111 ;;		line 104 in file "LCD.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  dato            1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  dato            1    1[COMRAM] unsigned char 
  1116 ;;  aux             1    2[COMRAM] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0
  1127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1129 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        2 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 2
  1133 ;; This function calls:
  1134 ;;		_ENVIA_NIBBLE
  1135 ;;		_LEER_LCD
  1136 ;; This function is called by:
  1137 ;;		_POS_CURSOR
  1138 ;;		_CURSOR_HOME
  1139 ;;		_CURSOR_ONOFF
  1140 ;;		_BORRAR_LCD
  1141 ;;		_LCD_CONFIG
  1142 ;;		_BLINK_CURSOR
  1143 ;;		_DISPLAY_ONOFF
  1144 ;;		_GENERACARACTER
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text11
  1149  000A82                     __ptext11:
  1150                           	callstack 0
  1151  000A82                     _ENVIA_LCD_CMD:
  1152                           	callstack 26
  1153                           
  1154                           ;incstack = 0
  1155                           ;ENVIA_LCD_CMD@dato stored from wreg
  1156  000A82  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1157  000A84                     
  1158                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1159  000A84  908C               	bcf	140,0,c	;volatile
  1160  000A86                     
  1161                           ;LCD.c: 108:  LEER_LCD();
  1162  000A86  EC9C  F004         	call	_LEER_LCD	;wreg free
  1163  000A8A                     
  1164                           ;LCD.c: 109:  TRISD = 0b00000000;
  1165  000A8A  0E00               	movlw	0
  1166  000A8C  6E95               	movwf	149,c	;volatile
  1167  000A8E                     
  1168                           ;LCD.c: 111:         _delay(1200);
  1169  000A8E  0EF0               	movlw	240
  1170  000A90                     u267:
  1171  000A90  D000               	nop2	
  1172  000A92  2EE8               	decfsz	wreg,f,c
  1173  000A94  D7FD               	bra	u267
  1174  000A96                     
  1175                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1176  000A96  928C               	bcf	140,1,c	;volatile
  1177  000A98                     
  1178                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1179  000A98  948C               	bcf	140,2,c	;volatile
  1180  000A9A                     
  1181                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1182  000A9A  908C               	bcf	140,0,c	;volatile
  1183  000A9C                     
  1184                           ;LCD.c: 115:  aux = dato & 0xF0;
  1185  000A9C  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1186  000A9E  0BF0               	andlw	240
  1187  000AA0  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1188  000AA2                     
  1189                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1190  000AA2  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1191  000AA4  ECE7  F005         	call	_ENVIA_NIBBLE
  1192  000AA8                     
  1193                           ;LCD.c: 117:  aux = dato<<4;
  1194  000AA8  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1195  000AAA  0BF0               	andlw	240
  1196  000AAC  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1197  000AAE                     
  1198                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1199  000AAE  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1200  000AB0  ECE7  F005         	call	_ENVIA_NIBBLE
  1201  000AB4  0012               	return		;funcret
  1202  000AB6                     __end_of_ENVIA_LCD_CMD:
  1203                           	callstack 0
  1204                           
  1205 ;; *************** function _ESCRIBE_MENSAJE *****************
  1206 ;; Defined at:
  1207 ;;		line 41 in file "LCD.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1210 ;;		 -> STR_5(12), STR_4(12), STR_3(12), STR_2(12), 
  1211 ;;		 -> STR_1(17), 
  1212 ;;  tam             1    5[COMRAM] unsigned char 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  i               1    8[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1224 ;;      Params:         3       0       0       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1227 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1228 ;;Total ram usage:        6 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 3
  1231 ;; This function calls:
  1232 ;;		_ENVIA_CHAR
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238                           	psect	text12
  1239  000A0A                     __ptext12:
  1240                           	callstack 0
  1241  000A0A                     _ESCRIBE_MENSAJE:
  1242                           	callstack 27
  1243  000A0A                     
  1244                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1245  000A0A  0E00               	movlw	0
  1246  000A0C  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1247                           
  1248                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1249  000A0E  0E00               	movlw	0
  1250  000A10  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1251  000A12  EF1A  F005         	goto	l1108
  1252  000A16                     l1104:
  1253                           
  1254                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1255  000A16  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1256  000A18  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1257  000A1A  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1258  000A1C  0E00               	movlw	0
  1259  000A1E  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1260  000A20  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1261  000A22  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1262  000A26  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1263  000A2A                     	if	0	;tblptru may be non-zero
  1264  000A2A                     	endif
  1265  000A2A                     	if	0	;tblptru may be non-zero
  1266  000A2A                     	endif
  1267  000A2A  0008               	tblrd		*
  1268  000A2C  50F5               	movf	tablat,w,c
  1269  000A2E  EC5B  F005         	call	_ENVIA_CHAR
  1270  000A32                     
  1271                           ;LCD.c: 47:  }
  1272  000A32  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1273  000A34                     l1108:
  1274  000A34  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1275  000A36  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1276  000A38  A0D8               	btfss	status,0,c
  1277  000A3A  EF21  F005         	goto	u151
  1278  000A3E  EF23  F005         	goto	u150
  1279  000A42                     u151:
  1280  000A42  EF0B  F005         	goto	l1104
  1281  000A46                     u150:
  1282  000A46  0012               	return		;funcret
  1283  000A48                     __end_of_ESCRIBE_MENSAJE:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _ENVIA_CHAR *****************
  1287 ;; Defined at:
  1288 ;;		line 50 in file "LCD.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  dato            1    wreg     unsigned char 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  dato            1    1[COMRAM] unsigned char 
  1293 ;;  aux             1    2[COMRAM] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, status,2, status,0, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1303 ;;      Params:         0       0       0       0       0       0       0       0       0
  1304 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1306 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used: 1
  1309 ;; Hardware stack levels required when called: 2
  1310 ;; This function calls:
  1311 ;;		_ENVIA_NIBBLE
  1312 ;;		_LEER_LCD
  1313 ;; This function is called by:
  1314 ;;		_ESCRIBE_MENSAJE
  1315 ;;		_main
  1316 ;;		_GENERACARACTER
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text13
  1321  000AB6                     __ptext13:
  1322                           	callstack 0
  1323  000AB6                     _ENVIA_CHAR:
  1324                           	callstack 27
  1325                           
  1326                           ;incstack = 0
  1327                           ;ENVIA_CHAR@dato stored from wreg
  1328  000AB6  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1329  000AB8                     
  1330                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1331  000AB8  808C               	bsf	140,0,c	;volatile
  1332  000ABA                     
  1333                           ;LCD.c: 54:  LEER_LCD();
  1334  000ABA  EC9C  F004         	call	_LEER_LCD	;wreg free
  1335  000ABE                     
  1336                           ;LCD.c: 55:  TRISD = 0x00;
  1337  000ABE  0E00               	movlw	0
  1338  000AC0  6E95               	movwf	149,c	;volatile
  1339  000AC2                     
  1340                           ;LCD.c: 56:         _delay(1200);
  1341  000AC2  0EF0               	movlw	240
  1342  000AC4                     u277:
  1343  000AC4  D000               	nop2	
  1344  000AC6  2EE8               	decfsz	wreg,f,c
  1345  000AC8  D7FD               	bra	u277
  1346  000ACA                     
  1347                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1348  000ACA  928C               	bcf	140,1,c	;volatile
  1349  000ACC                     
  1350                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1351  000ACC  948C               	bcf	140,2,c	;volatile
  1352  000ACE                     
  1353                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1354  000ACE  808C               	bsf	140,0,c	;volatile
  1355  000AD0                     
  1356                           ;LCD.c: 61:  aux = dato & 0xF0;
  1357  000AD0  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1358  000AD2  0BF0               	andlw	240
  1359  000AD4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1360  000AD6                     
  1361                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1362  000AD6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1363  000AD8  ECE7  F005         	call	_ENVIA_NIBBLE
  1364  000ADC                     
  1365                           ;LCD.c: 63:  aux = dato << 4;
  1366  000ADC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1367  000ADE  0BF0               	andlw	240
  1368  000AE0  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1369  000AE2                     
  1370                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1371  000AE2  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1372  000AE4  ECE7  F005         	call	_ENVIA_NIBBLE
  1373  000AE8  0012               	return		;funcret
  1374  000AEA                     __end_of_ENVIA_CHAR:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _LEER_LCD *****************
  1378 ;; Defined at:
  1379 ;;		line 121 in file "LCD.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  aux             1    0[COMRAM] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        1 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_ENVIA_CHAR
  1404 ;;		_ENVIA_LCD_CMD
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text14
  1409  000938                     __ptext14:
  1410                           	callstack 0
  1411  000938                     _LEER_LCD:
  1412                           	callstack 26
  1413  000938                     
  1414                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1415  000938  0EF8               	movlw	248
  1416  00093A  6E95               	movwf	149,c	;volatile
  1417  00093C                     
  1418                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1419  00093C  908C               	bcf	140,0,c	;volatile
  1420  00093E                     
  1421                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1422  00093E  828C               	bsf	140,1,c	;volatile
  1423  000940                     
  1424                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1425  000940  848C               	bsf	140,2,c	;volatile
  1426  000942                     
  1427                           ;LCD.c: 128:         _delay(1200);
  1428  000942  0EF0               	movlw	240
  1429  000944                     u287:
  1430  000944  D000               	nop2	
  1431  000946  2EE8               	decfsz	wreg,f,c
  1432  000948  D7FD               	bra	u287
  1433  00094A                     
  1434                           ;LCD.c: 130:  aux = PORTD;
  1435  00094A  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1436  00094E                     
  1437                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1438  00094E  948C               	bcf	140,2,c	;volatile
  1439  000950                     
  1440                           ;LCD.c: 132:         _delay(1200);
  1441  000950  0EF0               	movlw	240
  1442  000952                     u297:
  1443  000952  D000               	nop2	
  1444  000954  2EE8               	decfsz	wreg,f,c
  1445  000956  D7FD               	bra	u297
  1446  000958                     
  1447                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1448  000958  848C               	bsf	140,2,c	;volatile
  1449  00095A                     
  1450                           ;LCD.c: 135:         _delay(1200);
  1451  00095A  0EF0               	movlw	240
  1452  00095C                     u307:
  1453  00095C  D000               	nop2	
  1454  00095E  2EE8               	decfsz	wreg,f,c
  1455  000960  D7FD               	bra	u307
  1456  000962                     
  1457                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1458  000962  948C               	bcf	140,2,c	;volatile
  1459  000964                     l840:
  1460                           
  1461                           ;LCD.c: 138:  aux = aux & 0x80;
  1462  000964  5001               	movf	LEER_LCD@aux^0,w,c
  1463  000966  0B80               	andlw	128
  1464  000968  6E01               	movwf	LEER_LCD@aux^0,c
  1465                           
  1466                           ;LCD.c: 139:  while(aux == 0x80)
  1467  00096A  EFCB  F004         	goto	l854
  1468  00096E                     l67:
  1469                           
  1470                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1471  00096E  848C               	bsf	140,2,c	;volatile
  1472  000970                     
  1473                           ;LCD.c: 142:             _delay(1200);
  1474  000970  0EF0               	movlw	240
  1475  000972                     u317:
  1476  000972  D000               	nop2	
  1477  000974  2EE8               	decfsz	wreg,f,c
  1478  000976  D7FD               	bra	u317
  1479  000978                     
  1480                           ;LCD.c: 143:             aux = PORTD;
  1481  000978  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1482  00097C                     
  1483                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1484  00097C  948C               	bcf	140,2,c	;volatile
  1485                           
  1486                           ;LCD.c: 145:             _delay(1200);
  1487  00097E  0EF0               	movlw	240
  1488  000980                     u327:
  1489  000980  D000               	nop2	
  1490  000982  2EE8               	decfsz	wreg,f,c
  1491  000984  D7FD               	bra	u327
  1492  000986                     
  1493                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1494  000986  848C               	bsf	140,2,c	;volatile
  1495                           
  1496                           ;LCD.c: 147:             _delay(1200);
  1497  000988  0EF0               	movlw	240
  1498  00098A                     u337:
  1499  00098A  D000               	nop2	
  1500  00098C  2EE8               	decfsz	wreg,f,c
  1501  00098E  D7FD               	bra	u337
  1502  000990                     
  1503                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1504  000990  948C               	bcf	140,2,c	;volatile
  1505  000992  EFB2  F004         	goto	l840
  1506  000996                     l854:
  1507                           
  1508                           ;LCD.c: 139:  while(aux == 0x80)
  1509  000996  0E80               	movlw	128
  1510  000998  1801               	xorwf	LEER_LCD@aux^0,w,c
  1511  00099A  B4D8               	btfsc	status,2,c
  1512  00099C  EFD2  F004         	goto	u11
  1513  0009A0  EFD4  F004         	goto	u10
  1514  0009A4                     u11:
  1515  0009A4  EFB7  F004         	goto	l67
  1516  0009A8                     u10:
  1517  0009A8  0012               	return		;funcret
  1518  0009AA                     __end_of_LEER_LCD:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _ENVIA_NIBBLE *****************
  1522 ;; Defined at:
  1523 ;;		line 93 in file "LCD.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  dato            1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  dato            1    0[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        1 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_ENVIA_CHAR
  1548 ;;		_LCD_CONFIG
  1549 ;;		_ENVIA_LCD_CMD
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text15
  1554  000BCE                     __ptext15:
  1555                           	callstack 0
  1556  000BCE                     _ENVIA_NIBBLE:
  1557                           	callstack 27
  1558                           
  1559                           ;incstack = 0
  1560                           ;ENVIA_NIBBLE@dato stored from wreg
  1561  000BCE  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1562  000BD0                     
  1563                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1564  000BD0  0E0F               	movlw	15
  1565  000BD2  168C               	andwf	140,f,c	;volatile
  1566                           
  1567                           ;LCD.c: 96:  dato &= 0xF0;
  1568  000BD4  0EF0               	movlw	240
  1569  000BD6  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1570                           
  1571                           ;LCD.c: 97:  LATD|= dato;
  1572  000BD8  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1573  000BDA  128C               	iorwf	140,f,c	;volatile
  1574  000BDC                     
  1575                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1576  000BDC  848C               	bsf	140,2,c	;volatile
  1577  000BDE                     
  1578                           ;LCD.c: 100:         _delay(1200);
  1579  000BDE  0EF0               	movlw	240
  1580  000BE0                     u347:
  1581  000BE0  D000               	nop2	
  1582  000BE2  2EE8               	decfsz	wreg,f,c
  1583  000BE4  D7FD               	bra	u347
  1584  000BE6                     
  1585                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1586  000BE6  948C               	bcf	140,2,c	;volatile
  1587  000BE8  0012               	return		;funcret
  1588  000BEA                     __end_of_ENVIA_NIBBLE:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _INT0_ISR *****************
  1592 ;; Defined at:
  1593 ;;		line 84 in file "maincode3.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1607 ;;      Params:         0       0       0       0       0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		Interrupt level 2
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	intcode
  1621  000008                     __pintcode:
  1622                           	callstack 0
  1623  000008                     _INT0_ISR:
  1624                           	callstack 26
  1625                           
  1626                           ;incstack = 0
  1627  000008  820D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1628  00000A  EDC6  F005         	call	int_func,f	;refresh shadow registers
  1629                           
  1630                           	psect	intcode_body
  1631  000B8C                     __pintcode_body:
  1632                           	callstack 26
  1633  000B8C                     int_func:
  1634                           	callstack 26
  1635  000B8C  0006               	pop		; remove dummy address from shadow register refresh
  1636  000B8E                     
  1637                           ;maincode3.c: 85:     INTCONbits.INT0IF = 0;
  1638  000B8E  92F2               	bcf	242,1,c	;volatile
  1639  000B90                     
  1640                           ;maincode3.c: 86:     if (indicador == 3){
  1641  000B90  0E03               	movlw	3
  1642  000B92  180C               	xorwf	_indicador^0,w,c
  1643  000B94  A4D8               	btfss	status,2,c
  1644  000B96  EFCF  F005         	goto	i2u12_41
  1645  000B9A  EFD1  F005         	goto	i2u12_40
  1646  000B9E                     i2u12_41:
  1647  000B9E  EFD5  F005         	goto	i2l1088
  1648  000BA2                     i2u12_40:
  1649  000BA2                     
  1650                           ;maincode3.c: 87:         indicador = 0;
  1651  000BA2  0E00               	movlw	0
  1652  000BA4  6E0C               	movwf	_indicador^0,c
  1653                           
  1654                           ;maincode3.c: 88:     }
  1655  000BA6  EFD6  F005         	goto	i2l142
  1656  000BAA                     i2l1088:
  1657                           
  1658                           ;maincode3.c: 90:         indicador++;
  1659  000BAA  2A0C               	incf	_indicador^0,f,c
  1660  000BAC                     i2l142:
  1661  000BAC  920D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1662  000BAE  0011               	retfie		f
  1663  000BB0                     __end_of_INT0_ISR:
  1664                           	callstack 0
  1665                           
  1666                           	psect	rparam
  1667  0000                     
  1668                           	psect	temp
  1669  00000D                     btemp:
  1670                           	callstack 0
  1671  00000D                     	ds	1
  1672  0000                     int$flags	set	btemp
  1673  0000                     wtemp8	set	btemp+1
  1674  0000                     ttemp5	set	btemp+1
  1675  0000                     ttemp6	set	btemp+4
  1676  0000                     ttemp7	set	btemp+8
  1677                           
  1678                           	psect	idloc
  1679                           
  1680                           ;Config register IDLOC0 @ 0x200000
  1681                           ;	unspecified, using default values
  1682  200000                     	org	2097152
  1683  200000  FF                 	db	255
  1684                           
  1685                           ;Config register IDLOC1 @ 0x200001
  1686                           ;	unspecified, using default values
  1687  200001                     	org	2097153
  1688  200001  FF                 	db	255
  1689                           
  1690                           ;Config register IDLOC2 @ 0x200002
  1691                           ;	unspecified, using default values
  1692  200002                     	org	2097154
  1693  200002  FF                 	db	255
  1694                           
  1695                           ;Config register IDLOC3 @ 0x200003
  1696                           ;	unspecified, using default values
  1697  200003                     	org	2097155
  1698  200003  FF                 	db	255
  1699                           
  1700                           ;Config register IDLOC4 @ 0x200004
  1701                           ;	unspecified, using default values
  1702  200004                     	org	2097156
  1703  200004  FF                 	db	255
  1704                           
  1705                           ;Config register IDLOC5 @ 0x200005
  1706                           ;	unspecified, using default values
  1707  200005                     	org	2097157
  1708  200005  FF                 	db	255
  1709                           
  1710                           ;Config register IDLOC6 @ 0x200006
  1711                           ;	unspecified, using default values
  1712  200006                     	org	2097158
  1713  200006  FF                 	db	255
  1714                           
  1715                           ;Config register IDLOC7 @ 0x200007
  1716                           ;	unspecified, using default values
  1717  200007                     	org	2097159
  1718  200007  FF                 	db	255
  1719                           
  1720                           	psect	config
  1721                           
  1722                           ;Config register CONFIG1L @ 0x300000
  1723                           ;	PLL Prescaler Selection bits
  1724                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1725                           ;	System Clock Postscaler Selection bits
  1726                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1727                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1728                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1729  300000                     	org	3145728
  1730  300000  00                 	db	0
  1731                           
  1732                           ;Config register CONFIG1H @ 0x300001
  1733                           ;	Oscillator Selection bits
  1734                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1735                           ;	Fail-Safe Clock Monitor Enable bit
  1736                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1737                           ;	Internal/External Oscillator Switchover bit
  1738                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1739  300001                     	org	3145729
  1740  300001  08                 	db	8
  1741                           
  1742                           ;Config register CONFIG2L @ 0x300002
  1743                           ;	Power-up Timer Enable bit
  1744                           ;	PWRT = ON, PWRT enabled
  1745                           ;	Brown-out Reset Enable bits
  1746                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1747                           ;	Brown-out Reset Voltage bits
  1748                           ;	BORV = 3, Minimum setting 2.05V
  1749                           ;	USB Voltage Regulator Enable bit
  1750                           ;	VREGEN = OFF, USB voltage regulator disabled
  1751  300002                     	org	3145730
  1752  300002  18                 	db	24
  1753                           
  1754                           ;Config register CONFIG2H @ 0x300003
  1755                           ;	Watchdog Timer Enable bit
  1756                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1757                           ;	Watchdog Timer Postscale Select bits
  1758                           ;	WDTPS = 32768, 1:32768
  1759  300003                     	org	3145731
  1760  300003  1E                 	db	30
  1761                           
  1762                           ; Padding undefined space
  1763  300004                     	org	3145732
  1764  300004  FF                 	db	255
  1765                           
  1766                           ;Config register CONFIG3H @ 0x300005
  1767                           ;	CCP2 MUX bit
  1768                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1769                           ;	PORTB A/D Enable bit
  1770                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1771                           ;	Low-Power Timer 1 Oscillator Enable bit
  1772                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1773                           ;	MCLR Pin Enable bit
  1774                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1775  300005                     	org	3145733
  1776  300005  81                 	db	129
  1777                           
  1778                           ;Config register CONFIG4L @ 0x300006
  1779                           ;	Stack Full/Underflow Reset Enable bit
  1780                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1781                           ;	Single-Supply ICSP Enable bit
  1782                           ;	LVP = OFF, Single-Supply ICSP disabled
  1783                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1784                           ;	ICPRT = OFF, ICPORT disabled
  1785                           ;	Extended Instruction Set Enable bit
  1786                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1787                           ;	Background Debugger Enable bit
  1788                           ;	DEBUG = 0x1, unprogrammed default
  1789  300006                     	org	3145734
  1790  300006  81                 	db	129
  1791                           
  1792                           ; Padding undefined space
  1793  300007                     	org	3145735
  1794  300007  FF                 	db	255
  1795                           
  1796                           ;Config register CONFIG5L @ 0x300008
  1797                           ;	Code Protection bit
  1798                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1799                           ;	Code Protection bit
  1800                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1801                           ;	Code Protection bit
  1802                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1803                           ;	Code Protection bit
  1804                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1805  300008                     	org	3145736
  1806  300008  0F                 	db	15
  1807                           
  1808                           ;Config register CONFIG5H @ 0x300009
  1809                           ;	Boot Block Code Protection bit
  1810                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1811                           ;	Data EEPROM Code Protection bit
  1812                           ;	CPD = OFF, Data EEPROM is not code-protected
  1813  300009                     	org	3145737
  1814  300009  C0                 	db	192
  1815                           
  1816                           ;Config register CONFIG6L @ 0x30000A
  1817                           ;	Write Protection bit
  1818                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1819                           ;	Write Protection bit
  1820                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1821                           ;	Write Protection bit
  1822                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1823                           ;	Write Protection bit
  1824                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1825  30000A                     	org	3145738
  1826  30000A  0F                 	db	15
  1827                           
  1828                           ;Config register CONFIG6H @ 0x30000B
  1829                           ;	Configuration Register Write Protection bit
  1830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1831                           ;	Boot Block Write Protection bit
  1832                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1833                           ;	Data EEPROM Write Protection bit
  1834                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1835  30000B                     	org	3145739
  1836  30000B  E0                 	db	224
  1837                           
  1838                           ;Config register CONFIG7L @ 0x30000C
  1839                           ;	Table Read Protection bit
  1840                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1841                           ;	Table Read Protection bit
  1842                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1843                           ;	Table Read Protection bit
  1844                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1845                           ;	Table Read Protection bit
  1846                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1847  30000C                     	org	3145740
  1848  30000C  0F                 	db	15
  1849                           
  1850                           ;Config register CONFIG7H @ 0x30000D
  1851                           ;	Boot Block Table Read Protection bit
  1852                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1853  30000D                     	org	3145741
  1854  30000D  40                 	db	64
  1855                           tosu	equ	0xFFF
  1856                           tosh	equ	0xFFE
  1857                           tosl	equ	0xFFD
  1858                           stkptr	equ	0xFFC
  1859                           pclatu	equ	0xFFB
  1860                           pclath	equ	0xFFA
  1861                           pcl	equ	0xFF9
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           prodh	equ	0xFF4
  1867                           prodl	equ	0xFF3
  1868                           indf0	equ	0xFEF
  1869                           postinc0	equ	0xFEE
  1870                           postdec0	equ	0xFED
  1871                           preinc0	equ	0xFEC
  1872                           plusw0	equ	0xFEB
  1873                           fsr0h	equ	0xFEA
  1874                           fsr0l	equ	0xFE9
  1875                           wreg	equ	0xFE8
  1876                           indf1	equ	0xFE7
  1877                           postinc1	equ	0xFE6
  1878                           postdec1	equ	0xFE5
  1879                           preinc1	equ	0xFE4
  1880                           plusw1	equ	0xFE3
  1881                           fsr1h	equ	0xFE2
  1882                           fsr1l	equ	0xFE1
  1883                           bsr	equ	0xFE0
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           preinc2	equ	0xFDC
  1888                           plusw2	equ	0xFDB
  1889                           fsr2h	equ	0xFDA
  1890                           fsr2l	equ	0xFD9
  1891                           status	equ	0xFD8

Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     11      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _inicializacion_LCD->_CURSOR_ONOFF
    _inicializacion_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2204
                                              9 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                 _inicializacion_LCD
                       _servo_a_cero
              _servo_a_cientoochenta
                    _servo_a_noventa
 ---------------------------------------------------------------------------------
 (1) _servo_a_noventa                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _servo_a_cientoochenta                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _servo_a_cero                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicializacion_LCD                                   1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     588
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     971
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _inicializacion_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _servo_a_cero
   _servo_a_cientoochenta
   _servo_a_noventa

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      B       C       1       12.8%
BITBIGSFRhhll       2A      0       0      23        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhlh       11      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRhl          7      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      27        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 26 17:53:28 2022

                           l24 0A80                             l42 0B18                             l51 0AE8  
                           l60 0BE8                             l37 0C14                             l54 0C1C  
                           l63 0AB4                             l48 0A46                             l57 0A08  
                           l67 096E                             l69 09A8                             u10 09A8  
                           u11 09A4                             u20 0AFC                             u21 0AF8  
                           u30 0B12                             u31 0B0E                  ENVIA_CHAR@aux 0003  
                          l112 0B40                            l121 0B8A                            l115 0BCC  
                          l109 0BFC                            l118 0B66                            l820 093C  
                          l900 0ABE                            l830 094E                            l822 093E  
                          l910 0AD0                            l902 0AC2                            l840 0964  
                          l832 0950                            l824 0940                            l912 0AD6  
                          l904 0ACA                            l920 09AA                            l850 0990  
                          l842 0970                            l834 0958                            l826 0942  
                          l818 0938                            l914 0ADC                            l906 0ACC  
                          l930 09DE                            l922 09AE                            l860 0BDE  
                          l844 0978                            l836 095A                            l828 094A  
                          l916 0AE2                            l908 0ACE                            l940 09FC  
                          l932 09E4                            l924 09B4                            l862 0BE6  
                          l846 097C                            l854 0996                            l838 0962  
                          l870 0A8E                            l918 0C16                            l942 0A02  
                          l934 09EA                            l926 09C2                            l856 0BD0  
                          l848 0986                            l880 0AA2                            l872 0A96  
                          l864 0A84                            l960 0BEA                            l936 09F0  
                          l928 09D6                            l858 0BDC                            l882 0AA8  
                          l874 0A98                            l866 0A86                            l970 0BFA  
                          l962 0BEE                            l890 0AFC                            l938 09F6  
                          l884 0AAE                            l876 0A9A                            l868 0A8A  
                          l964 0BF4                            l892 0B02                            l980 0B36  
                          l972 0B1A                            l878 0A9C                            l966 0BF6  
                          l886 0C0E                            l894 0B12                            l982 0B3A  
                          l974 0B1E                            l990 0B42                            l896 0AB8  
                          l968 0BF8                            l888 0AEC                            l976 0B22  
                          l984 0BB0                            l992 0B44                            l898 0ABA  
                          l978 0B32                            l986 0BB2                            l994 0B54  
                          l988 0BBC                            l996 0B68                            l998 0B6A  
                          u130 0A5A                            u131 0A56                            u140 0A78  
                          u141 0A74                            u150 0A46                            u151 0A42  
                          u207 0BB4                            u217 0BC4                            u307 095C  
                          u227 0B28                            u317 0972                            u237 09BA  
                          u327 0980                            u247 09C8                            u167 0B70  
                          u337 098A                            u257 09D8                            u177 0B82  
                          u347 0BE0                            u267 0A90                            u187 0B4A  
                          u277 0AC4                            u197 0B5C                            u287 0944  
                          u297 0952                    LEER_LCD@aux 0001                            wreg 000FE8  
                 ?_CURSOR_HOME 0001                 ??_ENVIA_NIBBLE 0001                 ENVIA_CHAR@dato 0002  
                         l1000 0B7A                           l1100 0A78                           l1102 0A0A  
                         l1110 0838                           l1104 0A16                           l1120 0868  
                         l1112 083C                           l1106 0A32                           l1130 08A0  
                         l1122 0878                           l1114 0840                           l1108 0A34  
                         l1140 08CE                           l1132 08A6                           l1124 087E  
                         l1116 084A                           l1142 08D6                           l1134 08AE  
                         l1126 0886                           l1118 085E                           l1144 08E0  
                         l1136 08B8                           l1128 0890                           l1152 08FA  
                         l1162 090E                           l1146 08F0                           l1138 08C8  
                         l1094 0A4A                           l1096 0A5A                           l1098 0A66  
                         STR_1 0801                           STR_2 0812                           STR_3 082A  
                         STR_4 081E                           STR_5 082A                           _LATD 000F8C  
                         _main 0838                           btemp 000D                           start 000E  
                ?_CURSOR_ONOFF 0001                   ___param_bank 000000                ??_ENVIA_LCD_CMD 0002  
             __end_of_LEER_LCD 09AA               __end_of_INT0_ISR 0BB0                          ?_main 0001  
                        i2l142 0BAC                          _PORTD 000F83                          _TRISD 000F95  
                  ?_POS_CURSOR 0004                          tablat 000FF5                          ttemp5 000E  
                        ttemp6 0011                          ttemp7 0015                          status 000FD8  
                        wtemp8 000E                 ??_CURSOR_ONOFF 0004                __initialization 0BFE  
                 __end_of_main 0938             _inicializacion_LCD 0B1A                _ESCRIBE_MENSAJE 0A0A  
                       ??_main 000A                  __activetblptr 000002            ?_inicializacion_LCD 0001  
                       _ADCON1 000FC1                         i2l1082 0B8E                         i2l1084 0B90  
                       i2l1086 0BA2                         i2l1088 0BAA                         _OSCCON 000FD3  
         ??_inicializacion_LCD 0005           __end_of_ENVIA_NIBBLE 0BEA                         isa$std 000001  
__end_of_servo_a_cientoochenta 0B68                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                   ??_BORRAR_LCD 0004  
                    ?_LEER_LCD 0001                     __accesstop 0060        __end_of__initialization 0C00  
                    ?_INT0_ISR 0001                   ??_LCD_CONFIG 0004                  ___rparam_used 000001  
                 ??_ENVIA_CHAR 0002        __end_of_ESCRIBE_MENSAJE 0A48                 __pcstackCOMRAM 0001  
           __end_of_BORRAR_LCD 0C1E              ??_servo_a_noventa 0001               ENVIA_LCD_CMD@aux 0003  
         __end_of_CURSOR_ONOFF 0B1A             __end_of_LCD_CONFIG 0A0A             __end_of_ENVIA_CHAR 0AEA  
                   ??_LEER_LCD 0001               ENVIA_NIBBLE@dato 0001                     ??_INT0_ISR 0001  
                      i2u12_40 0BA2                        i2u12_41 0B9E                   ??_POS_CURSOR 0005  
                      __Hparam 0000                        __Lparam 0000               ?_ESCRIBE_MENSAJE 0004  
            __end_of_configuro 0BFE                   __psmallconst 0800          __end_of_ENVIA_LCD_CMD 0AB6  
                      __pcinit 0BFE             __end_of_POS_CURSOR 0A82                        __ramtop 0800  
                      __ptext0 0838                        __ptext1 0B68                        __ptext2 0B42  
                      __ptext3 0BB0                        __ptext4 0B1A                        __ptext5 09AA  
                      __ptext6 0AEA                        __ptext7 0C0E                        __ptext8 0C16  
                      __ptext9 0BEA                 __pintcode_body 0B8C                   _ENVIA_NIBBLE 0BCE  
         end_of_initialization 0C00                  __Lmediumconst 0000                        int_func 0B8C  
                ?_servo_a_cero 0001                      _TRISEbits 000F96                _servo_a_noventa 0B68  
                 _CURSOR_ONOFF 0AEA             CURSOR_ONOFF@estado 0004                 ??_servo_a_cero 0001  
                ??_CURSOR_HOME 0004            start_initialization 0BFE          _servo_a_cientoochenta 0B42  
            ENVIA_LCD_CMD@dato 0002                    __pbssCOMRAM 000C        __end_of_servo_a_noventa 0B8C  
          __end_of_CURSOR_HOME 0C16                      __pintcode 0008                      _configuro 0BEA  
                  __smallconst 0800                      _indicador 000C         ?_servo_a_cientoochenta 0001  
         __end_of_servo_a_cero 0BCE                       _LEER_LCD 0938                       _INT0_ISR 0008  
                     _LATDbits 000F8C                       _LATEbits 000F8D               ESCRIBE_MENSAJE@i 0009  
               POS_CURSOR@fila 0005                     ?_configuro 0001                    _CURSOR_HOME 0C0E  
                  _INTCON2bits 000FF1               ?_servo_a_noventa 0001                       __Hrparam 0000  
                     __Lrparam 0000                       __ptext10 0A48                       __ptext11 0A82  
                     __ptext12 0A0A                       __ptext13 0AB6                       __ptext14 0938  
                     __ptext15 0BCE                     _BORRAR_LCD 0C16     __end_of_inicializacion_LCD 0B42  
                   _LCD_CONFIG 09AA                     _ENVIA_CHAR 0AB6                       isa$xinst 000000  
                     int$flags 000D                  _ENVIA_LCD_CMD 0A82                    ??_configuro 0001  
                   _INTCONbits 000FF2              ??_ESCRIBE_MENSAJE 0007                       intlevel2 0000  
        ESCRIBE_MENSAJE@cadena 0004                   _servo_a_cero 0BB0                 ?_ENVIA_LCD_CMD 0001  
      ??_servo_a_cientoochenta 0001                    ?_BORRAR_LCD 0001                  ?_ENVIA_NIBBLE 0001  
                   _POS_CURSOR 0A48                    ?_LCD_CONFIG 0001             ESCRIBE_MENSAJE@tam 0006  
                  ?_ENVIA_CHAR 0001              POS_CURSOR@columna 0004  
