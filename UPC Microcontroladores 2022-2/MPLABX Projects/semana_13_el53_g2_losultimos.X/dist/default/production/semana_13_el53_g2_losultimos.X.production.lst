

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 11 18:58:08 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000C62                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _efectos
    78  000C62  02                 	db	2
    79  000C63  05                 	db	5
    80  000C64  01                 	db	1
    81  000C65  02                 	db	2
    82  000C66  04                 	db	4
    83  000C67  02                 	db	2
    84  000C68  01                 	db	1
    85  000C69  04                 	db	4
    86  000C6A  00                 	db	0
    87  000C6B  07                 	db	7
    88  000C6C  00                 	db	0
    89  000C6D  01                 	db	1
    90  000C6E  02                 	db	2
    91  000C6F  03                 	db	3
    92  000C70  04                 	db	4
    93  000C71  05                 	db	5
    94  000C72  06                 	db	6
    95  000C73  07                 	db	7
    96  000C74  06                 	db	6
    97  000C75  05                 	db	5
    98  000C76  04                 	db	4
    99  000C77  03                 	db	3
   100  000C78  02                 	db	2
   101  000C79  01                 	db	1
   102                           
   103                           ;initializer for _mensaje
   104  000C7A  59                 	db	89
   105  000C7B  61                 	db	97
   106  000C7C  20                 	db	32
   107  000C7D  6E                 	db	110
   108  000C7E  6F                 	db	111
   109  000C7F  73                 	db	115
   110  000C80  20                 	db	32
   111  000C81  76                 	db	118
   112  000C82  61                 	db	97
   113  000C83  6D                 	db	109
   114  000C84  6F                 	db	111
   115  000C85  73                 	db	115
   116  000C86  21                 	db	33
   117  000C87  00                 	db	0
   118                           
   119                           ;initializer for _LED_ON1
   120  000C88  0F                 	db	15
   121  000C89  17                 	db	23
   122  000C8A  1F                 	db	31
   123  000C8B  1F                 	db	31
   124  000C8C  1F                 	db	31
   125  000C8D  17                 	db	23
   126  000C8E  0F                 	db	15
   127  000C8F  00                 	db	0
   128                           
   129                           ;initializer for _LED_ON2
   130  000C90  1E                 	db	30
   131  000C91  1D                 	db	29
   132  000C92  1F                 	db	31
   133  000C93  1F                 	db	31
   134  000C94  1F                 	db	31
   135  000C95  1D                 	db	29
   136  000C96  1E                 	db	30
   137  000C97  00                 	db	0
   138                           
   139                           ;initializer for _LED_OFF2
   140  000C98  1E                 	db	30
   141  000C99  01                 	db	1
   142  000C9A  01                 	db	1
   143  000C9B  01                 	db	1
   144  000C9C  01                 	db	1
   145  000C9D  01                 	db	1
   146  000C9E  1E                 	db	30
   147  000C9F  00                 	db	0
   148                           
   149                           ;initializer for _LED_OFF1
   150  000CA0  0F                 	db	15
   151  000CA1  10                 	db	16
   152  000CA2  10                 	db	16
   153  000CA3  10                 	db	16
   154  000CA4  10                 	db	16
   155  000CA5  10                 	db	16
   156  000CA6  0F                 	db	15
   157  000CA7  00                 	db	0
   158  0000                     _LATD	set	3980
   159  0000                     _PORTD	set	3971
   160  0000                     _LATDbits	set	3980
   161  0000                     _LATE	set	3981
   162  0000                     _TRISD	set	3989
   163  0000                     _RCSTAbits	set	4011
   164  0000                     _SPBRG	set	4015
   165  0000                     _TRISE	set	3990
   166  0000                     _CMCON	set	4020
   167  0000                     _ADCON1	set	4033
   168  0000                     _OSCCON	set	4051
   169  0000                     _PORTEbits	set	3972
   170  0000                     _INTCON3bits	set	4080
   171  0000                     _INTCON2bits	set	4081
   172  0000                     _INTCONbits	set	4082
   173  0000                     _RCONbits	set	4048
   174  0000                     _CVRCON	set	4021
   175  0000                     _TXREG	set	4013
   176  0000                     _TXSTAbits	set	4012
   177                           
   178                           	psect	smallconst
   179  000800                     __psmallconst:
   180                           	callstack 0
   181  000800  00                 	db	0
   182  000801                     STR_1:
   183  000801  56                 	db	86	;'V'
   184  000802  69                 	db	105	;'i'
   185  000803  65                 	db	101	;'e'
   186  000804  72                 	db	114	;'r'
   187  000805  6E                 	db	110	;'n'
   188  000806  65                 	db	101	;'e'
   189  000807  73                 	db	115	;'s'
   190  000808  20                 	db	32
   191  000809  43                 	db	67	;'C'
   192  00080A  75                 	db	117	;'u'
   193  00080B  6C                 	db	108	;'l'
   194  00080C  74                 	db	116	;'t'
   195  00080D  75                 	db	117	;'u'
   196  00080E  72                 	db	114	;'r'
   197  00080F  61                 	db	97	;'a'
   198  000810  6C                 	db	108	;'l'
   199  000811  00                 	db	0
   200  000812  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205  000DF8                     __pcinit:
   206                           	callstack 0
   207  000DF8                     start_initialization:
   208                           	callstack 0
   209  000DF8                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to COMRAM (70 bytes)
   213                           ; load TBLPTR registers with __pidataCOMRAM
   214  000DF8  0E62               	movlw	low __pidataCOMRAM
   215  000DFA  6EF6               	movwf	tblptrl,c
   216  000DFC  0E0C               	movlw	high __pidataCOMRAM
   217  000DFE  6EF7               	movwf	tblptrh,c
   218  000E00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   219  000E02  6EF8               	movwf	tblptru,c
   220  000E04  EE00  F001         	lfsr	0,__pdataCOMRAM
   221  000E08  EE10 F046          	lfsr	1,70
   222  000E0C                     copy_data0:
   223  000E0C  0009               	tblrd		*+
   224  000E0E  CFF5 FFEE          	movff	tablat,postinc0
   225  000E12  50E5               	movf	postdec1,w,c
   226  000E14  50E1               	movf	fsr1l,w,c
   227  000E16  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to COMRAM (2 bytes)
   230  000E18  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   231  000E1A  6A57               	clrf	__pbssCOMRAM& (0+255),c
   232  000E1C                     end_of_initialization:
   233                           	callstack 0
   234  000E1C                     __end_of__initialization:
   235                           	callstack 0
   236  000E1C  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  000E1E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  000E20  0E00               	movlw	low (__Lmediumconst shr (0+16))
   239  000E22  6EF8               	movwf	tblptru,c
   240  000E24  0100               	movlb	0
   241  000E26  EF0A  F004         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244  000057                     __pbssCOMRAM:
   245                           	callstack 0
   246  000057                     _estado_vel:
   247                           	callstack 0
   248  000057                     	ds	1
   249  000058                     _estado_vis:
   250                           	callstack 0
   251  000058                     	ds	1
   252                           
   253                           	psect	dataCOMRAM
   254  000001                     __pdataCOMRAM:
   255                           	callstack 0
   256  000001                     _efectos:
   257                           	callstack 0
   258  000001                     	ds	24
   259  000019                     _mensaje:
   260                           	callstack 0
   261  000019                     	ds	14
   262  000027                     _LED_ON1:
   263                           	callstack 0
   264  000027                     	ds	8
   265  00002F                     _LED_ON2:
   266                           	callstack 0
   267  00002F                     	ds	8
   268  000037                     _LED_OFF2:
   269                           	callstack 0
   270  000037                     	ds	8
   271  00003F                     _LED_OFF1:
   272                           	callstack 0
   273  00003F                     	ds	8
   274                           
   275                           	psect	cstackBANK0
   276  000060                     __pcstackBANK0:
   277                           	callstack 0
   278  000060                     ??_main:
   279                           
   280                           ; 1 bytes @ 0x0
   281  000060                     	ds	2
   282                           
   283                           	psect	cstackCOMRAM
   284  000047                     __pcstackCOMRAM:
   285                           	callstack 0
   286  000047                     ??_INT2_ISR:
   287                           
   288                           ; 1 bytes @ 0x0
   289  000047                     	ds	5
   290  00004C                     INT2_ISR@z:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x5
   294  00004C                     	ds	1
   295  00004D                     ??_retardo_vis:
   296  00004D                     ENVIA_NIBBLE@dato:
   297                           	callstack 0
   298  00004D                     LEER_LCD@aux:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x6
   302  00004D                     	ds	1
   303  00004E                     ENVIA_CHAR@dato:
   304                           	callstack 0
   305  00004E                     ENVIA_LCD_CMD@dato:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x7
   309  00004E                     	ds	1
   310  00004F                     ENVIA_CHAR@aux:
   311                           	callstack 0
   312  00004F                     ENVIA_LCD_CMD@aux:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x8
   316  00004F                     	ds	1
   317  000050                     ??_LCD_CONFIG:
   318  000050                     POS_CURSOR@columna:
   319                           	callstack 0
   320  000050                     CURSOR_ONOFF@estado:
   321                           	callstack 0
   322  000050                     ESCRIBE_MENSAJE@cadena:
   323                           	callstack 0
   324  000050                     GENERACARACTER@vector:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x9
   328  000050                     	ds	1
   329  000051                     POS_CURSOR@fila:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0xA
   333  000051                     	ds	1
   334  000052                     ESCRIBE_MENSAJE@tam:
   335                           	callstack 0
   336  000052                     GENERACARACTER@pos:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xB
   340  000052                     	ds	1
   341  000053                     ??_ESCRIBE_MENSAJE:
   342  000053                     GENERACARACTER@i:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xC
   346  000053                     	ds	1
   347  000054                     ??_init_LCD:
   348                           
   349                           ; 1 bytes @ 0xD
   350  000054                     	ds	1
   351  000055                     ESCRIBE_MENSAJE@i:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xE
   355  000055                     	ds	1
   356  000056                     main@x:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xF
   360  000056                     	ds	1
   361                           
   362 ;;
   363 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   364 ;;
   365 ;; *************** function _main *****************
   366 ;; Defined at:
   367 ;;		line 109 in file "maincode5.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;		None
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  x               1   15[COMRAM] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   381 ;;      Params:         0       0       0       0       0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0       0       0       0       0
   383 ;;      Temps:          0       2       0       0       0       0       0       0       0
   384 ;;      Totals:         1       2       0       0       0       0       0       0       0
   385 ;;Total ram usage:        3 bytes
   386 ;; Hardware stack levels required when called: 6
   387 ;; This function calls:
   388 ;;		_ESCRIBE_MENSAJE
   389 ;;		_POS_CURSOR
   390 ;;		_configuro
   391 ;;		_init_LCD
   392 ;;		_retardo_vis
   393 ;;		_vis_LEDs_LCD
   394 ;; This function is called by:
   395 ;;		Startup code after reset
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	text0
   400  000814                     __ptext0:
   401                           	callstack 0
   402  000814                     _main:
   403                           	callstack 25
   404  000814                     
   405                           ;maincode5.c: 110:     configuro();
   406  000814  ECC8  F006         	call	_configuro	;wreg free
   407  000818                     
   408                           ;maincode5.c: 111:     init_LCD();
   409  000818  EC9E  F005         	call	_init_LCD	;wreg free
   410  00081C                     
   411                           ;maincode5.c: 112:     POS_CURSOR(1,0);
   412  00081C  0E00               	movlw	0
   413  00081E  6E50               	movwf	POS_CURSOR@columna^0,c
   414  000820  0E01               	movlw	1
   415  000822  EC91  F006         	call	_POS_CURSOR
   416  000826                     
   417                           ;maincode5.c: 113:     ESCRIBE_MENSAJE("Viernes Cultural",16);
   418  000826  0E01               	movlw	low STR_1
   419  000828  6E50               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   420  00082A  0E08               	movlw	high STR_1
   421  00082C  6E51               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   422  00082E  0E10               	movlw	16
   423  000830  6E52               	movwf	ESCRIBE_MENSAJE@tam^0,c
   424  000832  EC54  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   425  000836  EFB1  F004         	goto	l1608
   426  00083A                     l1510:
   427                           
   428                           ; BSR set to: 0
   429                           ;maincode5.c: 118:                 for(x=0;x<2;x++){
   430  00083A  0E00               	movlw	0
   431  00083C  6E56               	movwf	main@x^0,c
   432  00083E                     l1516:
   433                           
   434                           ;maincode5.c: 119:                     LATE=efectos[x];
   435  00083E  0E01               	movlw	low _efectos
   436  000840  2456               	addwf	main@x^0,w,c
   437  000842  6ED9               	movwf	fsr2l,c
   438  000844  6ADA               	clrf	fsr2h,c
   439  000846  0E00               	movlw	high _efectos
   440  000848  22DA               	addwfc	fsr2h,f,c
   441  00084A  50DF               	movf	indf2,w,c
   442  00084C  6E8D               	movwf	141,c	;volatile
   443  00084E                     
   444                           ;maincode5.c: 120:                     vis_LEDs_LCD();
   445  00084E  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   446  000852                     
   447                           ;maincode5.c: 121:                     retardo_vis();
   448  000852  EC24  F005         	call	_retardo_vis	;wreg free
   449  000856                     
   450                           ;maincode5.c: 122:                 }
   451  000856  2A56               	incf	main@x^0,f,c
   452  000858  0E01               	movlw	1
   453  00085A  6456               	cpfsgt	main@x^0,c
   454  00085C  EF32  F004         	goto	u421
   455  000860  EF34  F004         	goto	u420
   456  000864                     u421:
   457  000864  EF1F  F004         	goto	l1516
   458  000868                     u420:
   459  000868  EFB1  F004         	goto	l1608
   460  00086C                     l1526:
   461                           
   462                           ; BSR set to: 0
   463                           ;maincode5.c: 125:                 for(x=2;x<6;x++){
   464  00086C  0E02               	movlw	2
   465  00086E  6E56               	movwf	main@x^0,c
   466  000870                     l1532:
   467                           
   468                           ;maincode5.c: 126:                     LATE=efectos[x];
   469  000870  0E01               	movlw	low _efectos
   470  000872  2456               	addwf	main@x^0,w,c
   471  000874  6ED9               	movwf	fsr2l,c
   472  000876  6ADA               	clrf	fsr2h,c
   473  000878  0E00               	movlw	high _efectos
   474  00087A  22DA               	addwfc	fsr2h,f,c
   475  00087C  50DF               	movf	indf2,w,c
   476  00087E  6E8D               	movwf	141,c	;volatile
   477  000880                     
   478                           ;maincode5.c: 127:                     vis_LEDs_LCD();
   479  000880  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   480  000884                     
   481                           ;maincode5.c: 128:                     retardo_vis();
   482  000884  EC24  F005         	call	_retardo_vis	;wreg free
   483  000888                     
   484                           ;maincode5.c: 129:                 }
   485  000888  2A56               	incf	main@x^0,f,c
   486  00088A  0E05               	movlw	5
   487  00088C  6456               	cpfsgt	main@x^0,c
   488  00088E  EF4B  F004         	goto	u431
   489  000892  EF4D  F004         	goto	u430
   490  000896                     u431:
   491  000896  EF38  F004         	goto	l1532
   492  00089A                     u430:
   493  00089A  EFB1  F004         	goto	l1608
   494  00089E                     l1542:
   495                           
   496                           ; BSR set to: 0
   497                           ;maincode5.c: 132:                 for(x=6;x<8;x++){
   498  00089E  0E06               	movlw	6
   499  0008A0  6E56               	movwf	main@x^0,c
   500  0008A2                     l1548:
   501                           
   502                           ;maincode5.c: 133:                     LATE=efectos[x];
   503  0008A2  0E01               	movlw	low _efectos
   504  0008A4  2456               	addwf	main@x^0,w,c
   505  0008A6  6ED9               	movwf	fsr2l,c
   506  0008A8  6ADA               	clrf	fsr2h,c
   507  0008AA  0E00               	movlw	high _efectos
   508  0008AC  22DA               	addwfc	fsr2h,f,c
   509  0008AE  50DF               	movf	indf2,w,c
   510  0008B0  6E8D               	movwf	141,c	;volatile
   511  0008B2                     
   512                           ;maincode5.c: 134:                     vis_LEDs_LCD();
   513  0008B2  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   514  0008B6                     
   515                           ;maincode5.c: 135:                     retardo_vis();
   516  0008B6  EC24  F005         	call	_retardo_vis	;wreg free
   517  0008BA                     
   518                           ;maincode5.c: 136:                 }
   519  0008BA  2A56               	incf	main@x^0,f,c
   520  0008BC  0E07               	movlw	7
   521  0008BE  6456               	cpfsgt	main@x^0,c
   522  0008C0  EF64  F004         	goto	u441
   523  0008C4  EF66  F004         	goto	u440
   524  0008C8                     u441:
   525  0008C8  EF51  F004         	goto	l1548
   526  0008CC                     u440:
   527  0008CC  EFB1  F004         	goto	l1608
   528  0008D0                     l1558:
   529                           
   530                           ; BSR set to: 0
   531                           ;maincode5.c: 139:                 for(x=8;x<10;x++){
   532  0008D0  0E08               	movlw	8
   533  0008D2  6E56               	movwf	main@x^0,c
   534  0008D4                     l1564:
   535                           
   536                           ;maincode5.c: 140:                     LATE=efectos[x];
   537  0008D4  0E01               	movlw	low _efectos
   538  0008D6  2456               	addwf	main@x^0,w,c
   539  0008D8  6ED9               	movwf	fsr2l,c
   540  0008DA  6ADA               	clrf	fsr2h,c
   541  0008DC  0E00               	movlw	high _efectos
   542  0008DE  22DA               	addwfc	fsr2h,f,c
   543  0008E0  50DF               	movf	indf2,w,c
   544  0008E2  6E8D               	movwf	141,c	;volatile
   545  0008E4                     
   546                           ;maincode5.c: 141:                     vis_LEDs_LCD();
   547  0008E4  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   548  0008E8                     
   549                           ;maincode5.c: 142:                     retardo_vis();
   550  0008E8  EC24  F005         	call	_retardo_vis	;wreg free
   551  0008EC                     
   552                           ;maincode5.c: 143:                 }
   553  0008EC  2A56               	incf	main@x^0,f,c
   554  0008EE  0E09               	movlw	9
   555  0008F0  6456               	cpfsgt	main@x^0,c
   556  0008F2  EF7D  F004         	goto	u451
   557  0008F6  EF7F  F004         	goto	u450
   558  0008FA                     u451:
   559  0008FA  EF6A  F004         	goto	l1564
   560  0008FE                     u450:
   561  0008FE  EFB1  F004         	goto	l1608
   562  000902                     l1574:
   563                           
   564                           ; BSR set to: 0
   565                           ;maincode5.c: 146:                 for(x=10;x<18;x++){
   566  000902  0E0A               	movlw	10
   567  000904  6E56               	movwf	main@x^0,c
   568  000906                     l1580:
   569                           
   570                           ;maincode5.c: 147:                     LATE=efectos[x];
   571  000906  0E01               	movlw	low _efectos
   572  000908  2456               	addwf	main@x^0,w,c
   573  00090A  6ED9               	movwf	fsr2l,c
   574  00090C  6ADA               	clrf	fsr2h,c
   575  00090E  0E00               	movlw	high _efectos
   576  000910  22DA               	addwfc	fsr2h,f,c
   577  000912  50DF               	movf	indf2,w,c
   578  000914  6E8D               	movwf	141,c	;volatile
   579  000916                     
   580                           ;maincode5.c: 148:                     vis_LEDs_LCD();
   581  000916  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   582  00091A                     
   583                           ;maincode5.c: 149:                     retardo_vis();
   584  00091A  EC24  F005         	call	_retardo_vis	;wreg free
   585  00091E                     
   586                           ;maincode5.c: 150:                 }
   587  00091E  2A56               	incf	main@x^0,f,c
   588  000920  0E11               	movlw	17
   589  000922  6456               	cpfsgt	main@x^0,c
   590  000924  EF96  F004         	goto	u461
   591  000928  EF98  F004         	goto	u460
   592  00092C                     u461:
   593  00092C  EF83  F004         	goto	l1580
   594  000930                     u460:
   595  000930  EFB1  F004         	goto	l1608
   596  000934                     l1590:
   597                           
   598                           ; BSR set to: 0
   599                           ;maincode5.c: 153:                 for(x=17;x<24;x++){
   600  000934  0E11               	movlw	17
   601  000936  6E56               	movwf	main@x^0,c
   602  000938                     l1596:
   603                           
   604                           ;maincode5.c: 154:                     LATE=efectos[x];
   605  000938  0E01               	movlw	low _efectos
   606  00093A  2456               	addwf	main@x^0,w,c
   607  00093C  6ED9               	movwf	fsr2l,c
   608  00093E  6ADA               	clrf	fsr2h,c
   609  000940  0E00               	movlw	high _efectos
   610  000942  22DA               	addwfc	fsr2h,f,c
   611  000944  50DF               	movf	indf2,w,c
   612  000946  6E8D               	movwf	141,c	;volatile
   613  000948                     
   614                           ;maincode5.c: 155:                     vis_LEDs_LCD();
   615  000948  ECD9  F004         	call	_vis_LEDs_LCD	;wreg free
   616  00094C                     
   617                           ;maincode5.c: 156:                     retardo_vis();
   618  00094C  EC24  F005         	call	_retardo_vis	;wreg free
   619  000950                     
   620                           ;maincode5.c: 157:                 }
   621  000950  2A56               	incf	main@x^0,f,c
   622  000952  0E17               	movlw	23
   623  000954  6456               	cpfsgt	main@x^0,c
   624  000956  EFAF  F004         	goto	u471
   625  00095A  EFB1  F004         	goto	u470
   626  00095E                     u471:
   627  00095E  EF9C  F004         	goto	l1596
   628  000962                     u470:
   629  000962                     l1608:
   630  000962  5058               	movf	_estado_vis^0,w,c
   631  000964  0100               	movlb	0	; () banked
   632  000966  6F60               	movwf	??_main& (0+255),b
   633  000968  6B61               	clrf	(??_main+1)& (0+255),b
   634                           
   635                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   636                           ; Switch size 1, requested type "simple"
   637                           ; Number of cases is 1, Range of values is 0 to 0
   638                           ; switch strategies available:
   639                           ; Name         Instructions Cycles
   640                           ; simple_byte            4     3 (average)
   641                           ;	Chosen strategy is simple_byte
   642  00096A  5161               	movf	(??_main+1)& (0+255),w,b
   643  00096C  0A00               	xorlw	0	; case 0
   644  00096E  B4D8               	btfsc	status,2,c
   645  000970  EFBC  F004         	goto	l1666
   646  000974  EFB1  F004         	goto	l1608
   647  000978                     l1666:
   648                           
   649                           ; BSR set to: 0
   650                           ; Switch size 1, requested type "simple"
   651                           ; Number of cases is 6, Range of values is 0 to 5
   652                           ; switch strategies available:
   653                           ; Name         Instructions Cycles
   654                           ; simple_byte           19    10 (average)
   655                           ;	Chosen strategy is simple_byte
   656  000978  5160               	movf	??_main& (0+255),w,b
   657  00097A  0A00               	xorlw	0	; case 0
   658  00097C  B4D8               	btfsc	status,2,c
   659  00097E  EF1D  F004         	goto	l1510
   660  000982  0A01               	xorlw	1	; case 1
   661  000984  B4D8               	btfsc	status,2,c
   662  000986  EF36  F004         	goto	l1526
   663  00098A  0A03               	xorlw	3	; case 2
   664  00098C  B4D8               	btfsc	status,2,c
   665  00098E  EF4F  F004         	goto	l1542
   666  000992  0A01               	xorlw	1	; case 3
   667  000994  B4D8               	btfsc	status,2,c
   668  000996  EF68  F004         	goto	l1558
   669  00099A  0A07               	xorlw	7	; case 4
   670  00099C  B4D8               	btfsc	status,2,c
   671  00099E  EF81  F004         	goto	l1574
   672  0009A2  0A01               	xorlw	1	; case 5
   673  0009A4  B4D8               	btfsc	status,2,c
   674  0009A6  EF9A  F004         	goto	l1590
   675  0009AA  EFB1  F004         	goto	l1608
   676  0009AE  EF50  F000         	goto	start
   677  0009B2                     __end_of_main:
   678                           	callstack 0
   679                           
   680 ;; *************** function _vis_LEDs_LCD *****************
   681 ;; Defined at:
   682 ;;		line 65 in file "maincode5.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 5
   703 ;; This function calls:
   704 ;;		_ENVIA_CHAR
   705 ;;		_POS_CURSOR
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text1
   712  0009B2                     __ptext1:
   713                           	callstack 0
   714  0009B2                     _vis_LEDs_LCD:
   715                           	callstack 25
   716  0009B2                     
   717                           ;maincode5.c: 66:     POS_CURSOR(2,0);
   718  0009B2  0E00               	movlw	0
   719  0009B4  6E50               	movwf	POS_CURSOR@columna^0,c
   720  0009B6  0E02               	movlw	2
   721  0009B8  EC91  F006         	call	_POS_CURSOR
   722  0009BC                     
   723                           ;maincode5.c: 67:     if(PORTEbits.RE2==0){
   724  0009BC  B484               	btfsc	132,2,c	;volatile
   725  0009BE  EFE3  F004         	goto	u331
   726  0009C2  EFE5  F004         	goto	u330
   727  0009C6                     u331:
   728  0009C6  EFED  F004         	goto	l1368
   729  0009CA                     u330:
   730  0009CA                     
   731                           ;maincode5.c: 68:         ENVIA_CHAR(0);
   732  0009CA  0E00               	movlw	0
   733  0009CC  ECE2  F006         	call	_ENVIA_CHAR
   734                           
   735                           ;maincode5.c: 69:         ENVIA_CHAR(1);
   736  0009D0  0E01               	movlw	1
   737  0009D2  ECE2  F006         	call	_ENVIA_CHAR
   738                           
   739                           ;maincode5.c: 70:     }
   740  0009D6  EFF3  F004         	goto	l150
   741  0009DA                     l1368:
   742                           
   743                           ;maincode5.c: 72:         ENVIA_CHAR(2);
   744  0009DA  0E02               	movlw	2
   745  0009DC  ECE2  F006         	call	_ENVIA_CHAR
   746                           
   747                           ;maincode5.c: 73:         ENVIA_CHAR(3);
   748  0009E0  0E03               	movlw	3
   749  0009E2  ECE2  F006         	call	_ENVIA_CHAR
   750  0009E6                     l150:
   751                           
   752                           ;maincode5.c: 75:     ENVIA_CHAR(' ');
   753  0009E6  0E20               	movlw	32
   754  0009E8  ECE2  F006         	call	_ENVIA_CHAR
   755  0009EC                     
   756                           ;maincode5.c: 76:     if(PORTEbits.RE1==0){
   757  0009EC  B284               	btfsc	132,1,c	;volatile
   758  0009EE  EFFB  F004         	goto	u341
   759  0009F2  EFFD  F004         	goto	u340
   760  0009F6                     u341:
   761  0009F6  EF05  F005         	goto	l1374
   762  0009FA                     u340:
   763  0009FA                     
   764                           ;maincode5.c: 77:         ENVIA_CHAR(0);
   765  0009FA  0E00               	movlw	0
   766  0009FC  ECE2  F006         	call	_ENVIA_CHAR
   767                           
   768                           ;maincode5.c: 78:         ENVIA_CHAR(1);
   769  000A00  0E01               	movlw	1
   770  000A02  ECE2  F006         	call	_ENVIA_CHAR
   771                           
   772                           ;maincode5.c: 79:     }
   773  000A06  EF0B  F005         	goto	l152
   774  000A0A                     l1374:
   775                           
   776                           ;maincode5.c: 81:         ENVIA_CHAR(2);
   777  000A0A  0E02               	movlw	2
   778  000A0C  ECE2  F006         	call	_ENVIA_CHAR
   779                           
   780                           ;maincode5.c: 82:         ENVIA_CHAR(3);
   781  000A10  0E03               	movlw	3
   782  000A12  ECE2  F006         	call	_ENVIA_CHAR
   783  000A16                     l152:
   784                           
   785                           ;maincode5.c: 84:     ENVIA_CHAR(' ');
   786  000A16  0E20               	movlw	32
   787  000A18  ECE2  F006         	call	_ENVIA_CHAR
   788  000A1C                     
   789                           ;maincode5.c: 85:     if(PORTEbits.RE0==0){
   790  000A1C  B084               	btfsc	132,0,c	;volatile
   791  000A1E  EF13  F005         	goto	u351
   792  000A22  EF15  F005         	goto	u350
   793  000A26                     u351:
   794  000A26  EF1D  F005         	goto	l1380
   795  000A2A                     u350:
   796  000A2A                     
   797                           ;maincode5.c: 86:         ENVIA_CHAR(0);
   798  000A2A  0E00               	movlw	0
   799  000A2C  ECE2  F006         	call	_ENVIA_CHAR
   800                           
   801                           ;maincode5.c: 87:         ENVIA_CHAR(1);
   802  000A30  0E01               	movlw	1
   803  000A32  ECE2  F006         	call	_ENVIA_CHAR
   804                           
   805                           ;maincode5.c: 88:     }
   806  000A36  EF23  F005         	goto	l155
   807  000A3A                     l1380:
   808                           
   809                           ;maincode5.c: 90:         ENVIA_CHAR(2);
   810  000A3A  0E02               	movlw	2
   811  000A3C  ECE2  F006         	call	_ENVIA_CHAR
   812                           
   813                           ;maincode5.c: 91:         ENVIA_CHAR(3);
   814  000A40  0E03               	movlw	3
   815  000A42  ECE2  F006         	call	_ENVIA_CHAR
   816  000A46                     l155:
   817  000A46  0012               	return		;funcret
   818  000A48                     __end_of_vis_LEDs_LCD:
   819                           	callstack 0
   820                           
   821 ;; *************** function _POS_CURSOR *****************
   822 ;; Defined at:
   823 ;;		line 6 in file "LCD.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  fila            1    wreg     unsigned char 
   826 ;;  columna         1    9[COMRAM] unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  fila            1   10[COMRAM] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   838 ;;      Params:         1       0       0       0       0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0
   841 ;;      Totals:         2       0       0       0       0       0       0       0       0
   842 ;;Total ram usage:        2 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 4
   845 ;; This function calls:
   846 ;;		_ENVIA_LCD_CMD
   847 ;; This function is called by:
   848 ;;		_vis_LEDs_LCD
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text2
   854  000D22                     __ptext2:
   855                           	callstack 0
   856  000D22                     _POS_CURSOR:
   857                           	callstack 25
   858                           
   859                           ;incstack = 0
   860                           ;POS_CURSOR@fila stored from wreg
   861  000D22  6E51               	movwf	POS_CURSOR@fila^0,c
   862  000D24                     
   863                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   864  000D24  0451               	decf	POS_CURSOR@fila^0,w,c
   865  000D26  A4D8               	btfss	status,2,c
   866  000D28  EF98  F006         	goto	u291
   867  000D2C  EF9A  F006         	goto	u290
   868  000D30                     u291:
   869  000D30  EFA0  F006         	goto	l1314
   870  000D34                     u290:
   871  000D34                     
   872                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   873  000D34  5050               	movf	POS_CURSOR@columna^0,w,c
   874  000D36  0F80               	addlw	128
   875  000D38  ECAE  F006         	call	_ENVIA_LCD_CMD
   876                           
   877                           ;LCD.c: 11:  }
   878  000D3C  EFAD  F006         	goto	l24
   879  000D40                     l1314:
   880  000D40  0E02               	movlw	2
   881  000D42  1851               	xorwf	POS_CURSOR@fila^0,w,c
   882  000D44  A4D8               	btfss	status,2,c
   883  000D46  EFA7  F006         	goto	u301
   884  000D4A  EFA9  F006         	goto	u300
   885  000D4E                     u301:
   886  000D4E  EFAD  F006         	goto	l24
   887  000D52                     u300:
   888  000D52                     
   889                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   890  000D52  5050               	movf	POS_CURSOR@columna^0,w,c
   891  000D54  0FC0               	addlw	192
   892  000D56  ECAE  F006         	call	_ENVIA_LCD_CMD
   893  000D5A                     l24:
   894  000D5A  0012               	return		;funcret
   895  000D5C                     __end_of_POS_CURSOR:
   896                           	callstack 0
   897                           
   898 ;; *************** function _retardo_vis *****************
   899 ;; Defined at:
   900 ;;		line 95 in file "maincode5.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   914 ;;      Params:         0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0
   916 ;;      Temps:          2       0       0       0       0       0       0       0       0
   917 ;;      Totals:         2       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        2 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 2
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text3
   929  000A48                     __ptext3:
   930                           	callstack 0
   931  000A48                     _retardo_vis:
   932                           	callstack 28
   933  000A48                     
   934                           ;maincode5.c: 96:     switch(estado_vel){
   935  000A48  EF4B  F005         	goto	l1130
   936  000A4C                     l1122:
   937                           
   938                           ;maincode5.c: 98:             _delay((unsigned long)((80)*(8000000UL/4000.0)));
   939  000A4C  0ED0               	movlw	208
   940  000A4E  6E4D               	movwf	??_retardo_vis^0,c
   941  000A50  0ECA               	movlw	202
   942  000A52                     u487:
   943  000A52  2EE8               	decfsz	wreg,f,c
   944  000A54  D7FE               	bra	u487
   945  000A56  2E4D               	decfsz	??_retardo_vis^0,f,c
   946  000A58  D7FC               	bra	u487
   947                           
   948                           ;maincode5.c: 99:             break;
   949  000A5A  EF64  F005         	goto	l163
   950  000A5E                     l1124:
   951                           
   952                           ;maincode5.c: 101:             _delay((unsigned long)((200)*(8000000UL/4000.0)));
   953  000A5E  0E03               	movlw	3
   954  000A60  6E4E               	movwf	(??_retardo_vis+1)^0,c
   955  000A62  0E08               	movlw	8
   956  000A64  6E4D               	movwf	??_retardo_vis^0,c
   957  000A66  0E77               	movlw	119
   958  000A68                     u497:
   959  000A68  2EE8               	decfsz	wreg,f,c
   960  000A6A  D7FE               	bra	u497
   961  000A6C  2E4D               	decfsz	??_retardo_vis^0,f,c
   962  000A6E  D7FC               	bra	u497
   963  000A70  2E4E               	decfsz	(??_retardo_vis+1)^0,f,c
   964  000A72  D7FA               	bra	u497
   965  000A74  F000               	nop	
   966                           
   967                           ;maincode5.c: 102:             break;
   968  000A76  EF64  F005         	goto	l163
   969  000A7A                     l1126:
   970                           
   971                           ;maincode5.c: 104:             _delay((unsigned long)((400)*(8000000UL/4000.0)));
   972  000A7A  0E05               	movlw	5
   973  000A7C  6E4E               	movwf	(??_retardo_vis+1)^0,c
   974  000A7E  0E0F               	movlw	15
   975  000A80  6E4D               	movwf	??_retardo_vis^0,c
   976  000A82  0EF1               	movlw	241
   977  000A84                     u507:
   978  000A84  2EE8               	decfsz	wreg,f,c
   979  000A86  D7FE               	bra	u507
   980  000A88  2E4D               	decfsz	??_retardo_vis^0,f,c
   981  000A8A  D7FC               	bra	u507
   982  000A8C  2E4E               	decfsz	(??_retardo_vis+1)^0,f,c
   983  000A8E  D7FA               	bra	u507
   984  000A90  F000               	nop	
   985                           
   986                           ;maincode5.c: 105:             break;
   987  000A92  EF64  F005         	goto	l163
   988  000A96                     l1130:
   989  000A96  5057               	movf	_estado_vel^0,w,c
   990  000A98  6E4D               	movwf	??_retardo_vis^0,c
   991  000A9A  6A4E               	clrf	(??_retardo_vis+1)^0,c
   992                           
   993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   994                           ; Switch size 1, requested type "simple"
   995                           ; Number of cases is 1, Range of values is 0 to 0
   996                           ; switch strategies available:
   997                           ; Name         Instructions Cycles
   998                           ; simple_byte            4     3 (average)
   999                           ;	Chosen strategy is simple_byte
  1000  000A9C  504E               	movf	(??_retardo_vis+1)^0,w,c
  1001  000A9E  0A00               	xorlw	0	; case 0
  1002  000AA0  B4D8               	btfsc	status,2,c
  1003  000AA2  EF55  F005         	goto	l1668
  1004  000AA6  EF64  F005         	goto	l163
  1005  000AAA                     l1668:
  1006                           
  1007                           ; Switch size 1, requested type "simple"
  1008                           ; Number of cases is 3, Range of values is 0 to 2
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte           10     6 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013  000AAA  504D               	movf	??_retardo_vis^0,w,c
  1014  000AAC  0A00               	xorlw	0	; case 0
  1015  000AAE  B4D8               	btfsc	status,2,c
  1016  000AB0  EF26  F005         	goto	l1122
  1017  000AB4  0A01               	xorlw	1	; case 1
  1018  000AB6  B4D8               	btfsc	status,2,c
  1019  000AB8  EF2F  F005         	goto	l1124
  1020  000ABC  0A03               	xorlw	3	; case 2
  1021  000ABE  B4D8               	btfsc	status,2,c
  1022  000AC0  EF3D  F005         	goto	l1126
  1023  000AC4  EF64  F005         	goto	l163
  1024  000AC8                     l163:
  1025  000AC8  0012               	return		;funcret
  1026  000ACA                     __end_of_retardo_vis:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _init_LCD *****************
  1030 ;; Defined at:
  1031 ;;		line 52 in file "maincode5.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1047 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1048 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1049 ;;Total ram usage:        1 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 5
  1052 ;; This function calls:
  1053 ;;		_BORRAR_LCD
  1054 ;;		_CURSOR_HOME
  1055 ;;		_CURSOR_ONOFF
  1056 ;;		_GENERACARACTER
  1057 ;;		_LCD_CONFIG
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text4
  1064  000B3C                     __ptext4:
  1065                           	callstack 0
  1066  000B3C                     _init_LCD:
  1067                           	callstack 25
  1068  000B3C                     
  1069                           ;maincode5.c: 53:     TRISD = 0x00;
  1070  000B3C  0E00               	movlw	0
  1071  000B3E  6E95               	movwf	149,c	;volatile
  1072  000B40                     
  1073                           ;maincode5.c: 54:     LCD_CONFIG();
  1074  000B40  ECD2  F005         	call	_LCD_CONFIG	;wreg free
  1075  000B44                     
  1076                           ;maincode5.c: 55:     _delay((unsigned long)((24)*(8000000UL/4000.0)));
  1077  000B44  0E3F               	movlw	63
  1078  000B46  6E54               	movwf	??_init_LCD^0,c
  1079  000B48  0E55               	movlw	85
  1080  000B4A                     u517:
  1081  000B4A  2EE8               	decfsz	wreg,f,c
  1082  000B4C  D7FE               	bra	u517
  1083  000B4E  2E54               	decfsz	??_init_LCD^0,f,c
  1084  000B50  D7FC               	bra	u517
  1085  000B52  F000               	nop	
  1086  000B54                     
  1087                           ;maincode5.c: 56:     BORRAR_LCD();
  1088  000B54  EC3F  F007         	call	_BORRAR_LCD	;wreg free
  1089  000B58                     
  1090                           ;maincode5.c: 57:     CURSOR_HOME();
  1091  000B58  EC3B  F007         	call	_CURSOR_HOME	;wreg free
  1092  000B5C                     
  1093                           ;maincode5.c: 58:     CURSOR_ONOFF(1);
  1094  000B5C  0E01               	movlw	1
  1095  000B5E  EC15  F007         	call	_CURSOR_ONOFF
  1096  000B62                     
  1097                           ;maincode5.c: 59:     GENERACARACTER(LED_OFF1,0);
  1098  000B62  0E3F               	movlw	low _LED_OFF1
  1099  000B64  6E50               	movwf	GENERACARACTER@vector^0,c
  1100  000B66  0E00               	movlw	high _LED_OFF1
  1101  000B68  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
  1102  000B6A  0E00               	movlw	0
  1103  000B6C  6E52               	movwf	GENERACARACTER@pos^0,c
  1104  000B6E  EC73  F006         	call	_GENERACARACTER	;wreg free
  1105  000B72                     
  1106                           ;maincode5.c: 60:     GENERACARACTER(LED_OFF2,1);
  1107  000B72  0E37               	movlw	low _LED_OFF2
  1108  000B74  6E50               	movwf	GENERACARACTER@vector^0,c
  1109  000B76  0E00               	movlw	high _LED_OFF2
  1110  000B78  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
  1111  000B7A  0E01               	movlw	1
  1112  000B7C  6E52               	movwf	GENERACARACTER@pos^0,c
  1113  000B7E  EC73  F006         	call	_GENERACARACTER	;wreg free
  1114  000B82                     
  1115                           ;maincode5.c: 61:     GENERACARACTER(LED_ON1,2);
  1116  000B82  0E27               	movlw	low _LED_ON1
  1117  000B84  6E50               	movwf	GENERACARACTER@vector^0,c
  1118  000B86  0E00               	movlw	high _LED_ON1
  1119  000B88  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
  1120  000B8A  0E02               	movlw	2
  1121  000B8C  6E52               	movwf	GENERACARACTER@pos^0,c
  1122  000B8E  EC73  F006         	call	_GENERACARACTER	;wreg free
  1123  000B92                     
  1124                           ;maincode5.c: 62:     GENERACARACTER(LED_ON2,3);
  1125  000B92  0E2F               	movlw	low _LED_ON2
  1126  000B94  6E50               	movwf	GENERACARACTER@vector^0,c
  1127  000B96  0E00               	movlw	high _LED_ON2
  1128  000B98  6E51               	movwf	(GENERACARACTER@vector+1)^0,c
  1129  000B9A  0E03               	movlw	3
  1130  000B9C  6E52               	movwf	GENERACARACTER@pos^0,c
  1131  000B9E  EC73  F006         	call	_GENERACARACTER	;wreg free
  1132  000BA2  0012               	return		;funcret
  1133  000BA4                     __end_of_init_LCD:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _LCD_CONFIG *****************
  1137 ;; Defined at:
  1138 ;;		line 72 in file "LCD.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1155 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 4
  1159 ;; This function calls:
  1160 ;;		_ENVIA_LCD_CMD
  1161 ;;		_ENVIA_NIBBLE
  1162 ;; This function is called by:
  1163 ;;		_init_LCD
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text5
  1168  000BA4                     __ptext5:
  1169                           	callstack 0
  1170  000BA4                     _LCD_CONFIG:
  1171                           	callstack 25
  1172  000BA4                     
  1173                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1174  000BA4  908C               	bcf	140,0,c	;volatile
  1175                           
  1176                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1177  000BA6  928C               	bcf	140,1,c	;volatile
  1178  000BA8                     
  1179                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1180  000BA8  0E30               	movlw	48
  1181  000BAA  EC2D  F007         	call	_ENVIA_NIBBLE
  1182  000BAE                     
  1183                           ;LCD.c: 77:         _delay(24000);
  1184  000BAE  0E20               	movlw	32
  1185  000BB0  6E50               	movwf	??_LCD_CONFIG^0,c
  1186  000BB2  0E2A               	movlw	42
  1187  000BB4                     u527:
  1188  000BB4  2EE8               	decfsz	wreg,f,c
  1189  000BB6  D7FE               	bra	u527
  1190  000BB8  2E50               	decfsz	??_LCD_CONFIG^0,f,c
  1191  000BBA  D7FC               	bra	u527
  1192  000BBC                     
  1193                           ;LCD.c: 78:         _delay(24000);
  1194  000BBC  0E20               	movlw	32
  1195  000BBE  6E50               	movwf	??_LCD_CONFIG^0,c
  1196  000BC0  0E2A               	movlw	42
  1197  000BC2                     u537:
  1198  000BC2  2EE8               	decfsz	wreg,f,c
  1199  000BC4  D7FE               	bra	u537
  1200  000BC6  2E50               	decfsz	??_LCD_CONFIG^0,f,c
  1201  000BC8  D7FC               	bra	u537
  1202                           
  1203                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1204  000BCA  0E30               	movlw	48
  1205  000BCC  EC2D  F007         	call	_ENVIA_NIBBLE
  1206  000BD0                     
  1207                           ;LCD.c: 83:  _delay(1200);
  1208  000BD0  0EF0               	movlw	240
  1209  000BD2                     u547:
  1210  000BD2  D000               	nop2	
  1211  000BD4  2EE8               	decfsz	wreg,f,c
  1212  000BD6  D7FD               	bra	u547
  1213  000BD8                     
  1214                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1215  000BD8  0E30               	movlw	48
  1216  000BDA  EC2D  F007         	call	_ENVIA_NIBBLE
  1217  000BDE                     
  1218                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1219  000BDE  0E20               	movlw	32
  1220  000BE0  EC2D  F007         	call	_ENVIA_NIBBLE
  1221  000BE4                     
  1222                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1223  000BE4  0E01               	movlw	1
  1224  000BE6  ECAE  F006         	call	_ENVIA_LCD_CMD
  1225  000BEA                     
  1226                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1227  000BEA  0E28               	movlw	40
  1228  000BEC  ECAE  F006         	call	_ENVIA_LCD_CMD
  1229  000BF0                     
  1230                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1231  000BF0  0E0F               	movlw	15
  1232  000BF2  ECAE  F006         	call	_ENVIA_LCD_CMD
  1233  000BF6                     
  1234                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1235  000BF6  0E06               	movlw	6
  1236  000BF8  ECAE  F006         	call	_ENVIA_LCD_CMD
  1237  000BFC                     
  1238                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1239  000BFC  0E01               	movlw	1
  1240  000BFE  ECAE  F006         	call	_ENVIA_LCD_CMD
  1241  000C02  0012               	return		;funcret
  1242  000C04                     __end_of_LCD_CONFIG:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _GENERACARACTER *****************
  1246 ;; Defined at:
  1247 ;;		line 153 in file "LCD.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  vector          2    9[COMRAM] PTR const unsigned char 
  1250 ;;		 -> LED_ON2(8), LED_ON1(8), LED_OFF2(8), LED_OFF1(8), 
  1251 ;;  pos             1   11[COMRAM] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  i               1   12[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         3       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        4 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 4
  1270 ;; This function calls:
  1271 ;;		_ENVIA_CHAR
  1272 ;;		_ENVIA_LCD_CMD
  1273 ;; This function is called by:
  1274 ;;		_init_LCD
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text6
  1279  000CE6                     __ptext6:
  1280                           	callstack 0
  1281  000CE6                     _GENERACARACTER:
  1282                           	callstack 25
  1283  000CE6                     
  1284                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1285  000CE6  5052               	movf	GENERACARACTER@pos^0,w,c
  1286  000CE8  0D08               	mullw	8
  1287  000CEA  50F3               	movf	243,w,c
  1288  000CEC  0F40               	addlw	64
  1289  000CEE  ECAE  F006         	call	_ENVIA_LCD_CMD
  1290  000CF2                     
  1291                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1292  000CF2  0E00               	movlw	0
  1293  000CF4  6E53               	movwf	GENERACARACTER@i^0,c
  1294  000CF6                     l1326:
  1295                           
  1296                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1297  000CF6  5053               	movf	GENERACARACTER@i^0,w,c
  1298  000CF8  2450               	addwf	GENERACARACTER@vector^0,w,c
  1299  000CFA  6ED9               	movwf	fsr2l,c
  1300  000CFC  0E00               	movlw	0
  1301  000CFE  2051               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1302  000D00  6EDA               	movwf	fsr2h,c
  1303  000D02  50DF               	movf	indf2,w,c
  1304  000D04  ECE2  F006         	call	_ENVIA_CHAR
  1305  000D08                     
  1306                           ;LCD.c: 160:  }
  1307  000D08  2A53               	incf	GENERACARACTER@i^0,f,c
  1308  000D0A  0E07               	movlw	7
  1309  000D0C  6453               	cpfsgt	GENERACARACTER@i^0,c
  1310  000D0E  EF8B  F006         	goto	u311
  1311  000D12  EF8D  F006         	goto	u310
  1312  000D16                     u311:
  1313  000D16  EF7B  F006         	goto	l1326
  1314  000D1A                     u310:
  1315  000D1A                     
  1316                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1317  000D1A  0E80               	movlw	128
  1318  000D1C  ECAE  F006         	call	_ENVIA_LCD_CMD
  1319  000D20  0012               	return		;funcret
  1320  000D22                     __end_of_GENERACARACTER:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _CURSOR_ONOFF *****************
  1324 ;; Defined at:
  1325 ;;		line 35 in file "LCD.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  estado          1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  estado          1    9[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used: 1
  1345 ;; Hardware stack levels required when called: 4
  1346 ;; This function calls:
  1347 ;;		_ENVIA_LCD_CMD
  1348 ;; This function is called by:
  1349 ;;		_init_LCD
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text7
  1354  000E2A                     __ptext7:
  1355                           	callstack 0
  1356  000E2A                     _CURSOR_ONOFF:
  1357                           	callstack 25
  1358                           
  1359                           ;incstack = 0
  1360                           ;CURSOR_ONOFF@estado stored from wreg
  1361  000E2A  6E50               	movwf	CURSOR_ONOFF@estado^0,c
  1362  000E2C                     
  1363                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1364  000E2C  5050               	movf	CURSOR_ONOFF@estado^0,w,c
  1365  000E2E  A4D8               	btfss	status,2,c
  1366  000E30  EF1C  F007         	goto	u41
  1367  000E34  EF1E  F007         	goto	u40
  1368  000E38                     u41:
  1369  000E38  EF21  F007         	goto	l998
  1370  000E3C                     u40:
  1371  000E3C  0E0E               	movlw	14
  1372  000E3E  ECAE  F006         	call	_ENVIA_LCD_CMD
  1373  000E42                     l998:
  1374                           
  1375                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1376  000E42  0450               	decf	CURSOR_ONOFF@estado^0,w,c
  1377  000E44  A4D8               	btfss	status,2,c
  1378  000E46  EF27  F007         	goto	u51
  1379  000E4A  EF29  F007         	goto	u50
  1380  000E4E                     u51:
  1381  000E4E  EF2C  F007         	goto	l42
  1382  000E52                     u50:
  1383  000E52  0E0C               	movlw	12
  1384  000E54  ECAE  F006         	call	_ENVIA_LCD_CMD
  1385  000E58                     l42:
  1386  000E58  0012               	return		;funcret
  1387  000E5A                     __end_of_CURSOR_ONOFF:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function _CURSOR_HOME *****************
  1391 ;; Defined at:
  1392 ;;		line 30 in file "LCD.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;		None
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         0       0       0       0       0       0       0       0       0
  1407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1409 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1410 ;;Total ram usage:        0 bytes
  1411 ;; Hardware stack levels used: 1
  1412 ;; Hardware stack levels required when called: 4
  1413 ;; This function calls:
  1414 ;;		_ENVIA_LCD_CMD
  1415 ;; This function is called by:
  1416 ;;		_init_LCD
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text8
  1421  000E76                     __ptext8:
  1422                           	callstack 0
  1423  000E76                     _CURSOR_HOME:
  1424                           	callstack 25
  1425  000E76                     
  1426                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1427  000E76  0E02               	movlw	2
  1428  000E78  ECAE  F006         	call	_ENVIA_LCD_CMD
  1429  000E7C  0012               	return		;funcret
  1430  000E7E                     __end_of_CURSOR_HOME:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _BORRAR_LCD *****************
  1434 ;; Defined at:
  1435 ;;		line 67 in file "LCD.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;		None
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;		None
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1449 ;;      Params:         0       0       0       0       0       0       0       0       0
  1450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1451 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1452 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1453 ;;Total ram usage:        0 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 4
  1456 ;; This function calls:
  1457 ;;		_ENVIA_LCD_CMD
  1458 ;; This function is called by:
  1459 ;;		_init_LCD
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text9
  1464  000E7E                     __ptext9:
  1465                           	callstack 0
  1466  000E7E                     _BORRAR_LCD:
  1467                           	callstack 25
  1468  000E7E                     
  1469                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1470  000E7E  0E01               	movlw	1
  1471  000E80  ECAE  F006         	call	_ENVIA_LCD_CMD
  1472  000E84  0012               	return		;funcret
  1473  000E86                     __end_of_BORRAR_LCD:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _ENVIA_LCD_CMD *****************
  1477 ;; Defined at:
  1478 ;;		line 104 in file "LCD.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  dato            1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  dato            1    7[COMRAM] unsigned char 
  1483 ;;  aux             1    8[COMRAM] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:         0       0       0       0       0       0       0       0       0
  1494 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 3
  1500 ;; This function calls:
  1501 ;;		_ENVIA_NIBBLE
  1502 ;;		_LEER_LCD
  1503 ;; This function is called by:
  1504 ;;		_POS_CURSOR
  1505 ;;		_CURSOR_HOME
  1506 ;;		_CURSOR_ONOFF
  1507 ;;		_BORRAR_LCD
  1508 ;;		_LCD_CONFIG
  1509 ;;		_GENERACARACTER
  1510 ;;		_BLINK_CURSOR
  1511 ;;		_DISPLAY_ONOFF
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text10
  1516  000D5C                     __ptext10:
  1517                           	callstack 0
  1518  000D5C                     _ENVIA_LCD_CMD:
  1519                           	callstack 25
  1520                           
  1521                           ;incstack = 0
  1522                           ;ENVIA_LCD_CMD@dato stored from wreg
  1523  000D5C  6E4E               	movwf	ENVIA_LCD_CMD@dato^0,c
  1524  000D5E                     
  1525                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1526  000D5E  908C               	bcf	140,0,c	;volatile
  1527  000D60                     
  1528                           ;LCD.c: 108:  LEER_LCD();
  1529  000D60  EC65  F005         	call	_LEER_LCD	;wreg free
  1530  000D64                     
  1531                           ;LCD.c: 109:  TRISD = 0b00000000;
  1532  000D64  0E00               	movlw	0
  1533  000D66  6E95               	movwf	149,c	;volatile
  1534  000D68                     
  1535                           ;LCD.c: 111:         _delay(1200);
  1536  000D68  0EF0               	movlw	240
  1537  000D6A                     u557:
  1538  000D6A  D000               	nop2	
  1539  000D6C  2EE8               	decfsz	wreg,f,c
  1540  000D6E  D7FD               	bra	u557
  1541  000D70                     
  1542                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1543  000D70  928C               	bcf	140,1,c	;volatile
  1544  000D72                     
  1545                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1546  000D72  948C               	bcf	140,2,c	;volatile
  1547  000D74                     
  1548                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1549  000D74  908C               	bcf	140,0,c	;volatile
  1550  000D76                     
  1551                           ;LCD.c: 115:  aux = dato & 0xF0;
  1552  000D76  504E               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1553  000D78  0BF0               	andlw	240
  1554  000D7A  6E4F               	movwf	ENVIA_LCD_CMD@aux^0,c
  1555  000D7C                     
  1556                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1557  000D7C  504F               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1558  000D7E  EC2D  F007         	call	_ENVIA_NIBBLE
  1559  000D82                     
  1560                           ;LCD.c: 117:  aux = dato<<4;
  1561  000D82  384E               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1562  000D84  0BF0               	andlw	240
  1563  000D86  6E4F               	movwf	ENVIA_LCD_CMD@aux^0,c
  1564  000D88                     
  1565                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1566  000D88  504F               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1567  000D8A  EC2D  F007         	call	_ENVIA_NIBBLE
  1568  000D8E  0012               	return		;funcret
  1569  000D90                     __end_of_ENVIA_LCD_CMD:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _configuro *****************
  1573 ;; Defined at:
  1574 ;;		line 30 in file "maincode5.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 2
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text11
  1603  000D90                     __ptext11:
  1604                           	callstack 0
  1605  000D90                     _configuro:
  1606                           	callstack 28
  1607  000D90                     
  1608                           ;maincode5.c: 31:     OSCCON = 0x70;
  1609  000D90  0E70               	movlw	112
  1610  000D92  6ED3               	movwf	211,c	;volatile
  1611                           
  1612                           ;maincode5.c: 32:     ADCON1 = 0x0F;
  1613  000D94  0E0F               	movlw	15
  1614  000D96  6EC1               	movwf	193,c	;volatile
  1615                           
  1616                           ;maincode5.c: 33:     CMCON = 0x07;
  1617  000D98  0E07               	movlw	7
  1618  000D9A  6EB4               	movwf	180,c	;volatile
  1619                           
  1620                           ;maincode5.c: 34:     CVRCON = 0x00;
  1621  000D9C  0E00               	movlw	0
  1622  000D9E  6EB5               	movwf	181,c	;volatile
  1623                           
  1624                           ;maincode5.c: 35:     TRISE = 0xF8;
  1625  000DA0  0EF8               	movlw	248
  1626  000DA2  6E96               	movwf	150,c	;volatile
  1627  000DA4                     
  1628                           ;maincode5.c: 36:     RCONbits.IPEN = 1;
  1629  000DA4  8ED0               	bsf	208,7,c	;volatile
  1630  000DA6                     
  1631                           ;maincode5.c: 37:     INTCONbits.GIEH = 1;
  1632  000DA6  8EF2               	bsf	242,7,c	;volatile
  1633  000DA8                     
  1634                           ;maincode5.c: 38:     INTCONbits.GIEL = 1;
  1635  000DA8  8CF2               	bsf	242,6,c	;volatile
  1636  000DAA                     
  1637                           ;maincode5.c: 39:     INTCONbits.INT0IE = 1;
  1638  000DAA  88F2               	bsf	242,4,c	;volatile
  1639  000DAC                     
  1640                           ;maincode5.c: 40:     INTCON2bits.RBPU = 0;
  1641  000DAC  9EF1               	bcf	241,7,c	;volatile
  1642  000DAE                     
  1643                           ;maincode5.c: 41:     INTCON2bits.INTEDG0 = 0;
  1644  000DAE  9CF1               	bcf	241,6,c	;volatile
  1645  000DB0                     
  1646                           ;maincode5.c: 42:     INTCON3bits.INT1IE = 1;
  1647  000DB0  86F0               	bsf	240,3,c	;volatile
  1648  000DB2                     
  1649                           ;maincode5.c: 43:     INTCON2bits.INTEDG1 = 0;
  1650  000DB2  9AF1               	bcf	241,5,c	;volatile
  1651                           
  1652                           ;maincode5.c: 44:     SPBRG = 12;
  1653  000DB4  0E0C               	movlw	12
  1654  000DB6  6EAF               	movwf	175,c	;volatile
  1655  000DB8                     
  1656                           ;maincode5.c: 45:     RCSTAbits.SPEN = 1;
  1657  000DB8  8EAB               	bsf	171,7,c	;volatile
  1658  000DBA                     
  1659                           ;maincode5.c: 46:     TXSTAbits.TXEN = 1;
  1660  000DBA  8AAC               	bsf	172,5,c	;volatile
  1661  000DBC                     
  1662                           ;maincode5.c: 47:     INTCON3bits.INT2IE = 1;
  1663  000DBC  88F0               	bsf	240,4,c	;volatile
  1664  000DBE                     
  1665                           ;maincode5.c: 48:     INTCON2bits.INTEDG2 = 0;
  1666  000DBE  98F1               	bcf	241,4,c	;volatile
  1667  000DC0                     
  1668                           ;maincode5.c: 49:     INTCON3bits.INT2IP = 0;
  1669  000DC0  9EF0               	bcf	240,7,c	;volatile
  1670  000DC2  0012               	return		;funcret
  1671  000DC4                     __end_of_configuro:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _ESCRIBE_MENSAJE *****************
  1675 ;; Defined at:
  1676 ;;		line 41 in file "LCD.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  cadena          2    9[COMRAM] PTR const unsigned char 
  1679 ;;		 -> STR_1(17), 
  1680 ;;  tam             1   11[COMRAM] unsigned char 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  i               1   14[COMRAM] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         3       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        6 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 4
  1699 ;; This function calls:
  1700 ;;		_ENVIA_CHAR
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text12
  1707  000CA8                     __ptext12:
  1708                           	callstack 0
  1709  000CA8                     _ESCRIBE_MENSAJE:
  1710                           	callstack 26
  1711  000CA8                     
  1712                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1713  000CA8  0E00               	movlw	0
  1714  000CAA  6E55               	movwf	ESCRIBE_MENSAJE@i^0,c
  1715                           
  1716                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1717  000CAC  0E00               	movlw	0
  1718  000CAE  6E55               	movwf	ESCRIBE_MENSAJE@i^0,c
  1719  000CB0  EF69  F006         	goto	l1340
  1720  000CB4                     l1336:
  1721                           
  1722                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1723  000CB4  5055               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1724  000CB6  2450               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1725  000CB8  6E53               	movwf	??_ESCRIBE_MENSAJE^0,c
  1726  000CBA  0E00               	movlw	0
  1727  000CBC  2051               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1728  000CBE  6E54               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1729  000CC0  C053  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1730  000CC4  C054  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1731  000CC8                     	if	0	;tblptru may be non-zero
  1732  000CC8                     	endif
  1733  000CC8                     	if	0	;tblptru may be non-zero
  1734  000CC8                     	endif
  1735  000CC8  0008               	tblrd		*
  1736  000CCA  50F5               	movf	tablat,w,c
  1737  000CCC  ECE2  F006         	call	_ENVIA_CHAR
  1738  000CD0                     
  1739                           ;LCD.c: 47:  }
  1740  000CD0  2A55               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1741  000CD2                     l1340:
  1742  000CD2  5052               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1743  000CD4  5C55               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1744  000CD6  A0D8               	btfss	status,0,c
  1745  000CD8  EF70  F006         	goto	u321
  1746  000CDC  EF72  F006         	goto	u320
  1747  000CE0                     u321:
  1748  000CE0  EF5A  F006         	goto	l1336
  1749  000CE4                     u320:
  1750  000CE4  0012               	return		;funcret
  1751  000CE6                     __end_of_ESCRIBE_MENSAJE:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _ENVIA_CHAR *****************
  1755 ;; Defined at:
  1756 ;;		line 50 in file "LCD.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;  dato            1    wreg     unsigned char 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  dato            1    7[COMRAM] unsigned char 
  1761 ;;  aux             1    8[COMRAM] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0
  1772 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1774 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1775 ;;Total ram usage:        2 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 3
  1778 ;; This function calls:
  1779 ;;		_ENVIA_NIBBLE
  1780 ;;		_LEER_LCD
  1781 ;; This function is called by:
  1782 ;;		_ESCRIBE_MENSAJE
  1783 ;;		_GENERACARACTER
  1784 ;;		_vis_LEDs_LCD
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text13
  1789  000DC4                     __ptext13:
  1790                           	callstack 0
  1791  000DC4                     _ENVIA_CHAR:
  1792                           	callstack 26
  1793                           
  1794                           ;incstack = 0
  1795                           ;ENVIA_CHAR@dato stored from wreg
  1796  000DC4  6E4E               	movwf	ENVIA_CHAR@dato^0,c
  1797  000DC6                     
  1798                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1799  000DC6  808C               	bsf	140,0,c	;volatile
  1800  000DC8                     
  1801                           ;LCD.c: 54:  LEER_LCD();
  1802  000DC8  EC65  F005         	call	_LEER_LCD	;wreg free
  1803  000DCC                     
  1804                           ;LCD.c: 55:  TRISD = 0x00;
  1805  000DCC  0E00               	movlw	0
  1806  000DCE  6E95               	movwf	149,c	;volatile
  1807  000DD0                     
  1808                           ;LCD.c: 56:         _delay(1200);
  1809  000DD0  0EF0               	movlw	240
  1810  000DD2                     u567:
  1811  000DD2  D000               	nop2	
  1812  000DD4  2EE8               	decfsz	wreg,f,c
  1813  000DD6  D7FD               	bra	u567
  1814  000DD8                     
  1815                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1816  000DD8  928C               	bcf	140,1,c	;volatile
  1817  000DDA                     
  1818                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1819  000DDA  948C               	bcf	140,2,c	;volatile
  1820  000DDC                     
  1821                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1822  000DDC  808C               	bsf	140,0,c	;volatile
  1823  000DDE                     
  1824                           ;LCD.c: 61:  aux = dato & 0xF0;
  1825  000DDE  504E               	movf	ENVIA_CHAR@dato^0,w,c
  1826  000DE0  0BF0               	andlw	240
  1827  000DE2  6E4F               	movwf	ENVIA_CHAR@aux^0,c
  1828  000DE4                     
  1829                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1830  000DE4  504F               	movf	ENVIA_CHAR@aux^0,w,c
  1831  000DE6  EC2D  F007         	call	_ENVIA_NIBBLE
  1832  000DEA                     
  1833                           ;LCD.c: 63:  aux = dato << 4;
  1834  000DEA  384E               	swapf	ENVIA_CHAR@dato^0,w,c
  1835  000DEC  0BF0               	andlw	240
  1836  000DEE  6E4F               	movwf	ENVIA_CHAR@aux^0,c
  1837  000DF0                     
  1838                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1839  000DF0  504F               	movf	ENVIA_CHAR@aux^0,w,c
  1840  000DF2  EC2D  F007         	call	_ENVIA_NIBBLE
  1841  000DF6  0012               	return		;funcret
  1842  000DF8                     __end_of_ENVIA_CHAR:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _LEER_LCD *****************
  1846 ;; Defined at:
  1847 ;;		line 121 in file "LCD.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  aux             1    6[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        1 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_ENVIA_CHAR
  1872 ;;		_ENVIA_LCD_CMD
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text14
  1877  000ACA                     __ptext14:
  1878                           	callstack 0
  1879  000ACA                     _LEER_LCD:
  1880                           	callstack 25
  1881  000ACA                     
  1882                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1883  000ACA  0EF8               	movlw	248
  1884  000ACC  6E95               	movwf	149,c	;volatile
  1885  000ACE                     
  1886                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1887  000ACE  908C               	bcf	140,0,c	;volatile
  1888  000AD0                     
  1889                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1890  000AD0  828C               	bsf	140,1,c	;volatile
  1891  000AD2                     
  1892                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1893  000AD2  848C               	bsf	140,2,c	;volatile
  1894  000AD4                     
  1895                           ;LCD.c: 128:         _delay(1200);
  1896  000AD4  0EF0               	movlw	240
  1897  000AD6                     u577:
  1898  000AD6  D000               	nop2	
  1899  000AD8  2EE8               	decfsz	wreg,f,c
  1900  000ADA  D7FD               	bra	u577
  1901  000ADC                     
  1902                           ;LCD.c: 130:  aux = PORTD;
  1903  000ADC  CF83 F04D          	movff	3971,LEER_LCD@aux	;volatile
  1904  000AE0                     
  1905                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1906  000AE0  948C               	bcf	140,2,c	;volatile
  1907  000AE2                     
  1908                           ;LCD.c: 132:         _delay(1200);
  1909  000AE2  0EF0               	movlw	240
  1910  000AE4                     u587:
  1911  000AE4  D000               	nop2	
  1912  000AE6  2EE8               	decfsz	wreg,f,c
  1913  000AE8  D7FD               	bra	u587
  1914  000AEA                     
  1915                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1916  000AEA  848C               	bsf	140,2,c	;volatile
  1917  000AEC                     
  1918                           ;LCD.c: 135:         _delay(1200);
  1919  000AEC  0EF0               	movlw	240
  1920  000AEE                     u597:
  1921  000AEE  D000               	nop2	
  1922  000AF0  2EE8               	decfsz	wreg,f,c
  1923  000AF2  D7FD               	bra	u597
  1924  000AF4                     
  1925                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1926  000AF4  948C               	bcf	140,2,c	;volatile
  1927  000AF6                     l916:
  1928                           
  1929                           ;LCD.c: 138:  aux = aux & 0x80;
  1930  000AF6  504D               	movf	LEER_LCD@aux^0,w,c
  1931  000AF8  0B80               	andlw	128
  1932  000AFA  6E4D               	movwf	LEER_LCD@aux^0,c
  1933                           
  1934                           ;LCD.c: 139:  while(aux == 0x80)
  1935  000AFC  EF94  F005         	goto	l930
  1936  000B00                     l67:
  1937                           
  1938                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1939  000B00  848C               	bsf	140,2,c	;volatile
  1940  000B02                     
  1941                           ;LCD.c: 142:             _delay(1200);
  1942  000B02  0EF0               	movlw	240
  1943  000B04                     u607:
  1944  000B04  D000               	nop2	
  1945  000B06  2EE8               	decfsz	wreg,f,c
  1946  000B08  D7FD               	bra	u607
  1947  000B0A                     
  1948                           ;LCD.c: 143:             aux = PORTD;
  1949  000B0A  CF83 F04D          	movff	3971,LEER_LCD@aux	;volatile
  1950  000B0E                     
  1951                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1952  000B0E  948C               	bcf	140,2,c	;volatile
  1953                           
  1954                           ;LCD.c: 145:             _delay(1200);
  1955  000B10  0EF0               	movlw	240
  1956  000B12                     u617:
  1957  000B12  D000               	nop2	
  1958  000B14  2EE8               	decfsz	wreg,f,c
  1959  000B16  D7FD               	bra	u617
  1960  000B18                     
  1961                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1962  000B18  848C               	bsf	140,2,c	;volatile
  1963                           
  1964                           ;LCD.c: 147:             _delay(1200);
  1965  000B1A  0EF0               	movlw	240
  1966  000B1C                     u627:
  1967  000B1C  D000               	nop2	
  1968  000B1E  2EE8               	decfsz	wreg,f,c
  1969  000B20  D7FD               	bra	u627
  1970  000B22                     
  1971                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1972  000B22  948C               	bcf	140,2,c	;volatile
  1973  000B24  EF7B  F005         	goto	l916
  1974  000B28                     l930:
  1975                           
  1976                           ;LCD.c: 139:  while(aux == 0x80)
  1977  000B28  0E80               	movlw	128
  1978  000B2A  184D               	xorwf	LEER_LCD@aux^0,w,c
  1979  000B2C  B4D8               	btfsc	status,2,c
  1980  000B2E  EF9B  F005         	goto	u11
  1981  000B32  EF9D  F005         	goto	u10
  1982  000B36                     u11:
  1983  000B36  EF80  F005         	goto	l67
  1984  000B3A                     u10:
  1985  000B3A  0012               	return		;funcret
  1986  000B3C                     __end_of_LEER_LCD:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _ENVIA_NIBBLE *****************
  1990 ;; Defined at:
  1991 ;;		line 93 in file "LCD.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  dato            1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  dato            1    6[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 2
  2012 ;; This function calls:
  2013 ;;		Nothing
  2014 ;; This function is called by:
  2015 ;;		_ENVIA_CHAR
  2016 ;;		_LCD_CONFIG
  2017 ;;		_ENVIA_LCD_CMD
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text15
  2022  000E5A                     __ptext15:
  2023                           	callstack 0
  2024  000E5A                     _ENVIA_NIBBLE:
  2025                           	callstack 25
  2026                           
  2027                           ;incstack = 0
  2028                           ;ENVIA_NIBBLE@dato stored from wreg
  2029  000E5A  6E4D               	movwf	ENVIA_NIBBLE@dato^0,c
  2030  000E5C                     
  2031                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2032  000E5C  0E0F               	movlw	15
  2033  000E5E  168C               	andwf	140,f,c	;volatile
  2034                           
  2035                           ;LCD.c: 96:  dato &= 0xF0;
  2036  000E60  0EF0               	movlw	240
  2037  000E62  164D               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2038                           
  2039                           ;LCD.c: 97:  LATD|= dato;
  2040  000E64  504D               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2041  000E66  128C               	iorwf	140,f,c	;volatile
  2042  000E68                     
  2043                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2044  000E68  848C               	bsf	140,2,c	;volatile
  2045  000E6A                     
  2046                           ;LCD.c: 100:         _delay(1200);
  2047  000E6A  0EF0               	movlw	240
  2048  000E6C                     u637:
  2049  000E6C  D000               	nop2	
  2050  000E6E  2EE8               	decfsz	wreg,f,c
  2051  000E70  D7FD               	bra	u637
  2052  000E72                     
  2053                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2054  000E72  948C               	bcf	140,2,c	;volatile
  2055  000E74  0012               	return		;funcret
  2056  000E76                     __end_of_ENVIA_NIBBLE:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _INT2_ISR *****************
  2060 ;; Defined at:
  2061 ;;		line 184 in file "maincode5.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;		None
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  z               1    5[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2077 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2078 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2079 ;;Total ram usage:        6 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		Interrupt level 1
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	intcodelo
  2090  000018                     __pintcodelo:
  2091                           	callstack 0
  2092  000018                     _INT2_ISR:
  2093                           	callstack 25
  2094                           
  2095                           ;incstack = 0
  2096  000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2097  00001A  CFD8 F047          	movff	status,??_INT2_ISR
  2098  00001E  CFE8 F048          	movff	wreg,??_INT2_ISR+1
  2099  000022  CFE0 F049          	movff	bsr,??_INT2_ISR+2
  2100  000026  CFD9 F04A          	movff	fsr2l,??_INT2_ISR+3
  2101  00002A  CFDA F04B          	movff	fsr2h,??_INT2_ISR+4
  2102  00002E                     
  2103                           ;maincode5.c: 185:     INTCON3bits.INT2IF = 0;
  2104  00002E  92F0               	bcf	240,1,c	;volatile
  2105  000030                     
  2106                           ;maincode5.c: 186:     unsigned char z;;maincode5.c: 187:     for(z=0;z<13;z++){
  2107  000030  0E00               	movlw	0
  2108  000032  6E4C               	movwf	INT2_ISR@z^0,c
  2109  000034                     i1l1292:
  2110                           
  2111                           ;maincode5.c: 188:         TXREG = mensaje[z];
  2112  000034  0E19               	movlw	low _mensaje
  2113  000036  244C               	addwf	INT2_ISR@z^0,w,c
  2114  000038  6ED9               	movwf	fsr2l,c
  2115  00003A  6ADA               	clrf	fsr2h,c
  2116  00003C  0E00               	movlw	high _mensaje
  2117  00003E  22DA               	addwfc	fsr2h,f,c
  2118  000040  50DF               	movf	indf2,w,c
  2119  000042  6EAD               	movwf	173,c	;volatile
  2120  000044                     i1l209:
  2121  000044  A2AC               	btfss	172,1,c	;volatile
  2122  000046  EF27  F000         	goto	i1u25_21
  2123  00004A  EF29  F000         	goto	i1u25_20
  2124  00004E                     i1u25_21:
  2125  00004E  EF22  F000         	goto	i1l209
  2126  000052                     i1u25_20:
  2127  000052                     
  2128                           ;maincode5.c: 190:     }
  2129  000052  2A4C               	incf	INT2_ISR@z^0,f,c
  2130  000054  0E0C               	movlw	12
  2131  000056  644C               	cpfsgt	INT2_ISR@z^0,c
  2132  000058  EF30  F000         	goto	i1u26_21
  2133  00005C  EF32  F000         	goto	i1u26_20
  2134  000060                     i1u26_21:
  2135  000060  EF1A  F000         	goto	i1l1292
  2136  000064                     i1u26_20:
  2137  000064                     
  2138                           ;maincode5.c: 191:     TXREG = 0x0A;
  2139  000064  0E0A               	movlw	10
  2140  000066  6EAD               	movwf	173,c	;volatile
  2141  000068                     i1l212:
  2142  000068  A2AC               	btfss	172,1,c	;volatile
  2143  00006A  EF39  F000         	goto	i1u27_21
  2144  00006E  EF3B  F000         	goto	i1u27_20
  2145  000072                     i1u27_21:
  2146  000072  EF34  F000         	goto	i1l212
  2147  000076                     i1u27_20:
  2148  000076                     
  2149                           ;maincode5.c: 193:     TXREG = 0x0D;
  2150  000076  0E0D               	movlw	13
  2151  000078  6EAD               	movwf	173,c	;volatile
  2152  00007A                     i1l215:
  2153  00007A  A2AC               	btfss	172,1,c	;volatile
  2154  00007C  EF42  F000         	goto	i1u28_21
  2155  000080  EF44  F000         	goto	i1u28_20
  2156  000084                     i1u28_21:
  2157  000084  EF3D  F000         	goto	i1l215
  2158  000088                     i1u28_20:
  2159  000088  C04B  FFDA         	movff	??_INT2_ISR+4,fsr2h
  2160  00008C  C04A  FFD9         	movff	??_INT2_ISR+3,fsr2l
  2161  000090  C049  FFE0         	movff	??_INT2_ISR+2,bsr
  2162  000094  C048  FFE8         	movff	??_INT2_ISR+1,wreg
  2163  000098  C047  FFD8         	movff	??_INT2_ISR,status
  2164  00009C  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2165  00009E  0010               	retfie	
  2166  0000A0                     __end_of_INT2_ISR:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _INT0INT1_ISR *****************
  2170 ;; Defined at:
  2171 ;;		line 163 in file "maincode5.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2188 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		Interrupt level 2
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	intcode
  2199  000008                     __pintcode:
  2200                           	callstack 0
  2201  000008                     _INT0INT1_ISR:
  2202                           	callstack 25
  2203                           
  2204                           ;incstack = 0
  2205  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2206  00000A  ED02  F006         	call	int_func,f	;refresh shadow registers
  2207                           
  2208                           	psect	intcode_body
  2209  000C04                     __pintcode_body:
  2210                           	callstack 25
  2211  000C04                     int_func:
  2212                           	callstack 25
  2213  000C04  0006               	pop		; remove dummy address from shadow register refresh
  2214  000C06                     
  2215                           ;maincode5.c: 164:     if(INTCONbits.INT0IF == 1){
  2216  000C06  A2F2               	btfss	242,1,c	;volatile
  2217  000C08  EF08  F006         	goto	i2u21_41
  2218  000C0C  EF0A  F006         	goto	i2u21_40
  2219  000C10                     i2u21_41:
  2220  000C10  EF19  F006         	goto	i2l1274
  2221  000C14                     i2u21_40:
  2222  000C14                     
  2223                           ;maincode5.c: 165:         INTCONbits.INT0IF = 0;
  2224  000C14  92F2               	bcf	242,1,c	;volatile
  2225  000C16                     
  2226                           ;maincode5.c: 166:         if(estado_vis == 5){
  2227  000C16  0E05               	movlw	5
  2228  000C18  1858               	xorwf	_estado_vis^0,w,c
  2229  000C1A  A4D8               	btfss	status,2,c
  2230  000C1C  EF12  F006         	goto	i2u22_41
  2231  000C20  EF14  F006         	goto	i2u22_40
  2232  000C24                     i2u22_41:
  2233  000C24  EF18  F006         	goto	i2l1272
  2234  000C28                     i2u22_40:
  2235  000C28                     
  2236                           ;maincode5.c: 167:             estado_vis = 0;
  2237  000C28  0E00               	movlw	0
  2238  000C2A  6E58               	movwf	_estado_vis^0,c
  2239                           
  2240                           ;maincode5.c: 168:         }
  2241  000C2C  EF19  F006         	goto	i2l1274
  2242  000C30                     i2l1272:
  2243                           
  2244                           ;maincode5.c: 170:             estado_vis++;
  2245  000C30  2A58               	incf	_estado_vis^0,f,c
  2246  000C32                     i2l1274:
  2247                           
  2248                           ;maincode5.c: 173:     if(INTCON3bits.INT1IF == 1){
  2249  000C32  A0F0               	btfss	240,0,c	;volatile
  2250  000C34  EF1E  F006         	goto	i2u23_41
  2251  000C38  EF20  F006         	goto	i2u23_40
  2252  000C3C                     i2u23_41:
  2253  000C3C  EF2F  F006         	goto	i2l202
  2254  000C40                     i2u23_40:
  2255  000C40                     
  2256                           ;maincode5.c: 174:         INTCON3bits.INT1IF = 0;
  2257  000C40  90F0               	bcf	240,0,c	;volatile
  2258  000C42                     
  2259                           ;maincode5.c: 175:         if(estado_vel == 2){
  2260  000C42  0E02               	movlw	2
  2261  000C44  1857               	xorwf	_estado_vel^0,w,c
  2262  000C46  A4D8               	btfss	status,2,c
  2263  000C48  EF28  F006         	goto	i2u24_41
  2264  000C4C  EF2A  F006         	goto	i2u24_40
  2265  000C50                     i2u24_41:
  2266  000C50  EF2E  F006         	goto	i2l1282
  2267  000C54                     i2u24_40:
  2268  000C54                     
  2269                           ;maincode5.c: 176:             estado_vel = 0;
  2270  000C54  0E00               	movlw	0
  2271  000C56  6E57               	movwf	_estado_vel^0,c
  2272                           
  2273                           ;maincode5.c: 177:         }
  2274  000C58  EF2F  F006         	goto	i2l202
  2275  000C5C                     i2l1282:
  2276                           
  2277                           ;maincode5.c: 179:             estado_vel++;
  2278  000C5C  2A57               	incf	_estado_vel^0,f,c
  2279  000C5E                     i2l202:
  2280  000C5E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2281  000C60  0011               	retfie		f
  2282  000C62                     __end_of_INT0INT1_ISR:
  2283                           	callstack 0
  2284                           
  2285                           	psect	rparam
  2286  0000                     
  2287                           	psect	temp
  2288  000059                     btemp:
  2289                           	callstack 0
  2290  000059                     	ds	1
  2291  0000                     int$flags	set	btemp
  2292  0000                     wtemp8	set	btemp+1
  2293  0000                     ttemp5	set	btemp+1
  2294  0000                     ttemp6	set	btemp+4
  2295  0000                     ttemp7	set	btemp+8
  2296                           
  2297                           	psect	idloc
  2298                           
  2299                           ;Config register IDLOC0 @ 0x200000
  2300                           ;	unspecified, using default values
  2301  200000                     	org	2097152
  2302  200000  FF                 	db	255
  2303                           
  2304                           ;Config register IDLOC1 @ 0x200001
  2305                           ;	unspecified, using default values
  2306  200001                     	org	2097153
  2307  200001  FF                 	db	255
  2308                           
  2309                           ;Config register IDLOC2 @ 0x200002
  2310                           ;	unspecified, using default values
  2311  200002                     	org	2097154
  2312  200002  FF                 	db	255
  2313                           
  2314                           ;Config register IDLOC3 @ 0x200003
  2315                           ;	unspecified, using default values
  2316  200003                     	org	2097155
  2317  200003  FF                 	db	255
  2318                           
  2319                           ;Config register IDLOC4 @ 0x200004
  2320                           ;	unspecified, using default values
  2321  200004                     	org	2097156
  2322  200004  FF                 	db	255
  2323                           
  2324                           ;Config register IDLOC5 @ 0x200005
  2325                           ;	unspecified, using default values
  2326  200005                     	org	2097157
  2327  200005  FF                 	db	255
  2328                           
  2329                           ;Config register IDLOC6 @ 0x200006
  2330                           ;	unspecified, using default values
  2331  200006                     	org	2097158
  2332  200006  FF                 	db	255
  2333                           
  2334                           ;Config register IDLOC7 @ 0x200007
  2335                           ;	unspecified, using default values
  2336  200007                     	org	2097159
  2337  200007  FF                 	db	255
  2338                           
  2339                           	psect	config
  2340                           
  2341                           ;Config register CONFIG1L @ 0x300000
  2342                           ;	PLL Prescaler Selection bits
  2343                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2344                           ;	System Clock Postscaler Selection bits
  2345                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2346                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2347                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2348  300000                     	org	3145728
  2349  300000  00                 	db	0
  2350                           
  2351                           ;Config register CONFIG1H @ 0x300001
  2352                           ;	Oscillator Selection bits
  2353                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2354                           ;	Fail-Safe Clock Monitor Enable bit
  2355                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2356                           ;	Internal/External Oscillator Switchover bit
  2357                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2358  300001                     	org	3145729
  2359  300001  08                 	db	8
  2360                           
  2361                           ;Config register CONFIG2L @ 0x300002
  2362                           ;	Power-up Timer Enable bit
  2363                           ;	PWRT = ON, PWRT enabled
  2364                           ;	Brown-out Reset Enable bits
  2365                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2366                           ;	Brown-out Reset Voltage bits
  2367                           ;	BORV = 3, Minimum setting 2.05V
  2368                           ;	USB Voltage Regulator Enable bit
  2369                           ;	VREGEN = OFF, USB voltage regulator disabled
  2370  300002                     	org	3145730
  2371  300002  18                 	db	24
  2372                           
  2373                           ;Config register CONFIG2H @ 0x300003
  2374                           ;	Watchdog Timer Enable bit
  2375                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2376                           ;	Watchdog Timer Postscale Select bits
  2377                           ;	WDTPS = 32768, 1:32768
  2378  300003                     	org	3145731
  2379  300003  1E                 	db	30
  2380                           
  2381                           ; Padding undefined space
  2382  300004                     	org	3145732
  2383  300004  FF                 	db	255
  2384                           
  2385                           ;Config register CONFIG3H @ 0x300005
  2386                           ;	CCP2 MUX bit
  2387                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2388                           ;	PORTB A/D Enable bit
  2389                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2390                           ;	Low-Power Timer 1 Oscillator Enable bit
  2391                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2392                           ;	MCLR Pin Enable bit
  2393                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2394  300005                     	org	3145733
  2395  300005  81                 	db	129
  2396                           
  2397                           ;Config register CONFIG4L @ 0x300006
  2398                           ;	Stack Full/Underflow Reset Enable bit
  2399                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2400                           ;	Single-Supply ICSP Enable bit
  2401                           ;	LVP = OFF, Single-Supply ICSP disabled
  2402                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2403                           ;	ICPRT = OFF, ICPORT disabled
  2404                           ;	Extended Instruction Set Enable bit
  2405                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2406                           ;	Background Debugger Enable bit
  2407                           ;	DEBUG = 0x1, unprogrammed default
  2408  300006                     	org	3145734
  2409  300006  81                 	db	129
  2410                           
  2411                           ; Padding undefined space
  2412  300007                     	org	3145735
  2413  300007  FF                 	db	255
  2414                           
  2415                           ;Config register CONFIG5L @ 0x300008
  2416                           ;	Code Protection bit
  2417                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2418                           ;	Code Protection bit
  2419                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2420                           ;	Code Protection bit
  2421                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2422                           ;	Code Protection bit
  2423                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2424  300008                     	org	3145736
  2425  300008  0F                 	db	15
  2426                           
  2427                           ;Config register CONFIG5H @ 0x300009
  2428                           ;	Boot Block Code Protection bit
  2429                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2430                           ;	Data EEPROM Code Protection bit
  2431                           ;	CPD = OFF, Data EEPROM is not code-protected
  2432  300009                     	org	3145737
  2433  300009  C0                 	db	192
  2434                           
  2435                           ;Config register CONFIG6L @ 0x30000A
  2436                           ;	Write Protection bit
  2437                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2438                           ;	Write Protection bit
  2439                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2440                           ;	Write Protection bit
  2441                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2442                           ;	Write Protection bit
  2443                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2444  30000A                     	org	3145738
  2445  30000A  0F                 	db	15
  2446                           
  2447                           ;Config register CONFIG6H @ 0x30000B
  2448                           ;	Configuration Register Write Protection bit
  2449                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2450                           ;	Boot Block Write Protection bit
  2451                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2452                           ;	Data EEPROM Write Protection bit
  2453                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2454  30000B                     	org	3145739
  2455  30000B  E0                 	db	224
  2456                           
  2457                           ;Config register CONFIG7L @ 0x30000C
  2458                           ;	Table Read Protection bit
  2459                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2460                           ;	Table Read Protection bit
  2461                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2462                           ;	Table Read Protection bit
  2463                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2464                           ;	Table Read Protection bit
  2465                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2466  30000C                     	org	3145740
  2467  30000C  0F                 	db	15
  2468                           
  2469                           ;Config register CONFIG7H @ 0x30000D
  2470                           ;	Boot Block Table Read Protection bit
  2471                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2472  30000D                     	org	3145741
  2473  30000D  40                 	db	64
  2474                           tosu	equ	0xFFF
  2475                           tosh	equ	0xFFE
  2476                           tosl	equ	0xFFD
  2477                           stkptr	equ	0xFFC
  2478                           pclatu	equ	0xFFB
  2479                           pclath	equ	0xFFA
  2480                           pcl	equ	0xFF9
  2481                           tblptru	equ	0xFF8
  2482                           tblptrh	equ	0xFF7
  2483                           tblptrl	equ	0xFF6
  2484                           tablat	equ	0xFF5
  2485                           prodh	equ	0xFF4
  2486                           prodl	equ	0xFF3
  2487                           indf0	equ	0xFEF
  2488                           postinc0	equ	0xFEE
  2489                           postdec0	equ	0xFED
  2490                           preinc0	equ	0xFEC
  2491                           plusw0	equ	0xFEB
  2492                           fsr0h	equ	0xFEA
  2493                           fsr0l	equ	0xFE9
  2494                           wreg	equ	0xFE8
  2495                           indf1	equ	0xFE7
  2496                           postinc1	equ	0xFE6
  2497                           postdec1	equ	0xFE5
  2498                           preinc1	equ	0xFE4
  2499                           plusw1	equ	0xFE3
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           bsr	equ	0xFE0
  2503                           indf2	equ	0xFDF
  2504                           postinc2	equ	0xFDE
  2505                           postdec2	equ	0xFDD
  2506                           preinc2	equ	0xFDC
  2507                           plusw2	equ	0xFDB
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        70
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      88
    BANK0           160      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> LED_ON2(COMRAM[8]), LED_ON1(COMRAM[8]), LED_OFF2(COMRAM[8]), LED_OFF1(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _vis_LEDs_LCD->_POS_CURSOR
    _POS_CURSOR->_ENVIA_LCD_CMD
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _INT0INT1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _INT0INT1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _INT0INT1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _INT0INT1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _INT0INT1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _INT0INT1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _INT0INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _INT0INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _INT0INT1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3282
                                             15 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _init_LCD
                        _retardo_vis
                       _vis_LEDs_LCD
 ---------------------------------------------------------------------------------
 (1) _vis_LEDs_LCD                                         0     0      0     480
                         _ENVIA_CHAR
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                              9 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _retardo_vis                                          2     2      0       0
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1485
                                             13 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     960
                                              9 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              9 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             6     6      0      45
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0INT1_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _retardo_vis
   _vis_LEDs_LCD
     _ENVIA_CHAR
     _POS_CURSOR

 _INT2_ISR (ROOT)

 _INT0INT1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       2       5        1.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      58       1       93.6%
BITBIGSFRll         23      0       0      30        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhllll     14      0       0      27        0.0%
BITBIGSFRhhlhl       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRhhllh       B      0       0      24        0.0%
BITBIGSFRlh          7      0       0      29        0.0%
BITBIGSFRhl          7      0       0      28        0.0%
BITBIGSFRhhlllh      4      0       0      25        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRhhllll      1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5A      31        0.0%
DATA                 0      0      5A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 11 18:58:08 2022

                     l24 0D5A                       l42 0E58                       l51 0DF6  
                     l60 0E74                       l37 0E7C                       l54 0E84  
                     l63 0D8E                       l48 0CE4                       l57 0C02  
                     l74 0D20                       l67 0B00                       l69 0B3A  
                     u10 0B3A                       u11 0B36                       u40 0E3C  
                     u41 0E38                       u50 0E52                       u51 0E4E  
                     bsr 000FE0            ENVIA_CHAR@aux 004F                      l150 09E6  
                    l143 0DC2                      l152 0A16                      l146 0BA2  
                    l163 0AC8                      l155 0A46                      l900 0AD2  
                    l910 0AEA                      l902 0AD4                      l920 0B0A  
                    l912 0AEC                      l904 0ADC                      l922 0B0E  
                    l930 0B28                      l914 0AF4                      l906 0AE0  
                    l932 0E5C                      l924 0B18                      l916 0AF6  
                    l908 0AE2                      l940 0D5E                      l934 0E68  
                    l926 0B22                      l918 0B02                      l950 0D72  
                    l942 0D60                      l936 0E6A                      l960 0D88  
                    l952 0D74                      l944 0D64                      l938 0E72  
                    l970 0DD8                      l962 0DC6                      l954 0D76  
                    l946 0D68                      l980 0DEA                      l972 0DDA  
                    l964 0DC8                      l956 0D7C                      l948 0D70  
                    l894 0ACA                      l982 0DF0                      l974 0DDC  
                    l966 0DCC                      l958 0D82                      l896 0ACE  
                    l976 0DDE                      l968 0DD0                      l992 0E76  
                    l898 0AD0                      l978 0DE4                      l994 0E2C  
                    l996 0E3C                      l998 0E42                      u300 0D52  
                    u301 0D4E                      u310 0D1A                      u311 0D16  
                    u320 0CE4                      u321 0CE0                      u330 09CA  
                    u331 09C6                      u340 09FA                      u420 0868  
                    u341 09F6                      u421 0864                      u350 0A2A  
                    u430 089A                      u351 0A26                      u431 0896  
                    u440 08CC                      u441 08C8                      u290 0D34  
                    u450 08FE                      u507 0A84                      u291 0D30  
                    u451 08FA                      u460 0930                      u517 0B4A  
                    u461 092C                      u470 0962                      u607 0B04  
                    u527 0BB4                      u471 095E                      u617 0B12  
                    u537 0BC2                      u627 0B1C                      u547 0BD2  
                    u637 0E6C                      u557 0D6A                      u567 0DD2  
                    u487 0A52                      u577 0AD6                      u497 0A68  
                    u587 0AE4                      u597 0AEE              LEER_LCD@aux 004D  
                    wreg 000FE8             ?_CURSOR_HOME 0047           ??_ENVIA_NIBBLE 004D  
         ENVIA_CHAR@dato 004E                     l1000 0E52                     l1002 0E7E  
                   l1010 0BBC                     l1020 0BEA                     l1012 0BD0  
                   l1004 0BA4                     l1022 0BF0                     l1014 0BD8  
                   l1006 0BA8                     l1024 0BF6                     l1016 0BDE  
                   l1008 0BAE                     l1120 0A48                     l1026 0BFC  
                   l1018 0BE4                     l1122 0A4C                     l1130 0A96  
                   l1060 0DAA                     l1052 0D90                     l1124 0A5E  
                   l1070 0DB8                     l1062 0DAC                     l1054 0DA4  
                   l1126 0A7A                     l1310 0D24                     l1072 0DBA  
                   l1064 0DAE                     l1056 0DA6                     l1320 0CF2  
                   l1312 0D34                     l1074 0DBC                     l1066 0DB0  
                   l1058 0DA8                     l1330 0D0A                     l1314 0D40  
                   l1340 0CD2                     l1076 0DBE                     l1068 0DB2  
                   l1332 0D1A                     l1316 0D52                     l1334 0CA8  
                   l1078 0DC0                     l1326 0CF6                     l1318 0CE6  
                   l1350 0B58                     l1342 0B3C                     l1510 083A  
                   l1502 0814                     l1336 0CB4                     l1328 0D08  
                   l1360 0B92                     l1352 0B5C                     l1344 0B40  
                   l1600 094C                     l1520 0852                     l1504 0818  
                   l1338 0CD0                     l1354 0B62                     l1346 0B44  
                   l1370 09EC                     l1362 09B2                     l1602 0950  
                   l1522 0856                     l1506 081C                     l1356 0B72  
                   l1348 0B54                     l1380 0A3A                     l1372 09FA  
                   l1364 09BC                     l1604 0952                     l1540 088A  
                   l1532 0870                     l1524 0858                     l1516 083E  
                   l1508 0826                     l1358 0B82                     l1374 0A0A  
                   l1366 09CA                     l1550 08B2                     l1542 089E  
                   l1534 0880                     l1526 086C                     l1518 084E  
                   l1376 0A1C                     l1368 09DA                     l1552 08B6  
                   l1536 0884                     l1608 0962                     l1378 0A2A  
                   l1570 08EC                     l1554 08BA                     l1538 0888  
                   l1580 0906                     l1572 08EE                     l1564 08D4  
                   l1556 08BC                     l1548 08A2                     l1590 0934  
                   l1582 0916                     l1574 0902                     l1566 08E4  
                   l1558 08D0                     l1584 091A                     l1568 08E8  
                   l1666 0978                     l1586 091E                     l1668 0AAA  
                   l1596 0938                     l1588 0920                     l1598 0948  
                   STR_1 0801                     _LATD 000F8C                     _LATE 000F8D  
         ??_INT0INT1_ISR 0047                     _main 0814                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0059                     prodl 000FF3                     start 00A0  
          ?_CURSOR_ONOFF 0047             ___param_bank 000000          ??_ENVIA_LCD_CMD 004E  
       __end_of_LEER_LCD 0B3C         __end_of_INT2_ISR 00A0           _GENERACARACTER 0CE6  
                  ?_main 0047                    _CMCON 000FB4                    i1l212 0068  
                  i1l215 007A                    i1l209 0044                    i1l218 0088  
                  i2l202 0C5E                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
            ?_POS_CURSOR 0050                    main@x 0056                    tablat 000FF5  
                  ttemp5 005A                    ttemp6 005D                    ttemp7 0061  
                  status 000FD8                    wtemp8 005A           ??_CURSOR_ONOFF 0050  
        __initialization 0DF8             __end_of_main 09B2   __end_of_GENERACARACTER 0D22  
        _ESCRIBE_MENSAJE 0CA8                   ??_main 0060            __activetblptr 000002  
                 _ADCON1 000FC1                   i1l1300 0076                   _CVRCON 000FB5  
                 i1l1292 0034                   i1l1284 002E                   i1l1294 0052  
                 i1l1286 0030                   i1l1296 0054                   i1l1298 0064  
                 i2l1270 0C28                   i2l1280 0C54                   i2l1272 0C30  
                 i2l1264 0C06                   i2l1282 0C5C                   i2l1266 0C14  
                 i2l1274 0C32                   i2l1276 0C40                   i2l1268 0C16  
                 i2l1278 0C42                   _OSCCON 000FD3             ?_retardo_vis 0047  
   __end_of_ENVIA_NIBBLE 0E76         __end_of_init_LCD 0BA4          ?_GENERACARACTER 0050  
                 isa$std 000001     __end_of_INT0INT1_ISR 0C62             __pdataCOMRAM 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ??_BORRAR_LCD 0050                ?_LEER_LCD 0047  
             __accesstop 0060  __end_of__initialization 0E1C                ?_INT2_ISR 0047  
           ??_LCD_CONFIG 0050            ___rparam_used 000001             ??_ENVIA_CHAR 004E  
__end_of_ESCRIBE_MENSAJE 0CE6           __pcstackCOMRAM 0047                INT2_ISR@z 004C  
     __end_of_BORRAR_LCD 0E86         ENVIA_LCD_CMD@aux 004F     __end_of_CURSOR_ONOFF 0E5A  
     __end_of_LCD_CONFIG 0C04       __end_of_ENVIA_CHAR 0DF8               ??_LEER_LCD 004D  
       ENVIA_NIBBLE@dato 004D               ??_INT2_ISR 0047                  _LED_ON1 0027  
                _LED_ON2 002F                  i1u25_20 0052                  i1u25_21 004E  
                i1u26_20 0064                  i1u26_21 0060                  i1u27_20 0076  
                i1u27_21 0072                  i1u28_20 0088                  i1u28_21 0084  
                i2u21_40 0C14                  i2u21_41 0C10                  i2u22_40 0C28  
                i2u22_41 0C24                  i2u23_40 0C40                  i2u23_41 0C3C  
                i2u24_40 0C54                  i2u24_41 0C50             ??_POS_CURSOR 0051  
              ?_init_LCD 0047                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0050        __end_of_configuro 0DC4               _estado_vel 0057  
             _estado_vis 0058             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0D90  
                __pcinit 0DF8                  _efectos 0001       __end_of_POS_CURSOR 0D5C  
                __ramtop 0800                  __ptext0 0814                  __ptext1 09B2  
                __ptext2 0D22                  __ptext3 0A48                  __ptext4 0B3C  
                __ptext5 0BA4                  __ptext6 0CE6                  __ptext7 0E2A  
                __ptext8 0E76                  __ptext9 0E7E          GENERACARACTER@i 0053  
                _mensaje 0019            ?_vis_LEDs_LCD 0047           __pintcode_body 0C04  
           _ENVIA_NIBBLE 0E5A     end_of_initialization 0E1C               ??_init_LCD 0054  
          __Lmediumconst 0000                  int_func 0C04             _INT0INT1_ISR 0008  
       ??_GENERACARACTER 0053                _RCSTAbits 000FAB                  postdec1 000FE5  
                postinc0 000FEE     GENERACARACTER@vector 0050                _PORTEbits 000F84  
         ??_vis_LEDs_LCD 0052                _TXSTAbits 000FAC             _CURSOR_ONOFF 0E2A  
     CURSOR_ONOFF@estado 0050            __pidataCOMRAM 0C62            ??_CURSOR_HOME 0050  
    start_initialization 0DF8        ENVIA_LCD_CMD@dato 004E              __pbssCOMRAM 0057  
          __pcstackBANK0 0060      __end_of_CURSOR_HOME 0E7E     __end_of_vis_LEDs_LCD 0A48  
              __pintcode 0008              __pintcodelo 0018        GENERACARACTER@pos 0052  
              _configuro 0D90              __smallconst 0800                 _LEER_LCD 0ACA  
               _LED_OFF1 003F                 _LED_OFF2 0037                 _INT2_ISR 0018  
               _LATDbits 000F8C            ??_retardo_vis 004D                 _RCONbits 000FD0  
       ESCRIBE_MENSAJE@i 0055           POS_CURSOR@fila 0051               ?_configuro 0047  
            _CURSOR_HOME 0E76              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
              copy_data0 0E0C                 __Hrparam 0000                 __Lrparam 0000  
    __end_of_retardo_vis 0ACA                 __ptext10 0D5C                 __ptext11 0D90  
               __ptext12 0CA8                 __ptext13 0DC4                 __ptext14 0ACA  
               __ptext15 0E5A               _BORRAR_LCD 0E7E                 _init_LCD 0B3C  
             _LCD_CONFIG 0BA4               _ENVIA_CHAR 0DC4                 isa$xinst 000000  
               int$flags 0059            _ENVIA_LCD_CMD 0D5C              ??_configuro 004D  
             _INTCONbits 000FF2             _vis_LEDs_LCD 09B2        ??_ESCRIBE_MENSAJE 0053  
               intlevel1 0000                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0050  
            _retardo_vis 0A48           ?_ENVIA_LCD_CMD 0047              ?_BORRAR_LCD 0047  
          ?_ENVIA_NIBBLE 0047               _POS_CURSOR 0D22            ?_INT0INT1_ISR 0047  
            ?_LCD_CONFIG 0047       ESCRIBE_MENSAJE@tam 0052              ?_ENVIA_CHAR 0047  
      POS_CURSOR@columna 0050  
