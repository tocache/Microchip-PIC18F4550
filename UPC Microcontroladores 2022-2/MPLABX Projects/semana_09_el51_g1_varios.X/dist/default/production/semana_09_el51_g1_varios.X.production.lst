

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Oct 12 16:52:54 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000D4E                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _segundos
    76  000D4E  2B                 	db	43
    77                           
    78                           ;initializer for _minutos
    79  000D4F  34                 	db	52
    80                           
    81                           ;initializer for _horas
    82  000D50  10                 	db	16
    83  0000                     _TMR1L	set	4046
    84  0000                     _TMR1H	set	4047
    85  0000                     _INTCONbits	set	4082
    86  0000                     _LATD	set	3980
    87  0000                     _PORTD	set	3971
    88  0000                     _LATDbits	set	3980
    89  0000                     _TRISD	set	3989
    90  0000                     _PIE1bits	set	3997
    91  0000                     _T1CON	set	4045
    92  0000                     _PIR1bits	set	3998
    93                           
    94                           	psect	smallconst
    95  000800                     __psmallconst:
    96                           	callstack 0
    97  000800  00                 	db	0
    98  000801                     STR_1:
    99  000801  48                 	db	72	;'H'
   100  000802  6F                 	db	111	;'o'
   101  000803  6C                 	db	108	;'l'
   102  000804  61                 	db	97	;'a'
   103  000805  20                 	db	32
   104  000806  55                 	db	85	;'U'
   105  000807  50                 	db	80	;'P'
   106  000808  43                 	db	67	;'C'
   107  000809  00                 	db	0
   108  00080A                     STR_2:
   109  00080A  52                 	db	82	;'R'
   110  00080B  65                 	db	101	;'e'
   111  00080C  6C                 	db	108	;'l'
   112  00080D  6F                 	db	111	;'o'
   113  00080E  6A                 	db	106	;'j'
   114  00080F  20                 	db	32
   115  000810  00                 	db	0
   116  000811  00                 	db	0	; dummy byte at the end
   117  0000                     
   118                           ; #config settings
   119                           
   120                           	psect	cinit
   121  000C20                     __pcinit:
   122                           	callstack 0
   123  000C20                     start_initialization:
   124                           	callstack 0
   125  000C20                     __initialization:
   126                           	callstack 0
   127                           
   128                           ; Initialize objects allocated to COMRAM (3 bytes)
   129                           ; load TBLPTR registers with __pidataCOMRAM
   130  000C20  0E4E               	movlw	low __pidataCOMRAM
   131  000C22  6EF6               	movwf	tblptrl,c
   132  000C24  0E0D               	movlw	high __pidataCOMRAM
   133  000C26  6EF7               	movwf	tblptrh,c
   134  000C28  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   135  000C2A  6EF8               	movwf	tblptru,c
   136  000C2C  0009               	tblrd		*+	;fetch initializer
   137  000C2E  CFF5 F013          	movff	tablat,__pdataCOMRAM
   138  000C32  0009               	tblrd		*+	;fetch initializer
   139  000C34  CFF5 F014          	movff	tablat,__pdataCOMRAM+1
   140  000C38  0009               	tblrd		*+	;fetch initializer
   141  000C3A  CFF5 F015          	movff	tablat,__pdataCOMRAM+2
   142                           
   143                           ; Clear objects allocated to COMRAM (3 bytes)
   144  000C3E  6A12               	clrf	(__pbssCOMRAM+2)& (0+255),c
   145  000C40  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
   146  000C42  6A10               	clrf	__pbssCOMRAM& (0+255),c
   147  000C44                     end_of_initialization:
   148                           	callstack 0
   149  000C44                     __end_of__initialization:
   150                           	callstack 0
   151  000C44  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   152  000C46  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   153  000C48  0E00               	movlw	low (__Lsmallconst shr (0+16))
   154  000C4A  6EF8               	movwf	tblptru,c
   155  000C4C  0E08               	movlw	high __Lsmallconst
   156  000C4E  6EF7               	movwf	tblptrh,c
   157  000C50  0100               	movlb	0
   158  000C52  EFC3  F004         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  000010                     __pbssCOMRAM:
   162                           	callstack 0
   163  000010                     _unidad:
   164                           	callstack 0
   165  000010                     	ds	1
   166  000011                     _decena:
   167                           	callstack 0
   168  000011                     	ds	1
   169  000012                     _centena:
   170                           	callstack 0
   171  000012                     	ds	1
   172                           
   173                           	psect	dataCOMRAM
   174  000013                     __pdataCOMRAM:
   175                           	callstack 0
   176  000013                     _segundos:
   177                           	callstack 0
   178  000013                     	ds	1
   179  000014                     _minutos:
   180                           	callstack 0
   181  000014                     	ds	1
   182  000015                     _horas:
   183                           	callstack 0
   184  000015                     	ds	1
   185                           
   186                           	psect	cstackCOMRAM
   187  000001                     __pcstackCOMRAM:
   188                           	callstack 0
   189  000001                     ?___awmod:
   190                           	callstack 0
   191  000001                     ENVIA_NIBBLE@dato:
   192                           	callstack 0
   193  000001                     LEER_LCD@aux:
   194                           	callstack 0
   195  000001                     ___awmod@dividend:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x0
   199  000001                     	ds	1
   200  000002                     ENVIA_CHAR@dato:
   201                           	callstack 0
   202  000002                     ENVIA_LCD_CMD@dato:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x1
   206  000002                     	ds	1
   207  000003                     ENVIA_CHAR@aux:
   208                           	callstack 0
   209  000003                     ENVIA_LCD_CMD@aux:
   210                           	callstack 0
   211  000003                     ___awmod@divisor:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x2
   215  000003                     	ds	1
   216  000004                     ??_LCD_CONFIG:
   217  000004                     POS_CURSOR@columna:
   218                           	callstack 0
   219  000004                     CURSOR_ONOFF@estado:
   220                           	callstack 0
   221  000004                     ESCRIBE_MENSAJE@cadena:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x3
   225  000004                     	ds	1
   226  000005                     ??_lcd_init:
   227  000005                     POS_CURSOR@fila:
   228                           	callstack 0
   229  000005                     ___awmod@counter:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x4
   233  000005                     	ds	1
   234  000006                     ESCRIBE_MENSAJE@tam:
   235                           	callstack 0
   236  000006                     ___awmod@sign:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x5
   240  000006                     	ds	1
   241  000007                     ??_ESCRIBE_MENSAJE:
   242  000007                     ?___awdiv:
   243                           	callstack 0
   244  000007                     ___awdiv@dividend:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x6
   248  000007                     	ds	2
   249  000009                     ESCRIBE_MENSAJE@i:
   250                           	callstack 0
   251  000009                     ___awdiv@divisor:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x8
   255  000009                     	ds	2
   256  00000B                     ___awdiv@counter:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0xA
   260  00000B                     	ds	1
   261  00000C                     ___awdiv@sign:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0xB
   265  00000C                     	ds	1
   266  00000D                     ___awdiv@quotient:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xC
   270  00000D                     	ds	2
   271  00000F                     individualizar_digitos@entrada:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0xE
   275  00000F                     	ds	1
   276  000010                     
   277                           ; 1 bytes @ 0xF
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 37 in file "maincode3.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   297 ;;      Params:         0       0       0       0       0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called: 5
   303 ;; This function calls:
   304 ;;		_ENVIA_CHAR
   305 ;;		_ESCRIBE_MENSAJE
   306 ;;		_POS_CURSOR
   307 ;;		_configuro
   308 ;;		_individualizar_digitos
   309 ;;		_lcd_init
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text0
   316  000986                     __ptext0:
   317                           	callstack 0
   318  000986                     _main:
   319                           	callstack 26
   320  000986                     
   321                           ;maincode3.c: 38:     configuro();
   322  000986  EC99  F006         	call	_configuro	;wreg free
   323  00098A                     
   324                           ;maincode3.c: 39:     lcd_init();
   325  00098A  EC77  F006         	call	_lcd_init	;wreg free
   326  00098E                     l1254:
   327                           
   328                           ;maincode3.c: 41:         POS_CURSOR(1,1);
   329  00098E  0E01               	movlw	1
   330  000990  6E04               	movwf	POS_CURSOR@columna^0,c
   331  000992  0E01               	movlw	1
   332  000994  ECF3  F005         	call	_POS_CURSOR
   333  000998                     
   334                           ;maincode3.c: 42:         ESCRIBE_MENSAJE("Hola UPC",8);
   335  000998  0E01               	movlw	low STR_1
   336  00099A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   337  00099C  0E08               	movlw	high STR_1
   338  00099E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   339  0009A0  0E08               	movlw	8
   340  0009A2  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   341  0009A4  ECD4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   342  0009A8                     
   343                           ;maincode3.c: 44:         POS_CURSOR(2,1);
   344  0009A8  0E01               	movlw	1
   345  0009AA  6E04               	movwf	POS_CURSOR@columna^0,c
   346  0009AC  0E02               	movlw	2
   347  0009AE  ECF3  F005         	call	_POS_CURSOR
   348  0009B2                     
   349                           ;maincode3.c: 45:         ESCRIBE_MENSAJE("Reloj ",6);
   350  0009B2  0E0A               	movlw	low STR_2
   351  0009B4  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   352  0009B6  0E08               	movlw	high STR_2
   353  0009B8  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   354  0009BA  0E06               	movlw	6
   355  0009BC  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   356  0009BE  ECD4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   357  0009C2                     
   358                           ;maincode3.c: 46:         individualizar_digitos(horas);
   359  0009C2  5015               	movf	_horas^0,w,c
   360  0009C4  ECA7  F005         	call	_individualizar_digitos
   361  0009C8                     
   362                           ;maincode3.c: 47:         ENVIA_CHAR(decena+0x30);
   363  0009C8  5011               	movf	_decena^0,w,c
   364  0009CA  0F30               	addlw	48
   365  0009CC  EC45  F006         	call	_ENVIA_CHAR
   366  0009D0                     
   367                           ;maincode3.c: 48:         ENVIA_CHAR(unidad+0x30);
   368  0009D0  5010               	movf	_unidad^0,w,c
   369  0009D2  0F30               	addlw	48
   370  0009D4  EC45  F006         	call	_ENVIA_CHAR
   371  0009D8                     
   372                           ;maincode3.c: 49:         ENVIA_CHAR(':');
   373  0009D8  0E3A               	movlw	58
   374  0009DA  EC45  F006         	call	_ENVIA_CHAR
   375  0009DE                     
   376                           ;maincode3.c: 50:         individualizar_digitos(minutos);
   377  0009DE  5014               	movf	_minutos^0,w,c
   378  0009E0  ECA7  F005         	call	_individualizar_digitos
   379  0009E4                     
   380                           ;maincode3.c: 51:         ENVIA_CHAR(decena+0x30);
   381  0009E4  5011               	movf	_decena^0,w,c
   382  0009E6  0F30               	addlw	48
   383  0009E8  EC45  F006         	call	_ENVIA_CHAR
   384  0009EC                     
   385                           ;maincode3.c: 52:         ENVIA_CHAR(unidad+0x30);
   386  0009EC  5010               	movf	_unidad^0,w,c
   387  0009EE  0F30               	addlw	48
   388  0009F0  EC45  F006         	call	_ENVIA_CHAR
   389  0009F4                     
   390                           ;maincode3.c: 53:         ENVIA_CHAR(':');
   391  0009F4  0E3A               	movlw	58
   392  0009F6  EC45  F006         	call	_ENVIA_CHAR
   393  0009FA                     
   394                           ;maincode3.c: 54:         individualizar_digitos(segundos);
   395  0009FA  5013               	movf	_segundos^0,w,c
   396  0009FC  ECA7  F005         	call	_individualizar_digitos
   397  000A00                     
   398                           ;maincode3.c: 55:         ENVIA_CHAR(decena+0x30);
   399  000A00  5011               	movf	_decena^0,w,c
   400  000A02  0F30               	addlw	48
   401  000A04  EC45  F006         	call	_ENVIA_CHAR
   402  000A08                     
   403                           ;maincode3.c: 56:         ENVIA_CHAR(unidad+0x30);
   404  000A08  5010               	movf	_unidad^0,w,c
   405  000A0A  0F30               	addlw	48
   406  000A0C  EC45  F006         	call	_ENVIA_CHAR
   407  000A10  EFC7  F004         	goto	l1254
   408  000A14  EF07  F000         	goto	start
   409  000A18                     __end_of_main:
   410                           	callstack 0
   411                           
   412 ;; *************** function _lcd_init *****************
   413 ;; Defined at:
   414 ;;		line 28 in file "maincode3.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0
   430 ;;      Temps:          1       0       0       0       0       0       0       0       0
   431 ;;      Totals:         1       0       0       0       0       0       0       0       0
   432 ;;Total ram usage:        1 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; Hardware stack levels required when called: 4
   435 ;; This function calls:
   436 ;;		_BORRAR_LCD
   437 ;;		_CURSOR_HOME
   438 ;;		_CURSOR_ONOFF
   439 ;;		_LCD_CONFIG
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text1
   446  000CEE                     __ptext1:
   447                           	callstack 0
   448  000CEE                     _lcd_init:
   449                           	callstack 26
   450  000CEE                     
   451                           ;maincode3.c: 29:     TRISD = 0x00;
   452  000CEE  0E00               	movlw	0
   453  000CF0  6E95               	movwf	149,c	;volatile
   454  000CF2                     
   455                           ;maincode3.c: 30:     LCD_CONFIG();
   456  000CF2  EC77  F005         	call	_LCD_CONFIG	;wreg free
   457  000CF6                     
   458                           ;maincode3.c: 31:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   459  000CF6  0EEA               	movlw	234
   460  000CF8  6E05               	movwf	??_lcd_init^0,c
   461  000CFA  0EC3               	movlw	195
   462  000CFC                     u427:
   463  000CFC  2EE8               	decfsz	wreg,f,c
   464  000CFE  D7FE               	bra	u427
   465  000D00  2E05               	decfsz	??_lcd_init^0,f,c
   466  000D02  D7FC               	bra	u427
   467  000D04  F000               	nop	
   468  000D06                     
   469                           ;maincode3.c: 32:     BORRAR_LCD();
   470  000D06  ECA3  F006         	call	_BORRAR_LCD	;wreg free
   471  000D0A                     
   472                           ;maincode3.c: 33:     CURSOR_HOME();
   473  000D0A  EC9F  F006         	call	_CURSOR_HOME	;wreg free
   474  000D0E                     
   475                           ;maincode3.c: 34:     CURSOR_ONOFF(1);
   476  000D0E  0E01               	movlw	1
   477  000D10  EC5F  F006         	call	_CURSOR_ONOFF
   478  000D14  0012               	return		;funcret
   479  000D16                     __end_of_lcd_init:
   480                           	callstack 0
   481                           
   482 ;; *************** function _LCD_CONFIG *****************
   483 ;; Defined at:
   484 ;;		line 72 in file "LCD.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   498 ;;      Params:         0       0       0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0       0       0       0       0
   501 ;;      Totals:         1       0       0       0       0       0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 3
   505 ;; This function calls:
   506 ;;		_ENVIA_LCD_CMD
   507 ;;		_ENVIA_NIBBLE
   508 ;; This function is called by:
   509 ;;		_lcd_init
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text2
   514  000AEE                     __ptext2:
   515                           	callstack 0
   516  000AEE                     _LCD_CONFIG:
   517                           	callstack 26
   518  000AEE                     
   519                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   520  000AEE  908C               	bcf	140,0,c	;volatile
   521                           
   522                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   523  000AF0  928C               	bcf	140,1,c	;volatile
   524  000AF2                     
   525                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   526  000AF2  0E30               	movlw	48
   527  000AF4  EC8B  F006         	call	_ENVIA_NIBBLE
   528  000AF8                     
   529                           ;LCD.c: 77:         _delay(24000);
   530  000AF8  0E20               	movlw	32
   531  000AFA  6E04               	movwf	??_LCD_CONFIG^0,c
   532  000AFC  0E2A               	movlw	42
   533  000AFE                     u437:
   534  000AFE  2EE8               	decfsz	wreg,f,c
   535  000B00  D7FE               	bra	u437
   536  000B02  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   537  000B04  D7FC               	bra	u437
   538  000B06                     
   539                           ;LCD.c: 78:         _delay(24000);
   540  000B06  0E20               	movlw	32
   541  000B08  6E04               	movwf	??_LCD_CONFIG^0,c
   542  000B0A  0E2A               	movlw	42
   543  000B0C                     u447:
   544  000B0C  2EE8               	decfsz	wreg,f,c
   545  000B0E  D7FE               	bra	u447
   546  000B10  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   547  000B12  D7FC               	bra	u447
   548                           
   549                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   550  000B14  0E30               	movlw	48
   551  000B16  EC8B  F006         	call	_ENVIA_NIBBLE
   552  000B1A                     
   553                           ;LCD.c: 83:  _delay(1200);
   554  000B1A  0EF0               	movlw	240
   555  000B1C                     u457:
   556  000B1C  D000               	nop2	
   557  000B1E  2EE8               	decfsz	wreg,f,c
   558  000B20  D7FD               	bra	u457
   559  000B22                     
   560                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   561  000B22  0E30               	movlw	48
   562  000B24  EC8B  F006         	call	_ENVIA_NIBBLE
   563  000B28                     
   564                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   565  000B28  0E20               	movlw	32
   566  000B2A  EC8B  F006         	call	_ENVIA_NIBBLE
   567  000B2E                     
   568                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   569  000B2E  0E01               	movlw	1
   570  000B30  EC2B  F006         	call	_ENVIA_LCD_CMD
   571  000B34                     
   572                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   573  000B34  0E28               	movlw	40
   574  000B36  EC2B  F006         	call	_ENVIA_LCD_CMD
   575  000B3A                     
   576                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   577  000B3A  0E0F               	movlw	15
   578  000B3C  EC2B  F006         	call	_ENVIA_LCD_CMD
   579  000B40                     
   580                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   581  000B40  0E06               	movlw	6
   582  000B42  EC2B  F006         	call	_ENVIA_LCD_CMD
   583  000B46                     
   584                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   585  000B46  0E01               	movlw	1
   586  000B48  EC2B  F006         	call	_ENVIA_LCD_CMD
   587  000B4C  0012               	return		;funcret
   588  000B4E                     __end_of_LCD_CONFIG:
   589                           	callstack 0
   590                           
   591 ;; *************** function _CURSOR_ONOFF *****************
   592 ;; Defined at:
   593 ;;		line 35 in file "LCD.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  estado          1    wreg     unsigned char 
   596 ;; Auto vars:     Size  Location     Type
   597 ;;  estado          1    3[COMRAM] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         0       0       0       0       0       0       0       0       0
   608 ;;      Locals:         1       0       0       0       0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0       0       0       0       0
   610 ;;      Totals:         1       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 3
   614 ;; This function calls:
   615 ;;		_ENVIA_LCD_CMD
   616 ;; This function is called by:
   617 ;;		_lcd_init
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text3
   622  000CBE                     __ptext3:
   623                           	callstack 0
   624  000CBE                     _CURSOR_ONOFF:
   625                           	callstack 26
   626                           
   627                           ;incstack = 0
   628                           ;CURSOR_ONOFF@estado stored from wreg
   629  000CBE  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   630  000CC0                     
   631                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   632  000CC0  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   633  000CC2  A4D8               	btfss	status,2,c
   634  000CC4  EF66  F006         	goto	u21
   635  000CC8  EF68  F006         	goto	u20
   636  000CCC                     u21:
   637  000CCC  EF6B  F006         	goto	l894
   638  000CD0                     u20:
   639  000CD0  0E0E               	movlw	14
   640  000CD2  EC2B  F006         	call	_ENVIA_LCD_CMD
   641  000CD6                     l894:
   642                           
   643                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   644  000CD6  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   645  000CD8  A4D8               	btfss	status,2,c
   646  000CDA  EF71  F006         	goto	u31
   647  000CDE  EF73  F006         	goto	u30
   648  000CE2                     u31:
   649  000CE2  EF76  F006         	goto	l42
   650  000CE6                     u30:
   651  000CE6  0E0C               	movlw	12
   652  000CE8  EC2B  F006         	call	_ENVIA_LCD_CMD
   653  000CEC                     l42:
   654  000CEC  0012               	return		;funcret
   655  000CEE                     __end_of_CURSOR_ONOFF:
   656                           	callstack 0
   657                           
   658 ;; *************** function _CURSOR_HOME *****************
   659 ;; Defined at:
   660 ;;		line 30 in file "LCD.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         0       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 3
   681 ;; This function calls:
   682 ;;		_ENVIA_LCD_CMD
   683 ;; This function is called by:
   684 ;;		_lcd_init
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text4
   689  000D3E                     __ptext4:
   690                           	callstack 0
   691  000D3E                     _CURSOR_HOME:
   692                           	callstack 26
   693  000D3E                     
   694                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   695  000D3E  0E02               	movlw	2
   696  000D40  EC2B  F006         	call	_ENVIA_LCD_CMD
   697  000D44  0012               	return		;funcret
   698  000D46                     __end_of_CURSOR_HOME:
   699                           	callstack 0
   700                           
   701 ;; *************** function _BORRAR_LCD *****************
   702 ;; Defined at:
   703 ;;		line 67 in file "LCD.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2, status,0, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   717 ;;      Params:         0       0       0       0       0       0       0       0       0
   718 ;;      Locals:         0       0       0       0       0       0       0       0       0
   719 ;;      Temps:          0       0       0       0       0       0       0       0       0
   720 ;;      Totals:         0       0       0       0       0       0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used: 1
   723 ;; Hardware stack levels required when called: 3
   724 ;; This function calls:
   725 ;;		_ENVIA_LCD_CMD
   726 ;; This function is called by:
   727 ;;		_lcd_init
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text5
   732  000D46                     __ptext5:
   733                           	callstack 0
   734  000D46                     _BORRAR_LCD:
   735                           	callstack 26
   736  000D46                     
   737                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   738  000D46  0E01               	movlw	1
   739  000D48  EC2B  F006         	call	_ENVIA_LCD_CMD
   740  000D4C  0012               	return		;funcret
   741  000D4E                     __end_of_BORRAR_LCD:
   742                           	callstack 0
   743                           
   744 ;; *************** function _individualizar_digitos *****************
   745 ;; Defined at:
   746 ;;		line 22 in file "maincode3.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  entrada         1    wreg     unsigned char 
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  entrada         1   14[COMRAM] unsigned char 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   760 ;;      Params:         0       0       0       0       0       0       0       0       0
   761 ;;      Locals:         1       0       0       0       0       0       0       0       0
   762 ;;      Temps:          0       0       0       0       0       0       0       0       0
   763 ;;      Totals:         1       0       0       0       0       0       0       0       0
   764 ;;Total ram usage:        1 bytes
   765 ;; Hardware stack levels used: 1
   766 ;; Hardware stack levels required when called: 2
   767 ;; This function calls:
   768 ;;		___awdiv
   769 ;;		___awmod
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text6
   776  000B4E                     __ptext6:
   777                           	callstack 0
   778  000B4E                     _individualizar_digitos:
   779                           	callstack 28
   780                           
   781                           ;incstack = 0
   782                           ;individualizar_digitos@entrada stored from wreg
   783  000B4E  6E0F               	movwf	individualizar_digitos@entrada^0,c
   784  000B50                     
   785                           ;maincode3.c: 23:     centena = entrada / 100;
   786  000B50  C00F  F007         	movff	individualizar_digitos@entrada,___awdiv@dividend
   787  000B54  6A08               	clrf	(___awdiv@dividend+1)^0,c
   788  000B56  0E00               	movlw	0
   789  000B58  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   790  000B5A  0E64               	movlw	100
   791  000B5C  6E09               	movwf	___awdiv@divisor^0,c
   792  000B5E  EC09  F004         	call	___awdiv	;wreg free
   793  000B62  5007               	movf	?___awdiv^0,w,c
   794  000B64  6E12               	movwf	_centena^0,c
   795                           
   796                           ;maincode3.c: 24:     decena = (entrada % 100) / 10;
   797  000B66  0E00               	movlw	0
   798  000B68  6E04               	movwf	(___awmod@divisor+1)^0,c
   799  000B6A  0E64               	movlw	100
   800  000B6C  6E03               	movwf	___awmod@divisor^0,c
   801  000B6E  C00F  F001         	movff	individualizar_digitos@entrada,___awmod@dividend
   802  000B72  6A02               	clrf	(___awmod@dividend+1)^0,c
   803  000B74  EC6B  F004         	call	___awmod	;wreg free
   804  000B78  C001  F007         	movff	?___awmod,___awdiv@dividend
   805  000B7C  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   806  000B80  0E00               	movlw	0
   807  000B82  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   808  000B84  0E0A               	movlw	10
   809  000B86  6E09               	movwf	___awdiv@divisor^0,c
   810  000B88  EC09  F004         	call	___awdiv	;wreg free
   811  000B8C  5007               	movf	?___awdiv^0,w,c
   812  000B8E  6E11               	movwf	_decena^0,c
   813                           
   814                           ;maincode3.c: 25:     unidad = entrada % 10;
   815  000B90  C00F  F001         	movff	individualizar_digitos@entrada,___awmod@dividend
   816  000B94  6A02               	clrf	(___awmod@dividend+1)^0,c
   817  000B96  0E00               	movlw	0
   818  000B98  6E04               	movwf	(___awmod@divisor+1)^0,c
   819  000B9A  0E0A               	movlw	10
   820  000B9C  6E03               	movwf	___awmod@divisor^0,c
   821  000B9E  EC6B  F004         	call	___awmod	;wreg free
   822  000BA2  5001               	movf	?___awmod^0,w,c
   823  000BA4  6E10               	movwf	_unidad^0,c
   824  000BA6  0012               	return		;funcret
   825  000BA8                     __end_of_individualizar_digitos:
   826                           	callstack 0
   827                           
   828 ;; *************** function ___awmod *****************
   829 ;; Defined at:
   830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  dividend        2    0[COMRAM] int 
   833 ;;  divisor         2    2[COMRAM] int 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  sign            1    5[COMRAM] unsigned char 
   836 ;;  counter         1    4[COMRAM] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  2    0[COMRAM] int 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   846 ;;      Params:         4       0       0       0       0       0       0       0       0
   847 ;;      Locals:         2       0       0       0       0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0
   849 ;;      Totals:         6       0       0       0       0       0       0       0       0
   850 ;;Total ram usage:        6 bytes
   851 ;; Hardware stack levels used: 1
   852 ;; Hardware stack levels required when called: 1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_individualizar_digitos
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text7
   861  0008D6                     __ptext7:
   862                           	callstack 0
   863  0008D6                     ___awmod:
   864                           	callstack 28
   865  0008D6  0E00               	movlw	0
   866  0008D8  6E06               	movwf	___awmod@sign^0,c
   867  0008DA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   868  0008DC  EF74  F004         	goto	u330
   869  0008E0  EF72  F004         	goto	u331
   870  0008E4                     u331:
   871  0008E4  EF7A  F004         	goto	l1204
   872  0008E8                     u330:
   873  0008E8  6C01               	negf	___awmod@dividend^0,c
   874  0008EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
   875  0008EC  B0D8               	btfsc	status,0,c
   876  0008EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
   877  0008F0  0E01               	movlw	1
   878  0008F2  6E06               	movwf	___awmod@sign^0,c
   879  0008F4                     l1204:
   880  0008F4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   881  0008F6  EF81  F004         	goto	u340
   882  0008FA  EF7F  F004         	goto	u341
   883  0008FE                     u341:
   884  0008FE  EF85  F004         	goto	l1208
   885  000902                     u340:
   886  000902  6C03               	negf	___awmod@divisor^0,c
   887  000904  1E04               	comf	(___awmod@divisor+1)^0,f,c
   888  000906  B0D8               	btfsc	status,0,c
   889  000908  2A04               	incf	(___awmod@divisor+1)^0,f,c
   890  00090A                     l1208:
   891  00090A  5003               	movf	___awmod@divisor^0,w,c
   892  00090C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   893  00090E  B4D8               	btfsc	status,2,c
   894  000910  EF8C  F004         	goto	u351
   895  000914  EF8E  F004         	goto	u350
   896  000918                     u351:
   897  000918  EFB2  F004         	goto	l1224
   898  00091C                     u350:
   899  00091C  0E01               	movlw	1
   900  00091E  6E05               	movwf	___awmod@counter^0,c
   901  000920  EF96  F004         	goto	l1214
   902  000924                     l1212:
   903  000924  90D8               	bcf	status,0,c
   904  000926  3603               	rlcf	___awmod@divisor^0,f,c
   905  000928  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   906  00092A  2A05               	incf	___awmod@counter^0,f,c
   907  00092C                     l1214:
   908  00092C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   909  00092E  EF9B  F004         	goto	u361
   910  000932  EF9D  F004         	goto	u360
   911  000936                     u361:
   912  000936  EF92  F004         	goto	l1212
   913  00093A                     u360:
   914  00093A                     l1216:
   915  00093A  5003               	movf	___awmod@divisor^0,w,c
   916  00093C  5C01               	subwf	___awmod@dividend^0,w,c
   917  00093E  5004               	movf	(___awmod@divisor+1)^0,w,c
   918  000940  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   919  000942  A0D8               	btfss	status,0,c
   920  000944  EFA6  F004         	goto	u371
   921  000948  EFA8  F004         	goto	u370
   922  00094C                     u371:
   923  00094C  EFAC  F004         	goto	l1220
   924  000950                     u370:
   925  000950  5003               	movf	___awmod@divisor^0,w,c
   926  000952  5E01               	subwf	___awmod@dividend^0,f,c
   927  000954  5004               	movf	(___awmod@divisor+1)^0,w,c
   928  000956  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   929  000958                     l1220:
   930  000958  90D8               	bcf	status,0,c
   931  00095A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   932  00095C  3203               	rrcf	___awmod@divisor^0,f,c
   933  00095E  2E05               	decfsz	___awmod@counter^0,f,c
   934  000960  EF9D  F004         	goto	l1216
   935  000964                     l1224:
   936  000964  5006               	movf	___awmod@sign^0,w,c
   937  000966  B4D8               	btfsc	status,2,c
   938  000968  EFB8  F004         	goto	u381
   939  00096C  EFBA  F004         	goto	u380
   940  000970                     u381:
   941  000970  EFBE  F004         	goto	l1228
   942  000974                     u380:
   943  000974  6C01               	negf	___awmod@dividend^0,c
   944  000976  1E02               	comf	(___awmod@dividend+1)^0,f,c
   945  000978  B0D8               	btfsc	status,0,c
   946  00097A  2A02               	incf	(___awmod@dividend+1)^0,f,c
   947  00097C                     l1228:
   948  00097C  C001  F001         	movff	___awmod@dividend,?___awmod
   949  000980  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   950  000984  0012               	return		;funcret
   951  000986                     __end_of___awmod:
   952                           	callstack 0
   953                           
   954 ;; *************** function ___awdiv *****************
   955 ;; Defined at:
   956 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  dividend        2    6[COMRAM] int 
   959 ;;  divisor         2    8[COMRAM] int 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  quotient        2   12[COMRAM] int 
   962 ;;  sign            1   11[COMRAM] unsigned char 
   963 ;;  counter         1   10[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2    6[COMRAM] int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         4       0       0       0       0       0       0       0       0
   974 ;;      Locals:         4       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         8       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        8 bytes
   978 ;; Hardware stack levels used: 1
   979 ;; Hardware stack levels required when called: 1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_individualizar_digitos
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text8
   988  000812                     __ptext8:
   989                           	callstack 0
   990  000812                     ___awdiv:
   991                           	callstack 28
   992  000812  0E00               	movlw	0
   993  000814  6E0C               	movwf	___awdiv@sign^0,c
   994  000816  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   995  000818  EF12  F004         	goto	u270
   996  00081C  EF10  F004         	goto	u271
   997  000820                     u271:
   998  000820  EF18  F004         	goto	l1160
   999  000824                     u270:
  1000  000824  6C09               	negf	___awdiv@divisor^0,c
  1001  000826  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1002  000828  B0D8               	btfsc	status,0,c
  1003  00082A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1004  00082C  0E01               	movlw	1
  1005  00082E  6E0C               	movwf	___awdiv@sign^0,c
  1006  000830                     l1160:
  1007  000830  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1008  000832  EF1F  F004         	goto	u280
  1009  000836  EF1D  F004         	goto	u281
  1010  00083A                     u281:
  1011  00083A  EF25  F004         	goto	l1166
  1012  00083E                     u280:
  1013  00083E  6C07               	negf	___awdiv@dividend^0,c
  1014  000840  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1015  000842  B0D8               	btfsc	status,0,c
  1016  000844  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1017  000846  0E01               	movlw	1
  1018  000848  1A0C               	xorwf	___awdiv@sign^0,f,c
  1019  00084A                     l1166:
  1020  00084A  0E00               	movlw	0
  1021  00084C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1022  00084E  0E00               	movlw	0
  1023  000850  6E0D               	movwf	___awdiv@quotient^0,c
  1024  000852  5009               	movf	___awdiv@divisor^0,w,c
  1025  000854  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1026  000856  B4D8               	btfsc	status,2,c
  1027  000858  EF30  F004         	goto	u291
  1028  00085C  EF32  F004         	goto	u290
  1029  000860                     u291:
  1030  000860  EF5A  F004         	goto	l1188
  1031  000864                     u290:
  1032  000864  0E01               	movlw	1
  1033  000866  6E0B               	movwf	___awdiv@counter^0,c
  1034  000868  EF3A  F004         	goto	l1174
  1035  00086C                     l1172:
  1036  00086C  90D8               	bcf	status,0,c
  1037  00086E  3609               	rlcf	___awdiv@divisor^0,f,c
  1038  000870  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1039  000872  2A0B               	incf	___awdiv@counter^0,f,c
  1040  000874                     l1174:
  1041  000874  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1042  000876  EF3F  F004         	goto	u301
  1043  00087A  EF41  F004         	goto	u300
  1044  00087E                     u301:
  1045  00087E  EF36  F004         	goto	l1172
  1046  000882                     u300:
  1047  000882                     l1176:
  1048  000882  90D8               	bcf	status,0,c
  1049  000884  360D               	rlcf	___awdiv@quotient^0,f,c
  1050  000886  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1051  000888  5009               	movf	___awdiv@divisor^0,w,c
  1052  00088A  5C07               	subwf	___awdiv@dividend^0,w,c
  1053  00088C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1054  00088E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1055  000890  A0D8               	btfss	status,0,c
  1056  000892  EF4D  F004         	goto	u311
  1057  000896  EF4F  F004         	goto	u310
  1058  00089A                     u311:
  1059  00089A  EF54  F004         	goto	l1184
  1060  00089E                     u310:
  1061  00089E  5009               	movf	___awdiv@divisor^0,w,c
  1062  0008A0  5E07               	subwf	___awdiv@dividend^0,f,c
  1063  0008A2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1064  0008A4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1065  0008A6  800D               	bsf	___awdiv@quotient^0,0,c
  1066  0008A8                     l1184:
  1067  0008A8  90D8               	bcf	status,0,c
  1068  0008AA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1069  0008AC  3209               	rrcf	___awdiv@divisor^0,f,c
  1070  0008AE  2E0B               	decfsz	___awdiv@counter^0,f,c
  1071  0008B0  EF41  F004         	goto	l1176
  1072  0008B4                     l1188:
  1073  0008B4  500C               	movf	___awdiv@sign^0,w,c
  1074  0008B6  B4D8               	btfsc	status,2,c
  1075  0008B8  EF60  F004         	goto	u321
  1076  0008BC  EF62  F004         	goto	u320
  1077  0008C0                     u321:
  1078  0008C0  EF66  F004         	goto	l1192
  1079  0008C4                     u320:
  1080  0008C4  6C0D               	negf	___awdiv@quotient^0,c
  1081  0008C6  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1082  0008C8  B0D8               	btfsc	status,0,c
  1083  0008CA  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1084  0008CC                     l1192:
  1085  0008CC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1086  0008D0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1087  0008D4  0012               	return		;funcret
  1088  0008D6                     __end_of___awdiv:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _configuro *****************
  1092 ;; Defined at:
  1093 ;;		line 15 in file "maincode3.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text9
  1122  000D32                     __ptext9:
  1123                           	callstack 0
  1124  000D32                     _configuro:
  1125                           	callstack 29
  1126  000D32                     
  1127                           ;maincode3.c: 16:     T1CON = 0x0F;
  1128  000D32  0E0F               	movlw	15
  1129  000D34  6ECD               	movwf	205,c	;volatile
  1130  000D36                     
  1131                           ;maincode3.c: 17:     PIE1bits.TMR1IE = 1;
  1132  000D36  809D               	bsf	157,0,c	;volatile
  1133  000D38                     
  1134                           ;maincode3.c: 18:     INTCONbits.PEIE = 1;
  1135  000D38  8CF2               	bsf	242,6,c	;volatile
  1136  000D3A                     
  1137                           ;maincode3.c: 19:     INTCONbits.GIE = 1;
  1138  000D3A  8EF2               	bsf	242,7,c	;volatile
  1139  000D3C  0012               	return		;funcret
  1140  000D3E                     __end_of_configuro:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _POS_CURSOR *****************
  1144 ;; Defined at:
  1145 ;;		line 6 in file "LCD.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  fila            1    wreg     unsigned char 
  1148 ;;  columna         1    3[COMRAM] unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  fila            1    4[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         1       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 3
  1167 ;; This function calls:
  1168 ;;		_ENVIA_LCD_CMD
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text10
  1175  000BE6                     __ptext10:
  1176                           	callstack 0
  1177  000BE6                     _POS_CURSOR:
  1178                           	callstack 27
  1179                           
  1180                           ;incstack = 0
  1181                           ;POS_CURSOR@fila stored from wreg
  1182  000BE6  6E05               	movwf	POS_CURSOR@fila^0,c
  1183  000BE8                     
  1184                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1185  000BE8  0405               	decf	POS_CURSOR@fila^0,w,c
  1186  000BEA  A4D8               	btfss	status,2,c
  1187  000BEC  EFFA  F005         	goto	u391
  1188  000BF0  EFFC  F005         	goto	u390
  1189  000BF4                     u391:
  1190  000BF4  EF02  F006         	goto	l1236
  1191  000BF8                     u390:
  1192  000BF8                     
  1193                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1194  000BF8  5004               	movf	POS_CURSOR@columna^0,w,c
  1195  000BFA  0F80               	addlw	128
  1196  000BFC  EC2B  F006         	call	_ENVIA_LCD_CMD
  1197                           
  1198                           ;LCD.c: 11:  }
  1199  000C00  EF0F  F006         	goto	l24
  1200  000C04                     l1236:
  1201  000C04  0E02               	movlw	2
  1202  000C06  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1203  000C08  A4D8               	btfss	status,2,c
  1204  000C0A  EF09  F006         	goto	u401
  1205  000C0E  EF0B  F006         	goto	u400
  1206  000C12                     u401:
  1207  000C12  EF0F  F006         	goto	l24
  1208  000C16                     u400:
  1209  000C16                     
  1210                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1211  000C16  5004               	movf	POS_CURSOR@columna^0,w,c
  1212  000C18  0FC0               	addlw	192
  1213  000C1A  EC2B  F006         	call	_ENVIA_LCD_CMD
  1214  000C1E                     l24:
  1215  000C1E  0012               	return		;funcret
  1216  000C20                     __end_of_POS_CURSOR:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _ENVIA_LCD_CMD *****************
  1220 ;; Defined at:
  1221 ;;		line 104 in file "LCD.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  dato            1    wreg     unsigned char 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  dato            1    1[COMRAM] unsigned char 
  1226 ;;  aux             1    2[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, status,2, status,0, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1236 ;;      Params:         0       0       0       0       0       0       0       0       0
  1237 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1239 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1240 ;;Total ram usage:        2 bytes
  1241 ;; Hardware stack levels used: 1
  1242 ;; Hardware stack levels required when called: 2
  1243 ;; This function calls:
  1244 ;;		_ENVIA_NIBBLE
  1245 ;;		_LEER_LCD
  1246 ;; This function is called by:
  1247 ;;		_POS_CURSOR
  1248 ;;		_CURSOR_HOME
  1249 ;;		_CURSOR_ONOFF
  1250 ;;		_BORRAR_LCD
  1251 ;;		_LCD_CONFIG
  1252 ;;		_BLINK_CURSOR
  1253 ;;		_DISPLAY_ONOFF
  1254 ;;		_GENERACARACTER
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text11
  1259  000C56                     __ptext11:
  1260                           	callstack 0
  1261  000C56                     _ENVIA_LCD_CMD:
  1262                           	callstack 26
  1263                           
  1264                           ;incstack = 0
  1265                           ;ENVIA_LCD_CMD@dato stored from wreg
  1266  000C56  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1267  000C58                     
  1268                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1269  000C58  908C               	bcf	140,0,c	;volatile
  1270  000C5A                     
  1271                           ;LCD.c: 108:  LEER_LCD();
  1272  000C5A  EC0C  F005         	call	_LEER_LCD	;wreg free
  1273  000C5E                     
  1274                           ;LCD.c: 109:  TRISD = 0b00000000;
  1275  000C5E  0E00               	movlw	0
  1276  000C60  6E95               	movwf	149,c	;volatile
  1277  000C62                     
  1278                           ;LCD.c: 111:         _delay(1200);
  1279  000C62  0EF0               	movlw	240
  1280  000C64                     u467:
  1281  000C64  D000               	nop2	
  1282  000C66  2EE8               	decfsz	wreg,f,c
  1283  000C68  D7FD               	bra	u467
  1284  000C6A                     
  1285                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1286  000C6A  928C               	bcf	140,1,c	;volatile
  1287  000C6C                     
  1288                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1289  000C6C  948C               	bcf	140,2,c	;volatile
  1290  000C6E                     
  1291                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1292  000C6E  908C               	bcf	140,0,c	;volatile
  1293  000C70                     
  1294                           ;LCD.c: 115:  aux = dato & 0xF0;
  1295  000C70  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1296  000C72  0BF0               	andlw	240
  1297  000C74  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1298  000C76                     
  1299                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1300  000C76  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1301  000C78  EC8B  F006         	call	_ENVIA_NIBBLE
  1302  000C7C                     
  1303                           ;LCD.c: 117:  aux = dato<<4;
  1304  000C7C  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1305  000C7E  0BF0               	andlw	240
  1306  000C80  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1307  000C82                     
  1308                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1309  000C82  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1310  000C84  EC8B  F006         	call	_ENVIA_NIBBLE
  1311  000C88  0012               	return		;funcret
  1312  000C8A                     __end_of_ENVIA_LCD_CMD:
  1313                           	callstack 0
  1314                           
  1315 ;; *************** function _ESCRIBE_MENSAJE *****************
  1316 ;; Defined at:
  1317 ;;		line 41 in file "LCD.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1320 ;;		 -> STR_2(7), STR_1(9), 
  1321 ;;  tam             1    5[COMRAM] unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  i               1    8[COMRAM] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1333 ;;      Params:         3       0       0       0       0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1335 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1336 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1337 ;;Total ram usage:        6 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 3
  1340 ;; This function calls:
  1341 ;;		_ENVIA_CHAR
  1342 ;; This function is called by:
  1343 ;;		_main
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           	psect	text12
  1348  000BA8                     __ptext12:
  1349                           	callstack 0
  1350  000BA8                     _ESCRIBE_MENSAJE:
  1351                           	callstack 27
  1352  000BA8                     
  1353                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1354  000BA8  0E00               	movlw	0
  1355  000BAA  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1356                           
  1357                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1358  000BAC  0E00               	movlw	0
  1359  000BAE  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1360  000BB0  EFE9  F005         	goto	l1246
  1361  000BB4                     l1242:
  1362                           
  1363                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1364  000BB4  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1365  000BB6  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1366  000BB8  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1367  000BBA  0E00               	movlw	0
  1368  000BBC  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1369  000BBE  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1370  000BC0  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1371  000BC4  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1372  000BC8                     	if	0	;tblptru may be non-zero
  1373  000BC8                     	endif
  1374  000BC8                     	if	0	;tblptru may be non-zero
  1375  000BC8                     	endif
  1376  000BC8  0008               	tblrd		*
  1377  000BCA  50F5               	movf	tablat,w,c
  1378  000BCC  EC45  F006         	call	_ENVIA_CHAR
  1379  000BD0                     
  1380                           ;LCD.c: 47:  }
  1381  000BD0  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1382  000BD2                     l1246:
  1383  000BD2  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1384  000BD4  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1385  000BD6  A0D8               	btfss	status,0,c
  1386  000BD8  EFF0  F005         	goto	u411
  1387  000BDC  EFF2  F005         	goto	u410
  1388  000BE0                     u411:
  1389  000BE0  EFDA  F005         	goto	l1242
  1390  000BE4                     u410:
  1391  000BE4  0012               	return		;funcret
  1392  000BE6                     __end_of_ESCRIBE_MENSAJE:
  1393                           	callstack 0
  1394                           
  1395 ;; *************** function _ENVIA_CHAR *****************
  1396 ;; Defined at:
  1397 ;;		line 50 in file "LCD.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  dato            1    wreg     unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  dato            1    1[COMRAM] unsigned char 
  1402 ;;  aux             1    2[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0
  1413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1415 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 2
  1419 ;; This function calls:
  1420 ;;		_ENVIA_NIBBLE
  1421 ;;		_LEER_LCD
  1422 ;; This function is called by:
  1423 ;;		_ESCRIBE_MENSAJE
  1424 ;;		_main
  1425 ;;		_GENERACARACTER
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text13
  1430  000C8A                     __ptext13:
  1431                           	callstack 0
  1432  000C8A                     _ENVIA_CHAR:
  1433                           	callstack 27
  1434                           
  1435                           ;incstack = 0
  1436                           ;ENVIA_CHAR@dato stored from wreg
  1437  000C8A  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1438  000C8C                     
  1439                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1440  000C8C  808C               	bsf	140,0,c	;volatile
  1441  000C8E                     
  1442                           ;LCD.c: 54:  LEER_LCD();
  1443  000C8E  EC0C  F005         	call	_LEER_LCD	;wreg free
  1444  000C92                     
  1445                           ;LCD.c: 55:  TRISD = 0x00;
  1446  000C92  0E00               	movlw	0
  1447  000C94  6E95               	movwf	149,c	;volatile
  1448  000C96                     
  1449                           ;LCD.c: 56:         _delay(1200);
  1450  000C96  0EF0               	movlw	240
  1451  000C98                     u477:
  1452  000C98  D000               	nop2	
  1453  000C9A  2EE8               	decfsz	wreg,f,c
  1454  000C9C  D7FD               	bra	u477
  1455  000C9E                     
  1456                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1457  000C9E  928C               	bcf	140,1,c	;volatile
  1458  000CA0                     
  1459                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1460  000CA0  948C               	bcf	140,2,c	;volatile
  1461  000CA2                     
  1462                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1463  000CA2  808C               	bsf	140,0,c	;volatile
  1464  000CA4                     
  1465                           ;LCD.c: 61:  aux = dato & 0xF0;
  1466  000CA4  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1467  000CA6  0BF0               	andlw	240
  1468  000CA8  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1469  000CAA                     
  1470                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1471  000CAA  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1472  000CAC  EC8B  F006         	call	_ENVIA_NIBBLE
  1473  000CB0                     
  1474                           ;LCD.c: 63:  aux = dato << 4;
  1475  000CB0  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1476  000CB2  0BF0               	andlw	240
  1477  000CB4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1478  000CB6                     
  1479                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1480  000CB6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1481  000CB8  EC8B  F006         	call	_ENVIA_NIBBLE
  1482  000CBC  0012               	return		;funcret
  1483  000CBE                     __end_of_ENVIA_CHAR:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _LEER_LCD *****************
  1487 ;; Defined at:
  1488 ;;		line 121 in file "LCD.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  aux             1    0[COMRAM] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1505 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_ENVIA_CHAR
  1513 ;;		_ENVIA_LCD_CMD
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text14
  1518  000A18                     __ptext14:
  1519                           	callstack 0
  1520  000A18                     _LEER_LCD:
  1521                           	callstack 26
  1522  000A18                     
  1523                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1524  000A18  0EF8               	movlw	248
  1525  000A1A  6E95               	movwf	149,c	;volatile
  1526  000A1C                     
  1527                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1528  000A1C  908C               	bcf	140,0,c	;volatile
  1529  000A1E                     
  1530                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1531  000A1E  828C               	bsf	140,1,c	;volatile
  1532  000A20                     
  1533                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1534  000A20  848C               	bsf	140,2,c	;volatile
  1535  000A22                     
  1536                           ;LCD.c: 128:         _delay(1200);
  1537  000A22  0EF0               	movlw	240
  1538  000A24                     u487:
  1539  000A24  D000               	nop2	
  1540  000A26  2EE8               	decfsz	wreg,f,c
  1541  000A28  D7FD               	bra	u487
  1542  000A2A                     
  1543                           ;LCD.c: 130:  aux = PORTD;
  1544  000A2A  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1545  000A2E                     
  1546                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1547  000A2E  948C               	bcf	140,2,c	;volatile
  1548  000A30                     
  1549                           ;LCD.c: 132:         _delay(1200);
  1550  000A30  0EF0               	movlw	240
  1551  000A32                     u497:
  1552  000A32  D000               	nop2	
  1553  000A34  2EE8               	decfsz	wreg,f,c
  1554  000A36  D7FD               	bra	u497
  1555  000A38                     
  1556                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1557  000A38  848C               	bsf	140,2,c	;volatile
  1558  000A3A                     
  1559                           ;LCD.c: 135:         _delay(1200);
  1560  000A3A  0EF0               	movlw	240
  1561  000A3C                     u507:
  1562  000A3C  D000               	nop2	
  1563  000A3E  2EE8               	decfsz	wreg,f,c
  1564  000A40  D7FD               	bra	u507
  1565  000A42                     
  1566                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1567  000A42  948C               	bcf	140,2,c	;volatile
  1568  000A44                     l842:
  1569                           
  1570                           ;LCD.c: 138:  aux = aux & 0x80;
  1571  000A44  5001               	movf	LEER_LCD@aux^0,w,c
  1572  000A46  0B80               	andlw	128
  1573  000A48  6E01               	movwf	LEER_LCD@aux^0,c
  1574                           
  1575                           ;LCD.c: 139:  while(aux == 0x80)
  1576  000A4A  EF3B  F005         	goto	l856
  1577  000A4E                     l67:
  1578                           
  1579                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1580  000A4E  848C               	bsf	140,2,c	;volatile
  1581  000A50                     
  1582                           ;LCD.c: 142:             _delay(1200);
  1583  000A50  0EF0               	movlw	240
  1584  000A52                     u517:
  1585  000A52  D000               	nop2	
  1586  000A54  2EE8               	decfsz	wreg,f,c
  1587  000A56  D7FD               	bra	u517
  1588  000A58                     
  1589                           ;LCD.c: 143:             aux = PORTD;
  1590  000A58  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1591  000A5C                     
  1592                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1593  000A5C  948C               	bcf	140,2,c	;volatile
  1594                           
  1595                           ;LCD.c: 145:             _delay(1200);
  1596  000A5E  0EF0               	movlw	240
  1597  000A60                     u527:
  1598  000A60  D000               	nop2	
  1599  000A62  2EE8               	decfsz	wreg,f,c
  1600  000A64  D7FD               	bra	u527
  1601  000A66                     
  1602                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1603  000A66  848C               	bsf	140,2,c	;volatile
  1604                           
  1605                           ;LCD.c: 147:             _delay(1200);
  1606  000A68  0EF0               	movlw	240
  1607  000A6A                     u537:
  1608  000A6A  D000               	nop2	
  1609  000A6C  2EE8               	decfsz	wreg,f,c
  1610  000A6E  D7FD               	bra	u537
  1611  000A70                     
  1612                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1613  000A70  948C               	bcf	140,2,c	;volatile
  1614  000A72  EF22  F005         	goto	l842
  1615  000A76                     l856:
  1616                           
  1617                           ;LCD.c: 139:  while(aux == 0x80)
  1618  000A76  0E80               	movlw	128
  1619  000A78  1801               	xorwf	LEER_LCD@aux^0,w,c
  1620  000A7A  B4D8               	btfsc	status,2,c
  1621  000A7C  EF42  F005         	goto	u11
  1622  000A80  EF44  F005         	goto	u10
  1623  000A84                     u11:
  1624  000A84  EF27  F005         	goto	l67
  1625  000A88                     u10:
  1626  000A88  0012               	return		;funcret
  1627  000A8A                     __end_of_LEER_LCD:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _ENVIA_NIBBLE *****************
  1631 ;; Defined at:
  1632 ;;		line 93 in file "LCD.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;  dato            1    wreg     unsigned char 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  dato            1    0[COMRAM] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0
  1647 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1649 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1650 ;;Total ram usage:        1 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_ENVIA_CHAR
  1657 ;;		_LCD_CONFIG
  1658 ;;		_ENVIA_LCD_CMD
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           	psect	text15
  1663  000D16                     __ptext15:
  1664                           	callstack 0
  1665  000D16                     _ENVIA_NIBBLE:
  1666                           	callstack 27
  1667                           
  1668                           ;incstack = 0
  1669                           ;ENVIA_NIBBLE@dato stored from wreg
  1670  000D16  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1671  000D18                     
  1672                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1673  000D18  0E0F               	movlw	15
  1674  000D1A  168C               	andwf	140,f,c	;volatile
  1675                           
  1676                           ;LCD.c: 96:  dato &= 0xF0;
  1677  000D1C  0EF0               	movlw	240
  1678  000D1E  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1679                           
  1680                           ;LCD.c: 97:  LATD|= dato;
  1681  000D20  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1682  000D22  128C               	iorwf	140,f,c	;volatile
  1683  000D24                     
  1684                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1685  000D24  848C               	bsf	140,2,c	;volatile
  1686  000D26                     
  1687                           ;LCD.c: 100:         _delay(1200);
  1688  000D26  0EF0               	movlw	240
  1689  000D28                     u547:
  1690  000D28  D000               	nop2	
  1691  000D2A  2EE8               	decfsz	wreg,f,c
  1692  000D2C  D7FD               	bra	u547
  1693  000D2E                     
  1694                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1695  000D2E  948C               	bcf	140,2,c	;volatile
  1696  000D30  0012               	return		;funcret
  1697  000D32                     __end_of_ENVIA_NIBBLE:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _TMR1_ISR *****************
  1701 ;; Defined at:
  1702 ;;		line 60 in file "maincode3.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		Interrupt level 2
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	intcode
  1730  000008                     __pintcode:
  1731                           	callstack 0
  1732  000008                     _TMR1_ISR:
  1733                           	callstack 26
  1734                           
  1735                           ;incstack = 0
  1736  000008  8216               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1737  00000A  ED45  F005         	call	int_func,f	;refresh shadow registers
  1738                           
  1739                           	psect	intcode_body
  1740  000A8A                     __pintcode_body:
  1741                           	callstack 26
  1742  000A8A                     int_func:
  1743                           	callstack 26
  1744  000A8A  0006               	pop		; remove dummy address from shadow register refresh
  1745  000A8C                     
  1746                           ;maincode3.c: 61:     PIR1bits.TMR1IF = 0;
  1747  000A8C  909E               	bcf	158,0,c	;volatile
  1748  000A8E                     
  1749                           ;maincode3.c: 62:     TMR1H = 0x80;
  1750  000A8E  0E80               	movlw	128
  1751  000A90  6ECF               	movwf	207,c	;volatile
  1752                           
  1753                           ;maincode3.c: 63:     TMR1L = 0x00;
  1754  000A92  0E00               	movlw	0
  1755  000A94  6ECE               	movwf	206,c	;volatile
  1756  000A96                     
  1757                           ;maincode3.c: 64:     if(segundos == 59){
  1758  000A96  0E3B               	movlw	59
  1759  000A98  1813               	xorwf	_segundos^0,w,c
  1760  000A9A  A4D8               	btfss	status,2,c
  1761  000A9C  EF52  F005         	goto	i2u24_41
  1762  000AA0  EF54  F005         	goto	i2u24_40
  1763  000AA4                     i2u24_41:
  1764  000AA4  EF74  F005         	goto	i2l1150
  1765  000AA8                     i2u24_40:
  1766  000AA8                     
  1767                           ;maincode3.c: 65:         segundos = 0;
  1768  000AA8  0E00               	movlw	0
  1769  000AAA  6E13               	movwf	_segundos^0,c
  1770  000AAC                     
  1771                           ;maincode3.c: 66:         if(minutos == 59){
  1772  000AAC  0E3B               	movlw	59
  1773  000AAE  1814               	xorwf	_minutos^0,w,c
  1774  000AB0  A4D8               	btfss	status,2,c
  1775  000AB2  EF5D  F005         	goto	i2u25_41
  1776  000AB6  EF5F  F005         	goto	i2u25_40
  1777  000ABA                     i2u25_41:
  1778  000ABA  EF71  F005         	goto	i2l1148
  1779  000ABE                     i2u25_40:
  1780  000ABE                     
  1781                           ;maincode3.c: 67:             minutos = 0;
  1782  000ABE  0E00               	movlw	0
  1783  000AC0  6E14               	movwf	_minutos^0,c
  1784  000AC2                     
  1785                           ;maincode3.c: 68:             if(horas == 23){
  1786  000AC2  0E17               	movlw	23
  1787  000AC4  1815               	xorwf	_horas^0,w,c
  1788  000AC6  A4D8               	btfss	status,2,c
  1789  000AC8  EF68  F005         	goto	i2u26_41
  1790  000ACC  EF6A  F005         	goto	i2u26_40
  1791  000AD0                     i2u26_41:
  1792  000AD0  EF6E  F005         	goto	i2l1146
  1793  000AD4                     i2u26_40:
  1794  000AD4                     
  1795                           ;maincode3.c: 69:                 horas = 0;
  1796  000AD4  0E00               	movlw	0
  1797  000AD6  6E15               	movwf	_horas^0,c
  1798                           
  1799                           ;maincode3.c: 70:             }
  1800  000AD8  EF75  F005         	goto	i2l144
  1801  000ADC                     i2l1146:
  1802                           
  1803                           ;maincode3.c: 72:                 horas++;
  1804  000ADC  2A15               	incf	_horas^0,f,c
  1805  000ADE  EF75  F005         	goto	i2l144
  1806  000AE2                     i2l1148:
  1807                           
  1808                           ;maincode3.c: 76:             minutos++;
  1809  000AE2  2A14               	incf	_minutos^0,f,c
  1810  000AE4  EF75  F005         	goto	i2l144
  1811  000AE8                     i2l1150:
  1812                           
  1813                           ;maincode3.c: 80:         segundos++;
  1814  000AE8  2A13               	incf	_segundos^0,f,c
  1815  000AEA                     i2l144:
  1816  000AEA  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1817  000AEC  0011               	retfie		f
  1818  000AEE                     __end_of_TMR1_ISR:
  1819                           	callstack 0
  1820                           
  1821                           	psect	rparam
  1822  0000                     
  1823                           	psect	temp
  1824  000016                     btemp:
  1825                           	callstack 0
  1826  000016                     	ds	1
  1827  0000                     int$flags	set	btemp
  1828  0000                     wtemp8	set	btemp+1
  1829  0000                     ttemp5	set	btemp+1
  1830  0000                     ttemp6	set	btemp+4
  1831  0000                     ttemp7	set	btemp+8
  1832                           
  1833                           	psect	idloc
  1834                           
  1835                           ;Config register IDLOC0 @ 0x200000
  1836                           ;	unspecified, using default values
  1837  200000                     	org	2097152
  1838  200000  FF                 	db	255
  1839                           
  1840                           ;Config register IDLOC1 @ 0x200001
  1841                           ;	unspecified, using default values
  1842  200001                     	org	2097153
  1843  200001  FF                 	db	255
  1844                           
  1845                           ;Config register IDLOC2 @ 0x200002
  1846                           ;	unspecified, using default values
  1847  200002                     	org	2097154
  1848  200002  FF                 	db	255
  1849                           
  1850                           ;Config register IDLOC3 @ 0x200003
  1851                           ;	unspecified, using default values
  1852  200003                     	org	2097155
  1853  200003  FF                 	db	255
  1854                           
  1855                           ;Config register IDLOC4 @ 0x200004
  1856                           ;	unspecified, using default values
  1857  200004                     	org	2097156
  1858  200004  FF                 	db	255
  1859                           
  1860                           ;Config register IDLOC5 @ 0x200005
  1861                           ;	unspecified, using default values
  1862  200005                     	org	2097157
  1863  200005  FF                 	db	255
  1864                           
  1865                           ;Config register IDLOC6 @ 0x200006
  1866                           ;	unspecified, using default values
  1867  200006                     	org	2097158
  1868  200006  FF                 	db	255
  1869                           
  1870                           ;Config register IDLOC7 @ 0x200007
  1871                           ;	unspecified, using default values
  1872  200007                     	org	2097159
  1873  200007  FF                 	db	255
  1874                           
  1875                           	psect	config
  1876                           
  1877                           ;Config register CONFIG1L @ 0x300000
  1878                           ;	PLL Prescaler Selection bits
  1879                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1880                           ;	System Clock Postscaler Selection bits
  1881                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1882                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1883                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1884  300000                     	org	3145728
  1885  300000  00                 	db	0
  1886                           
  1887                           ;Config register CONFIG1H @ 0x300001
  1888                           ;	Oscillator Selection bits
  1889                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1890                           ;	Fail-Safe Clock Monitor Enable bit
  1891                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1892                           ;	Internal/External Oscillator Switchover bit
  1893                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1894  300001                     	org	3145729
  1895  300001  02                 	db	2
  1896                           
  1897                           ;Config register CONFIG2L @ 0x300002
  1898                           ;	Power-up Timer Enable bit
  1899                           ;	PWRT = ON, PWRT enabled
  1900                           ;	Brown-out Reset Enable bits
  1901                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1902                           ;	Brown-out Reset Voltage bits
  1903                           ;	BORV = 3, Minimum setting 2.05V
  1904                           ;	USB Voltage Regulator Enable bit
  1905                           ;	VREGEN = OFF, USB voltage regulator disabled
  1906  300002                     	org	3145730
  1907  300002  18                 	db	24
  1908                           
  1909                           ;Config register CONFIG2H @ 0x300003
  1910                           ;	Watchdog Timer Enable bit
  1911                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1912                           ;	Watchdog Timer Postscale Select bits
  1913                           ;	WDTPS = 32768, 1:32768
  1914  300003                     	org	3145731
  1915  300003  1E                 	db	30
  1916                           
  1917                           ; Padding undefined space
  1918  300004                     	org	3145732
  1919  300004  FF                 	db	255
  1920                           
  1921                           ;Config register CONFIG3H @ 0x300005
  1922                           ;	CCP2 MUX bit
  1923                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1924                           ;	PORTB A/D Enable bit
  1925                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1926                           ;	Low-Power Timer 1 Oscillator Enable bit
  1927                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1928                           ;	MCLR Pin Enable bit
  1929                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1930  300005                     	org	3145733
  1931  300005  81                 	db	129
  1932                           
  1933                           ;Config register CONFIG4L @ 0x300006
  1934                           ;	Stack Full/Underflow Reset Enable bit
  1935                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1936                           ;	Single-Supply ICSP Enable bit
  1937                           ;	LVP = OFF, Single-Supply ICSP disabled
  1938                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1939                           ;	ICPRT = OFF, ICPORT disabled
  1940                           ;	Extended Instruction Set Enable bit
  1941                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1942                           ;	Background Debugger Enable bit
  1943                           ;	DEBUG = 0x1, unprogrammed default
  1944  300006                     	org	3145734
  1945  300006  81                 	db	129
  1946                           
  1947                           ; Padding undefined space
  1948  300007                     	org	3145735
  1949  300007  FF                 	db	255
  1950                           
  1951                           ;Config register CONFIG5L @ 0x300008
  1952                           ;	Code Protection bit
  1953                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1954                           ;	Code Protection bit
  1955                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1956                           ;	Code Protection bit
  1957                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1958                           ;	Code Protection bit
  1959                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1960  300008                     	org	3145736
  1961  300008  0F                 	db	15
  1962                           
  1963                           ;Config register CONFIG5H @ 0x300009
  1964                           ;	Boot Block Code Protection bit
  1965                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1966                           ;	Data EEPROM Code Protection bit
  1967                           ;	CPD = OFF, Data EEPROM is not code-protected
  1968  300009                     	org	3145737
  1969  300009  C0                 	db	192
  1970                           
  1971                           ;Config register CONFIG6L @ 0x30000A
  1972                           ;	Write Protection bit
  1973                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1974                           ;	Write Protection bit
  1975                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1976                           ;	Write Protection bit
  1977                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1978                           ;	Write Protection bit
  1979                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1980  30000A                     	org	3145738
  1981  30000A  0F                 	db	15
  1982                           
  1983                           ;Config register CONFIG6H @ 0x30000B
  1984                           ;	Configuration Register Write Protection bit
  1985                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1986                           ;	Boot Block Write Protection bit
  1987                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1988                           ;	Data EEPROM Write Protection bit
  1989                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1990  30000B                     	org	3145739
  1991  30000B  E0                 	db	224
  1992                           
  1993                           ;Config register CONFIG7L @ 0x30000C
  1994                           ;	Table Read Protection bit
  1995                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1996                           ;	Table Read Protection bit
  1997                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1998                           ;	Table Read Protection bit
  1999                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2000                           ;	Table Read Protection bit
  2001                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2002  30000C                     	org	3145740
  2003  30000C  0F                 	db	15
  2004                           
  2005                           ;Config register CONFIG7H @ 0x30000D
  2006                           ;	Boot Block Table Read Protection bit
  2007                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2008  30000D                     	org	3145741
  2009  30000D  40                 	db	64
  2010                           tosu	equ	0xFFF
  2011                           tosh	equ	0xFFE
  2012                           tosl	equ	0xFFD
  2013                           stkptr	equ	0xFFC
  2014                           pclatu	equ	0xFFB
  2015                           pclath	equ	0xFFA
  2016                           pcl	equ	0xFF9
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           indf0	equ	0xFEF
  2024                           postinc0	equ	0xFEE
  2025                           postdec0	equ	0xFED
  2026                           preinc0	equ	0xFEC
  2027                           plusw0	equ	0xFEB
  2028                           fsr0h	equ	0xFEA
  2029                           fsr0l	equ	0xFE9
  2030                           wreg	equ	0xFE8
  2031                           indf1	equ	0xFE7
  2032                           postinc1	equ	0xFE6
  2033                           postdec1	equ	0xFE5
  2034                           preinc1	equ	0xFE4
  2035                           plusw1	equ	0xFE3
  2036                           fsr1h	equ	0xFE2
  2037                           fsr1l	equ	0xFE1
  2038                           bsr	equ	0xFE0
  2039                           indf2	equ	0xFDF
  2040                           postinc2	equ	0xFDE
  2041                           postdec2	equ	0xFDD
  2042                           preinc2	equ	0xFDC
  2043                           plusw2	equ	0xFDB
  2044                           fsr2h	equ	0xFDA
  2045                           fsr2l	equ	0xFD9
  2046                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    0
    Data        3
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[7]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_individualizar_digitos
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _individualizar_digitos->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _TMR1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2790
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
             _individualizar_digitos
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _individualizar_digitos                               1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _individualizar_digitos
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _TMR1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      15       1       22.3%
BITBIGSFRhhlh       2E      0       0      22        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRhhhlh      22      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRhl          8      0       0      24        0.0%
BITBIGSFRhhll        7      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      27        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Oct 12 16:52:54 2022

                            l24 0C1E                              l42 0CEC                              l51 0CBC  
                            l60 0D30                              l37 0D44                              l54 0D4C  
                            l63 0C88                              l48 0BE4                              l57 0B4C  
                            l67 0A4E                              l69 0A88                              u10 0A88  
                            u11 0A84                              u20 0CD0                              u21 0CCC  
                            u30 0CE6                              u31 0CE2                    ___awdiv@sign 000C  
                 ENVIA_CHAR@aux 0003                             l122 0BA6                             l125 0D14  
                           l119 0D3C                             l391 0984                             l378 08D4  
                           l820 0A18                             l900 0C8E                             l830 0A2A  
                           l822 0A1C                             l910 0CA2                             l902 0C92  
                           l840 0A42                             l832 0A2E                             l824 0A1E  
                           l912 0CA4                             l904 0C96                             l920 0D46  
                           l850 0A66                             l842 0A44                             l834 0A30  
                           l826 0A20                             l914 0CAA                             l906 0C9E  
                           l930 0B1A                             l922 0AEE                             l860 0D24  
                           l852 0A70                             l844 0A50                             l836 0A38  
                           l828 0A22                             l916 0CB0                             l908 0CA0  
                           l940 0B3A                             l932 0B22                             l924 0AF2  
                           l862 0D26                             l846 0A58                             l838 0A3A  
                           l918 0CB6                             l870 0C5E                             l942 0B40  
                           l934 0B28                             l926 0AF8                             l864 0D2E  
                           l848 0A5C                             l856 0A76                             l880 0C70  
                           l872 0C62                             l944 0B46                             l936 0B2E  
                           l928 0B06                             l858 0D18                             l882 0C76  
                           l874 0C6A                             l866 0C58                             l890 0CC0  
                           l938 0B34                             l884 0C7C                             l876 0C6C  
                           l868 0C5A                             l892 0CD0                             l886 0C82  
                           l878 0C6E                             l894 0CD6                             l888 0D3E  
                           l896 0CE6                             l898 0C8C                             u300 0882  
                           u301 087E                             u310 089E                             u311 089A  
                           u400 0C16                             u320 08C4                             u401 0C12  
                           u321 08C0                             u410 0BE4                             u330 08E8  
                           u411 0BE0                             u331 08E4                             u340 0902  
                           u341 08FE                             u270 0824                             u350 091C  
                           u271 0820                             u351 0918                             u280 083E  
                           u360 093A                             u281 083A                             u361 0936  
                           u290 0864                             u370 0950                             u507 0A3C  
                           u291 0860                             u371 094C                             u427 0CFC  
                           u380 0974                             u517 0A52                             u381 0970  
                           u437 0AFE                             u390 0BF8                             u527 0A60  
                           u391 0BF4                             u447 0B0C                             u537 0A6A  
                           u457 0B1C                             u547 0D28                             u467 0C64  
                           u477 0C98                             u487 0A24                             u497 0A32  
                  ___awmod@sign 0006                     LEER_LCD@aux 0001                             wreg 000FE8  
                  ?_CURSOR_HOME 0001                  ??_ENVIA_NIBBLE 0001                  ENVIA_CHAR@dato 0002  
                          l1200 08E8                            l1042 0D32                            l1210 091C  
                          l1202 08F0                            l1044 0D36                            l1220 0958  
                          l1212 0924                            l1204 08F4                            l1060 0D0A  
                          l1052 0CEE                            l1046 0D38                            l1222 095E  
                          l1214 092C                            l1206 0902                            l1062 0D0E  
                          l1054 0CF2                            l1240 0BA8                            l1232 0BE8  
                          l1048 0D3A                            l1160 0830                            l1152 0812  
                          l1216 093A                            l1224 0964                            l1208 090A  
                          l1056 0CF6                            l1242 0BB4                            l1234 0BF8  
                          l1170 0864                            l1162 083E                            l1154 0816  
                          l1226 0974                            l1218 0950                            l1058 0D06  
                          l1250 0986                            l1244 0BD0                            l1236 0C04  
                          l1180 089E                            l1172 086C                            l1164 0846  
                          l1156 0824                            l1228 097C                            l1260 09B2  
                          l1252 098A                            l1246 0BD2                            l1238 0C16  
                          l1190 08C4                            l1182 08A6                            l1174 0874  
                          l1166 084A                            l1158 082C                            l1270 09DE  
                          l1262 09C2                            l1254 098E                            l1192 08CC  
                          l1184 08A8                            l1176 0882                            l1168 0852  
                          l1248 0B50                            l1280 0A00                            l1272 09E4  
                          l1264 09C8                            l1256 0998                            l1186 08AE  
                          l1178 0888                            l1282 0A08                            l1274 09EC  
                          l1266 09D0                            l1258 09A8                            l1188 08B4  
                          l1196 08D6                            l1276 09F4                            l1268 09D8  
                          l1198 08DA                            l1278 09FA                            STR_1 0801  
                          STR_2 080A                            _LATD 000F8C                            _main 0986  
                          btemp 0016                            start 000E                   ?_CURSOR_ONOFF 0001  
                  ___param_bank 000000                 ??_ENVIA_LCD_CMD 0002                __end_of_LEER_LCD 0A8A  
                         ?_main 0001                 __end_of___awdiv 08D6                 __end_of___awmod 0986  
               ___awdiv@divisor 0009                           _T1CON 000FCD                           i2l144 0AEA  
               ___awdiv@counter 000B   individualizar_digitos@entrada 000F                           _TMR1H 000FCF  
                         _TMR1L 000FCE                           _PORTD 000F83                           _TRISD 000F95  
              __end_of_TMR1_ISR 0AEE                           _horas 0015                     ?_POS_CURSOR 0004  
                         tablat 000FF5                           ttemp5 0017                           ttemp6 001A  
                         ttemp7 001E                           status 000FD8                           wtemp8 0017  
                ??_CURSOR_ONOFF 0004                 __initialization 0C20                    __end_of_main 0A18  
               _ESCRIBE_MENSAJE 0BA8                          ??_main 0010                   __activetblptr 000001  
              ___awdiv@dividend 0007                          i2l1130 0A8C                          i2l1140 0ABE  
                        i2l1132 0A8E                          i2l1142 0AC2                          i2l1150 0AE8  
                        i2l1134 0A96                          i2l1144 0AD4                          i2l1136 0AA8  
                        i2l1146 0ADC                          i2l1138 0AAC                          i2l1148 0AE2  
              __end_of_lcd_init 0D16                       ??___awdiv 000B                          _decena 0011  
                     ??___awmod 0005            __end_of_ENVIA_NIBBLE 0D32                ___awdiv@quotient 000D  
               ___awmod@divisor 0003                          isa$std 000001                 ___awmod@counter 0005  
                        _unidad 0010                    __pdataCOMRAM 0013                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
      ??_individualizar_digitos 000F                    ??_BORRAR_LCD 0004                       ?_LEER_LCD 0001  
                    __accesstop 0060         __end_of__initialization 0C44                    ??_LCD_CONFIG 0004  
                 ___rparam_used 000001                    ??_ENVIA_CHAR 0002         __end_of_ESCRIBE_MENSAJE 0BE6  
                __pcstackCOMRAM 0001                       ?_TMR1_ISR 0001              __end_of_BORRAR_LCD 0D4E  
              ENVIA_LCD_CMD@aux 0003            __end_of_CURSOR_ONOFF 0CEE              __end_of_LCD_CONFIG 0B4E  
            __end_of_ENVIA_CHAR 0CBE                      ??_LEER_LCD 0001                ENVIA_NIBBLE@dato 0001  
                    ??_TMR1_ISR 0001                         i2u24_40 0AA8                         i2u24_41 0AA4  
                       i2u25_40 0ABE                         i2u25_41 0ABA                         i2u26_40 0AD4  
                       i2u26_41 0AD0                    ??_POS_CURSOR 0005                       ?_lcd_init 0001  
                       __Hparam 0000                         __Lparam 0000                ?_ESCRIBE_MENSAJE 0004  
             __end_of_configuro 0D3E                         ___awdiv 0812                         ___awmod 08D6  
                  __psmallconst 0800           __end_of_ENVIA_LCD_CMD 0C8A                         __pcinit 0C20  
            __end_of_POS_CURSOR 0C20                         __ramtop 0800                         _centena 0012  
                       __ptext0 0986                         __ptext1 0CEE                         __ptext2 0AEE  
                       __ptext3 0CBE                         __ptext4 0D3E                         __ptext5 0D46  
                       __ptext6 0B4E                         __ptext7 08D6                         __ptext8 0812  
                       __ptext9 0D32                ___awmod@dividend 0001                         _minutos 0014  
                    ??_lcd_init 0005                  __pintcode_body 0A8A                    _ENVIA_NIBBLE 0D16  
          end_of_initialization 0C44                         int_func 0A8A          _individualizar_digitos 0B4E  
                  _CURSOR_ONOFF 0CBE              CURSOR_ONOFF@estado 0004                   __pidataCOMRAM 0D4E  
                 ??_CURSOR_HOME 0004             start_initialization 0C20               ENVIA_LCD_CMD@dato 0002  
                   __pbssCOMRAM 0010             __end_of_CURSOR_HOME 0D46                       __pintcode 0008  
                      ?___awdiv 0007                        ?___awmod 0001                       _configuro 0D32  
                   __smallconst 0800                        _LEER_LCD 0A18                        _LATDbits 000F8C  
       ?_individualizar_digitos 0001                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
                      _TMR1_ISR 0008                ESCRIBE_MENSAJE@i 0009                  POS_CURSOR@fila 0005  
                    ?_configuro 0001                     _CURSOR_HOME 0D3E  __end_of_individualizar_digitos 0BA8  
                      __Hrparam 0000                        __Lrparam 0000                    __Lsmallconst 0800  
                      __ptext10 0BE6                        __ptext11 0C56                        __ptext12 0BA8  
                      __ptext13 0C8A                        __ptext14 0A18                        __ptext15 0D16  
                    _BORRAR_LCD 0D46                        _lcd_init 0CEE                      _LCD_CONFIG 0AEE  
                    _ENVIA_CHAR 0C8A                        _segundos 0013                        isa$xinst 000000  
                      int$flags 0016                   _ENVIA_LCD_CMD 0C56                     ??_configuro 0001  
                    _INTCONbits 000FF2               ??_ESCRIBE_MENSAJE 0007                        intlevel2 0000  
         ESCRIBE_MENSAJE@cadena 0004                  ?_ENVIA_LCD_CMD 0001                     ?_BORRAR_LCD 0001  
                 ?_ENVIA_NIBBLE 0001                      _POS_CURSOR 0BE6                     ?_LCD_CONFIG 0001  
            ESCRIBE_MENSAJE@tam 0006                     ?_ENVIA_CHAR 0001               POS_CURSOR@columna 0004  
