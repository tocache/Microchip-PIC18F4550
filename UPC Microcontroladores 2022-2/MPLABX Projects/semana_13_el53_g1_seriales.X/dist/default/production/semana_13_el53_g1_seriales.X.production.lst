

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 11 12:29:59 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000C82                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _mensajon
    78  000C82  4F                 	db	79
    79  000C83  79                 	db	121
    80  000C84  65                 	db	101
    81  000C85  20                 	db	32
    82  000C86  70                 	db	112
    83  000C87  72                 	db	114
    84  000C88  65                 	db	101
    85  000C89  73                 	db	115
    86  000C8A  69                 	db	105
    87  000C8B  6F                 	db	111
    88  000C8C  6E                 	db	110
    89  000C8D  61                 	db	97
    90  000C8E  73                 	db	115
    91  000C8F  74                 	db	116
    92  000C90  65                 	db	101
    93  000C91  20                 	db	32
    94  000C92  65                 	db	101
    95  000C93  6C                 	db	108
    96  000C94  20                 	db	32
    97  000C95  49                 	db	73
    98  000C96  4E                 	db	78
    99  000C97  54                 	db	84
   100  000C98  32                 	db	50
   101  000C99  00                 	db	0
   102                           
   103                           ;initializer for _efecto
   104  000C9A  00                 	db	0
   105  000C9B  01                 	db	1
   106  000C9C  00                 	db	0
   107  000C9D  02                 	db	2
   108  000C9E  00                 	db	0
   109  000C9F  04                 	db	4
   110  000CA0  00                 	db	0
   111  000CA1  02                 	db	2
   112  000CA2  01                 	db	1
   113  000CA3  02                 	db	2
   114  000CA4  04                 	db	4
   115  000CA5  02                 	db	2
   116  000CA6  00                 	db	0
   117  000CA7  07                 	db	7
   118  000CA8  02                 	db	2
   119  000CA9  05                 	db	5
   120                           
   121                           ;initializer for _bienvenida
   122  000CAA  50                 	db	80
   123  000CAB  72                 	db	114
   124  000CAC  69                 	db	105
   125  000CAD  6D                 	db	109
   126  000CAE  65                 	db	101
   127  000CAF  72                 	db	114
   128  000CB0  20                 	db	32
   129  000CB1  6D                 	db	109
   130  000CB2  65                 	db	101
   131  000CB3  6E                 	db	110
   132  000CB4  73                 	db	115
   133  000CB5  61                 	db	97
   134  000CB6  6A                 	db	106
   135  000CB7  65                 	db	101
   136  000CB8  00                 	db	0
   137                           
   138                           ;initializer for _led_on
   139  000CB9  04                 	db	4
   140  000CBA  1F                 	db	31
   141  000CBB  1F                 	db	31
   142  000CBC  0E                 	db	14
   143  000CBD  04                 	db	4
   144  000CBE  1F                 	db	31
   145  000CBF  04                 	db	4
   146  000CC0  04                 	db	4
   147                           
   148                           ;initializer for _led_off
   149  000CC1  04                 	db	4
   150  000CC2  1F                 	db	31
   151  000CC3  11                 	db	17
   152  000CC4  0A                 	db	10
   153  000CC5  04                 	db	4
   154  000CC6  1F                 	db	31
   155  000CC7  04                 	db	4
   156  000CC8  04                 	db	4
   157  0000                     _LATD	set	3980
   158  0000                     _PORTD	set	3971
   159  0000                     _LATDbits	set	3980
   160  0000                     _LATE	set	3981
   161  0000                     _TRISD	set	3989
   162  0000                     _RCSTAbits	set	4011
   163  0000                     _SPBRG	set	4015
   164  0000                     _TRISE	set	3990
   165  0000                     _ADCON1	set	4033
   166  0000                     _OSCCON	set	4051
   167  0000                     _PORTEbits	set	3972
   168  0000                     _INTCON3bits	set	4080
   169  0000                     _INTCON2bits	set	4081
   170  0000                     _INTCONbits	set	4082
   171  0000                     _RCONbits	set	4048
   172  0000                     _TXREG	set	4013
   173  0000                     _TXSTAbits	set	4012
   174                           
   175                           	psect	smallconst
   176  000800                     __psmallconst:
   177                           	callstack 0
   178  000800  00                 	db	0
   179  000801                     STR_2:
   180  000801  55                 	db	85	;'U'
   181  000802  50                 	db	80	;'P'
   182  000803  43                 	db	67	;'C'
   183  000804  69                 	db	105	;'i'
   184  000805  6E                 	db	110	;'n'
   185  000806  6F                 	db	111	;'o'
   186  000807  20                 	db	32
   187  000808  53                 	db	83	;'S'
   188  000809  65                 	db	101	;'e'
   189  00080A  6D                 	db	109	;'m'
   190  00080B  31                 	db	49	;'1'
   191  00080C  33                 	db	51	;'3'
   192  00080D  00                 	db	0
   193  00080E                     STR_1:
   194  00080E  4C                 	db	76	;'L'
   195  00080F  45                 	db	69	;'E'
   196  000810  44                 	db	68	;'D'
   197  000811  73                 	db	115	;'s'
   198  000812  3A                 	db	58	;':'
   199  000813  20                 	db	32
   200  000814  00                 	db	0
   201  000815  00                 	db	0	; dummy byte at the end
   202  0000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206  000DE6                     __pcinit:
   207                           	callstack 0
   208  000DE6                     start_initialization:
   209                           	callstack 0
   210  000DE6                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to COMRAM (71 bytes)
   214                           ; load TBLPTR registers with __pidataCOMRAM
   215  000DE6  0E82               	movlw	low __pidataCOMRAM
   216  000DE8  6EF6               	movwf	tblptrl,c
   217  000DEA  0E0C               	movlw	high __pidataCOMRAM
   218  000DEC  6EF7               	movwf	tblptrh,c
   219  000DEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   220  000DF0  6EF8               	movwf	tblptru,c
   221  000DF2  EE00  F001         	lfsr	0,__pdataCOMRAM
   222  000DF6  EE10 F047          	lfsr	1,71
   223  000DFA                     copy_data0:
   224  000DFA  0009               	tblrd		*+
   225  000DFC  CFF5 FFEE          	movff	tablat,postinc0
   226  000E00  50E5               	movf	postdec1,w,c
   227  000E02  50E1               	movf	fsr1l,w,c
   228  000E04  E1FA               	bnz	copy_data0
   229                           
   230                           ; Clear objects allocated to COMRAM (2 bytes)
   231  000E06  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   232  000E08  6A57               	clrf	__pbssCOMRAM& (0+255),c
   233  000E0A                     end_of_initialization:
   234                           	callstack 0
   235  000E0A                     __end_of__initialization:
   236                           	callstack 0
   237  000E0A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238  000E0C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239  000E0E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  000E10  6EF8               	movwf	tblptru,c
   241  000E12  0100               	movlb	0
   242  000E14  EF0B  F004         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  000057                     __pbssCOMRAM:
   246                           	callstack 0
   247  000057                     _estado_v:
   248                           	callstack 0
   249  000057                     	ds	1
   250  000058                     _estado_f:
   251                           	callstack 0
   252  000058                     	ds	1
   253                           
   254                           	psect	dataCOMRAM
   255  000001                     __pdataCOMRAM:
   256                           	callstack 0
   257  000001                     _mensajon:
   258                           	callstack 0
   259  000001                     	ds	24
   260  000019                     _efecto:
   261                           	callstack 0
   262  000019                     	ds	16
   263  000029                     _bienvenida:
   264                           	callstack 0
   265  000029                     	ds	15
   266  000038                     _led_on:
   267                           	callstack 0
   268  000038                     	ds	8
   269  000040                     _led_off:
   270                           	callstack 0
   271  000040                     	ds	8
   272                           
   273                           	psect	cstackBANK0
   274  000060                     __pcstackBANK0:
   275                           	callstack 0
   276  000060                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x0
   279  000060                     	ds	2
   280  000062                     main@camote:
   281                           	callstack 0
   282                           
   283                           ; 1 bytes @ 0x2
   284  000062                     	ds	1
   285  000063                     main@x:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x3
   289  000063                     	ds	1
   290                           
   291                           	psect	cstackCOMRAM
   292  000048                     __pcstackCOMRAM:
   293                           	callstack 0
   294  000048                     ??_INT0_ISR:
   295  000048                     
   296                           ; 1 bytes @ 0x0
   297  000048                     	ds	2
   298  00004A                     INT0_ISR@yuca:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x2
   302  00004A                     	ds	1
   303  00004B                     ??_INT1_ISR:
   304                           
   305                           ; 1 bytes @ 0x3
   306  00004B                     	ds	3
   307  00004E                     ??_delaymon:
   308  00004E                     ENVIA_NIBBLE@dato:
   309                           	callstack 0
   310  00004E                     LEER_LCD@aux:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314  00004E                     	ds	1
   315  00004F                     ENVIA_CHAR@dato:
   316                           	callstack 0
   317  00004F                     ENVIA_LCD_CMD@dato:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x7
   321  00004F                     	ds	1
   322  000050                     ENVIA_CHAR@aux:
   323                           	callstack 0
   324  000050                     ENVIA_LCD_CMD@aux:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x8
   328  000050                     	ds	1
   329  000051                     ??_LCD_CONFIG:
   330  000051                     POS_CURSOR@columna:
   331                           	callstack 0
   332  000051                     CURSOR_ONOFF@estado:
   333                           	callstack 0
   334  000051                     ESCRIBE_MENSAJE@cadena:
   335                           	callstack 0
   336  000051                     GENERACARACTER@vector:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x9
   340  000051                     	ds	1
   341  000052                     POS_CURSOR@fila:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xA
   345  000052                     	ds	1
   346  000053                     ESCRIBE_MENSAJE@tam:
   347                           	callstack 0
   348  000053                     GENERACARACTER@pos:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0xB
   352  000053                     	ds	1
   353  000054                     ??_ESCRIBE_MENSAJE:
   354  000054                     GENERACARACTER@i:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0xC
   358  000054                     	ds	1
   359  000055                     ??_init_LCD:
   360                           
   361                           ; 1 bytes @ 0xD
   362  000055                     	ds	1
   363  000056                     ESCRIBE_MENSAJE@i:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xE
   367  000056                     	ds	1
   368  000057                     
   369                           ; 1 bytes @ 0xF
   370 ;;
   371 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   372 ;;
   373 ;; *************** function _main *****************
   374 ;; Defined at:
   375 ;;		line 94 in file "maincode4.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;  x               1    3[BANK0 ] unsigned char 
   380 ;;  camote          1    2[BANK0 ] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   390 ;;      Params:         0       0       0       0       0       0       0       0       0
   391 ;;      Locals:         0       2       0       0       0       0       0       0       0
   392 ;;      Temps:          0       2       0       0       0       0       0       0       0
   393 ;;      Totals:         0       4       0       0       0       0       0       0       0
   394 ;;Total ram usage:        4 bytes
   395 ;; Hardware stack levels required when called: 6
   396 ;; This function calls:
   397 ;;		_ESCRIBE_MENSAJE
   398 ;;		_POS_CURSOR
   399 ;;		_configuro
   400 ;;		_delaymon
   401 ;;		_init_LCD
   402 ;;		_vis_LEDs
   403 ;; This function is called by:
   404 ;;		Startup code after reset
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text0
   409  000816                     __ptext0:
   410                           	callstack 0
   411  000816                     _main:
   412                           	callstack 25
   413  000816                     
   414                           ;maincode4.c: 95:     configuro();
   415  000816  EC24  F007         	call	_configuro	;wreg free
   416  00081A                     
   417                           ;maincode4.c: 96:     init_LCD();
   418  00081A  EC1D  F006         	call	_init_LCD	;wreg free
   419  00081E                     
   420                           ;maincode4.c: 97:     POS_CURSOR(1,0);
   421  00081E  0E00               	movlw	0
   422  000820  6E51               	movwf	POS_CURSOR@columna^0,c
   423  000822  0E01               	movlw	1
   424  000824  ECA2  F006         	call	_POS_CURSOR
   425  000828                     
   426                           ;maincode4.c: 98:     ESCRIBE_MENSAJE("UPCino Sem13",12);
   427  000828  0E01               	movlw	low STR_2
   428  00082A  6E51               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   429  00082C  0E08               	movlw	high STR_2
   430  00082E  6E52               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   431  000830  0E0C               	movlw	12
   432  000832  6E53               	movwf	ESCRIBE_MENSAJE@tam^0,c
   433  000834  EC65  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   434  000838                     
   435                           ;maincode4.c: 99:     unsigned char camote;;maincode4.c: 100:     for(camote=0;camote<14
      +                          ;camote++){
   436  000838  0E00               	movlw	0
   437  00083A  0100               	movlb	0	; () banked
   438  00083C  6F62               	movwf	main@camote& (0+255),b
   439  00083E                     l1740:
   440                           
   441                           ; BSR set to: 0
   442                           ;maincode4.c: 101:         TXREG = bienvenida[camote];
   443  00083E  0E29               	movlw	low _bienvenida
   444  000840  2562               	addwf	main@camote& (0+255),w,b
   445  000842  6ED9               	movwf	fsr2l,c
   446  000844  6ADA               	clrf	fsr2h,c
   447  000846  0E00               	movlw	high _bienvenida
   448  000848  22DA               	addwfc	fsr2h,f,c
   449  00084A  50DF               	movf	indf2,w,c
   450  00084C  6EAD               	movwf	173,c	;volatile
   451  00084E                     l165:
   452  00084E  A2AC               	btfss	172,1,c	;volatile
   453  000850  EF2C  F004         	goto	u601
   454  000854  EF2E  F004         	goto	u600
   455  000858                     u601:
   456  000858  EF27  F004         	goto	l165
   457  00085C                     u600:
   458  00085C                     
   459                           ;maincode4.c: 103:     }
   460  00085C  0100               	movlb	0	; () banked
   461  00085E  2B62               	incf	main@camote& (0+255),f,b
   462  000860                     
   463                           ; BSR set to: 0
   464  000860  0E0D               	movlw	13
   465  000862  6562               	cpfsgt	main@camote& (0+255),b
   466  000864  EF36  F004         	goto	u611
   467  000868  EF38  F004         	goto	u610
   468  00086C                     u611:
   469  00086C  EF1F  F004         	goto	l1740
   470  000870                     u610:
   471  000870                     
   472                           ; BSR set to: 0
   473                           ;maincode4.c: 104:     TXREG = 0x0A;
   474  000870  0E0A               	movlw	10
   475  000872  6EAD               	movwf	173,c	;volatile
   476  000874                     l168:
   477  000874  A2AC               	btfss	172,1,c	;volatile
   478  000876  EF3F  F004         	goto	u621
   479  00087A  EF41  F004         	goto	u620
   480  00087E                     u621:
   481  00087E  EF3A  F004         	goto	l168
   482  000882                     u620:
   483  000882                     
   484                           ;maincode4.c: 106:     TXREG = 0x0D;
   485  000882  0E0D               	movlw	13
   486  000884  6EAD               	movwf	173,c	;volatile
   487  000886                     l171:
   488  000886  A2AC               	btfss	172,1,c	;volatile
   489  000888  EF48  F004         	goto	u631
   490  00088C  EF4A  F004         	goto	u630
   491  000890                     u631:
   492  000890  EF43  F004         	goto	l171
   493  000894                     u630:
   494  000894  EFB2  F004         	goto	l1816
   495  000898                     l1750:
   496                           
   497                           ; BSR set to: 0
   498                           ;maincode4.c: 112:                 for(x=0;x<8;x++){
   499  000898  0E00               	movlw	0
   500  00089A  6F63               	movwf	main@x& (0+255),b
   501  00089C                     l1756:
   502                           
   503                           ; BSR set to: 0
   504                           ;maincode4.c: 113:                     LATE = efecto[x];
   505  00089C  0E19               	movlw	low _efecto
   506  00089E  2563               	addwf	main@x& (0+255),w,b
   507  0008A0  6ED9               	movwf	fsr2l,c
   508  0008A2  6ADA               	clrf	fsr2h,c
   509  0008A4  0E00               	movlw	high _efecto
   510  0008A6  22DA               	addwfc	fsr2h,f,c
   511  0008A8  50DF               	movf	indf2,w,c
   512  0008AA  6E8D               	movwf	141,c	;volatile
   513  0008AC                     
   514                           ; BSR set to: 0
   515                           ;maincode4.c: 114:                     vis_LEDs();
   516  0008AC  EC79  F005         	call	_vis_LEDs	;wreg free
   517  0008B0                     
   518                           ;maincode4.c: 115:                     delaymon();
   519  0008B0  EC27  F005         	call	_delaymon	;wreg free
   520  0008B4                     
   521                           ;maincode4.c: 116:                 }
   522  0008B4  0100               	movlb	0	; () banked
   523  0008B6  2B63               	incf	main@x& (0+255),f,b
   524  0008B8                     
   525                           ; BSR set to: 0
   526  0008B8  0E07               	movlw	7
   527  0008BA  6563               	cpfsgt	main@x& (0+255),b
   528  0008BC  EF62  F004         	goto	u641
   529  0008C0  EF64  F004         	goto	u640
   530  0008C4                     u641:
   531  0008C4  EF4E  F004         	goto	l1756
   532  0008C8                     u640:
   533  0008C8  EFB2  F004         	goto	l1816
   534  0008CC                     l1766:
   535                           
   536                           ; BSR set to: 0
   537                           ;maincode4.c: 119:                 for(x=8;x<12;x++){
   538  0008CC  0E08               	movlw	8
   539  0008CE  6F63               	movwf	main@x& (0+255),b
   540  0008D0                     l1772:
   541                           
   542                           ; BSR set to: 0
   543                           ;maincode4.c: 120:                     LATE = efecto[x];
   544  0008D0  0E19               	movlw	low _efecto
   545  0008D2  2563               	addwf	main@x& (0+255),w,b
   546  0008D4  6ED9               	movwf	fsr2l,c
   547  0008D6  6ADA               	clrf	fsr2h,c
   548  0008D8  0E00               	movlw	high _efecto
   549  0008DA  22DA               	addwfc	fsr2h,f,c
   550  0008DC  50DF               	movf	indf2,w,c
   551  0008DE  6E8D               	movwf	141,c	;volatile
   552  0008E0                     
   553                           ; BSR set to: 0
   554                           ;maincode4.c: 121:                     vis_LEDs();
   555  0008E0  EC79  F005         	call	_vis_LEDs	;wreg free
   556  0008E4                     
   557                           ;maincode4.c: 122:                     delaymon();
   558  0008E4  EC27  F005         	call	_delaymon	;wreg free
   559  0008E8                     
   560                           ;maincode4.c: 123:                 }
   561  0008E8  0100               	movlb	0	; () banked
   562  0008EA  2B63               	incf	main@x& (0+255),f,b
   563  0008EC                     
   564                           ; BSR set to: 0
   565  0008EC  0E0B               	movlw	11
   566  0008EE  6563               	cpfsgt	main@x& (0+255),b
   567  0008F0  EF7C  F004         	goto	u651
   568  0008F4  EF7E  F004         	goto	u650
   569  0008F8                     u651:
   570  0008F8  EF68  F004         	goto	l1772
   571  0008FC                     u650:
   572  0008FC  EFB2  F004         	goto	l1816
   573  000900                     l1782:
   574                           
   575                           ; BSR set to: 0
   576                           ;maincode4.c: 126:                 for(x=12;x<14;x++){
   577  000900  0E0C               	movlw	12
   578  000902  6F63               	movwf	main@x& (0+255),b
   579  000904                     l1788:
   580                           
   581                           ; BSR set to: 0
   582                           ;maincode4.c: 127:                     LATE = efecto[x];
   583  000904  0E19               	movlw	low _efecto
   584  000906  2563               	addwf	main@x& (0+255),w,b
   585  000908  6ED9               	movwf	fsr2l,c
   586  00090A  6ADA               	clrf	fsr2h,c
   587  00090C  0E00               	movlw	high _efecto
   588  00090E  22DA               	addwfc	fsr2h,f,c
   589  000910  50DF               	movf	indf2,w,c
   590  000912  6E8D               	movwf	141,c	;volatile
   591  000914                     
   592                           ; BSR set to: 0
   593                           ;maincode4.c: 128:                     vis_LEDs();
   594  000914  EC79  F005         	call	_vis_LEDs	;wreg free
   595  000918                     
   596                           ;maincode4.c: 129:                     delaymon();
   597  000918  EC27  F005         	call	_delaymon	;wreg free
   598  00091C                     
   599                           ;maincode4.c: 130:                 }
   600  00091C  0100               	movlb	0	; () banked
   601  00091E  2B63               	incf	main@x& (0+255),f,b
   602  000920                     
   603                           ; BSR set to: 0
   604  000920  0E0D               	movlw	13
   605  000922  6563               	cpfsgt	main@x& (0+255),b
   606  000924  EF96  F004         	goto	u661
   607  000928  EF98  F004         	goto	u660
   608  00092C                     u661:
   609  00092C  EF82  F004         	goto	l1788
   610  000930                     u660:
   611  000930  EFB2  F004         	goto	l1816
   612  000934                     l1798:
   613                           
   614                           ; BSR set to: 0
   615                           ;maincode4.c: 133:                 for(x=14;x<16;x++){
   616  000934  0E0E               	movlw	14
   617  000936  6F63               	movwf	main@x& (0+255),b
   618  000938                     l1804:
   619                           
   620                           ; BSR set to: 0
   621                           ;maincode4.c: 134:                     LATE = efecto[x];
   622  000938  0E19               	movlw	low _efecto
   623  00093A  2563               	addwf	main@x& (0+255),w,b
   624  00093C  6ED9               	movwf	fsr2l,c
   625  00093E  6ADA               	clrf	fsr2h,c
   626  000940  0E00               	movlw	high _efecto
   627  000942  22DA               	addwfc	fsr2h,f,c
   628  000944  50DF               	movf	indf2,w,c
   629  000946  6E8D               	movwf	141,c	;volatile
   630  000948                     
   631                           ; BSR set to: 0
   632                           ;maincode4.c: 135:                     vis_LEDs();
   633  000948  EC79  F005         	call	_vis_LEDs	;wreg free
   634  00094C                     
   635                           ;maincode4.c: 136:                     delaymon();
   636  00094C  EC27  F005         	call	_delaymon	;wreg free
   637  000950                     
   638                           ;maincode4.c: 137:                 }
   639  000950  0100               	movlb	0	; () banked
   640  000952  2B63               	incf	main@x& (0+255),f,b
   641  000954                     
   642                           ; BSR set to: 0
   643  000954  0E0F               	movlw	15
   644  000956  6563               	cpfsgt	main@x& (0+255),b
   645  000958  EFB0  F004         	goto	u671
   646  00095C  EFB2  F004         	goto	u670
   647  000960                     u671:
   648  000960  EF9C  F004         	goto	l1804
   649  000964                     u670:
   650  000964                     l1816:
   651  000964  5058               	movf	_estado_f^0,w,c
   652  000966  0100               	movlb	0	; () banked
   653  000968  6F60               	movwf	??_main& (0+255),b
   654  00096A  6B61               	clrf	(??_main+1)& (0+255),b
   655                           
   656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   657                           ; Switch size 1, requested type "simple"
   658                           ; Number of cases is 1, Range of values is 0 to 0
   659                           ; switch strategies available:
   660                           ; Name         Instructions Cycles
   661                           ; simple_byte            4     3 (average)
   662                           ;	Chosen strategy is simple_byte
   663  00096C  5161               	movf	(??_main+1)& (0+255),w,b
   664  00096E  0A00               	xorlw	0	; case 0
   665  000970  B4D8               	btfsc	status,2,c
   666  000972  EFBD  F004         	goto	l1862
   667  000976  EFB2  F004         	goto	l1816
   668  00097A                     l1862:
   669                           
   670                           ; BSR set to: 0
   671                           ; Switch size 1, requested type "simple"
   672                           ; Number of cases is 4, Range of values is 0 to 3
   673                           ; switch strategies available:
   674                           ; Name         Instructions Cycles
   675                           ; simple_byte           13     7 (average)
   676                           ;	Chosen strategy is simple_byte
   677  00097A  5160               	movf	??_main& (0+255),w,b
   678  00097C  0A00               	xorlw	0	; case 0
   679  00097E  B4D8               	btfsc	status,2,c
   680  000980  EF4C  F004         	goto	l1750
   681  000984  0A01               	xorlw	1	; case 1
   682  000986  B4D8               	btfsc	status,2,c
   683  000988  EF66  F004         	goto	l1766
   684  00098C  0A03               	xorlw	3	; case 2
   685  00098E  B4D8               	btfsc	status,2,c
   686  000990  EF80  F004         	goto	l1782
   687  000994  0A01               	xorlw	1	; case 3
   688  000996  B4D8               	btfsc	status,2,c
   689  000998  EF9A  F004         	goto	l1798
   690  00099C  EFB2  F004         	goto	l1816
   691  0009A0  EF2A  F000         	goto	start
   692  0009A4                     __end_of_main:
   693                           	callstack 0
   694                           
   695 ;; *************** function _vis_LEDs *****************
   696 ;; Defined at:
   697 ;;		line 71 in file "maincode4.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   711 ;;      Params:         0       0       0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 5
   718 ;; This function calls:
   719 ;;		_ENVIA_CHAR
   720 ;;		_ESCRIBE_MENSAJE
   721 ;;		_POS_CURSOR
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text1
   728  000AF2                     __ptext1:
   729                           	callstack 0
   730  000AF2                     _vis_LEDs:
   731                           	callstack 25
   732  000AF2                     
   733                           ;maincode4.c: 72:     POS_CURSOR(2,0);
   734  000AF2  0E00               	movlw	0
   735  000AF4  6E51               	movwf	POS_CURSOR@columna^0,c
   736  000AF6  0E02               	movlw	2
   737  000AF8  ECA2  F006         	call	_POS_CURSOR
   738  000AFC                     
   739                           ;maincode4.c: 73:     ESCRIBE_MENSAJE("LEDs: ",6);
   740  000AFC  0E0E               	movlw	low STR_1
   741  000AFE  6E51               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   742  000B00  0E08               	movlw	high STR_1
   743  000B02  6E52               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   744  000B04  0E06               	movlw	6
   745  000B06  6E53               	movwf	ESCRIBE_MENSAJE@tam^0,c
   746  000B08  EC65  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   747  000B0C                     
   748                           ;maincode4.c: 74:     if(PORTEbits.RE2 == 0){
   749  000B0C  B484               	btfsc	132,2,c	;volatile
   750  000B0E  EF8B  F005         	goto	u531
   751  000B12  EF8D  F005         	goto	u530
   752  000B16                     u531:
   753  000B16  EF92  F005         	goto	l1696
   754  000B1A                     u530:
   755  000B1A                     
   756                           ;maincode4.c: 75:         ENVIA_CHAR(0);
   757  000B1A  0E00               	movlw	0
   758  000B1C  ECBF  F006         	call	_ENVIA_CHAR
   759                           
   760                           ;maincode4.c: 76:     }
   761  000B20  EF95  F005         	goto	l1698
   762  000B24                     l1696:
   763                           
   764                           ;maincode4.c: 78:         ENVIA_CHAR(1);
   765  000B24  0E01               	movlw	1
   766  000B26  ECBF  F006         	call	_ENVIA_CHAR
   767  000B2A                     l1698:
   768                           
   769                           ;maincode4.c: 80:     if(PORTEbits.RE1 == 0){
   770  000B2A  B284               	btfsc	132,1,c	;volatile
   771  000B2C  EF9A  F005         	goto	u541
   772  000B30  EF9C  F005         	goto	u540
   773  000B34                     u541:
   774  000B34  EFA1  F005         	goto	l1702
   775  000B38                     u540:
   776  000B38                     
   777                           ;maincode4.c: 81:         ENVIA_CHAR(0);
   778  000B38  0E00               	movlw	0
   779  000B3A  ECBF  F006         	call	_ENVIA_CHAR
   780                           
   781                           ;maincode4.c: 82:     }
   782  000B3E  EFA4  F005         	goto	l1704
   783  000B42                     l1702:
   784                           
   785                           ;maincode4.c: 84:         ENVIA_CHAR(1);
   786  000B42  0E01               	movlw	1
   787  000B44  ECBF  F006         	call	_ENVIA_CHAR
   788  000B48                     l1704:
   789                           
   790                           ;maincode4.c: 86:     if(PORTEbits.RE0 == 0){
   791  000B48  B084               	btfsc	132,0,c	;volatile
   792  000B4A  EFA9  F005         	goto	u551
   793  000B4E  EFAB  F005         	goto	u550
   794  000B52                     u551:
   795  000B52  EFB0  F005         	goto	l1708
   796  000B56                     u550:
   797  000B56                     
   798                           ;maincode4.c: 87:         ENVIA_CHAR(0);
   799  000B56  0E00               	movlw	0
   800  000B58  ECBF  F006         	call	_ENVIA_CHAR
   801                           
   802                           ;maincode4.c: 88:     }
   803  000B5C  EFB3  F005         	goto	l158
   804  000B60                     l1708:
   805                           
   806                           ;maincode4.c: 90:         ENVIA_CHAR(1);
   807  000B60  0E01               	movlw	1
   808  000B62  ECBF  F006         	call	_ENVIA_CHAR
   809  000B66                     l158:
   810  000B66  0012               	return		;funcret
   811  000B68                     __end_of_vis_LEDs:
   812                           	callstack 0
   813                           
   814 ;; *************** function _POS_CURSOR *****************
   815 ;; Defined at:
   816 ;;		line 6 in file "LCD.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  fila            1    wreg     unsigned char 
   819 ;;  columna         1    9[COMRAM] unsigned char 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  fila            1   10[COMRAM] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         1       0       0       0       0       0       0       0       0
   832 ;;      Locals:         1       0       0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0
   834 ;;      Totals:         2       0       0       0       0       0       0       0       0
   835 ;;Total ram usage:        2 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 4
   838 ;; This function calls:
   839 ;;		_ENVIA_LCD_CMD
   840 ;; This function is called by:
   841 ;;		_vis_LEDs
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text2
   847  000D44                     __ptext2:
   848                           	callstack 0
   849  000D44                     _POS_CURSOR:
   850                           	callstack 25
   851                           
   852                           ;incstack = 0
   853                           ;POS_CURSOR@fila stored from wreg
   854  000D44  6E52               	movwf	POS_CURSOR@fila^0,c
   855  000D46                     
   856                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   857  000D46  0452               	decf	POS_CURSOR@fila^0,w,c
   858  000D48  A4D8               	btfss	status,2,c
   859  000D4A  EFA9  F006         	goto	u471
   860  000D4E  EFAB  F006         	goto	u470
   861  000D52                     u471:
   862  000D52  EFB1  F006         	goto	l1562
   863  000D56                     u470:
   864  000D56                     
   865                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   866  000D56  5051               	movf	POS_CURSOR@columna^0,w,c
   867  000D58  0F80               	addlw	128
   868  000D5A  ECD9  F006         	call	_ENVIA_LCD_CMD
   869                           
   870                           ;LCD.c: 11:  }
   871  000D5E  EFBE  F006         	goto	l24
   872  000D62                     l1562:
   873  000D62  0E02               	movlw	2
   874  000D64  1852               	xorwf	POS_CURSOR@fila^0,w,c
   875  000D66  A4D8               	btfss	status,2,c
   876  000D68  EFB8  F006         	goto	u481
   877  000D6C  EFBA  F006         	goto	u480
   878  000D70                     u481:
   879  000D70  EFBE  F006         	goto	l24
   880  000D74                     u480:
   881  000D74                     
   882                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   883  000D74  5051               	movf	POS_CURSOR@columna^0,w,c
   884  000D76  0FC0               	addlw	192
   885  000D78  ECD9  F006         	call	_ENVIA_LCD_CMD
   886  000D7C                     l24:
   887  000D7C  0012               	return		;funcret
   888  000D7E                     __end_of_POS_CURSOR:
   889                           	callstack 0
   890                           
   891 ;; *************** function _ESCRIBE_MENSAJE *****************
   892 ;; Defined at:
   893 ;;		line 41 in file "LCD.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  cadena          2    9[COMRAM] PTR const unsigned char 
   896 ;;		 -> STR_2(13), STR_1(7), 
   897 ;;  tam             1   11[COMRAM] unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  i               1   14[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         3       0       0       0       0       0       0       0       0
   910 ;;      Locals:         1       0       0       0       0       0       0       0       0
   911 ;;      Temps:          2       0       0       0       0       0       0       0       0
   912 ;;      Totals:         6       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        6 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 4
   916 ;; This function calls:
   917 ;;		_ENVIA_CHAR
   918 ;; This function is called by:
   919 ;;		_vis_LEDs
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text3
   925  000CCA                     __ptext3:
   926                           	callstack 0
   927  000CCA                     _ESCRIBE_MENSAJE:
   928                           	callstack 25
   929  000CCA                     
   930                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   931  000CCA  0E00               	movlw	0
   932  000CCC  6E56               	movwf	ESCRIBE_MENSAJE@i^0,c
   933                           
   934                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   935  000CCE  0E00               	movlw	0
   936  000CD0  6E56               	movwf	ESCRIBE_MENSAJE@i^0,c
   937  000CD2  EF7A  F006         	goto	l1582
   938  000CD6                     l1578:
   939                           
   940                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   941  000CD6  5056               	movf	ESCRIBE_MENSAJE@i^0,w,c
   942  000CD8  2451               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   943  000CDA  6E54               	movwf	??_ESCRIBE_MENSAJE^0,c
   944  000CDC  0E00               	movlw	0
   945  000CDE  2052               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   946  000CE0  6E55               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   947  000CE2  C054  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   948  000CE6  C055  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   949  000CEA                     	if	0	;tblptru may be non-zero
   950  000CEA                     	endif
   951  000CEA                     	if	0	;tblptru may be non-zero
   952  000CEA                     	endif
   953  000CEA  0008               	tblrd		*
   954  000CEC  50F5               	movf	tablat,w,c
   955  000CEE  ECBF  F006         	call	_ENVIA_CHAR
   956  000CF2                     
   957                           ;LCD.c: 47:  }
   958  000CF2  2A56               	incf	ESCRIBE_MENSAJE@i^0,f,c
   959  000CF4                     l1582:
   960  000CF4  5053               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   961  000CF6  5C56               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   962  000CF8  A0D8               	btfss	status,0,c
   963  000CFA  EF81  F006         	goto	u511
   964  000CFE  EF83  F006         	goto	u510
   965  000D02                     u511:
   966  000D02  EF6B  F006         	goto	l1578
   967  000D06                     u510:
   968  000D06  0012               	return		;funcret
   969  000D08                     __end_of_ESCRIBE_MENSAJE:
   970                           	callstack 0
   971                           
   972 ;; *************** function _init_LCD *****************
   973 ;; Defined at:
   974 ;;		line 43 in file "maincode4.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   988 ;;      Params:         0       0       0       0       0       0       0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0
   990 ;;      Temps:          1       0       0       0       0       0       0       0       0
   991 ;;      Totals:         1       0       0       0       0       0       0       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 5
   995 ;; This function calls:
   996 ;;		_BORRAR_LCD
   997 ;;		_CURSOR_HOME
   998 ;;		_CURSOR_ONOFF
   999 ;;		_GENERACARACTER
  1000 ;;		_LCD_CONFIG
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text4
  1007  000C3A                     __ptext4:
  1008                           	callstack 0
  1009  000C3A                     _init_LCD:
  1010                           	callstack 25
  1011  000C3A                     
  1012                           ;maincode4.c: 44:     TRISD = 0x00;
  1013  000C3A  0E00               	movlw	0
  1014  000C3C  6E95               	movwf	149,c	;volatile
  1015  000C3E                     
  1016                           ;maincode4.c: 45:     LCD_CONFIG();
  1017  000C3E  ECED  F005         	call	_LCD_CONFIG	;wreg free
  1018  000C42                     
  1019                           ;maincode4.c: 46:     _delay((unsigned long)((23)*(8000000UL/4000.0)));
  1020  000C42  0E3C               	movlw	60
  1021  000C44  6E55               	movwf	??_init_LCD^0,c
  1022  000C46  0EBC               	movlw	188
  1023  000C48                     u687:
  1024  000C48  2EE8               	decfsz	wreg,f,c
  1025  000C4A  D7FE               	bra	u687
  1026  000C4C  2E55               	decfsz	??_init_LCD^0,f,c
  1027  000C4E  D7FC               	bra	u687
  1028  000C50  D000               	nop2	
  1029  000C52                     
  1030                           ;maincode4.c: 47:     BORRAR_LCD();
  1031  000C52  EC4C  F007         	call	_BORRAR_LCD	;wreg free
  1032  000C56                     
  1033                           ;maincode4.c: 48:     CURSOR_HOME();
  1034  000C56  EC48  F007         	call	_CURSOR_HOME	;wreg free
  1035  000C5A                     
  1036                           ;maincode4.c: 49:     CURSOR_ONOFF(1);
  1037  000C5A  0E01               	movlw	1
  1038  000C5C  EC0C  F007         	call	_CURSOR_ONOFF
  1039  000C60                     
  1040                           ;maincode4.c: 50:     GENERACARACTER(led_off,0);
  1041  000C60  0E40               	movlw	low _led_off
  1042  000C62  6E51               	movwf	GENERACARACTER@vector^0,c
  1043  000C64  0E00               	movlw	high _led_off
  1044  000C66  6E52               	movwf	(GENERACARACTER@vector+1)^0,c
  1045  000C68  0E00               	movlw	0
  1046  000C6A  6E53               	movwf	GENERACARACTER@pos^0,c
  1047  000C6C  EC84  F006         	call	_GENERACARACTER	;wreg free
  1048  000C70                     
  1049                           ;maincode4.c: 51:     GENERACARACTER(led_on,1);
  1050  000C70  0E38               	movlw	low _led_on
  1051  000C72  6E51               	movwf	GENERACARACTER@vector^0,c
  1052  000C74  0E00               	movlw	high _led_on
  1053  000C76  6E52               	movwf	(GENERACARACTER@vector+1)^0,c
  1054  000C78  0E01               	movlw	1
  1055  000C7A  6E53               	movwf	GENERACARACTER@pos^0,c
  1056  000C7C  EC84  F006         	call	_GENERACARACTER	;wreg free
  1057  000C80  0012               	return		;funcret
  1058  000C82                     __end_of_init_LCD:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _LCD_CONFIG *****************
  1062 ;; Defined at:
  1063 ;;		line 72 in file "LCD.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1079 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 4
  1084 ;; This function calls:
  1085 ;;		_ENVIA_LCD_CMD
  1086 ;;		_ENVIA_NIBBLE
  1087 ;; This function is called by:
  1088 ;;		_init_LCD
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text5
  1093  000BDA                     __ptext5:
  1094                           	callstack 0
  1095  000BDA                     _LCD_CONFIG:
  1096                           	callstack 25
  1097  000BDA                     
  1098                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1099  000BDA  908C               	bcf	140,0,c	;volatile
  1100                           
  1101                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1102  000BDC  928C               	bcf	140,1,c	;volatile
  1103  000BDE                     
  1104                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1105  000BDE  0E30               	movlw	48
  1106  000BE0  EC3A  F007         	call	_ENVIA_NIBBLE
  1107  000BE4                     
  1108                           ;LCD.c: 77:         _delay(24000);
  1109  000BE4  0E20               	movlw	32
  1110  000BE6  6E51               	movwf	??_LCD_CONFIG^0,c
  1111  000BE8  0E2A               	movlw	42
  1112  000BEA                     u697:
  1113  000BEA  2EE8               	decfsz	wreg,f,c
  1114  000BEC  D7FE               	bra	u697
  1115  000BEE  2E51               	decfsz	??_LCD_CONFIG^0,f,c
  1116  000BF0  D7FC               	bra	u697
  1117  000BF2                     
  1118                           ;LCD.c: 78:         _delay(24000);
  1119  000BF2  0E20               	movlw	32
  1120  000BF4  6E51               	movwf	??_LCD_CONFIG^0,c
  1121  000BF6  0E2A               	movlw	42
  1122  000BF8                     u707:
  1123  000BF8  2EE8               	decfsz	wreg,f,c
  1124  000BFA  D7FE               	bra	u707
  1125  000BFC  2E51               	decfsz	??_LCD_CONFIG^0,f,c
  1126  000BFE  D7FC               	bra	u707
  1127                           
  1128                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1129  000C00  0E30               	movlw	48
  1130  000C02  EC3A  F007         	call	_ENVIA_NIBBLE
  1131  000C06                     
  1132                           ;LCD.c: 83:  _delay(1200);
  1133  000C06  0EF0               	movlw	240
  1134  000C08                     u717:
  1135  000C08  D000               	nop2	
  1136  000C0A  2EE8               	decfsz	wreg,f,c
  1137  000C0C  D7FD               	bra	u717
  1138  000C0E                     
  1139                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1140  000C0E  0E30               	movlw	48
  1141  000C10  EC3A  F007         	call	_ENVIA_NIBBLE
  1142  000C14                     
  1143                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1144  000C14  0E20               	movlw	32
  1145  000C16  EC3A  F007         	call	_ENVIA_NIBBLE
  1146  000C1A                     
  1147                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1148  000C1A  0E01               	movlw	1
  1149  000C1C  ECD9  F006         	call	_ENVIA_LCD_CMD
  1150  000C20                     
  1151                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1152  000C20  0E28               	movlw	40
  1153  000C22  ECD9  F006         	call	_ENVIA_LCD_CMD
  1154  000C26                     
  1155                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1156  000C26  0E0F               	movlw	15
  1157  000C28  ECD9  F006         	call	_ENVIA_LCD_CMD
  1158  000C2C                     
  1159                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1160  000C2C  0E06               	movlw	6
  1161  000C2E  ECD9  F006         	call	_ENVIA_LCD_CMD
  1162  000C32                     
  1163                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1164  000C32  0E01               	movlw	1
  1165  000C34  ECD9  F006         	call	_ENVIA_LCD_CMD
  1166  000C38  0012               	return		;funcret
  1167  000C3A                     __end_of_LCD_CONFIG:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _GENERACARACTER *****************
  1171 ;; Defined at:
  1172 ;;		line 153 in file "LCD.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  vector          2    9[COMRAM] PTR const unsigned char 
  1175 ;;		 -> led_on(8), led_off(8), 
  1176 ;;  pos             1   11[COMRAM] unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  i               1   12[COMRAM] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         3       0       0       0       0       0       0       0       0
  1189 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1191 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:        4 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 4
  1195 ;; This function calls:
  1196 ;;		_ENVIA_CHAR
  1197 ;;		_ENVIA_LCD_CMD
  1198 ;; This function is called by:
  1199 ;;		_init_LCD
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text6
  1204  000D08                     __ptext6:
  1205                           	callstack 0
  1206  000D08                     _GENERACARACTER:
  1207                           	callstack 25
  1208  000D08                     
  1209                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1210  000D08  5053               	movf	GENERACARACTER@pos^0,w,c
  1211  000D0A  0D08               	mullw	8
  1212  000D0C  50F3               	movf	243,w,c
  1213  000D0E  0F40               	addlw	64
  1214  000D10  ECD9  F006         	call	_ENVIA_LCD_CMD
  1215  000D14                     
  1216                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1217  000D14  0E00               	movlw	0
  1218  000D16  6E54               	movwf	GENERACARACTER@i^0,c
  1219  000D18                     l1618:
  1220                           
  1221                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1222  000D18  5054               	movf	GENERACARACTER@i^0,w,c
  1223  000D1A  2451               	addwf	GENERACARACTER@vector^0,w,c
  1224  000D1C  6ED9               	movwf	fsr2l,c
  1225  000D1E  0E00               	movlw	0
  1226  000D20  2052               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1227  000D22  6EDA               	movwf	fsr2h,c
  1228  000D24  50DF               	movf	indf2,w,c
  1229  000D26  ECBF  F006         	call	_ENVIA_CHAR
  1230  000D2A                     
  1231                           ;LCD.c: 160:  }
  1232  000D2A  2A54               	incf	GENERACARACTER@i^0,f,c
  1233  000D2C  0E07               	movlw	7
  1234  000D2E  6454               	cpfsgt	GENERACARACTER@i^0,c
  1235  000D30  EF9C  F006         	goto	u521
  1236  000D34  EF9E  F006         	goto	u520
  1237  000D38                     u521:
  1238  000D38  EF8C  F006         	goto	l1618
  1239  000D3C                     u520:
  1240  000D3C                     
  1241                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1242  000D3C  0E80               	movlw	128
  1243  000D3E  ECD9  F006         	call	_ENVIA_LCD_CMD
  1244  000D42  0012               	return		;funcret
  1245  000D44                     __end_of_GENERACARACTER:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _ENVIA_CHAR *****************
  1249 ;; Defined at:
  1250 ;;		line 50 in file "LCD.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  dato            1    wreg     unsigned char 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  dato            1    7[COMRAM] unsigned char 
  1255 ;;  aux             1    8[COMRAM] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0
  1266 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1268 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; Hardware stack levels required when called: 3
  1272 ;; This function calls:
  1273 ;;		_ENVIA_NIBBLE
  1274 ;;		_LEER_LCD
  1275 ;; This function is called by:
  1276 ;;		_ESCRIBE_MENSAJE
  1277 ;;		_GENERACARACTER
  1278 ;;		_vis_LEDs
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text7
  1283  000D7E                     __ptext7:
  1284                           	callstack 0
  1285  000D7E                     _ENVIA_CHAR:
  1286                           	callstack 25
  1287                           
  1288                           ;incstack = 0
  1289                           ;ENVIA_CHAR@dato stored from wreg
  1290  000D7E  6E4F               	movwf	ENVIA_CHAR@dato^0,c
  1291  000D80                     
  1292                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1293  000D80  808C               	bsf	140,0,c	;volatile
  1294  000D82                     
  1295                           ;LCD.c: 54:  LEER_LCD();
  1296  000D82  ECB4  F005         	call	_LEER_LCD	;wreg free
  1297  000D86                     
  1298                           ;LCD.c: 55:  TRISD = 0x00;
  1299  000D86  0E00               	movlw	0
  1300  000D88  6E95               	movwf	149,c	;volatile
  1301  000D8A                     
  1302                           ;LCD.c: 56:         _delay(1200);
  1303  000D8A  0EF0               	movlw	240
  1304  000D8C                     u727:
  1305  000D8C  D000               	nop2	
  1306  000D8E  2EE8               	decfsz	wreg,f,c
  1307  000D90  D7FD               	bra	u727
  1308  000D92                     
  1309                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1310  000D92  928C               	bcf	140,1,c	;volatile
  1311  000D94                     
  1312                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1313  000D94  948C               	bcf	140,2,c	;volatile
  1314  000D96                     
  1315                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1316  000D96  808C               	bsf	140,0,c	;volatile
  1317  000D98                     
  1318                           ;LCD.c: 61:  aux = dato & 0xF0;
  1319  000D98  504F               	movf	ENVIA_CHAR@dato^0,w,c
  1320  000D9A  0BF0               	andlw	240
  1321  000D9C  6E50               	movwf	ENVIA_CHAR@aux^0,c
  1322  000D9E                     
  1323                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1324  000D9E  5050               	movf	ENVIA_CHAR@aux^0,w,c
  1325  000DA0  EC3A  F007         	call	_ENVIA_NIBBLE
  1326  000DA4                     
  1327                           ;LCD.c: 63:  aux = dato << 4;
  1328  000DA4  384F               	swapf	ENVIA_CHAR@dato^0,w,c
  1329  000DA6  0BF0               	andlw	240
  1330  000DA8  6E50               	movwf	ENVIA_CHAR@aux^0,c
  1331  000DAA                     
  1332                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1333  000DAA  5050               	movf	ENVIA_CHAR@aux^0,w,c
  1334  000DAC  EC3A  F007         	call	_ENVIA_NIBBLE
  1335  000DB0  0012               	return		;funcret
  1336  000DB2                     __end_of_ENVIA_CHAR:
  1337                           	callstack 0
  1338                           
  1339 ;; *************** function _CURSOR_ONOFF *****************
  1340 ;; Defined at:
  1341 ;;		line 35 in file "LCD.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  estado          1    wreg     unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  estado          1    9[COMRAM] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0
  1356 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1358 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 4
  1362 ;; This function calls:
  1363 ;;		_ENVIA_LCD_CMD
  1364 ;; This function is called by:
  1365 ;;		_init_LCD
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text8
  1370  000E18                     __ptext8:
  1371                           	callstack 0
  1372  000E18                     _CURSOR_ONOFF:
  1373                           	callstack 25
  1374                           
  1375                           ;incstack = 0
  1376                           ;CURSOR_ONOFF@estado stored from wreg
  1377  000E18  6E51               	movwf	CURSOR_ONOFF@estado^0,c
  1378  000E1A                     
  1379                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1380  000E1A  5051               	movf	CURSOR_ONOFF@estado^0,w,c
  1381  000E1C  A4D8               	btfss	status,2,c
  1382  000E1E  EF13  F007         	goto	u491
  1383  000E22  EF15  F007         	goto	u490
  1384  000E26                     u491:
  1385  000E26  EF18  F007         	goto	l1572
  1386  000E2A                     u490:
  1387  000E2A  0E0E               	movlw	14
  1388  000E2C  ECD9  F006         	call	_ENVIA_LCD_CMD
  1389  000E30                     l1572:
  1390                           
  1391                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1392  000E30  0451               	decf	CURSOR_ONOFF@estado^0,w,c
  1393  000E32  A4D8               	btfss	status,2,c
  1394  000E34  EF1E  F007         	goto	u501
  1395  000E38  EF20  F007         	goto	u500
  1396  000E3C                     u501:
  1397  000E3C  EF23  F007         	goto	l42
  1398  000E40                     u500:
  1399  000E40  0E0C               	movlw	12
  1400  000E42  ECD9  F006         	call	_ENVIA_LCD_CMD
  1401  000E46                     l42:
  1402  000E46  0012               	return		;funcret
  1403  000E48                     __end_of_CURSOR_ONOFF:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _CURSOR_HOME *****************
  1407 ;; Defined at:
  1408 ;;		line 30 in file "LCD.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 4
  1429 ;; This function calls:
  1430 ;;		_ENVIA_LCD_CMD
  1431 ;; This function is called by:
  1432 ;;		_init_LCD
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text9
  1437  000E90                     __ptext9:
  1438                           	callstack 0
  1439  000E90                     _CURSOR_HOME:
  1440                           	callstack 25
  1441  000E90                     
  1442                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1443  000E90  0E02               	movlw	2
  1444  000E92  ECD9  F006         	call	_ENVIA_LCD_CMD
  1445  000E96  0012               	return		;funcret
  1446  000E98                     __end_of_CURSOR_HOME:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _BORRAR_LCD *****************
  1450 ;; Defined at:
  1451 ;;		line 67 in file "LCD.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0, cstack
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         0       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1468 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 4
  1472 ;; This function calls:
  1473 ;;		_ENVIA_LCD_CMD
  1474 ;; This function is called by:
  1475 ;;		_init_LCD
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text10
  1480  000E98                     __ptext10:
  1481                           	callstack 0
  1482  000E98                     _BORRAR_LCD:
  1483                           	callstack 25
  1484  000E98                     
  1485                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1486  000E98  0E01               	movlw	1
  1487  000E9A  ECD9  F006         	call	_ENVIA_LCD_CMD
  1488  000E9E  0012               	return		;funcret
  1489  000EA0                     __end_of_BORRAR_LCD:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _ENVIA_LCD_CMD *****************
  1493 ;; Defined at:
  1494 ;;		line 104 in file "LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  dato            1    wreg     unsigned char 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  dato            1    7[COMRAM] unsigned char 
  1499 ;;  aux             1    8[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0
  1510 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1512 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1513 ;;Total ram usage:        2 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		_ENVIA_NIBBLE
  1518 ;;		_LEER_LCD
  1519 ;; This function is called by:
  1520 ;;		_POS_CURSOR
  1521 ;;		_CURSOR_HOME
  1522 ;;		_CURSOR_ONOFF
  1523 ;;		_BORRAR_LCD
  1524 ;;		_LCD_CONFIG
  1525 ;;		_GENERACARACTER
  1526 ;;		_BLINK_CURSOR
  1527 ;;		_DISPLAY_ONOFF
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text11
  1532  000DB2                     __ptext11:
  1533                           	callstack 0
  1534  000DB2                     _ENVIA_LCD_CMD:
  1535                           	callstack 25
  1536                           
  1537                           ;incstack = 0
  1538                           ;ENVIA_LCD_CMD@dato stored from wreg
  1539  000DB2  6E4F               	movwf	ENVIA_LCD_CMD@dato^0,c
  1540  000DB4                     
  1541                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1542  000DB4  908C               	bcf	140,0,c	;volatile
  1543  000DB6                     
  1544                           ;LCD.c: 108:  LEER_LCD();
  1545  000DB6  ECB4  F005         	call	_LEER_LCD	;wreg free
  1546  000DBA                     
  1547                           ;LCD.c: 109:  TRISD = 0b00000000;
  1548  000DBA  0E00               	movlw	0
  1549  000DBC  6E95               	movwf	149,c	;volatile
  1550  000DBE                     
  1551                           ;LCD.c: 111:         _delay(1200);
  1552  000DBE  0EF0               	movlw	240
  1553  000DC0                     u737:
  1554  000DC0  D000               	nop2	
  1555  000DC2  2EE8               	decfsz	wreg,f,c
  1556  000DC4  D7FD               	bra	u737
  1557  000DC6                     
  1558                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1559  000DC6  928C               	bcf	140,1,c	;volatile
  1560  000DC8                     
  1561                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1562  000DC8  948C               	bcf	140,2,c	;volatile
  1563  000DCA                     
  1564                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1565  000DCA  908C               	bcf	140,0,c	;volatile
  1566  000DCC                     
  1567                           ;LCD.c: 115:  aux = dato & 0xF0;
  1568  000DCC  504F               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1569  000DCE  0BF0               	andlw	240
  1570  000DD0  6E50               	movwf	ENVIA_LCD_CMD@aux^0,c
  1571  000DD2                     
  1572                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1573  000DD2  5050               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1574  000DD4  EC3A  F007         	call	_ENVIA_NIBBLE
  1575  000DD8                     
  1576                           ;LCD.c: 117:  aux = dato<<4;
  1577  000DD8  384F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1578  000DDA  0BF0               	andlw	240
  1579  000DDC  6E50               	movwf	ENVIA_LCD_CMD@aux^0,c
  1580  000DDE                     
  1581                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1582  000DDE  5050               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1583  000DE0  EC3A  F007         	call	_ENVIA_NIBBLE
  1584  000DE4  0012               	return		;funcret
  1585  000DE6                     __end_of_ENVIA_LCD_CMD:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _LEER_LCD *****************
  1589 ;; Defined at:
  1590 ;;		line 121 in file "LCD.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  aux             1    6[COMRAM] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1607 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1608 ;;Total ram usage:        1 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 2
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_ENVIA_CHAR
  1615 ;;		_ENVIA_LCD_CMD
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text12
  1620  000B68                     __ptext12:
  1621                           	callstack 0
  1622  000B68                     _LEER_LCD:
  1623                           	callstack 25
  1624  000B68                     
  1625                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1626  000B68  0EF8               	movlw	248
  1627  000B6A  6E95               	movwf	149,c	;volatile
  1628  000B6C                     
  1629                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1630  000B6C  908C               	bcf	140,0,c	;volatile
  1631  000B6E                     
  1632                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1633  000B6E  828C               	bsf	140,1,c	;volatile
  1634  000B70                     
  1635                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1636  000B70  848C               	bsf	140,2,c	;volatile
  1637  000B72                     
  1638                           ;LCD.c: 128:         _delay(1200);
  1639  000B72  0EF0               	movlw	240
  1640  000B74                     u747:
  1641  000B74  D000               	nop2	
  1642  000B76  2EE8               	decfsz	wreg,f,c
  1643  000B78  D7FD               	bra	u747
  1644  000B7A                     
  1645                           ;LCD.c: 130:  aux = PORTD;
  1646  000B7A  CF83 F04E          	movff	3971,LEER_LCD@aux	;volatile
  1647  000B7E                     
  1648                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1649  000B7E  948C               	bcf	140,2,c	;volatile
  1650  000B80                     
  1651                           ;LCD.c: 132:         _delay(1200);
  1652  000B80  0EF0               	movlw	240
  1653  000B82                     u757:
  1654  000B82  D000               	nop2	
  1655  000B84  2EE8               	decfsz	wreg,f,c
  1656  000B86  D7FD               	bra	u757
  1657  000B88                     
  1658                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1659  000B88  848C               	bsf	140,2,c	;volatile
  1660  000B8A                     
  1661                           ;LCD.c: 135:         _delay(1200);
  1662  000B8A  0EF0               	movlw	240
  1663  000B8C                     u767:
  1664  000B8C  D000               	nop2	
  1665  000B8E  2EE8               	decfsz	wreg,f,c
  1666  000B90  D7FD               	bra	u767
  1667  000B92                     
  1668                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1669  000B92  948C               	bcf	140,2,c	;volatile
  1670  000B94                     l1490:
  1671                           
  1672                           ;LCD.c: 138:  aux = aux & 0x80;
  1673  000B94  504E               	movf	LEER_LCD@aux^0,w,c
  1674  000B96  0B80               	andlw	128
  1675  000B98  6E4E               	movwf	LEER_LCD@aux^0,c
  1676                           
  1677                           ;LCD.c: 139:  while(aux == 0x80)
  1678  000B9A  EFE3  F005         	goto	l1504
  1679  000B9E                     l67:
  1680                           
  1681                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1682  000B9E  848C               	bsf	140,2,c	;volatile
  1683  000BA0                     
  1684                           ;LCD.c: 142:             _delay(1200);
  1685  000BA0  0EF0               	movlw	240
  1686  000BA2                     u777:
  1687  000BA2  D000               	nop2	
  1688  000BA4  2EE8               	decfsz	wreg,f,c
  1689  000BA6  D7FD               	bra	u777
  1690  000BA8                     
  1691                           ;LCD.c: 143:             aux = PORTD;
  1692  000BA8  CF83 F04E          	movff	3971,LEER_LCD@aux	;volatile
  1693  000BAC                     
  1694                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1695  000BAC  948C               	bcf	140,2,c	;volatile
  1696                           
  1697                           ;LCD.c: 145:             _delay(1200);
  1698  000BAE  0EF0               	movlw	240
  1699  000BB0                     u787:
  1700  000BB0  D000               	nop2	
  1701  000BB2  2EE8               	decfsz	wreg,f,c
  1702  000BB4  D7FD               	bra	u787
  1703  000BB6                     
  1704                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1705  000BB6  848C               	bsf	140,2,c	;volatile
  1706                           
  1707                           ;LCD.c: 147:             _delay(1200);
  1708  000BB8  0EF0               	movlw	240
  1709  000BBA                     u797:
  1710  000BBA  D000               	nop2	
  1711  000BBC  2EE8               	decfsz	wreg,f,c
  1712  000BBE  D7FD               	bra	u797
  1713  000BC0                     
  1714                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1715  000BC0  948C               	bcf	140,2,c	;volatile
  1716  000BC2  EFCA  F005         	goto	l1490
  1717  000BC6                     l1504:
  1718                           
  1719                           ;LCD.c: 139:  while(aux == 0x80)
  1720  000BC6  0E80               	movlw	128
  1721  000BC8  184E               	xorwf	LEER_LCD@aux^0,w,c
  1722  000BCA  B4D8               	btfsc	status,2,c
  1723  000BCC  EFEA  F005         	goto	u461
  1724  000BD0  EFEC  F005         	goto	u460
  1725  000BD4                     u461:
  1726  000BD4  EFCF  F005         	goto	l67
  1727  000BD8                     u460:
  1728  000BD8  0012               	return		;funcret
  1729  000BDA                     __end_of_LEER_LCD:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _ENVIA_NIBBLE *****************
  1733 ;; Defined at:
  1734 ;;		line 93 in file "LCD.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  dato            1    wreg     unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  dato            1    6[COMRAM] unsigned char 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0
  1749 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1751 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1752 ;;Total ram usage:        1 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 2
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_ENVIA_CHAR
  1759 ;;		_LCD_CONFIG
  1760 ;;		_ENVIA_LCD_CMD
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text13
  1765  000E74                     __ptext13:
  1766                           	callstack 0
  1767  000E74                     _ENVIA_NIBBLE:
  1768                           	callstack 25
  1769                           
  1770                           ;incstack = 0
  1771                           ;ENVIA_NIBBLE@dato stored from wreg
  1772  000E74  6E4E               	movwf	ENVIA_NIBBLE@dato^0,c
  1773  000E76                     
  1774                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1775  000E76  0E0F               	movlw	15
  1776  000E78  168C               	andwf	140,f,c	;volatile
  1777                           
  1778                           ;LCD.c: 96:  dato &= 0xF0;
  1779  000E7A  0EF0               	movlw	240
  1780  000E7C  164E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1781                           
  1782                           ;LCD.c: 97:  LATD|= dato;
  1783  000E7E  504E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1784  000E80  128C               	iorwf	140,f,c	;volatile
  1785  000E82                     
  1786                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1787  000E82  848C               	bsf	140,2,c	;volatile
  1788  000E84                     
  1789                           ;LCD.c: 100:         _delay(1200);
  1790  000E84  0EF0               	movlw	240
  1791  000E86                     u807:
  1792  000E86  D000               	nop2	
  1793  000E88  2EE8               	decfsz	wreg,f,c
  1794  000E8A  D7FD               	bra	u807
  1795  000E8C                     
  1796                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1797  000E8C  948C               	bcf	140,2,c	;volatile
  1798  000E8E  0012               	return		;funcret
  1799  000E90                     __end_of_ENVIA_NIBBLE:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _delaymon *****************
  1803 ;; Defined at:
  1804 ;;		line 54 in file "maincode4.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2, status,0
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1821 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:        2 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text14
  1833  000A4E                     __ptext14:
  1834                           	callstack 0
  1835  000A4E                     _delaymon:
  1836                           	callstack 28
  1837  000A4E                     
  1838                           ;maincode4.c: 55:     switch(estado_v){
  1839  000A4E  EF5B  F005         	goto	l1682
  1840  000A52                     l1672:
  1841                           
  1842                           ;maincode4.c: 57:             _delay((unsigned long)((50)*(8000000UL/4000.0)));
  1843  000A52  0E82               	movlw	130
  1844  000A54  6E4E               	movwf	??_delaymon^0,c
  1845  000A56  0EDE               	movlw	222
  1846  000A58                     u817:
  1847  000A58  2EE8               	decfsz	wreg,f,c
  1848  000A5A  D7FE               	bra	u817
  1849  000A5C  2E4E               	decfsz	??_delaymon^0,f,c
  1850  000A5E  D7FC               	bra	u817
  1851                           
  1852                           ;maincode4.c: 58:             break;
  1853  000A60  EF78  F005         	goto	l149
  1854  000A64                     l1674:
  1855                           
  1856                           ;maincode4.c: 60:             _delay((unsigned long)((100)*(8000000UL/4000.0)));
  1857  000A64  0E02               	movlw	2
  1858  000A66  6E4F               	movwf	(??_delaymon+1)^0,c
  1859  000A68  0E04               	movlw	4
  1860  000A6A  6E4E               	movwf	??_delaymon^0,c
  1861  000A6C  0EBA               	movlw	186
  1862  000A6E                     u827:
  1863  000A6E  2EE8               	decfsz	wreg,f,c
  1864  000A70  D7FE               	bra	u827
  1865  000A72  2E4E               	decfsz	??_delaymon^0,f,c
  1866  000A74  D7FC               	bra	u827
  1867  000A76  2E4F               	decfsz	(??_delaymon+1)^0,f,c
  1868  000A78  D7FA               	bra	u827
  1869  000A7A  D000               	nop2	
  1870                           
  1871                           ;maincode4.c: 61:             break;
  1872  000A7C  EF78  F005         	goto	l149
  1873  000A80                     l1676:
  1874                           
  1875                           ;maincode4.c: 63:             _delay((unsigned long)((250)*(8000000UL/4000.0)));
  1876  000A80  0E03               	movlw	3
  1877  000A82  6E4F               	movwf	(??_delaymon+1)^0,c
  1878  000A84  0E8A               	movlw	138
  1879  000A86  6E4E               	movwf	??_delaymon^0,c
  1880  000A88  0E56               	movlw	86
  1881  000A8A                     u837:
  1882  000A8A  2EE8               	decfsz	wreg,f,c
  1883  000A8C  D7FE               	bra	u837
  1884  000A8E  2E4E               	decfsz	??_delaymon^0,f,c
  1885  000A90  D7FC               	bra	u837
  1886  000A92  2E4F               	decfsz	(??_delaymon+1)^0,f,c
  1887  000A94  D7FA               	bra	u837
  1888                           
  1889                           ;maincode4.c: 64:             break;
  1890  000A96  EF78  F005         	goto	l149
  1891  000A9A                     l1678:
  1892                           
  1893                           ;maincode4.c: 66:             _delay((unsigned long)((400)*(8000000UL/4000.0)));
  1894  000A9A  0E05               	movlw	5
  1895  000A9C  6E4F               	movwf	(??_delaymon+1)^0,c
  1896  000A9E  0E0F               	movlw	15
  1897  000AA0  6E4E               	movwf	??_delaymon^0,c
  1898  000AA2  0EF1               	movlw	241
  1899  000AA4                     u847:
  1900  000AA4  2EE8               	decfsz	wreg,f,c
  1901  000AA6  D7FE               	bra	u847
  1902  000AA8  2E4E               	decfsz	??_delaymon^0,f,c
  1903  000AAA  D7FC               	bra	u847
  1904  000AAC  2E4F               	decfsz	(??_delaymon+1)^0,f,c
  1905  000AAE  D7FA               	bra	u847
  1906  000AB0  F000               	nop	
  1907                           
  1908                           ;maincode4.c: 67:             break;
  1909  000AB2  EF78  F005         	goto	l149
  1910  000AB6                     l1682:
  1911  000AB6  5057               	movf	_estado_v^0,w,c
  1912  000AB8  6E4E               	movwf	??_delaymon^0,c
  1913  000ABA  6A4F               	clrf	(??_delaymon+1)^0,c
  1914                           
  1915                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1916                           ; Switch size 1, requested type "simple"
  1917                           ; Number of cases is 1, Range of values is 0 to 0
  1918                           ; switch strategies available:
  1919                           ; Name         Instructions Cycles
  1920                           ; simple_byte            4     3 (average)
  1921                           ;	Chosen strategy is simple_byte
  1922  000ABC  504F               	movf	(??_delaymon+1)^0,w,c
  1923  000ABE  0A00               	xorlw	0	; case 0
  1924  000AC0  B4D8               	btfsc	status,2,c
  1925  000AC2  EF65  F005         	goto	l1864
  1926  000AC6  EF78  F005         	goto	l149
  1927  000ACA                     l1864:
  1928                           
  1929                           ; Switch size 1, requested type "simple"
  1930                           ; Number of cases is 4, Range of values is 0 to 3
  1931                           ; switch strategies available:
  1932                           ; Name         Instructions Cycles
  1933                           ; simple_byte           13     7 (average)
  1934                           ;	Chosen strategy is simple_byte
  1935  000ACA  504E               	movf	??_delaymon^0,w,c
  1936  000ACC  0A00               	xorlw	0	; case 0
  1937  000ACE  B4D8               	btfsc	status,2,c
  1938  000AD0  EF29  F005         	goto	l1672
  1939  000AD4  0A01               	xorlw	1	; case 1
  1940  000AD6  B4D8               	btfsc	status,2,c
  1941  000AD8  EF32  F005         	goto	l1674
  1942  000ADC  0A03               	xorlw	3	; case 2
  1943  000ADE  B4D8               	btfsc	status,2,c
  1944  000AE0  EF40  F005         	goto	l1676
  1945  000AE4  0A01               	xorlw	1	; case 3
  1946  000AE6  B4D8               	btfsc	status,2,c
  1947  000AE8  EF4D  F005         	goto	l1678
  1948  000AEC  EF78  F005         	goto	l149
  1949  000AF0                     l149:
  1950  000AF0  0012               	return		;funcret
  1951  000AF2                     __end_of_delaymon:
  1952                           	callstack 0
  1953                           
  1954 ;; *************** function _configuro *****************
  1955 ;; Defined at:
  1956 ;;		line 23 in file "maincode4.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  1    wreg      void 
  1963 ;; Registers used:
  1964 ;;		wreg, status,2
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 2
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text15
  1985  000E48                     __ptext15:
  1986                           	callstack 0
  1987  000E48                     _configuro:
  1988                           	callstack 28
  1989  000E48                     
  1990                           ;maincode4.c: 24:     OSCCON = 0x70;
  1991  000E48  0E70               	movlw	112
  1992  000E4A  6ED3               	movwf	211,c	;volatile
  1993                           
  1994                           ;maincode4.c: 25:     ADCON1 = 0x0F;
  1995  000E4C  0E0F               	movlw	15
  1996  000E4E  6EC1               	movwf	193,c	;volatile
  1997                           
  1998                           ;maincode4.c: 26:     TRISE = 0xF8;
  1999  000E50  0EF8               	movlw	248
  2000  000E52  6E96               	movwf	150,c	;volatile
  2001  000E54                     
  2002                           ;maincode4.c: 27:     RCONbits.IPEN = 1;
  2003  000E54  8ED0               	bsf	208,7,c	;volatile
  2004  000E56                     
  2005                           ;maincode4.c: 28:     INTCONbits.GIEH = 1;
  2006  000E56  8EF2               	bsf	242,7,c	;volatile
  2007  000E58                     
  2008                           ;maincode4.c: 29:     INTCONbits.GIEL = 1;
  2009  000E58  8CF2               	bsf	242,6,c	;volatile
  2010  000E5A                     
  2011                           ;maincode4.c: 30:     INTCONbits.INT0IE = 1;
  2012  000E5A  88F2               	bsf	242,4,c	;volatile
  2013  000E5C                     
  2014                           ;maincode4.c: 31:     INTCON2bits.INTEDG0 = 0;
  2015  000E5C  9CF1               	bcf	241,6,c	;volatile
  2016  000E5E                     
  2017                           ;maincode4.c: 32:     INTCON2bits.RBPU = 0;
  2018  000E5E  9EF1               	bcf	241,7,c	;volatile
  2019  000E60                     
  2020                           ;maincode4.c: 33:     INTCON3bits.INT1IE = 1;
  2021  000E60  86F0               	bsf	240,3,c	;volatile
  2022  000E62                     
  2023                           ;maincode4.c: 34:     INTCON2bits.INTEDG1 = 0;
  2024  000E62  9AF1               	bcf	241,5,c	;volatile
  2025  000E64                     
  2026                           ;maincode4.c: 35:     INTCON3bits.INT1IP = 0;
  2027  000E64  9CF0               	bcf	240,6,c	;volatile
  2028  000E66                     
  2029                           ;maincode4.c: 36:     INTCON3bits.INT2IE = 1;
  2030  000E66  88F0               	bsf	240,4,c	;volatile
  2031  000E68                     
  2032                           ;maincode4.c: 37:     INTCON2bits.INTEDG2 = 0;
  2033  000E68  98F1               	bcf	241,4,c	;volatile
  2034                           
  2035                           ;maincode4.c: 38:     SPBRG = 12;
  2036  000E6A  0E0C               	movlw	12
  2037  000E6C  6EAF               	movwf	175,c	;volatile
  2038  000E6E                     
  2039                           ;maincode4.c: 39:     RCSTAbits.SPEN = 1;
  2040  000E6E  8EAB               	bsf	171,7,c	;volatile
  2041  000E70                     
  2042                           ;maincode4.c: 40:     TXSTAbits.TXEN = 1;
  2043  000E70  8AAC               	bsf	172,5,c	;volatile
  2044  000E72  0012               	return		;funcret
  2045  000E74                     __end_of_configuro:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function _INT1_ISR *****************
  2049 ;; Defined at:
  2050 ;;		line 168 in file "maincode4.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        3 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		Interrupt level 1
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	intcodelo
  2079  000018                     __pintcodelo:
  2080                           	callstack 0
  2081  000018                     _INT1_ISR:
  2082                           	callstack 25
  2083                           
  2084                           ;incstack = 0
  2085  000018  8059               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2086  00001A  CFD8 F04B          	movff	status,??_INT1_ISR
  2087  00001E  CFE8 F04C          	movff	wreg,??_INT1_ISR+1
  2088  000022  CFE0 F04D          	movff	bsr,??_INT1_ISR+2
  2089  000026                     
  2090                           ;maincode4.c: 169:     INTCON3bits.INT1IF = 0;
  2091  000026  90F0               	bcf	240,0,c	;volatile
  2092  000028                     
  2093                           ;maincode4.c: 170:     if(estado_v == 3){
  2094  000028  0E03               	movlw	3
  2095  00002A  1857               	xorwf	_estado_v^0,w,c
  2096  00002C  A4D8               	btfss	status,2,c
  2097  00002E  EF1B  F000         	goto	i1u30_21
  2098  000032  EF1D  F000         	goto	i1u30_20
  2099  000036                     i1u30_21:
  2100  000036  EF21  F000         	goto	i1l1284
  2101  00003A                     i1u30_20:
  2102  00003A                     
  2103                           ;maincode4.c: 171:         estado_v = 0;
  2104  00003A  0E00               	movlw	0
  2105  00003C  6E57               	movwf	_estado_v^0,c
  2106                           
  2107                           ;maincode4.c: 172:     }
  2108  00003E  EF22  F000         	goto	i1l218
  2109  000042                     i1l1284:
  2110                           
  2111                           ;maincode4.c: 174:         estado_v++;
  2112  000042  2A57               	incf	_estado_v^0,f,c
  2113  000044                     i1l218:
  2114  000044  C04D  FFE0         	movff	??_INT1_ISR+2,bsr
  2115  000048  C04C  FFE8         	movff	??_INT1_ISR+1,wreg
  2116  00004C  C04B  FFD8         	movff	??_INT1_ISR,status
  2117  000050  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2118  000052  0010               	retfie	
  2119  000054                     __end_of_INT1_ISR:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _INT0_ISR *****************
  2123 ;; Defined at:
  2124 ;;		line 143 in file "maincode4.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  yuca            1    2[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0
  2139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2141 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        3 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		Interrupt level 2
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	intcode
  2152  000008                     __pintcode:
  2153                           	callstack 0
  2154  000008                     _INT0_ISR:
  2155                           	callstack 25
  2156                           
  2157                           ;incstack = 0
  2158  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2159  00000A  EDD2  F004         	call	int_func,f	;refresh shadow registers
  2160                           
  2161                           	psect	intcode_body
  2162  0009A4                     __pintcode_body:
  2163                           	callstack 25
  2164  0009A4                     int_func:
  2165                           	callstack 25
  2166  0009A4  0006               	pop		; remove dummy address from shadow register refresh
  2167  0009A6  CFD9 F048          	movff	fsr2l,??_INT0_ISR
  2168  0009AA  CFDA F049          	movff	fsr2h,??_INT0_ISR+1
  2169  0009AE                     
  2170                           ;maincode4.c: 144:     if(INTCONbits.INT0IF == 1){
  2171  0009AE  A2F2               	btfss	242,1,c	;volatile
  2172  0009B0  EFDC  F004         	goto	i2u23_41
  2173  0009B4  EFDE  F004         	goto	i2u23_40
  2174  0009B8                     i2u23_41:
  2175  0009B8  EFED  F004         	goto	i2l1258
  2176  0009BC                     i2u23_40:
  2177  0009BC                     
  2178                           ;maincode4.c: 145:         INTCONbits.INT0IF = 0;
  2179  0009BC  92F2               	bcf	242,1,c	;volatile
  2180  0009BE                     
  2181                           ;maincode4.c: 146:         if(estado_f == 3){
  2182  0009BE  0E03               	movlw	3
  2183  0009C0  1858               	xorwf	_estado_f^0,w,c
  2184  0009C2  A4D8               	btfss	status,2,c
  2185  0009C4  EFE6  F004         	goto	i2u24_41
  2186  0009C8  EFE8  F004         	goto	i2u24_40
  2187  0009CC                     i2u24_41:
  2188  0009CC  EFEC  F004         	goto	i2l1256
  2189  0009D0                     i2u24_40:
  2190  0009D0                     
  2191                           ;maincode4.c: 147:             estado_f = 0;
  2192  0009D0  0E00               	movlw	0
  2193  0009D2  6E58               	movwf	_estado_f^0,c
  2194                           
  2195                           ;maincode4.c: 148:         }
  2196  0009D4  EFED  F004         	goto	i2l1258
  2197  0009D8                     i2l1256:
  2198                           
  2199                           ;maincode4.c: 150:             estado_f++;
  2200  0009D8  2A58               	incf	_estado_f^0,f,c
  2201  0009DA                     i2l1258:
  2202                           
  2203                           ;maincode4.c: 153:     if(INTCON3bits.INT2IF == 1){
  2204  0009DA  A2F0               	btfss	240,1,c	;volatile
  2205  0009DC  EFF2  F004         	goto	i2u25_41
  2206  0009E0  EFF4  F004         	goto	i2u25_40
  2207  0009E4                     i2u25_41:
  2208  0009E4  EF21  F005         	goto	i2l211
  2209  0009E8                     i2u25_40:
  2210  0009E8                     
  2211                           ;maincode4.c: 154:         INTCON3bits.INT2IF = 0;
  2212  0009E8  92F0               	bcf	240,1,c	;volatile
  2213  0009EA                     
  2214                           ;maincode4.c: 155:         unsigned char yuca;;maincode4.c: 156:         for(yuca=0;yuca
      +                          <24;yuca++){
  2215  0009EA  0E00               	movlw	0
  2216  0009EC  6E4A               	movwf	INT0_ISR@yuca^0,c
  2217  0009EE                     i2l1268:
  2218                           
  2219                           ;maincode4.c: 157:             TXREG = mensajon[yuca];
  2220  0009EE  0E01               	movlw	low _mensajon
  2221  0009F0  244A               	addwf	INT0_ISR@yuca^0,w,c
  2222  0009F2  6ED9               	movwf	fsr2l,c
  2223  0009F4  6ADA               	clrf	fsr2h,c
  2224  0009F6  0E00               	movlw	high _mensajon
  2225  0009F8  22DA               	addwfc	fsr2h,f,c
  2226  0009FA  50DF               	movf	indf2,w,c
  2227  0009FC  6EAD               	movwf	173,c	;volatile
  2228  0009FE                     i2l202:
  2229  0009FE  A2AC               	btfss	172,1,c	;volatile
  2230  000A00  EF04  F005         	goto	i2u26_41
  2231  000A04  EF06  F005         	goto	i2u26_40
  2232  000A08                     i2u26_41:
  2233  000A08  EFFF  F004         	goto	i2l202
  2234  000A0C                     i2u26_40:
  2235  000A0C                     
  2236                           ;maincode4.c: 159:         }
  2237  000A0C  2A4A               	incf	INT0_ISR@yuca^0,f,c
  2238  000A0E  0E17               	movlw	23
  2239  000A10  644A               	cpfsgt	INT0_ISR@yuca^0,c
  2240  000A12  EF0D  F005         	goto	i2u27_41
  2241  000A16  EF0F  F005         	goto	i2u27_40
  2242  000A1A                     i2u27_41:
  2243  000A1A  EFF7  F004         	goto	i2l1268
  2244  000A1E                     i2u27_40:
  2245  000A1E                     
  2246                           ;maincode4.c: 160:         TXREG = 0x0A;
  2247  000A1E  0E0A               	movlw	10
  2248  000A20  6EAD               	movwf	173,c	;volatile
  2249  000A22                     i2l205:
  2250  000A22  A2AC               	btfss	172,1,c	;volatile
  2251  000A24  EF16  F005         	goto	i2u28_41
  2252  000A28  EF18  F005         	goto	i2u28_40
  2253  000A2C                     i2u28_41:
  2254  000A2C  EF11  F005         	goto	i2l205
  2255  000A30                     i2u28_40:
  2256  000A30                     
  2257                           ;maincode4.c: 162:         TXREG = 0x0D;
  2258  000A30  0E0D               	movlw	13
  2259  000A32  6EAD               	movwf	173,c	;volatile
  2260  000A34                     i2l208:
  2261  000A34  A2AC               	btfss	172,1,c	;volatile
  2262  000A36  EF1F  F005         	goto	i2u29_41
  2263  000A3A  EF21  F005         	goto	i2u29_40
  2264  000A3E                     i2u29_41:
  2265  000A3E  EF1A  F005         	goto	i2l208
  2266  000A42                     i2u29_40:
  2267  000A42                     i2l211:
  2268  000A42  C049  FFDA         	movff	??_INT0_ISR+1,fsr2h
  2269  000A46  C048  FFD9         	movff	??_INT0_ISR,fsr2l
  2270  000A4A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2271  000A4C  0011               	retfie		f
  2272  000A4E                     __end_of_INT0_ISR:
  2273                           	callstack 0
  2274                           
  2275                           	psect	rparam
  2276  0000                     
  2277                           	psect	temp
  2278  000059                     btemp:
  2279                           	callstack 0
  2280  000059                     	ds	1
  2281  0000                     int$flags	set	btemp
  2282  0000                     wtemp8	set	btemp+1
  2283  0000                     ttemp5	set	btemp+1
  2284  0000                     ttemp6	set	btemp+4
  2285  0000                     ttemp7	set	btemp+8
  2286                           
  2287                           	psect	idloc
  2288                           
  2289                           ;Config register IDLOC0 @ 0x200000
  2290                           ;	unspecified, using default values
  2291  200000                     	org	2097152
  2292  200000  FF                 	db	255
  2293                           
  2294                           ;Config register IDLOC1 @ 0x200001
  2295                           ;	unspecified, using default values
  2296  200001                     	org	2097153
  2297  200001  FF                 	db	255
  2298                           
  2299                           ;Config register IDLOC2 @ 0x200002
  2300                           ;	unspecified, using default values
  2301  200002                     	org	2097154
  2302  200002  FF                 	db	255
  2303                           
  2304                           ;Config register IDLOC3 @ 0x200003
  2305                           ;	unspecified, using default values
  2306  200003                     	org	2097155
  2307  200003  FF                 	db	255
  2308                           
  2309                           ;Config register IDLOC4 @ 0x200004
  2310                           ;	unspecified, using default values
  2311  200004                     	org	2097156
  2312  200004  FF                 	db	255
  2313                           
  2314                           ;Config register IDLOC5 @ 0x200005
  2315                           ;	unspecified, using default values
  2316  200005                     	org	2097157
  2317  200005  FF                 	db	255
  2318                           
  2319                           ;Config register IDLOC6 @ 0x200006
  2320                           ;	unspecified, using default values
  2321  200006                     	org	2097158
  2322  200006  FF                 	db	255
  2323                           
  2324                           ;Config register IDLOC7 @ 0x200007
  2325                           ;	unspecified, using default values
  2326  200007                     	org	2097159
  2327  200007  FF                 	db	255
  2328                           
  2329                           	psect	config
  2330                           
  2331                           ;Config register CONFIG1L @ 0x300000
  2332                           ;	PLL Prescaler Selection bits
  2333                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2334                           ;	System Clock Postscaler Selection bits
  2335                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2336                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2337                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2338  300000                     	org	3145728
  2339  300000  00                 	db	0
  2340                           
  2341                           ;Config register CONFIG1H @ 0x300001
  2342                           ;	Oscillator Selection bits
  2343                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2344                           ;	Fail-Safe Clock Monitor Enable bit
  2345                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2346                           ;	Internal/External Oscillator Switchover bit
  2347                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2348  300001                     	org	3145729
  2349  300001  08                 	db	8
  2350                           
  2351                           ;Config register CONFIG2L @ 0x300002
  2352                           ;	Power-up Timer Enable bit
  2353                           ;	PWRT = ON, PWRT enabled
  2354                           ;	Brown-out Reset Enable bits
  2355                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2356                           ;	Brown-out Reset Voltage bits
  2357                           ;	BORV = 3, Minimum setting 2.05V
  2358                           ;	USB Voltage Regulator Enable bit
  2359                           ;	VREGEN = OFF, USB voltage regulator disabled
  2360  300002                     	org	3145730
  2361  300002  18                 	db	24
  2362                           
  2363                           ;Config register CONFIG2H @ 0x300003
  2364                           ;	Watchdog Timer Enable bit
  2365                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2366                           ;	Watchdog Timer Postscale Select bits
  2367                           ;	WDTPS = 32768, 1:32768
  2368  300003                     	org	3145731
  2369  300003  1E                 	db	30
  2370                           
  2371                           ; Padding undefined space
  2372  300004                     	org	3145732
  2373  300004  FF                 	db	255
  2374                           
  2375                           ;Config register CONFIG3H @ 0x300005
  2376                           ;	CCP2 MUX bit
  2377                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2378                           ;	PORTB A/D Enable bit
  2379                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2380                           ;	Low-Power Timer 1 Oscillator Enable bit
  2381                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2382                           ;	MCLR Pin Enable bit
  2383                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2384  300005                     	org	3145733
  2385  300005  81                 	db	129
  2386                           
  2387                           ;Config register CONFIG4L @ 0x300006
  2388                           ;	Stack Full/Underflow Reset Enable bit
  2389                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2390                           ;	Single-Supply ICSP Enable bit
  2391                           ;	LVP = OFF, Single-Supply ICSP disabled
  2392                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2393                           ;	ICPRT = OFF, ICPORT disabled
  2394                           ;	Extended Instruction Set Enable bit
  2395                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2396                           ;	Background Debugger Enable bit
  2397                           ;	DEBUG = 0x1, unprogrammed default
  2398  300006                     	org	3145734
  2399  300006  81                 	db	129
  2400                           
  2401                           ; Padding undefined space
  2402  300007                     	org	3145735
  2403  300007  FF                 	db	255
  2404                           
  2405                           ;Config register CONFIG5L @ 0x300008
  2406                           ;	Code Protection bit
  2407                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2408                           ;	Code Protection bit
  2409                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2410                           ;	Code Protection bit
  2411                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2412                           ;	Code Protection bit
  2413                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2414  300008                     	org	3145736
  2415  300008  0F                 	db	15
  2416                           
  2417                           ;Config register CONFIG5H @ 0x300009
  2418                           ;	Boot Block Code Protection bit
  2419                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2420                           ;	Data EEPROM Code Protection bit
  2421                           ;	CPD = OFF, Data EEPROM is not code-protected
  2422  300009                     	org	3145737
  2423  300009  C0                 	db	192
  2424                           
  2425                           ;Config register CONFIG6L @ 0x30000A
  2426                           ;	Write Protection bit
  2427                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2428                           ;	Write Protection bit
  2429                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2430                           ;	Write Protection bit
  2431                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2432                           ;	Write Protection bit
  2433                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2434  30000A                     	org	3145738
  2435  30000A  0F                 	db	15
  2436                           
  2437                           ;Config register CONFIG6H @ 0x30000B
  2438                           ;	Configuration Register Write Protection bit
  2439                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2440                           ;	Boot Block Write Protection bit
  2441                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2442                           ;	Data EEPROM Write Protection bit
  2443                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2444  30000B                     	org	3145739
  2445  30000B  E0                 	db	224
  2446                           
  2447                           ;Config register CONFIG7L @ 0x30000C
  2448                           ;	Table Read Protection bit
  2449                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2450                           ;	Table Read Protection bit
  2451                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2452                           ;	Table Read Protection bit
  2453                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2454                           ;	Table Read Protection bit
  2455                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2456  30000C                     	org	3145740
  2457  30000C  0F                 	db	15
  2458                           
  2459                           ;Config register CONFIG7H @ 0x30000D
  2460                           ;	Boot Block Table Read Protection bit
  2461                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2462  30000D                     	org	3145741
  2463  30000D  40                 	db	64
  2464                           tosu	equ	0xFFF
  2465                           tosh	equ	0xFFE
  2466                           tosl	equ	0xFFD
  2467                           stkptr	equ	0xFFC
  2468                           pclatu	equ	0xFFB
  2469                           pclath	equ	0xFFA
  2470                           pcl	equ	0xFF9
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           prodh	equ	0xFF4
  2476                           prodl	equ	0xFF3
  2477                           indf0	equ	0xFEF
  2478                           postinc0	equ	0xFEE
  2479                           postdec0	equ	0xFED
  2480                           preinc0	equ	0xFEC
  2481                           plusw0	equ	0xFEB
  2482                           fsr0h	equ	0xFEA
  2483                           fsr0l	equ	0xFE9
  2484                           wreg	equ	0xFE8
  2485                           indf1	equ	0xFE7
  2486                           postinc1	equ	0xFE6
  2487                           postdec1	equ	0xFE5
  2488                           preinc1	equ	0xFE4
  2489                           plusw1	equ	0xFE3
  2490                           fsr1h	equ	0xFE2
  2491                           fsr1l	equ	0xFE1
  2492                           bsr	equ	0xFE0
  2493                           indf2	equ	0xFDF
  2494                           postinc2	equ	0xFDE
  2495                           postdec2	equ	0xFDD
  2496                           preinc2	equ	0xFDC
  2497                           plusw2	equ	0xFDB
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        71
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     15      88
    BANK0           160      4       4
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> led_on(COMRAM[8]), led_off(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _vis_LEDs->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4690
                                              0 BANK0      4     4      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _delaymon
                           _init_LCD
                           _vis_LEDs
 ---------------------------------------------------------------------------------
 (1) _vis_LEDs                                             0     0      0    1346
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     487
                                              9 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     676
                                              9 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1686
                                             13 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     887
                                              9 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     183
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                              9 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     183
                                              7 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      70
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      23
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delaymon                                             2     2      0       0
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             3     3      0       0
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             3     3      0      45
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _delaymon
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _vis_LEDs
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 _INT1_ISR (ROOT)

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4       4       5        2.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      F      58       1       93.6%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhl       1C      0       0      21        0.0%
BITBIGSFRhhllll     14      0       0      26        0.0%
BITBIGSFRhhllh      11      0       0      24        0.0%
BITBIGSFRhhlhl       E      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          7      0       0      28        0.0%
BITBIGSFRhl          7      0       0      27        0.0%
BITBIGSFRhhlhh       2      0       0      22        0.0%
BITBIGSFRhhlllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      30        0.0%
DATA                 0      0      5C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 11 12:29:59 2022

                     l24 0D7C                       l42 0E46                       l51 0DB0  
                     l60 0E8E                       l37 0E96                       l54 0E9E  
                     l63 0DE4                       l48 0D06                       l57 0C38  
                     l74 0D42                       l67 0B9E                       l69 0BD8  
                     bsr 000FE0            ENVIA_CHAR@aux 0050                      l140 0C80  
                    l137 0E72                      l171 0886                      l149 0AF0  
                    l165 084E                      l158 0B66                      l168 0874  
                    u500 0E40                      u501 0E3C                      u510 0D06  
                    u511 0D02                      u520 0D3C                      u600 085C  
                    u521 0D38                      u601 0858                      u530 0B1A  
                    u610 0870                      u531 0B16                      u611 086C  
                    u460 0BD8                      u540 0B38                      u620 0882  
                    u461 0BD4                      u541 0B34                      u621 087E  
                    u470 0D56                      u550 0B56                      u630 0894  
                    u471 0D52                      u551 0B52                      u631 0890  
                    u480 0D74                      u640 08C8                      u481 0D70  
                    u641 08C4                      u490 0E2A                      u650 08FC  
                    u491 0E26                      u707 0BF8                      u651 08F8  
                    u660 0930                      u717 0C08                      u661 092C  
                    u670 0964                      u807 0E86                      u727 0D8C  
                    u671 0960                      u817 0A58                      u737 0DC0  
                    u827 0A6E                      u747 0B74                      u837 0A8A  
                    u757 0B82                      u847 0AA4                      u767 0B8C  
                    u687 0C48                      u777 0BA2                      u697 0BEA  
                    u787 0BB0                      u797 0BBA              LEER_LCD@aux 004E  
                    wreg 000FE8             ?_CURSOR_HOME 0048           ??_ENVIA_NIBBLE 004E  
         ENVIA_CHAR@dato 004F                     l1500 0BC0                     l1510 0E84  
                   l1512 0E8C                     l1504 0BC6                     l1520 0DBE  
                   l1600 0C1A                     l1506 0E76                     l1530 0DD2  
                   l1522 0DC6                     l1514 0DB4                     l1610 0D08  
                   l1602 0C20                     l1508 0E82                     l1532 0DD8  
                   l1524 0DC8                     l1516 0DB6                     l1540 0D86  
                   l1620 0D2A                     l1612 0D14                     l1604 0C26  
                   l1700 0B38                     l1630 0E56                     l1470 0B6C  
                   l1534 0DDE                     l1526 0DCA                     l1518 0DBA  
                   l1550 0D98                     l1542 0D8A                     l1622 0D2C  
                   l1606 0C2C                     l1702 0B42                     l1640 0E60  
                   l1632 0E58                     l1480 0B7E                     l1472 0B6E  
                   l1528 0DCC                     l1552 0D9E                     l1544 0D92  
                   l1536 0D80                     l1624 0D3C                     l1608 0C32  
                   l1560 0D56                     l1704 0B48                     l1650 0E6E  
                   l1642 0E62                     l1634 0E5A                     l1626 0E48  
                   l1490 0B94                     l1482 0B80                     l1474 0B70  
                   l1570 0E2A                     l1554 0DA4                     l1546 0D94  
                   l1538 0D82                     l1618 0D18                     l1562 0D62  
                   l1706 0B56                     l1810 0950                     l1730 081E  
                   l1652 0E70                     l1644 0E64                     l1636 0E5C  
                   l1628 0E54                     l1492 0BA0                     l1484 0B88  
                   l1476 0B72                     l1468 0B68                     l1572 0E30  
                   l1556 0DAA                     l1548 0D96                     l1660 0C52  
                   l1580 0CF2                     l1564 0D74                     l1708 0B60  
                   l1812 0954                     l1804 0938                     l1740 083E  
                   l1732 0828                     l1646 0E66                     l1638 0E5E  
                   l1670 0A4E                     l1494 0BA8                     l1486 0B8A  
                   l1478 0B7A                     l1566 0E90                     l1574 0E40  
                   l1590 0BE4                     l1662 0C56                     l1654 0C3A  
                   l1582 0CF4                     l1558 0D46                     l1806 0948  
                   l1750 0898                     l1742 085C                     l1734 0838  
                   l1726 0816                     l1648 0E68                     l1672 0A52  
                   l1496 0BAC                     l1488 0B92                     l1584 0E98  
                   l1568 0E1A                     l1592 0BF2                     l1664 0C5A  
                   l1656 0C3E                     l1576 0CCA                     l1808 094C  
                   l1760 08B0                     l1816 0964                     l1744 0860  
                   l1728 081A                     l1674 0A64                     l1682 0AB6  
                   l1498 0BB6                     l1594 0C06                     l1586 0BDA  
                   l1666 0C60                     l1658 0C42                     l1578 0CD6  
                   l1690 0AFC                     l1762 08B4                     l1746 0870  
                   l1676 0A80                     l1596 0C0E                     l1588 0BDE  
                   l1668 0C70                     l1692 0B0C                     l1780 08EC  
                   l1772 08D0                     l1764 08B8                     l1756 089C  
                   l1748 0882                     l1678 0A9A                     l1598 0C14  
                   l1694 0B1A                     l1862 097A                     l1790 0914  
                   l1782 0900                     l1774 08E0                     l1766 08CC  
                   l1758 08AC                     l1864 0ACA                     l1696 0B24  
                   l1688 0AF2                     l1792 0918                     l1776 08E4  
                   l1698 0B2A                     l1794 091C                     l1778 08E8  
                   l1796 0920                     l1788 0904                     l1798 0934  
                   STR_1 080E                     STR_2 0801                     _LATD 000F8C  
                   _LATE 000F8D                     _main 0816                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0059                     prodl 000FF3                     start 0054  
          ?_CURSOR_ONOFF 0048             ___param_bank 000000          ??_ENVIA_LCD_CMD 004F  
       __end_of_LEER_LCD 0BDA         __end_of_INT0_ISR 0A4E         __end_of_INT1_ISR 0054  
         _GENERACARACTER 0D08                    ?_main 0048                    i1l218 0044  
                  i2l202 09FE                    i2l211 0A42                    i2l205 0A22  
                  i2l208 0A34                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
            ?_POS_CURSOR 0051                    main@x 0063                    tablat 000FF5  
                  ttemp5 005A                    ttemp6 005D                    ttemp7 0061  
                  status 000FD8                    wtemp8 005A           ??_CURSOR_ONOFF 0051  
        __initialization 0DE6             __end_of_main 09A4   __end_of_GENERACARACTER 0D44  
           INT0_ISR@yuca 004A          _ESCRIBE_MENSAJE 0CCA                   ??_main 0060  
          __activetblptr 000002                   _ADCON1 000FC1                   i1l1280 0028  
                 i1l1282 003A                   i1l1284 0042                   i1l1278 0026  
                 i2l1250 09BC                   i2l1260 09E8                   i2l1252 09BE  
                 i2l1270 0A0C                   i2l1262 09EA                   i2l1254 09D0  
                 i2l1272 0A0E                   i2l1256 09D8                   i2l1248 09AE  
                 i2l1274 0A1E                   i2l1258 09DA                   i2l1276 0A30  
                 i2l1268 09EE                   _OSCCON 000FD3         __end_of_delaymon 0AF2  
   __end_of_ENVIA_NIBBLE 0E90                   _efecto 0019         __end_of_init_LCD 0C82  
                 _led_on 0038          ?_GENERACARACTER 0051                   isa$std 000001  
           __pdataCOMRAM 0001         __end_of_vis_LEDs 0B68             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0051                ?_LEER_LCD 0048               __accesstop 0060  
__end_of__initialization 0E0A                ?_INT0_ISR 0048                ?_INT1_ISR 0048  
           ??_LCD_CONFIG 0051            ___rparam_used 000001             ??_ENVIA_CHAR 004F  
__end_of_ESCRIBE_MENSAJE 0D08           __pcstackCOMRAM 0048       __end_of_BORRAR_LCD 0EA0  
       ENVIA_LCD_CMD@aux 0050     __end_of_CURSOR_ONOFF 0E48       __end_of_LCD_CONFIG 0C3A  
     __end_of_ENVIA_CHAR 0DB2               ??_LEER_LCD 004E         ENVIA_NIBBLE@dato 004E  
             ??_INT0_ISR 0048               ??_INT1_ISR 004B               _bienvenida 0029  
                i1u30_20 003A                  i1u30_21 0036                ?_delaymon 0048  
                i2u23_40 09BC                  i2u23_41 09B8                  i2u24_40 09D0  
                i2u24_41 09CC                  i2u25_40 09E8                  i2u25_41 09E4  
                i2u26_40 0A0C                  i2u26_41 0A08                  i2u27_40 0A1E  
                i2u27_41 0A1A                  i2u28_40 0A30                  i2u28_41 0A2C  
                i2u29_40 0A42                  i2u29_41 0A3E             ??_POS_CURSOR 0052  
              ?_init_LCD 0048                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0051                ?_vis_LEDs 0048        __end_of_configuro 0E74  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0DE6                  __pcinit 0DE6  
     __end_of_POS_CURSOR 0D7E                  __ramtop 0800                  __ptext0 0816  
                __ptext1 0AF2                  __ptext2 0D44                  __ptext3 0CCA  
                __ptext4 0C3A                  __ptext5 0BDA                  __ptext6 0D08  
                __ptext7 0D7E                  __ptext8 0E18                  __ptext9 0E90  
        GENERACARACTER@i 0054                  _led_off 0040               ??_delaymon 004E  
         __pintcode_body 09A4             _ENVIA_NIBBLE 0E74     end_of_initialization 0E0A  
             ??_init_LCD 0055            __Lmediumconst 0000                  int_func 09A4  
       ??_GENERACARACTER 0054               ??_vis_LEDs 0057                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE     GENERACARACTER@vector 0051  
              _PORTEbits 000F84               main@camote 0062                _TXSTAbits 000FAC  
           _CURSOR_ONOFF 0E18       CURSOR_ONOFF@estado 0051            __pidataCOMRAM 0C82  
          ??_CURSOR_HOME 0051      start_initialization 0DE6        ENVIA_LCD_CMD@dato 004F  
            __pbssCOMRAM 0057            __pcstackBANK0 0060      __end_of_CURSOR_HOME 0E98  
              __pintcode 0008              __pintcodelo 0018        GENERACARACTER@pos 0053  
              _configuro 0E48              __smallconst 0800                 _LEER_LCD 0B68  
               _INT0_ISR 0008                 _INT1_ISR 0018                 _LATDbits 000F8C  
               _RCONbits 000FD0         ESCRIBE_MENSAJE@i 0056           POS_CURSOR@fila 0052  
             ?_configuro 0048              _CURSOR_HOME 0E90              _INTCON2bits 000FF1  
            _INTCON3bits 000FF0                copy_data0 0DFA                 __Hrparam 0000  
               __Lrparam 0000                 _delaymon 0A4E                 __ptext10 0E98  
               __ptext11 0DB2                 __ptext12 0B68                 __ptext13 0E74  
               __ptext14 0A4E                 __ptext15 0E48               _BORRAR_LCD 0E98  
               _init_LCD 0C3A                 _estado_f 0058                 _estado_v 0057  
               _mensajon 0001               _LCD_CONFIG 0BDA               _ENVIA_CHAR 0D7E  
               _vis_LEDs 0AF2                 isa$xinst 000000                 int$flags 0059  
          _ENVIA_LCD_CMD 0DB2              ??_configuro 004E               _INTCONbits 000FF2  
      ??_ESCRIBE_MENSAJE 0054                 intlevel1 0000                 intlevel2 0000  
  ESCRIBE_MENSAJE@cadena 0051           ?_ENVIA_LCD_CMD 0048              ?_BORRAR_LCD 0048  
          ?_ENVIA_NIBBLE 0048               _POS_CURSOR 0D44              ?_LCD_CONFIG 0048  
     ESCRIBE_MENSAJE@tam 0053              ?_ENVIA_CHAR 0048        POS_CURSOR@columna 0051  
