

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 16 20:44:32 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataCOMRAM
    74  000EA0                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _u_acento
    78  000EA0  02                 	db	2
    79  000EA1  04                 	db	4
    80  000EA2  11                 	db	17
    81  000EA3  11                 	db	17
    82  000EA4  11                 	db	17
    83  000EA5  11                 	db	17
    84  000EA6  0E                 	db	14
    85  000EA7  00                 	db	0
    86  0000                     _TRISD	set	3989
    87  0000                     _LATD	set	3980
    88  0000                     _PORTBbits	set	3969
    89  0000                     _LATBbits	set	3978
    90  0000                     _LATCbits	set	3979
    91  0000                     _TRISCbits	set	3988
    92  0000                     _TRISEbits	set	3990
    93  0000                     _ADCON1	set	4033
    94  0000                     _OSCCON	set	4051
    95  0000                     _LATDbits	set	3980
    96  0000                     _TRISBbits	set	3987
    97  0000                     _PORTD	set	3971
    98                           
    99                           	psect	smallconst
   100  000800                     __psmallconst:
   101                           	callstack 0
   102  000800  00                 	db	0
   103  000801                     STR_1:
   104  000801  53                 	db	83	;'S'
   105  000802  65                 	db	101	;'e'
   106  000803  6D                 	db	109	;'m'
   107  000804  61                 	db	97	;'a'
   108  000805  6E                 	db	110	;'n'
   109  000806  61                 	db	97	;'a'
   110  000807  20                 	db	32
   111  000808  31                 	db	49	;'1'
   112  000809  34                 	db	52	;'4'
   113  00080A  20                 	db	32
   114  00080B  00                 	db	0
   115  00080C                     STR_4:
   116  00080C  43                 	db	67	;'C'
   117  00080D  20                 	db	32
   118  00080E  52                 	db	82	;'R'
   119  00080F  48                 	db	72	;'H'
   120  000810  3A                 	db	58	;':'
   121  000811  00                 	db	0
   122  000812                     STR_2:
   123  000812  6C                 	db	108	;'l'
   124  000813  74                 	db	116	;'t'
   125  000814  69                 	db	105	;'i'
   126  000815  6D                 	db	109	;'m'
   127  000816  6F                 	db	111	;'o'
   128  000817  00                 	db	0
   129  000818                     STR_6:
   130  000818  20                 	db	32
   131  000819  4F                 	db	79	;'O'
   132  00081A  4B                 	db	75	;'K'
   133  00081B  00                 	db	0
   134  00081C                     STR_5:
   135  00081C  20                 	db	32
   136  00081D  45                 	db	69	;'E'
   137  00081E  52                 	db	82	;'R'
   138  00081F  00                 	db	0
   139  000820                     STR_3:
   140  000820  54                 	db	84	;'T'
   141  000821  3A                 	db	58	;':'
   142  000822  00                 	db	0
   143  000823  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  000CB6                     __pcinit:
   149                           	callstack 0
   150  000CB6                     start_initialization:
   151                           	callstack 0
   152  000CB6                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (8 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  000CB6  0EA0               	movlw	low __pidataCOMRAM
   158  000CB8  6EF6               	movwf	tblptrl,c
   159  000CBA  0E0E               	movlw	high __pidataCOMRAM
   160  000CBC  6EF7               	movwf	tblptrh,c
   161  000CBE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  000CC0  6EF8               	movwf	tblptru,c
   163  000CC2  EE00  F01C         	lfsr	0,__pdataCOMRAM
   164  000CC6  EE10 F008          	lfsr	1,8
   165  000CCA                     copy_data0:
   166  000CCA  0009               	tblrd		*+
   167  000CCC  CFF5 FFEE          	movff	tablat,postinc0
   168  000CD0  50E5               	movf	postdec1,w,c
   169  000CD2  50E1               	movf	fsr1l,w,c
   170  000CD4  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (8 bytes)
   173  000CD6  EE00  F014         	lfsr	0,__pbssCOMRAM
   174  000CDA  0E08               	movlw	8
   175  000CDC                     clear_0:
   176  000CDC  6AEE               	clrf	postinc0,c
   177  000CDE  06E8               	decf	wreg,f,c
   178  000CE0  E1FD               	bnz	clear_0
   179  000CE2                     end_of_initialization:
   180                           	callstack 0
   181  000CE2                     __end_of__initialization:
   182                           	callstack 0
   183  000CE2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   184  000CE4  6EF8               	movwf	tblptru,c
   185  000CE6  0E08               	movlw	high __Lsmallconst
   186  000CE8  6EF7               	movwf	tblptrh,c
   187  000CEA  0100               	movlb	0
   188  000CEC  EF12  F004         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssCOMRAM
   191  000014                     __pbssCOMRAM:
   192                           	callstack 0
   193  000014                     _unidad:
   194                           	callstack 0
   195  000014                     	ds	1
   196  000015                     _decena:
   197                           	callstack 0
   198  000015                     	ds	1
   199  000016                     _centena:
   200                           	callstack 0
   201  000016                     	ds	1
   202  000017                     _Checksum:
   203                           	callstack 0
   204  000017                     	ds	1
   205  000018                     _T_Integer:
   206                           	callstack 0
   207  000018                     	ds	1
   208  000019                     _T_Decimal:
   209                           	callstack 0
   210  000019                     	ds	1
   211  00001A                     _RH_Integer:
   212                           	callstack 0
   213  00001A                     	ds	1
   214  00001B                     _RH_Decimal:
   215                           	callstack 0
   216  00001B                     	ds	1
   217                           
   218                           	psect	dataCOMRAM
   219  00001C                     __pdataCOMRAM:
   220                           	callstack 0
   221  00001C                     _u_acento:
   222                           	callstack 0
   223  00001C                     	ds	8
   224                           
   225                           	psect	cstackCOMRAM
   226  000001                     __pcstackCOMRAM:
   227                           	callstack 0
   228  000001                     ??_DHT11_Start:
   229  000001                     ?___awmod:
   230                           	callstack 0
   231  000001                     DHT11_ReadData@i:
   232                           	callstack 0
   233  000001                     ENVIA_NIBBLE@dato:
   234                           	callstack 0
   235  000001                     LEER_LCD@aux:
   236                           	callstack 0
   237  000001                     ___awmod@dividend:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     DHT11_ReadData@data:
   243                           	callstack 0
   244  000002                     ENVIA_CHAR@dato:
   245                           	callstack 0
   246  000002                     ENVIA_LCD_CMD@dato:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x1
   250  000002                     	ds	1
   251  000003                     ENVIA_CHAR@aux:
   252                           	callstack 0
   253  000003                     ENVIA_LCD_CMD@aux:
   254                           	callstack 0
   255  000003                     ___awmod@divisor:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x2
   259  000003                     	ds	1
   260  000004                     ??_LCD_CONFIG:
   261  000004                     POS_CURSOR@columna:
   262                           	callstack 0
   263  000004                     CURSOR_ONOFF@estado:
   264                           	callstack 0
   265  000004                     ESCRIBE_MENSAJE@cadena:
   266                           	callstack 0
   267  000004                     GENERACARACTER@vector:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x3
   271  000004                     	ds	1
   272  000005                     POS_CURSOR@fila:
   273                           	callstack 0
   274  000005                     ___awmod@counter:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x4
   278  000005                     	ds	1
   279  000006                     ESCRIBE_MENSAJE@tam:
   280                           	callstack 0
   281  000006                     GENERACARACTER@pos:
   282                           	callstack 0
   283  000006                     ___awmod@sign:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x5
   287  000006                     	ds	1
   288  000007                     ??_ESCRIBE_MENSAJE:
   289  000007                     ?___awdiv:
   290                           	callstack 0
   291  000007                     GENERACARACTER@i:
   292                           	callstack 0
   293  000007                     ___awdiv@dividend:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x6
   297  000007                     	ds	1
   298  000008                     ??_init_LCD:
   299                           
   300                           ; 1 bytes @ 0x7
   301  000008                     	ds	1
   302  000009                     ESCRIBE_MENSAJE@i:
   303                           	callstack 0
   304  000009                     ___awdiv@divisor:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x8
   308  000009                     	ds	2
   309  00000B                     ___awdiv@counter:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xA
   313  00000B                     	ds	1
   314  00000C                     ___awdiv@sign:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xB
   318  00000C                     	ds	1
   319  00000D                     ___awdiv@quotient:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xC
   323  00000D                     	ds	2
   324  00000F                     convierte@numero:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xE
   328  00000F                     	ds	1
   329  000010                     ??_main:
   330                           
   331                           ; 1 bytes @ 0xF
   332  000010                     	ds	4
   333                           
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 84 in file "maincode01.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;		None
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   353 ;;      Params:         0       0       0       0       0       0       0       0       0
   354 ;;      Locals:         0       0       0       0       0       0       0       0       0
   355 ;;      Temps:          4       0       0       0       0       0       0       0       0
   356 ;;      Totals:         4       0       0       0       0       0       0       0       0
   357 ;;Total ram usage:        4 bytes
   358 ;; Hardware stack levels required when called: 4
   359 ;; This function calls:
   360 ;;		_ENVIA_CHAR
   361 ;;		_ESCRIBE_MENSAJE
   362 ;;		_POS_CURSOR
   363 ;;		_configuro
   364 ;;		_convierte
   365 ;;		_init_LCD
   366 ;;		_lectura_DHT11
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text0
   373  000824                     __ptext0:
   374                           	callstack 0
   375  000824                     _main:
   376                           	callstack 27
   377  000824                     
   378                           ;maincode01.c: 85:     configuro();
   379  000824  EC45  F007         	call	_configuro	;wreg free
   380  000828                     
   381                           ;maincode01.c: 86:     init_LCD();
   382  000828  EC95  F006         	call	_init_LCD	;wreg free
   383  00082C                     
   384                           ;maincode01.c: 87:     POS_CURSOR(1,0);
   385  00082C  0E00               	movlw	0
   386  00082E  6E04               	movwf	POS_CURSOR@columna^0,c
   387  000830  0E01               	movlw	1
   388  000832  EC78  F006         	call	_POS_CURSOR
   389  000836                     
   390                           ;maincode01.c: 88:     ESCRIBE_MENSAJE("Semana 14 ",10);
   391  000836  0E01               	movlw	low STR_1
   392  000838  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   393  00083A  0E08               	movlw	high STR_1
   394  00083C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   395  00083E  0E0A               	movlw	10
   396  000840  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   397  000842  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   398  000846                     
   399                           ;maincode01.c: 89:     ENVIA_CHAR(0);
   400  000846  0E00               	movlw	0
   401  000848  ECCB  F006         	call	_ENVIA_CHAR
   402  00084C                     
   403                           ;maincode01.c: 90:     ESCRIBE_MENSAJE("ltimo",5);
   404  00084C  0E12               	movlw	low STR_2
   405  00084E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   406  000850  0E08               	movlw	high STR_2
   407  000852  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   408  000854  0E05               	movlw	5
   409  000856  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   410  000858  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   411  00085C                     l1368:
   412                           
   413                           ;maincode01.c: 92:         lectura_DHT11();
   414  00085C  EC13  F007         	call	_lectura_DHT11	;wreg free
   415  000860                     
   416                           ;maincode01.c: 93:         POS_CURSOR(2,0);
   417  000860  0E00               	movlw	0
   418  000862  6E04               	movwf	POS_CURSOR@columna^0,c
   419  000864  0E02               	movlw	2
   420  000866  EC78  F006         	call	_POS_CURSOR
   421  00086A                     
   422                           ;maincode01.c: 94:         convierte(T_Integer);
   423  00086A  5018               	movf	_T_Integer^0,w,c
   424  00086C  ECF1  F005         	call	_convierte
   425  000870                     
   426                           ;maincode01.c: 95:         ESCRIBE_MENSAJE("T:",2);
   427  000870  0E20               	movlw	low STR_3
   428  000872  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   429  000874  0E08               	movlw	high STR_3
   430  000876  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   431  000878  0E02               	movlw	2
   432  00087A  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   433  00087C  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   434  000880                     
   435                           ;maincode01.c: 96:         ENVIA_CHAR(decena+0x30);
   436  000880  5015               	movf	_decena^0,w,c
   437  000882  0F30               	addlw	48
   438  000884  ECCB  F006         	call	_ENVIA_CHAR
   439  000888                     
   440                           ;maincode01.c: 97:         ENVIA_CHAR(unidad+0x30);
   441  000888  5014               	movf	_unidad^0,w,c
   442  00088A  0F30               	addlw	48
   443  00088C  ECCB  F006         	call	_ENVIA_CHAR
   444  000890                     
   445                           ;maincode01.c: 98:         ENVIA_CHAR(0xDF);
   446  000890  0EDF               	movlw	223
   447  000892  ECCB  F006         	call	_ENVIA_CHAR
   448  000896                     
   449                           ;maincode01.c: 99:         convierte(RH_Integer);
   450  000896  501A               	movf	_RH_Integer^0,w,c
   451  000898  ECF1  F005         	call	_convierte
   452  00089C                     
   453                           ;maincode01.c: 100:         ESCRIBE_MENSAJE("C RH:",5);
   454  00089C  0E0C               	movlw	low STR_4
   455  00089E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   456  0008A0  0E08               	movlw	high STR_4
   457  0008A2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   458  0008A4  0E05               	movlw	5
   459  0008A6  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   460  0008A8  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   461  0008AC                     
   462                           ;maincode01.c: 101:         ENVIA_CHAR(decena+0x30);
   463  0008AC  5015               	movf	_decena^0,w,c
   464  0008AE  0F30               	addlw	48
   465  0008B0  ECCB  F006         	call	_ENVIA_CHAR
   466  0008B4                     
   467                           ;maincode01.c: 102:         ENVIA_CHAR(unidad+0x30);
   468  0008B4  5014               	movf	_unidad^0,w,c
   469  0008B6  0F30               	addlw	48
   470  0008B8  ECCB  F006         	call	_ENVIA_CHAR
   471  0008BC                     
   472                           ;maincode01.c: 103:         ENVIA_CHAR('%');
   473  0008BC  0E25               	movlw	37
   474  0008BE  ECCB  F006         	call	_ENVIA_CHAR
   475  0008C2                     
   476                           ;maincode01.c: 104:         if(Checksum != (RH_Integer + RH_Decimal + T_Integer + T_Deci
      +                          mal)){
   477  0008C2  5017               	movf	_Checksum^0,w,c
   478  0008C4  6E10               	movwf	??_main^0,c
   479  0008C6  6A11               	clrf	(??_main+1)^0,c
   480  0008C8  501B               	movf	_RH_Decimal^0,w,c
   481  0008CA  C01A  F012         	movff	_RH_Integer,??_main+2
   482  0008CE  6A13               	clrf	(??_main+3)^0,c
   483  0008D0  2612               	addwf	(??_main+2)^0,f,c
   484  0008D2  0E00               	movlw	0
   485  0008D4  2213               	addwfc	(??_main+3)^0,f,c
   486  0008D6  5018               	movf	_T_Integer^0,w,c
   487  0008D8  2612               	addwf	(??_main+2)^0,f,c
   488  0008DA  0E00               	movlw	0
   489  0008DC  2213               	addwfc	(??_main+3)^0,f,c
   490  0008DE  5019               	movf	_T_Decimal^0,w,c
   491  0008E0  2612               	addwf	(??_main+2)^0,f,c
   492  0008E2  0E00               	movlw	0
   493  0008E4  2213               	addwfc	(??_main+3)^0,f,c
   494  0008E6  5010               	movf	??_main^0,w,c
   495  0008E8  1812               	xorwf	(??_main+2)^0,w,c
   496  0008EA  E109               	bnz	u480
   497  0008EC  5011               	movf	(??_main+1)^0,w,c
   498  0008EE  1813               	xorwf	(??_main+3)^0,w,c
   499  0008F0  B4D8               	btfsc	status,2,c
   500  0008F2  EF7D  F004         	goto	u481
   501  0008F6  EF7F  F004         	goto	u480
   502  0008FA                     u481:
   503  0008FA  EF89  F004         	goto	l1396
   504  0008FE                     u480:
   505  0008FE                     
   506                           ;maincode01.c: 105:             ESCRIBE_MENSAJE(" ER",3);
   507  0008FE  0E1C               	movlw	low STR_5
   508  000900  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   509  000902  0E08               	movlw	high STR_5
   510  000904  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   511  000906  0E03               	movlw	3
   512  000908  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   513  00090A  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   514                           
   515                           ;maincode01.c: 106:         }
   516  00090E  EF91  F004         	goto	l1398
   517  000912                     l1396:
   518                           
   519                           ;maincode01.c: 108:             ESCRIBE_MENSAJE(" OK",3);
   520  000912  0E18               	movlw	low STR_6
   521  000914  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   522  000916  0E08               	movlw	high STR_6
   523  000918  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   524  00091A  0E03               	movlw	3
   525  00091C  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   526  00091E  EC1E  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   527  000922                     l1398:
   528                           
   529                           ;maincode01.c: 110:         _delay((unsigned long)((500)*(8000000UL/4000.0)));
   530  000922  0E06               	movlw	6
   531  000924  6E11               	movwf	(??_main+1)^0,c
   532  000926  0E13               	movlw	19
   533  000928  6E10               	movwf	??_main^0,c
   534  00092A  0EAE               	movlw	174
   535  00092C                     u497:
   536  00092C  2EE8               	decfsz	wreg,f,c
   537  00092E  D7FE               	bra	u497
   538  000930  2E10               	decfsz	??_main^0,f,c
   539  000932  D7FC               	bra	u497
   540  000934  2E11               	decfsz	(??_main+1)^0,f,c
   541  000936  D7FA               	bra	u497
   542  000938  EF2E  F004         	goto	l1368
   543  00093C  EF00  F000         	goto	start
   544  000940                     __end_of_main:
   545                           	callstack 0
   546                           
   547 ;; *************** function _lectura_DHT11 *****************
   548 ;; Defined at:
   549 ;;		line 74 in file "maincode01.c"
   550 ;; Parameters:    Size  Location     Type
   551 ;;		None
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         0       0       0       0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0
   566 ;;      Totals:         0       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        0 bytes
   568 ;; Hardware stack levels used: 1
   569 ;; Hardware stack levels required when called: 1
   570 ;; This function calls:
   571 ;;		_DHT11_CheckResponse
   572 ;;		_DHT11_ReadData
   573 ;;		_DHT11_Start
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text1
   580  000E26                     __ptext1:
   581                           	callstack 0
   582  000E26                     _lectura_DHT11:
   583                           	callstack 29
   584  000E26                     
   585                           ;maincode01.c: 75:     DHT11_Start();
   586  000E26  EC27  F007         	call	_DHT11_Start	;wreg free
   587  000E2A                     
   588                           ;maincode01.c: 76:     DHT11_CheckResponse();
   589  000E2A  ECFD  F006         	call	_DHT11_CheckResponse	;wreg free
   590  000E2E                     
   591                           ;maincode01.c: 77:     RH_Integer = DHT11_ReadData();
   592  000E2E  ECC3  F005         	call	_DHT11_ReadData	;wreg free
   593  000E32  6E1A               	movwf	_RH_Integer^0,c
   594  000E34                     
   595                           ;maincode01.c: 78:     RH_Decimal = DHT11_ReadData();
   596  000E34  ECC3  F005         	call	_DHT11_ReadData	;wreg free
   597  000E38  6E1B               	movwf	_RH_Decimal^0,c
   598  000E3A                     
   599                           ;maincode01.c: 79:     T_Integer = DHT11_ReadData();
   600  000E3A  ECC3  F005         	call	_DHT11_ReadData	;wreg free
   601  000E3E  6E18               	movwf	_T_Integer^0,c
   602  000E40                     
   603                           ;maincode01.c: 80:     T_Decimal = DHT11_ReadData();
   604  000E40  ECC3  F005         	call	_DHT11_ReadData	;wreg free
   605  000E44  6E19               	movwf	_T_Decimal^0,c
   606  000E46                     
   607                           ;maincode01.c: 81:     Checksum = DHT11_ReadData();
   608  000E46  ECC3  F005         	call	_DHT11_ReadData	;wreg free
   609  000E4A  6E17               	movwf	_Checksum^0,c
   610  000E4C  0012               	return		;funcret
   611  000E4E                     __end_of_lectura_DHT11:
   612                           	callstack 0
   613                           
   614 ;; *************** function _DHT11_Start *****************
   615 ;; Defined at:
   616 ;;		line 53 in file "maincode01.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         0       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          1       0       0       0       0       0       0       0       0
   633 ;;      Totals:         1       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        1 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_lectura_DHT11
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text2
   644  000E4E                     __ptext2:
   645                           	callstack 0
   646  000E4E                     _DHT11_Start:
   647                           	callstack 29
   648  000E4E                     
   649                           ;maincode01.c: 54:     TRISBbits.RB4 = 0;
   650  000E4E  9893               	bcf	147,4,c	;volatile
   651                           
   652                           ;maincode01.c: 55:     LATBbits.LB4 = 0;
   653  000E50  988A               	bcf	138,4,c	;volatile
   654  000E52                     
   655                           ;maincode01.c: 56:     _delay((unsigned long)((18)*(8000000UL/4000.0)));
   656  000E52  0E2F               	movlw	47
   657  000E54  6E01               	movwf	??_DHT11_Start^0,c
   658  000E56  0EC0               	movlw	192
   659  000E58                     u507:
   660  000E58  2EE8               	decfsz	wreg,f,c
   661  000E5A  D7FE               	bra	u507
   662  000E5C  2E01               	decfsz	??_DHT11_Start^0,f,c
   663  000E5E  D7FC               	bra	u507
   664  000E60                     
   665                           ;maincode01.c: 57:     LATBbits.LB4 = 1;
   666  000E60  888A               	bsf	138,4,c	;volatile
   667                           
   668                           ;maincode01.c: 58:     _delay((unsigned long)((20)*(8000000UL/4000000.0)));
   669  000E62  0E0D               	movlw	13
   670  000E64                     u517:
   671  000E64  2EE8               	decfsz	wreg,f,c
   672  000E66  D7FE               	bra	u517
   673  000E68  F000               	nop	
   674  000E6A                     
   675                           ;maincode01.c: 59:     TRISBbits.RB4 = 1;
   676  000E6A  8893               	bsf	147,4,c	;volatile
   677  000E6C  0012               	return		;funcret
   678  000E6E                     __end_of_DHT11_Start:
   679                           	callstack 0
   680                           
   681 ;; *************** function _DHT11_ReadData *****************
   682 ;; Defined at:
   683 ;;		line 36 in file "maincode01.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  data            1    1[COMRAM] unsigned char 
   688 ;;  i               1    0[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      unsigned char 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         2       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         2       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        2 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_lectura_DHT11
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text3
   712  000B86                     __ptext3:
   713                           	callstack 0
   714  000B86                     _DHT11_ReadData:
   715                           	callstack 29
   716  000B86                     
   717                           ;maincode01.c: 37:     unsigned char i;;maincode01.c: 38:     unsigned char data = 0;
   718  000B86  0E00               	movlw	0
   719  000B88  6E02               	movwf	DHT11_ReadData@data^0,c
   720                           
   721                           ;maincode01.c: 39:     for(i=0;i<8;i++){
   722  000B8A  0E00               	movlw	0
   723  000B8C  6E01               	movwf	DHT11_ReadData@i^0,c
   724  000B8E                     l65:
   725  000B8E  A881               	btfss	129,4,c	;volatile
   726  000B90  EFCC  F005         	goto	u51
   727  000B94  EFCE  F005         	goto	u50
   728  000B98                     u51:
   729  000B98  EFC7  F005         	goto	l65
   730  000B9C                     u50:
   731  000B9C                     
   732                           ;maincode01.c: 41:         _delay((unsigned long)((30)*(8000000UL/4000000.0)));
   733  000B9C  0E14               	movlw	20
   734  000B9E                     u527:
   735  000B9E  2EE8               	decfsz	wreg,f,c
   736  000BA0  D7FE               	bra	u527
   737  000BA2                     
   738                           ;maincode01.c: 42:         if(PORTBbits.RB4 & 1){
   739  000BA2  A881               	btfss	129,4,c	;volatile
   740  000BA4  EFD6  F005         	goto	u61
   741  000BA8  EFD8  F005         	goto	u60
   742  000BAC                     u61:
   743  000BAC  EFDC  F005         	goto	l1008
   744  000BB0                     u60:
   745  000BB0                     
   746                           ;maincode01.c: 43:             data = ((data << 1) | 1);
   747  000BB0  80D8               	bsf	status,0,c
   748  000BB2  3602               	rlcf	DHT11_ReadData@data^0,f,c
   749                           
   750                           ;maincode01.c: 44:         }
   751  000BB4  EFDF  F005         	goto	l70
   752  000BB8                     l1008:
   753                           
   754                           ;maincode01.c: 46:             data = (data << 1);
   755  000BB8  5002               	movf	DHT11_ReadData@data^0,w,c
   756  000BBA  2402               	addwf	DHT11_ReadData@data^0,w,c
   757  000BBC  6E02               	movwf	DHT11_ReadData@data^0,c
   758  000BBE                     l70:
   759  000BBE  B881               	btfsc	129,4,c	;volatile
   760  000BC0  EFE4  F005         	goto	u71
   761  000BC4  EFE6  F005         	goto	u70
   762  000BC8                     u71:
   763  000BC8  EFDF  F005         	goto	l70
   764  000BCC                     u70:
   765  000BCC                     
   766                           ;maincode01.c: 49:     }
   767  000BCC  2A01               	incf	DHT11_ReadData@i^0,f,c
   768  000BCE  0E07               	movlw	7
   769  000BD0  6401               	cpfsgt	DHT11_ReadData@i^0,c
   770  000BD2  EFED  F005         	goto	u81
   771  000BD6  EFEF  F005         	goto	u80
   772  000BDA                     u81:
   773  000BDA  EFC7  F005         	goto	l65
   774  000BDE                     u80:
   775  000BDE                     
   776                           ;maincode01.c: 50:     return data;
   777  000BDE  5002               	movf	DHT11_ReadData@data^0,w,c
   778  000BE0  0012               	return		;funcret
   779  000BE2                     __end_of_DHT11_ReadData:
   780                           	callstack 0
   781                           
   782 ;; *************** function _DHT11_CheckResponse *****************
   783 ;; Defined at:
   784 ;;		line 62 in file "maincode01.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		None
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_lectura_DHT11
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text4
   812  000DFA                     __ptext4:
   813                           	callstack 0
   814  000DFA                     _DHT11_CheckResponse:
   815                           	callstack 29
   816  000DFA                     l79:
   817  000DFA  B881               	btfsc	129,4,c	;volatile
   818  000DFC  EF02  F007         	goto	u91
   819  000E00  EF04  F007         	goto	u90
   820  000E04                     u91:
   821  000E04  EFFD  F006         	goto	l79
   822  000E08                     u90:
   823  000E08                     l82:
   824  000E08  A881               	btfss	129,4,c	;volatile
   825  000E0A  EF09  F007         	goto	u101
   826  000E0E  EF0B  F007         	goto	u100
   827  000E12                     u101:
   828  000E12  EF04  F007         	goto	l82
   829  000E16                     u100:
   830  000E16                     l85:
   831  000E16  B881               	btfsc	129,4,c	;volatile
   832  000E18  EF10  F007         	goto	u111
   833  000E1C  EF12  F007         	goto	u110
   834  000E20                     u111:
   835  000E20  EF0B  F007         	goto	l85
   836  000E24                     u110:
   837  000E24  0012               	return		;funcret
   838  000E26                     __end_of_DHT11_CheckResponse:
   839                           	callstack 0
   840                           
   841 ;; *************** function _init_LCD *****************
   842 ;; Defined at:
   843 ;;		line 26 in file "maincode01.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   857 ;;      Params:         0       0       0       0       0       0       0       0       0
   858 ;;      Locals:         0       0       0       0       0       0       0       0       0
   859 ;;      Temps:          1       0       0       0       0       0       0       0       0
   860 ;;      Totals:         1       0       0       0       0       0       0       0       0
   861 ;;Total ram usage:        1 bytes
   862 ;; Hardware stack levels used: 1
   863 ;; Hardware stack levels required when called: 3
   864 ;; This function calls:
   865 ;;		_BORRAR_LCD
   866 ;;		_CURSOR_HOME
   867 ;;		_CURSOR_ONOFF
   868 ;;		_GENERACARACTER
   869 ;;		_LCD_CONFIG
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text5
   876  000D2A                     __ptext5:
   877                           	callstack 0
   878  000D2A                     _init_LCD:
   879                           	callstack 27
   880  000D2A                     
   881                           ;maincode01.c: 27:     TRISD = 0x00;
   882  000D2A  0E00               	movlw	0
   883  000D2C  6E95               	movwf	149,c	;volatile
   884  000D2E                     
   885                           ;maincode01.c: 28:     LCD_CONFIG();
   886  000D2E  EC93  F005         	call	_LCD_CONFIG	;wreg free
   887  000D32                     
   888                           ;maincode01.c: 29:     _delay((unsigned long)((17)*(8000000UL/4000.0)));
   889  000D32  0E2D               	movlw	45
   890  000D34  6E08               	movwf	??_init_LCD^0,c
   891  000D36  0E26               	movlw	38
   892  000D38                     u537:
   893  000D38  2EE8               	decfsz	wreg,f,c
   894  000D3A  D7FE               	bra	u537
   895  000D3C  2E08               	decfsz	??_init_LCD^0,f,c
   896  000D3E  D7FC               	bra	u537
   897  000D40  D000               	nop2	
   898  000D42                     
   899                           ;maincode01.c: 30:     BORRAR_LCD();
   900  000D42  EC58  F007         	call	_BORRAR_LCD	;wreg free
   901  000D46                     
   902                           ;maincode01.c: 31:     CURSOR_HOME();
   903  000D46  EC54  F007         	call	_CURSOR_HOME	;wreg free
   904  000D4A                     
   905                           ;maincode01.c: 32:     CURSOR_ONOFF(1);
   906  000D4A  0E01               	movlw	1
   907  000D4C  ECE5  F006         	call	_CURSOR_ONOFF
   908  000D50                     
   909                           ;maincode01.c: 33:     GENERACARACTER(u_acento,0);
   910  000D50  0E1C               	movlw	low _u_acento
   911  000D52  6E04               	movwf	GENERACARACTER@vector^0,c
   912  000D54  0E00               	movlw	high _u_acento
   913  000D56  6E05               	movwf	(GENERACARACTER@vector+1)^0,c
   914  000D58  0E00               	movlw	0
   915  000D5A  6E06               	movwf	GENERACARACTER@pos^0,c
   916  000D5C  EC3D  F006         	call	_GENERACARACTER	;wreg free
   917  000D60  0012               	return		;funcret
   918  000D62                     __end_of_init_LCD:
   919                           	callstack 0
   920                           
   921 ;; *************** function _LCD_CONFIG *****************
   922 ;; Defined at:
   923 ;;		line 72 in file "LCD.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         0       0       0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0
   939 ;;      Temps:          1       0       0       0       0       0       0       0       0
   940 ;;      Totals:         1       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:        1 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 2
   944 ;; This function calls:
   945 ;;		_ENVIA_LCD_CMD
   946 ;;		_ENVIA_NIBBLE
   947 ;; This function is called by:
   948 ;;		_init_LCD
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text6
   953  000B26                     __ptext6:
   954                           	callstack 0
   955  000B26                     _LCD_CONFIG:
   956                           	callstack 27
   957  000B26                     
   958                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   959  000B26  908C               	bcf	140,0,c	;volatile
   960                           
   961                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   962  000B28  928C               	bcf	140,1,c	;volatile
   963  000B2A                     
   964                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   965  000B2A  0E30               	movlw	48
   966  000B2C  EC37  F007         	call	_ENVIA_NIBBLE
   967  000B30                     
   968                           ;LCD.c: 77:         _delay(24000);
   969  000B30  0E20               	movlw	32
   970  000B32  6E04               	movwf	??_LCD_CONFIG^0,c
   971  000B34  0E2A               	movlw	42
   972  000B36                     u547:
   973  000B36  2EE8               	decfsz	wreg,f,c
   974  000B38  D7FE               	bra	u547
   975  000B3A  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   976  000B3C  D7FC               	bra	u547
   977  000B3E                     
   978                           ;LCD.c: 78:         _delay(24000);
   979  000B3E  0E20               	movlw	32
   980  000B40  6E04               	movwf	??_LCD_CONFIG^0,c
   981  000B42  0E2A               	movlw	42
   982  000B44                     u557:
   983  000B44  2EE8               	decfsz	wreg,f,c
   984  000B46  D7FE               	bra	u557
   985  000B48  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   986  000B4A  D7FC               	bra	u557
   987                           
   988                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   989  000B4C  0E30               	movlw	48
   990  000B4E  EC37  F007         	call	_ENVIA_NIBBLE
   991  000B52                     
   992                           ;LCD.c: 83:  _delay(1200);
   993  000B52  0EF0               	movlw	240
   994  000B54                     u567:
   995  000B54  D000               	nop2	
   996  000B56  2EE8               	decfsz	wreg,f,c
   997  000B58  D7FD               	bra	u567
   998  000B5A                     
   999                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1000  000B5A  0E30               	movlw	48
  1001  000B5C  EC37  F007         	call	_ENVIA_NIBBLE
  1002  000B60                     
  1003                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1004  000B60  0E20               	movlw	32
  1005  000B62  EC37  F007         	call	_ENVIA_NIBBLE
  1006  000B66                     
  1007                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1008  000B66  0E01               	movlw	1
  1009  000B68  ECB1  F006         	call	_ENVIA_LCD_CMD
  1010  000B6C                     
  1011                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1012  000B6C  0E28               	movlw	40
  1013  000B6E  ECB1  F006         	call	_ENVIA_LCD_CMD
  1014  000B72                     
  1015                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1016  000B72  0E0F               	movlw	15
  1017  000B74  ECB1  F006         	call	_ENVIA_LCD_CMD
  1018  000B78                     
  1019                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1020  000B78  0E06               	movlw	6
  1021  000B7A  ECB1  F006         	call	_ENVIA_LCD_CMD
  1022  000B7E                     
  1023                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1024  000B7E  0E01               	movlw	1
  1025  000B80  ECB1  F006         	call	_ENVIA_LCD_CMD
  1026  000B84  0012               	return		;funcret
  1027  000B86                     __end_of_LCD_CONFIG:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _GENERACARACTER *****************
  1031 ;; Defined at:
  1032 ;;		line 153 in file "LCD.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  1035 ;;		 -> u_acento(8), 
  1036 ;;  pos             1    5[COMRAM] unsigned char 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  i               1    6[COMRAM] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         3       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1051 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1052 ;;Total ram usage:        4 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; Hardware stack levels required when called: 2
  1055 ;; This function calls:
  1056 ;;		_ENVIA_CHAR
  1057 ;;		_ENVIA_LCD_CMD
  1058 ;; This function is called by:
  1059 ;;		_init_LCD
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text7
  1064  000C7A                     __ptext7:
  1065                           	callstack 0
  1066  000C7A                     _GENERACARACTER:
  1067                           	callstack 27
  1068  000C7A                     
  1069                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1070  000C7A  5006               	movf	GENERACARACTER@pos^0,w,c
  1071  000C7C  0D08               	mullw	8
  1072  000C7E  50F3               	movf	243,w,c
  1073  000C80  0F40               	addlw	64
  1074  000C82  ECB1  F006         	call	_ENVIA_LCD_CMD
  1075  000C86                     
  1076                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1077  000C86  0E00               	movlw	0
  1078  000C88  6E07               	movwf	GENERACARACTER@i^0,c
  1079  000C8A                     l1236:
  1080                           
  1081                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1082  000C8A  5007               	movf	GENERACARACTER@i^0,w,c
  1083  000C8C  2404               	addwf	GENERACARACTER@vector^0,w,c
  1084  000C8E  6ED9               	movwf	fsr2l,c
  1085  000C90  0E00               	movlw	0
  1086  000C92  2005               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1087  000C94  6EDA               	movwf	fsr2h,c
  1088  000C96  50DF               	movf	indf2,w,c
  1089  000C98  ECCB  F006         	call	_ENVIA_CHAR
  1090  000C9C                     
  1091                           ;LCD.c: 160:  }
  1092  000C9C  2A07               	incf	GENERACARACTER@i^0,f,c
  1093  000C9E  0E07               	movlw	7
  1094  000CA0  6407               	cpfsgt	GENERACARACTER@i^0,c
  1095  000CA2  EF55  F006         	goto	u321
  1096  000CA6  EF57  F006         	goto	u320
  1097  000CAA                     u321:
  1098  000CAA  EF45  F006         	goto	l1236
  1099  000CAE                     u320:
  1100  000CAE                     
  1101                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1102  000CAE  0E80               	movlw	128
  1103  000CB0  ECB1  F006         	call	_ENVIA_LCD_CMD
  1104  000CB4  0012               	return		;funcret
  1105  000CB6                     __end_of_GENERACARACTER:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _CURSOR_ONOFF *****************
  1109 ;; Defined at:
  1110 ;;		line 35 in file "LCD.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  estado          1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  estado          1    3[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 2
  1131 ;; This function calls:
  1132 ;;		_ENVIA_LCD_CMD
  1133 ;; This function is called by:
  1134 ;;		_init_LCD
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text8
  1139  000DCA                     __ptext8:
  1140                           	callstack 0
  1141  000DCA                     _CURSOR_ONOFF:
  1142                           	callstack 27
  1143                           
  1144                           ;incstack = 0
  1145                           ;CURSOR_ONOFF@estado stored from wreg
  1146  000DCA  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1147  000DCC                     
  1148                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1149  000DCC  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1150  000DCE  A4D8               	btfss	status,2,c
  1151  000DD0  EFEC  F006         	goto	u21
  1152  000DD4  EFEE  F006         	goto	u20
  1153  000DD8                     u21:
  1154  000DD8  EFF1  F006         	goto	l976
  1155  000DDC                     u20:
  1156  000DDC  0E0E               	movlw	14
  1157  000DDE  ECB1  F006         	call	_ENVIA_LCD_CMD
  1158  000DE2                     l976:
  1159                           
  1160                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1161  000DE2  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1162  000DE4  A4D8               	btfss	status,2,c
  1163  000DE6  EFF7  F006         	goto	u31
  1164  000DEA  EFF9  F006         	goto	u30
  1165  000DEE                     u31:
  1166  000DEE  EFFC  F006         	goto	l146
  1167  000DF2                     u30:
  1168  000DF2  0E0C               	movlw	12
  1169  000DF4  ECB1  F006         	call	_ENVIA_LCD_CMD
  1170  000DF8                     l146:
  1171  000DF8  0012               	return		;funcret
  1172  000DFA                     __end_of_CURSOR_ONOFF:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _CURSOR_HOME *****************
  1176 ;; Defined at:
  1177 ;;		line 30 in file "LCD.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 2
  1198 ;; This function calls:
  1199 ;;		_ENVIA_LCD_CMD
  1200 ;; This function is called by:
  1201 ;;		_init_LCD
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text9
  1206  000EA8                     __ptext9:
  1207                           	callstack 0
  1208  000EA8                     _CURSOR_HOME:
  1209                           	callstack 27
  1210  000EA8                     
  1211                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1212  000EA8  0E02               	movlw	2
  1213  000EAA  ECB1  F006         	call	_ENVIA_LCD_CMD
  1214  000EAE  0012               	return		;funcret
  1215  000EB0                     __end_of_CURSOR_HOME:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _BORRAR_LCD *****************
  1219 ;; Defined at:
  1220 ;;		line 67 in file "LCD.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; Hardware stack levels required when called: 2
  1241 ;; This function calls:
  1242 ;;		_ENVIA_LCD_CMD
  1243 ;; This function is called by:
  1244 ;;		_init_LCD
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text10
  1249  000EB0                     __ptext10:
  1250                           	callstack 0
  1251  000EB0                     _BORRAR_LCD:
  1252                           	callstack 27
  1253  000EB0                     
  1254                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1255  000EB0  0E01               	movlw	1
  1256  000EB2  ECB1  F006         	call	_ENVIA_LCD_CMD
  1257  000EB6  0012               	return		;funcret
  1258  000EB8                     __end_of_BORRAR_LCD:
  1259                           	callstack 0
  1260                           
  1261 ;; *************** function _convierte *****************
  1262 ;; Defined at:
  1263 ;;		line 68 in file "maincode01.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;  numero          1    wreg     unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  numero          1   14[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1280 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 1
  1284 ;; This function calls:
  1285 ;;		___awdiv
  1286 ;;		___awmod
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text11
  1293  000BE2                     __ptext11:
  1294                           	callstack 0
  1295  000BE2                     _convierte:
  1296                           	callstack 29
  1297                           
  1298                           ;incstack = 0
  1299                           ;convierte@numero stored from wreg
  1300  000BE2  6E0F               	movwf	convierte@numero^0,c
  1301  000BE4                     
  1302                           ;maincode01.c: 69:     centena = numero / 100;
  1303  000BE4  C00F  F007         	movff	convierte@numero,___awdiv@dividend
  1304  000BE8  6A08               	clrf	(___awdiv@dividend+1)^0,c
  1305  000BEA  0E00               	movlw	0
  1306  000BEC  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1307  000BEE  0E64               	movlw	100
  1308  000BF0  6E09               	movwf	___awdiv@divisor^0,c
  1309  000BF2  ECA0  F004         	call	___awdiv	;wreg free
  1310  000BF6  5007               	movf	?___awdiv^0,w,c
  1311  000BF8  6E16               	movwf	_centena^0,c
  1312                           
  1313                           ;maincode01.c: 70:     decena = (numero % 100) / 10;
  1314  000BFA  0E00               	movlw	0
  1315  000BFC  6E04               	movwf	(___awmod@divisor+1)^0,c
  1316  000BFE  0E64               	movlw	100
  1317  000C00  6E03               	movwf	___awmod@divisor^0,c
  1318  000C02  C00F  F001         	movff	convierte@numero,___awmod@dividend
  1319  000C06  6A02               	clrf	(___awmod@dividend+1)^0,c
  1320  000C08  EC02  F005         	call	___awmod	;wreg free
  1321  000C0C  C001  F007         	movff	?___awmod,___awdiv@dividend
  1322  000C10  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  1323  000C14  0E00               	movlw	0
  1324  000C16  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1325  000C18  0E0A               	movlw	10
  1326  000C1A  6E09               	movwf	___awdiv@divisor^0,c
  1327  000C1C  ECA0  F004         	call	___awdiv	;wreg free
  1328  000C20  5007               	movf	?___awdiv^0,w,c
  1329  000C22  6E15               	movwf	_decena^0,c
  1330                           
  1331                           ;maincode01.c: 71:     unidad = numero % 10;
  1332  000C24  C00F  F001         	movff	convierte@numero,___awmod@dividend
  1333  000C28  6A02               	clrf	(___awmod@dividend+1)^0,c
  1334  000C2A  0E00               	movlw	0
  1335  000C2C  6E04               	movwf	(___awmod@divisor+1)^0,c
  1336  000C2E  0E0A               	movlw	10
  1337  000C30  6E03               	movwf	___awmod@divisor^0,c
  1338  000C32  EC02  F005         	call	___awmod	;wreg free
  1339  000C36  5001               	movf	?___awmod^0,w,c
  1340  000C38  6E14               	movwf	_unidad^0,c
  1341  000C3A  0012               	return		;funcret
  1342  000C3C                     __end_of_convierte:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function ___awmod *****************
  1346 ;; Defined at:
  1347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  dividend        2    0[COMRAM] int 
  1350 ;;  divisor         2    2[COMRAM] int 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  sign            1    5[COMRAM] unsigned char 
  1353 ;;  counter         1    4[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2    0[COMRAM] int 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         4       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        6 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_convierte
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text12
  1377  000A04                     __ptext12:
  1378                           	callstack 0
  1379  000A04                     ___awmod:
  1380                           	callstack 29
  1381  000A04  0E00               	movlw	0
  1382  000A06  6E06               	movwf	___awmod@sign^0,c
  1383  000A08  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1384  000A0A  EF0B  F005         	goto	u390
  1385  000A0E  EF09  F005         	goto	u391
  1386  000A12                     u391:
  1387  000A12  EF11  F005         	goto	l1296
  1388  000A16                     u390:
  1389  000A16  6C01               	negf	___awmod@dividend^0,c
  1390  000A18  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1391  000A1A  B0D8               	btfsc	status,0,c
  1392  000A1C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1393  000A1E  0E01               	movlw	1
  1394  000A20  6E06               	movwf	___awmod@sign^0,c
  1395  000A22                     l1296:
  1396  000A22  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1397  000A24  EF18  F005         	goto	u400
  1398  000A28  EF16  F005         	goto	u401
  1399  000A2C                     u401:
  1400  000A2C  EF1C  F005         	goto	l1300
  1401  000A30                     u400:
  1402  000A30  6C03               	negf	___awmod@divisor^0,c
  1403  000A32  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1404  000A34  B0D8               	btfsc	status,0,c
  1405  000A36  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1406  000A38                     l1300:
  1407  000A38  5003               	movf	___awmod@divisor^0,w,c
  1408  000A3A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1409  000A3C  B4D8               	btfsc	status,2,c
  1410  000A3E  EF23  F005         	goto	u411
  1411  000A42  EF25  F005         	goto	u410
  1412  000A46                     u411:
  1413  000A46  EF49  F005         	goto	l1316
  1414  000A4A                     u410:
  1415  000A4A  0E01               	movlw	1
  1416  000A4C  6E05               	movwf	___awmod@counter^0,c
  1417  000A4E  EF2D  F005         	goto	l1306
  1418  000A52                     l1304:
  1419  000A52  90D8               	bcf	status,0,c
  1420  000A54  3603               	rlcf	___awmod@divisor^0,f,c
  1421  000A56  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1422  000A58  2A05               	incf	___awmod@counter^0,f,c
  1423  000A5A                     l1306:
  1424  000A5A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1425  000A5C  EF32  F005         	goto	u421
  1426  000A60  EF34  F005         	goto	u420
  1427  000A64                     u421:
  1428  000A64  EF29  F005         	goto	l1304
  1429  000A68                     u420:
  1430  000A68                     l1308:
  1431  000A68  5003               	movf	___awmod@divisor^0,w,c
  1432  000A6A  5C01               	subwf	___awmod@dividend^0,w,c
  1433  000A6C  5004               	movf	(___awmod@divisor+1)^0,w,c
  1434  000A6E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1435  000A70  A0D8               	btfss	status,0,c
  1436  000A72  EF3D  F005         	goto	u431
  1437  000A76  EF3F  F005         	goto	u430
  1438  000A7A                     u431:
  1439  000A7A  EF43  F005         	goto	l1312
  1440  000A7E                     u430:
  1441  000A7E  5003               	movf	___awmod@divisor^0,w,c
  1442  000A80  5E01               	subwf	___awmod@dividend^0,f,c
  1443  000A82  5004               	movf	(___awmod@divisor+1)^0,w,c
  1444  000A84  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1445  000A86                     l1312:
  1446  000A86  90D8               	bcf	status,0,c
  1447  000A88  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1448  000A8A  3203               	rrcf	___awmod@divisor^0,f,c
  1449  000A8C  2E05               	decfsz	___awmod@counter^0,f,c
  1450  000A8E  EF34  F005         	goto	l1308
  1451  000A92                     l1316:
  1452  000A92  5006               	movf	___awmod@sign^0,w,c
  1453  000A94  B4D8               	btfsc	status,2,c
  1454  000A96  EF4F  F005         	goto	u441
  1455  000A9A  EF51  F005         	goto	u440
  1456  000A9E                     u441:
  1457  000A9E  EF55  F005         	goto	l1320
  1458  000AA2                     u440:
  1459  000AA2  6C01               	negf	___awmod@dividend^0,c
  1460  000AA4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1461  000AA6  B0D8               	btfsc	status,0,c
  1462  000AA8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1463  000AAA                     l1320:
  1464  000AAA  C001  F001         	movff	___awmod@dividend,?___awmod
  1465  000AAE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1466  000AB2  0012               	return		;funcret
  1467  000AB4                     __end_of___awmod:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function ___awdiv *****************
  1471 ;; Defined at:
  1472 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  dividend        2    6[COMRAM] int 
  1475 ;;  divisor         2    8[COMRAM] int 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  quotient        2   12[COMRAM] int 
  1478 ;;  sign            1   11[COMRAM] unsigned char 
  1479 ;;  counter         1   10[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2    6[COMRAM] int 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         4       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        8 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_convierte
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text13
  1503  000940                     __ptext13:
  1504                           	callstack 0
  1505  000940                     ___awdiv:
  1506                           	callstack 29
  1507  000940  0E00               	movlw	0
  1508  000942  6E0C               	movwf	___awdiv@sign^0,c
  1509  000944  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1510  000946  EFA9  F004         	goto	u330
  1511  00094A  EFA7  F004         	goto	u331
  1512  00094E                     u331:
  1513  00094E  EFAF  F004         	goto	l1252
  1514  000952                     u330:
  1515  000952  6C09               	negf	___awdiv@divisor^0,c
  1516  000954  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1517  000956  B0D8               	btfsc	status,0,c
  1518  000958  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1519  00095A  0E01               	movlw	1
  1520  00095C  6E0C               	movwf	___awdiv@sign^0,c
  1521  00095E                     l1252:
  1522  00095E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1523  000960  EFB6  F004         	goto	u340
  1524  000964  EFB4  F004         	goto	u341
  1525  000968                     u341:
  1526  000968  EFBC  F004         	goto	l1258
  1527  00096C                     u340:
  1528  00096C  6C07               	negf	___awdiv@dividend^0,c
  1529  00096E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1530  000970  B0D8               	btfsc	status,0,c
  1531  000972  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1532  000974  0E01               	movlw	1
  1533  000976  1A0C               	xorwf	___awdiv@sign^0,f,c
  1534  000978                     l1258:
  1535  000978  0E00               	movlw	0
  1536  00097A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1537  00097C  0E00               	movlw	0
  1538  00097E  6E0D               	movwf	___awdiv@quotient^0,c
  1539  000980  5009               	movf	___awdiv@divisor^0,w,c
  1540  000982  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1541  000984  B4D8               	btfsc	status,2,c
  1542  000986  EFC7  F004         	goto	u351
  1543  00098A  EFC9  F004         	goto	u350
  1544  00098E                     u351:
  1545  00098E  EFF1  F004         	goto	l1280
  1546  000992                     u350:
  1547  000992  0E01               	movlw	1
  1548  000994  6E0B               	movwf	___awdiv@counter^0,c
  1549  000996  EFD1  F004         	goto	l1266
  1550  00099A                     l1264:
  1551  00099A  90D8               	bcf	status,0,c
  1552  00099C  3609               	rlcf	___awdiv@divisor^0,f,c
  1553  00099E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1554  0009A0  2A0B               	incf	___awdiv@counter^0,f,c
  1555  0009A2                     l1266:
  1556  0009A2  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1557  0009A4  EFD6  F004         	goto	u361
  1558  0009A8  EFD8  F004         	goto	u360
  1559  0009AC                     u361:
  1560  0009AC  EFCD  F004         	goto	l1264
  1561  0009B0                     u360:
  1562  0009B0                     l1268:
  1563  0009B0  90D8               	bcf	status,0,c
  1564  0009B2  360D               	rlcf	___awdiv@quotient^0,f,c
  1565  0009B4  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1566  0009B6  5009               	movf	___awdiv@divisor^0,w,c
  1567  0009B8  5C07               	subwf	___awdiv@dividend^0,w,c
  1568  0009BA  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1569  0009BC  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1570  0009BE  A0D8               	btfss	status,0,c
  1571  0009C0  EFE4  F004         	goto	u371
  1572  0009C4  EFE6  F004         	goto	u370
  1573  0009C8                     u371:
  1574  0009C8  EFEB  F004         	goto	l1276
  1575  0009CC                     u370:
  1576  0009CC  5009               	movf	___awdiv@divisor^0,w,c
  1577  0009CE  5E07               	subwf	___awdiv@dividend^0,f,c
  1578  0009D0  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1579  0009D2  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1580  0009D4  800D               	bsf	___awdiv@quotient^0,0,c
  1581  0009D6                     l1276:
  1582  0009D6  90D8               	bcf	status,0,c
  1583  0009D8  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1584  0009DA  3209               	rrcf	___awdiv@divisor^0,f,c
  1585  0009DC  2E0B               	decfsz	___awdiv@counter^0,f,c
  1586  0009DE  EFD8  F004         	goto	l1268
  1587  0009E2                     l1280:
  1588  0009E2  500C               	movf	___awdiv@sign^0,w,c
  1589  0009E4  B4D8               	btfsc	status,2,c
  1590  0009E6  EFF7  F004         	goto	u381
  1591  0009EA  EFF9  F004         	goto	u380
  1592  0009EE                     u381:
  1593  0009EE  EFFD  F004         	goto	l1284
  1594  0009F2                     u380:
  1595  0009F2  6C0D               	negf	___awdiv@quotient^0,c
  1596  0009F4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1597  0009F6  B0D8               	btfsc	status,0,c
  1598  0009F8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1599  0009FA                     l1284:
  1600  0009FA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1601  0009FE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1602  000A02  0012               	return		;funcret
  1603  000A04                     __end_of___awdiv:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _configuro *****************
  1607 ;; Defined at:
  1608 ;;		line 15 in file "maincode01.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      void 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1622 ;;      Params:         0       0       0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text14
  1636  000E8A                     __ptext14:
  1637                           	callstack 0
  1638  000E8A                     _configuro:
  1639                           	callstack 30
  1640  000E8A                     
  1641                           ;maincode01.c: 16:     OSCCON = 0x72;
  1642  000E8A  0E72               	movlw	114
  1643  000E8C  6ED3               	movwf	211,c	;volatile
  1644                           
  1645                           ;maincode01.c: 17:     ADCON1 = 0x0F;
  1646  000E8E  0E0F               	movlw	15
  1647  000E90  6EC1               	movwf	193,c	;volatile
  1648  000E92                     
  1649                           ;maincode01.c: 18:     TRISEbits.RE1 = 0;
  1650  000E92  9296               	bcf	150,1,c	;volatile
  1651  000E94                     
  1652                           ;maincode01.c: 19:     TRISCbits.RC1 = 0;
  1653  000E94  9294               	bcf	148,1,c	;volatile
  1654  000E96                     
  1655                           ;maincode01.c: 20:     TRISCbits.RC2 = 0;
  1656  000E96  9494               	bcf	148,2,c	;volatile
  1657  000E98                     
  1658                           ;maincode01.c: 21:     LATCbits.LC1 = 1;
  1659  000E98  828B               	bsf	139,1,c	;volatile
  1660  000E9A                     
  1661                           ;maincode01.c: 22:     TRISBbits.RB4 = 0;
  1662  000E9A  9893               	bcf	147,4,c	;volatile
  1663  000E9C                     
  1664                           ;maincode01.c: 23:     LATBbits.LB4 = 1;
  1665  000E9C  888A               	bsf	138,4,c	;volatile
  1666  000E9E  0012               	return		;funcret
  1667  000EA0                     __end_of_configuro:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _POS_CURSOR *****************
  1671 ;; Defined at:
  1672 ;;		line 6 in file "LCD.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  fila            1    wreg     unsigned char 
  1675 ;;  columna         1    3[COMRAM] unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  fila            1    4[COMRAM] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         1       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 2
  1694 ;; This function calls:
  1695 ;;		_ENVIA_LCD_CMD
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text15
  1702  000CF0                     __ptext15:
  1703                           	callstack 0
  1704  000CF0                     _POS_CURSOR:
  1705                           	callstack 28
  1706                           
  1707                           ;incstack = 0
  1708                           ;POS_CURSOR@fila stored from wreg
  1709  000CF0  6E05               	movwf	POS_CURSOR@fila^0,c
  1710  000CF2                     
  1711                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1712  000CF2  0405               	decf	POS_CURSOR@fila^0,w,c
  1713  000CF4  A4D8               	btfss	status,2,c
  1714  000CF6  EF7F  F006         	goto	u451
  1715  000CFA  EF81  F006         	goto	u450
  1716  000CFE                     u451:
  1717  000CFE  EF87  F006         	goto	l1344
  1718  000D02                     u450:
  1719  000D02                     
  1720                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1721  000D02  5004               	movf	POS_CURSOR@columna^0,w,c
  1722  000D04  0F80               	addlw	128
  1723  000D06  ECB1  F006         	call	_ENVIA_LCD_CMD
  1724                           
  1725                           ;LCD.c: 11:  }
  1726  000D0A  EF94  F006         	goto	l128
  1727  000D0E                     l1344:
  1728  000D0E  0E02               	movlw	2
  1729  000D10  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1730  000D12  A4D8               	btfss	status,2,c
  1731  000D14  EF8E  F006         	goto	u461
  1732  000D18  EF90  F006         	goto	u460
  1733  000D1C                     u461:
  1734  000D1C  EF94  F006         	goto	l128
  1735  000D20                     u460:
  1736  000D20                     
  1737                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1738  000D20  5004               	movf	POS_CURSOR@columna^0,w,c
  1739  000D22  0FC0               	addlw	192
  1740  000D24  ECB1  F006         	call	_ENVIA_LCD_CMD
  1741  000D28                     l128:
  1742  000D28  0012               	return		;funcret
  1743  000D2A                     __end_of_POS_CURSOR:
  1744                           	callstack 0
  1745                           
  1746 ;; *************** function _ENVIA_LCD_CMD *****************
  1747 ;; Defined at:
  1748 ;;		line 104 in file "LCD.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  dato            1    wreg     unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  dato            1    1[COMRAM] unsigned char 
  1753 ;;  aux             1    2[COMRAM] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0
  1764 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1766 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1767 ;;Total ram usage:        2 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 1
  1770 ;; This function calls:
  1771 ;;		_ENVIA_NIBBLE
  1772 ;;		_LEER_LCD
  1773 ;; This function is called by:
  1774 ;;		_POS_CURSOR
  1775 ;;		_CURSOR_HOME
  1776 ;;		_CURSOR_ONOFF
  1777 ;;		_BORRAR_LCD
  1778 ;;		_LCD_CONFIG
  1779 ;;		_GENERACARACTER
  1780 ;;		_BLINK_CURSOR
  1781 ;;		_DISPLAY_ONOFF
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text16
  1786  000D62                     __ptext16:
  1787                           	callstack 0
  1788  000D62                     _ENVIA_LCD_CMD:
  1789                           	callstack 27
  1790                           
  1791                           ;incstack = 0
  1792                           ;ENVIA_LCD_CMD@dato stored from wreg
  1793  000D62  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1794  000D64                     
  1795                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1796  000D64  908C               	bcf	140,0,c	;volatile
  1797  000D66                     
  1798                           ;LCD.c: 108:  LEER_LCD();
  1799  000D66  EC5A  F005         	call	_LEER_LCD	;wreg free
  1800  000D6A                     
  1801                           ;LCD.c: 109:  TRISD = 0b00000000;
  1802  000D6A  0E00               	movlw	0
  1803  000D6C  6E95               	movwf	149,c	;volatile
  1804  000D6E                     
  1805                           ;LCD.c: 111:         _delay(1200);
  1806  000D6E  0EF0               	movlw	240
  1807  000D70                     u577:
  1808  000D70  D000               	nop2	
  1809  000D72  2EE8               	decfsz	wreg,f,c
  1810  000D74  D7FD               	bra	u577
  1811  000D76                     
  1812                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1813  000D76  928C               	bcf	140,1,c	;volatile
  1814  000D78                     
  1815                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1816  000D78  948C               	bcf	140,2,c	;volatile
  1817  000D7A                     
  1818                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1819  000D7A  908C               	bcf	140,0,c	;volatile
  1820  000D7C                     
  1821                           ;LCD.c: 115:  aux = dato & 0xF0;
  1822  000D7C  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1823  000D7E  0BF0               	andlw	240
  1824  000D80  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1825  000D82                     
  1826                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1827  000D82  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1828  000D84  EC37  F007         	call	_ENVIA_NIBBLE
  1829  000D88                     
  1830                           ;LCD.c: 117:  aux = dato<<4;
  1831  000D88  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1832  000D8A  0BF0               	andlw	240
  1833  000D8C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1834  000D8E                     
  1835                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1836  000D8E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1837  000D90  EC37  F007         	call	_ENVIA_NIBBLE
  1838  000D94  0012               	return		;funcret
  1839  000D96                     __end_of_ENVIA_LCD_CMD:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _ESCRIBE_MENSAJE *****************
  1843 ;; Defined at:
  1844 ;;		line 41 in file "LCD.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1847 ;;		 -> STR_6(4), STR_5(4), STR_4(6), STR_3(3), 
  1848 ;;		 -> STR_2(6), STR_1(11), 
  1849 ;;  tam             1    5[COMRAM] unsigned char 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  i               1    8[COMRAM] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1861 ;;      Params:         3       0       0       0       0       0       0       0       0
  1862 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1863 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1864 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1865 ;;Total ram usage:        6 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 2
  1868 ;; This function calls:
  1869 ;;		_ENVIA_CHAR
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text17
  1876  000C3C                     __ptext17:
  1877                           	callstack 0
  1878  000C3C                     _ESCRIBE_MENSAJE:
  1879                           	callstack 28
  1880  000C3C                     
  1881                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1882  000C3C  0E00               	movlw	0
  1883  000C3E  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1884                           
  1885                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1886  000C40  0E00               	movlw	0
  1887  000C42  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1888  000C44  EF33  F006         	goto	l1354
  1889  000C48                     l1350:
  1890                           
  1891                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1892  000C48  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1893  000C4A  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1894  000C4C  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1895  000C4E  0E00               	movlw	0
  1896  000C50  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1897  000C52  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1898  000C54  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1899  000C58  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1900  000C5C                     	if	0	;tblptru may be non-zero
  1901  000C5C                     	endif
  1902  000C5C                     	if	0	;tblptru may be non-zero
  1903  000C5C                     	endif
  1904  000C5C  0008               	tblrd		*
  1905  000C5E  50F5               	movf	tablat,w,c
  1906  000C60  ECCB  F006         	call	_ENVIA_CHAR
  1907  000C64                     
  1908                           ;LCD.c: 47:  }
  1909  000C64  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1910  000C66                     l1354:
  1911  000C66  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1912  000C68  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1913  000C6A  A0D8               	btfss	status,0,c
  1914  000C6C  EF3A  F006         	goto	u471
  1915  000C70  EF3C  F006         	goto	u470
  1916  000C74                     u471:
  1917  000C74  EF24  F006         	goto	l1350
  1918  000C78                     u470:
  1919  000C78  0012               	return		;funcret
  1920  000C7A                     __end_of_ESCRIBE_MENSAJE:
  1921                           	callstack 0
  1922                           
  1923 ;; *************** function _ENVIA_CHAR *****************
  1924 ;; Defined at:
  1925 ;;		line 50 in file "LCD.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  dato            1    wreg     unsigned char 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;  dato            1    1[COMRAM] unsigned char 
  1930 ;;  aux             1    2[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         0       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1944 ;;Total ram usage:        2 bytes
  1945 ;; Hardware stack levels used: 1
  1946 ;; Hardware stack levels required when called: 1
  1947 ;; This function calls:
  1948 ;;		_ENVIA_NIBBLE
  1949 ;;		_LEER_LCD
  1950 ;; This function is called by:
  1951 ;;		_main
  1952 ;;		_ESCRIBE_MENSAJE
  1953 ;;		_GENERACARACTER
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text18
  1958  000D96                     __ptext18:
  1959                           	callstack 0
  1960  000D96                     _ENVIA_CHAR:
  1961                           	callstack 27
  1962                           
  1963                           ;incstack = 0
  1964                           ;ENVIA_CHAR@dato stored from wreg
  1965  000D96  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1966  000D98                     
  1967                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1968  000D98  808C               	bsf	140,0,c	;volatile
  1969  000D9A                     
  1970                           ;LCD.c: 54:  LEER_LCD();
  1971  000D9A  EC5A  F005         	call	_LEER_LCD	;wreg free
  1972  000D9E                     
  1973                           ;LCD.c: 55:  TRISD = 0x00;
  1974  000D9E  0E00               	movlw	0
  1975  000DA0  6E95               	movwf	149,c	;volatile
  1976  000DA2                     
  1977                           ;LCD.c: 56:         _delay(1200);
  1978  000DA2  0EF0               	movlw	240
  1979  000DA4                     u587:
  1980  000DA4  D000               	nop2	
  1981  000DA6  2EE8               	decfsz	wreg,f,c
  1982  000DA8  D7FD               	bra	u587
  1983  000DAA                     
  1984                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1985  000DAA  928C               	bcf	140,1,c	;volatile
  1986  000DAC                     
  1987                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1988  000DAC  948C               	bcf	140,2,c	;volatile
  1989  000DAE                     
  1990                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1991  000DAE  808C               	bsf	140,0,c	;volatile
  1992  000DB0                     
  1993                           ;LCD.c: 61:  aux = dato & 0xF0;
  1994  000DB0  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1995  000DB2  0BF0               	andlw	240
  1996  000DB4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1997  000DB6                     
  1998                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1999  000DB6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2000  000DB8  EC37  F007         	call	_ENVIA_NIBBLE
  2001  000DBC                     
  2002                           ;LCD.c: 63:  aux = dato << 4;
  2003  000DBC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2004  000DBE  0BF0               	andlw	240
  2005  000DC0  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2006  000DC2                     
  2007                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2008  000DC2  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2009  000DC4  EC37  F007         	call	_ENVIA_NIBBLE
  2010  000DC8  0012               	return		;funcret
  2011  000DCA                     __end_of_ENVIA_CHAR:
  2012                           	callstack 0
  2013                           
  2014 ;; *************** function _LEER_LCD *****************
  2015 ;; Defined at:
  2016 ;;		line 121 in file "LCD.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  aux             1    0[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2030 ;;      Params:         0       0       0       0       0       0       0       0       0
  2031 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2033 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2034 ;;Total ram usage:        1 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_ENVIA_CHAR
  2040 ;;		_ENVIA_LCD_CMD
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text19
  2045  000AB4                     __ptext19:
  2046                           	callstack 0
  2047  000AB4                     _LEER_LCD:
  2048                           	callstack 27
  2049  000AB4                     
  2050                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2051  000AB4  0EF8               	movlw	248
  2052  000AB6  6E95               	movwf	149,c	;volatile
  2053  000AB8                     
  2054                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2055  000AB8  908C               	bcf	140,0,c	;volatile
  2056  000ABA                     
  2057                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2058  000ABA  828C               	bsf	140,1,c	;volatile
  2059  000ABC                     
  2060                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2061  000ABC  848C               	bsf	140,2,c	;volatile
  2062  000ABE                     
  2063                           ;LCD.c: 128:         _delay(1200);
  2064  000ABE  0EF0               	movlw	240
  2065  000AC0                     u597:
  2066  000AC0  D000               	nop2	
  2067  000AC2  2EE8               	decfsz	wreg,f,c
  2068  000AC4  D7FD               	bra	u597
  2069  000AC6                     
  2070                           ;LCD.c: 130:  aux = PORTD;
  2071  000AC6  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2072  000ACA                     
  2073                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2074  000ACA  948C               	bcf	140,2,c	;volatile
  2075  000ACC                     
  2076                           ;LCD.c: 132:         _delay(1200);
  2077  000ACC  0EF0               	movlw	240
  2078  000ACE                     u607:
  2079  000ACE  D000               	nop2	
  2080  000AD0  2EE8               	decfsz	wreg,f,c
  2081  000AD2  D7FD               	bra	u607
  2082  000AD4                     
  2083                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2084  000AD4  848C               	bsf	140,2,c	;volatile
  2085  000AD6                     
  2086                           ;LCD.c: 135:         _delay(1200);
  2087  000AD6  0EF0               	movlw	240
  2088  000AD8                     u617:
  2089  000AD8  D000               	nop2	
  2090  000ADA  2EE8               	decfsz	wreg,f,c
  2091  000ADC  D7FD               	bra	u617
  2092  000ADE                     
  2093                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2094  000ADE  948C               	bcf	140,2,c	;volatile
  2095  000AE0                     l876:
  2096                           
  2097                           ;LCD.c: 138:  aux = aux & 0x80;
  2098  000AE0  5001               	movf	LEER_LCD@aux^0,w,c
  2099  000AE2  0B80               	andlw	128
  2100  000AE4  6E01               	movwf	LEER_LCD@aux^0,c
  2101                           
  2102                           ;LCD.c: 139:  while(aux == 0x80)
  2103  000AE6  EF89  F005         	goto	l890
  2104  000AEA                     l171:
  2105                           
  2106                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2107  000AEA  848C               	bsf	140,2,c	;volatile
  2108  000AEC                     
  2109                           ;LCD.c: 142:             _delay(1200);
  2110  000AEC  0EF0               	movlw	240
  2111  000AEE                     u627:
  2112  000AEE  D000               	nop2	
  2113  000AF0  2EE8               	decfsz	wreg,f,c
  2114  000AF2  D7FD               	bra	u627
  2115  000AF4                     
  2116                           ;LCD.c: 143:             aux = PORTD;
  2117  000AF4  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2118  000AF8                     
  2119                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2120  000AF8  948C               	bcf	140,2,c	;volatile
  2121                           
  2122                           ;LCD.c: 145:             _delay(1200);
  2123  000AFA  0EF0               	movlw	240
  2124  000AFC                     u637:
  2125  000AFC  D000               	nop2	
  2126  000AFE  2EE8               	decfsz	wreg,f,c
  2127  000B00  D7FD               	bra	u637
  2128  000B02                     
  2129                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2130  000B02  848C               	bsf	140,2,c	;volatile
  2131                           
  2132                           ;LCD.c: 147:             _delay(1200);
  2133  000B04  0EF0               	movlw	240
  2134  000B06                     u647:
  2135  000B06  D000               	nop2	
  2136  000B08  2EE8               	decfsz	wreg,f,c
  2137  000B0A  D7FD               	bra	u647
  2138  000B0C                     
  2139                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2140  000B0C  948C               	bcf	140,2,c	;volatile
  2141  000B0E  EF70  F005         	goto	l876
  2142  000B12                     l890:
  2143                           
  2144                           ;LCD.c: 139:  while(aux == 0x80)
  2145  000B12  0E80               	movlw	128
  2146  000B14  1801               	xorwf	LEER_LCD@aux^0,w,c
  2147  000B16  B4D8               	btfsc	status,2,c
  2148  000B18  EF90  F005         	goto	u11
  2149  000B1C  EF92  F005         	goto	u10
  2150  000B20                     u11:
  2151  000B20  EF75  F005         	goto	l171
  2152  000B24                     u10:
  2153  000B24  0012               	return		;funcret
  2154  000B26                     __end_of_LEER_LCD:
  2155                           	callstack 0
  2156                           
  2157 ;; *************** function _ENVIA_NIBBLE *****************
  2158 ;; Defined at:
  2159 ;;		line 93 in file "LCD.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  dato            1    wreg     unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  dato            1    0[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      void 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        1 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_ENVIA_CHAR
  2183 ;;		_LCD_CONFIG
  2184 ;;		_ENVIA_LCD_CMD
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text20
  2189  000E6E                     __ptext20:
  2190                           	callstack 0
  2191  000E6E                     _ENVIA_NIBBLE:
  2192                           	callstack 28
  2193                           
  2194                           ;incstack = 0
  2195                           ;ENVIA_NIBBLE@dato stored from wreg
  2196  000E6E  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2197  000E70                     
  2198                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2199  000E70  0E0F               	movlw	15
  2200  000E72  168C               	andwf	140,f,c	;volatile
  2201                           
  2202                           ;LCD.c: 96:  dato &= 0xF0;
  2203  000E74  0EF0               	movlw	240
  2204  000E76  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2205                           
  2206                           ;LCD.c: 97:  LATD|= dato;
  2207  000E78  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2208  000E7A  128C               	iorwf	140,f,c	;volatile
  2209  000E7C                     
  2210                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2211  000E7C  848C               	bsf	140,2,c	;volatile
  2212  000E7E                     
  2213                           ;LCD.c: 100:         _delay(1200);
  2214  000E7E  0EF0               	movlw	240
  2215  000E80                     u657:
  2216  000E80  D000               	nop2	
  2217  000E82  2EE8               	decfsz	wreg,f,c
  2218  000E84  D7FD               	bra	u657
  2219  000E86                     
  2220                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2221  000E86  948C               	bcf	140,2,c	;volatile
  2222  000E88  0012               	return		;funcret
  2223  000E8A                     __end_of_ENVIA_NIBBLE:
  2224                           	callstack 0
  2225                           
  2226                           	psect	rparam
  2227  0000                     
  2228                           	psect	idloc
  2229                           
  2230                           ;Config register IDLOC0 @ 0x200000
  2231                           ;	unspecified, using default values
  2232  200000                     	org	2097152
  2233  200000  FF                 	db	255
  2234                           
  2235                           ;Config register IDLOC1 @ 0x200001
  2236                           ;	unspecified, using default values
  2237  200001                     	org	2097153
  2238  200001  FF                 	db	255
  2239                           
  2240                           ;Config register IDLOC2 @ 0x200002
  2241                           ;	unspecified, using default values
  2242  200002                     	org	2097154
  2243  200002  FF                 	db	255
  2244                           
  2245                           ;Config register IDLOC3 @ 0x200003
  2246                           ;	unspecified, using default values
  2247  200003                     	org	2097155
  2248  200003  FF                 	db	255
  2249                           
  2250                           ;Config register IDLOC4 @ 0x200004
  2251                           ;	unspecified, using default values
  2252  200004                     	org	2097156
  2253  200004  FF                 	db	255
  2254                           
  2255                           ;Config register IDLOC5 @ 0x200005
  2256                           ;	unspecified, using default values
  2257  200005                     	org	2097157
  2258  200005  FF                 	db	255
  2259                           
  2260                           ;Config register IDLOC6 @ 0x200006
  2261                           ;	unspecified, using default values
  2262  200006                     	org	2097158
  2263  200006  FF                 	db	255
  2264                           
  2265                           ;Config register IDLOC7 @ 0x200007
  2266                           ;	unspecified, using default values
  2267  200007                     	org	2097159
  2268  200007  FF                 	db	255
  2269                           
  2270                           	psect	config
  2271                           
  2272                           ;Config register CONFIG1L @ 0x300000
  2273                           ;	PLL Prescaler Selection bits
  2274                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2275                           ;	System Clock Postscaler Selection bits
  2276                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2277                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2278                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2279  300000                     	org	3145728
  2280  300000  00                 	db	0
  2281                           
  2282                           ;Config register CONFIG1H @ 0x300001
  2283                           ;	Oscillator Selection bits
  2284                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  2285                           ;	Fail-Safe Clock Monitor Enable bit
  2286                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2287                           ;	Internal/External Oscillator Switchover bit
  2288                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2289  300001                     	org	3145729
  2290  300001  08                 	db	8
  2291                           
  2292                           ;Config register CONFIG2L @ 0x300002
  2293                           ;	Power-up Timer Enable bit
  2294                           ;	PWRT = ON, PWRT enabled
  2295                           ;	Brown-out Reset Enable bits
  2296                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2297                           ;	Brown-out Reset Voltage bits
  2298                           ;	BORV = 3, Minimum setting 2.05V
  2299                           ;	USB Voltage Regulator Enable bit
  2300                           ;	VREGEN = OFF, USB voltage regulator disabled
  2301  300002                     	org	3145730
  2302  300002  18                 	db	24
  2303                           
  2304                           ;Config register CONFIG2H @ 0x300003
  2305                           ;	Watchdog Timer Enable bit
  2306                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2307                           ;	Watchdog Timer Postscale Select bits
  2308                           ;	WDTPS = 32768, 1:32768
  2309  300003                     	org	3145731
  2310  300003  1E                 	db	30
  2311                           
  2312                           ; Padding undefined space
  2313  300004                     	org	3145732
  2314  300004  FF                 	db	255
  2315                           
  2316                           ;Config register CONFIG3H @ 0x300005
  2317                           ;	CCP2 MUX bit
  2318                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2319                           ;	PORTB A/D Enable bit
  2320                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2321                           ;	Low-Power Timer 1 Oscillator Enable bit
  2322                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2323                           ;	MCLR Pin Enable bit
  2324                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2325  300005                     	org	3145733
  2326  300005  81                 	db	129
  2327                           
  2328                           ;Config register CONFIG4L @ 0x300006
  2329                           ;	Stack Full/Underflow Reset Enable bit
  2330                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2331                           ;	Single-Supply ICSP Enable bit
  2332                           ;	LVP = OFF, Single-Supply ICSP disabled
  2333                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2334                           ;	ICPRT = OFF, ICPORT disabled
  2335                           ;	Extended Instruction Set Enable bit
  2336                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2337                           ;	Background Debugger Enable bit
  2338                           ;	DEBUG = 0x1, unprogrammed default
  2339  300006                     	org	3145734
  2340  300006  81                 	db	129
  2341                           
  2342                           ; Padding undefined space
  2343  300007                     	org	3145735
  2344  300007  FF                 	db	255
  2345                           
  2346                           ;Config register CONFIG5L @ 0x300008
  2347                           ;	Code Protection bit
  2348                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2349                           ;	Code Protection bit
  2350                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2351                           ;	Code Protection bit
  2352                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2353                           ;	Code Protection bit
  2354                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2355  300008                     	org	3145736
  2356  300008  0F                 	db	15
  2357                           
  2358                           ;Config register CONFIG5H @ 0x300009
  2359                           ;	Boot Block Code Protection bit
  2360                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2361                           ;	Data EEPROM Code Protection bit
  2362                           ;	CPD = OFF, Data EEPROM is not code-protected
  2363  300009                     	org	3145737
  2364  300009  C0                 	db	192
  2365                           
  2366                           ;Config register CONFIG6L @ 0x30000A
  2367                           ;	Write Protection bit
  2368                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2369                           ;	Write Protection bit
  2370                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2371                           ;	Write Protection bit
  2372                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2373                           ;	Write Protection bit
  2374                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2375  30000A                     	org	3145738
  2376  30000A  0F                 	db	15
  2377                           
  2378                           ;Config register CONFIG6H @ 0x30000B
  2379                           ;	Configuration Register Write Protection bit
  2380                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2381                           ;	Boot Block Write Protection bit
  2382                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2383                           ;	Data EEPROM Write Protection bit
  2384                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2385  30000B                     	org	3145739
  2386  30000B  E0                 	db	224
  2387                           
  2388                           ;Config register CONFIG7L @ 0x30000C
  2389                           ;	Table Read Protection bit
  2390                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2391                           ;	Table Read Protection bit
  2392                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2393                           ;	Table Read Protection bit
  2394                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2395                           ;	Table Read Protection bit
  2396                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2397  30000C                     	org	3145740
  2398  30000C  0F                 	db	15
  2399                           
  2400                           ;Config register CONFIG7H @ 0x30000D
  2401                           ;	Boot Block Table Read Protection bit
  2402                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2403  30000D                     	org	3145741
  2404  30000D  40                 	db	64
  2405                           tosu	equ	0xFFF
  2406                           tosh	equ	0xFFE
  2407                           tosl	equ	0xFFD
  2408                           stkptr	equ	0xFFC
  2409                           pclatu	equ	0xFFB
  2410                           pclath	equ	0xFFA
  2411                           pcl	equ	0xFF9
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           indf0	equ	0xFEF
  2419                           postinc0	equ	0xFEE
  2420                           postdec0	equ	0xFED
  2421                           preinc0	equ	0xFEC
  2422                           plusw0	equ	0xFEB
  2423                           fsr0h	equ	0xFEA
  2424                           fsr0l	equ	0xFE9
  2425                           wreg	equ	0xFE8
  2426                           indf1	equ	0xFE7
  2427                           postinc1	equ	0xFE6
  2428                           postdec1	equ	0xFE5
  2429                           preinc1	equ	0xFE4
  2430                           plusw1	equ	0xFE3
  2431                           fsr1h	equ	0xFE2
  2432                           fsr1l	equ	0xFE1
  2433                           bsr	equ	0xFE0
  2434                           indf2	equ	0xFDF
  2435                           postinc2	equ	0xFDE
  2436                           postdec2	equ	0xFDD
  2437                           preinc2	equ	0xFDC
  2438                           plusw2	equ	0xFDB
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        8
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> u_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_6(CODE[4]), STR_5(CODE[4]), STR_4(CODE[6]), STR_3(CODE[3]), 
		 -> STR_2(CODE[6]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lectura_DHT11->_DHT11_ReadData
    _init_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3977
                                             15 COMRAM     4     4      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _init_LCD
                      _lectura_DHT11
 ---------------------------------------------------------------------------------
 (1) _lectura_DHT11                                        0     0      0      75
                _DHT11_CheckResponse
                     _DHT11_ReadData
                        _DHT11_Start
 ---------------------------------------------------------------------------------
 (2) _DHT11_Start                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadData                                       2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _DHT11_CheckResponse                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_LCD                                             1     1      0    1029
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     504
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3    1123
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _init_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _lectura_DHT11
     _DHT11_CheckResponse
     _DHT11_ReadData
     _DHT11_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      23       1       36.8%
BITBIGSFRh          2C      0       0      20        0.0%
BITBIGSFRllh        2A      0       0      22        0.0%
BITBIGSFRllllll     21      0       0      26        0.0%
BITBIGSFRlh         11      0       0      21        0.0%
BITBIGSFRlllllh      6      0       0      24        0.0%
BITBIGSFRllllh       6      0       0      23        0.0%
BITBIGSFRlllllh      1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      27        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 16 20:44:32 2022

                         l60 0D60                           l70 0BBE                           l57 0E9E  
                         l73 0BE0                           l65 0B8E                           l82 0E08  
                         l91 0C3A                           l76 0E6C                           l85 0E16  
                         l94 0E4C                           l79 0DFA                           l88 0E24  
                         u10 0B24                           u11 0B20                           u20 0DDC  
                         u21 0DD8                           u30 0DF2                           u31 0DEE  
                         u50 0B9C                           u51 0B98                           u60 0BB0  
                         u61 0BAC                           u70 0BCC                           u71 0BC8  
                         u80 0BDE                           u81 0BDA                           u90 0E08  
                         u91 0E04                 ___awdiv@sign 000C                ENVIA_CHAR@aux 0003  
                        l141 0EAE                          l152 0C78                          l128 0D28  
                        l161 0B84                          l146 0DF8                          l171 0AEA  
                        l155 0DC8                          l164 0E88                          l412 0A02  
                        l173 0B24                          l158 0EB6                          l167 0D94  
                        l425 0AB2                          l178 0CB4                          l900 0D98  
                        l910 0DAC                          l902 0D9A                          l920 0DC2  
                        l912 0DAE                          l904 0D9E                          l914 0DB0  
                        l906 0DA2                          l930 0D76                          l922 0D64  
                        l860 0ABC                          l916 0DB6                          l908 0DAA  
                        l940 0D88                          l932 0D78                          l924 0D66  
                        l870 0AD4                          l862 0ABE                          l854 0AB4  
                        l918 0DBC                          l942 0D8E                          l934 0D7A  
                        l926 0D6A                          l950 0B3E                          l880 0AF4  
                        l872 0AD6                          l864 0AC6                          l856 0AB8  
                        l936 0D7C                          l928 0D6E                          l960 0B6C  
                        l952 0B52                          l944 0B26                          l882 0AF8  
                        l890 0B12                          l874 0ADE                          l866 0ACA  
                        l858 0ABA                          l938 0D82                          l970 0EA8  
                        l962 0B72                          l954 0B5A                          l946 0B2A  
                        l892 0E70                          l884 0B02                          l876 0AE0  
                        l868 0ACC                          l972 0DCC                          l964 0B78  
                        l956 0B60                          l948 0B30                          l894 0E7C  
                        l886 0B0C                          l878 0AEC                          l974 0DDC  
                        l966 0B7E                          l958 0B66                          l896 0E7E  
                        l968 0EB0                          l976 0DE2                          l898 0E86  
                        l978 0DF2                          l996 0B86                          u100 0E16  
                        u101 0E12                          u110 0E24                          u111 0E20  
                        u400 0A30                          u320 0CAE                          u401 0A2C  
                        u321 0CAA                          u330 0952                          u410 0A4A  
                        u331 094E                          u411 0A46                          u340 096C  
                        u420 0A68                          u341 0968                          u421 0A64  
                        u350 0992                          u430 0A7E                          u351 098E  
                        u431 0A7A                          u360 09B0                          u440 0AA2  
                        u361 09AC                          u441 0A9E                          u450 0D02  
                        u370 09CC                          u451 0CFE                          u371 09C8  
                        u507 0E58                          u460 0D20                          u380 09F2  
                        u461 0D1C                          u381 09EE                          u517 0E64  
                        u470 0C78                          u390 0A16                          u607 0ACE  
                        u471 0C74                          u391 0A12                          u527 0B9E  
                        u480 08FE                          u617 0AD8                          u537 0D38  
                        u481 08FA                          u627 0AEE                          u547 0B36  
                        u637 0AFC                          u557 0B44                          u647 0B06  
                        u567 0B54                          u657 0E80                          u577 0D70  
                        u497 092C                          u587 0DA4                          u597 0AC0  
               ___awmod@sign 0006                  LEER_LCD@aux 0001                          wreg 000FE8  
               ?_CURSOR_HOME 0001               ??_ENVIA_NIBBLE 0001               ENVIA_CHAR@dato 0002  
                       l1010 0BCC                         l1002 0B9C                         l1012 0BCE  
                       l1004 0BA2                         l1020 0E52                         l1110 0E92  
                       l1014 0BDE                         l1006 0BB0                         l1022 0E60  
                       l1120 0E9C                         l1112 0E94                         l1008 0BB8  
                       l1024 0E6A                         l1114 0E96                         l1026 0DFA  
                       l1018 0E4E                         l1116 0E98                         l1108 0E8A  
                       l1300 0A38                         l1140 0E2A                         l1118 0E9A  
                       l1310 0A7E                         l1302 0A4A                         l1230 0C86  
                       l1150 0E46                         l1142 0E2E                         l1320 0AAA  
                       l1312 0A86                         l1304 0A52                         l1240 0C9E  
                       l1144 0E34                         l1250 095A                         l1314 0A8C  
                       l1306 0A5A                         l1242 0CAE                         l1330 0D42  
                       l1146 0E3A                         l1138 0E26                         l1340 0CF2  
                       l1260 0980                         l1252 095E                         l1244 0940  
                       l1308 0A68                         l1316 0A92                         l1236 0C8A  
                       l1228 0C7A                         l1332 0D46                         l1324 0D2A  
                       l1148 0E40                         l1350 0C48                         l1342 0D02  
                       l1270 09B6                         l1262 0992                         l1254 096C  
                       l1246 0944                         l1318 0AA2                         l1238 0C9C  
                       l1334 0D4A                         l1326 0D2E                         l1352 0C64  
                       l1344 0D0E                         l1272 09CC                         l1264 099A  
                       l1280 09E2                         l1256 0974                         l1248 0952  
                       l1336 0D50                         l1328 0D32                         l1360 082C  
                       l1354 0C66                         l1346 0D20                         l1282 09F2  
                       l1274 09D4                         l1266 09A2                         l1258 0978  
                       l1290 0A08                         l1338 0BE4                         l1370 0860  
                       l1362 0836                         l1348 0C3C                         l1284 09FA  
                       l1276 09D6                         l1268 09B0                         l1292 0A16  
                       l1380 0890                         l1372 086A                         l1364 0846  
                       l1356 0824                         l1278 09DC                         l1294 0A1E  
                       l1390 08BC                         l1382 0896                         l1374 0870  
                       l1366 084C                         l1358 0828                         l1296 0A22  
                       l1288 0A04                         l1392 08C2                         l1384 089C  
                       l1376 0880                         l1368 085C                         l1298 0A30  
                       l1394 08FE                         l1386 08AC                         l1378 0888  
                       l1396 0912                         l1388 08B4                         l1398 0922  
                       STR_1 0801                         STR_2 0812                         STR_3 0820  
                       STR_4 080C                         STR_5 081C                         STR_6 0818  
                       _LATD 000F8C                         _main 0824                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                         prodl 000FF3  
                       start 0000                ?_CURSOR_ONOFF 0001             ??_DHT11_ReadData 0001  
               ___param_bank 000000              ??_ENVIA_LCD_CMD 0002             __end_of_LEER_LCD 0B26  
             _GENERACARACTER 0C7A                        ?_main 0001              __end_of___awdiv 0A04  
            __end_of___awmod 0AB4              ___awdiv@divisor 0009              ___awdiv@counter 000B  
                      _PORTD 000F83                        _TRISD 000F95                  ?_POS_CURSOR 0004  
                      tablat 000FF5                        status 000FD8               ??_CURSOR_ONOFF 0004  
            __initialization 0CB6                 __end_of_main 0940       __end_of_GENERACARACTER 0CB6  
            _ESCRIBE_MENSAJE 0C3C                       ??_main 0010                __activetblptr 000001  
                     _ADCON1 000FC1             ___awdiv@dividend 0007          _DHT11_CheckResponse 0DFA  
              _lectura_DHT11 0E26                       _OSCCON 000FD3                    ??___awdiv 000B  
                     _decena 0015                    ??___awmod 0005         __end_of_ENVIA_NIBBLE 0E8A  
       ?_DHT11_CheckResponse 0001             __end_of_init_LCD 0D62              ?_GENERACARACTER 0004  
                     clear_0 0CDC             ___awdiv@quotient 000D              ___awmod@divisor 0003  
                     isa$std 000001              ___awmod@counter 0005                       _unidad 0014  
               __pdataCOMRAM 001C                 __mediumconst 0000                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                 ??_BORRAR_LCD 0004  
             ?_lectura_DHT11 0001                    ?_LEER_LCD 0001                   __accesstop 0060  
    __end_of__initialization 0CE2                 ??_LCD_CONFIG 0004                ___rparam_used 000001  
               ??_ENVIA_CHAR 0002      __end_of_ESCRIBE_MENSAJE 0C7A               __pcstackCOMRAM 0001  
      ??_DHT11_CheckResponse 0001           __end_of_BORRAR_LCD 0EB8             ENVIA_LCD_CMD@aux 0003  
       __end_of_CURSOR_ONOFF 0DFA           __end_of_LCD_CONFIG 0B86           __end_of_ENVIA_CHAR 0DCA  
                 ??_LEER_LCD 0001             ENVIA_NIBBLE@dato 0001              ??_lectura_DHT11 0003  
               ??_POS_CURSOR 0005                    ?_init_LCD 0001                ??_DHT11_Start 0001  
                    __Hparam 0000                      __Lparam 0000             ?_ESCRIBE_MENSAJE 0004  
          __end_of_configuro 0EA0                      ___awdiv 0940                      ___awmod 0A04  
               __psmallconst 0800        __end_of_ENVIA_LCD_CMD 0D96            __end_of_convierte 0C3C  
                    __pcinit 0CB6           __end_of_POS_CURSOR 0D2A                      __ramtop 0800  
                    _centena 0016                      __ptext0 0824                      __ptext1 0E26  
                    __ptext2 0E4E                      __ptext3 0B86                      __ptext4 0DFA  
                    __ptext5 0D2A                      __ptext6 0B26                      __ptext7 0C7A  
                    __ptext8 0DCA                      __ptext9 0EA8              GENERACARACTER@i 0007  
           ___awmod@dividend 0001                 _ENVIA_NIBBLE 0E6E         end_of_initialization 0CE2  
                 ??_init_LCD 0008             ??_GENERACARACTER 0007          __end_of_DHT11_Start 0E6E  
                    postdec1 000FE5                      postinc0 000FEE         GENERACARACTER@vector 0004  
                  _PORTBbits 000F81                    _TRISBbits 000F93                    _TRISCbits 000F94  
                  _TRISEbits 000F96                 _CURSOR_ONOFF 0DCA           CURSOR_ONOFF@estado 0004  
         DHT11_ReadData@data 0002                    _T_Decimal 0019                __pidataCOMRAM 0EA0  
                  _T_Integer 0018                ??_CURSOR_HOME 0004          start_initialization 0CB6  
          ENVIA_LCD_CMD@dato 0002                  _DHT11_Start 0E4E  __end_of_DHT11_CheckResponse 0E26  
                __pbssCOMRAM 0014          __end_of_CURSOR_HOME 0EB0                     ?___awdiv 0007  
                   ?___awmod 0001               _DHT11_ReadData 0B86            GENERACARACTER@pos 0006  
                  _configuro 0E8A                  __smallconst 0800                    _convierte 0BE2  
            convierte@numero 000F        __end_of_lectura_DHT11 0E4E                     _LEER_LCD 0AB4  
                   _LATBbits 000F8A                     _LATCbits 000F8B                     _LATDbits 000F8C  
     __end_of_DHT11_ReadData 0BE2             ESCRIBE_MENSAJE@i 0009               POS_CURSOR@fila 0005  
                 ?_configuro 0001                   ?_convierte 0001                     _Checksum 0017  
                _CURSOR_HOME 0EA8                    copy_data0 0CCA                     __Hrparam 0000  
                   __Lrparam 0000                 __Lsmallconst 0800              ?_DHT11_ReadData 0001  
            DHT11_ReadData@i 0001                     __ptext10 0EB0                     __ptext11 0BE2  
                   __ptext20 0E6E                     __ptext12 0A04                     __ptext13 0940  
                   __ptext14 0E8A                     __ptext15 0CF0                     __ptext16 0D62  
                   __ptext17 0C3C                     __ptext18 0D96                     __ptext19 0AB4  
                 _BORRAR_LCD 0EB0                     _init_LCD 0D2A                 ?_DHT11_Start 0001  
                   _u_acento 001C                   _LCD_CONFIG 0B26                   _ENVIA_CHAR 0D96  
                   isa$xinst 000000                _ENVIA_LCD_CMD 0D62                  ??_configuro 0001  
                ??_convierte 000F            ??_ESCRIBE_MENSAJE 0007        ESCRIBE_MENSAJE@cadena 0004  
             ?_ENVIA_LCD_CMD 0001                  ?_BORRAR_LCD 0001                ?_ENVIA_NIBBLE 0001  
                 _POS_CURSOR 0CF0                   _RH_Decimal 001B                  ?_LCD_CONFIG 0001  
         ESCRIBE_MENSAJE@tam 0006                  ?_ENVIA_CHAR 0001            POS_CURSOR@columna 0004  
                 _RH_Integer 001A  
