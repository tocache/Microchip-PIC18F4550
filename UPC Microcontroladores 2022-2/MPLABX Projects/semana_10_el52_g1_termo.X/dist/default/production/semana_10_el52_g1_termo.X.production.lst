

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 20 17:05:28 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  000ED6                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _segundos
    79  000ED6  3B                 	db	59
    80                           
    81                           ;initializer for _minutos
    82  000ED7  19                 	db	25
    83                           
    84                           ;initializer for _horas
    85  000ED8  10                 	db	16
    86                           
    87                           ;initializer for _o_acento
    88  000ED9  02                 	db	2
    89  000EDA  04                 	db	4
    90  000EDB  0E                 	db	14
    91  000EDC  11                 	db	17
    92  000EDD  11                 	db	17
    93  000EDE  11                 	db	17
    94  000EDF  0E                 	db	14
    95  000EE0  00                 	db	0
    96  0000                     _CCPR1L	set	4030
    97  0000                     _CCPR1H	set	4031
    98  0000                     _ADCON0bits	set	4034
    99  0000                     _LATD	set	3980
   100  0000                     _PORTD	set	3971
   101  0000                     _LATDbits	set	3980
   102  0000                     _TRISD	set	3989
   103  0000                     _PIE1bits	set	3997
   104  0000                     _CCP1CON	set	4029
   105  0000                     _ADCON2	set	4032
   106  0000                     _ADRESH	set	4036
   107  0000                     _T1CON	set	4045
   108  0000                     _ADCON0	set	4034
   109  0000                     _ADCON1	set	4033
   110  0000                     _RCONbits	set	4048
   111  0000                     _INTCON3bits	set	4080
   112  0000                     _INTCON2bits	set	4081
   113  0000                     _INTCONbits	set	4082
   114  0000                     _PIR1bits	set	3998
   115                           
   116                           	psect	smallconst
   117  000800                     __psmallconst:
   118                           	callstack 0
   119  000800  00                 	db	0
   120  000801                     STR_2:
   121  000801  6E                 	db	110	;'n'
   122  000802  20                 	db	32
   123  000803  55                 	db	85	;'U'
   124  000804  50                 	db	80	;'P'
   125  000805  43                 	db	67	;'C'
   126  000806  69                 	db	105	;'i'
   127  000807  6E                 	db	110	;'n'
   128  000808  6F                 	db	111	;'o'
   129  000809  00                 	db	0
   130  00080A                     STR_1:
   131  00080A  54                 	db	84	;'T'
   132  00080B  65                 	db	101	;'e'
   133  00080C  72                 	db	114	;'r'
   134  00080D  6D                 	db	109	;'m'
   135  00080E  6F                 	db	111	;'o'
   136  00080F  74                 	db	116	;'t'
   137  000810  72                 	db	114	;'r'
   138  000811  00                 	db	0
   139  000812                     STR_3:
   140  000812  43                 	db	67	;'C'
   141  000813  20                 	db	32
   142  000814  00                 	db	0
   143  000815  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  000CC4                     __pcinit:
   149                           	callstack 0
   150  000CC4                     start_initialization:
   151                           	callstack 0
   152  000CC4                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to COMRAM (11 bytes)
   156                           ; load TBLPTR registers with __pidataCOMRAM
   157  000CC4  0ED6               	movlw	low __pidataCOMRAM
   158  000CC6  6EF6               	movwf	tblptrl,c
   159  000CC8  0E0E               	movlw	high __pidataCOMRAM
   160  000CCA  6EF7               	movwf	tblptrh,c
   161  000CCC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   162  000CCE  6EF8               	movwf	tblptru,c
   163  000CD0  EE00  F014         	lfsr	0,__pdataCOMRAM
   164  000CD4  EE10 F00B          	lfsr	1,11
   165  000CD8                     copy_data0:
   166  000CD8  0009               	tblrd		*+
   167  000CDA  CFF5 FFEE          	movff	tablat,postinc0
   168  000CDE  50E5               	movf	postdec1,w,c
   169  000CE0  50E1               	movf	fsr1l,w,c
   170  000CE2  E1FA               	bnz	copy_data0
   171                           
   172                           ; Clear objects allocated to COMRAM (7 bytes)
   173  000CE4  EE00  F01F         	lfsr	0,__pbssCOMRAM
   174  000CE8  0E07               	movlw	7
   175  000CEA                     clear_0:
   176  000CEA  6AEE               	clrf	postinc0,c
   177  000CEC  06E8               	decf	wreg,f,c
   178  000CEE  E1FD               	bnz	clear_0
   179  000CF0                     end_of_initialization:
   180                           	callstack 0
   181  000CF0                     __end_of__initialization:
   182                           	callstack 0
   183  000CF0  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   184  000CF2  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   185  000CF4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   186  000CF6  6EF8               	movwf	tblptru,c
   187  000CF8  0E08               	movlw	high __Lsmallconst
   188  000CFA  6EF7               	movwf	tblptrh,c
   189  000CFC  0100               	movlb	0
   190  000CFE  EF0B  F004         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193  00001F                     __pbssCOMRAM:
   194                           	callstack 0
   195  00001F                     _promedio:
   196                           	callstack 0
   197  00001F                     	ds	2
   198  000021                     _ticks:
   199                           	callstack 0
   200  000021                     	ds	1
   201  000022                     _unidades:
   202                           	callstack 0
   203  000022                     	ds	1
   204  000023                     _decenas:
   205                           	callstack 0
   206  000023                     	ds	1
   207  000024                     _centenas:
   208                           	callstack 0
   209  000024                     	ds	1
   210  000025                     _res_ad:
   211                           	callstack 0
   212  000025                     	ds	1
   213                           
   214                           	psect	dataCOMRAM
   215  000014                     __pdataCOMRAM:
   216                           	callstack 0
   217  000014                     _segundos:
   218                           	callstack 0
   219  000014                     	ds	1
   220  000015                     _minutos:
   221                           	callstack 0
   222  000015                     	ds	1
   223  000016                     _horas:
   224                           	callstack 0
   225  000016                     	ds	1
   226  000017                     _o_acento:
   227                           	callstack 0
   228  000017                     	ds	8
   229                           
   230                           	psect	cstackCOMRAM
   231  000001                     __pcstackCOMRAM:
   232                           	callstack 0
   233  000001                     ??_INTs_ISR:
   234                           
   235                           ; 1 bytes @ 0x0
   236  000001                     	ds	3
   237  000004                     ?___awmod:
   238                           	callstack 0
   239  000004                     ?___lwdiv:
   240                           	callstack 0
   241  000004                     ENVIA_NIBBLE@dato:
   242                           	callstack 0
   243  000004                     LEER_LCD@aux:
   244                           	callstack 0
   245  000004                     ___awmod@dividend:
   246                           	callstack 0
   247  000004                     ___lwdiv@dividend:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0x3
   251  000004                     	ds	1
   252  000005                     ENVIA_CHAR@dato:
   253                           	callstack 0
   254  000005                     ENVIA_LCD_CMD@dato:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     ENVIA_CHAR@aux:
   260                           	callstack 0
   261  000006                     ENVIA_LCD_CMD@aux:
   262                           	callstack 0
   263  000006                     ___awmod@divisor:
   264                           	callstack 0
   265  000006                     ___lwdiv@divisor:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x5
   269  000006                     	ds	1
   270  000007                     ??_LCD_CONFIG:
   271  000007                     POS_CURSOR@columna:
   272                           	callstack 0
   273  000007                     CURSOR_ONOFF@estado:
   274                           	callstack 0
   275  000007                     ESCRIBE_MENSAJE@cadena:
   276                           	callstack 0
   277  000007                     GENERACARACTER@vector:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x6
   281  000007                     	ds	1
   282  000008                     POS_CURSOR@fila:
   283                           	callstack 0
   284  000008                     ___awmod@counter:
   285                           	callstack 0
   286  000008                     ___lwdiv@quotient:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x7
   290  000008                     	ds	1
   291  000009                     ESCRIBE_MENSAJE@tam:
   292                           	callstack 0
   293  000009                     GENERACARACTER@pos:
   294                           	callstack 0
   295  000009                     ___awmod@sign:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x8
   299  000009                     	ds	1
   300  00000A                     ??_ESCRIBE_MENSAJE:
   301  00000A                     ?___awdiv:
   302                           	callstack 0
   303  00000A                     GENERACARACTER@i:
   304                           	callstack 0
   305  00000A                     ___lwdiv@counter:
   306                           	callstack 0
   307  00000A                     ___awdiv@dividend:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x9
   311  00000A                     	ds	1
   312  00000B                     ??_arranca_LCD:
   313                           
   314                           ; 1 bytes @ 0xA
   315  00000B                     	ds	1
   316  00000C                     ESCRIBE_MENSAJE@i:
   317                           	callstack 0
   318  00000C                     ___awdiv@divisor:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xB
   322  00000C                     	ds	2
   323  00000E                     ___awdiv@counter:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xD
   327  00000E                     	ds	1
   328  00000F                     ___awdiv@sign:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0xE
   332  00000F                     	ds	1
   333  000010                     ___awdiv@quotient:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xF
   337  000010                     	ds	2
   338  000012                     convierte_digitos@numero:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x11
   342  000012                     	ds	1
   343  000013                     main@i:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x12
   347  000013                     	ds	1
   348                           
   349 ;;
   350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   351 ;;
   352 ;; *************** function _main *****************
   353 ;; Defined at:
   354 ;;		line 57 in file "maincode4.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;  i               1   18[COMRAM] unsigned char 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   368 ;;      Params:         0       0       0       0       0       0       0       0       0
   369 ;;      Locals:         1       0       0       0       0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0       0       0
   371 ;;      Totals:         1       0       0       0       0       0       0       0       0
   372 ;;Total ram usage:        1 bytes
   373 ;; Hardware stack levels required when called: 6
   374 ;; This function calls:
   375 ;;		_ENVIA_CHAR
   376 ;;		_ESCRIBE_MENSAJE
   377 ;;		_POS_CURSOR
   378 ;;		___lwdiv
   379 ;;		_arranca_LCD
   380 ;;		_configuro
   381 ;;		_convierte_digitos
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text0
   388  000816                     __ptext0:
   389                           	callstack 0
   390  000816                     _main:
   391                           	callstack 25
   392  000816                     
   393                           ;maincode4.c: 58:     configuro();
   394  000816  ECF7  F006         	call	_configuro	;wreg free
   395  00081A                     
   396                           ;maincode4.c: 59:     arranca_LCD();
   397  00081A  ECDB  F006         	call	_arranca_LCD	;wreg free
   398  00081E                     
   399                           ;maincode4.c: 60:     POS_CURSOR(1,0);
   400  00081E  0E00               	movlw	0
   401  000820  6E07               	movwf	POS_CURSOR@columna^0,c
   402  000822  0E01               	movlw	1
   403  000824  ECBE  F006         	call	_POS_CURSOR
   404  000828                     
   405                           ;maincode4.c: 61:     ESCRIBE_MENSAJE("Termotr",7);
   406  000828  0E0A               	movlw	low STR_1
   407  00082A  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   408  00082C  0E08               	movlw	high STR_1
   409  00082E  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   410  000830  0E07               	movlw	7
   411  000832  6E09               	movwf	ESCRIBE_MENSAJE@tam^0,c
   412  000834  EC81  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   413  000838                     
   414                           ;maincode4.c: 62:     ENVIA_CHAR(0);
   415  000838  0E00               	movlw	0
   416  00083A  EC2B  F007         	call	_ENVIA_CHAR
   417  00083E                     
   418                           ;maincode4.c: 63:     ESCRIBE_MENSAJE("n UPCino",8);
   419  00083E  0E01               	movlw	low STR_2
   420  000840  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   421  000842  0E08               	movlw	high STR_2
   422  000844  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   423  000846  0E08               	movlw	8
   424  000848  6E09               	movwf	ESCRIBE_MENSAJE@tam^0,c
   425  00084A  EC81  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   426  00084E                     l1440:
   427                           
   428                           ;maincode4.c: 65:         unsigned char i;;maincode4.c: 66:         for(i=0;i<20;i++){
   429  00084E  0E00               	movlw	0
   430  000850  6E13               	movwf	main@i^0,c
   431  000852                     l159:
   432                           
   433                           ;maincode4.c: 67:             ADCON0bits.GO_DONE = 1;
   434  000852  82C2               	bsf	194,1,c	;volatile
   435  000854                     l161:
   436  000854  B2C2               	btfsc	194,1,c	;volatile
   437  000856  EF2F  F004         	goto	u561
   438  00085A  EF31  F004         	goto	u560
   439  00085E                     u561:
   440  00085E  EF2A  F004         	goto	l161
   441  000862                     u560:
   442  000862                     
   443                           ;maincode4.c: 69:             res_ad = ((ADRESH >> 1) & 0x7F);
   444  000862  90D8               	bcf	status,0,c
   445  000864  30C4               	rrcf	196,w,c	;volatile
   446  000866  0B7F               	andlw	127
   447  000868  6E25               	movwf	_res_ad^0,c
   448                           
   449                           ;maincode4.c: 70:             promedio = promedio + res_ad;
   450  00086A  5025               	movf	_res_ad^0,w,c
   451  00086C  241F               	addwf	_promedio^0,w,c
   452  00086E  6E1F               	movwf	_promedio^0,c
   453  000870  0E00               	movlw	0
   454  000872  2020               	addwfc	(_promedio+1)^0,w,c
   455  000874  6E20               	movwf	(_promedio+1)^0,c
   456  000876                     
   457                           ;maincode4.c: 71:         }
   458  000876  2A13               	incf	main@i^0,f,c
   459  000878  0E13               	movlw	19
   460  00087A  6413               	cpfsgt	main@i^0,c
   461  00087C  EF42  F004         	goto	u571
   462  000880  EF44  F004         	goto	u570
   463  000884                     u571:
   464  000884  EF29  F004         	goto	l159
   465  000888                     u570:
   466  000888                     
   467                           ;maincode4.c: 72:         promedio = promedio / 20;
   468  000888  C01F  F004         	movff	_promedio,___lwdiv@dividend
   469  00088C  C020  F005         	movff	_promedio+1,___lwdiv@dividend+1
   470  000890  0E00               	movlw	0
   471  000892  6E07               	movwf	(___lwdiv@divisor+1)^0,c
   472  000894  0E14               	movlw	20
   473  000896  6E06               	movwf	___lwdiv@divisor^0,c
   474  000898  EC92  F005         	call	___lwdiv	;wreg free
   475  00089C  C004  F01F         	movff	?___lwdiv,_promedio
   476  0008A0  C005  F020         	movff	?___lwdiv+1,_promedio+1
   477                           
   478                           ;maincode4.c: 73:         convierte_digitos(promedio);
   479  0008A4  501F               	movf	_promedio^0,w,c
   480  0008A6  EC35  F006         	call	_convierte_digitos
   481                           
   482                           ;maincode4.c: 74:         POS_CURSOR(2,0);
   483  0008AA  0E00               	movlw	0
   484  0008AC  6E07               	movwf	POS_CURSOR@columna^0,c
   485  0008AE  0E02               	movlw	2
   486  0008B0  ECBE  F006         	call	_POS_CURSOR
   487                           
   488                           ;maincode4.c: 76:         ENVIA_CHAR(centenas + 0x30);
   489  0008B4  5024               	movf	_centenas^0,w,c
   490  0008B6  0F30               	addlw	48
   491  0008B8  EC2B  F007         	call	_ENVIA_CHAR
   492                           
   493                           ;maincode4.c: 77:         ENVIA_CHAR(decenas + 0x30);
   494  0008BC  5023               	movf	_decenas^0,w,c
   495  0008BE  0F30               	addlw	48
   496  0008C0  EC2B  F007         	call	_ENVIA_CHAR
   497                           
   498                           ;maincode4.c: 78:         ENVIA_CHAR(unidades + 0x30);
   499  0008C4  5022               	movf	_unidades^0,w,c
   500  0008C6  0F30               	addlw	48
   501  0008C8  EC2B  F007         	call	_ENVIA_CHAR
   502                           
   503                           ;maincode4.c: 79:         ENVIA_CHAR(0xDF);
   504  0008CC  0EDF               	movlw	223
   505  0008CE  EC2B  F007         	call	_ENVIA_CHAR
   506  0008D2                     
   507                           ;maincode4.c: 80:         ESCRIBE_MENSAJE("C ",2);
   508  0008D2  0E12               	movlw	low STR_3
   509  0008D4  6E07               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   510  0008D6  0E08               	movlw	high STR_3
   511  0008D8  6E08               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   512  0008DA  0E02               	movlw	2
   513  0008DC  6E09               	movwf	ESCRIBE_MENSAJE@tam^0,c
   514  0008DE  EC81  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   515  0008E2                     
   516                           ;maincode4.c: 81:         convierte_digitos(horas);
   517  0008E2  5016               	movf	_horas^0,w,c
   518  0008E4  EC35  F006         	call	_convierte_digitos
   519  0008E8                     
   520                           ;maincode4.c: 82:         ENVIA_CHAR(decenas + 0x30);
   521  0008E8  5023               	movf	_decenas^0,w,c
   522  0008EA  0F30               	addlw	48
   523  0008EC  EC2B  F007         	call	_ENVIA_CHAR
   524  0008F0                     
   525                           ;maincode4.c: 83:         ENVIA_CHAR(unidades + 0x30);
   526  0008F0  5022               	movf	_unidades^0,w,c
   527  0008F2  0F30               	addlw	48
   528  0008F4  EC2B  F007         	call	_ENVIA_CHAR
   529  0008F8                     
   530                           ;maincode4.c: 84:         ENVIA_CHAR(':');
   531  0008F8  0E3A               	movlw	58
   532  0008FA  EC2B  F007         	call	_ENVIA_CHAR
   533  0008FE                     
   534                           ;maincode4.c: 85:         convierte_digitos(minutos);
   535  0008FE  5015               	movf	_minutos^0,w,c
   536  000900  EC35  F006         	call	_convierte_digitos
   537  000904                     
   538                           ;maincode4.c: 86:         ENVIA_CHAR(decenas + 0x30);
   539  000904  5023               	movf	_decenas^0,w,c
   540  000906  0F30               	addlw	48
   541  000908  EC2B  F007         	call	_ENVIA_CHAR
   542  00090C                     
   543                           ;maincode4.c: 87:         ENVIA_CHAR(unidades + 0x30);
   544  00090C  5022               	movf	_unidades^0,w,c
   545  00090E  0F30               	addlw	48
   546  000910  EC2B  F007         	call	_ENVIA_CHAR
   547  000914                     
   548                           ;maincode4.c: 88:         ENVIA_CHAR(':');
   549  000914  0E3A               	movlw	58
   550  000916  EC2B  F007         	call	_ENVIA_CHAR
   551  00091A                     
   552                           ;maincode4.c: 89:         convierte_digitos(segundos);
   553  00091A  5014               	movf	_segundos^0,w,c
   554  00091C  EC35  F006         	call	_convierte_digitos
   555  000920                     
   556                           ;maincode4.c: 90:         ENVIA_CHAR(decenas + 0x30);
   557  000920  5023               	movf	_decenas^0,w,c
   558  000922  0F30               	addlw	48
   559  000924  EC2B  F007         	call	_ENVIA_CHAR
   560  000928                     
   561                           ;maincode4.c: 91:         ENVIA_CHAR(unidades + 0x30);
   562  000928  5022               	movf	_unidades^0,w,c
   563  00092A  0F30               	addlw	48
   564  00092C  EC2B  F007         	call	_ENVIA_CHAR
   565  000930  EF27  F004         	goto	l1440
   566  000934  EF47  F000         	goto	start
   567  000938                     __end_of_main:
   568                           	callstack 0
   569                           
   570 ;; *************** function _convierte_digitos *****************
   571 ;; Defined at:
   572 ;;		line 51 in file "maincode4.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  numero          1    wreg     unsigned char 
   575 ;; Auto vars:     Size  Location     Type
   576 ;;  numero          1   17[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   586 ;;      Params:         0       0       0       0       0       0       0       0       0
   587 ;;      Locals:         1       0       0       0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0
   589 ;;      Totals:         1       0       0       0       0       0       0       0       0
   590 ;;Total ram usage:        1 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 3
   593 ;; This function calls:
   594 ;;		___awdiv
   595 ;;		___awmod
   596 ;; This function is called by:
   597 ;;		_main
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text1
   602  000C6A                     __ptext1:
   603                           	callstack 0
   604  000C6A                     _convierte_digitos:
   605                           	callstack 27
   606                           
   607                           ;incstack = 0
   608                           ;convierte_digitos@numero stored from wreg
   609  000C6A  6E12               	movwf	convierte_digitos@numero^0,c
   610  000C6C                     
   611                           ;maincode4.c: 52:     centenas = numero / 100;
   612  000C6C  C012  F00A         	movff	convierte_digitos@numero,___awdiv@dividend
   613  000C70  6A0B               	clrf	(___awdiv@dividend+1)^0,c
   614  000C72  0E00               	movlw	0
   615  000C74  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   616  000C76  0E64               	movlw	100
   617  000C78  6E0C               	movwf	___awdiv@divisor^0,c
   618  000C7A  EC9C  F004         	call	___awdiv	;wreg free
   619  000C7E  500A               	movf	?___awdiv^0,w,c
   620  000C80  6E24               	movwf	_centenas^0,c
   621                           
   622                           ;maincode4.c: 53:     decenas = (numero % 100) / 10;
   623  000C82  0E00               	movlw	0
   624  000C84  6E07               	movwf	(___awmod@divisor+1)^0,c
   625  000C86  0E64               	movlw	100
   626  000C88  6E06               	movwf	___awmod@divisor^0,c
   627  000C8A  C012  F004         	movff	convierte_digitos@numero,___awmod@dividend
   628  000C8E  6A05               	clrf	(___awmod@dividend+1)^0,c
   629  000C90  ECFE  F004         	call	___awmod	;wreg free
   630  000C94  C004  F00A         	movff	?___awmod,___awdiv@dividend
   631  000C98  C005  F00B         	movff	?___awmod+1,___awdiv@dividend+1
   632  000C9C  0E00               	movlw	0
   633  000C9E  6E0D               	movwf	(___awdiv@divisor+1)^0,c
   634  000CA0  0E0A               	movlw	10
   635  000CA2  6E0C               	movwf	___awdiv@divisor^0,c
   636  000CA4  EC9C  F004         	call	___awdiv	;wreg free
   637  000CA8  500A               	movf	?___awdiv^0,w,c
   638  000CAA  6E23               	movwf	_decenas^0,c
   639                           
   640                           ;maincode4.c: 54:     unidades = numero % 10;
   641  000CAC  C012  F004         	movff	convierte_digitos@numero,___awmod@dividend
   642  000CB0  6A05               	clrf	(___awmod@dividend+1)^0,c
   643  000CB2  0E00               	movlw	0
   644  000CB4  6E07               	movwf	(___awmod@divisor+1)^0,c
   645  000CB6  0E0A               	movlw	10
   646  000CB8  6E06               	movwf	___awmod@divisor^0,c
   647  000CBA  ECFE  F004         	call	___awmod	;wreg free
   648  000CBE  5004               	movf	?___awmod^0,w,c
   649  000CC0  6E22               	movwf	_unidades^0,c
   650  000CC2  0012               	return		;funcret
   651  000CC4                     __end_of_convierte_digitos:
   652                           	callstack 0
   653                           
   654 ;; *************** function ___awmod *****************
   655 ;; Defined at:
   656 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;  dividend        2    3[COMRAM] int 
   659 ;;  divisor         2    5[COMRAM] int 
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  sign            1    8[COMRAM] unsigned char 
   662 ;;  counter         1    7[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  2    3[COMRAM] int 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         4       0       0       0       0       0       0       0       0
   673 ;;      Locals:         2       0       0       0       0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0
   675 ;;      Totals:         6       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:        6 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_convierte_digitos
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text2
   687  0009FC                     __ptext2:
   688                           	callstack 0
   689  0009FC                     ___awmod:
   690                           	callstack 27
   691  0009FC  0E00               	movlw	0
   692  0009FE  6E09               	movwf	___awmod@sign^0,c
   693  000A00  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
   694  000A02  EF07  F005         	goto	u440
   695  000A06  EF05  F005         	goto	u441
   696  000A0A                     u441:
   697  000A0A  EF0D  F005         	goto	l1346
   698  000A0E                     u440:
   699  000A0E  6C04               	negf	___awmod@dividend^0,c
   700  000A10  1E05               	comf	(___awmod@dividend+1)^0,f,c
   701  000A12  B0D8               	btfsc	status,0,c
   702  000A14  2A05               	incf	(___awmod@dividend+1)^0,f,c
   703  000A16  0E01               	movlw	1
   704  000A18  6E09               	movwf	___awmod@sign^0,c
   705  000A1A                     l1346:
   706  000A1A  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
   707  000A1C  EF14  F005         	goto	u450
   708  000A20  EF12  F005         	goto	u451
   709  000A24                     u451:
   710  000A24  EF18  F005         	goto	l1350
   711  000A28                     u450:
   712  000A28  6C06               	negf	___awmod@divisor^0,c
   713  000A2A  1E07               	comf	(___awmod@divisor+1)^0,f,c
   714  000A2C  B0D8               	btfsc	status,0,c
   715  000A2E  2A07               	incf	(___awmod@divisor+1)^0,f,c
   716  000A30                     l1350:
   717  000A30  5006               	movf	___awmod@divisor^0,w,c
   718  000A32  1007               	iorwf	(___awmod@divisor+1)^0,w,c
   719  000A34  B4D8               	btfsc	status,2,c
   720  000A36  EF1F  F005         	goto	u461
   721  000A3A  EF21  F005         	goto	u460
   722  000A3E                     u461:
   723  000A3E  EF45  F005         	goto	l1366
   724  000A42                     u460:
   725  000A42  0E01               	movlw	1
   726  000A44  6E08               	movwf	___awmod@counter^0,c
   727  000A46  EF29  F005         	goto	l1356
   728  000A4A                     l1354:
   729  000A4A  90D8               	bcf	status,0,c
   730  000A4C  3606               	rlcf	___awmod@divisor^0,f,c
   731  000A4E  3607               	rlcf	(___awmod@divisor+1)^0,f,c
   732  000A50  2A08               	incf	___awmod@counter^0,f,c
   733  000A52                     l1356:
   734  000A52  AE07               	btfss	(___awmod@divisor+1)^0,7,c
   735  000A54  EF2E  F005         	goto	u471
   736  000A58  EF30  F005         	goto	u470
   737  000A5C                     u471:
   738  000A5C  EF25  F005         	goto	l1354
   739  000A60                     u470:
   740  000A60                     l1358:
   741  000A60  5006               	movf	___awmod@divisor^0,w,c
   742  000A62  5C04               	subwf	___awmod@dividend^0,w,c
   743  000A64  5007               	movf	(___awmod@divisor+1)^0,w,c
   744  000A66  5805               	subwfb	(___awmod@dividend+1)^0,w,c
   745  000A68  A0D8               	btfss	status,0,c
   746  000A6A  EF39  F005         	goto	u481
   747  000A6E  EF3B  F005         	goto	u480
   748  000A72                     u481:
   749  000A72  EF3F  F005         	goto	l1362
   750  000A76                     u480:
   751  000A76  5006               	movf	___awmod@divisor^0,w,c
   752  000A78  5E04               	subwf	___awmod@dividend^0,f,c
   753  000A7A  5007               	movf	(___awmod@divisor+1)^0,w,c
   754  000A7C  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
   755  000A7E                     l1362:
   756  000A7E  90D8               	bcf	status,0,c
   757  000A80  3207               	rrcf	(___awmod@divisor+1)^0,f,c
   758  000A82  3206               	rrcf	___awmod@divisor^0,f,c
   759  000A84  2E08               	decfsz	___awmod@counter^0,f,c
   760  000A86  EF30  F005         	goto	l1358
   761  000A8A                     l1366:
   762  000A8A  5009               	movf	___awmod@sign^0,w,c
   763  000A8C  B4D8               	btfsc	status,2,c
   764  000A8E  EF4B  F005         	goto	u491
   765  000A92  EF4D  F005         	goto	u490
   766  000A96                     u491:
   767  000A96  EF51  F005         	goto	l1370
   768  000A9A                     u490:
   769  000A9A  6C04               	negf	___awmod@dividend^0,c
   770  000A9C  1E05               	comf	(___awmod@dividend+1)^0,f,c
   771  000A9E  B0D8               	btfsc	status,0,c
   772  000AA0  2A05               	incf	(___awmod@dividend+1)^0,f,c
   773  000AA2                     l1370:
   774  000AA2  C004  F004         	movff	___awmod@dividend,?___awmod
   775  000AA6  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
   776  000AAA  0012               	return		;funcret
   777  000AAC                     __end_of___awmod:
   778                           	callstack 0
   779                           
   780 ;; *************** function ___awdiv *****************
   781 ;; Defined at:
   782 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  dividend        2    9[COMRAM] int 
   785 ;;  divisor         2   11[COMRAM] int 
   786 ;; Auto vars:     Size  Location     Type
   787 ;;  quotient        2   15[COMRAM] int 
   788 ;;  sign            1   14[COMRAM] unsigned char 
   789 ;;  counter         1   13[COMRAM] unsigned char 
   790 ;; Return value:  Size  Location     Type
   791 ;;                  2    9[COMRAM] int 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   799 ;;      Params:         4       0       0       0       0       0       0       0       0
   800 ;;      Locals:         4       0       0       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0
   802 ;;      Totals:         8       0       0       0       0       0       0       0       0
   803 ;;Total ram usage:        8 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 2
   806 ;; This function calls:
   807 ;;		Nothing
   808 ;; This function is called by:
   809 ;;		_convierte_digitos
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814  000938                     __ptext3:
   815                           	callstack 0
   816  000938                     ___awdiv:
   817                           	callstack 27
   818  000938  0E00               	movlw	0
   819  00093A  6E0F               	movwf	___awdiv@sign^0,c
   820  00093C  BE0D               	btfsc	(___awdiv@divisor+1)^0,7,c
   821  00093E  EFA5  F004         	goto	u380
   822  000942  EFA3  F004         	goto	u381
   823  000946                     u381:
   824  000946  EFAB  F004         	goto	l1302
   825  00094A                     u380:
   826  00094A  6C0C               	negf	___awdiv@divisor^0,c
   827  00094C  1E0D               	comf	(___awdiv@divisor+1)^0,f,c
   828  00094E  B0D8               	btfsc	status,0,c
   829  000950  2A0D               	incf	(___awdiv@divisor+1)^0,f,c
   830  000952  0E01               	movlw	1
   831  000954  6E0F               	movwf	___awdiv@sign^0,c
   832  000956                     l1302:
   833  000956  BE0B               	btfsc	(___awdiv@dividend+1)^0,7,c
   834  000958  EFB2  F004         	goto	u390
   835  00095C  EFB0  F004         	goto	u391
   836  000960                     u391:
   837  000960  EFB8  F004         	goto	l1308
   838  000964                     u390:
   839  000964  6C0A               	negf	___awdiv@dividend^0,c
   840  000966  1E0B               	comf	(___awdiv@dividend+1)^0,f,c
   841  000968  B0D8               	btfsc	status,0,c
   842  00096A  2A0B               	incf	(___awdiv@dividend+1)^0,f,c
   843  00096C  0E01               	movlw	1
   844  00096E  1A0F               	xorwf	___awdiv@sign^0,f,c
   845  000970                     l1308:
   846  000970  0E00               	movlw	0
   847  000972  6E11               	movwf	(___awdiv@quotient+1)^0,c
   848  000974  0E00               	movlw	0
   849  000976  6E10               	movwf	___awdiv@quotient^0,c
   850  000978  500C               	movf	___awdiv@divisor^0,w,c
   851  00097A  100D               	iorwf	(___awdiv@divisor+1)^0,w,c
   852  00097C  B4D8               	btfsc	status,2,c
   853  00097E  EFC3  F004         	goto	u401
   854  000982  EFC5  F004         	goto	u400
   855  000986                     u401:
   856  000986  EFED  F004         	goto	l1330
   857  00098A                     u400:
   858  00098A  0E01               	movlw	1
   859  00098C  6E0E               	movwf	___awdiv@counter^0,c
   860  00098E  EFCD  F004         	goto	l1316
   861  000992                     l1314:
   862  000992  90D8               	bcf	status,0,c
   863  000994  360C               	rlcf	___awdiv@divisor^0,f,c
   864  000996  360D               	rlcf	(___awdiv@divisor+1)^0,f,c
   865  000998  2A0E               	incf	___awdiv@counter^0,f,c
   866  00099A                     l1316:
   867  00099A  AE0D               	btfss	(___awdiv@divisor+1)^0,7,c
   868  00099C  EFD2  F004         	goto	u411
   869  0009A0  EFD4  F004         	goto	u410
   870  0009A4                     u411:
   871  0009A4  EFC9  F004         	goto	l1314
   872  0009A8                     u410:
   873  0009A8                     l1318:
   874  0009A8  90D8               	bcf	status,0,c
   875  0009AA  3610               	rlcf	___awdiv@quotient^0,f,c
   876  0009AC  3611               	rlcf	(___awdiv@quotient+1)^0,f,c
   877  0009AE  500C               	movf	___awdiv@divisor^0,w,c
   878  0009B0  5C0A               	subwf	___awdiv@dividend^0,w,c
   879  0009B2  500D               	movf	(___awdiv@divisor+1)^0,w,c
   880  0009B4  580B               	subwfb	(___awdiv@dividend+1)^0,w,c
   881  0009B6  A0D8               	btfss	status,0,c
   882  0009B8  EFE0  F004         	goto	u421
   883  0009BC  EFE2  F004         	goto	u420
   884  0009C0                     u421:
   885  0009C0  EFE7  F004         	goto	l1326
   886  0009C4                     u420:
   887  0009C4  500C               	movf	___awdiv@divisor^0,w,c
   888  0009C6  5E0A               	subwf	___awdiv@dividend^0,f,c
   889  0009C8  500D               	movf	(___awdiv@divisor+1)^0,w,c
   890  0009CA  5A0B               	subwfb	(___awdiv@dividend+1)^0,f,c
   891  0009CC  8010               	bsf	___awdiv@quotient^0,0,c
   892  0009CE                     l1326:
   893  0009CE  90D8               	bcf	status,0,c
   894  0009D0  320D               	rrcf	(___awdiv@divisor+1)^0,f,c
   895  0009D2  320C               	rrcf	___awdiv@divisor^0,f,c
   896  0009D4  2E0E               	decfsz	___awdiv@counter^0,f,c
   897  0009D6  EFD4  F004         	goto	l1318
   898  0009DA                     l1330:
   899  0009DA  500F               	movf	___awdiv@sign^0,w,c
   900  0009DC  B4D8               	btfsc	status,2,c
   901  0009DE  EFF3  F004         	goto	u431
   902  0009E2  EFF5  F004         	goto	u430
   903  0009E6                     u431:
   904  0009E6  EFF9  F004         	goto	l1334
   905  0009EA                     u430:
   906  0009EA  6C10               	negf	___awdiv@quotient^0,c
   907  0009EC  1E11               	comf	(___awdiv@quotient+1)^0,f,c
   908  0009EE  B0D8               	btfsc	status,0,c
   909  0009F0  2A11               	incf	(___awdiv@quotient+1)^0,f,c
   910  0009F2                     l1334:
   911  0009F2  C010  F00A         	movff	___awdiv@quotient,?___awdiv
   912  0009F6  C011  F00B         	movff	___awdiv@quotient+1,?___awdiv+1
   913  0009FA  0012               	return		;funcret
   914  0009FC                     __end_of___awdiv:
   915                           	callstack 0
   916                           
   917 ;; *************** function _configuro *****************
   918 ;; Defined at:
   919 ;;		line 20 in file "maincode4.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   933 ;;      Params:         0       0       0       0       0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0       0       0
   936 ;;      Totals:         0       0       0       0       0       0       0       0       0
   937 ;;Total ram usage:        0 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 2
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text4
   948  000DEE                     __ptext4:
   949                           	callstack 0
   950  000DEE                     _configuro:
   951                           	callstack 28
   952  000DEE                     
   953                           ;maincode4.c: 21:     ADCON2 = 0x24;
   954  000DEE  0E24               	movlw	36
   955  000DF0  6EC0               	movwf	192,c	;volatile
   956                           
   957                           ;maincode4.c: 22:     ADCON1 = 0x1B;
   958  000DF2  0E1B               	movlw	27
   959  000DF4  6EC1               	movwf	193,c	;volatile
   960                           
   961                           ;maincode4.c: 23:     ADCON0 = 0x01;
   962  000DF6  0E01               	movlw	1
   963  000DF8  6EC2               	movwf	194,c	;volatile
   964                           
   965                           ;maincode4.c: 24:     T1CON = 0x31;
   966  000DFA  0E31               	movlw	49
   967  000DFC  6ECD               	movwf	205,c	;volatile
   968                           
   969                           ;maincode4.c: 25:     CCP1CON = 0x0B;
   970  000DFE  0E0B               	movlw	11
   971  000E00  6EBD               	movwf	189,c	;volatile
   972  000E02                     
   973                           ;maincode4.c: 26:     RCONbits.IPEN = 1;
   974  000E02  8ED0               	bsf	208,7,c	;volatile
   975  000E04                     
   976                           ;maincode4.c: 27:     INTCONbits.GIEH = 1;
   977  000E04  8EF2               	bsf	242,7,c	;volatile
   978  000E06                     
   979                           ;maincode4.c: 28:     INTCONbits.GIEL = 1;
   980  000E06  8CF2               	bsf	242,6,c	;volatile
   981  000E08                     
   982                           ;maincode4.c: 29:     PIE1bits.CCP1IE = 1;
   983  000E08  849D               	bsf	157,2,c	;volatile
   984                           
   985                           ;maincode4.c: 30:     CCPR1H = 0xF4;
   986  000E0A  0EF4               	movlw	244
   987  000E0C  6EBF               	movwf	191,c	;volatile
   988                           
   989                           ;maincode4.c: 31:     CCPR1L = 0x24;
   990  000E0E  0E24               	movlw	36
   991  000E10  6EBE               	movwf	190,c	;volatile
   992  000E12                     
   993                           ;maincode4.c: 32:     INTCON2bits.RBPU = 0;
   994  000E12  9EF1               	bcf	241,7,c	;volatile
   995  000E14                     
   996                           ;maincode4.c: 33:     INTCON3bits.INT1IE = 1;
   997  000E14  86F0               	bsf	240,3,c	;volatile
   998  000E16                     
   999                           ;maincode4.c: 34:     INTCON3bits.INT2IE = 1;
  1000  000E16  88F0               	bsf	240,4,c	;volatile
  1001  000E18                     
  1002                           ;maincode4.c: 35:     INTCON3bits.INT1IP = 0;
  1003  000E18  9CF0               	bcf	240,6,c	;volatile
  1004  000E1A                     
  1005                           ;maincode4.c: 36:     INTCON3bits.INT2IP = 0;
  1006  000E1A  9EF0               	bcf	240,7,c	;volatile
  1007  000E1C                     
  1008                           ;maincode4.c: 37:     INTCON2bits.INTEDG1 = 0;
  1009  000E1C  9AF1               	bcf	241,5,c	;volatile
  1010  000E1E                     
  1011                           ;maincode4.c: 38:     INTCON2bits.INTEDG2 = 0;
  1012  000E1E  98F1               	bcf	241,4,c	;volatile
  1013  000E20  0012               	return		;funcret
  1014  000E22                     __end_of_configuro:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _arranca_LCD *****************
  1018 ;; Defined at:
  1019 ;;		line 41 in file "maincode4.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        1 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 5
  1040 ;; This function calls:
  1041 ;;		_BORRAR_LCD
  1042 ;;		_CURSOR_HOME
  1043 ;;		_CURSOR_ONOFF
  1044 ;;		_GENERACARACTER
  1045 ;;		_LCD_CONFIG
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text5
  1052  000DB6                     __ptext5:
  1053                           	callstack 0
  1054  000DB6                     _arranca_LCD:
  1055                           	callstack 25
  1056  000DB6                     
  1057                           ;maincode4.c: 42:     TRISD = 0x00;
  1058  000DB6  0E00               	movlw	0
  1059  000DB8  6E95               	movwf	149,c	;volatile
  1060  000DBA                     
  1061                           ;maincode4.c: 43:     LCD_CONFIG();
  1062  000DBA  EC05  F006         	call	_LCD_CONFIG	;wreg free
  1063  000DBE                     
  1064                           ;maincode4.c: 44:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
  1065  000DBE  0EDB               	movlw	219
  1066  000DC0  6E0B               	movwf	??_arranca_LCD^0,c
  1067  000DC2  0E2D               	movlw	45
  1068  000DC4                     u587:
  1069  000DC4  2EE8               	decfsz	wreg,f,c
  1070  000DC6  D7FE               	bra	u587
  1071  000DC8  2E0B               	decfsz	??_arranca_LCD^0,f,c
  1072  000DCA  D7FC               	bra	u587
  1073  000DCC  F000               	nop	
  1074  000DCE                     
  1075                           ;maincode4.c: 45:     BORRAR_LCD();
  1076  000DCE  EC75  F007         	call	_BORRAR_LCD	;wreg free
  1077  000DD2                     
  1078                           ;maincode4.c: 46:     CURSOR_HOME();
  1079  000DD2  EC71  F007         	call	_CURSOR_HOME	;wreg free
  1080  000DD6                     
  1081                           ;maincode4.c: 47:     CURSOR_ONOFF(1);
  1082  000DD6  0E01               	movlw	1
  1083  000DD8  EC45  F007         	call	_CURSOR_ONOFF
  1084  000DDC                     
  1085                           ;maincode4.c: 48:     GENERACARACTER(o_acento,0);
  1086  000DDC  0E17               	movlw	low _o_acento
  1087  000DDE  6E07               	movwf	GENERACARACTER@vector^0,c
  1088  000DE0  0E00               	movlw	high _o_acento
  1089  000DE2  6E08               	movwf	(GENERACARACTER@vector+1)^0,c
  1090  000DE4  0E00               	movlw	0
  1091  000DE6  6E09               	movwf	GENERACARACTER@pos^0,c
  1092  000DE8  ECA0  F006         	call	_GENERACARACTER	;wreg free
  1093  000DEC  0012               	return		;funcret
  1094  000DEE                     __end_of_arranca_LCD:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _LCD_CONFIG *****************
  1098 ;; Defined at:
  1099 ;;		line 72 in file "LCD.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 4
  1120 ;; This function calls:
  1121 ;;		_ENVIA_LCD_CMD
  1122 ;;		_ENVIA_NIBBLE
  1123 ;; This function is called by:
  1124 ;;		_arranca_LCD
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text6
  1129  000C0A                     __ptext6:
  1130                           	callstack 0
  1131  000C0A                     _LCD_CONFIG:
  1132                           	callstack 25
  1133  000C0A                     
  1134                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1135  000C0A  908C               	bcf	140,0,c	;volatile
  1136                           
  1137                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1138  000C0C  928C               	bcf	140,1,c	;volatile
  1139  000C0E                     
  1140                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1141  000C0E  0E30               	movlw	48
  1142  000C10  EC5D  F007         	call	_ENVIA_NIBBLE
  1143  000C14                     
  1144                           ;LCD.c: 77:         _delay(24000);
  1145  000C14  0E20               	movlw	32
  1146  000C16  6E07               	movwf	??_LCD_CONFIG^0,c
  1147  000C18  0E2A               	movlw	42
  1148  000C1A                     u597:
  1149  000C1A  2EE8               	decfsz	wreg,f,c
  1150  000C1C  D7FE               	bra	u597
  1151  000C1E  2E07               	decfsz	??_LCD_CONFIG^0,f,c
  1152  000C20  D7FC               	bra	u597
  1153  000C22                     
  1154                           ;LCD.c: 78:         _delay(24000);
  1155  000C22  0E20               	movlw	32
  1156  000C24  6E07               	movwf	??_LCD_CONFIG^0,c
  1157  000C26  0E2A               	movlw	42
  1158  000C28                     u607:
  1159  000C28  2EE8               	decfsz	wreg,f,c
  1160  000C2A  D7FE               	bra	u607
  1161  000C2C  2E07               	decfsz	??_LCD_CONFIG^0,f,c
  1162  000C2E  D7FC               	bra	u607
  1163                           
  1164                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1165  000C30  0E30               	movlw	48
  1166  000C32  EC5D  F007         	call	_ENVIA_NIBBLE
  1167  000C36                     
  1168                           ;LCD.c: 83:  _delay(1200);
  1169  000C36  0EF0               	movlw	240
  1170  000C38                     u617:
  1171  000C38  D000               	nop2	
  1172  000C3A  2EE8               	decfsz	wreg,f,c
  1173  000C3C  D7FD               	bra	u617
  1174  000C3E                     
  1175                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1176  000C3E  0E30               	movlw	48
  1177  000C40  EC5D  F007         	call	_ENVIA_NIBBLE
  1178  000C44                     
  1179                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1180  000C44  0E20               	movlw	32
  1181  000C46  EC5D  F007         	call	_ENVIA_NIBBLE
  1182  000C4A                     
  1183                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1184  000C4A  0E01               	movlw	1
  1185  000C4C  EC11  F007         	call	_ENVIA_LCD_CMD
  1186  000C50                     
  1187                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1188  000C50  0E28               	movlw	40
  1189  000C52  EC11  F007         	call	_ENVIA_LCD_CMD
  1190  000C56                     
  1191                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1192  000C56  0E0F               	movlw	15
  1193  000C58  EC11  F007         	call	_ENVIA_LCD_CMD
  1194  000C5C                     
  1195                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1196  000C5C  0E06               	movlw	6
  1197  000C5E  EC11  F007         	call	_ENVIA_LCD_CMD
  1198  000C62                     
  1199                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1200  000C62  0E01               	movlw	1
  1201  000C64  EC11  F007         	call	_ENVIA_LCD_CMD
  1202  000C68  0012               	return		;funcret
  1203  000C6A                     __end_of_LCD_CONFIG:
  1204                           	callstack 0
  1205                           
  1206 ;; *************** function _GENERACARACTER *****************
  1207 ;; Defined at:
  1208 ;;		line 153 in file "LCD.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  vector          2    6[COMRAM] PTR const unsigned char 
  1211 ;;		 -> o_acento(8), 
  1212 ;;  pos             1    8[COMRAM] unsigned char 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  i               1    9[COMRAM] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1224 ;;      Params:         3       0       0       0       0       0       0       0       0
  1225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1226 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1227 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1228 ;;Total ram usage:        4 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 4
  1231 ;; This function calls:
  1232 ;;		_ENVIA_CHAR
  1233 ;;		_ENVIA_LCD_CMD
  1234 ;; This function is called by:
  1235 ;;		_arranca_LCD
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text7
  1240  000D40                     __ptext7:
  1241                           	callstack 0
  1242  000D40                     _GENERACARACTER:
  1243                           	callstack 25
  1244  000D40                     
  1245                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1246  000D40  5009               	movf	GENERACARACTER@pos^0,w,c
  1247  000D42  0D08               	mullw	8
  1248  000D44  50F3               	movf	243,w,c
  1249  000D46  0F40               	addlw	64
  1250  000D48  EC11  F007         	call	_ENVIA_LCD_CMD
  1251  000D4C                     
  1252                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1253  000D4C  0E00               	movlw	0
  1254  000D4E  6E0A               	movwf	GENERACARACTER@i^0,c
  1255  000D50                     l1286:
  1256                           
  1257                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1258  000D50  500A               	movf	GENERACARACTER@i^0,w,c
  1259  000D52  2407               	addwf	GENERACARACTER@vector^0,w,c
  1260  000D54  6ED9               	movwf	fsr2l,c
  1261  000D56  0E00               	movlw	0
  1262  000D58  2008               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1263  000D5A  6EDA               	movwf	fsr2h,c
  1264  000D5C  50DF               	movf	indf2,w,c
  1265  000D5E  EC2B  F007         	call	_ENVIA_CHAR
  1266  000D62                     
  1267                           ;LCD.c: 160:  }
  1268  000D62  2A0A               	incf	GENERACARACTER@i^0,f,c
  1269  000D64  0E07               	movlw	7
  1270  000D66  640A               	cpfsgt	GENERACARACTER@i^0,c
  1271  000D68  EFB8  F006         	goto	u371
  1272  000D6C  EFBA  F006         	goto	u370
  1273  000D70                     u371:
  1274  000D70  EFA8  F006         	goto	l1286
  1275  000D74                     u370:
  1276  000D74                     
  1277                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1278  000D74  0E80               	movlw	128
  1279  000D76  EC11  F007         	call	_ENVIA_LCD_CMD
  1280  000D7A  0012               	return		;funcret
  1281  000D7C                     __end_of_GENERACARACTER:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _CURSOR_ONOFF *****************
  1285 ;; Defined at:
  1286 ;;		line 35 in file "LCD.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  estado          1    wreg     unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  estado          1    6[COMRAM] unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1303 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1304 ;;Total ram usage:        1 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 4
  1307 ;; This function calls:
  1308 ;;		_ENVIA_LCD_CMD
  1309 ;; This function is called by:
  1310 ;;		_arranca_LCD
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text8
  1315  000E8A                     __ptext8:
  1316                           	callstack 0
  1317  000E8A                     _CURSOR_ONOFF:
  1318                           	callstack 25
  1319                           
  1320                           ;incstack = 0
  1321                           ;CURSOR_ONOFF@estado stored from wreg
  1322  000E8A  6E07               	movwf	CURSOR_ONOFF@estado^0,c
  1323  000E8C                     
  1324                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1325  000E8C  5007               	movf	CURSOR_ONOFF@estado^0,w,c
  1326  000E8E  A4D8               	btfss	status,2,c
  1327  000E90  EF4C  F007         	goto	u21
  1328  000E94  EF4E  F007         	goto	u20
  1329  000E98                     u21:
  1330  000E98  EF51  F007         	goto	l962
  1331  000E9C                     u20:
  1332  000E9C  0E0E               	movlw	14
  1333  000E9E  EC11  F007         	call	_ENVIA_LCD_CMD
  1334  000EA2                     l962:
  1335                           
  1336                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1337  000EA2  0407               	decf	CURSOR_ONOFF@estado^0,w,c
  1338  000EA4  A4D8               	btfss	status,2,c
  1339  000EA6  EF57  F007         	goto	u31
  1340  000EAA  EF59  F007         	goto	u30
  1341  000EAE                     u31:
  1342  000EAE  EF5C  F007         	goto	l42
  1343  000EB2                     u30:
  1344  000EB2  0E0C               	movlw	12
  1345  000EB4  EC11  F007         	call	_ENVIA_LCD_CMD
  1346  000EB8                     l42:
  1347  000EB8  0012               	return		;funcret
  1348  000EBA                     __end_of_CURSOR_ONOFF:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _CURSOR_HOME *****************
  1352 ;; Defined at:
  1353 ;;		line 30 in file "LCD.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 4
  1374 ;; This function calls:
  1375 ;;		_ENVIA_LCD_CMD
  1376 ;; This function is called by:
  1377 ;;		_arranca_LCD
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text9
  1382  000EE2                     __ptext9:
  1383                           	callstack 0
  1384  000EE2                     _CURSOR_HOME:
  1385                           	callstack 25
  1386  000EE2                     
  1387                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1388  000EE2  0E02               	movlw	2
  1389  000EE4  EC11  F007         	call	_ENVIA_LCD_CMD
  1390  000EE8  0012               	return		;funcret
  1391  000EEA                     __end_of_CURSOR_HOME:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _BORRAR_LCD *****************
  1395 ;; Defined at:
  1396 ;;		line 67 in file "LCD.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;		None
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1410 ;;      Params:         0       0       0       0       0       0       0       0       0
  1411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1414 ;;Total ram usage:        0 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 4
  1417 ;; This function calls:
  1418 ;;		_ENVIA_LCD_CMD
  1419 ;; This function is called by:
  1420 ;;		_arranca_LCD
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text10
  1425  000EEA                     __ptext10:
  1426                           	callstack 0
  1427  000EEA                     _BORRAR_LCD:
  1428                           	callstack 25
  1429  000EEA                     
  1430                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1431  000EEA  0E01               	movlw	1
  1432  000EEC  EC11  F007         	call	_ENVIA_LCD_CMD
  1433  000EF0  0012               	return		;funcret
  1434  000EF2                     __end_of_BORRAR_LCD:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function ___lwdiv *****************
  1438 ;; Defined at:
  1439 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  dividend        2    3[COMRAM] unsigned int 
  1442 ;;  divisor         2    5[COMRAM] unsigned int 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  quotient        2    7[COMRAM] unsigned int 
  1445 ;;  counter         1    9[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  2    3[COMRAM] unsigned int 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         4       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        7 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 2
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text11
  1470  000B24                     __ptext11:
  1471                           	callstack 0
  1472  000B24                     ___lwdiv:
  1473                           	callstack 28
  1474  000B24  0E00               	movlw	0
  1475  000B26  6E09               	movwf	(___lwdiv@quotient+1)^0,c
  1476  000B28  0E00               	movlw	0
  1477  000B2A  6E08               	movwf	___lwdiv@quotient^0,c
  1478  000B2C  5006               	movf	___lwdiv@divisor^0,w,c
  1479  000B2E  1007               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1480  000B30  B4D8               	btfsc	status,2,c
  1481  000B32  EF9D  F005         	goto	u531
  1482  000B36  EF9F  F005         	goto	u530
  1483  000B3A                     u531:
  1484  000B3A  EFC7  F005         	goto	l684
  1485  000B3E                     u530:
  1486  000B3E  0E01               	movlw	1
  1487  000B40  6E0A               	movwf	___lwdiv@counter^0,c
  1488  000B42  EFA7  F005         	goto	l1414
  1489  000B46                     l1412:
  1490  000B46  90D8               	bcf	status,0,c
  1491  000B48  3606               	rlcf	___lwdiv@divisor^0,f,c
  1492  000B4A  3607               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1493  000B4C  2A0A               	incf	___lwdiv@counter^0,f,c
  1494  000B4E                     l1414:
  1495  000B4E  AE07               	btfss	(___lwdiv@divisor+1)^0,7,c
  1496  000B50  EFAC  F005         	goto	u541
  1497  000B54  EFAE  F005         	goto	u540
  1498  000B58                     u541:
  1499  000B58  EFA3  F005         	goto	l1412
  1500  000B5C                     u540:
  1501  000B5C                     l1416:
  1502  000B5C  90D8               	bcf	status,0,c
  1503  000B5E  3608               	rlcf	___lwdiv@quotient^0,f,c
  1504  000B60  3609               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1505  000B62  5006               	movf	___lwdiv@divisor^0,w,c
  1506  000B64  5C04               	subwf	___lwdiv@dividend^0,w,c
  1507  000B66  5007               	movf	(___lwdiv@divisor+1)^0,w,c
  1508  000B68  5805               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1509  000B6A  A0D8               	btfss	status,0,c
  1510  000B6C  EFBA  F005         	goto	u551
  1511  000B70  EFBC  F005         	goto	u550
  1512  000B74                     u551:
  1513  000B74  EFC1  F005         	goto	l1424
  1514  000B78                     u550:
  1515  000B78  5006               	movf	___lwdiv@divisor^0,w,c
  1516  000B7A  5E04               	subwf	___lwdiv@dividend^0,f,c
  1517  000B7C  5007               	movf	(___lwdiv@divisor+1)^0,w,c
  1518  000B7E  5A05               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1519  000B80  8008               	bsf	___lwdiv@quotient^0,0,c
  1520  000B82                     l1424:
  1521  000B82  90D8               	bcf	status,0,c
  1522  000B84  3207               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1523  000B86  3206               	rrcf	___lwdiv@divisor^0,f,c
  1524  000B88  2E0A               	decfsz	___lwdiv@counter^0,f,c
  1525  000B8A  EFAE  F005         	goto	l1416
  1526  000B8E                     l684:
  1527  000B8E  C008  F004         	movff	___lwdiv@quotient,?___lwdiv
  1528  000B92  C009  F005         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1529  000B96  0012               	return		;funcret
  1530  000B98                     __end_of___lwdiv:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _POS_CURSOR *****************
  1534 ;; Defined at:
  1535 ;;		line 6 in file "LCD.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  fila            1    wreg     unsigned char 
  1538 ;;  columna         1    6[COMRAM] unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  fila            1    7[COMRAM] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1550 ;;      Params:         1       0       0       0       0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1553 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1554 ;;Total ram usage:        2 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 4
  1557 ;; This function calls:
  1558 ;;		_ENVIA_LCD_CMD
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text12
  1565  000D7C                     __ptext12:
  1566                           	callstack 0
  1567  000D7C                     _POS_CURSOR:
  1568                           	callstack 26
  1569                           
  1570                           ;incstack = 0
  1571                           ;POS_CURSOR@fila stored from wreg
  1572  000D7C  6E08               	movwf	POS_CURSOR@fila^0,c
  1573  000D7E                     
  1574                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1575  000D7E  0408               	decf	POS_CURSOR@fila^0,w,c
  1576  000D80  A4D8               	btfss	status,2,c
  1577  000D82  EFC5  F006         	goto	u501
  1578  000D86  EFC7  F006         	goto	u500
  1579  000D8A                     u501:
  1580  000D8A  EFCD  F006         	goto	l1378
  1581  000D8E                     u500:
  1582  000D8E                     
  1583                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1584  000D8E  5007               	movf	POS_CURSOR@columna^0,w,c
  1585  000D90  0F80               	addlw	128
  1586  000D92  EC11  F007         	call	_ENVIA_LCD_CMD
  1587                           
  1588                           ;LCD.c: 11:  }
  1589  000D96  EFDA  F006         	goto	l24
  1590  000D9A                     l1378:
  1591  000D9A  0E02               	movlw	2
  1592  000D9C  1808               	xorwf	POS_CURSOR@fila^0,w,c
  1593  000D9E  A4D8               	btfss	status,2,c
  1594  000DA0  EFD4  F006         	goto	u511
  1595  000DA4  EFD6  F006         	goto	u510
  1596  000DA8                     u511:
  1597  000DA8  EFDA  F006         	goto	l24
  1598  000DAC                     u510:
  1599  000DAC                     
  1600                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1601  000DAC  5007               	movf	POS_CURSOR@columna^0,w,c
  1602  000DAE  0FC0               	addlw	192
  1603  000DB0  EC11  F007         	call	_ENVIA_LCD_CMD
  1604  000DB4                     l24:
  1605  000DB4  0012               	return		;funcret
  1606  000DB6                     __end_of_POS_CURSOR:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _ENVIA_LCD_CMD *****************
  1610 ;; Defined at:
  1611 ;;		line 104 in file "LCD.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  dato            1    wreg     unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  dato            1    4[COMRAM] unsigned char 
  1616 ;;  aux             1    5[COMRAM] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1626 ;;      Params:         0       0       0       0       0       0       0       0       0
  1627 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1629 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1630 ;;Total ram usage:        2 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 3
  1633 ;; This function calls:
  1634 ;;		_ENVIA_NIBBLE
  1635 ;;		_LEER_LCD
  1636 ;; This function is called by:
  1637 ;;		_POS_CURSOR
  1638 ;;		_CURSOR_HOME
  1639 ;;		_CURSOR_ONOFF
  1640 ;;		_BORRAR_LCD
  1641 ;;		_LCD_CONFIG
  1642 ;;		_GENERACARACTER
  1643 ;;		_BLINK_CURSOR
  1644 ;;		_DISPLAY_ONOFF
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text13
  1649  000E22                     __ptext13:
  1650                           	callstack 0
  1651  000E22                     _ENVIA_LCD_CMD:
  1652                           	callstack 25
  1653                           
  1654                           ;incstack = 0
  1655                           ;ENVIA_LCD_CMD@dato stored from wreg
  1656  000E22  6E05               	movwf	ENVIA_LCD_CMD@dato^0,c
  1657  000E24                     
  1658                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1659  000E24  908C               	bcf	140,0,c	;volatile
  1660  000E26                     
  1661                           ;LCD.c: 108:  LEER_LCD();
  1662  000E26  ECCC  F005         	call	_LEER_LCD	;wreg free
  1663  000E2A                     
  1664                           ;LCD.c: 109:  TRISD = 0b00000000;
  1665  000E2A  0E00               	movlw	0
  1666  000E2C  6E95               	movwf	149,c	;volatile
  1667  000E2E                     
  1668                           ;LCD.c: 111:         _delay(1200);
  1669  000E2E  0EF0               	movlw	240
  1670  000E30                     u627:
  1671  000E30  D000               	nop2	
  1672  000E32  2EE8               	decfsz	wreg,f,c
  1673  000E34  D7FD               	bra	u627
  1674  000E36                     
  1675                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1676  000E36  928C               	bcf	140,1,c	;volatile
  1677  000E38                     
  1678                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1679  000E38  948C               	bcf	140,2,c	;volatile
  1680  000E3A                     
  1681                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1682  000E3A  908C               	bcf	140,0,c	;volatile
  1683  000E3C                     
  1684                           ;LCD.c: 115:  aux = dato & 0xF0;
  1685  000E3C  5005               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1686  000E3E  0BF0               	andlw	240
  1687  000E40  6E06               	movwf	ENVIA_LCD_CMD@aux^0,c
  1688  000E42                     
  1689                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1690  000E42  5006               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1691  000E44  EC5D  F007         	call	_ENVIA_NIBBLE
  1692  000E48                     
  1693                           ;LCD.c: 117:  aux = dato<<4;
  1694  000E48  3805               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1695  000E4A  0BF0               	andlw	240
  1696  000E4C  6E06               	movwf	ENVIA_LCD_CMD@aux^0,c
  1697  000E4E                     
  1698                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1699  000E4E  5006               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1700  000E50  EC5D  F007         	call	_ENVIA_NIBBLE
  1701  000E54  0012               	return		;funcret
  1702  000E56                     __end_of_ENVIA_LCD_CMD:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function _ESCRIBE_MENSAJE *****************
  1706 ;; Defined at:
  1707 ;;		line 41 in file "LCD.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  cadena          2    6[COMRAM] PTR const unsigned char 
  1710 ;;		 -> STR_3(3), STR_2(9), STR_1(8), 
  1711 ;;  tam             1    8[COMRAM] unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  i               1   11[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         3       0       0       0       0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1726 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        6 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 4
  1730 ;; This function calls:
  1731 ;;		_ENVIA_CHAR
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text14
  1738  000D02                     __ptext14:
  1739                           	callstack 0
  1740  000D02                     _ESCRIBE_MENSAJE:
  1741                           	callstack 26
  1742  000D02                     
  1743                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1744  000D02  0E00               	movlw	0
  1745  000D04  6E0C               	movwf	ESCRIBE_MENSAJE@i^0,c
  1746                           
  1747                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1748  000D06  0E00               	movlw	0
  1749  000D08  6E0C               	movwf	ESCRIBE_MENSAJE@i^0,c
  1750  000D0A  EF96  F006         	goto	l1388
  1751  000D0E                     l1384:
  1752                           
  1753                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1754  000D0E  500C               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1755  000D10  2407               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1756  000D12  6E0A               	movwf	??_ESCRIBE_MENSAJE^0,c
  1757  000D14  0E00               	movlw	0
  1758  000D16  2008               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1759  000D18  6E0B               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1760  000D1A  C00A  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1761  000D1E  C00B  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1762  000D22                     	if	0	;tblptru may be non-zero
  1763  000D22                     	endif
  1764  000D22                     	if	0	;tblptru may be non-zero
  1765  000D22                     	endif
  1766  000D22  0008               	tblrd		*
  1767  000D24  50F5               	movf	tablat,w,c
  1768  000D26  EC2B  F007         	call	_ENVIA_CHAR
  1769  000D2A                     
  1770                           ;LCD.c: 47:  }
  1771  000D2A  2A0C               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1772  000D2C                     l1388:
  1773  000D2C  5009               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1774  000D2E  5C0C               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1775  000D30  A0D8               	btfss	status,0,c
  1776  000D32  EF9D  F006         	goto	u521
  1777  000D36  EF9F  F006         	goto	u520
  1778  000D3A                     u521:
  1779  000D3A  EF87  F006         	goto	l1384
  1780  000D3E                     u520:
  1781  000D3E  0012               	return		;funcret
  1782  000D40                     __end_of_ESCRIBE_MENSAJE:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _ENVIA_CHAR *****************
  1786 ;; Defined at:
  1787 ;;		line 50 in file "LCD.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  dato            1    wreg     unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  dato            1    4[COMRAM] unsigned char 
  1792 ;;  aux             1    5[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        2 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 3
  1809 ;; This function calls:
  1810 ;;		_ENVIA_NIBBLE
  1811 ;;		_LEER_LCD
  1812 ;; This function is called by:
  1813 ;;		_ESCRIBE_MENSAJE
  1814 ;;		_GENERACARACTER
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text15
  1820  000E56                     __ptext15:
  1821                           	callstack 0
  1822  000E56                     _ENVIA_CHAR:
  1823                           	callstack 25
  1824                           
  1825                           ;incstack = 0
  1826                           ;ENVIA_CHAR@dato stored from wreg
  1827  000E56  6E05               	movwf	ENVIA_CHAR@dato^0,c
  1828  000E58                     
  1829                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1830  000E58  808C               	bsf	140,0,c	;volatile
  1831  000E5A                     
  1832                           ;LCD.c: 54:  LEER_LCD();
  1833  000E5A  ECCC  F005         	call	_LEER_LCD	;wreg free
  1834  000E5E                     
  1835                           ;LCD.c: 55:  TRISD = 0x00;
  1836  000E5E  0E00               	movlw	0
  1837  000E60  6E95               	movwf	149,c	;volatile
  1838  000E62                     
  1839                           ;LCD.c: 56:         _delay(1200);
  1840  000E62  0EF0               	movlw	240
  1841  000E64                     u637:
  1842  000E64  D000               	nop2	
  1843  000E66  2EE8               	decfsz	wreg,f,c
  1844  000E68  D7FD               	bra	u637
  1845  000E6A                     
  1846                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1847  000E6A  928C               	bcf	140,1,c	;volatile
  1848  000E6C                     
  1849                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1850  000E6C  948C               	bcf	140,2,c	;volatile
  1851  000E6E                     
  1852                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1853  000E6E  808C               	bsf	140,0,c	;volatile
  1854  000E70                     
  1855                           ;LCD.c: 61:  aux = dato & 0xF0;
  1856  000E70  5005               	movf	ENVIA_CHAR@dato^0,w,c
  1857  000E72  0BF0               	andlw	240
  1858  000E74  6E06               	movwf	ENVIA_CHAR@aux^0,c
  1859  000E76                     
  1860                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1861  000E76  5006               	movf	ENVIA_CHAR@aux^0,w,c
  1862  000E78  EC5D  F007         	call	_ENVIA_NIBBLE
  1863  000E7C                     
  1864                           ;LCD.c: 63:  aux = dato << 4;
  1865  000E7C  3805               	swapf	ENVIA_CHAR@dato^0,w,c
  1866  000E7E  0BF0               	andlw	240
  1867  000E80  6E06               	movwf	ENVIA_CHAR@aux^0,c
  1868  000E82                     
  1869                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1870  000E82  5006               	movf	ENVIA_CHAR@aux^0,w,c
  1871  000E84  EC5D  F007         	call	_ENVIA_NIBBLE
  1872  000E88  0012               	return		;funcret
  1873  000E8A                     __end_of_ENVIA_CHAR:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _LEER_LCD *****************
  1877 ;; Defined at:
  1878 ;;		line 121 in file "LCD.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  aux             1    3[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0
  1893 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1895 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        1 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 2
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_ENVIA_CHAR
  1903 ;;		_ENVIA_LCD_CMD
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text16
  1908  000B98                     __ptext16:
  1909                           	callstack 0
  1910  000B98                     _LEER_LCD:
  1911                           	callstack 25
  1912  000B98                     
  1913                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1914  000B98  0EF8               	movlw	248
  1915  000B9A  6E95               	movwf	149,c	;volatile
  1916  000B9C                     
  1917                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1918  000B9C  908C               	bcf	140,0,c	;volatile
  1919  000B9E                     
  1920                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1921  000B9E  828C               	bsf	140,1,c	;volatile
  1922  000BA0                     
  1923                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1924  000BA0  848C               	bsf	140,2,c	;volatile
  1925  000BA2                     
  1926                           ;LCD.c: 128:         _delay(1200);
  1927  000BA2  0EF0               	movlw	240
  1928  000BA4                     u647:
  1929  000BA4  D000               	nop2	
  1930  000BA6  2EE8               	decfsz	wreg,f,c
  1931  000BA8  D7FD               	bra	u647
  1932  000BAA                     
  1933                           ;LCD.c: 130:  aux = PORTD;
  1934  000BAA  CF83 F004          	movff	3971,LEER_LCD@aux	;volatile
  1935  000BAE                     
  1936                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1937  000BAE  948C               	bcf	140,2,c	;volatile
  1938  000BB0                     
  1939                           ;LCD.c: 132:         _delay(1200);
  1940  000BB0  0EF0               	movlw	240
  1941  000BB2                     u657:
  1942  000BB2  D000               	nop2	
  1943  000BB4  2EE8               	decfsz	wreg,f,c
  1944  000BB6  D7FD               	bra	u657
  1945  000BB8                     
  1946                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1947  000BB8  848C               	bsf	140,2,c	;volatile
  1948  000BBA                     
  1949                           ;LCD.c: 135:         _delay(1200);
  1950  000BBA  0EF0               	movlw	240
  1951  000BBC                     u667:
  1952  000BBC  D000               	nop2	
  1953  000BBE  2EE8               	decfsz	wreg,f,c
  1954  000BC0  D7FD               	bra	u667
  1955  000BC2                     
  1956                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1957  000BC2  948C               	bcf	140,2,c	;volatile
  1958  000BC4                     l888:
  1959                           
  1960                           ;LCD.c: 138:  aux = aux & 0x80;
  1961  000BC4  5004               	movf	LEER_LCD@aux^0,w,c
  1962  000BC6  0B80               	andlw	128
  1963  000BC8  6E04               	movwf	LEER_LCD@aux^0,c
  1964                           
  1965                           ;LCD.c: 139:  while(aux == 0x80)
  1966  000BCA  EFFB  F005         	goto	l902
  1967  000BCE                     l67:
  1968                           
  1969                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1970  000BCE  848C               	bsf	140,2,c	;volatile
  1971  000BD0                     
  1972                           ;LCD.c: 142:             _delay(1200);
  1973  000BD0  0EF0               	movlw	240
  1974  000BD2                     u677:
  1975  000BD2  D000               	nop2	
  1976  000BD4  2EE8               	decfsz	wreg,f,c
  1977  000BD6  D7FD               	bra	u677
  1978  000BD8                     
  1979                           ;LCD.c: 143:             aux = PORTD;
  1980  000BD8  CF83 F004          	movff	3971,LEER_LCD@aux	;volatile
  1981  000BDC                     
  1982                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1983  000BDC  948C               	bcf	140,2,c	;volatile
  1984                           
  1985                           ;LCD.c: 145:             _delay(1200);
  1986  000BDE  0EF0               	movlw	240
  1987  000BE0                     u687:
  1988  000BE0  D000               	nop2	
  1989  000BE2  2EE8               	decfsz	wreg,f,c
  1990  000BE4  D7FD               	bra	u687
  1991  000BE6                     
  1992                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1993  000BE6  848C               	bsf	140,2,c	;volatile
  1994                           
  1995                           ;LCD.c: 147:             _delay(1200);
  1996  000BE8  0EF0               	movlw	240
  1997  000BEA                     u697:
  1998  000BEA  D000               	nop2	
  1999  000BEC  2EE8               	decfsz	wreg,f,c
  2000  000BEE  D7FD               	bra	u697
  2001  000BF0                     
  2002                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2003  000BF0  948C               	bcf	140,2,c	;volatile
  2004  000BF2  EFE2  F005         	goto	l888
  2005  000BF6                     l902:
  2006                           
  2007                           ;LCD.c: 139:  while(aux == 0x80)
  2008  000BF6  0E80               	movlw	128
  2009  000BF8  1804               	xorwf	LEER_LCD@aux^0,w,c
  2010  000BFA  B4D8               	btfsc	status,2,c
  2011  000BFC  EF02  F006         	goto	u11
  2012  000C00  EF04  F006         	goto	u10
  2013  000C04                     u11:
  2014  000C04  EFE7  F005         	goto	l67
  2015  000C08                     u10:
  2016  000C08  0012               	return		;funcret
  2017  000C0A                     __end_of_LEER_LCD:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _ENVIA_NIBBLE *****************
  2021 ;; Defined at:
  2022 ;;		line 93 in file "LCD.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  dato            1    wreg     unsigned char 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  dato            1    3[COMRAM] unsigned char 
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0
  2037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2039 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2040 ;;Total ram usage:        1 bytes
  2041 ;; Hardware stack levels used: 1
  2042 ;; Hardware stack levels required when called: 2
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_ENVIA_CHAR
  2047 ;;		_LCD_CONFIG
  2048 ;;		_ENVIA_LCD_CMD
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text17
  2053  000EBA                     __ptext17:
  2054                           	callstack 0
  2055  000EBA                     _ENVIA_NIBBLE:
  2056                           	callstack 26
  2057                           
  2058                           ;incstack = 0
  2059                           ;ENVIA_NIBBLE@dato stored from wreg
  2060  000EBA  6E04               	movwf	ENVIA_NIBBLE@dato^0,c
  2061  000EBC                     
  2062                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2063  000EBC  0E0F               	movlw	15
  2064  000EBE  168C               	andwf	140,f,c	;volatile
  2065                           
  2066                           ;LCD.c: 96:  dato &= 0xF0;
  2067  000EC0  0EF0               	movlw	240
  2068  000EC2  1604               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2069                           
  2070                           ;LCD.c: 97:  LATD|= dato;
  2071  000EC4  5004               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2072  000EC6  128C               	iorwf	140,f,c	;volatile
  2073  000EC8                     
  2074                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2075  000EC8  848C               	bsf	140,2,c	;volatile
  2076  000ECA                     
  2077                           ;LCD.c: 100:         _delay(1200);
  2078  000ECA  0EF0               	movlw	240
  2079  000ECC                     u707:
  2080  000ECC  D000               	nop2	
  2081  000ECE  2EE8               	decfsz	wreg,f,c
  2082  000ED0  D7FD               	bra	u707
  2083  000ED2                     
  2084                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2085  000ED2  948C               	bcf	140,2,c	;volatile
  2086  000ED4  0012               	return		;funcret
  2087  000ED6                     __end_of_ENVIA_NIBBLE:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _INTs_ISR *****************
  2091 ;; Defined at:
  2092 ;;		line 123 in file "maincode4.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2108 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2109 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2110 ;;Total ram usage:        3 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		Interrupt level 1
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	intcodelo
  2121  000018                     __pintcodelo:
  2122                           	callstack 0
  2123  000018                     _INTs_ISR:
  2124                           	callstack 25
  2125                           
  2126                           ;incstack = 0
  2127  000018  8026               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2128  00001A  CFD8 F001          	movff	status,??_INTs_ISR
  2129  00001E  CFE8 F002          	movff	wreg,??_INTs_ISR+1
  2130  000022  CFE0 F003          	movff	bsr,??_INTs_ISR+2
  2131  000026                     
  2132                           ;maincode4.c: 124:     if(INTCON3bits.INT1IF == 1){
  2133  000026  A0F0               	btfss	240,0,c	;volatile
  2134  000028  EF18  F000         	goto	i1u33_21
  2135  00002C  EF1A  F000         	goto	i1u33_20
  2136  000030                     i1u33_21:
  2137  000030  EF29  F000         	goto	i1l1268
  2138  000034                     i1u33_20:
  2139  000034                     
  2140                           ;maincode4.c: 125:         INTCON3bits.INT1IF =0;
  2141  000034  90F0               	bcf	240,0,c	;volatile
  2142  000036                     
  2143                           ;maincode4.c: 126:             if(horas == 23){
  2144  000036  0E17               	movlw	23
  2145  000038  1816               	xorwf	_horas^0,w,c
  2146  00003A  A4D8               	btfss	status,2,c
  2147  00003C  EF22  F000         	goto	i1u34_21
  2148  000040  EF24  F000         	goto	i1u34_20
  2149  000044                     i1u34_21:
  2150  000044  EF28  F000         	goto	i1l1266
  2151  000048                     i1u34_20:
  2152  000048                     
  2153                           ;maincode4.c: 127:                 horas = 0;
  2154  000048  0E00               	movlw	0
  2155  00004A  6E16               	movwf	_horas^0,c
  2156                           
  2157                           ;maincode4.c: 128:             }
  2158  00004C  EF29  F000         	goto	i1l1268
  2159  000050                     i1l1266:
  2160                           
  2161                           ;maincode4.c: 130:                 horas++;
  2162  000050  2A16               	incf	_horas^0,f,c
  2163  000052                     i1l1268:
  2164                           
  2165                           ;maincode4.c: 133:     if(INTCON3bits.INT2IF == 1){
  2166  000052  A2F0               	btfss	240,1,c	;volatile
  2167  000054  EF2E  F000         	goto	i1u35_21
  2168  000058  EF30  F000         	goto	i1u35_20
  2169  00005C                     i1u35_21:
  2170  00005C  EF3F  F000         	goto	i1l190
  2171  000060                     i1u35_20:
  2172  000060                     
  2173                           ;maincode4.c: 134:         INTCON3bits.INT2IF =0;
  2174  000060  92F0               	bcf	240,1,c	;volatile
  2175  000062                     
  2176                           ;maincode4.c: 135:             if(minutos == 59){
  2177  000062  0E3B               	movlw	59
  2178  000064  1815               	xorwf	_minutos^0,w,c
  2179  000066  A4D8               	btfss	status,2,c
  2180  000068  EF38  F000         	goto	i1u36_21
  2181  00006C  EF3A  F000         	goto	i1u36_20
  2182  000070                     i1u36_21:
  2183  000070  EF3E  F000         	goto	i1l1276
  2184  000074                     i1u36_20:
  2185  000074                     
  2186                           ;maincode4.c: 136:                 minutos = 0;
  2187  000074  0E00               	movlw	0
  2188  000076  6E15               	movwf	_minutos^0,c
  2189                           
  2190                           ;maincode4.c: 137:             }
  2191  000078  EF3F  F000         	goto	i1l190
  2192  00007C                     i1l1276:
  2193                           
  2194                           ;maincode4.c: 139:                 minutos++;
  2195  00007C  2A15               	incf	_minutos^0,f,c
  2196  00007E                     i1l190:
  2197  00007E  C003  FFE0         	movff	??_INTs_ISR+2,bsr
  2198  000082  C002  FFE8         	movff	??_INTs_ISR+1,wreg
  2199  000086  C001  FFD8         	movff	??_INTs_ISR,status
  2200  00008A  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2201  00008C  0010               	retfie	
  2202  00008E                     __end_of_INTs_ISR:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _CCP1_ISR *****************
  2206 ;; Defined at:
  2207 ;;		line 95 in file "maincode4.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		Interrupt level 2
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	intcode
  2235  000008                     __pintcode:
  2236                           	callstack 0
  2237  000008                     _CCP1_ISR:
  2238                           	callstack 25
  2239                           
  2240                           ;incstack = 0
  2241  000008  8226               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2242  00000A  ED56  F005         	call	int_func,f	;refresh shadow registers
  2243                           
  2244                           	psect	intcode_body
  2245  000AAC                     __pintcode_body:
  2246                           	callstack 25
  2247  000AAC                     int_func:
  2248                           	callstack 25
  2249  000AAC  0006               	pop		; remove dummy address from shadow register refresh
  2250  000AAE                     
  2251                           ;maincode4.c: 96:     PIR1bits.CCP1IF = 0;
  2252  000AAE  949E               	bcf	158,2,c	;volatile
  2253  000AB0                     
  2254                           ;maincode4.c: 97:     if(ticks == 15){
  2255  000AB0  0E0F               	movlw	15
  2256  000AB2  1821               	xorwf	_ticks^0,w,c
  2257  000AB4  A4D8               	btfss	status,2,c
  2258  000AB6  EF5F  F005         	goto	i2u29_41
  2259  000ABA  EF61  F005         	goto	i2u29_40
  2260  000ABE                     i2u29_41:
  2261  000ABE  EF8F  F005         	goto	i2l1256
  2262  000AC2                     i2u29_40:
  2263  000AC2                     
  2264                           ;maincode4.c: 98:         ticks = 0;
  2265  000AC2  0E00               	movlw	0
  2266  000AC4  6E21               	movwf	_ticks^0,c
  2267  000AC6                     
  2268                           ;maincode4.c: 99:         if(segundos == 59){
  2269  000AC6  0E3B               	movlw	59
  2270  000AC8  1814               	xorwf	_segundos^0,w,c
  2271  000ACA  A4D8               	btfss	status,2,c
  2272  000ACC  EF6A  F005         	goto	i2u30_41
  2273  000AD0  EF6C  F005         	goto	i2u30_40
  2274  000AD4                     i2u30_41:
  2275  000AD4  EF8C  F005         	goto	i2l1254
  2276  000AD8                     i2u30_40:
  2277  000AD8                     
  2278                           ;maincode4.c: 100:            segundos = 0;
  2279  000AD8  0E00               	movlw	0
  2280  000ADA  6E14               	movwf	_segundos^0,c
  2281  000ADC                     
  2282                           ;maincode4.c: 101:             if(minutos == 59){
  2283  000ADC  0E3B               	movlw	59
  2284  000ADE  1815               	xorwf	_minutos^0,w,c
  2285  000AE0  A4D8               	btfss	status,2,c
  2286  000AE2  EF75  F005         	goto	i2u31_41
  2287  000AE6  EF77  F005         	goto	i2u31_40
  2288  000AEA                     i2u31_41:
  2289  000AEA  EF89  F005         	goto	i2l1252
  2290  000AEE                     i2u31_40:
  2291  000AEE                     
  2292                           ;maincode4.c: 102:                 minutos = 0;
  2293  000AEE  0E00               	movlw	0
  2294  000AF0  6E15               	movwf	_minutos^0,c
  2295  000AF2                     
  2296                           ;maincode4.c: 103:                 if(horas == 23){
  2297  000AF2  0E17               	movlw	23
  2298  000AF4  1816               	xorwf	_horas^0,w,c
  2299  000AF6  A4D8               	btfss	status,2,c
  2300  000AF8  EF80  F005         	goto	i2u32_41
  2301  000AFC  EF82  F005         	goto	i2u32_40
  2302  000B00                     i2u32_41:
  2303  000B00  EF86  F005         	goto	i2l1250
  2304  000B04                     i2u32_40:
  2305  000B04                     
  2306                           ;maincode4.c: 104:                     horas = 0;
  2307  000B04  0E00               	movlw	0
  2308  000B06  6E16               	movwf	_horas^0,c
  2309                           
  2310                           ;maincode4.c: 105:                 }
  2311  000B08  EF90  F005         	goto	i2l179
  2312  000B0C                     i2l1250:
  2313                           
  2314                           ;maincode4.c: 107:                     horas++;
  2315  000B0C  2A16               	incf	_horas^0,f,c
  2316  000B0E  EF90  F005         	goto	i2l179
  2317  000B12                     i2l1252:
  2318                           
  2319                           ;maincode4.c: 111:                 minutos++;
  2320  000B12  2A15               	incf	_minutos^0,f,c
  2321  000B14  EF90  F005         	goto	i2l179
  2322  000B18                     i2l1254:
  2323                           
  2324                           ;maincode4.c: 115:             segundos++;
  2325  000B18  2A14               	incf	_segundos^0,f,c
  2326  000B1A  EF90  F005         	goto	i2l179
  2327  000B1E                     i2l1256:
  2328                           
  2329                           ;maincode4.c: 119:         ticks++;
  2330  000B1E  2A21               	incf	_ticks^0,f,c
  2331  000B20                     i2l179:
  2332  000B20  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2333  000B22  0011               	retfie		f
  2334  000B24                     __end_of_CCP1_ISR:
  2335                           	callstack 0
  2336                           
  2337                           	psect	rparam
  2338  0000                     
  2339                           	psect	temp
  2340  000026                     btemp:
  2341                           	callstack 0
  2342  000026                     	ds	1
  2343  0000                     int$flags	set	btemp
  2344  0000                     wtemp8	set	btemp+1
  2345  0000                     ttemp5	set	btemp+1
  2346  0000                     ttemp6	set	btemp+4
  2347  0000                     ttemp7	set	btemp+8
  2348                           
  2349                           	psect	idloc
  2350                           
  2351                           ;Config register IDLOC0 @ 0x200000
  2352                           ;	unspecified, using default values
  2353  200000                     	org	2097152
  2354  200000  FF                 	db	255
  2355                           
  2356                           ;Config register IDLOC1 @ 0x200001
  2357                           ;	unspecified, using default values
  2358  200001                     	org	2097153
  2359  200001  FF                 	db	255
  2360                           
  2361                           ;Config register IDLOC2 @ 0x200002
  2362                           ;	unspecified, using default values
  2363  200002                     	org	2097154
  2364  200002  FF                 	db	255
  2365                           
  2366                           ;Config register IDLOC3 @ 0x200003
  2367                           ;	unspecified, using default values
  2368  200003                     	org	2097155
  2369  200003  FF                 	db	255
  2370                           
  2371                           ;Config register IDLOC4 @ 0x200004
  2372                           ;	unspecified, using default values
  2373  200004                     	org	2097156
  2374  200004  FF                 	db	255
  2375                           
  2376                           ;Config register IDLOC5 @ 0x200005
  2377                           ;	unspecified, using default values
  2378  200005                     	org	2097157
  2379  200005  FF                 	db	255
  2380                           
  2381                           ;Config register IDLOC6 @ 0x200006
  2382                           ;	unspecified, using default values
  2383  200006                     	org	2097158
  2384  200006  FF                 	db	255
  2385                           
  2386                           ;Config register IDLOC7 @ 0x200007
  2387                           ;	unspecified, using default values
  2388  200007                     	org	2097159
  2389  200007  FF                 	db	255
  2390                           
  2391                           	psect	config
  2392                           
  2393                           ;Config register CONFIG1L @ 0x300000
  2394                           ;	PLL Prescaler Selection bits
  2395                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2396                           ;	System Clock Postscaler Selection bits
  2397                           ;	CPUDIV = OSC2_PLL3, [Primary Oscillator Src: /2][96 MHz PLL Src: /3]
  2398                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2399                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2400  300000                     	org	3145728
  2401  300000  08                 	db	8
  2402                           
  2403                           ;Config register CONFIG1H @ 0x300001
  2404                           ;	Oscillator Selection bits
  2405                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2406                           ;	Fail-Safe Clock Monitor Enable bit
  2407                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2408                           ;	Internal/External Oscillator Switchover bit
  2409                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2410  300001                     	org	3145729
  2411  300001  02                 	db	2
  2412                           
  2413                           ;Config register CONFIG2L @ 0x300002
  2414                           ;	Power-up Timer Enable bit
  2415                           ;	PWRT = ON, PWRT enabled
  2416                           ;	Brown-out Reset Enable bits
  2417                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2418                           ;	Brown-out Reset Voltage bits
  2419                           ;	BORV = 3, Minimum setting 2.05V
  2420                           ;	USB Voltage Regulator Enable bit
  2421                           ;	VREGEN = OFF, USB voltage regulator disabled
  2422  300002                     	org	3145730
  2423  300002  18                 	db	24
  2424                           
  2425                           ;Config register CONFIG2H @ 0x300003
  2426                           ;	Watchdog Timer Enable bit
  2427                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2428                           ;	Watchdog Timer Postscale Select bits
  2429                           ;	WDTPS = 32768, 1:32768
  2430  300003                     	org	3145731
  2431  300003  1E                 	db	30
  2432                           
  2433                           ; Padding undefined space
  2434  300004                     	org	3145732
  2435  300004  FF                 	db	255
  2436                           
  2437                           ;Config register CONFIG3H @ 0x300005
  2438                           ;	CCP2 MUX bit
  2439                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2440                           ;	PORTB A/D Enable bit
  2441                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2442                           ;	Low-Power Timer 1 Oscillator Enable bit
  2443                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2444                           ;	MCLR Pin Enable bit
  2445                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2446  300005                     	org	3145733
  2447  300005  81                 	db	129
  2448                           
  2449                           ;Config register CONFIG4L @ 0x300006
  2450                           ;	Stack Full/Underflow Reset Enable bit
  2451                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2452                           ;	Single-Supply ICSP Enable bit
  2453                           ;	LVP = OFF, Single-Supply ICSP disabled
  2454                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2455                           ;	ICPRT = OFF, ICPORT disabled
  2456                           ;	Extended Instruction Set Enable bit
  2457                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2458                           ;	Background Debugger Enable bit
  2459                           ;	DEBUG = 0x1, unprogrammed default
  2460  300006                     	org	3145734
  2461  300006  81                 	db	129
  2462                           
  2463                           ; Padding undefined space
  2464  300007                     	org	3145735
  2465  300007  FF                 	db	255
  2466                           
  2467                           ;Config register CONFIG5L @ 0x300008
  2468                           ;	Code Protection bit
  2469                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2470                           ;	Code Protection bit
  2471                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2472                           ;	Code Protection bit
  2473                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2474                           ;	Code Protection bit
  2475                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2476  300008                     	org	3145736
  2477  300008  0F                 	db	15
  2478                           
  2479                           ;Config register CONFIG5H @ 0x300009
  2480                           ;	Boot Block Code Protection bit
  2481                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2482                           ;	Data EEPROM Code Protection bit
  2483                           ;	CPD = OFF, Data EEPROM is not code-protected
  2484  300009                     	org	3145737
  2485  300009  C0                 	db	192
  2486                           
  2487                           ;Config register CONFIG6L @ 0x30000A
  2488                           ;	Write Protection bit
  2489                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2490                           ;	Write Protection bit
  2491                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2492                           ;	Write Protection bit
  2493                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2494                           ;	Write Protection bit
  2495                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2496  30000A                     	org	3145738
  2497  30000A  0F                 	db	15
  2498                           
  2499                           ;Config register CONFIG6H @ 0x30000B
  2500                           ;	Configuration Register Write Protection bit
  2501                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2502                           ;	Boot Block Write Protection bit
  2503                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2504                           ;	Data EEPROM Write Protection bit
  2505                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2506  30000B                     	org	3145739
  2507  30000B  E0                 	db	224
  2508                           
  2509                           ;Config register CONFIG7L @ 0x30000C
  2510                           ;	Table Read Protection bit
  2511                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2512                           ;	Table Read Protection bit
  2513                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2514                           ;	Table Read Protection bit
  2515                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2516                           ;	Table Read Protection bit
  2517                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2518  30000C                     	org	3145740
  2519  30000C  0F                 	db	15
  2520                           
  2521                           ;Config register CONFIG7H @ 0x30000D
  2522                           ;	Boot Block Table Read Protection bit
  2523                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2524  30000D                     	org	3145741
  2525  30000D  40                 	db	64
  2526                           tosu	equ	0xFFF
  2527                           tosh	equ	0xFFE
  2528                           tosl	equ	0xFFD
  2529                           stkptr	equ	0xFFC
  2530                           pclatu	equ	0xFFB
  2531                           pclath	equ	0xFFA
  2532                           pcl	equ	0xFF9
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           prodh	equ	0xFF4
  2538                           prodl	equ	0xFF3
  2539                           indf0	equ	0xFEF
  2540                           postinc0	equ	0xFEE
  2541                           postdec0	equ	0xFED
  2542                           preinc0	equ	0xFEC
  2543                           plusw0	equ	0xFEB
  2544                           fsr0h	equ	0xFEA
  2545                           fsr0l	equ	0xFE9
  2546                           wreg	equ	0xFE8
  2547                           indf1	equ	0xFE7
  2548                           postinc1	equ	0xFE6
  2549                           postdec1	equ	0xFE5
  2550                           preinc1	equ	0xFE4
  2551                           plusw1	equ	0xFE3
  2552                           fsr1h	equ	0xFE2
  2553                           fsr1l	equ	0xFE1
  2554                           bsr	equ	0xFE0
  2555                           indf2	equ	0xFDF
  2556                           postinc2	equ	0xFDE
  2557                           postdec2	equ	0xFDD
  2558                           preinc2	equ	0xFDC
  2559                           plusw2	equ	0xFDB
  2560                           fsr2h	equ	0xFDA
  2561                           fsr2l	equ	0xFD9
  2562                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        11
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> o_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[3]), STR_2(CODE[9]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_convierte_digitos
    _convierte_digitos->___awdiv
    ___awdiv->___awmod
    _arranca_LCD->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INTs_ISR in COMRAM

    None.

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTs_ISR in BANK0

    None.

Critical Paths under _CCP1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTs_ISR in BANK1

    None.

Critical Paths under _CCP1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTs_ISR in BANK2

    None.

Critical Paths under _CCP1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTs_ISR in BANK3

    None.

Critical Paths under _CCP1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTs_ISR in BANK4

    None.

Critical Paths under _CCP1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTs_ISR in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTs_ISR in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTs_ISR in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    3806
                                             18 COMRAM     1     1      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___lwdiv
                        _arranca_LCD
                          _configuro
                  _convierte_digitos
 ---------------------------------------------------------------------------------
 (1) _convierte_digitos                                    1     1      0    1270
                                             17 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              9 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _arranca_LCD                                          1     1      0    1029
                                             10 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              6 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     504
                                              6 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              6 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              3 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              6 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              4 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              6 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              4 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTs_ISR                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
   _arranca_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
   _convierte_digitos
     ___awdiv
       ___awmod (ARG)
     ___awmod

 _INTs_ISR (ROOT)

 _CCP1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      25       1       39.4%
BITBIGSFRll         23      0       0      29        0.0%
BITBIGSFRhhhhhl     1F      0       0      21        0.0%
BITBIGSFRhhllh      1E      0       0      25        0.0%
BITBIGSFRhhhhhh      D      0       0      20        0.0%
BITBIGSFRhhhlh       8      0       0      23        0.0%
BITBIGSFRlh          8      0       0      28        0.0%
BITBIGSFRhl          8      0       0      27        0.0%
BITBIGSFRhhlll       7      0       0      26        0.0%
BITBIGSFRhhhhl       2      0       0      22        0.0%
BITBIGSFRhhhll       1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      30        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 20 17:05:28 2022

                       l24 0DB4                         l42 0EB8                         l51 0E88  
                       l60 0ED4                         l37 0EE8                         l54 0EF0  
                       l63 0E54                         l48 0D3E                         l57 0C68  
                       l74 0D7A                         l67 0BCE                         l69 0C08  
                       u10 0C08                         u11 0C04                         u20 0E9C  
                       u21 0E98                         u30 0EB2                         u31 0EAE  
             ___awdiv@sign 000F                         bsr 000FE0              ENVIA_CHAR@aux 0006  
                      l150 0DEC                        l153 0CC2                        l161 0854  
                      l147 0E20                        l159 0852                        l424 09FA  
                      l437 0AAA                        l910 0ED2                        l902 0BF6  
                      l904 0EBC                        l920 0E36                        l912 0E24  
                      l906 0EC8                        l930 0E48                        l922 0E38  
                      l914 0E26                        l691 0B96                        l908 0ECA  
                      l940 0E62                        l932 0E4E                        l924 0E3A  
                      l916 0E2A                        l684 0B8E                        l870 0B9E  
                      l950 0E76                        l942 0E6A                        l934 0E58  
                      l926 0E3C                        l918 0E2E                        l880 0BB0  
                      l872 0BA0                        l952 0E7C                        l944 0E6C  
                      l936 0E5A                        l928 0E42                        l960 0E9C  
                      l890 0BD0                        l882 0BB8                        l874 0BA2  
                      l866 0B98                        l954 0E82                        l946 0E6E  
                      l938 0E5E                        l962 0EA2                        l970 0C0E  
                      l892 0BD8                        l884 0BBA                        l876 0BAA  
                      l868 0B9C                        l948 0E70                        l956 0EE2  
                      l964 0EB2                        l980 0C44                        l972 0C14  
                      l894 0BDC                        l886 0BC2                        l878 0BAE  
                      l966 0EEA                        l958 0E8C                        l990 0C62  
                      l982 0C4A                        l974 0C22                        l896 0BE6  
                      l888 0BC4                        l984 0C50                        l976 0C36  
                      l968 0C0A                        l898 0BF0                        l986 0C56  
                      l978 0C3E                        l988 0C5C                        u400 098A  
                      u401 0986                        u410 09A8                        u411 09A4  
                      u500 0D8E                        u420 09C4                        u501 0D8A  
                      u421 09C0                        u510 0DAC                        u430 09EA  
                      u511 0DA8                        u431 09E6                        u520 0D3E  
                      u440 0A0E                        u521 0D3A                        u441 0A0A  
                      u530 0B3E                        u370 0D74                        u450 0A28  
                      u531 0B3A                        u371 0D70                        u451 0A24  
                      u540 0B5C                        u380 094A                        u460 0A42  
                      u541 0B58                        u381 0946                        u461 0A3E  
                      u550 0B78                        u390 0964                        u470 0A60  
                      u551 0B74                        u607 0C28                        u391 0960  
                      u471 0A5C                        u480 0A76                        u560 0862  
                      u617 0C38                        u481 0A72                        u561 085E  
                      u490 0A9A                        u570 0888                        u707 0ECC  
                      u627 0E30                        u491 0A96                        u571 0884  
                      u637 0E64                        u647 0BA4                        u657 0BB2  
                      u667 0BBC                        u587 0DC4                        u677 0BD2  
                      u597 0C1A                        u687 0BE0                        u697 0BEA  
             ___awmod@sign 0009                LEER_LCD@aux 0004                        wreg 000FE8  
             ?_CURSOR_HOME 0001             ??_ENVIA_NIBBLE 0004             ENVIA_CHAR@dato 0005  
                     l1110 0E06                       l1120 0E18                       l1112 0E08  
                     l1104 0DEE                       l1122 0E1A                       l1114 0E12  
                     l1106 0E02                       l1124 0E1C                       l1116 0E14  
                     l1108 0E04                       l1300 0952                       l1126 0E1E  
                     l1118 0E16                       l1310 0978                       l1302 0956  
                     l1400 0DD6                       l1320 09AE                       l1312 098A  
                     l1304 0964                       l1410 0B3E                       l1402 0DDC  
                     l1322 09C4                       l1314 0992                       l1330 09DA  
                     l1306 096C                       l1420 0B78                       l1412 0B46  
                     l1332 09EA                       l1324 09CC                       l1316 099A  
                     l1308 0970                       l1340 0A00                       l1404 0C6C  
                     l1422 0B80                       l1414 0B4E                       l1406 0B24  
                     l1334 09F2                       l1326 09CE                       l1318 09A8  
                     l1350 0A30                       l1342 0A0E                       l1430 081A  
                     l1424 0B82                       l1416 0B5C                       l1408 0B2C  
                     l1280 0D4C                       l1328 09D4                       l1360 0A76  
                     l1352 0A42                       l1344 0A16                       l1440 084E  
                     l1432 081E                       l1426 0B88                       l1418 0B62  
                     l1290 0D64                       l1370 0AA2                       l1362 0A7E  
                     l1354 0A4A                       l1346 0A1A                       l1338 09FC  
                     l1450 0878                       l1434 0828                       l1380 0DAC  
                     l1292 0D74                       l1364 0A84                       l1356 0A52  
                     l1348 0A28                       l1460 08F0                       l1452 0888  
                     l1436 0838                       l1428 0816                       l1382 0D02  
                     l1374 0D7E                       l1286 0D50                       l1278 0D40  
                     l1390 0DB6                       l1294 0938                       l1358 0A60  
                     l1366 0A8A                       l1470 0914                       l1462 08F8  
                     l1454 08D2                       l1446 0862                       l1438 083E  
                     l1384 0D0E                       l1376 0D8E                       l1288 0D62  
                     l1392 0DBA                       l1296 093C                       l1368 0A9A  
                     l1472 091A                       l1464 08FE                       l1456 08E2  
                     l1448 0876                       l1386 0D2A                       l1378 0D9A  
                     l1394 0DBE                       l1298 094A                       l1474 0920  
                     l1466 0904                       l1458 08E8                       l1388 0D2C  
                     l1396 0DCE                       l1476 0928                       l1468 090C  
                     l1398 0DD2                       STR_1 080A                       STR_2 0801  
                     STR_3 0812                       _LATD 000F8C                       _main 0816  
         __end_of_CCP1_ISR 0B24                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0026                       prodl 000FF3  
                     start 008E              ?_CURSOR_ONOFF 0001               ___param_bank 000000  
          ??_ENVIA_LCD_CMD 0005           __end_of_LEER_LCD 0C0A    convierte_digitos@numero 0012  
           _GENERACARACTER 0D40                      ?_main 0001            __end_of___awdiv 09FC  
          __end_of___awmod 0AAC            ___awdiv@divisor 000C                      _T1CON 000FCD  
          __end_of___lwdiv 0B98                      i1l190 007E                      i2l179 0B20  
          ___awdiv@counter 000E                      _PORTD 000F83                      _TRISD 000F95  
         __end_of_INTs_ISR 008E                      _horas 0016                ?_POS_CURSOR 0007  
                    _ticks 0021                      main@i 0013                      tablat 000FF5  
                    ttemp5 0027                      ttemp6 002A                      ttemp7 002E  
                    status 000FD8                      wtemp8 0027             ??_CURSOR_ONOFF 0007  
          __initialization 0CC4               __end_of_main 0938     __end_of_GENERACARACTER 0D7C  
          _ESCRIBE_MENSAJE 0D02                     ??_main 0013              __activetblptr 000001  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _CCPR1H 000FBF                     _CCPR1L 000FBE  
         ___awdiv@dividend 000A                     i1l1260 0034                     i1l1270 0060  
                   i1l1262 0036                     i1l1272 0062                     i1l1264 0048  
                   i1l1274 0074                     i1l1266 0050                     i1l1258 0026  
                   i1l1276 007C                     i1l1268 0052                     i2l1240 0AD8  
                   i2l1232 0AAE                     i2l1250 0B0C                     i2l1242 0ADC  
                   i2l1234 0AB0                     i2l1244 0AEE                     i2l1252 0B12  
                   i2l1236 0AC2                     i2l1246 0AF2                     i2l1254 0B18  
                   i2l1238 0AC6                     i2l1248 0B04                     i2l1256 0B1E  
                ??___awdiv 000E                  ??___awmod 0008       __end_of_ENVIA_NIBBLE 0ED6  
                ??___lwdiv 0008            ?_GENERACARACTER 0007                     clear_0 0CEA  
         ___awdiv@quotient 0010                     _res_ad 0025            ___awmod@divisor 0006  
                   isa$std 000001            ___awmod@counter 0008                  ?_CCP1_ISR 0001  
             __pdataCOMRAM 0014               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8               ??_BORRAR_LCD 0007  
                ?_LEER_LCD 0001                 __accesstop 0060    __end_of__initialization 0CF0  
             ??_LCD_CONFIG 0007              ___rparam_used 000001               ??_ENVIA_CHAR 0005  
  __end_of_ESCRIBE_MENSAJE 0D40             __pcstackCOMRAM 0001                  ?_INTs_ISR 0001  
        _convierte_digitos 0C6A         __end_of_BORRAR_LCD 0EF2         ?_convierte_digitos 0001  
               ??_CCP1_ISR 0001           ENVIA_LCD_CMD@aux 0006       __end_of_CURSOR_ONOFF 0EBA  
       __end_of_LCD_CONFIG 0C6A         __end_of_ENVIA_CHAR 0E8A        ??_convierte_digitos 0012  
               ??_LEER_LCD 0004           ENVIA_NIBBLE@dato 0004  __end_of_convierte_digitos 0CC4  
               ??_INTs_ISR 0001                    _CCP1CON 000FBD                    i1u33_20 0034  
                  i1u33_21 0030                    i1u34_20 0048                    i1u34_21 0044  
                  i1u35_20 0060                    i1u35_21 005C                    i1u36_20 0074  
                  i1u36_21 0070                    i2u30_40 0AD8                    i2u30_41 0AD4  
                  i2u31_40 0AEE                    i2u31_41 0AEA                    i2u32_40 0B04  
                  i2u32_41 0B00                    i2u29_40 0AC2                    i2u29_41 0ABE  
             ??_POS_CURSOR 0008                    __Hparam 0000                    __Lparam 0000  
         ?_ESCRIBE_MENSAJE 0007          __end_of_configuro 0E22                    ___awdiv 0938  
                  ___awmod 09FC                    ___lwdiv 0B24               __psmallconst 0800  
    __end_of_ENVIA_LCD_CMD 0E56                    _decenas 0023                    __pcinit 0CC4  
       __end_of_POS_CURSOR 0DB6                    __ramtop 0800                    __ptext0 0816  
                  __ptext1 0C6A                    __ptext2 09FC                    __ptext3 0938  
                  __ptext4 0DEE                    __ptext5 0DB6                    __ptext6 0C0A  
                  __ptext7 0D40                    __ptext8 0E8A                    __ptext9 0EE2  
          GENERACARACTER@i 000A           ___awmod@dividend 0004                    _minutos 0015  
           __pintcode_body 0AAC               _ENVIA_NIBBLE 0EBA       end_of_initialization 0CF0  
                  int_func 0AAC           ??_GENERACARACTER 000A                    postdec1 000FE5  
                  postinc0 000FEE       GENERACARACTER@vector 0007              ??_arranca_LCD 000B  
             _CURSOR_ONOFF 0E8A         CURSOR_ONOFF@estado 0007              __pidataCOMRAM 0ED6  
            ??_CURSOR_HOME 0007        start_initialization 0CC4          ENVIA_LCD_CMD@dato 0005  
      __end_of_arranca_LCD 0DEE                __pbssCOMRAM 001F        __end_of_CURSOR_HOME 0EEA  
         ___lwdiv@dividend 0004                  __pintcode 0008                   ?___awdiv 000A  
                 ?___awmod 0004                   ?___lwdiv 0004                __pintcodelo 0018  
        GENERACARACTER@pos 0009                  _configuro 0DEE                __smallconst 0800  
                 _CCP1_ISR 0008           ___lwdiv@quotient 0008                   _LEER_LCD 0B98  
                 _LATDbits 000F8C                   _PIE1bits 000F9D                _arranca_LCD 0DB6  
                 _PIR1bits 000F9E                   _RCONbits 000FD0                   _INTs_ISR 0018  
         ESCRIBE_MENSAJE@i 000C             POS_CURSOR@fila 0008                 ?_configuro 0001  
               _ADCON0bits 000FC2                _CURSOR_HOME 0EE2                _INTCON2bits 000FF1  
              _INTCON3bits 000FF0                  copy_data0 0CD8                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0800            ___lwdiv@divisor 0006  
                 _centenas 0024            ___lwdiv@counter 000A                   __ptext10 0EEA  
                 __ptext11 0B24                   __ptext12 0D7C                   __ptext13 0E22  
                 __ptext14 0D02                   __ptext15 0E56                   __ptext16 0B98  
                 __ptext17 0EBA                 _BORRAR_LCD 0EEA                   _o_acento 0017  
               _LCD_CONFIG 0C0A                 _ENVIA_CHAR 0E56                   _segundos 0014  
                 isa$xinst 000000                   int$flags 0026                   _promedio 001F  
                 _unidades 0022              _ENVIA_LCD_CMD 0E22                ??_configuro 0004  
               _INTCONbits 000FF2          ??_ESCRIBE_MENSAJE 000A                   intlevel1 0000  
                 intlevel2 0000      ESCRIBE_MENSAJE@cadena 0007             ?_ENVIA_LCD_CMD 0001  
              ?_BORRAR_LCD 0001              ?_ENVIA_NIBBLE 0001                 _POS_CURSOR 0D7C  
              ?_LCD_CONFIG 0001         ESCRIBE_MENSAJE@tam 0009                ?_ENVIA_CHAR 0001  
             ?_arranca_LCD 0001          POS_CURSOR@columna 0007  
