

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Oct 27 16:22:24 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.40
    31                           ; Generated 17/11/2021 GMT
    32                           ; 
    33                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATDbits	set	3980
    68  0000                     _LATEbits	set	3981
    69  0000                     _TRISD	set	3989
    70  0000                     _ADCON1	set	4033
    71  0000                     _TRISEbits	set	3990
    72  0000                     _OSCCON	set	4051
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75                           
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     STR_1:
    81  000801  53                 	db	83	;'S'
    82  000802  65                 	db	101	;'e'
    83  000803  6D                 	db	109	;'m'
    84  000804  61                 	db	97	;'a'
    85  000805  6E                 	db	110	;'n'
    86  000806  61                 	db	97	;'a'
    87  000807  20                 	db	32
    88  000808  31                 	db	49	;'1'
    89  000809  31                 	db	49	;'1'
    90  00080A  20                 	db	32
    91  00080B  73                 	db	115	;'s'
    92  00080C  65                 	db	101	;'e'
    93  00080D  72                 	db	114	;'r'
    94  00080E  76                 	db	118	;'v'
    95  00080F  6F                 	db	111	;'o'
    96  000810  73                 	db	115	;'s'
    97  000811  00                 	db	0
    98  000812                     STR_2:
    99  000812  50                 	db	80	;'P'
   100  000813  72                 	db	114	;'r'
   101  000814  65                 	db	101	;'e'
   102  000815  73                 	db	115	;'s'
   103  000816  69                 	db	105	;'i'
   104  000817  6F                 	db	111	;'o'
   105  000818  6E                 	db	110	;'n'
   106  000819  65                 	db	101	;'e'
   107  00081A  20                 	db	32
   108  00081B  42                 	db	66	;'B'
   109  00081C  54                 	db	84	;'T'
   110  00081D  4E                 	db	78	;'N'
   111  00081E  00                 	db	0
   112  00081F  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117  000BD4                     __pcinit:
   118                           	callstack 0
   119  000BD4                     start_initialization:
   120                           	callstack 0
   121  000BD4                     __initialization:
   122                           	callstack 0
   123                           
   124                           ; Clear objects allocated to COMRAM (1 bytes)
   125  000BD4  6A0E               	clrf	__pbssCOMRAM& (0+255),c
   126  000BD6                     end_of_initialization:
   127                           	callstack 0
   128  000BD6                     __end_of__initialization:
   129                           	callstack 0
   130  000BD6  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131  000BD8  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132  000BDA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  000BDC  6EF8               	movwf	tblptru,c
   134  000BDE  0100               	movlb	0
   135  000BE0  EF10  F004         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMRAM
   138  00000E                     __pbssCOMRAM:
   139                           	callstack 0
   140  00000E                     _indicador:
   141                           	callstack 0
   142  00000E                     	ds	1
   143                           
   144                           	psect	cstackCOMRAM
   145  000001                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000001                     ??_INT0_ISR:
   148                           
   149                           ; 1 bytes @ 0x0
   150  000001                     	ds	2
   151  000003                     ENVIA_NIBBLE@dato:
   152                           	callstack 0
   153  000003                     LEER_LCD@aux:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x2
   157  000003                     	ds	1
   158  000004                     ENVIA_CHAR@dato:
   159                           	callstack 0
   160  000004                     ENVIA_LCD_CMD@dato:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x3
   164  000004                     	ds	1
   165  000005                     ENVIA_CHAR@aux:
   166                           	callstack 0
   167  000005                     ENVIA_LCD_CMD@aux:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x4
   171  000005                     	ds	1
   172  000006                     ??_LCD_CONFIG:
   173  000006                     POS_CURSOR@columna:
   174                           	callstack 0
   175  000006                     CURSOR_ONOFF@estado:
   176                           	callstack 0
   177  000006                     ESCRIBE_MENSAJE@cadena:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x5
   181  000006                     	ds	1
   182  000007                     ??_inicio_LCD:
   183  000007                     POS_CURSOR@fila:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x6
   187  000007                     	ds	1
   188  000008                     ESCRIBE_MENSAJE@tam:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x7
   192  000008                     	ds	1
   193  000009                     ??_ESCRIBE_MENSAJE:
   194                           
   195                           ; 1 bytes @ 0x8
   196  000009                     	ds	2
   197  00000B                     ESCRIBE_MENSAJE@i:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0xA
   201  00000B                     	ds	1
   202  00000C                     ??_main:
   203                           
   204                           ; 1 bytes @ 0xB
   205  00000C                     	ds	2
   206                           
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 27 in file "maincode3.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;		None
   217 ;; Return value:  Size  Location     Type
   218 ;;                  1    wreg      void 
   219 ;; Registers used:
   220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   221 ;; Tracked objects:
   222 ;;		On entry : 0/0
   223 ;;		On exit  : 0/0
   224 ;;		Unchanged: 0/0
   225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   226 ;;      Params:         0       0       0       0       0       0       0       0       0
   227 ;;      Locals:         0       0       0       0       0       0       0       0       0
   228 ;;      Temps:          2       0       0       0       0       0       0       0       0
   229 ;;      Totals:         2       0       0       0       0       0       0       0       0
   230 ;;Total ram usage:        2 bytes
   231 ;; Hardware stack levels required when called: 5
   232 ;; This function calls:
   233 ;;		_ESCRIBE_MENSAJE
   234 ;;		_POS_CURSOR
   235 ;;		_configuro
   236 ;;		_inicio_LCD
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243  000820                     __ptext0:
   244                           	callstack 0
   245  000820                     _main:
   246                           	callstack 26
   247  000820                     
   248                           ;maincode3.c: 28:     configuro();
   249  000820  ECE0  F005         	call	_configuro	;wreg free
   250  000824                     
   251                           ;maincode3.c: 29:     inicio_LCD();
   252  000824  ECBE  F005         	call	_inicio_LCD	;wreg free
   253  000828                     
   254                           ;maincode3.c: 30:     POS_CURSOR(1,0);
   255  000828  0E00               	movlw	0
   256  00082A  6E06               	movwf	POS_CURSOR@columna^0,c
   257  00082C  0E01               	movlw	1
   258  00082E  EC55  F005         	call	_POS_CURSOR
   259  000832                     
   260                           ;maincode3.c: 31:     ESCRIBE_MENSAJE("Semana 11 servos",16);
   261  000832  0E01               	movlw	low STR_1
   262  000834  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   263  000836  0E08               	movlw	high STR_1
   264  000838  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   265  00083A  0E10               	movlw	16
   266  00083C  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   267  00083E  EC18  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   268  000842                     
   269                           ;maincode3.c: 32:     POS_CURSOR(2,0);
   270  000842  0E00               	movlw	0
   271  000844  6E06               	movwf	POS_CURSOR@columna^0,c
   272  000846  0E02               	movlw	2
   273  000848  EC55  F005         	call	_POS_CURSOR
   274  00084C                     
   275                           ;maincode3.c: 33:     ESCRIBE_MENSAJE("Presione BTN",12);
   276  00084C  0E12               	movlw	low STR_2
   277  00084E  6E06               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   278  000850  0E08               	movlw	high STR_2
   279  000852  6E07               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   280  000854  0E0C               	movlw	12
   281  000856  6E08               	movwf	ESCRIBE_MENSAJE@tam^0,c
   282  000858  EC18  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   283  00085C  EF8C  F004         	goto	l1110
   284  000860                     l117:
   285                           
   286                           ;maincode3.c: 37:                 LATEbits.LE0 = 1;
   287  000860  808D               	bsf	141,0,c	;volatile
   288  000862                     
   289                           ;maincode3.c: 38:                 _delay((unsigned long)((600)*(8000000UL/4000000.0)));
   290  000862  0EF0               	movlw	240
   291  000864                     u167:
   292  000864  D000               	nop2	
   293  000866  2EE8               	decfsz	wreg,f,c
   294  000868  D7FD               	bra	u167
   295  00086A                     
   296                           ;maincode3.c: 39:                 LATEbits.LE0 = 0;
   297  00086A  908D               	bcf	141,0,c	;volatile
   298                           
   299                           ;maincode3.c: 40:                 _delay((unsigned long)((19400)*(8000000UL/4000000.0)))
      +                          ;
   300  00086C  0E33               	movlw	51
   301  00086E  6E0C               	movwf	??_main^0,c
   302  000870  0E62               	movlw	98
   303  000872                     u177:
   304  000872  2EE8               	decfsz	wreg,f,c
   305  000874  D7FE               	bra	u177
   306  000876  2E0C               	decfsz	??_main^0,f,c
   307  000878  D7FC               	bra	u177
   308  00087A  D000               	nop2	
   309                           
   310                           ;maincode3.c: 41:                 break;
   311  00087C  EF8C  F004         	goto	l1110
   312  000880                     l119:
   313                           
   314                           ;maincode3.c: 43:                 LATEbits.LE0 = 1;
   315  000880  808D               	bsf	141,0,c	;volatile
   316  000882                     
   317                           ;maincode3.c: 44:                 _delay((unsigned long)((1200)*(8000000UL/4000000.0)));
   318  000882  0E04               	movlw	4
   319  000884  6E0C               	movwf	??_main^0,c
   320  000886  0E1C               	movlw	28
   321  000888                     u187:
   322  000888  2EE8               	decfsz	wreg,f,c
   323  00088A  D7FE               	bra	u187
   324  00088C  2E0C               	decfsz	??_main^0,f,c
   325  00088E  D7FC               	bra	u187
   326  000890  D000               	nop2	
   327  000892                     
   328                           ;maincode3.c: 45:                 LATEbits.LE0 = 0;
   329  000892  908D               	bcf	141,0,c	;volatile
   330                           
   331                           ;maincode3.c: 46:                 _delay((unsigned long)((19000)*(8000000UL/4000000.0)))
      +                          ;
   332  000894  0E32               	movlw	50
   333  000896  6E0C               	movwf	??_main^0,c
   334  000898  0E58               	movlw	88
   335  00089A                     u197:
   336  00089A  2EE8               	decfsz	wreg,f,c
   337  00089C  D7FE               	bra	u197
   338  00089E  2E0C               	decfsz	??_main^0,f,c
   339  0008A0  D7FC               	bra	u197
   340  0008A2  D000               	nop2	
   341                           
   342                           ;maincode3.c: 47:                 break;
   343  0008A4  EF8C  F004         	goto	l1110
   344  0008A8                     l120:
   345                           
   346                           ;maincode3.c: 49:                 LATEbits.LE0 = 1;
   347  0008A8  808D               	bsf	141,0,c	;volatile
   348  0008AA                     
   349                           ;maincode3.c: 50:                 _delay((unsigned long)((1500)*(8000000UL/4000000.0)));
   350  0008AA  0E04               	movlw	4
   351  0008AC  6E0C               	movwf	??_main^0,c
   352  0008AE  0EE4               	movlw	228
   353  0008B0                     u207:
   354  0008B0  2EE8               	decfsz	wreg,f,c
   355  0008B2  D7FE               	bra	u207
   356  0008B4  2E0C               	decfsz	??_main^0,f,c
   357  0008B6  D7FC               	bra	u207
   358  0008B8  D000               	nop2	
   359  0008BA                     
   360                           ;maincode3.c: 51:                 LATEbits.LE0 = 0;
   361  0008BA  908D               	bcf	141,0,c	;volatile
   362                           
   363                           ;maincode3.c: 52:                 _delay((unsigned long)((18500)*(8000000UL/4000000.0)))
      +                          ;
   364  0008BC  0E31               	movlw	49
   365  0008BE  6E0C               	movwf	??_main^0,c
   366  0008C0  0E0C               	movlw	12
   367  0008C2                     u217:
   368  0008C2  2EE8               	decfsz	wreg,f,c
   369  0008C4  D7FE               	bra	u217
   370  0008C6  2E0C               	decfsz	??_main^0,f,c
   371  0008C8  D7FC               	bra	u217
   372                           
   373                           ;maincode3.c: 53:                 break;
   374  0008CA  EF8C  F004         	goto	l1110
   375  0008CE                     l121:
   376                           
   377                           ;maincode3.c: 55:                 LATEbits.LE0 = 1;
   378  0008CE  808D               	bsf	141,0,c	;volatile
   379  0008D0                     
   380                           ;maincode3.c: 56:                 _delay((unsigned long)((1900)*(8000000UL/4000000.0)));
   381  0008D0  0E05               	movlw	5
   382  0008D2  6E0C               	movwf	??_main^0,c
   383  0008D4  0EEE               	movlw	238
   384  0008D6                     u227:
   385  0008D6  2EE8               	decfsz	wreg,f,c
   386  0008D8  D7FE               	bra	u227
   387  0008DA  2E0C               	decfsz	??_main^0,f,c
   388  0008DC  D7FC               	bra	u227
   389  0008DE  D000               	nop2	
   390  0008E0                     
   391                           ;maincode3.c: 57:                 LATEbits.LE0 = 0;
   392  0008E0  908D               	bcf	141,0,c	;volatile
   393                           
   394                           ;maincode3.c: 58:                 _delay((unsigned long)((18100)*(8000000UL/4000000.0)))
      +                          ;
   395  0008E2  0E30               	movlw	48
   396  0008E4  6E0C               	movwf	??_main^0,c
   397  0008E6  0E02               	movlw	2
   398  0008E8                     u237:
   399  0008E8  2EE8               	decfsz	wreg,f,c
   400  0008EA  D7FE               	bra	u237
   401  0008EC  2E0C               	decfsz	??_main^0,f,c
   402  0008EE  D7FC               	bra	u237
   403                           
   404                           ;maincode3.c: 59:                 break;
   405  0008F0  EF8C  F004         	goto	l1110
   406  0008F4                     l122:
   407                           
   408                           ;maincode3.c: 61:                 LATEbits.LE0 = 1;
   409  0008F4  808D               	bsf	141,0,c	;volatile
   410  0008F6                     
   411                           ;maincode3.c: 62:                 _delay((unsigned long)((2300)*(8000000UL/4000000.0)));
   412  0008F6  0E06               	movlw	6
   413  0008F8  6E0C               	movwf	??_main^0,c
   414  0008FA  0EF8               	movlw	248
   415  0008FC                     u247:
   416  0008FC  2EE8               	decfsz	wreg,f,c
   417  0008FE  D7FE               	bra	u247
   418  000900  2E0C               	decfsz	??_main^0,f,c
   419  000902  D7FC               	bra	u247
   420  000904  D000               	nop2	
   421  000906                     
   422                           ;maincode3.c: 63:                 LATEbits.LE0 = 0;
   423  000906  908D               	bcf	141,0,c	;volatile
   424                           
   425                           ;maincode3.c: 64:                 _delay((unsigned long)((17700)*(8000000UL/4000000.0)))
      +                          ;
   426  000908  0E2E               	movlw	46
   427  00090A  6E0C               	movwf	??_main^0,c
   428  00090C  0EF8               	movlw	248
   429  00090E                     u257:
   430  00090E  2EE8               	decfsz	wreg,f,c
   431  000910  D7FE               	bra	u257
   432  000912  2E0C               	decfsz	??_main^0,f,c
   433  000914  D7FC               	bra	u257
   434  000916  D000               	nop2	
   435  000918                     l1110:
   436  000918  500E               	movf	_indicador^0,w,c
   437  00091A  6E0C               	movwf	??_main^0,c
   438  00091C  6A0D               	clrf	(??_main+1)^0,c
   439                           
   440                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   441                           ; Switch size 1, requested type "simple"
   442                           ; Number of cases is 1, Range of values is 0 to 0
   443                           ; switch strategies available:
   444                           ; Name         Instructions Cycles
   445                           ; simple_byte            4     3 (average)
   446                           ;	Chosen strategy is simple_byte
   447  00091E  500D               	movf	(??_main+1)^0,w,c
   448  000920  0A00               	xorlw	0	; case 0
   449  000922  B4D8               	btfsc	status,2,c
   450  000924  EF96  F004         	goto	l1120
   451  000928  EF8C  F004         	goto	l1110
   452  00092C                     l1120:
   453                           
   454                           ; Switch size 1, requested type "simple"
   455                           ; Number of cases is 5, Range of values is 0 to 4
   456                           ; switch strategies available:
   457                           ; Name         Instructions Cycles
   458                           ; simple_byte           16     9 (average)
   459                           ;	Chosen strategy is simple_byte
   460  00092C  500C               	movf	??_main^0,w,c
   461  00092E  0A00               	xorlw	0	; case 0
   462  000930  B4D8               	btfsc	status,2,c
   463  000932  EF30  F004         	goto	l117
   464  000936  0A01               	xorlw	1	; case 1
   465  000938  B4D8               	btfsc	status,2,c
   466  00093A  EF40  F004         	goto	l119
   467  00093E  0A03               	xorlw	3	; case 2
   468  000940  B4D8               	btfsc	status,2,c
   469  000942  EF54  F004         	goto	l120
   470  000946  0A01               	xorlw	1	; case 3
   471  000948  B4D8               	btfsc	status,2,c
   472  00094A  EF67  F004         	goto	l121
   473  00094E  0A07               	xorlw	7	; case 4
   474  000950  B4D8               	btfsc	status,2,c
   475  000952  EF7A  F004         	goto	l122
   476  000956  EF8C  F004         	goto	l1110
   477  00095A  EF07  F000         	goto	start
   478  00095E                     __end_of_main:
   479                           	callstack 0
   480                           
   481 ;; *************** function _inicio_LCD *****************
   482 ;; Defined at:
   483 ;;		line 18 in file "maincode3.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   497 ;;      Params:         0       0       0       0       0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0
   499 ;;      Temps:          1       0       0       0       0       0       0       0       0
   500 ;;      Totals:         1       0       0       0       0       0       0       0       0
   501 ;;Total ram usage:        1 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 4
   504 ;; This function calls:
   505 ;;		_BORRAR_LCD
   506 ;;		_CURSOR_HOME
   507 ;;		_CURSOR_ONOFF
   508 ;;		_LCD_CONFIG
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text1
   515  000B7C                     __ptext1:
   516                           	callstack 0
   517  000B7C                     _inicio_LCD:
   518                           	callstack 26
   519  000B7C                     
   520                           ;maincode3.c: 19:     TRISD = 0x00;
   521  000B7C  0E00               	movlw	0
   522  000B7E  6E95               	movwf	149,c	;volatile
   523  000B80                     
   524                           ;maincode3.c: 20:     LCD_CONFIG();
   525  000B80  ECE8  F004         	call	_LCD_CONFIG	;wreg free
   526  000B84                     
   527                           ;maincode3.c: 21:     _delay((unsigned long)((17)*(8000000UL/4000.0)));
   528  000B84  0E2D               	movlw	45
   529  000B86  6E07               	movwf	??_inicio_LCD^0,c
   530  000B88  0E26               	movlw	38
   531  000B8A                     u267:
   532  000B8A  2EE8               	decfsz	wreg,f,c
   533  000B8C  D7FE               	bra	u267
   534  000B8E  2E07               	decfsz	??_inicio_LCD^0,f,c
   535  000B90  D7FC               	bra	u267
   536  000B92  D000               	nop2	
   537  000B94                     
   538                           ;maincode3.c: 22:     BORRAR_LCD();
   539  000B94  ECF6  F005         	call	_BORRAR_LCD	;wreg free
   540  000B98                     
   541                           ;maincode3.c: 23:     CURSOR_HOME();
   542  000B98  ECF2  F005         	call	_CURSOR_HOME	;wreg free
   543  000B9C                     
   544                           ;maincode3.c: 24:     CURSOR_ONOFF(1);
   545  000B9C  0E01               	movlw	1
   546  000B9E  ECA6  F005         	call	_CURSOR_ONOFF
   547  000BA2  0012               	return		;funcret
   548  000BA4                     __end_of_inicio_LCD:
   549                           	callstack 0
   550                           
   551 ;; *************** function _LCD_CONFIG *****************
   552 ;; Defined at:
   553 ;;		line 72 in file "LCD.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         0       0       0       0       0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0       0       0       0       0
   569 ;;      Temps:          1       0       0       0       0       0       0       0       0
   570 ;;      Totals:         1       0       0       0       0       0       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 3
   574 ;; This function calls:
   575 ;;		_ENVIA_LCD_CMD
   576 ;;		_ENVIA_NIBBLE
   577 ;; This function is called by:
   578 ;;		_inicio_LCD
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text2
   583  0009D0                     __ptext2:
   584                           	callstack 0
   585  0009D0                     _LCD_CONFIG:
   586                           	callstack 26
   587  0009D0                     
   588                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   589  0009D0  908C               	bcf	140,0,c	;volatile
   590                           
   591                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   592  0009D2  928C               	bcf	140,1,c	;volatile
   593  0009D4                     
   594                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   595  0009D4  0E30               	movlw	48
   596  0009D6  ECD2  F005         	call	_ENVIA_NIBBLE
   597  0009DA                     
   598                           ;LCD.c: 77:         _delay(24000);
   599  0009DA  0E20               	movlw	32
   600  0009DC  6E06               	movwf	??_LCD_CONFIG^0,c
   601  0009DE  0E2A               	movlw	42
   602  0009E0                     u277:
   603  0009E0  2EE8               	decfsz	wreg,f,c
   604  0009E2  D7FE               	bra	u277
   605  0009E4  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   606  0009E6  D7FC               	bra	u277
   607  0009E8                     
   608                           ;LCD.c: 78:         _delay(24000);
   609  0009E8  0E20               	movlw	32
   610  0009EA  6E06               	movwf	??_LCD_CONFIG^0,c
   611  0009EC  0E2A               	movlw	42
   612  0009EE                     u287:
   613  0009EE  2EE8               	decfsz	wreg,f,c
   614  0009F0  D7FE               	bra	u287
   615  0009F2  2E06               	decfsz	??_LCD_CONFIG^0,f,c
   616  0009F4  D7FC               	bra	u287
   617                           
   618                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   619  0009F6  0E30               	movlw	48
   620  0009F8  ECD2  F005         	call	_ENVIA_NIBBLE
   621  0009FC                     
   622                           ;LCD.c: 83:  _delay(1200);
   623  0009FC  0EF0               	movlw	240
   624  0009FE                     u297:
   625  0009FE  D000               	nop2	
   626  000A00  2EE8               	decfsz	wreg,f,c
   627  000A02  D7FD               	bra	u297
   628  000A04                     
   629                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   630  000A04  0E30               	movlw	48
   631  000A06  ECD2  F005         	call	_ENVIA_NIBBLE
   632  000A0A                     
   633                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   634  000A0A  0E20               	movlw	32
   635  000A0C  ECD2  F005         	call	_ENVIA_NIBBLE
   636  000A10                     
   637                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   638  000A10  0E01               	movlw	1
   639  000A12  EC72  F005         	call	_ENVIA_LCD_CMD
   640  000A16                     
   641                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   642  000A16  0E28               	movlw	40
   643  000A18  EC72  F005         	call	_ENVIA_LCD_CMD
   644  000A1C                     
   645                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   646  000A1C  0E0F               	movlw	15
   647  000A1E  EC72  F005         	call	_ENVIA_LCD_CMD
   648  000A22                     
   649                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   650  000A22  0E06               	movlw	6
   651  000A24  EC72  F005         	call	_ENVIA_LCD_CMD
   652  000A28                     
   653                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   654  000A28  0E01               	movlw	1
   655  000A2A  EC72  F005         	call	_ENVIA_LCD_CMD
   656  000A2E  0012               	return		;funcret
   657  000A30                     __end_of_LCD_CONFIG:
   658                           	callstack 0
   659                           
   660 ;; *************** function _CURSOR_ONOFF *****************
   661 ;; Defined at:
   662 ;;		line 35 in file "LCD.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  estado          1    wreg     unsigned char 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  estado          1    5[COMRAM] unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   676 ;;      Params:         0       0       0       0       0       0       0       0       0
   677 ;;      Locals:         1       0       0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0
   679 ;;      Totals:         1       0       0       0       0       0       0       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 3
   683 ;; This function calls:
   684 ;;		_ENVIA_LCD_CMD
   685 ;; This function is called by:
   686 ;;		_inicio_LCD
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text3
   691  000B4C                     __ptext3:
   692                           	callstack 0
   693  000B4C                     _CURSOR_ONOFF:
   694                           	callstack 26
   695                           
   696                           ;incstack = 0
   697                           ;CURSOR_ONOFF@estado stored from wreg
   698  000B4C  6E06               	movwf	CURSOR_ONOFF@estado^0,c
   699  000B4E                     
   700                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   701  000B4E  5006               	movf	CURSOR_ONOFF@estado^0,w,c
   702  000B50  A4D8               	btfss	status,2,c
   703  000B52  EFAD  F005         	goto	u21
   704  000B56  EFAF  F005         	goto	u20
   705  000B5A                     u21:
   706  000B5A  EFB2  F005         	goto	l882
   707  000B5E                     u20:
   708  000B5E  0E0E               	movlw	14
   709  000B60  EC72  F005         	call	_ENVIA_LCD_CMD
   710  000B64                     l882:
   711                           
   712                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   713  000B64  0406               	decf	CURSOR_ONOFF@estado^0,w,c
   714  000B66  A4D8               	btfss	status,2,c
   715  000B68  EFB8  F005         	goto	u31
   716  000B6C  EFBA  F005         	goto	u30
   717  000B70                     u31:
   718  000B70  EFBD  F005         	goto	l42
   719  000B74                     u30:
   720  000B74  0E0C               	movlw	12
   721  000B76  EC72  F005         	call	_ENVIA_LCD_CMD
   722  000B7A                     l42:
   723  000B7A  0012               	return		;funcret
   724  000B7C                     __end_of_CURSOR_ONOFF:
   725                           	callstack 0
   726                           
   727 ;; *************** function _CURSOR_HOME *****************
   728 ;; Defined at:
   729 ;;		line 30 in file "LCD.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2, status,0, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 3
   750 ;; This function calls:
   751 ;;		_ENVIA_LCD_CMD
   752 ;; This function is called by:
   753 ;;		_inicio_LCD
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text4
   758  000BE4                     __ptext4:
   759                           	callstack 0
   760  000BE4                     _CURSOR_HOME:
   761                           	callstack 26
   762  000BE4                     
   763                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   764  000BE4  0E02               	movlw	2
   765  000BE6  EC72  F005         	call	_ENVIA_LCD_CMD
   766  000BEA  0012               	return		;funcret
   767  000BEC                     __end_of_CURSOR_HOME:
   768                           	callstack 0
   769                           
   770 ;; *************** function _BORRAR_LCD *****************
   771 ;; Defined at:
   772 ;;		line 67 in file "LCD.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 3
   793 ;; This function calls:
   794 ;;		_ENVIA_LCD_CMD
   795 ;; This function is called by:
   796 ;;		_inicio_LCD
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text5
   801  000BEC                     __ptext5:
   802                           	callstack 0
   803  000BEC                     _BORRAR_LCD:
   804                           	callstack 26
   805  000BEC                     
   806                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   807  000BEC  0E01               	movlw	1
   808  000BEE  EC72  F005         	call	_ENVIA_LCD_CMD
   809  000BF2  0012               	return		;funcret
   810  000BF4                     __end_of_BORRAR_LCD:
   811                           	callstack 0
   812                           
   813 ;; *************** function _configuro *****************
   814 ;; Defined at:
   815 ;;		line 8 in file "maincode3.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         0       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text6
   844  000BC0                     __ptext6:
   845                           	callstack 0
   846  000BC0                     _configuro:
   847                           	callstack 29
   848  000BC0                     
   849                           ;maincode3.c: 9:     OSCCON = 0x70;
   850  000BC0  0E70               	movlw	112
   851  000BC2  6ED3               	movwf	211,c	;volatile
   852  000BC4                     
   853                           ;maincode3.c: 10:     TRISEbits.RE0 = 0;
   854  000BC4  9096               	bcf	150,0,c	;volatile
   855                           
   856                           ;maincode3.c: 11:     ADCON1 = 0x0F;
   857  000BC6  0E0F               	movlw	15
   858  000BC8  6EC1               	movwf	193,c	;volatile
   859  000BCA                     
   860                           ;maincode3.c: 12:     INTCONbits.GIE = 1;
   861  000BCA  8EF2               	bsf	242,7,c	;volatile
   862  000BCC                     
   863                           ;maincode3.c: 13:     INTCONbits.INT0IE = 1;
   864  000BCC  88F2               	bsf	242,4,c	;volatile
   865  000BCE                     
   866                           ;maincode3.c: 14:     INTCON2bits.RBPU = 0;
   867  000BCE  9EF1               	bcf	241,7,c	;volatile
   868  000BD0                     
   869                           ;maincode3.c: 15:     INTCON2bits.INTEDG0 = 0;
   870  000BD0  9CF1               	bcf	241,6,c	;volatile
   871  000BD2  0012               	return		;funcret
   872  000BD4                     __end_of_configuro:
   873                           	callstack 0
   874                           
   875 ;; *************** function _POS_CURSOR *****************
   876 ;; Defined at:
   877 ;;		line 6 in file "LCD.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  fila            1    wreg     unsigned char 
   880 ;;  columna         1    5[COMRAM] unsigned char 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  fila            1    6[COMRAM] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   892 ;;      Params:         1       0       0       0       0       0       0       0       0
   893 ;;      Locals:         1       0       0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 3
   899 ;; This function calls:
   900 ;;		_ENVIA_LCD_CMD
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text7
   907  000AAA                     __ptext7:
   908                           	callstack 0
   909  000AAA                     _POS_CURSOR:
   910                           	callstack 27
   911                           
   912                           ;incstack = 0
   913                           ;POS_CURSOR@fila stored from wreg
   914  000AAA  6E07               	movwf	POS_CURSOR@fila^0,c
   915  000AAC                     
   916                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   917  000AAC  0407               	decf	POS_CURSOR@fila^0,w,c
   918  000AAE  A4D8               	btfss	status,2,c
   919  000AB0  EF5C  F005         	goto	u131
   920  000AB4  EF5E  F005         	goto	u130
   921  000AB8                     u131:
   922  000AB8  EF64  F005         	goto	l1064
   923  000ABC                     u130:
   924  000ABC                     
   925                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   926  000ABC  5006               	movf	POS_CURSOR@columna^0,w,c
   927  000ABE  0F80               	addlw	128
   928  000AC0  EC72  F005         	call	_ENVIA_LCD_CMD
   929                           
   930                           ;LCD.c: 11:  }
   931  000AC4  EF71  F005         	goto	l24
   932  000AC8                     l1064:
   933  000AC8  0E02               	movlw	2
   934  000ACA  1807               	xorwf	POS_CURSOR@fila^0,w,c
   935  000ACC  A4D8               	btfss	status,2,c
   936  000ACE  EF6B  F005         	goto	u141
   937  000AD2  EF6D  F005         	goto	u140
   938  000AD6                     u141:
   939  000AD6  EF71  F005         	goto	l24
   940  000ADA                     u140:
   941  000ADA                     
   942                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   943  000ADA  5006               	movf	POS_CURSOR@columna^0,w,c
   944  000ADC  0FC0               	addlw	192
   945  000ADE  EC72  F005         	call	_ENVIA_LCD_CMD
   946  000AE2                     l24:
   947  000AE2  0012               	return		;funcret
   948  000AE4                     __end_of_POS_CURSOR:
   949                           	callstack 0
   950                           
   951 ;; *************** function _ENVIA_LCD_CMD *****************
   952 ;; Defined at:
   953 ;;		line 104 in file "LCD.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  dato            1    wreg     unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  dato            1    3[COMRAM] unsigned char 
   958 ;;  aux             1    4[COMRAM] unsigned char 
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, status,2, status,0, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         0       0       0       0       0       0       0       0       0
   969 ;;      Locals:         2       0       0       0       0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0       0       0       0       0
   971 ;;      Totals:         2       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:        2 bytes
   973 ;; Hardware stack levels used: 1
   974 ;; Hardware stack levels required when called: 2
   975 ;; This function calls:
   976 ;;		_ENVIA_NIBBLE
   977 ;;		_LEER_LCD
   978 ;; This function is called by:
   979 ;;		_POS_CURSOR
   980 ;;		_CURSOR_HOME
   981 ;;		_CURSOR_ONOFF
   982 ;;		_BORRAR_LCD
   983 ;;		_LCD_CONFIG
   984 ;;		_BLINK_CURSOR
   985 ;;		_DISPLAY_ONOFF
   986 ;;		_GENERACARACTER
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text8
   991  000AE4                     __ptext8:
   992                           	callstack 0
   993  000AE4                     _ENVIA_LCD_CMD:
   994                           	callstack 26
   995                           
   996                           ;incstack = 0
   997                           ;ENVIA_LCD_CMD@dato stored from wreg
   998  000AE4  6E04               	movwf	ENVIA_LCD_CMD@dato^0,c
   999  000AE6                     
  1000                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1001  000AE6  908C               	bcf	140,0,c	;volatile
  1002  000AE8                     
  1003                           ;LCD.c: 108:  LEER_LCD();
  1004  000AE8  ECAF  F004         	call	_LEER_LCD	;wreg free
  1005  000AEC                     
  1006                           ;LCD.c: 109:  TRISD = 0b00000000;
  1007  000AEC  0E00               	movlw	0
  1008  000AEE  6E95               	movwf	149,c	;volatile
  1009  000AF0                     
  1010                           ;LCD.c: 111:         _delay(1200);
  1011  000AF0  0EF0               	movlw	240
  1012  000AF2                     u307:
  1013  000AF2  D000               	nop2	
  1014  000AF4  2EE8               	decfsz	wreg,f,c
  1015  000AF6  D7FD               	bra	u307
  1016  000AF8                     
  1017                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1018  000AF8  928C               	bcf	140,1,c	;volatile
  1019  000AFA                     
  1020                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1021  000AFA  948C               	bcf	140,2,c	;volatile
  1022  000AFC                     
  1023                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1024  000AFC  908C               	bcf	140,0,c	;volatile
  1025  000AFE                     
  1026                           ;LCD.c: 115:  aux = dato & 0xF0;
  1027  000AFE  5004               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1028  000B00  0BF0               	andlw	240
  1029  000B02  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1030  000B04                     
  1031                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1032  000B04  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1033  000B06  ECD2  F005         	call	_ENVIA_NIBBLE
  1034  000B0A                     
  1035                           ;LCD.c: 117:  aux = dato<<4;
  1036  000B0A  3804               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1037  000B0C  0BF0               	andlw	240
  1038  000B0E  6E05               	movwf	ENVIA_LCD_CMD@aux^0,c
  1039  000B10                     
  1040                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1041  000B10  5005               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1042  000B12  ECD2  F005         	call	_ENVIA_NIBBLE
  1043  000B16  0012               	return		;funcret
  1044  000B18                     __end_of_ENVIA_LCD_CMD:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _ESCRIBE_MENSAJE *****************
  1048 ;; Defined at:
  1049 ;;		line 41 in file "LCD.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  cadena          2    5[COMRAM] PTR const unsigned char 
  1052 ;;		 -> STR_2(13), STR_1(17), 
  1053 ;;  tam             1    7[COMRAM] unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  i               1   10[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:         3       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1068 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:        6 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 3
  1072 ;; This function calls:
  1073 ;;		_ENVIA_CHAR
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text9
  1080  000A30                     __ptext9:
  1081                           	callstack 0
  1082  000A30                     _ESCRIBE_MENSAJE:
  1083                           	callstack 27
  1084  000A30                     
  1085                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1086  000A30  0E00               	movlw	0
  1087  000A32  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1088                           
  1089                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1090  000A34  0E00               	movlw	0
  1091  000A36  6E0B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1092  000A38  EF2D  F005         	goto	l1074
  1093  000A3C                     l1070:
  1094                           
  1095                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1096  000A3C  500B               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1097  000A3E  2406               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1098  000A40  6E09               	movwf	??_ESCRIBE_MENSAJE^0,c
  1099  000A42  0E00               	movlw	0
  1100  000A44  2007               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1101  000A46  6E0A               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1102  000A48  C009  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1103  000A4C  C00A  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1104  000A50                     	if	0	;tblptru may be non-zero
  1105  000A50                     	endif
  1106  000A50                     	if	0	;tblptru may be non-zero
  1107  000A50                     	endif
  1108  000A50  0008               	tblrd		*
  1109  000A52  50F5               	movf	tablat,w,c
  1110  000A54  EC8C  F005         	call	_ENVIA_CHAR
  1111  000A58                     
  1112                           ;LCD.c: 47:  }
  1113  000A58  2A0B               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1114  000A5A                     l1074:
  1115  000A5A  5008               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1116  000A5C  5C0B               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1117  000A5E  A0D8               	btfss	status,0,c
  1118  000A60  EF34  F005         	goto	u151
  1119  000A64  EF36  F005         	goto	u150
  1120  000A68                     u151:
  1121  000A68  EF1E  F005         	goto	l1070
  1122  000A6C                     u150:
  1123  000A6C  0012               	return		;funcret
  1124  000A6E                     __end_of_ESCRIBE_MENSAJE:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _ENVIA_CHAR *****************
  1128 ;; Defined at:
  1129 ;;		line 50 in file "LCD.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  dato            1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  dato            1    3[COMRAM] unsigned char 
  1134 ;;  aux             1    4[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1144 ;;      Params:         0       0       0       0       0       0       0       0       0
  1145 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1147 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1148 ;;Total ram usage:        2 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		_ENVIA_NIBBLE
  1153 ;;		_LEER_LCD
  1154 ;; This function is called by:
  1155 ;;		_ESCRIBE_MENSAJE
  1156 ;;		_GENERACARACTER
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text10
  1161  000B18                     __ptext10:
  1162                           	callstack 0
  1163  000B18                     _ENVIA_CHAR:
  1164                           	callstack 27
  1165                           
  1166                           ;incstack = 0
  1167                           ;ENVIA_CHAR@dato stored from wreg
  1168  000B18  6E04               	movwf	ENVIA_CHAR@dato^0,c
  1169  000B1A                     
  1170                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1171  000B1A  808C               	bsf	140,0,c	;volatile
  1172  000B1C                     
  1173                           ;LCD.c: 54:  LEER_LCD();
  1174  000B1C  ECAF  F004         	call	_LEER_LCD	;wreg free
  1175  000B20                     
  1176                           ;LCD.c: 55:  TRISD = 0x00;
  1177  000B20  0E00               	movlw	0
  1178  000B22  6E95               	movwf	149,c	;volatile
  1179  000B24                     
  1180                           ;LCD.c: 56:         _delay(1200);
  1181  000B24  0EF0               	movlw	240
  1182  000B26                     u317:
  1183  000B26  D000               	nop2	
  1184  000B28  2EE8               	decfsz	wreg,f,c
  1185  000B2A  D7FD               	bra	u317
  1186  000B2C                     
  1187                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1188  000B2C  928C               	bcf	140,1,c	;volatile
  1189  000B2E                     
  1190                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1191  000B2E  948C               	bcf	140,2,c	;volatile
  1192  000B30                     
  1193                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1194  000B30  808C               	bsf	140,0,c	;volatile
  1195  000B32                     
  1196                           ;LCD.c: 61:  aux = dato & 0xF0;
  1197  000B32  5004               	movf	ENVIA_CHAR@dato^0,w,c
  1198  000B34  0BF0               	andlw	240
  1199  000B36  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1200  000B38                     
  1201                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1202  000B38  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1203  000B3A  ECD2  F005         	call	_ENVIA_NIBBLE
  1204  000B3E                     
  1205                           ;LCD.c: 63:  aux = dato << 4;
  1206  000B3E  3804               	swapf	ENVIA_CHAR@dato^0,w,c
  1207  000B40  0BF0               	andlw	240
  1208  000B42  6E05               	movwf	ENVIA_CHAR@aux^0,c
  1209  000B44                     
  1210                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1211  000B44  5005               	movf	ENVIA_CHAR@aux^0,w,c
  1212  000B46  ECD2  F005         	call	_ENVIA_NIBBLE
  1213  000B4A  0012               	return		;funcret
  1214  000B4C                     __end_of_ENVIA_CHAR:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _LEER_LCD *****************
  1218 ;; Defined at:
  1219 ;;		line 121 in file "LCD.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  aux             1    2[COMRAM] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0
  1234 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1236 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1237 ;;Total ram usage:        1 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_ENVIA_CHAR
  1244 ;;		_ENVIA_LCD_CMD
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text11
  1249  00095E                     __ptext11:
  1250                           	callstack 0
  1251  00095E                     _LEER_LCD:
  1252                           	callstack 26
  1253  00095E                     
  1254                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1255  00095E  0EF8               	movlw	248
  1256  000960  6E95               	movwf	149,c	;volatile
  1257  000962                     
  1258                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1259  000962  908C               	bcf	140,0,c	;volatile
  1260  000964                     
  1261                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1262  000964  828C               	bsf	140,1,c	;volatile
  1263  000966                     
  1264                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1265  000966  848C               	bsf	140,2,c	;volatile
  1266  000968                     
  1267                           ;LCD.c: 128:         _delay(1200);
  1268  000968  0EF0               	movlw	240
  1269  00096A                     u327:
  1270  00096A  D000               	nop2	
  1271  00096C  2EE8               	decfsz	wreg,f,c
  1272  00096E  D7FD               	bra	u327
  1273  000970                     
  1274                           ;LCD.c: 130:  aux = PORTD;
  1275  000970  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1276  000974                     
  1277                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1278  000974  948C               	bcf	140,2,c	;volatile
  1279  000976                     
  1280                           ;LCD.c: 132:         _delay(1200);
  1281  000976  0EF0               	movlw	240
  1282  000978                     u337:
  1283  000978  D000               	nop2	
  1284  00097A  2EE8               	decfsz	wreg,f,c
  1285  00097C  D7FD               	bra	u337
  1286  00097E                     
  1287                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1288  00097E  848C               	bsf	140,2,c	;volatile
  1289  000980                     
  1290                           ;LCD.c: 135:         _delay(1200);
  1291  000980  0EF0               	movlw	240
  1292  000982                     u347:
  1293  000982  D000               	nop2	
  1294  000984  2EE8               	decfsz	wreg,f,c
  1295  000986  D7FD               	bra	u347
  1296  000988                     
  1297                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1298  000988  948C               	bcf	140,2,c	;volatile
  1299  00098A                     l830:
  1300                           
  1301                           ;LCD.c: 138:  aux = aux & 0x80;
  1302  00098A  5003               	movf	LEER_LCD@aux^0,w,c
  1303  00098C  0B80               	andlw	128
  1304  00098E  6E03               	movwf	LEER_LCD@aux^0,c
  1305                           
  1306                           ;LCD.c: 139:  while(aux == 0x80)
  1307  000990  EFDE  F004         	goto	l844
  1308  000994                     l67:
  1309                           
  1310                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1311  000994  848C               	bsf	140,2,c	;volatile
  1312  000996                     
  1313                           ;LCD.c: 142:             _delay(1200);
  1314  000996  0EF0               	movlw	240
  1315  000998                     u357:
  1316  000998  D000               	nop2	
  1317  00099A  2EE8               	decfsz	wreg,f,c
  1318  00099C  D7FD               	bra	u357
  1319  00099E                     
  1320                           ;LCD.c: 143:             aux = PORTD;
  1321  00099E  CF83 F003          	movff	3971,LEER_LCD@aux	;volatile
  1322  0009A2                     
  1323                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1324  0009A2  948C               	bcf	140,2,c	;volatile
  1325                           
  1326                           ;LCD.c: 145:             _delay(1200);
  1327  0009A4  0EF0               	movlw	240
  1328  0009A6                     u367:
  1329  0009A6  D000               	nop2	
  1330  0009A8  2EE8               	decfsz	wreg,f,c
  1331  0009AA  D7FD               	bra	u367
  1332  0009AC                     
  1333                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1334  0009AC  848C               	bsf	140,2,c	;volatile
  1335                           
  1336                           ;LCD.c: 147:             _delay(1200);
  1337  0009AE  0EF0               	movlw	240
  1338  0009B0                     u377:
  1339  0009B0  D000               	nop2	
  1340  0009B2  2EE8               	decfsz	wreg,f,c
  1341  0009B4  D7FD               	bra	u377
  1342  0009B6                     
  1343                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1344  0009B6  948C               	bcf	140,2,c	;volatile
  1345  0009B8  EFC5  F004         	goto	l830
  1346  0009BC                     l844:
  1347                           
  1348                           ;LCD.c: 139:  while(aux == 0x80)
  1349  0009BC  0E80               	movlw	128
  1350  0009BE  1803               	xorwf	LEER_LCD@aux^0,w,c
  1351  0009C0  B4D8               	btfsc	status,2,c
  1352  0009C2  EFE5  F004         	goto	u11
  1353  0009C6  EFE7  F004         	goto	u10
  1354  0009CA                     u11:
  1355  0009CA  EFCA  F004         	goto	l67
  1356  0009CE                     u10:
  1357  0009CE  0012               	return		;funcret
  1358  0009D0                     __end_of_LEER_LCD:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _ENVIA_NIBBLE *****************
  1362 ;; Defined at:
  1363 ;;		line 93 in file "LCD.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  dato            1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  dato            1    2[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1380 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1381 ;;Total ram usage:        1 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_ENVIA_CHAR
  1388 ;;		_LCD_CONFIG
  1389 ;;		_ENVIA_LCD_CMD
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text12
  1394  000BA4                     __ptext12:
  1395                           	callstack 0
  1396  000BA4                     _ENVIA_NIBBLE:
  1397                           	callstack 27
  1398                           
  1399                           ;incstack = 0
  1400                           ;ENVIA_NIBBLE@dato stored from wreg
  1401  000BA4  6E03               	movwf	ENVIA_NIBBLE@dato^0,c
  1402  000BA6                     
  1403                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1404  000BA6  0E0F               	movlw	15
  1405  000BA8  168C               	andwf	140,f,c	;volatile
  1406                           
  1407                           ;LCD.c: 96:  dato &= 0xF0;
  1408  000BAA  0EF0               	movlw	240
  1409  000BAC  1603               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1410                           
  1411                           ;LCD.c: 97:  LATD|= dato;
  1412  000BAE  5003               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1413  000BB0  128C               	iorwf	140,f,c	;volatile
  1414  000BB2                     
  1415                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1416  000BB2  848C               	bsf	140,2,c	;volatile
  1417  000BB4                     
  1418                           ;LCD.c: 100:         _delay(1200);
  1419  000BB4  0EF0               	movlw	240
  1420  000BB6                     u387:
  1421  000BB6  D000               	nop2	
  1422  000BB8  2EE8               	decfsz	wreg,f,c
  1423  000BBA  D7FD               	bra	u387
  1424  000BBC                     
  1425                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1426  000BBC  948C               	bcf	140,2,c	;volatile
  1427  000BBE  0012               	return		;funcret
  1428  000BC0                     __end_of_ENVIA_NIBBLE:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _INT0_ISR *****************
  1432 ;; Defined at:
  1433 ;;		line 70 in file "maincode3.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1449 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1450 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1451 ;;Total ram usage:        2 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		Interrupt level 2
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	intcode
  1461  000008                     __pintcode:
  1462                           	callstack 0
  1463  000008                     _INT0_ISR:
  1464                           	callstack 26
  1465                           
  1466                           ;incstack = 0
  1467  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1468  00000A  ED37  F005         	call	int_func,f	;refresh shadow registers
  1469                           
  1470                           	psect	intcode_body
  1471  000A6E                     __pintcode_body:
  1472                           	callstack 26
  1473  000A6E                     int_func:
  1474                           	callstack 26
  1475  000A6E  0006               	pop		; remove dummy address from shadow register refresh
  1476  000A70                     
  1477                           ;maincode3.c: 71:     INTCONbits.INT0IF = 0;
  1478  000A70  92F2               	bcf	242,1,c	;volatile
  1479  000A72                     
  1480                           ;maincode3.c: 72:     if(indicador == 4){
  1481  000A72  0E04               	movlw	4
  1482  000A74  180E               	xorwf	_indicador^0,w,c
  1483  000A76  A4D8               	btfss	status,2,c
  1484  000A78  EF40  F005         	goto	i2u12_41
  1485  000A7C  EF42  F005         	goto	i2u12_40
  1486  000A80                     i2u12_41:
  1487  000A80  EF46  F005         	goto	i2l1052
  1488  000A84                     i2u12_40:
  1489  000A84                     
  1490                           ;maincode3.c: 73:         indicador = 0;
  1491  000A84  0E00               	movlw	0
  1492  000A86  6E0E               	movwf	_indicador^0,c
  1493                           
  1494                           ;maincode3.c: 74:     }
  1495  000A88  EF47  F005         	goto	i2l1054
  1496  000A8C                     i2l1052:
  1497                           
  1498                           ;maincode3.c: 76:         indicador++;
  1499  000A8C  2A0E               	incf	_indicador^0,f,c
  1500  000A8E                     i2l1054:
  1501                           
  1502                           ;maincode3.c: 78:     _delay((unsigned long)((99)*(8000000UL/4000.0)));
  1503  000A8E  0E02               	movlw	2
  1504  000A90  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1505  000A92  0E02               	movlw	2
  1506  000A94  6E01               	movwf	??_INT0_ISR^0,c
  1507  000A96  0E21               	movlw	33
  1508  000A98                     i2u39_47:
  1509  000A98  2EE8               	decfsz	wreg,f,c
  1510  000A9A  D7FE               	bra	i2u39_47
  1511  000A9C  2E01               	decfsz	??_INT0_ISR^0,f,c
  1512  000A9E  D7FC               	bra	i2u39_47
  1513  000AA0  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1514  000AA2  D7FA               	bra	i2u39_47
  1515  000AA4  F000               	nop	
  1516  000AA6  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1517  000AA8  0011               	retfie		f
  1518  000AAA                     __end_of_INT0_ISR:
  1519                           	callstack 0
  1520                           
  1521                           	psect	rparam
  1522  0000                     
  1523                           	psect	temp
  1524  00000F                     btemp:
  1525                           	callstack 0
  1526  00000F                     	ds	1
  1527  0000                     int$flags	set	btemp
  1528  0000                     wtemp8	set	btemp+1
  1529  0000                     ttemp5	set	btemp+1
  1530  0000                     ttemp6	set	btemp+4
  1531  0000                     ttemp7	set	btemp+8
  1532                           
  1533                           	psect	idloc
  1534                           
  1535                           ;Config register IDLOC0 @ 0x200000
  1536                           ;	unspecified, using default values
  1537  200000                     	org	2097152
  1538  200000  FF                 	db	255
  1539                           
  1540                           ;Config register IDLOC1 @ 0x200001
  1541                           ;	unspecified, using default values
  1542  200001                     	org	2097153
  1543  200001  FF                 	db	255
  1544                           
  1545                           ;Config register IDLOC2 @ 0x200002
  1546                           ;	unspecified, using default values
  1547  200002                     	org	2097154
  1548  200002  FF                 	db	255
  1549                           
  1550                           ;Config register IDLOC3 @ 0x200003
  1551                           ;	unspecified, using default values
  1552  200003                     	org	2097155
  1553  200003  FF                 	db	255
  1554                           
  1555                           ;Config register IDLOC4 @ 0x200004
  1556                           ;	unspecified, using default values
  1557  200004                     	org	2097156
  1558  200004  FF                 	db	255
  1559                           
  1560                           ;Config register IDLOC5 @ 0x200005
  1561                           ;	unspecified, using default values
  1562  200005                     	org	2097157
  1563  200005  FF                 	db	255
  1564                           
  1565                           ;Config register IDLOC6 @ 0x200006
  1566                           ;	unspecified, using default values
  1567  200006                     	org	2097158
  1568  200006  FF                 	db	255
  1569                           
  1570                           ;Config register IDLOC7 @ 0x200007
  1571                           ;	unspecified, using default values
  1572  200007                     	org	2097159
  1573  200007  FF                 	db	255
  1574                           
  1575                           	psect	config
  1576                           
  1577                           ;Config register CONFIG1L @ 0x300000
  1578                           ;	PLL Prescaler Selection bits
  1579                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1580                           ;	System Clock Postscaler Selection bits
  1581                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1582                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1583                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1584  300000                     	org	3145728
  1585  300000  00                 	db	0
  1586                           
  1587                           ;Config register CONFIG1H @ 0x300001
  1588                           ;	Oscillator Selection bits
  1589                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1590                           ;	Fail-Safe Clock Monitor Enable bit
  1591                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1592                           ;	Internal/External Oscillator Switchover bit
  1593                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1594  300001                     	org	3145729
  1595  300001  08                 	db	8
  1596                           
  1597                           ;Config register CONFIG2L @ 0x300002
  1598                           ;	Power-up Timer Enable bit
  1599                           ;	PWRT = ON, PWRT enabled
  1600                           ;	Brown-out Reset Enable bits
  1601                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1602                           ;	Brown-out Reset Voltage bits
  1603                           ;	BORV = 3, Minimum setting 2.05V
  1604                           ;	USB Voltage Regulator Enable bit
  1605                           ;	VREGEN = OFF, USB voltage regulator disabled
  1606  300002                     	org	3145730
  1607  300002  18                 	db	24
  1608                           
  1609                           ;Config register CONFIG2H @ 0x300003
  1610                           ;	Watchdog Timer Enable bit
  1611                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1612                           ;	Watchdog Timer Postscale Select bits
  1613                           ;	WDTPS = 32768, 1:32768
  1614  300003                     	org	3145731
  1615  300003  1E                 	db	30
  1616                           
  1617                           ; Padding undefined space
  1618  300004                     	org	3145732
  1619  300004  FF                 	db	255
  1620                           
  1621                           ;Config register CONFIG3H @ 0x300005
  1622                           ;	CCP2 MUX bit
  1623                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1624                           ;	PORTB A/D Enable bit
  1625                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1626                           ;	Low-Power Timer 1 Oscillator Enable bit
  1627                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1628                           ;	MCLR Pin Enable bit
  1629                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1630  300005                     	org	3145733
  1631  300005  81                 	db	129
  1632                           
  1633                           ;Config register CONFIG4L @ 0x300006
  1634                           ;	Stack Full/Underflow Reset Enable bit
  1635                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1636                           ;	Single-Supply ICSP Enable bit
  1637                           ;	LVP = OFF, Single-Supply ICSP disabled
  1638                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1639                           ;	ICPRT = OFF, ICPORT disabled
  1640                           ;	Extended Instruction Set Enable bit
  1641                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1642                           ;	Background Debugger Enable bit
  1643                           ;	DEBUG = 0x1, unprogrammed default
  1644  300006                     	org	3145734
  1645  300006  81                 	db	129
  1646                           
  1647                           ; Padding undefined space
  1648  300007                     	org	3145735
  1649  300007  FF                 	db	255
  1650                           
  1651                           ;Config register CONFIG5L @ 0x300008
  1652                           ;	Code Protection bit
  1653                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1654                           ;	Code Protection bit
  1655                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1656                           ;	Code Protection bit
  1657                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1658                           ;	Code Protection bit
  1659                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1660  300008                     	org	3145736
  1661  300008  0F                 	db	15
  1662                           
  1663                           ;Config register CONFIG5H @ 0x300009
  1664                           ;	Boot Block Code Protection bit
  1665                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1666                           ;	Data EEPROM Code Protection bit
  1667                           ;	CPD = OFF, Data EEPROM is not code-protected
  1668  300009                     	org	3145737
  1669  300009  C0                 	db	192
  1670                           
  1671                           ;Config register CONFIG6L @ 0x30000A
  1672                           ;	Write Protection bit
  1673                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1674                           ;	Write Protection bit
  1675                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1676                           ;	Write Protection bit
  1677                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1678                           ;	Write Protection bit
  1679                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1680  30000A                     	org	3145738
  1681  30000A  0F                 	db	15
  1682                           
  1683                           ;Config register CONFIG6H @ 0x30000B
  1684                           ;	Configuration Register Write Protection bit
  1685                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1686                           ;	Boot Block Write Protection bit
  1687                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1688                           ;	Data EEPROM Write Protection bit
  1689                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1690  30000B                     	org	3145739
  1691  30000B  E0                 	db	224
  1692                           
  1693                           ;Config register CONFIG7L @ 0x30000C
  1694                           ;	Table Read Protection bit
  1695                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1696                           ;	Table Read Protection bit
  1697                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1698                           ;	Table Read Protection bit
  1699                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1700                           ;	Table Read Protection bit
  1701                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1702  30000C                     	org	3145740
  1703  30000C  0F                 	db	15
  1704                           
  1705                           ;Config register CONFIG7H @ 0x30000D
  1706                           ;	Boot Block Table Read Protection bit
  1707                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1708  30000D                     	org	3145741
  1709  30000D  40                 	db	64
  1710                           tosu	equ	0xFFF
  1711                           tosh	equ	0xFFE
  1712                           tosl	equ	0xFFD
  1713                           stkptr	equ	0xFFC
  1714                           pclatu	equ	0xFFB
  1715                           pclath	equ	0xFFA
  1716                           pcl	equ	0xFF9
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           indf0	equ	0xFEF
  1724                           postinc0	equ	0xFEE
  1725                           postdec0	equ	0xFED
  1726                           preinc0	equ	0xFEC
  1727                           plusw0	equ	0xFEB
  1728                           fsr0h	equ	0xFEA
  1729                           fsr0l	equ	0xFE9
  1730                           wreg	equ	0xFE8
  1731                           indf1	equ	0xFE7
  1732                           postinc1	equ	0xFE6
  1733                           postdec1	equ	0xFE5
  1734                           preinc1	equ	0xFE4
  1735                           plusw1	equ	0xFE3
  1736                           fsr1h	equ	0xFE2
  1737                           fsr1l	equ	0xFE1
  1738                           bsr	equ	0xFE0
  1739                           indf2	equ	0xFDF
  1740                           postinc2	equ	0xFDE
  1741                           postdec2	equ	0xFDD
  1742                           preinc2	equ	0xFDC
  1743                           plusw2	equ	0xFDB
  1744                           fsr2h	equ	0xFDA
  1745                           fsr2l	equ	0xFD9
  1746                           status	equ	0xFD8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[13]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _inicio_LCD->_CURSOR_ONOFF
    _inicio_LCD->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1400
                                             11 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                         _inicio_LCD
 ---------------------------------------------------------------------------------
 (1) _inicio_LCD                                           1     1      0     525
                                              6 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              5 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _inicio_LCD
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D       E       1       14.9%
BITBIGSFRhhll       2A      0       0      23        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BITBIGSFRhhhl       1D      0       0      21        0.0%
BITBIGSFRhhlh       11      0       0      22        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlh          8      0       0      25        0.0%
BITBIGSFRhl          7      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      27        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Oct 27 16:22:24 2022

                     l24 0AE2                       l42 0B7A                       l51 0B4A  
                     l60 0BBE                       l37 0BEA                       l54 0BF2  
                     l63 0B16                       l48 0A6C                       l57 0A2E  
                     l67 0994                       l69 09CE                       u10 09CE  
                     u11 09CA                       u20 0B5E                       u21 0B5A  
                     u30 0B74                       u31 0B70            ENVIA_CHAR@aux 0005  
                    l110 0BA2                      l120 08A8                      l121 08CE  
                    l122 08F4                      l107 0BD2                      l117 0860  
                    l119 0880                      l810 0962                      l820 0974  
                    l812 0964                      l900 0B32                      l830 098A  
                    l822 0976                      l814 0966                      l902 0B38  
                    l910 09D0                      l840 09B6                      l832 0996  
                    l824 097E                      l816 0968                      l808 095E  
                    l904 0B3E                      l920 0A04                      l912 09D4  
                    l850 0BB4                      l834 099E                      l826 0980  
                    l818 0970                      l906 0B44                      l930 0A22  
                    l922 0A0A                      l914 09DA                      l852 0BBC  
                    l836 09A2                      l844 09BC                      l828 0988  
                    l860 0AF0                      l908 0BEC                      l932 0A28  
                    l924 0A10                      l916 09E8                      l846 0BA6  
                    l838 09AC                      l870 0B04                      l862 0AF8  
                    l854 0AE6                      l950 0BC0                      l926 0A16  
                    l918 09FC                      l848 0BB2                      l872 0B0A  
                    l864 0AFA                      l856 0AE8                      l960 0BD0  
                    l952 0BC4                      l880 0B5E                      l928 0A1C  
                    l890 0B20                      l874 0B10                      l866 0AFC  
                    l858 0AEC                      l954 0BCA                      l882 0B64  
                    l970 0B98                      l962 0B7C                      l892 0B24  
                    l868 0AFE                      l956 0BCC                      l876 0BE4  
                    l884 0B74                      l972 0B9C                      l964 0B80  
                    l894 0B2C                      l886 0B1A                      l958 0BCE  
                    l878 0B4E                      l966 0B84                      l896 0B2E  
                    l888 0B1C                      l968 0B94                      l898 0B30  
                    u130 0ABC                      u131 0AB8                      u140 0ADA  
                    u141 0AD6                      u150 0A6C                      u151 0A68  
                    u207 08B0                      u217 08C2                      u307 0AF2  
                    u227 08D6                      u317 0B26                      u237 08E8  
                    u327 096A                      u247 08FC                      u167 0864  
                    u337 0978                      u257 090E                      u177 0872  
                    u347 0982                      u267 0B8A                      u187 0888  
                    u357 0998                      u277 09E0                      u197 089A  
                    u367 09A6                      u287 09EE                      u377 09B0  
                    u297 09FE                      u387 0BB6              LEER_LCD@aux 0003  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0003  
         ENVIA_CHAR@dato 0004                     l1100 08D0                     l1102 08E0  
                   l1110 0918                     l1120 092C                     l1104 08F6  
                   l1106 0906                     l1060 0AAC                     l1070 0A3C  
                   l1062 0ABC                     l1072 0A58                     l1064 0AC8  
                   l1080 0828                     l1074 0A5A                     l1066 0ADA  
                   l1090 086A                     l1082 0832                     l1068 0A30  
                   l1092 0882                     l1084 0842                     l1076 0820  
                   l1094 0892                     l1086 084C                     l1078 0824  
                   l1096 08AA                     l1088 0862                     l1098 08BA  
                   STR_1 0801                     STR_2 0812                     _LATD 000F8C  
                   _main 0820                     btemp 000F                     start 000E  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0004  
       __end_of_LEER_LCD 09D0         __end_of_INT0_ISR 0AAA                    ?_main 0001  
                  i2l132 0AA6                    _PORTD 000F83                    _TRISD 000F95  
            ?_POS_CURSOR 0006                    tablat 000FF5                    ttemp5 0010  
                  ttemp6 0013                    ttemp7 0017                    status 000FD8  
                  wtemp8 0010           ??_CURSOR_ONOFF 0006          __initialization 0BD4  
           __end_of_main 095E          _ESCRIBE_MENSAJE 0A30                   ??_main 000C  
          __activetblptr 000002                   _ADCON1 000FC1                   i2l1050 0A84  
                 i2l1052 0A8C                   i2l1054 0A8E                   i2l1046 0A70  
                 i2l1048 0A72                   _OSCCON 000FD3     __end_of_ENVIA_NIBBLE 0BC0  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ??_BORRAR_LCD 0006  
              ?_LEER_LCD 0001               __accesstop 0060  __end_of__initialization 0BD6  
              ?_INT0_ISR 0001             ??_LCD_CONFIG 0006            ___rparam_used 000001  
           ??_ENVIA_CHAR 0004  __end_of_ESCRIBE_MENSAJE 0A6E           __pcstackCOMRAM 0001  
     __end_of_BORRAR_LCD 0BF4         ENVIA_LCD_CMD@aux 0005     __end_of_CURSOR_ONOFF 0B7C  
     __end_of_LCD_CONFIG 0A30       __end_of_ENVIA_CHAR 0B4C               ??_LEER_LCD 0003  
       ENVIA_NIBBLE@dato 0003               ??_INT0_ISR 0001                  i2u12_40 0A84  
                i2u12_41 0A80                  i2u39_47 0A98             ??_POS_CURSOR 0007  
                __Hparam 0000               _inicio_LCD 0B7C                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0006        __end_of_configuro 0BD4             __psmallconst 0800  
  __end_of_ENVIA_LCD_CMD 0B18                  __pcinit 0BD4       __end_of_POS_CURSOR 0AE4  
                __ramtop 0800                  __ptext0 0820                  __ptext1 0B7C  
                __ptext2 09D0                  __ptext3 0B4C                  __ptext4 0BE4  
                __ptext5 0BEC                  __ptext6 0BC0                  __ptext7 0AAA  
                __ptext8 0AE4                  __ptext9 0A30           __pintcode_body 0A6E  
           _ENVIA_NIBBLE 0BA4     end_of_initialization 0BD6            __Lmediumconst 0000  
                int_func 0A6E                _TRISEbits 000F96              ?_inicio_LCD 0001  
           _CURSOR_ONOFF 0B4C       CURSOR_ONOFF@estado 0006            ??_CURSOR_HOME 0006  
    start_initialization 0BD4        ENVIA_LCD_CMD@dato 0004              __pbssCOMRAM 000E  
    __end_of_CURSOR_HOME 0BEC                __pintcode 0008                _configuro 0BC0  
            __smallconst 0800                _indicador 000E                 _LEER_LCD 095E  
               _INT0_ISR 0008                 _LATDbits 000F8C                 _LATEbits 000F8D  
       ESCRIBE_MENSAJE@i 000B           POS_CURSOR@fila 0007               ?_configuro 0001  
            _CURSOR_HOME 0BE4              _INTCON2bits 000FF1             ??_inicio_LCD 0007  
               __Hrparam 0000                 __Lrparam 0000                 __ptext10 0B18  
               __ptext11 095E                 __ptext12 0BA4       __end_of_inicio_LCD 0BA4  
             _BORRAR_LCD 0BEC               _LCD_CONFIG 09D0               _ENVIA_CHAR 0B18  
               isa$xinst 000000                 int$flags 000F            _ENVIA_LCD_CMD 0AE4  
            ??_configuro 0003               _INTCONbits 000FF2        ??_ESCRIBE_MENSAJE 0009  
               intlevel2 0000    ESCRIBE_MENSAJE@cadena 0006           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0AAA  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0008              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0006  
