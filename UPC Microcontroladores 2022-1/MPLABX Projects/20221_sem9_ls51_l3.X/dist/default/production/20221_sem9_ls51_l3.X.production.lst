

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 19 15:36:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATD	set	3980
    62  0000                     _PORTD	set	3971
    63  0000                     _LATDbits	set	3980
    64  0000                     _TRISD	set	3989
    65                           
    66                           	psect	smallconst
    67  000800                     __psmallconst:
    68                           	callstack 0
    69  000800  00                 	db	0
    70  000801                     STR_1:
    71  000801  49                 	db	73	;'I'
    72  000802  6E                 	db	110	;'n'
    73  000803  67                 	db	103	;'g'
    74  000804  2E                 	db	46
    75  000805  20                 	db	32
    76  000806  45                 	db	69	;'E'
    77  000807  6C                 	db	108	;'l'
    78  000808  65                 	db	101	;'e'
    79  000809  63                 	db	99	;'c'
    80  00080A  74                 	db	116	;'t'
    81  00080B  72                 	db	114	;'r'
    82  00080C  6F                 	db	111	;'o'
    83  00080D  6E                 	db	110	;'n'
    84  00080E  69                 	db	105	;'i'
    85  00080F  63                 	db	99	;'c'
    86  000810  61                 	db	97	;'a'
    87  000811  00                 	db	0
    88  000812                     STR_2:
    89  000812  4D                 	db	77	;'M'
    90  000813  69                 	db	105	;'i'
    91  000814  63                 	db	99	;'c'
    92  000815  72                 	db	114	;'r'
    93  000816  6F                 	db	111	;'o'
    94  000817  63                 	db	99	;'c'
    95  000818  6F                 	db	111	;'o'
    96  000819  6E                 	db	110	;'n'
    97  00081A  74                 	db	116	;'t'
    98  00081B  72                 	db	114	;'r'
    99  00081C  6F                 	db	111	;'o'
   100  00081D  6C                 	db	108	;'l'
   101  00081E  61                 	db	97	;'a'
   102  00081F  64                 	db	100	;'d'
   103  000820  6F                 	db	111	;'o'
   104  000821  72                 	db	114	;'r'
   105  000822  00                 	db	0
   106  000823  00                 	db	0	; dummy byte at the end
   107  0000                     
   108                           ; #config settings
   109                           
   110                           	psect	cinit
   111  000A88                     __pcinit:
   112                           	callstack 0
   113  000A88                     start_initialization:
   114                           	callstack 0
   115  000A88                     __initialization:
   116                           	callstack 0
   117  000A88                     end_of_initialization:
   118                           	callstack 0
   119  000A88                     __end_of__initialization:
   120                           	callstack 0
   121  000A88  0E00               	movlw	low (__Lsmallconst shr (0+16))
   122  000A8A  6EF8               	movwf	tblptru,c
   123  000A8C  0E08               	movlw	high __Lsmallconst
   124  000A8E  6EF7               	movwf	tblptrh,c
   125  000A90  0100               	movlb	0
   126  000A92  EF12  F004         	goto	_main	;jump to C main() function
   127                           
   128                           	psect	cstackCOMRAM
   129  000001                     __pcstackCOMRAM:
   130                           	callstack 0
   131  000001                     ENVIA_NIBBLE@dato:
   132                           	callstack 0
   133  000001                     LEER_LCD@aux:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x0
   137  000001                     	ds	1
   138  000002                     ENVIA_CHAR@dato:
   139                           	callstack 0
   140  000002                     ENVIA_LCD_CMD@dato:
   141                           	callstack 0
   142                           
   143                           ; 1 bytes @ 0x1
   144  000002                     	ds	1
   145  000003                     ENVIA_CHAR@aux:
   146                           	callstack 0
   147  000003                     ENVIA_LCD_CMD@aux:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x2
   151  000003                     	ds	1
   152  000004                     ??_LCD_CONFIG:
   153  000004                     POS_CURSOR@columna:
   154                           	callstack 0
   155  000004                     CURSOR_ONOFF@estado:
   156                           	callstack 0
   157  000004                     ESCRIBE_MENSAJE@cadena:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x3
   161  000004                     	ds	1
   162  000005                     ??_lcd_init:
   163  000005                     POS_CURSOR@fila:
   164                           	callstack 0
   165  000005                     ESCRIBE_MENSAJE@tam:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x4
   169  000005                     	ds	1
   170  000006                     ??_ESCRIBE_MENSAJE:
   171                           
   172                           ; 1 bytes @ 0x5
   173  000006                     	ds	1
   174  000007                     ESCRIBE_MENSAJE@i:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x6
   178  000007                     	ds	1
   179  000008                     ??_main:
   180                           
   181                           ; 1 bytes @ 0x7
   182  000008                     	ds	2
   183                           
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 21 in file "maincode5.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;		None
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : 0/0
   200 ;;		On exit  : 0/0
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   203 ;;      Params:         0       0       0       0       0       0       0       0       0
   204 ;;      Locals:         0       0       0       0       0       0       0       0       0
   205 ;;      Temps:          2       0       0       0       0       0       0       0       0
   206 ;;      Totals:         2       0       0       0       0       0       0       0       0
   207 ;;Total ram usage:        2 bytes
   208 ;; Hardware stack levels required when called: 4
   209 ;; This function calls:
   210 ;;		_ESCRIBE_MENSAJE
   211 ;;		_POS_CURSOR
   212 ;;		_configuro
   213 ;;		_lcd_init
   214 ;; This function is called by:
   215 ;;		Startup code after reset
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text0
   220  000824                     __ptext0:
   221                           	callstack 0
   222  000824                     _main:
   223                           	callstack 27
   224                           
   225                           ;maincode5.c: 22:     configuro();
   226                           
   227                           ;incstack = 0
   228  000824  EC53  F005         	call	_configuro	;wreg free
   229                           
   230                           ;maincode5.c: 23:     lcd_init();
   231  000828  ECEE  F004         	call	_lcd_init	;wreg free
   232  00082C                     l978:
   233                           
   234                           ;maincode5.c: 25:         POS_CURSOR(1, 0);
   235  00082C  0E00               	movlw	0
   236  00082E  6E04               	movwf	POS_CURSOR@columna^0,c
   237  000830  0E01               	movlw	1
   238  000832  EC16  F005         	call	_POS_CURSOR
   239                           
   240                           ;maincode5.c: 26:         ESCRIBE_MENSAJE("Ing. Electronica",16);
   241  000836  0E01               	movlw	low STR_1
   242  000838  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   243  00083A  0E10               	movlw	16
   244  00083C  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   245  00083E  EC02  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   246                           
   247                           ;maincode5.c: 27:         POS_CURSOR(2, 0);
   248  000842  0E00               	movlw	0
   249  000844  6E04               	movwf	POS_CURSOR@columna^0,c
   250  000846  0E02               	movlw	2
   251  000848  EC16  F005         	call	_POS_CURSOR
   252                           
   253                           ;maincode5.c: 28:         ESCRIBE_MENSAJE("Microcontrolador",16);
   254  00084C  0E12               	movlw	low STR_2
   255  00084E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   256  000850  0E10               	movlw	16
   257  000852  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   258  000854  EC02  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   259                           
   260                           ;maincode5.c: 29:         _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   261  000858  0E3D               	movlw	61
   262  00085A  6E09               	movwf	(??_main+1)^0,c
   263  00085C  0EE1               	movlw	225
   264  00085E  6E08               	movwf	??_main^0,c
   265  000860  0E40               	movlw	64
   266  000862                     u107:
   267  000862  2EE8               	decfsz	wreg,f,c
   268  000864  D7FE               	bra	u107
   269  000866  2E08               	decfsz	??_main^0,f,c
   270  000868  D7FC               	bra	u107
   271  00086A  2E09               	decfsz	(??_main+1)^0,f,c
   272  00086C  D7FA               	bra	u107
   273                           
   274                           ;maincode5.c: 30:         POS_CURSOR(2, 0);
   275  00086E  0E00               	movlw	0
   276  000870  6E04               	movwf	POS_CURSOR@columna^0,c
   277  000872  0E02               	movlw	2
   278  000874  EC16  F005         	call	_POS_CURSOR
   279                           
   280                           ;maincode5.c: 31:         ESCRIBE_MENSAJE("Ing. Electronica",16);
   281  000878  0E01               	movlw	low STR_1
   282  00087A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   283  00087C  0E10               	movlw	16
   284  00087E  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   285  000880  EC02  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   286                           
   287                           ;maincode5.c: 32:         POS_CURSOR(1, 0);
   288  000884  0E00               	movlw	0
   289  000886  6E04               	movwf	POS_CURSOR@columna^0,c
   290  000888  0E01               	movlw	1
   291  00088A  EC16  F005         	call	_POS_CURSOR
   292                           
   293                           ;maincode5.c: 33:         ESCRIBE_MENSAJE("Microcontrolador",16);
   294  00088E  0E12               	movlw	low STR_2
   295  000890  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   296  000892  0E10               	movlw	16
   297  000894  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   298  000896  EC02  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   299                           
   300                           ;maincode5.c: 34:         _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   301  00089A  0E3D               	movlw	61
   302  00089C  6E09               	movwf	(??_main+1)^0,c
   303  00089E  0EE1               	movlw	225
   304  0008A0  6E08               	movwf	??_main^0,c
   305  0008A2  0E40               	movlw	64
   306  0008A4                     u117:
   307  0008A4  2EE8               	decfsz	wreg,f,c
   308  0008A6  D7FE               	bra	u117
   309  0008A8  2E08               	decfsz	??_main^0,f,c
   310  0008AA  D7FC               	bra	u117
   311  0008AC  2E09               	decfsz	(??_main+1)^0,f,c
   312  0008AE  D7FA               	bra	u117
   313  0008B0  D7BD               	goto	l978
   314  0008B2                     __end_of_main:
   315                           	callstack 0
   316                           
   317 ;; *************** function _lcd_init *****************
   318 ;; Defined at:
   319 ;;		line 11 in file "maincode5.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, cstack
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   333 ;;      Params:         0       0       0       0       0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0       0       0       0       0
   335 ;;      Temps:          1       0       0       0       0       0       0       0       0
   336 ;;      Totals:         1       0       0       0       0       0       0       0       0
   337 ;;Total ram usage:        1 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; Hardware stack levels required when called: 3
   340 ;; This function calls:
   341 ;;		_BORRAR_LCD
   342 ;;		_CURSOR_HOME
   343 ;;		_CURSOR_ONOFF
   344 ;;		_LCD_CONFIG
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text1
   351  0009DC                     __ptext1:
   352                           	callstack 0
   353  0009DC                     _lcd_init:
   354                           	callstack 27
   355                           
   356                           ;maincode5.c: 12:     TRISD = 0x00;
   357                           
   358                           ;incstack = 0
   359  0009DC  0E00               	movlw	0
   360  0009DE  6E95               	movwf	149,c	;volatile
   361                           
   362                           ;maincode5.c: 13:     LCD_CONFIG();
   363  0009E0  EC8A  F004         	call	_LCD_CONFIG	;wreg free
   364                           
   365                           ;maincode5.c: 14:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   366  0009E4  0EEA               	movlw	234
   367  0009E6  6E05               	movwf	??_lcd_init^0,c
   368  0009E8  0EC3               	movlw	195
   369  0009EA                     u127:
   370  0009EA  2EE8               	decfsz	wreg,f,c
   371  0009EC  D7FE               	bra	u127
   372  0009EE  2E05               	decfsz	??_lcd_init^0,f,c
   373  0009F0  D7FC               	bra	u127
   374  0009F2  F000               	nop	
   375                           
   376                           ;maincode5.c: 15:     BORRAR_LCD();
   377  0009F4  EC4F  F005         	call	_BORRAR_LCD	;wreg free
   378                           
   379                           ;maincode5.c: 16:     CURSOR_HOME();
   380  0009F8  EC4B  F005         	call	_CURSOR_HOME	;wreg free
   381                           
   382                           ;maincode5.c: 17:     CURSOR_ONOFF(1);
   383  0009FC  0E01               	movlw	1
   384  0009FE  EC28  F005         	call	_CURSOR_ONOFF
   385  000A02  0012               	return		;funcret
   386  000A04                     __end_of_lcd_init:
   387                           	callstack 0
   388                           
   389 ;; *************** function _LCD_CONFIG *****************
   390 ;; Defined at:
   391 ;;		line 72 in file "../20221_sem9_el51_lcd.X/LCD.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   405 ;;      Params:         0       0       0       0       0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0
   407 ;;      Temps:          1       0       0       0       0       0       0       0       0
   408 ;;      Totals:         1       0       0       0       0       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		_ENVIA_LCD_CMD
   414 ;;		_ENVIA_NIBBLE
   415 ;; This function is called by:
   416 ;;		_lcd_init
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text2
   421  000914                     __ptext2:
   422                           	callstack 0
   423  000914                     _LCD_CONFIG:
   424                           	callstack 27
   425                           
   426                           ;../20221_sem9_el51_lcd.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   427                           
   428                           ;incstack = 0
   429  000914  908C               	bcf	140,0,c	;volatile
   430                           
   431                           ;../20221_sem9_el51_lcd.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   432  000916  928C               	bcf	140,1,c	;volatile
   433                           
   434                           ;../20221_sem9_el51_lcd.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   435  000918  0E30               	movlw	48
   436  00091A  EC36  F005         	call	_ENVIA_NIBBLE
   437                           
   438                           ;../20221_sem9_el51_lcd.X/LCD.c: 77:         _delay(24000);
   439  00091E  0E20               	movlw	32
   440  000920  6E04               	movwf	??_LCD_CONFIG^0,c
   441  000922  0E2A               	movlw	42
   442  000924                     u137:
   443  000924  2EE8               	decfsz	wreg,f,c
   444  000926  D7FE               	bra	u137
   445  000928  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   446  00092A  D7FC               	bra	u137
   447                           
   448                           ;../20221_sem9_el51_lcd.X/LCD.c: 78:         _delay(24000);
   449  00092C  0E20               	movlw	32
   450  00092E  6E04               	movwf	??_LCD_CONFIG^0,c
   451  000930  0E2A               	movlw	42
   452  000932                     u147:
   453  000932  2EE8               	decfsz	wreg,f,c
   454  000934  D7FE               	bra	u147
   455  000936  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   456  000938  D7FC               	bra	u147
   457                           
   458                           ;../20221_sem9_el51_lcd.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   459  00093A  0E30               	movlw	48
   460  00093C  EC36  F005         	call	_ENVIA_NIBBLE
   461                           
   462                           ;../20221_sem9_el51_lcd.X/LCD.c: 83:  _delay(1200);
   463  000940  0EF0               	movlw	240
   464  000942                     u157:
   465  000942  D000               	nop2	
   466  000944  2EE8               	decfsz	wreg,f,c
   467  000946  D7FD               	bra	u157
   468                           
   469                           ;../20221_sem9_el51_lcd.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   470  000948  0E30               	movlw	48
   471  00094A  EC36  F005         	call	_ENVIA_NIBBLE
   472                           
   473                           ;../20221_sem9_el51_lcd.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   474  00094E  0E20               	movlw	32
   475  000950  EC36  F005         	call	_ENVIA_NIBBLE
   476                           
   477                           ;../20221_sem9_el51_lcd.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   478  000954  0E01               	movlw	1
   479  000956  ECBA  F004         	call	_ENVIA_LCD_CMD
   480                           
   481                           ;../20221_sem9_el51_lcd.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   482  00095A  0E28               	movlw	40
   483  00095C  ECBA  F004         	call	_ENVIA_LCD_CMD
   484                           
   485                           ;../20221_sem9_el51_lcd.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   486  000960  0E0F               	movlw	15
   487  000962  ECBA  F004         	call	_ENVIA_LCD_CMD
   488                           
   489                           ;../20221_sem9_el51_lcd.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   490  000966  0E06               	movlw	6
   491  000968  ECBA  F004         	call	_ENVIA_LCD_CMD
   492                           
   493                           ;../20221_sem9_el51_lcd.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   494  00096C  0E01               	movlw	1
   495  00096E  ECBA  F004         	call	_ENVIA_LCD_CMD
   496  000972  0012               	return		;funcret
   497  000974                     __end_of_LCD_CONFIG:
   498                           	callstack 0
   499                           
   500 ;; *************** function _CURSOR_ONOFF *****************
   501 ;; Defined at:
   502 ;;		line 35 in file "../20221_sem9_el51_lcd.X/LCD.c"
   503 ;; Parameters:    Size  Location     Type
   504 ;;  estado          1    wreg     unsigned char 
   505 ;; Auto vars:     Size  Location     Type
   506 ;;  estado          1    3[COMRAM] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   516 ;;      Params:         0       0       0       0       0       0       0       0       0
   517 ;;      Locals:         1       0       0       0       0       0       0       0       0
   518 ;;      Temps:          0       0       0       0       0       0       0       0       0
   519 ;;      Totals:         1       0       0       0       0       0       0       0       0
   520 ;;Total ram usage:        1 bytes
   521 ;; Hardware stack levels used: 1
   522 ;; Hardware stack levels required when called: 2
   523 ;; This function calls:
   524 ;;		_ENVIA_LCD_CMD
   525 ;; This function is called by:
   526 ;;		_lcd_init
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text3
   531  000A50                     __ptext3:
   532                           	callstack 0
   533  000A50                     _CURSOR_ONOFF:
   534                           	callstack 27
   535                           
   536                           ;incstack = 0
   537                           ;CURSOR_ONOFF@estado stored from wreg
   538  000A50  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   539                           
   540                           ;../20221_sem9_el51_lcd.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 36: {;../20221_sem9_el51_lcd.X/LCD.c: 37:  if(estado == 0) ENVIA_LC
      +                          D_CMD(0x0E);
   541  000A52  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   542  000A54  A4D8               	btfss	status,2,c
   543  000A56  D003               	goto	l880
   544  000A58  0E0E               	movlw	14
   545  000A5A  ECBA  F004         	call	_ENVIA_LCD_CMD
   546  000A5E                     l880:
   547                           
   548                           ;../20221_sem9_el51_lcd.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   549  000A5E  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   550  000A60  A4D8               	btfss	status,2,c
   551  000A62  0012               	return	
   552  000A64  0E0C               	movlw	12
   553  000A66  ECBA  F004         	call	_ENVIA_LCD_CMD
   554  000A6A  0012               	return		;funcret
   555  000A6C                     __end_of_CURSOR_ONOFF:
   556                           	callstack 0
   557                           
   558 ;; *************** function _CURSOR_HOME *****************
   559 ;; Defined at:
   560 ;;		line 30 in file "../20221_sem9_el51_lcd.X/LCD.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   574 ;;      Params:         0       0       0       0       0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 2
   581 ;; This function calls:
   582 ;;		_ENVIA_LCD_CMD
   583 ;; This function is called by:
   584 ;;		_lcd_init
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text4
   589  000A96                     __ptext4:
   590                           	callstack 0
   591  000A96                     _CURSOR_HOME:
   592                           	callstack 27
   593                           
   594                           ;../20221_sem9_el51_lcd.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   595                           
   596                           ;incstack = 0
   597  000A96  0E02               	movlw	2
   598  000A98  ECBA  F004         	call	_ENVIA_LCD_CMD
   599  000A9C  0012               	return		;funcret
   600  000A9E                     __end_of_CURSOR_HOME:
   601                           	callstack 0
   602                           
   603 ;; *************** function _BORRAR_LCD *****************
   604 ;; Defined at:
   605 ;;		line 67 in file "../20221_sem9_el51_lcd.X/LCD.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 2
   626 ;; This function calls:
   627 ;;		_ENVIA_LCD_CMD
   628 ;; This function is called by:
   629 ;;		_lcd_init
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text5
   634  000A9E                     __ptext5:
   635                           	callstack 0
   636  000A9E                     _BORRAR_LCD:
   637                           	callstack 27
   638                           
   639                           ;../20221_sem9_el51_lcd.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   640                           
   641                           ;incstack = 0
   642  000A9E  0E01               	movlw	1
   643  000AA0  ECBA  F004         	call	_ENVIA_LCD_CMD
   644  000AA4  0012               	return		;funcret
   645  000AA6                     __end_of_BORRAR_LCD:
   646                           	callstack 0
   647                           
   648 ;; *************** function _configuro *****************
   649 ;; Defined at:
   650 ;;		line 7 in file "maincode5.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		None
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         0       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used: 1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_main
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text6
   678  000AA6                     __ptext6:
   679                           	callstack 0
   680  000AA6                     _configuro:
   681                           	callstack 30
   682                           
   683                           ;incstack = 0
   684  000AA6  0012               	return		;funcret
   685  000AA8                     __end_of_configuro:
   686                           	callstack 0
   687                           
   688 ;; *************** function _POS_CURSOR *****************
   689 ;; Defined at:
   690 ;;		line 6 in file "../20221_sem9_el51_lcd.X/LCD.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  fila            1    wreg     unsigned char 
   693 ;;  columna         1    3[COMRAM] unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  fila            1    4[COMRAM] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   705 ;;      Params:         1       0       0       0       0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0       0       0       0       0
   707 ;;      Temps:          0       0       0       0       0       0       0       0       0
   708 ;;      Totals:         2       0       0       0       0       0       0       0       0
   709 ;;Total ram usage:        2 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; Hardware stack levels required when called: 2
   712 ;; This function calls:
   713 ;;		_ENVIA_LCD_CMD
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text7
   720  000A2C                     __ptext7:
   721                           	callstack 0
   722  000A2C                     _POS_CURSOR:
   723                           	callstack 28
   724                           
   725                           ;incstack = 0
   726                           ;POS_CURSOR@fila stored from wreg
   727  000A2C  6E05               	movwf	POS_CURSOR@fila^0,c
   728                           
   729                           ;../20221_sem9_el51_lcd.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char col
      +                          umna);../20221_sem9_el51_lcd.X/LCD.c: 7: {;../20221_sem9_el51_lcd.X/LCD.c: 8:  if(fila =
      +                          = 1)
   730  000A2E  0405               	decf	POS_CURSOR@fila^0,w,c
   731  000A30  A4D8               	btfss	status,2,c
   732  000A32  D005               	goto	l962
   733                           
   734                           ;../20221_sem9_el51_lcd.X/LCD.c: 9:  {;../20221_sem9_el51_lcd.X/LCD.c: 10:   ENVIA_LCD_C
      +                          MD(0x80+columna);
   735  000A34  5004               	movf	POS_CURSOR@columna^0,w,c
   736  000A36  0F80               	addlw	128
   737  000A38  ECBA  F004         	call	_ENVIA_LCD_CMD
   738                           
   739                           ;../20221_sem9_el51_lcd.X/LCD.c: 11:  }
   740  000A3C  0012               	return	
   741  000A3E                     l962:
   742  000A3E  0E02               	movlw	2
   743  000A40  1805               	xorwf	POS_CURSOR@fila^0,w,c
   744  000A42  A4D8               	btfss	status,2,c
   745  000A44  0012               	return	
   746                           
   747                           ;../20221_sem9_el51_lcd.X/LCD.c: 13:  {;../20221_sem9_el51_lcd.X/LCD.c: 14:   ENVIA_LCD_
      +                          CMD(0xC0+columna);
   748  000A46  5004               	movf	POS_CURSOR@columna^0,w,c
   749  000A48  0FC0               	addlw	192
   750  000A4A  ECBA  F004         	call	_ENVIA_LCD_CMD
   751  000A4E  0012               	return		;funcret
   752  000A50                     __end_of_POS_CURSOR:
   753                           	callstack 0
   754                           
   755 ;; *************** function _ENVIA_LCD_CMD *****************
   756 ;; Defined at:
   757 ;;		line 104 in file "../20221_sem9_el51_lcd.X/LCD.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  dato            1    wreg     unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  dato            1    1[COMRAM] unsigned char 
   762 ;;  aux             1    2[COMRAM] unsigned char 
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   772 ;;      Params:         0       0       0       0       0       0       0       0       0
   773 ;;      Locals:         2       0       0       0       0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0       0       0       0       0
   775 ;;      Totals:         2       0       0       0       0       0       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used: 1
   778 ;; Hardware stack levels required when called: 1
   779 ;; This function calls:
   780 ;;		_ENVIA_NIBBLE
   781 ;;		_LEER_LCD
   782 ;; This function is called by:
   783 ;;		_POS_CURSOR
   784 ;;		_CURSOR_HOME
   785 ;;		_CURSOR_ONOFF
   786 ;;		_BORRAR_LCD
   787 ;;		_LCD_CONFIG
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text8
   792  000974                     __ptext8:
   793                           	callstack 0
   794  000974                     _ENVIA_LCD_CMD:
   795                           	callstack 27
   796                           
   797                           ;incstack = 0
   798                           ;ENVIA_LCD_CMD@dato stored from wreg
   799  000974  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   800                           
   801                           ;../20221_sem9_el51_lcd.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 105: {;../20221_sem9_el51_lcd.X/LCD.c: 106:  unsigned char aux;;../
      +                          20221_sem9_el51_lcd.X/LCD.c: 107:  LATDbits.LATD0 = 0;
   802  000976  908C               	bcf	140,0,c	;volatile
   803                           
   804                           ;../20221_sem9_el51_lcd.X/LCD.c: 108:  LEER_LCD();
   805  000978  EC59  F004         	call	_LEER_LCD	;wreg free
   806                           
   807                           ;../20221_sem9_el51_lcd.X/LCD.c: 109:  TRISD = 0b00000000;
   808  00097C  0E00               	movlw	0
   809  00097E  6E95               	movwf	149,c	;volatile
   810                           
   811                           ;../20221_sem9_el51_lcd.X/LCD.c: 111:         _delay(1200);
   812  000980  0EF0               	movlw	240
   813  000982                     u167:
   814  000982  D000               	nop2	
   815  000984  2EE8               	decfsz	wreg,f,c
   816  000986  D7FD               	bra	u167
   817                           
   818                           ;../20221_sem9_el51_lcd.X/LCD.c: 112:         LATDbits.LATD1 = 0;
   819  000988  928C               	bcf	140,1,c	;volatile
   820                           
   821                           ;../20221_sem9_el51_lcd.X/LCD.c: 113:  LATDbits.LATD2 = 0;
   822  00098A  948C               	bcf	140,2,c	;volatile
   823                           
   824                           ;../20221_sem9_el51_lcd.X/LCD.c: 114:  LATDbits.LATD0 = 0;
   825  00098C  908C               	bcf	140,0,c	;volatile
   826                           
   827                           ;../20221_sem9_el51_lcd.X/LCD.c: 115:  aux = dato & 0xF0;
   828  00098E  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   829  000990  0BF0               	andlw	240
   830  000992  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   831                           
   832                           ;../20221_sem9_el51_lcd.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
   833  000994  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   834  000996  EC36  F005         	call	_ENVIA_NIBBLE
   835                           
   836                           ;../20221_sem9_el51_lcd.X/LCD.c: 117:  aux = dato<<4;
   837  00099A  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   838  00099C  0BF0               	andlw	240
   839  00099E  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   840                           
   841                           ;../20221_sem9_el51_lcd.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
   842  0009A0  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   843  0009A2  EC36  F005         	call	_ENVIA_NIBBLE
   844  0009A6  0012               	return		;funcret
   845  0009A8                     __end_of_ENVIA_LCD_CMD:
   846                           	callstack 0
   847                           
   848 ;; *************** function _ESCRIBE_MENSAJE *****************
   849 ;; Defined at:
   850 ;;		line 41 in file "../20221_sem9_el51_lcd.X/LCD.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   853 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
   854 ;;  tam             1    4[COMRAM] unsigned char 
   855 ;; Auto vars:     Size  Location     Type
   856 ;;  i               1    6[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         2       0       0       0       0       0       0       0       0
   867 ;;      Locals:         1       0       0       0       0       0       0       0       0
   868 ;;      Temps:          1       0       0       0       0       0       0       0       0
   869 ;;      Totals:         4       0       0       0       0       0       0       0       0
   870 ;;Total ram usage:        4 bytes
   871 ;; Hardware stack levels used: 1
   872 ;; Hardware stack levels required when called: 2
   873 ;; This function calls:
   874 ;;		_ENVIA_CHAR
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text9
   881  000A04                     __ptext9:
   882                           	callstack 0
   883  000A04                     _ESCRIBE_MENSAJE:
   884                           	callstack 28
   885                           
   886                           ;../20221_sem9_el51_lcd.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned ch
      +                          ar tam);../20221_sem9_el51_lcd.X/LCD.c: 42: {;../20221_sem9_el51_lcd.X/LCD.c: 43:  unsig
      +                          ned char i = 0;
   887                           
   888                           ;incstack = 0
   889  000A04  0E00               	movlw	0
   890  000A06  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
   891                           
   892                           ;../20221_sem9_el51_lcd.X/LCD.c: 44:  for(i = 0; i<tam; i++)
   893  000A08  0E00               	movlw	0
   894  000A0A  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
   895  000A0C  D00A               	goto	l972
   896  000A0E                     l968:
   897                           
   898                           ;../20221_sem9_el51_lcd.X/LCD.c: 45:  {;../20221_sem9_el51_lcd.X/LCD.c: 46:   ENVIA_CHAR
      +                          (cadena[i]);
   899  000A0E  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
   900  000A10  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
   901  000A12  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
   902  000A14  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   903  000A18                     	if	0	;There is only one active tblptr byte
   904  000A18                     	endif
   905  000A18                     	if	0	;tblptru may be non-zero
   906  000A18                     	endif
   907  000A18                     	if	0	;tblptru may be non-zero
   908  000A18                     	endif
   909  000A18  0008               	tblrd		*
   910  000A1A  50F5               	movf	tablat,w,c
   911  000A1C  ECD4  F004         	call	_ENVIA_CHAR
   912                           
   913                           ;../20221_sem9_el51_lcd.X/LCD.c: 47:  }
   914  000A20  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
   915  000A22                     l972:
   916  000A22  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   917  000A24  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   918  000A26  B0D8               	btfsc	status,0,c
   919  000A28  0012               	return	
   920  000A2A  D7F1               	goto	l968
   921  000A2C                     __end_of_ESCRIBE_MENSAJE:
   922                           	callstack 0
   923                           
   924 ;; *************** function _ENVIA_CHAR *****************
   925 ;; Defined at:
   926 ;;		line 50 in file "../20221_sem9_el51_lcd.X/LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  dato            1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  dato            1    1[COMRAM] unsigned char 
   931 ;;  aux             1    2[COMRAM] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   941 ;;      Params:         0       0       0       0       0       0       0       0       0
   942 ;;      Locals:         2       0       0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0
   944 ;;      Totals:         2       0       0       0       0       0       0       0       0
   945 ;;Total ram usage:        2 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 1
   948 ;; This function calls:
   949 ;;		_ENVIA_NIBBLE
   950 ;;		_LEER_LCD
   951 ;; This function is called by:
   952 ;;		_ESCRIBE_MENSAJE
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text10
   957  0009A8                     __ptext10:
   958                           	callstack 0
   959  0009A8                     _ENVIA_CHAR:
   960                           	callstack 28
   961                           
   962                           ;incstack = 0
   963                           ;ENVIA_CHAR@dato stored from wreg
   964  0009A8  6E02               	movwf	ENVIA_CHAR@dato^0,c
   965                           
   966                           ;../20221_sem9_el51_lcd.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20221_sem9_e
      +                          l51_lcd.X/LCD.c: 51: {;../20221_sem9_el51_lcd.X/LCD.c: 52:  unsigned char aux;;../20221_
      +                          sem9_el51_lcd.X/LCD.c: 53:  LATDbits.LATD0 = 1;
   967  0009AA  808C               	bsf	140,0,c	;volatile
   968                           
   969                           ;../20221_sem9_el51_lcd.X/LCD.c: 54:  LEER_LCD();
   970  0009AC  EC59  F004         	call	_LEER_LCD	;wreg free
   971                           
   972                           ;../20221_sem9_el51_lcd.X/LCD.c: 55:  TRISD = 0x00;
   973  0009B0  0E00               	movlw	0
   974  0009B2  6E95               	movwf	149,c	;volatile
   975                           
   976                           ;../20221_sem9_el51_lcd.X/LCD.c: 56:         _delay(1200);
   977  0009B4  0EF0               	movlw	240
   978  0009B6                     u177:
   979  0009B6  D000               	nop2	
   980  0009B8  2EE8               	decfsz	wreg,f,c
   981  0009BA  D7FD               	bra	u177
   982                           
   983                           ;../20221_sem9_el51_lcd.X/LCD.c: 58:  LATDbits.LATD1 = 0;
   984  0009BC  928C               	bcf	140,1,c	;volatile
   985                           
   986                           ;../20221_sem9_el51_lcd.X/LCD.c: 59:  LATDbits.LATD2 = 0;
   987  0009BE  948C               	bcf	140,2,c	;volatile
   988                           
   989                           ;../20221_sem9_el51_lcd.X/LCD.c: 60:  LATDbits.LATD0 = 1;
   990  0009C0  808C               	bsf	140,0,c	;volatile
   991                           
   992                           ;../20221_sem9_el51_lcd.X/LCD.c: 61:  aux = dato & 0xF0;
   993  0009C2  5002               	movf	ENVIA_CHAR@dato^0,w,c
   994  0009C4  0BF0               	andlw	240
   995  0009C6  6E03               	movwf	ENVIA_CHAR@aux^0,c
   996                           
   997                           ;../20221_sem9_el51_lcd.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
   998  0009C8  5003               	movf	ENVIA_CHAR@aux^0,w,c
   999  0009CA  EC36  F005         	call	_ENVIA_NIBBLE
  1000                           
  1001                           ;../20221_sem9_el51_lcd.X/LCD.c: 63:  aux = dato << 4;
  1002  0009CE  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1003  0009D0  0BF0               	andlw	240
  1004  0009D2  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1005                           
  1006                           ;../20221_sem9_el51_lcd.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1007  0009D4  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1008  0009D6  EC36  F005         	call	_ENVIA_NIBBLE
  1009  0009DA  0012               	return		;funcret
  1010  0009DC                     __end_of_ENVIA_CHAR:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _LEER_LCD *****************
  1014 ;; Defined at:
  1015 ;;		line 121 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  aux             1    0[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_ENVIA_CHAR
  1039 ;;		_ENVIA_LCD_CMD
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text11
  1044  0008B2                     __ptext11:
  1045                           	callstack 0
  1046  0008B2                     _LEER_LCD:
  1047                           	callstack 27
  1048                           
  1049                           ;../20221_sem9_el51_lcd.X/LCD.c: 123:  unsigned char aux;;../20221_sem9_el51_lcd.X/LCD.c
      +                          : 124:  TRISD = 0xF8;
  1050                           
  1051                           ;incstack = 0
  1052  0008B2  0EF8               	movlw	248
  1053  0008B4  6E95               	movwf	149,c	;volatile
  1054                           
  1055                           ;../20221_sem9_el51_lcd.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1056  0008B6  908C               	bcf	140,0,c	;volatile
  1057                           
  1058                           ;../20221_sem9_el51_lcd.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1059  0008B8  828C               	bsf	140,1,c	;volatile
  1060                           
  1061                           ;../20221_sem9_el51_lcd.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1062  0008BA  848C               	bsf	140,2,c	;volatile
  1063                           
  1064                           ;../20221_sem9_el51_lcd.X/LCD.c: 128:         _delay(1200);
  1065  0008BC  0EF0               	movlw	240
  1066  0008BE                     u187:
  1067  0008BE  D000               	nop2	
  1068  0008C0  2EE8               	decfsz	wreg,f,c
  1069  0008C2  D7FD               	bra	u187
  1070                           
  1071                           ;../20221_sem9_el51_lcd.X/LCD.c: 130:  aux = PORTD;
  1072  0008C4  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1073                           
  1074                           ;../20221_sem9_el51_lcd.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1075  0008C8  948C               	bcf	140,2,c	;volatile
  1076                           
  1077                           ;../20221_sem9_el51_lcd.X/LCD.c: 132:         _delay(1200);
  1078  0008CA  0EF0               	movlw	240
  1079  0008CC                     u197:
  1080  0008CC  D000               	nop2	
  1081  0008CE  2EE8               	decfsz	wreg,f,c
  1082  0008D0  D7FD               	bra	u197
  1083                           
  1084                           ;../20221_sem9_el51_lcd.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1085  0008D2  848C               	bsf	140,2,c	;volatile
  1086                           
  1087                           ;../20221_sem9_el51_lcd.X/LCD.c: 135:         _delay(1200);
  1088  0008D4  0EF0               	movlw	240
  1089  0008D6                     u207:
  1090  0008D6  D000               	nop2	
  1091  0008D8  2EE8               	decfsz	wreg,f,c
  1092  0008DA  D7FD               	bra	u207
  1093  0008DC                     l800:
  1094                           
  1095                           ;../20221_sem9_el51_lcd.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1096  0008DC  948C               	bcf	140,2,c	;volatile
  1097                           
  1098                           ;../20221_sem9_el51_lcd.X/LCD.c: 138:  aux = aux & 0x80;
  1099  0008DE  5001               	movf	LEER_LCD@aux^0,w,c
  1100  0008E0  0B80               	andlw	128
  1101  0008E2  6E01               	movwf	LEER_LCD@aux^0,c
  1102                           
  1103                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1104  0008E4  D012               	goto	l816
  1105  0008E6                     l97:
  1106                           
  1107                           ;../20221_sem9_el51_lcd.X/LCD.c: 140:         {;../20221_sem9_el51_lcd.X/LCD.c: 141:    
      +                                   LATDbits.LATD2 = 1;
  1108  0008E6  848C               	bsf	140,2,c	;volatile
  1109                           
  1110                           ;../20221_sem9_el51_lcd.X/LCD.c: 142:             _delay(1200);
  1111  0008E8  0EF0               	movlw	240
  1112  0008EA                     u217:
  1113  0008EA  D000               	nop2	
  1114  0008EC  2EE8               	decfsz	wreg,f,c
  1115  0008EE  D7FD               	bra	u217
  1116                           
  1117                           ;../20221_sem9_el51_lcd.X/LCD.c: 143:             aux = PORTD;
  1118  0008F0  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1119                           
  1120                           ;../20221_sem9_el51_lcd.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1121  0008F4  948C               	bcf	140,2,c	;volatile
  1122                           
  1123                           ;../20221_sem9_el51_lcd.X/LCD.c: 145:             _delay(1200);
  1124  0008F6  0EF0               	movlw	240
  1125  0008F8                     u227:
  1126  0008F8  D000               	nop2	
  1127  0008FA  2EE8               	decfsz	wreg,f,c
  1128  0008FC  D7FD               	bra	u227
  1129                           
  1130                           ;../20221_sem9_el51_lcd.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1131  0008FE  848C               	bsf	140,2,c	;volatile
  1132                           
  1133                           ;../20221_sem9_el51_lcd.X/LCD.c: 147:             _delay(1200);
  1134  000900  0EF0               	movlw	240
  1135  000902                     u237:
  1136  000902  D000               	nop2	
  1137  000904  2EE8               	decfsz	wreg,f,c
  1138  000906  D7FD               	bra	u237
  1139  000908  D7E9               	goto	l800
  1140  00090A                     l816:
  1141                           
  1142                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1143  00090A  0E80               	movlw	128
  1144  00090C  1801               	xorwf	LEER_LCD@aux^0,w,c
  1145  00090E  A4D8               	btfss	status,2,c
  1146  000910  0012               	return	
  1147  000912  D7E9               	goto	l97
  1148  000914                     __end_of_LEER_LCD:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _ENVIA_NIBBLE *****************
  1152 ;; Defined at:
  1153 ;;		line 93 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  dato            1    wreg     unsigned char 
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;  dato            1    0[COMRAM] unsigned char 
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1167 ;;      Params:         0       0       0       0       0       0       0       0       0
  1168 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1170 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1171 ;;Total ram usage:        1 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_ENVIA_CHAR
  1177 ;;		_LCD_CONFIG
  1178 ;;		_ENVIA_LCD_CMD
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text12
  1183  000A6C                     __ptext12:
  1184                           	callstack 0
  1185  000A6C                     _ENVIA_NIBBLE:
  1186                           	callstack 28
  1187                           
  1188                           ;incstack = 0
  1189                           ;ENVIA_NIBBLE@dato stored from wreg
  1190  000A6C  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1191                           
  1192                           ;../20221_sem9_el51_lcd.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20221_sem9
      +                          _el51_lcd.X/LCD.c: 94: {;../20221_sem9_el51_lcd.X/LCD.c: 95:  LATD &= 0x0F;
  1193  000A6E  0E0F               	movlw	15
  1194  000A70  168C               	andwf	140,f,c	;volatile
  1195                           
  1196                           ;../20221_sem9_el51_lcd.X/LCD.c: 96:  dato &= 0xF0;
  1197  000A72  0EF0               	movlw	240
  1198  000A74  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1199                           
  1200                           ;../20221_sem9_el51_lcd.X/LCD.c: 97:  LATD|= dato;
  1201  000A76  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1202  000A78  128C               	iorwf	140,f,c	;volatile
  1203                           
  1204                           ;../20221_sem9_el51_lcd.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1205  000A7A  848C               	bsf	140,2,c	;volatile
  1206                           
  1207                           ;../20221_sem9_el51_lcd.X/LCD.c: 100:         _delay(1200);
  1208  000A7C  0EF0               	movlw	240
  1209  000A7E                     u247:
  1210  000A7E  D000               	nop2	
  1211  000A80  2EE8               	decfsz	wreg,f,c
  1212  000A82  D7FD               	bra	u247
  1213                           
  1214                           ;../20221_sem9_el51_lcd.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1215  000A84  948C               	bcf	140,2,c	;volatile
  1216  000A86  0012               	return		;funcret
  1217  000A88                     __end_of_ENVIA_NIBBLE:
  1218                           	callstack 0
  1219                           
  1220                           	psect	rparam
  1221  0000                     
  1222                           	psect	idloc
  1223                           
  1224                           ;Config register IDLOC0 @ 0x200000
  1225                           ;	unspecified, using default values
  1226  200000                     	org	2097152
  1227  200000  FF                 	db	255
  1228                           
  1229                           ;Config register IDLOC1 @ 0x200001
  1230                           ;	unspecified, using default values
  1231  200001                     	org	2097153
  1232  200001  FF                 	db	255
  1233                           
  1234                           ;Config register IDLOC2 @ 0x200002
  1235                           ;	unspecified, using default values
  1236  200002                     	org	2097154
  1237  200002  FF                 	db	255
  1238                           
  1239                           ;Config register IDLOC3 @ 0x200003
  1240                           ;	unspecified, using default values
  1241  200003                     	org	2097155
  1242  200003  FF                 	db	255
  1243                           
  1244                           ;Config register IDLOC4 @ 0x200004
  1245                           ;	unspecified, using default values
  1246  200004                     	org	2097156
  1247  200004  FF                 	db	255
  1248                           
  1249                           ;Config register IDLOC5 @ 0x200005
  1250                           ;	unspecified, using default values
  1251  200005                     	org	2097157
  1252  200005  FF                 	db	255
  1253                           
  1254                           ;Config register IDLOC6 @ 0x200006
  1255                           ;	unspecified, using default values
  1256  200006                     	org	2097158
  1257  200006  FF                 	db	255
  1258                           
  1259                           ;Config register IDLOC7 @ 0x200007
  1260                           ;	unspecified, using default values
  1261  200007                     	org	2097159
  1262  200007  FF                 	db	255
  1263                           
  1264                           	psect	config
  1265                           
  1266                           ;Config register CONFIG1L @ 0x300000
  1267                           ;	PLL Prescaler Selection bits
  1268                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1269                           ;	System Clock Postscaler Selection bits
  1270                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1271                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1272                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1273  300000                     	org	3145728
  1274  300000  00                 	db	0
  1275                           
  1276                           ;Config register CONFIG1H @ 0x300001
  1277                           ;	Oscillator Selection bits
  1278                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1279                           ;	Fail-Safe Clock Monitor Enable bit
  1280                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1281                           ;	Internal/External Oscillator Switchover bit
  1282                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1283  300001                     	org	3145729
  1284  300001  02                 	db	2
  1285                           
  1286                           ;Config register CONFIG2L @ 0x300002
  1287                           ;	Power-up Timer Enable bit
  1288                           ;	PWRT = ON, PWRT enabled
  1289                           ;	Brown-out Reset Enable bits
  1290                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1291                           ;	Brown-out Reset Voltage bits
  1292                           ;	BORV = 3, Minimum setting 2.05V
  1293                           ;	USB Voltage Regulator Enable bit
  1294                           ;	VREGEN = OFF, USB voltage regulator disabled
  1295  300002                     	org	3145730
  1296  300002  18                 	db	24
  1297                           
  1298                           ;Config register CONFIG2H @ 0x300003
  1299                           ;	Watchdog Timer Enable bit
  1300                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1301                           ;	Watchdog Timer Postscale Select bits
  1302                           ;	WDTPS = 32768, 1:32768
  1303  300003                     	org	3145731
  1304  300003  1E                 	db	30
  1305                           
  1306                           ; Padding undefined space
  1307  300004                     	org	3145732
  1308  300004  FF                 	db	255
  1309                           
  1310                           ;Config register CONFIG3H @ 0x300005
  1311                           ;	CCP2 MUX bit
  1312                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1313                           ;	PORTB A/D Enable bit
  1314                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1315                           ;	Low-Power Timer 1 Oscillator Enable bit
  1316                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1317                           ;	MCLR Pin Enable bit
  1318                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1319  300005                     	org	3145733
  1320  300005  81                 	db	129
  1321                           
  1322                           ;Config register CONFIG4L @ 0x300006
  1323                           ;	Stack Full/Underflow Reset Enable bit
  1324                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1325                           ;	Single-Supply ICSP Enable bit
  1326                           ;	LVP = OFF, Single-Supply ICSP disabled
  1327                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1328                           ;	ICPRT = OFF, ICPORT disabled
  1329                           ;	Extended Instruction Set Enable bit
  1330                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1331                           ;	Background Debugger Enable bit
  1332                           ;	DEBUG = 0x1, unprogrammed default
  1333  300006                     	org	3145734
  1334  300006  81                 	db	129
  1335                           
  1336                           ; Padding undefined space
  1337  300007                     	org	3145735
  1338  300007  FF                 	db	255
  1339                           
  1340                           ;Config register CONFIG5L @ 0x300008
  1341                           ;	Code Protection bit
  1342                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1343                           ;	Code Protection bit
  1344                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1345                           ;	Code Protection bit
  1346                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1347                           ;	Code Protection bit
  1348                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1349  300008                     	org	3145736
  1350  300008  0F                 	db	15
  1351                           
  1352                           ;Config register CONFIG5H @ 0x300009
  1353                           ;	Boot Block Code Protection bit
  1354                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1355                           ;	Data EEPROM Code Protection bit
  1356                           ;	CPD = OFF, Data EEPROM is not code-protected
  1357  300009                     	org	3145737
  1358  300009  C0                 	db	192
  1359                           
  1360                           ;Config register CONFIG6L @ 0x30000A
  1361                           ;	Write Protection bit
  1362                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1363                           ;	Write Protection bit
  1364                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1365                           ;	Write Protection bit
  1366                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1367                           ;	Write Protection bit
  1368                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1369  30000A                     	org	3145738
  1370  30000A  0F                 	db	15
  1371                           
  1372                           ;Config register CONFIG6H @ 0x30000B
  1373                           ;	Configuration Register Write Protection bit
  1374                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1375                           ;	Boot Block Write Protection bit
  1376                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1377                           ;	Data EEPROM Write Protection bit
  1378                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1379  30000B                     	org	3145739
  1380  30000B  E0                 	db	224
  1381                           
  1382                           ;Config register CONFIG7L @ 0x30000C
  1383                           ;	Table Read Protection bit
  1384                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1385                           ;	Table Read Protection bit
  1386                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1387                           ;	Table Read Protection bit
  1388                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1389                           ;	Table Read Protection bit
  1390                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1391  30000C                     	org	3145740
  1392  30000C  0F                 	db	15
  1393                           
  1394                           ;Config register CONFIG7H @ 0x30000D
  1395                           ;	Boot Block Table Read Protection bit
  1396                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1397  30000D                     	org	3145741
  1398  30000D  40                 	db	64
  1399                           tosu	equ	0xFFF
  1400                           tosh	equ	0xFFE
  1401                           tosl	equ	0xFFD
  1402                           stkptr	equ	0xFFC
  1403                           pclatu	equ	0xFFB
  1404                           pclath	equ	0xFFA
  1405                           pcl	equ	0xFF9
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           indf0	equ	0xFEF
  1413                           postinc0	equ	0xFEE
  1414                           postdec0	equ	0xFED
  1415                           preinc0	equ	0xFEC
  1416                           plusw0	equ	0xFEB
  1417                           fsr0h	equ	0xFEA
  1418                           fsr0l	equ	0xFE9
  1419                           wreg	equ	0xFE8
  1420                           indf1	equ	0xFE7
  1421                           postinc1	equ	0xFE6
  1422                           postdec1	equ	0xFE5
  1423                           preinc1	equ	0xFE4
  1424                           plusw1	equ	0xFE3
  1425                           fsr1h	equ	0xFE2
  1426                           fsr1l	equ	0xFE1
  1427                           bsr	equ	0xFE0
  1428                           indf2	equ	0xFDF
  1429                           postinc2	equ	0xFDE
  1430                           postdec2	equ	0xFDD
  1431                           preinc2	equ	0xFDC
  1432                           plusw2	equ	0xFDB
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1856
                                              7 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     819
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          6A      0       0      20        0.0%
BITBIGSFRlh          8      0       0      21        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BITBIGSFRlll        23      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 19 15:36:12 2022

                     l97 08E6            ENVIA_CHAR@aux 0003                      l800 08DC  
                    l816 090A                      l880 0A5E                      l962 0A3E  
                    l972 0A22                      l968 0A0E                      l978 082C  
                    u107 0862                      u117 08A4                      u207 08D6  
                    u127 09EA                      u217 08EA                      u137 0924  
                    u227 08F8                      u147 0932                      u237 0902  
                    u157 0942                      u247 0A7E                      u167 0982  
                    u177 09B6                      u187 08BE                      u197 08CC  
            LEER_LCD@aux 0001                      wreg 000FE8             ?_CURSOR_HOME 0001  
         ??_ENVIA_NIBBLE 0001           ENVIA_CHAR@dato 0002                     STR_1 0801  
                   STR_2 0812                     STR_3 0801                     STR_4 0812  
                   _LATD 000F8C                     _main 0824                     start 0000  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0002  
       __end_of_LEER_LCD 0914                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    tablat 000FF5  
                  status 000FD8           ??_CURSOR_ONOFF 0004          __initialization 0A88  
           __end_of_main 08B2          _ESCRIBE_MENSAJE 0A04                   ??_main 0008  
          __activetblptr 000001         __end_of_lcd_init 0A04     __end_of_ENVIA_NIBBLE 0A88  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ??_BORRAR_LCD 0004  
              ?_LEER_LCD 0001               __accesstop 0060  __end_of__initialization 0A88  
           ??_LCD_CONFIG 0004            ___rparam_used 000001             ??_ENVIA_CHAR 0002  
__end_of_ESCRIBE_MENSAJE 0A2C           __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0AA6  
       ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 0A6C       __end_of_LCD_CONFIG 0974  
     __end_of_ENVIA_CHAR 09DC               ??_LEER_LCD 0001         ENVIA_NIBBLE@dato 0001  
           ??_POS_CURSOR 0005                ?_lcd_init 0001                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0004        __end_of_configuro 0AA8  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 09A8                  __pcinit 0A88  
     __end_of_POS_CURSOR 0A50                  __ramtop 0800                  __ptext0 0824  
                __ptext1 09DC                  __ptext2 0914                  __ptext3 0A50  
                __ptext4 0A96                  __ptext5 0A9E                  __ptext6 0AA6  
                __ptext7 0A2C                  __ptext8 0974                  __ptext9 0A04  
             ??_lcd_init 0005             _ENVIA_NIBBLE 0A6C     end_of_initialization 0A88  
           _CURSOR_ONOFF 0A50       CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004  
    start_initialization 0A88        ENVIA_LCD_CMD@dato 0002      __end_of_CURSOR_HOME 0A9E  
              _configuro 0AA6              __smallconst 0800                 _LEER_LCD 08B2  
               _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0007           POS_CURSOR@fila 0005  
             ?_configuro 0001              _CURSOR_HOME 0A96                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800                 __ptext10 09A8  
               __ptext11 08B2                 __ptext12 0A6C               _BORRAR_LCD 0A9E  
               _lcd_init 09DC               _LCD_CONFIG 0914               _ENVIA_CHAR 09A8  
               isa$xinst 000000            _ENVIA_LCD_CMD 0974              ??_configuro 0001  
      ??_ESCRIBE_MENSAJE 0006    ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0A2C  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0005              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0004  
