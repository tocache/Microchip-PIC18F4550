

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 21:25:02 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATD	set	3980
    62  0000                     _PORTD	set	3971
    63  0000                     _LATDbits	set	3980
    64  0000                     _TRISBbits	set	3987
    65  0000                     _TRISD	set	3989
    66  0000                     _LATBbits	set	3978
    67                           
    68                           	psect	smallconst
    69  000800                     __psmallconst:
    70                           	callstack 0
    71  000800  00                 	db	0
    72  000801                     STR_4:
    73  000801  41                 	db	65	;'A'
    74  000802  6E                 	db	110	;'n'
    75  000803  67                 	db	103	;'g'
    76  000804  75                 	db	117	;'u'
    77  000805  6C                 	db	108	;'l'
    78  000806  6F                 	db	111	;'o'
    79  000807  3A                 	db	58	;':'
    80  000808  20                 	db	32
    81  000809  30                 	db	48	;'0'
    82  00080A  30                 	db	48	;'0'
    83  00080B  30                 	db	48	;'0'
    84  00080C  00                 	db	0
    85  00080D                     STR_2:
    86  00080D  41                 	db	65	;'A'
    87  00080E  6E                 	db	110	;'n'
    88  00080F  67                 	db	103	;'g'
    89  000810  75                 	db	117	;'u'
    90  000811  6C                 	db	108	;'l'
    91  000812  6F                 	db	111	;'o'
    92  000813  3A                 	db	58	;':'
    93  000814  20                 	db	32
    94  000815  31                 	db	49	;'1'
    95  000816  38                 	db	56	;'8'
    96  000817  30                 	db	48	;'0'
    97  000818  00                 	db	0
    98  000819                     STR_3:
    99  000819  41                 	db	65	;'A'
   100  00081A  6E                 	db	110	;'n'
   101  00081B  67                 	db	103	;'g'
   102  00081C  75                 	db	117	;'u'
   103  00081D  6C                 	db	108	;'l'
   104  00081E  6F                 	db	111	;'o'
   105  00081F  3A                 	db	58	;':'
   106  000820  20                 	db	32
   107  000821  30                 	db	48	;'0'
   108  000822  39                 	db	57	;'9'
   109  000823  30                 	db	48	;'0'
   110  000824  00                 	db	0
   111  000825                     STR_1:
   112  000825  53                 	db	83	;'S'
   113  000826  65                 	db	101	;'e'
   114  000827  72                 	db	114	;'r'
   115  000828  76                 	db	118	;'v'
   116  000829  6F                 	db	111	;'o'
   117  00082A  20                 	db	32
   118  00082B  4C                 	db	76	;'L'
   119  00082C  53                 	db	83	;'S'
   120  00082D  35                 	db	53	;'5'
   121  00082E  31                 	db	49	;'1'
   122  00082F  00                 	db	0
   123  000830  00                 	db	0	; dummy byte at the end
   124  0000                     
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128  000C36                     __pcinit:
   129                           	callstack 0
   130  000C36                     start_initialization:
   131                           	callstack 0
   132  000C36                     __initialization:
   133                           	callstack 0
   134  000C36                     end_of_initialization:
   135                           	callstack 0
   136  000C36                     __end_of__initialization:
   137                           	callstack 0
   138  000C36  0E00               	movlw	low (__Lsmallconst shr (0+16))
   139  000C38  6EF8               	movwf	tblptru,c
   140  000C3A  0E08               	movlw	high __Lsmallconst
   141  000C3C  6EF7               	movwf	tblptrh,c
   142  000C3E  0100               	movlb	0
   143  000C40  EF19  F004         	goto	_main	;jump to C main() function
   144                           
   145                           	psect	cstackCOMRAM
   146  000001                     __pcstackCOMRAM:
   147                           	callstack 0
   148  000001                     ENVIA_NIBBLE@dato:
   149                           	callstack 0
   150  000001                     LEER_LCD@aux:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x0
   154  000001                     	ds	1
   155  000002                     ENVIA_CHAR@dato:
   156                           	callstack 0
   157  000002                     ENVIA_LCD_CMD@dato:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x1
   161  000002                     	ds	1
   162  000003                     ENVIA_CHAR@aux:
   163                           	callstack 0
   164  000003                     ENVIA_LCD_CMD@aux:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x2
   168  000003                     	ds	1
   169  000004                     ??_LCD_CONFIG:
   170  000004                     POS_CURSOR@columna:
   171                           	callstack 0
   172  000004                     CURSOR_ONOFF@estado:
   173                           	callstack 0
   174  000004                     ESCRIBE_MENSAJE@cadena:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x3
   178  000004                     	ds	1
   179  000005                     ??_lcd_init:
   180  000005                     POS_CURSOR@fila:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x4
   184  000005                     	ds	1
   185  000006                     ESCRIBE_MENSAJE@tam:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x5
   189  000006                     	ds	1
   190  000007                     ??_ESCRIBE_MENSAJE:
   191                           
   192                           ; 1 bytes @ 0x6
   193  000007                     	ds	2
   194  000009                     ESCRIBE_MENSAJE@i:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x8
   198  000009                     	ds	1
   199  00000A                     ??_main:
   200                           
   201                           ; 1 bytes @ 0x9
   202  00000A                     	ds	2
   203  00000C                     main@variable:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0xB
   207  00000C                     	ds	2
   208                           
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 19 in file "maincode2.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  variable        2   11[COMRAM] unsigned int 
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         2       0       0       0       0       0       0       0       0
   230 ;;      Temps:          2       0       0       0       0       0       0       0       0
   231 ;;      Totals:         4       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        4 bytes
   233 ;; Hardware stack levels required when called: 4
   234 ;; This function calls:
   235 ;;		_ENVIA_CHAR
   236 ;;		_ESCRIBE_MENSAJE
   237 ;;		_POS_CURSOR
   238 ;;		_configuro
   239 ;;		_lcd_init
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246  000832                     __ptext0:
   247                           	callstack 0
   248  000832                     _main:
   249                           	callstack 27
   250  000832                     
   251                           ;maincode2.c: 20:     configuro();
   252  000832  EC2A  F006         	call	_configuro	;wreg free
   253  000836                     
   254                           ;maincode2.c: 21:     lcd_init();
   255  000836  ECF9  F005         	call	_lcd_init	;wreg free
   256  00083A                     l1092:
   257                           
   258                           ;maincode2.c: 23:         POS_CURSOR(1,0);
   259  00083A  0E00               	movlw	0
   260  00083C  6E04               	movwf	POS_CURSOR@columna^0,c
   261  00083E  0E01               	movlw	1
   262  000840  EC90  F005         	call	_POS_CURSOR
   263  000844                     
   264                           ;maincode2.c: 24:         ESCRIBE_MENSAJE("Servo LS51", 10);
   265  000844  0E25               	movlw	low STR_1
   266  000846  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   267  000848  0E08               	movlw	high STR_1
   268  00084A  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   269  00084C  0E0A               	movlw	10
   270  00084E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   271  000850  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   272  000854                     
   273                           ;maincode2.c: 26:         for(variable=0;variable<50;variable++){
   274  000854  0E00               	movlw	0
   275  000856  6E0D               	movwf	(main@variable+1)^0,c
   276  000858  0E00               	movlw	0
   277  00085A  6E0C               	movwf	main@variable^0,c
   278  00085C                     l108:
   279                           
   280                           ;maincode2.c: 27:             LATBbits.LB7 = 1;
   281  00085C  8E8A               	bsf	138,7,c	;volatile
   282  00085E                     
   283                           ;maincode2.c: 28:             _delay((unsigned long)((2000)*(48000000UL/4000000.0)));
   284  00085E  0E20               	movlw	32
   285  000860  6E0A               	movwf	??_main^0,c
   286  000862  0E2A               	movlw	42
   287  000864                     u237:
   288  000864  2EE8               	decfsz	wreg,f,c
   289  000866  D7FE               	bra	u237
   290  000868  2E0A               	decfsz	??_main^0,f,c
   291  00086A  D7FC               	bra	u237
   292  00086C                     
   293                           ;maincode2.c: 29:             LATBbits.LB7 = 0;
   294  00086C  9E8A               	bcf	138,7,c	;volatile
   295                           
   296                           ;maincode2.c: 30:             _delay((unsigned long)((18000)*(48000000UL/4000000.0)));
   297  00086E  0E02               	movlw	2
   298  000870  6E0B               	movwf	(??_main+1)^0,c
   299  000872  0E19               	movlw	25
   300  000874  6E0A               	movwf	??_main^0,c
   301  000876  0E82               	movlw	130
   302  000878                     u247:
   303  000878  2EE8               	decfsz	wreg,f,c
   304  00087A  D7FE               	bra	u247
   305  00087C  2E0A               	decfsz	??_main^0,f,c
   306  00087E  D7FC               	bra	u247
   307  000880  2E0B               	decfsz	(??_main+1)^0,f,c
   308  000882  D7FA               	bra	u247
   309  000884                     
   310                           ;maincode2.c: 31:             POS_CURSOR(2,0);
   311  000884  0E00               	movlw	0
   312  000886  6E04               	movwf	POS_CURSOR@columna^0,c
   313  000888  0E02               	movlw	2
   314  00088A  EC90  F005         	call	_POS_CURSOR
   315  00088E                     
   316                           ;maincode2.c: 32:             ESCRIBE_MENSAJE("Angulo: 180", 11);
   317  00088E  0E0D               	movlw	low STR_2
   318  000890  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   319  000892  0E08               	movlw	high STR_2
   320  000894  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   321  000896  0E0B               	movlw	11
   322  000898  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   323  00089A  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   324  00089E                     
   325                           ;maincode2.c: 33:             ENVIA_CHAR(0xDF);
   326  00089E  0EDF               	movlw	223
   327  0008A0  ECC7  F005         	call	_ENVIA_CHAR
   328  0008A4                     
   329                           ;maincode2.c: 34:         }
   330  0008A4  4A0C               	infsnz	main@variable^0,f,c
   331  0008A6  2A0D               	incf	(main@variable+1)^0,f,c
   332  0008A8  500D               	movf	(main@variable+1)^0,w,c
   333  0008AA  E109               	bnz	u190
   334  0008AC  0E32               	movlw	50
   335  0008AE  5C0C               	subwf	main@variable^0,w,c
   336  0008B0  A0D8               	btfss	status,0,c
   337  0008B2  EF5D  F004         	goto	u191
   338  0008B6  EF5F  F004         	goto	u190
   339  0008BA                     u191:
   340  0008BA  EF2E  F004         	goto	l108
   341  0008BE                     u190:
   342  0008BE                     
   343                           ;maincode2.c: 35:         for(variable=0;variable<50;variable++){
   344  0008BE  0E00               	movlw	0
   345  0008C0  6E0D               	movwf	(main@variable+1)^0,c
   346  0008C2  0E00               	movlw	0
   347  0008C4  6E0C               	movwf	main@variable^0,c
   348  0008C6                     l110:
   349                           
   350                           ;maincode2.c: 36:             LATBbits.LB7 = 1;
   351  0008C6  8E8A               	bsf	138,7,c	;volatile
   352  0008C8                     
   353                           ;maincode2.c: 37:             _delay((unsigned long)((1500)*(48000000UL/4000000.0)));
   354  0008C8  0E18               	movlw	24
   355  0008CA  6E0A               	movwf	??_main^0,c
   356  0008CC  0E5F               	movlw	95
   357  0008CE                     u257:
   358  0008CE  2EE8               	decfsz	wreg,f,c
   359  0008D0  D7FE               	bra	u257
   360  0008D2  2E0A               	decfsz	??_main^0,f,c
   361  0008D4  D7FC               	bra	u257
   362  0008D6  F000               	nop	
   363  0008D8                     
   364                           ;maincode2.c: 38:             LATBbits.LB7 = 0;
   365  0008D8  9E8A               	bcf	138,7,c	;volatile
   366                           
   367                           ;maincode2.c: 39:             _delay((unsigned long)((18500)*(48000000UL/4000000.0)));
   368  0008DA  0E02               	movlw	2
   369  0008DC  6E0B               	movwf	(??_main+1)^0,c
   370  0008DE  0E21               	movlw	33
   371  0008E0  6E0A               	movwf	??_main^0,c
   372  0008E2  0E4C               	movlw	76
   373  0008E4                     u267:
   374  0008E4  2EE8               	decfsz	wreg,f,c
   375  0008E6  D7FE               	bra	u267
   376  0008E8  2E0A               	decfsz	??_main^0,f,c
   377  0008EA  D7FC               	bra	u267
   378  0008EC  2E0B               	decfsz	(??_main+1)^0,f,c
   379  0008EE  D7FA               	bra	u267
   380  0008F0  D000               	nop2	
   381  0008F2                     
   382                           ;maincode2.c: 40:             POS_CURSOR(2,0);
   383  0008F2  0E00               	movlw	0
   384  0008F4  6E04               	movwf	POS_CURSOR@columna^0,c
   385  0008F6  0E02               	movlw	2
   386  0008F8  EC90  F005         	call	_POS_CURSOR
   387  0008FC                     
   388                           ;maincode2.c: 41:             ESCRIBE_MENSAJE("Angulo: 090", 11);
   389  0008FC  0E19               	movlw	low STR_3
   390  0008FE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   391  000900  0E08               	movlw	high STR_3
   392  000902  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   393  000904  0E0B               	movlw	11
   394  000906  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   395  000908  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   396  00090C                     
   397                           ;maincode2.c: 42:             ENVIA_CHAR(0xDF);
   398  00090C  0EDF               	movlw	223
   399  00090E  ECC7  F005         	call	_ENVIA_CHAR
   400  000912                     
   401                           ;maincode2.c: 43:         }
   402  000912  4A0C               	infsnz	main@variable^0,f,c
   403  000914  2A0D               	incf	(main@variable+1)^0,f,c
   404  000916  500D               	movf	(main@variable+1)^0,w,c
   405  000918  E109               	bnz	u200
   406  00091A  0E32               	movlw	50
   407  00091C  5C0C               	subwf	main@variable^0,w,c
   408  00091E  A0D8               	btfss	status,0,c
   409  000920  EF94  F004         	goto	u201
   410  000924  EF96  F004         	goto	u200
   411  000928                     u201:
   412  000928  EF63  F004         	goto	l110
   413  00092C                     u200:
   414  00092C                     
   415                           ;maincode2.c: 44:         for(variable=0;variable<50;variable++){
   416  00092C  0E00               	movlw	0
   417  00092E  6E0D               	movwf	(main@variable+1)^0,c
   418  000930  0E00               	movlw	0
   419  000932  6E0C               	movwf	main@variable^0,c
   420  000934                     l112:
   421                           
   422                           ;maincode2.c: 45:             LATBbits.LB7 = 1;
   423  000934  8E8A               	bsf	138,7,c	;volatile
   424  000936                     
   425                           ;maincode2.c: 46:             _delay((unsigned long)((1000)*(48000000UL/4000000.0)));
   426  000936  0E10               	movlw	16
   427  000938  6E0A               	movwf	??_main^0,c
   428  00093A  0E94               	movlw	148
   429  00093C                     u277:
   430  00093C  2EE8               	decfsz	wreg,f,c
   431  00093E  D7FE               	bra	u277
   432  000940  2E0A               	decfsz	??_main^0,f,c
   433  000942  D7FC               	bra	u277
   434  000944  D000               	nop2	
   435  000946                     
   436                           ;maincode2.c: 47:             LATBbits.LB7 = 0;
   437  000946  9E8A               	bcf	138,7,c	;volatile
   438                           
   439                           ;maincode2.c: 48:             _delay((unsigned long)((19000)*(48000000UL/4000000.0)));
   440  000948  0E02               	movlw	2
   441  00094A  6E0B               	movwf	(??_main+1)^0,c
   442  00094C  0E29               	movlw	41
   443  00094E  6E0A               	movwf	??_main^0,c
   444  000950  0E17               	movlw	23
   445  000952                     u287:
   446  000952  2EE8               	decfsz	wreg,f,c
   447  000954  D7FE               	bra	u287
   448  000956  2E0A               	decfsz	??_main^0,f,c
   449  000958  D7FC               	bra	u287
   450  00095A  2E0B               	decfsz	(??_main+1)^0,f,c
   451  00095C  D7FA               	bra	u287
   452  00095E  F000               	nop	
   453  000960                     
   454                           ;maincode2.c: 49:             POS_CURSOR(2,0);
   455  000960  0E00               	movlw	0
   456  000962  6E04               	movwf	POS_CURSOR@columna^0,c
   457  000964  0E02               	movlw	2
   458  000966  EC90  F005         	call	_POS_CURSOR
   459  00096A                     
   460                           ;maincode2.c: 50:             ESCRIBE_MENSAJE("Angulo: 000", 11);
   461  00096A  0E01               	movlw	low STR_4
   462  00096C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   463  00096E  0E08               	movlw	high STR_4
   464  000970  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   465  000972  0E0B               	movlw	11
   466  000974  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   467  000976  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   468  00097A                     
   469                           ;maincode2.c: 51:             ENVIA_CHAR(0xDF);
   470  00097A  0EDF               	movlw	223
   471  00097C  ECC7  F005         	call	_ENVIA_CHAR
   472  000980                     
   473                           ;maincode2.c: 52:         }
   474  000980  4A0C               	infsnz	main@variable^0,f,c
   475  000982  2A0D               	incf	(main@variable+1)^0,f,c
   476  000984  500D               	movf	(main@variable+1)^0,w,c
   477  000986  E109               	bnz	u210
   478  000988  0E32               	movlw	50
   479  00098A  5C0C               	subwf	main@variable^0,w,c
   480  00098C  A0D8               	btfss	status,0,c
   481  00098E  EFCB  F004         	goto	u211
   482  000992  EFCD  F004         	goto	u210
   483  000996                     u211:
   484  000996  EF9A  F004         	goto	l112
   485  00099A                     u210:
   486  00099A                     
   487                           ;maincode2.c: 53:         for(variable=0;variable<50;variable++){
   488  00099A  0E00               	movlw	0
   489  00099C  6E0D               	movwf	(main@variable+1)^0,c
   490  00099E  0E00               	movlw	0
   491  0009A0  6E0C               	movwf	main@variable^0,c
   492  0009A2                     l114:
   493                           
   494                           ;maincode2.c: 54:             LATBbits.LB7 = 1;
   495  0009A2  8E8A               	bsf	138,7,c	;volatile
   496  0009A4                     
   497                           ;maincode2.c: 55:             _delay((unsigned long)((1500)*(48000000UL/4000000.0)));
   498  0009A4  0E18               	movlw	24
   499  0009A6  6E0A               	movwf	??_main^0,c
   500  0009A8  0E5F               	movlw	95
   501  0009AA                     u297:
   502  0009AA  2EE8               	decfsz	wreg,f,c
   503  0009AC  D7FE               	bra	u297
   504  0009AE  2E0A               	decfsz	??_main^0,f,c
   505  0009B0  D7FC               	bra	u297
   506  0009B2  F000               	nop	
   507  0009B4                     
   508                           ;maincode2.c: 56:             LATBbits.LB7 = 0;
   509  0009B4  9E8A               	bcf	138,7,c	;volatile
   510                           
   511                           ;maincode2.c: 57:             _delay((unsigned long)((18500)*(48000000UL/4000000.0)));
   512  0009B6  0E02               	movlw	2
   513  0009B8  6E0B               	movwf	(??_main+1)^0,c
   514  0009BA  0E21               	movlw	33
   515  0009BC  6E0A               	movwf	??_main^0,c
   516  0009BE  0E4C               	movlw	76
   517  0009C0                     u307:
   518  0009C0  2EE8               	decfsz	wreg,f,c
   519  0009C2  D7FE               	bra	u307
   520  0009C4  2E0A               	decfsz	??_main^0,f,c
   521  0009C6  D7FC               	bra	u307
   522  0009C8  2E0B               	decfsz	(??_main+1)^0,f,c
   523  0009CA  D7FA               	bra	u307
   524  0009CC  D000               	nop2	
   525  0009CE                     
   526                           ;maincode2.c: 58:             POS_CURSOR(2,0);
   527  0009CE  0E00               	movlw	0
   528  0009D0  6E04               	movwf	POS_CURSOR@columna^0,c
   529  0009D2  0E02               	movlw	2
   530  0009D4  EC90  F005         	call	_POS_CURSOR
   531  0009D8                     
   532                           ;maincode2.c: 59:             ESCRIBE_MENSAJE("Angulo: 090", 11);
   533  0009D8  0E19               	movlw	low STR_3
   534  0009DA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   535  0009DC  0E08               	movlw	high STR_3
   536  0009DE  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   537  0009E0  0E0B               	movlw	11
   538  0009E2  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   539  0009E4  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   540  0009E8                     
   541                           ;maincode2.c: 60:             ENVIA_CHAR(0xDF);
   542  0009E8  0EDF               	movlw	223
   543  0009EA  ECC7  F005         	call	_ENVIA_CHAR
   544  0009EE                     
   545                           ;maincode2.c: 61:         }
   546  0009EE  4A0C               	infsnz	main@variable^0,f,c
   547  0009F0  2A0D               	incf	(main@variable+1)^0,f,c
   548  0009F2  500D               	movf	(main@variable+1)^0,w,c
   549  0009F4  E109               	bnz	u220
   550  0009F6  0E32               	movlw	50
   551  0009F8  5C0C               	subwf	main@variable^0,w,c
   552  0009FA  A0D8               	btfss	status,0,c
   553  0009FC  EF02  F005         	goto	u221
   554  000A00  EF04  F005         	goto	u220
   555  000A04                     u221:
   556  000A04  EFD1  F004         	goto	l114
   557  000A08                     u220:
   558  000A08  EF1D  F004         	goto	l1092
   559  000A0C  EF00  F000         	goto	start
   560  000A10                     __end_of_main:
   561                           	callstack 0
   562                           
   563 ;; *************** function _lcd_init *****************
   564 ;; Defined at:
   565 ;;		line 10 in file "maincode2.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   579 ;;      Params:         0       0       0       0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0       0       0       0       0
   582 ;;      Totals:         1       0       0       0       0       0       0       0       0
   583 ;;Total ram usage:        1 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 3
   586 ;; This function calls:
   587 ;;		_BORRAR_LCD
   588 ;;		_CURSOR_HOME
   589 ;;		_CURSOR_ONOFF
   590 ;;		_LCD_CONFIG
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597  000BF2                     __ptext1:
   598                           	callstack 0
   599  000BF2                     _lcd_init:
   600                           	callstack 27
   601  000BF2                     
   602                           ;maincode2.c: 11:     TRISD = 0x00;
   603  000BF2  0E00               	movlw	0
   604  000BF4  6E95               	movwf	149,c	;volatile
   605  000BF6                     
   606                           ;maincode2.c: 12:     LCD_CONFIG();
   607  000BF6  EC41  F005         	call	_LCD_CONFIG	;wreg free
   608  000BFA                     
   609                           ;maincode2.c: 13:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   610  000BFA  0EEA               	movlw	234
   611  000BFC  6E05               	movwf	??_lcd_init^0,c
   612  000BFE  0EC3               	movlw	195
   613  000C00                     u317:
   614  000C00  2EE8               	decfsz	wreg,f,c
   615  000C02  D7FE               	bra	u317
   616  000C04  2E05               	decfsz	??_lcd_init^0,f,c
   617  000C06  D7FC               	bra	u317
   618  000C08  F000               	nop	
   619  000C0A                     
   620                           ;maincode2.c: 14:     BORRAR_LCD();
   621  000C0A  EC26  F006         	call	_BORRAR_LCD	;wreg free
   622  000C0E                     
   623                           ;maincode2.c: 15:     CURSOR_HOME();
   624  000C0E  EC22  F006         	call	_CURSOR_HOME	;wreg free
   625  000C12                     
   626                           ;maincode2.c: 16:     CURSOR_ONOFF(1);
   627  000C12  0E01               	movlw	1
   628  000C14  ECE1  F005         	call	_CURSOR_ONOFF
   629  000C18  0012               	return		;funcret
   630  000C1A                     __end_of_lcd_init:
   631                           	callstack 0
   632                           
   633 ;; *************** function _LCD_CONFIG *****************
   634 ;; Defined at:
   635 ;;		line 72 in file "LCD.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 2
   656 ;; This function calls:
   657 ;;		_ENVIA_LCD_CMD
   658 ;;		_ENVIA_NIBBLE
   659 ;; This function is called by:
   660 ;;		_lcd_init
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text2
   665  000A82                     __ptext2:
   666                           	callstack 0
   667  000A82                     _LCD_CONFIG:
   668                           	callstack 27
   669  000A82                     
   670                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   671  000A82  908C               	bcf	140,0,c	;volatile
   672                           
   673                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   674  000A84  928C               	bcf	140,1,c	;volatile
   675  000A86                     
   676                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   677  000A86  0E30               	movlw	48
   678  000A88  EC0D  F006         	call	_ENVIA_NIBBLE
   679  000A8C                     
   680                           ;LCD.c: 77:         _delay(24000);
   681  000A8C  0E20               	movlw	32
   682  000A8E  6E04               	movwf	??_LCD_CONFIG^0,c
   683  000A90  0E2A               	movlw	42
   684  000A92                     u327:
   685  000A92  2EE8               	decfsz	wreg,f,c
   686  000A94  D7FE               	bra	u327
   687  000A96  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   688  000A98  D7FC               	bra	u327
   689  000A9A                     
   690                           ;LCD.c: 78:         _delay(24000);
   691  000A9A  0E20               	movlw	32
   692  000A9C  6E04               	movwf	??_LCD_CONFIG^0,c
   693  000A9E  0E2A               	movlw	42
   694  000AA0                     u337:
   695  000AA0  2EE8               	decfsz	wreg,f,c
   696  000AA2  D7FE               	bra	u337
   697  000AA4  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   698  000AA6  D7FC               	bra	u337
   699                           
   700                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   701  000AA8  0E30               	movlw	48
   702  000AAA  EC0D  F006         	call	_ENVIA_NIBBLE
   703  000AAE                     
   704                           ;LCD.c: 83:  _delay(1200);
   705  000AAE  0EF0               	movlw	240
   706  000AB0                     u347:
   707  000AB0  D000               	nop2	
   708  000AB2  2EE8               	decfsz	wreg,f,c
   709  000AB4  D7FD               	bra	u347
   710  000AB6                     
   711                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   712  000AB6  0E30               	movlw	48
   713  000AB8  EC0D  F006         	call	_ENVIA_NIBBLE
   714  000ABC                     
   715                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   716  000ABC  0E20               	movlw	32
   717  000ABE  EC0D  F006         	call	_ENVIA_NIBBLE
   718  000AC2                     
   719                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   720  000AC2  0E01               	movlw	1
   721  000AC4  ECAD  F005         	call	_ENVIA_LCD_CMD
   722  000AC8                     
   723                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   724  000AC8  0E28               	movlw	40
   725  000ACA  ECAD  F005         	call	_ENVIA_LCD_CMD
   726  000ACE                     
   727                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   728  000ACE  0E0F               	movlw	15
   729  000AD0  ECAD  F005         	call	_ENVIA_LCD_CMD
   730  000AD4                     
   731                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   732  000AD4  0E06               	movlw	6
   733  000AD6  ECAD  F005         	call	_ENVIA_LCD_CMD
   734  000ADA                     
   735                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   736  000ADA  0E01               	movlw	1
   737  000ADC  ECAD  F005         	call	_ENVIA_LCD_CMD
   738  000AE0  0012               	return		;funcret
   739  000AE2                     __end_of_LCD_CONFIG:
   740                           	callstack 0
   741                           
   742 ;; *************** function _CURSOR_ONOFF *****************
   743 ;; Defined at:
   744 ;;		line 35 in file "LCD.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  estado          1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  estado          1    3[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         0       0       0       0       0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 2
   765 ;; This function calls:
   766 ;;		_ENVIA_LCD_CMD
   767 ;; This function is called by:
   768 ;;		_lcd_init
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text3
   773  000BC2                     __ptext3:
   774                           	callstack 0
   775  000BC2                     _CURSOR_ONOFF:
   776                           	callstack 27
   777                           
   778                           ;incstack = 0
   779                           ;CURSOR_ONOFF@estado stored from wreg
   780  000BC2  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   781  000BC4                     
   782                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   783  000BC4  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   784  000BC6  A4D8               	btfss	status,2,c
   785  000BC8  EFE8  F005         	goto	u21
   786  000BCC  EFEA  F005         	goto	u20
   787  000BD0                     u21:
   788  000BD0  EFED  F005         	goto	l868
   789  000BD4                     u20:
   790  000BD4  0E0E               	movlw	14
   791  000BD6  ECAD  F005         	call	_ENVIA_LCD_CMD
   792  000BDA                     l868:
   793                           
   794                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   795  000BDA  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   796  000BDC  A4D8               	btfss	status,2,c
   797  000BDE  EFF3  F005         	goto	u31
   798  000BE2  EFF5  F005         	goto	u30
   799  000BE6                     u31:
   800  000BE6  EFF8  F005         	goto	l42
   801  000BEA                     u30:
   802  000BEA  0E0C               	movlw	12
   803  000BEC  ECAD  F005         	call	_ENVIA_LCD_CMD
   804  000BF0                     l42:
   805  000BF0  0012               	return		;funcret
   806  000BF2                     __end_of_CURSOR_ONOFF:
   807                           	callstack 0
   808                           
   809 ;; *************** function _CURSOR_HOME *****************
   810 ;; Defined at:
   811 ;;		line 30 in file "LCD.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 2
   832 ;; This function calls:
   833 ;;		_ENVIA_LCD_CMD
   834 ;; This function is called by:
   835 ;;		_lcd_init
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  000C44                     __ptext4:
   841                           	callstack 0
   842  000C44                     _CURSOR_HOME:
   843                           	callstack 27
   844  000C44                     
   845                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   846  000C44  0E02               	movlw	2
   847  000C46  ECAD  F005         	call	_ENVIA_LCD_CMD
   848  000C4A  0012               	return		;funcret
   849  000C4C                     __end_of_CURSOR_HOME:
   850                           	callstack 0
   851                           
   852 ;; *************** function _BORRAR_LCD *****************
   853 ;; Defined at:
   854 ;;		line 67 in file "LCD.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         0       0       0       0       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 2
   875 ;; This function calls:
   876 ;;		_ENVIA_LCD_CMD
   877 ;; This function is called by:
   878 ;;		_lcd_init
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  000C4C                     __ptext5:
   884                           	callstack 0
   885  000C4C                     _BORRAR_LCD:
   886                           	callstack 27
   887  000C4C                     
   888                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   889  000C4C  0E01               	movlw	1
   890  000C4E  ECAD  F005         	call	_ENVIA_LCD_CMD
   891  000C52  0012               	return		;funcret
   892  000C54                     __end_of_BORRAR_LCD:
   893                           	callstack 0
   894                           
   895 ;; *************** function _configuro *****************
   896 ;; Defined at:
   897 ;;		line 6 in file "maincode2.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		None
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   911 ;;      Params:         0       0       0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text6
   925  000C54                     __ptext6:
   926                           	callstack 0
   927  000C54                     _configuro:
   928                           	callstack 30
   929  000C54                     
   930                           ;maincode2.c: 7:     TRISBbits.RB7 = 0;
   931  000C54  9E93               	bcf	147,7,c	;volatile
   932  000C56  0012               	return		;funcret
   933  000C58                     __end_of_configuro:
   934                           	callstack 0
   935                           
   936 ;; *************** function _POS_CURSOR *****************
   937 ;; Defined at:
   938 ;;		line 6 in file "LCD.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  fila            1    wreg     unsigned char 
   941 ;;  columna         1    3[COMRAM] unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  fila            1    4[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   953 ;;      Params:         1       0       0       0       0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0
   956 ;;      Totals:         2       0       0       0       0       0       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 2
   960 ;; This function calls:
   961 ;;		_ENVIA_LCD_CMD
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968  000B20                     __ptext7:
   969                           	callstack 0
   970  000B20                     _POS_CURSOR:
   971                           	callstack 28
   972                           
   973                           ;incstack = 0
   974                           ;POS_CURSOR@fila stored from wreg
   975  000B20  6E05               	movwf	POS_CURSOR@fila^0,c
   976  000B22                     
   977                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   978  000B22  0405               	decf	POS_CURSOR@fila^0,w,c
   979  000B24  A4D8               	btfss	status,2,c
   980  000B26  EF97  F005         	goto	u161
   981  000B2A  EF99  F005         	goto	u160
   982  000B2E                     u161:
   983  000B2E  EF9F  F005         	goto	l1076
   984  000B32                     u160:
   985  000B32                     
   986                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   987  000B32  5004               	movf	POS_CURSOR@columna^0,w,c
   988  000B34  0F80               	addlw	128
   989  000B36  ECAD  F005         	call	_ENVIA_LCD_CMD
   990                           
   991                           ;LCD.c: 11:  }
   992  000B3A  EFAC  F005         	goto	l24
   993  000B3E                     l1076:
   994  000B3E  0E02               	movlw	2
   995  000B40  1805               	xorwf	POS_CURSOR@fila^0,w,c
   996  000B42  A4D8               	btfss	status,2,c
   997  000B44  EFA6  F005         	goto	u171
   998  000B48  EFA8  F005         	goto	u170
   999  000B4C                     u171:
  1000  000B4C  EFAC  F005         	goto	l24
  1001  000B50                     u170:
  1002  000B50                     
  1003                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1004  000B50  5004               	movf	POS_CURSOR@columna^0,w,c
  1005  000B52  0FC0               	addlw	192
  1006  000B54  ECAD  F005         	call	_ENVIA_LCD_CMD
  1007  000B58                     l24:
  1008  000B58  0012               	return		;funcret
  1009  000B5A                     __end_of_POS_CURSOR:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function _ENVIA_LCD_CMD *****************
  1013 ;; Defined at:
  1014 ;;		line 104 in file "LCD.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  dato            1    wreg     unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  dato            1    1[COMRAM] unsigned char 
  1019 ;;  aux             1    2[COMRAM] unsigned char 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 1
  1036 ;; This function calls:
  1037 ;;		_ENVIA_NIBBLE
  1038 ;;		_LEER_LCD
  1039 ;; This function is called by:
  1040 ;;		_POS_CURSOR
  1041 ;;		_CURSOR_HOME
  1042 ;;		_CURSOR_ONOFF
  1043 ;;		_BORRAR_LCD
  1044 ;;		_LCD_CONFIG
  1045 ;;		_BLINK_CURSOR
  1046 ;;		_DISPLAY_ONOFF
  1047 ;;		_GENERACARACTER
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           	psect	text8
  1052  000B5A                     __ptext8:
  1053                           	callstack 0
  1054  000B5A                     _ENVIA_LCD_CMD:
  1055                           	callstack 27
  1056                           
  1057                           ;incstack = 0
  1058                           ;ENVIA_LCD_CMD@dato stored from wreg
  1059  000B5A  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1060  000B5C                     
  1061                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1062  000B5C  908C               	bcf	140,0,c	;volatile
  1063  000B5E                     
  1064                           ;LCD.c: 108:  LEER_LCD();
  1065  000B5E  EC08  F005         	call	_LEER_LCD	;wreg free
  1066  000B62                     
  1067                           ;LCD.c: 109:  TRISD = 0b00000000;
  1068  000B62  0E00               	movlw	0
  1069  000B64  6E95               	movwf	149,c	;volatile
  1070  000B66                     
  1071                           ;LCD.c: 111:         _delay(1200);
  1072  000B66  0EF0               	movlw	240
  1073  000B68                     u357:
  1074  000B68  D000               	nop2	
  1075  000B6A  2EE8               	decfsz	wreg,f,c
  1076  000B6C  D7FD               	bra	u357
  1077  000B6E                     
  1078                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1079  000B6E  928C               	bcf	140,1,c	;volatile
  1080  000B70                     
  1081                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1082  000B70  948C               	bcf	140,2,c	;volatile
  1083  000B72                     
  1084                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1085  000B72  908C               	bcf	140,0,c	;volatile
  1086  000B74                     
  1087                           ;LCD.c: 115:  aux = dato & 0xF0;
  1088  000B74  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1089  000B76  0BF0               	andlw	240
  1090  000B78  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1091  000B7A                     
  1092                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1093  000B7A  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1094  000B7C  EC0D  F006         	call	_ENVIA_NIBBLE
  1095  000B80                     
  1096                           ;LCD.c: 117:  aux = dato<<4;
  1097  000B80  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1098  000B82  0BF0               	andlw	240
  1099  000B84  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1100  000B86                     
  1101                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1102  000B86  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1103  000B88  EC0D  F006         	call	_ENVIA_NIBBLE
  1104  000B8C  0012               	return		;funcret
  1105  000B8E                     __end_of_ENVIA_LCD_CMD:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _ESCRIBE_MENSAJE *****************
  1109 ;; Defined at:
  1110 ;;		line 41 in file "LCD.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1113 ;;		 -> STR_5(12), STR_4(12), STR_3(12), STR_2(12), 
  1114 ;;		 -> STR_1(11), 
  1115 ;;  tam             1    5[COMRAM] unsigned char 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  i               1    8[COMRAM] unsigned char 
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1127 ;;      Params:         3       0       0       0       0       0       0       0       0
  1128 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1129 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1130 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1131 ;;Total ram usage:        6 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		_ENVIA_CHAR
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text9
  1142  000AE2                     __ptext9:
  1143                           	callstack 0
  1144  000AE2                     _ESCRIBE_MENSAJE:
  1145                           	callstack 28
  1146  000AE2                     
  1147                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1148  000AE2  0E00               	movlw	0
  1149  000AE4  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1150                           
  1151                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1152  000AE6  0E00               	movlw	0
  1153  000AE8  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1154  000AEA  EF86  F005         	goto	l1086
  1155  000AEE                     l1082:
  1156                           
  1157                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1158  000AEE  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1159  000AF0  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1160  000AF2  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1161  000AF4  0E00               	movlw	0
  1162  000AF6  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1163  000AF8  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1164  000AFA  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1165  000AFE  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1166  000B02                     	if	0	;tblptru may be non-zero
  1167  000B02                     	endif
  1168  000B02                     	if	0	;tblptru may be non-zero
  1169  000B02                     	endif
  1170  000B02  0008               	tblrd		*
  1171  000B04  50F5               	movf	tablat,w,c
  1172  000B06  ECC7  F005         	call	_ENVIA_CHAR
  1173  000B0A                     
  1174                           ;LCD.c: 47:  }
  1175  000B0A  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1176  000B0C                     l1086:
  1177  000B0C  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1178  000B0E  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1179  000B10  A0D8               	btfss	status,0,c
  1180  000B12  EF8D  F005         	goto	u181
  1181  000B16  EF8F  F005         	goto	u180
  1182  000B1A                     u181:
  1183  000B1A  EF77  F005         	goto	l1082
  1184  000B1E                     u180:
  1185  000B1E  0012               	return		;funcret
  1186  000B20                     __end_of_ESCRIBE_MENSAJE:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _ENVIA_CHAR *****************
  1190 ;; Defined at:
  1191 ;;		line 50 in file "LCD.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  dato            1    wreg     unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  dato            1    1[COMRAM] unsigned char 
  1196 ;;  aux             1    2[COMRAM] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0
  1207 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1209 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1210 ;;Total ram usage:        2 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 1
  1213 ;; This function calls:
  1214 ;;		_ENVIA_NIBBLE
  1215 ;;		_LEER_LCD
  1216 ;; This function is called by:
  1217 ;;		_ESCRIBE_MENSAJE
  1218 ;;		_main
  1219 ;;		_GENERACARACTER
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           	psect	text10
  1224  000B8E                     __ptext10:
  1225                           	callstack 0
  1226  000B8E                     _ENVIA_CHAR:
  1227                           	callstack 28
  1228                           
  1229                           ;incstack = 0
  1230                           ;ENVIA_CHAR@dato stored from wreg
  1231  000B8E  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1232  000B90                     
  1233                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1234  000B90  808C               	bsf	140,0,c	;volatile
  1235  000B92                     
  1236                           ;LCD.c: 54:  LEER_LCD();
  1237  000B92  EC08  F005         	call	_LEER_LCD	;wreg free
  1238  000B96                     
  1239                           ;LCD.c: 55:  TRISD = 0x00;
  1240  000B96  0E00               	movlw	0
  1241  000B98  6E95               	movwf	149,c	;volatile
  1242  000B9A                     
  1243                           ;LCD.c: 56:         _delay(1200);
  1244  000B9A  0EF0               	movlw	240
  1245  000B9C                     u367:
  1246  000B9C  D000               	nop2	
  1247  000B9E  2EE8               	decfsz	wreg,f,c
  1248  000BA0  D7FD               	bra	u367
  1249  000BA2                     
  1250                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1251  000BA2  928C               	bcf	140,1,c	;volatile
  1252  000BA4                     
  1253                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1254  000BA4  948C               	bcf	140,2,c	;volatile
  1255  000BA6                     
  1256                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1257  000BA6  808C               	bsf	140,0,c	;volatile
  1258  000BA8                     
  1259                           ;LCD.c: 61:  aux = dato & 0xF0;
  1260  000BA8  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1261  000BAA  0BF0               	andlw	240
  1262  000BAC  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1263  000BAE                     
  1264                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1265  000BAE  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1266  000BB0  EC0D  F006         	call	_ENVIA_NIBBLE
  1267  000BB4                     
  1268                           ;LCD.c: 63:  aux = dato << 4;
  1269  000BB4  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1270  000BB6  0BF0               	andlw	240
  1271  000BB8  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1272  000BBA                     
  1273                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1274  000BBA  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1275  000BBC  EC0D  F006         	call	_ENVIA_NIBBLE
  1276  000BC0  0012               	return		;funcret
  1277  000BC2                     __end_of_ENVIA_CHAR:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _LEER_LCD *****************
  1281 ;; Defined at:
  1282 ;;		line 121 in file "LCD.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  aux             1    0[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0
  1297 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1299 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_ENVIA_CHAR
  1306 ;;		_ENVIA_LCD_CMD
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text11
  1311  000A10                     __ptext11:
  1312                           	callstack 0
  1313  000A10                     _LEER_LCD:
  1314                           	callstack 27
  1315  000A10                     
  1316                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1317  000A10  0EF8               	movlw	248
  1318  000A12  6E95               	movwf	149,c	;volatile
  1319  000A14                     
  1320                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1321  000A14  908C               	bcf	140,0,c	;volatile
  1322  000A16                     
  1323                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1324  000A16  828C               	bsf	140,1,c	;volatile
  1325  000A18                     
  1326                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1327  000A18  848C               	bsf	140,2,c	;volatile
  1328  000A1A                     
  1329                           ;LCD.c: 128:         _delay(1200);
  1330  000A1A  0EF0               	movlw	240
  1331  000A1C                     u377:
  1332  000A1C  D000               	nop2	
  1333  000A1E  2EE8               	decfsz	wreg,f,c
  1334  000A20  D7FD               	bra	u377
  1335  000A22                     
  1336                           ;LCD.c: 130:  aux = PORTD;
  1337  000A22  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1338  000A26                     
  1339                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1340  000A26  948C               	bcf	140,2,c	;volatile
  1341  000A28                     
  1342                           ;LCD.c: 132:         _delay(1200);
  1343  000A28  0EF0               	movlw	240
  1344  000A2A                     u387:
  1345  000A2A  D000               	nop2	
  1346  000A2C  2EE8               	decfsz	wreg,f,c
  1347  000A2E  D7FD               	bra	u387
  1348  000A30                     
  1349                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1350  000A30  848C               	bsf	140,2,c	;volatile
  1351  000A32                     
  1352                           ;LCD.c: 135:         _delay(1200);
  1353  000A32  0EF0               	movlw	240
  1354  000A34                     u397:
  1355  000A34  D000               	nop2	
  1356  000A36  2EE8               	decfsz	wreg,f,c
  1357  000A38  D7FD               	bra	u397
  1358  000A3A                     
  1359                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1360  000A3A  948C               	bcf	140,2,c	;volatile
  1361  000A3C                     l816:
  1362                           
  1363                           ;LCD.c: 138:  aux = aux & 0x80;
  1364  000A3C  5001               	movf	LEER_LCD@aux^0,w,c
  1365  000A3E  0B80               	andlw	128
  1366  000A40  6E01               	movwf	LEER_LCD@aux^0,c
  1367                           
  1368                           ;LCD.c: 139:  while(aux == 0x80)
  1369  000A42  EF37  F005         	goto	l830
  1370  000A46                     l67:
  1371                           
  1372                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1373  000A46  848C               	bsf	140,2,c	;volatile
  1374  000A48                     
  1375                           ;LCD.c: 142:             _delay(1200);
  1376  000A48  0EF0               	movlw	240
  1377  000A4A                     u407:
  1378  000A4A  D000               	nop2	
  1379  000A4C  2EE8               	decfsz	wreg,f,c
  1380  000A4E  D7FD               	bra	u407
  1381  000A50                     
  1382                           ;LCD.c: 143:             aux = PORTD;
  1383  000A50  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1384  000A54                     
  1385                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1386  000A54  948C               	bcf	140,2,c	;volatile
  1387                           
  1388                           ;LCD.c: 145:             _delay(1200);
  1389  000A56  0EF0               	movlw	240
  1390  000A58                     u417:
  1391  000A58  D000               	nop2	
  1392  000A5A  2EE8               	decfsz	wreg,f,c
  1393  000A5C  D7FD               	bra	u417
  1394  000A5E                     
  1395                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1396  000A5E  848C               	bsf	140,2,c	;volatile
  1397                           
  1398                           ;LCD.c: 147:             _delay(1200);
  1399  000A60  0EF0               	movlw	240
  1400  000A62                     u427:
  1401  000A62  D000               	nop2	
  1402  000A64  2EE8               	decfsz	wreg,f,c
  1403  000A66  D7FD               	bra	u427
  1404  000A68                     
  1405                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1406  000A68  948C               	bcf	140,2,c	;volatile
  1407  000A6A  EF1E  F005         	goto	l816
  1408  000A6E                     l830:
  1409                           
  1410                           ;LCD.c: 139:  while(aux == 0x80)
  1411  000A6E  0E80               	movlw	128
  1412  000A70  1801               	xorwf	LEER_LCD@aux^0,w,c
  1413  000A72  B4D8               	btfsc	status,2,c
  1414  000A74  EF3E  F005         	goto	u11
  1415  000A78  EF40  F005         	goto	u10
  1416  000A7C                     u11:
  1417  000A7C  EF23  F005         	goto	l67
  1418  000A80                     u10:
  1419  000A80  0012               	return		;funcret
  1420  000A82                     __end_of_LEER_LCD:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _ENVIA_NIBBLE *****************
  1424 ;; Defined at:
  1425 ;;		line 93 in file "LCD.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  dato            1    wreg     unsigned char 
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  dato            1    0[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0
  1440 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1442 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1443 ;;Total ram usage:        1 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_ENVIA_CHAR
  1449 ;;		_LCD_CONFIG
  1450 ;;		_ENVIA_LCD_CMD
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text12
  1455  000C1A                     __ptext12:
  1456                           	callstack 0
  1457  000C1A                     _ENVIA_NIBBLE:
  1458                           	callstack 28
  1459                           
  1460                           ;incstack = 0
  1461                           ;ENVIA_NIBBLE@dato stored from wreg
  1462  000C1A  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1463  000C1C                     
  1464                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1465  000C1C  0E0F               	movlw	15
  1466  000C1E  168C               	andwf	140,f,c	;volatile
  1467                           
  1468                           ;LCD.c: 96:  dato &= 0xF0;
  1469  000C20  0EF0               	movlw	240
  1470  000C22  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1471                           
  1472                           ;LCD.c: 97:  LATD|= dato;
  1473  000C24  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1474  000C26  128C               	iorwf	140,f,c	;volatile
  1475  000C28                     
  1476                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1477  000C28  848C               	bsf	140,2,c	;volatile
  1478  000C2A                     
  1479                           ;LCD.c: 100:         _delay(1200);
  1480  000C2A  0EF0               	movlw	240
  1481  000C2C                     u437:
  1482  000C2C  D000               	nop2	
  1483  000C2E  2EE8               	decfsz	wreg,f,c
  1484  000C30  D7FD               	bra	u437
  1485  000C32                     
  1486                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1487  000C32  948C               	bcf	140,2,c	;volatile
  1488  000C34  0012               	return		;funcret
  1489  000C36                     __end_of_ENVIA_NIBBLE:
  1490                           	callstack 0
  1491                           
  1492                           	psect	rparam
  1493  0000                     
  1494                           	psect	idloc
  1495                           
  1496                           ;Config register IDLOC0 @ 0x200000
  1497                           ;	unspecified, using default values
  1498  200000                     	org	2097152
  1499  200000  FF                 	db	255
  1500                           
  1501                           ;Config register IDLOC1 @ 0x200001
  1502                           ;	unspecified, using default values
  1503  200001                     	org	2097153
  1504  200001  FF                 	db	255
  1505                           
  1506                           ;Config register IDLOC2 @ 0x200002
  1507                           ;	unspecified, using default values
  1508  200002                     	org	2097154
  1509  200002  FF                 	db	255
  1510                           
  1511                           ;Config register IDLOC3 @ 0x200003
  1512                           ;	unspecified, using default values
  1513  200003                     	org	2097155
  1514  200003  FF                 	db	255
  1515                           
  1516                           ;Config register IDLOC4 @ 0x200004
  1517                           ;	unspecified, using default values
  1518  200004                     	org	2097156
  1519  200004  FF                 	db	255
  1520                           
  1521                           ;Config register IDLOC5 @ 0x200005
  1522                           ;	unspecified, using default values
  1523  200005                     	org	2097157
  1524  200005  FF                 	db	255
  1525                           
  1526                           ;Config register IDLOC6 @ 0x200006
  1527                           ;	unspecified, using default values
  1528  200006                     	org	2097158
  1529  200006  FF                 	db	255
  1530                           
  1531                           ;Config register IDLOC7 @ 0x200007
  1532                           ;	unspecified, using default values
  1533  200007                     	org	2097159
  1534  200007  FF                 	db	255
  1535                           
  1536                           	psect	config
  1537                           
  1538                           ;Config register CONFIG1L @ 0x300000
  1539                           ;	PLL Prescaler Selection bits
  1540                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1541                           ;	System Clock Postscaler Selection bits
  1542                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1543                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1544                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1545  300000                     	org	3145728
  1546  300000  00                 	db	0
  1547                           
  1548                           ;Config register CONFIG1H @ 0x300001
  1549                           ;	Oscillator Selection bits
  1550                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1551                           ;	Fail-Safe Clock Monitor Enable bit
  1552                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1553                           ;	Internal/External Oscillator Switchover bit
  1554                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1555  300001                     	org	3145729
  1556  300001  02                 	db	2
  1557                           
  1558                           ;Config register CONFIG2L @ 0x300002
  1559                           ;	Power-up Timer Enable bit
  1560                           ;	PWRT = ON, PWRT enabled
  1561                           ;	Brown-out Reset Enable bits
  1562                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1563                           ;	Brown-out Reset Voltage bits
  1564                           ;	BORV = 3, Minimum setting 2.05V
  1565                           ;	USB Voltage Regulator Enable bit
  1566                           ;	VREGEN = OFF, USB voltage regulator disabled
  1567  300002                     	org	3145730
  1568  300002  18                 	db	24
  1569                           
  1570                           ;Config register CONFIG2H @ 0x300003
  1571                           ;	Watchdog Timer Enable bit
  1572                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1573                           ;	Watchdog Timer Postscale Select bits
  1574                           ;	WDTPS = 32768, 1:32768
  1575  300003                     	org	3145731
  1576  300003  1E                 	db	30
  1577                           
  1578                           ; Padding undefined space
  1579  300004                     	org	3145732
  1580  300004  FF                 	db	255
  1581                           
  1582                           ;Config register CONFIG3H @ 0x300005
  1583                           ;	CCP2 MUX bit
  1584                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1585                           ;	PORTB A/D Enable bit
  1586                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1587                           ;	Low-Power Timer 1 Oscillator Enable bit
  1588                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1589                           ;	MCLR Pin Enable bit
  1590                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1591  300005                     	org	3145733
  1592  300005  81                 	db	129
  1593                           
  1594                           ;Config register CONFIG4L @ 0x300006
  1595                           ;	Stack Full/Underflow Reset Enable bit
  1596                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1597                           ;	Single-Supply ICSP Enable bit
  1598                           ;	LVP = OFF, Single-Supply ICSP disabled
  1599                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1600                           ;	ICPRT = OFF, ICPORT disabled
  1601                           ;	Extended Instruction Set Enable bit
  1602                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1603                           ;	Background Debugger Enable bit
  1604                           ;	DEBUG = 0x1, unprogrammed default
  1605  300006                     	org	3145734
  1606  300006  81                 	db	129
  1607                           
  1608                           ; Padding undefined space
  1609  300007                     	org	3145735
  1610  300007  FF                 	db	255
  1611                           
  1612                           ;Config register CONFIG5L @ 0x300008
  1613                           ;	Code Protection bit
  1614                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1615                           ;	Code Protection bit
  1616                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1617                           ;	Code Protection bit
  1618                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1619                           ;	Code Protection bit
  1620                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1621  300008                     	org	3145736
  1622  300008  0F                 	db	15
  1623                           
  1624                           ;Config register CONFIG5H @ 0x300009
  1625                           ;	Boot Block Code Protection bit
  1626                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1627                           ;	Data EEPROM Code Protection bit
  1628                           ;	CPD = OFF, Data EEPROM is not code-protected
  1629  300009                     	org	3145737
  1630  300009  C0                 	db	192
  1631                           
  1632                           ;Config register CONFIG6L @ 0x30000A
  1633                           ;	Write Protection bit
  1634                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1635                           ;	Write Protection bit
  1636                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1637                           ;	Write Protection bit
  1638                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1639                           ;	Write Protection bit
  1640                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1641  30000A                     	org	3145738
  1642  30000A  0F                 	db	15
  1643                           
  1644                           ;Config register CONFIG6H @ 0x30000B
  1645                           ;	Configuration Register Write Protection bit
  1646                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1647                           ;	Boot Block Write Protection bit
  1648                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1649                           ;	Data EEPROM Write Protection bit
  1650                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1651  30000B                     	org	3145739
  1652  30000B  E0                 	db	224
  1653                           
  1654                           ;Config register CONFIG7L @ 0x30000C
  1655                           ;	Table Read Protection bit
  1656                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1657                           ;	Table Read Protection bit
  1658                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1659                           ;	Table Read Protection bit
  1660                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1661                           ;	Table Read Protection bit
  1662                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1663  30000C                     	org	3145740
  1664  30000C  0F                 	db	15
  1665                           
  1666                           ;Config register CONFIG7H @ 0x30000D
  1667                           ;	Boot Block Table Read Protection bit
  1668                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1669  30000D                     	org	3145741
  1670  30000D  40                 	db	64
  1671                           tosu	equ	0xFFF
  1672                           tosh	equ	0xFFE
  1673                           tosl	equ	0xFFD
  1674                           stkptr	equ	0xFFC
  1675                           pclatu	equ	0xFFB
  1676                           pclath	equ	0xFFA
  1677                           pcl	equ	0xFF9
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           prodh	equ	0xFF4
  1683                           prodl	equ	0xFF3
  1684                           indf0	equ	0xFEF
  1685                           postinc0	equ	0xFEE
  1686                           postdec0	equ	0xFED
  1687                           preinc0	equ	0xFEC
  1688                           plusw0	equ	0xFEB
  1689                           fsr0h	equ	0xFEA
  1690                           fsr0l	equ	0xFE9
  1691                           wreg	equ	0xFE8
  1692                           indf1	equ	0xFE7
  1693                           postinc1	equ	0xFE6
  1694                           postdec1	equ	0xFE5
  1695                           preinc1	equ	0xFE4
  1696                           plusw1	equ	0xFE3
  1697                           fsr1h	equ	0xFE2
  1698                           fsr1l	equ	0xFE1
  1699                           bsr	equ	0xFE0
  1700                           indf2	equ	0xFDF
  1701                           postinc2	equ	0xFDE
  1702                           postdec2	equ	0xFDD
  1703                           preinc2	equ	0xFDC
  1704                           plusw2	equ	0xFDB
  1705                           fsr2h	equ	0xFDA
  1706                           fsr2l	equ	0xFD9
  1707                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2389
                                              9 COMRAM     4     4      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     588
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     971
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      D       D       1       13.7%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITBIGSFRhlh         1      0       0      22        0.0%
BITBIGSFRhll         6      0       0      23        0.0%
BITBIGSFRlhh         1      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRll         23      0       0      26        0.0%
BIGRAM             7FF      0       0      27        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 21:25:02 2022

                     l24 0B58                       l42 0BF0                       l51 0BC0  
                     l60 0C34                       l37 0C4A                       l54 0C52  
                     l63 0B8C                       l48 0B1E                       l57 0AE0  
                     l67 0A46                       l69 0A80                       l99 0C56  
                     u10 0A80                       u11 0A7C                       u20 0BD4  
                     u21 0BD0                       u30 0BEA                       u31 0BE6  
          ENVIA_CHAR@aux 0003                      l102 0C18                      l110 08C6  
                    l112 0934                      l114 09A2                      l108 085C  
                    l800 0A18                      l810 0A30                      l802 0A1A  
                    l820 0A50                      l812 0A32                      l804 0A22  
                    l900 0A8C                      l822 0A54                      l830 0A6E  
                    l814 0A3A                      l806 0A26                      l910 0AC2  
                    l902 0A9A                      l832 0C1C                      l824 0A5E  
                    l816 0A3C                      l808 0A28                      l840 0B5C  
                    l912 0AC8                      l904 0AAE                      l834 0C28  
                    l826 0A68                      l818 0A48                      l850 0B70  
                    l842 0B5E                      l914 0ACE                      l906 0AB6  
                    l836 0C2A                      l860 0B86                      l852 0B72  
                    l844 0B62                      l916 0AD4                      l908 0ABC  
                    l940 0BF6                      l838 0C32                      l854 0B74  
                    l846 0B66                      l862 0C44                      l870 0BEA  
                    l918 0ADA                      l942 0BFA                      l880 0BA2  
                    l872 0B90                      l856 0B7A                      l848 0B6E  
                    l936 0C54                      l864 0BC4                      l944 0C0A  
                    l794 0A10                      l890 0BB4                      l882 0BA4  
                    l874 0B92                      l858 0B80                      l866 0BD4  
                    l946 0C0E                      l938 0BF2                      l796 0A14  
                    l892 0BBA                      l884 0BA6                      l876 0B96  
                    l868 0BDA                      l948 0C12                      l798 0A16  
                    l886 0BA8                      l878 0B9A                      l894 0C4C  
                    l888 0BAE                      l896 0A82                      l898 0A86  
                    u200 092C                      u201 0928                      u210 099A  
                    u211 0996                      u220 0A08                      u221 0A04  
                    u160 0B32                      u161 0B2E                      u170 0B50  
                    u171 0B4C                      u307 09C0                      u180 0B1E  
                    u181 0B1A                      u317 0C00                      u237 0864  
                    u190 08BE                      u407 0A4A                      u327 0A92  
                    u191 08BA                      u247 0878                      u417 0A58  
                    u337 0AA0                      u257 08CE                      u427 0A62  
                    u347 0AB0                      u267 08E4                      u437 0C2C  
                    u357 0B68                      u277 093C                      u367 0B9C  
                    u287 0952                      u377 0A1C                      u297 09AA  
                    u387 0A2A                      u397 0A34              LEER_LCD@aux 0001  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0001  
         ENVIA_CHAR@dato 0002                     l1110 088E                     l1112 089E  
                   l1104 085E                     l1130 08FC                     l1114 08A4  
                   l1106 086C                     l1132 090C                     l1124 08C8  
                   l1116 08A8                     l1108 0884                     l1150 096A  
                   l1134 0912                     l1126 08D8                     l1118 08BE  
                   l1080 0AE2                     l1072 0B22                     l1152 097A  
                   l1144 0936                     l1136 0916                     l1128 08F2  
                   l1082 0AEE                     l1074 0B32                     l1170 09D8  
                   l1154 0980                     l1146 0946                     l1138 092C  
                   l1090 0836                     l1084 0B0A                     l1076 0B3E  
                   l1172 09E8                     l1164 09A4                     l1156 0984  
                   l1148 0960                     l1092 083A                     l1086 0B0C  
                   l1078 0B50                     l1174 09EE                     l1166 09B4  
                   l1158 099A                     l1094 0844                     l1176 09F2  
                   l1168 09CE                     l1096 0854                     l1088 0832  
                   l1098 0854                     STR_1 0825                     STR_2 080D  
                   STR_3 0819                     STR_4 0801                     STR_5 0819  
                   _LATD 000F8C                     _main 0832                     start 0000  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0002  
       __end_of_LEER_LCD 0A82                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004             main@variable 000C  
                  tablat 000FF5                    status 000FD8           ??_CURSOR_ONOFF 0004  
        __initialization 0C36             __end_of_main 0A10          _ESCRIBE_MENSAJE 0AE2  
                 ??_main 000A            __activetblptr 000001         __end_of_lcd_init 0C1A  
   __end_of_ENVIA_NIBBLE 0C36                   isa$std 000001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0C36             ??_LCD_CONFIG 0004            ___rparam_used 000001  
           ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 0B20           __pcstackCOMRAM 0001  
     __end_of_BORRAR_LCD 0C54         ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 0BF2  
     __end_of_LCD_CONFIG 0AE2       __end_of_ENVIA_CHAR 0BC2               ??_LEER_LCD 0001  
       ENVIA_NIBBLE@dato 0001             ??_POS_CURSOR 0005                ?_lcd_init 0001  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0004  
      __end_of_configuro 0C58             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0B8E  
                __pcinit 0C36       __end_of_POS_CURSOR 0B5A                  __ramtop 0800  
                __ptext0 0832                  __ptext1 0BF2                  __ptext2 0A82  
                __ptext3 0BC2                  __ptext4 0C44                  __ptext5 0C4C  
                __ptext6 0C54                  __ptext7 0B20                  __ptext8 0B5A  
                __ptext9 0AE2               ??_lcd_init 0005             _ENVIA_NIBBLE 0C1A  
   end_of_initialization 0C36                _TRISBbits 000F93             _CURSOR_ONOFF 0BC2  
     CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004      start_initialization 0C36  
      ENVIA_LCD_CMD@dato 0002      __end_of_CURSOR_HOME 0C4C                _configuro 0C54  
            __smallconst 0800                 _LEER_LCD 0A10                 _LATBbits 000F8A  
               _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009           POS_CURSOR@fila 0005  
             ?_configuro 0001              _CURSOR_HOME 0C44                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800                 __ptext10 0B8E  
               __ptext11 0A10                 __ptext12 0C1A               _BORRAR_LCD 0C4C  
               _lcd_init 0BF2               _LCD_CONFIG 0A82               _ENVIA_CHAR 0B8E  
               isa$xinst 000000            _ENVIA_LCD_CMD 0B5A              ??_configuro 0001  
      ??_ESCRIBE_MENSAJE 0007    ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0B20  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0004  
