

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 31 12:29:38 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _LATD	set	3980
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _PORTD	set	3971
    74  0000                     _LATDbits	set	3980
    75  0000                     _TRISCbits	set	3988
    76  0000                     _CCPR1L	set	4030
    77  0000                     _PR2	set	4043
    78  0000                     _ADCON2	set	4032
    79  0000                     _T2CON	set	4042
    80  0000                     _TRISD	set	3989
    81  0000                     _CCP1CON	set	4029
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON1	set	4033
    85                           
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     STR_1:
    91  000801  4C                 	db	76	;'L'
    92  000802  61                 	db	97	;'a'
    93  000803  62                 	db	98	;'b'
    94  000804  20                 	db	32
    95  000805  53                 	db	83	;'S'
    96  000806  65                 	db	101	;'e'
    97  000807  6D                 	db	109	;'m'
    98  000808  61                 	db	97	;'a'
    99  000809  6E                 	db	110	;'n'
   100  00080A  61                 	db	97	;'a'
   101  00080B  20                 	db	32
   102  00080C  31                 	db	49	;'1'
   103  00080D  31                 	db	49	;'1'
   104  00080E  00                 	db	0
   105  00080F                     STR_3:
   106  00080F  20                 	db	32
   107  000810  41                 	db	65	;'A'
   108  000811  4E                 	db	78	;'N'
   109  000812  30                 	db	48	;'0'
   110  000813  3A                 	db	58	;':'
   111  000814  00                 	db	0
   112  000815                     STR_2:
   113  000815  42                 	db	66	;'B'
   114  000816  4C                 	db	76	;'L'
   115  000817  3A                 	db	58	;':'
   116  000818  00                 	db	0
   117  000819  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122  00142E                     __pcinit:
   123                           	callstack 0
   124  00142E                     start_initialization:
   125                           	callstack 0
   126  00142E                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (12 bytes)
   130  00142E  EE00  F028         	lfsr	0,__pbssCOMRAM
   131  001432  0E0C               	movlw	12
   132  001434                     clear_0:
   133  001434  6AEE               	clrf	postinc0,c
   134  001436  06E8               	decf	wreg,f,c
   135  001438  E1FD               	bnz	clear_0
   136  00143A                     end_of_initialization:
   137                           	callstack 0
   138  00143A                     __end_of__initialization:
   139                           	callstack 0
   140  00143A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   141  00143C  6EF8               	movwf	tblptru,c
   142  00143E  0E08               	movlw	high __Lsmallconst
   143  001440  6EF7               	movwf	tblptrh,c
   144  001442  0100               	movlb	0
   145  001444  EFFC  F006         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssCOMRAM
   148  000028                     __pbssCOMRAM:
   149                           	callstack 0
   150  000028                     _x_var:
   151                           	callstack 0
   152  000028                     	ds	4
   153  00002C                     _unidad:
   154                           	callstack 0
   155  00002C                     	ds	2
   156  00002E                     _decena:
   157                           	callstack 0
   158  00002E                     	ds	2
   159  000030                     _centena:
   160                           	callstack 0
   161  000030                     	ds	2
   162  000032                     _millar:
   163                           	callstack 0
   164  000032                     	ds	2
   165                           
   166                           	psect	cstackCOMRAM
   167  000001                     __pcstackCOMRAM:
   168                           	callstack 0
   169  000001                     ?___lwmod:
   170                           	callstack 0
   171  000001                     ?___fltol:
   172                           	callstack 0
   173  000001                     ?___xxtofl:
   174                           	callstack 0
   175  000001                     ENVIA_NIBBLE@dato:
   176                           	callstack 0
   177  000001                     LEER_LCD@aux:
   178                           	callstack 0
   179  000001                     ___lwmod@dividend:
   180                           	callstack 0
   181  000001                     ___fltol@f1:
   182                           	callstack 0
   183  000001                     ___xxtofl@val:
   184                           	callstack 0
   185                           
   186                           ; 4 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     ENVIA_CHAR@dato:
   189                           	callstack 0
   190  000002                     ENVIA_LCD_CMD@dato:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x1
   194  000002                     	ds	1
   195  000003                     ENVIA_CHAR@aux:
   196                           	callstack 0
   197  000003                     ENVIA_LCD_CMD@aux:
   198                           	callstack 0
   199  000003                     ___lwmod@divisor:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0x2
   203  000003                     	ds	1
   204  000004                     ??_LCD_CONFIG:
   205  000004                     POS_CURSOR@columna:
   206                           	callstack 0
   207  000004                     CURSOR_ONOFF@estado:
   208                           	callstack 0
   209  000004                     ESCRIBE_MENSAJE@cadena:
   210                           	callstack 0
   211                           
   212                           ; 2 bytes @ 0x3
   213  000004                     	ds	1
   214  000005                     ??_lcd_init:
   215  000005                     ??___fltol:
   216  000005                     ??___xxtofl:
   217  000005                     POS_CURSOR@fila:
   218                           	callstack 0
   219  000005                     ___lwmod@counter:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x4
   223  000005                     	ds	1
   224  000006                     ?___lwdiv:
   225                           	callstack 0
   226  000006                     ESCRIBE_MENSAJE@tam:
   227                           	callstack 0
   228  000006                     ___lwdiv@dividend:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x5
   232  000006                     	ds	1
   233  000007                     ??_ESCRIBE_MENSAJE:
   234                           
   235                           ; 1 bytes @ 0x6
   236  000007                     	ds	1
   237  000008                     ___lwdiv@divisor:
   238                           	callstack 0
   239                           
   240                           ; 2 bytes @ 0x7
   241  000008                     	ds	1
   242  000009                     ESCRIBE_MENSAJE@i:
   243                           	callstack 0
   244  000009                     ___fltol@sign1:
   245                           	callstack 0
   246  000009                     ___xxtofl@sign:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x8
   250  000009                     	ds	1
   251  00000A                     ___fltol@exp1:
   252                           	callstack 0
   253  00000A                     ___xxtofl@exp:
   254                           	callstack 0
   255  00000A                     ___lwdiv@quotient:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x9
   259  00000A                     	ds	1
   260  00000B                     ___xxtofl@arg:
   261                           	callstack 0
   262                           
   263                           ; 4 bytes @ 0xA
   264  00000B                     	ds	1
   265  00000C                     ___lwdiv@counter:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xB
   269  00000C                     	ds	1
   270  00000D                     convierte@numero:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xC
   274  00000D                     	ds	2
   275  00000F                     ?___flmul:
   276                           	callstack 0
   277  00000F                     ___flmul@b:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0xE
   281  00000F                     	ds	4
   282  000013                     ___flmul@a:
   283                           	callstack 0
   284                           
   285                           ; 4 bytes @ 0x12
   286  000013                     	ds	4
   287  000017                     ??___flmul:
   288                           
   289                           ; 1 bytes @ 0x16
   290  000017                     	ds	4
   291  00001B                     ___flmul@sign:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x1A
   295  00001B                     	ds	1
   296  00001C                     ___flmul@grs:
   297                           	callstack 0
   298                           
   299                           ; 4 bytes @ 0x1B
   300  00001C                     	ds	4
   301  000020                     ___flmul@aexp:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x1F
   305  000020                     	ds	1
   306  000021                     ___flmul@bexp:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x20
   310  000021                     	ds	1
   311  000022                     ___flmul@prod:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0x21
   315  000022                     	ds	4
   316  000026                     ___flmul@temp:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x25
   320  000026                     	ds	2
   321  000028                     
   322                           ; 1 bytes @ 0x27
   323 ;;
   324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   325 ;;
   326 ;; *************** function _main *****************
   327 ;; Defined at:
   328 ;;		line 52 in file "maincode1.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   342 ;;      Params:         0       0       0       0       0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels required when called: 4
   348 ;; This function calls:
   349 ;;		_ADC_config
   350 ;;		_CCP1_config
   351 ;;		_ENVIA_CHAR
   352 ;;		_ESCRIBE_MENSAJE
   353 ;;		_POS_CURSOR
   354 ;;		_TMR0_config
   355 ;;		___flmul
   356 ;;		___fltol
   357 ;;		___xxtofl
   358 ;;		_configuro
   359 ;;		_convierte
   360 ;;		_lcd_init
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           	psect	text0
   367  000DF8                     __ptext0:
   368                           	callstack 0
   369  000DF8                     _main:
   370                           	callstack 27
   371  000DF8                     
   372                           ;maincode1.c: 53:     configuro();
   373  000DF8  EC3D  F00A         	call	_configuro	;wreg free
   374  000DFC                     
   375                           ;maincode1.c: 54:     CCP1_config();
   376  000DFC  EC24  F00A         	call	_CCP1_config	;wreg free
   377  000E00                     
   378                           ;maincode1.c: 55:     ADC_config();
   379  000E00  EC2E  F00A         	call	_ADC_config	;wreg free
   380                           
   381                           ;maincode1.c: 56:     TMR0_config();
   382  000E04  EC3E  F00A         	call	_TMR0_config	;wreg free
   383  000E08                     
   384                           ;maincode1.c: 57:     lcd_init();
   385  000E08  ECF5  F009         	call	_lcd_init	;wreg free
   386  000E0C                     
   387                           ;maincode1.c: 58:     POS_CURSOR(1,0);
   388  000E0C  0E00               	movlw	0
   389  000E0E  6E04               	movwf	POS_CURSOR@columna^0,c
   390  000E10  0E01               	movlw	1
   391  000E12  EC8C  F009         	call	_POS_CURSOR
   392  000E16                     
   393                           ;maincode1.c: 59:     ESCRIBE_MENSAJE("Lab Semana 11", 13);
   394  000E16  0E01               	movlw	low STR_1
   395  000E18  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   396  000E1A  0E08               	movlw	high STR_1
   397  000E1C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   398  000E1E  0E0D               	movlw	13
   399  000E20  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   400  000E22  EC6D  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   401  000E26                     l1612:
   402                           
   403                           ;maincode1.c: 61:         ADCON0 = 0x07;
   404  000E26  0E07               	movlw	7
   405  000E28  6EC2               	movwf	194,c	;volatile
   406  000E2A                     l72:
   407  000E2A  B2C2               	btfsc	194,1,c	;volatile
   408  000E2C  EF1A  F007         	goto	u1011
   409  000E30  EF1C  F007         	goto	u1010
   410  000E34                     u1011:
   411  000E34  EF15  F007         	goto	l72
   412  000E38                     u1010:
   413  000E38                     
   414                           ;maincode1.c: 64:         x_var = ADRESH * 0.61;
   415  000E38  50C4               	movf	196,w,c	;volatile
   416  000E3A  6E01               	movwf	___xxtofl@val^0,c
   417  000E3C  6A02               	clrf	(___xxtofl@val+1)^0,c
   418  000E3E  6A03               	clrf	(___xxtofl@val+2)^0,c
   419  000E40  6A04               	clrf	(___xxtofl@val+3)^0,c
   420  000E42  0E01               	movlw	1
   421  000E44  EC22  F006         	call	___xxtofl
   422  000E48  C001  F00F         	movff	?___xxtofl,___flmul@b
   423  000E4C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   424  000E50  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   425  000E54  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   426  000E58  0EF6               	movlw	246
   427  000E5A  6E13               	movwf	___flmul@a^0,c
   428  000E5C  0E28               	movlw	40
   429  000E5E  6E14               	movwf	(___flmul@a+1)^0,c
   430  000E60  0E1C               	movlw	28
   431  000E62  6E15               	movwf	(___flmul@a+2)^0,c
   432  000E64  0E3F               	movlw	63
   433  000E66  6E16               	movwf	(___flmul@a+3)^0,c
   434  000E68  EC0D  F004         	call	___flmul	;wreg free
   435  000E6C  C00F  F028         	movff	?___flmul,_x_var
   436  000E70  C010  F029         	movff	?___flmul+1,_x_var+1
   437  000E74  C011  F02A         	movff	?___flmul+2,_x_var+2
   438  000E78  C012  F02B         	movff	?___flmul+3,_x_var+3
   439  000E7C                     
   440                           ;maincode1.c: 65:         CCPR1L = x_var;
   441  000E7C  C028  F001         	movff	_x_var,___fltol@f1
   442  000E80  C029  F002         	movff	_x_var+1,___fltol@f1+1
   443  000E84  C02A  F003         	movff	_x_var+2,___fltol@f1+2
   444  000E88  C02B  F004         	movff	_x_var+3,___fltol@f1+3
   445  000E8C  ECBE  F007         	call	___fltol	;wreg free
   446  000E90  5001               	movf	?___fltol^0,w,c
   447  000E92  6EBE               	movwf	190,c	;volatile
   448  000E94                     
   449                           ;maincode1.c: 66:         x_var = ADRESH * 0.39;
   450  000E94  50C4               	movf	196,w,c	;volatile
   451  000E96  6E01               	movwf	___xxtofl@val^0,c
   452  000E98  6A02               	clrf	(___xxtofl@val+1)^0,c
   453  000E9A  6A03               	clrf	(___xxtofl@val+2)^0,c
   454  000E9C  6A04               	clrf	(___xxtofl@val+3)^0,c
   455  000E9E  0E01               	movlw	1
   456  000EA0  EC22  F006         	call	___xxtofl
   457  000EA4  C001  F00F         	movff	?___xxtofl,___flmul@b
   458  000EA8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   459  000EAC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   460  000EB0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   461  000EB4  0E14               	movlw	20
   462  000EB6  6E13               	movwf	___flmul@a^0,c
   463  000EB8  0EAE               	movlw	174
   464  000EBA  6E14               	movwf	(___flmul@a+1)^0,c
   465  000EBC  0EC7               	movlw	199
   466  000EBE  6E15               	movwf	(___flmul@a+2)^0,c
   467  000EC0  0E3E               	movlw	62
   468  000EC2  6E16               	movwf	(___flmul@a+3)^0,c
   469  000EC4  EC0D  F004         	call	___flmul	;wreg free
   470  000EC8  C00F  F028         	movff	?___flmul,_x_var
   471  000ECC  C010  F029         	movff	?___flmul+1,_x_var+1
   472  000ED0  C011  F02A         	movff	?___flmul+2,_x_var+2
   473  000ED4  C012  F02B         	movff	?___flmul+3,_x_var+3
   474                           
   475                           ;maincode1.c: 67:         convierte(x_var);
   476  000ED8  C028  F001         	movff	_x_var,___fltol@f1
   477  000EDC  C029  F002         	movff	_x_var+1,___fltol@f1+1
   478  000EE0  C02A  F003         	movff	_x_var+2,___fltol@f1+2
   479  000EE4  C02B  F004         	movff	_x_var+3,___fltol@f1+3
   480  000EE8  ECBE  F007         	call	___fltol	;wreg free
   481  000EEC  C001  F00D         	movff	?___fltol,convierte@numero
   482  000EF0  C002  F00E         	movff	?___fltol+1,convierte@numero+1
   483  000EF4  EC41  F008         	call	_convierte	;wreg free
   484                           
   485                           ;maincode1.c: 68:         POS_CURSOR(2,0);
   486  000EF8  0E00               	movlw	0
   487  000EFA  6E04               	movwf	POS_CURSOR@columna^0,c
   488  000EFC  0E02               	movlw	2
   489  000EFE  EC8C  F009         	call	_POS_CURSOR
   490  000F02                     
   491                           ;maincode1.c: 69:         ESCRIBE_MENSAJE("BL:", 3);
   492  000F02  0E15               	movlw	low STR_2
   493  000F04  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   494  000F06  0E08               	movlw	high STR_2
   495  000F08  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   496  000F0A  0E03               	movlw	3
   497  000F0C  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   498  000F0E  EC6D  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   499  000F12                     
   500                           ;maincode1.c: 70:         ENVIA_CHAR(centena + 0x30);
   501  000F12  5030               	movf	_centena^0,w,c
   502  000F14  0F30               	addlw	48
   503  000F16  ECC3  F009         	call	_ENVIA_CHAR
   504  000F1A                     
   505                           ;maincode1.c: 71:         ENVIA_CHAR(decena + 0x30);
   506  000F1A  502E               	movf	_decena^0,w,c
   507  000F1C  0F30               	addlw	48
   508  000F1E  ECC3  F009         	call	_ENVIA_CHAR
   509  000F22                     
   510                           ;maincode1.c: 72:         ENVIA_CHAR(unidad + 0x30);
   511  000F22  502C               	movf	_unidad^0,w,c
   512  000F24  0F30               	addlw	48
   513  000F26  ECC3  F009         	call	_ENVIA_CHAR
   514  000F2A                     
   515                           ;maincode1.c: 73:         ENVIA_CHAR('%');
   516  000F2A  0E25               	movlw	37
   517  000F2C  ECC3  F009         	call	_ENVIA_CHAR
   518  000F30                     
   519                           ;maincode1.c: 74:         ADCON0 = 0x03;
   520  000F30  0E03               	movlw	3
   521  000F32  6EC2               	movwf	194,c	;volatile
   522  000F34                     l75:
   523  000F34  B2C2               	btfsc	194,1,c	;volatile
   524  000F36  EF9F  F007         	goto	u1021
   525  000F3A  EFA1  F007         	goto	u1020
   526  000F3E                     u1021:
   527  000F3E  EF9A  F007         	goto	l75
   528  000F42                     u1020:
   529  000F42                     
   530                           ;maincode1.c: 76:         convierte(ADRESH);
   531  000F42  CFC4 F00D          	movff	4036,convierte@numero	;volatile
   532  000F46  6A0E               	clrf	(convierte@numero+1)^0,c
   533  000F48  EC41  F008         	call	_convierte	;wreg free
   534  000F4C                     
   535                           ;maincode1.c: 77:         ESCRIBE_MENSAJE(" AN0:", 5);
   536  000F4C  0E0F               	movlw	low STR_3
   537  000F4E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   538  000F50  0E08               	movlw	high STR_3
   539  000F52  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   540  000F54  0E05               	movlw	5
   541  000F56  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   542  000F58  EC6D  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   543  000F5C                     
   544                           ;maincode1.c: 78:         ENVIA_CHAR(centena + 0x30);
   545  000F5C  5030               	movf	_centena^0,w,c
   546  000F5E  0F30               	addlw	48
   547  000F60  ECC3  F009         	call	_ENVIA_CHAR
   548  000F64                     
   549                           ;maincode1.c: 79:         ENVIA_CHAR(decena + 0x30);
   550  000F64  502E               	movf	_decena^0,w,c
   551  000F66  0F30               	addlw	48
   552  000F68  ECC3  F009         	call	_ENVIA_CHAR
   553  000F6C                     
   554                           ;maincode1.c: 80:         ENVIA_CHAR(unidad + 0x30);
   555  000F6C  502C               	movf	_unidad^0,w,c
   556  000F6E  0F30               	addlw	48
   557  000F70  ECC3  F009         	call	_ENVIA_CHAR
   558  000F74  EF13  F007         	goto	l1612
   559  000F78  EF00  F000         	goto	start
   560  000F7C                     __end_of_main:
   561                           	callstack 0
   562                           
   563 ;; *************** function _lcd_init *****************
   564 ;; Defined at:
   565 ;;		line 36 in file "maincode1.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   579 ;;      Params:         0       0       0       0       0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0       0       0       0       0
   581 ;;      Temps:          1       0       0       0       0       0       0       0       0
   582 ;;      Totals:         1       0       0       0       0       0       0       0       0
   583 ;;Total ram usage:        1 bytes
   584 ;; Hardware stack levels used: 1
   585 ;; Hardware stack levels required when called: 3
   586 ;; This function calls:
   587 ;;		_BORRAR_LCD
   588 ;;		_CURSOR_HOME
   589 ;;		_CURSOR_ONOFF
   590 ;;		_LCD_CONFIG
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597  0013EA                     __ptext1:
   598                           	callstack 0
   599  0013EA                     _lcd_init:
   600                           	callstack 27
   601  0013EA                     
   602                           ;maincode1.c: 37:     TRISD = 0x00;
   603  0013EA  0E00               	movlw	0
   604  0013EC  6E95               	movwf	149,c	;volatile
   605  0013EE                     
   606                           ;maincode1.c: 38:     LCD_CONFIG();
   607  0013EE  EC3D  F009         	call	_LCD_CONFIG	;wreg free
   608  0013F2                     
   609                           ;maincode1.c: 39:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   610  0013F2  0EEA               	movlw	234
   611  0013F4  6E05               	movwf	??_lcd_init^0,c
   612  0013F6  0EC3               	movlw	195
   613  0013F8                     u1037:
   614  0013F8  2EE8               	decfsz	wreg,f,c
   615  0013FA  D7FE               	bra	u1037
   616  0013FC  2E05               	decfsz	??_lcd_init^0,f,c
   617  0013FE  D7FC               	bra	u1037
   618  001400  F000               	nop	
   619  001402                     
   620                           ;maincode1.c: 40:     BORRAR_LCD();
   621  001402  EC39  F00A         	call	_BORRAR_LCD	;wreg free
   622  001406                     
   623                           ;maincode1.c: 41:     CURSOR_HOME();
   624  001406  EC35  F00A         	call	_CURSOR_HOME	;wreg free
   625  00140A                     
   626                           ;maincode1.c: 42:     CURSOR_ONOFF(1);
   627  00140A  0E01               	movlw	1
   628  00140C  ECDD  F009         	call	_CURSOR_ONOFF
   629  001410  0012               	return		;funcret
   630  001412                     __end_of_lcd_init:
   631                           	callstack 0
   632                           
   633 ;; *************** function _LCD_CONFIG *****************
   634 ;; Defined at:
   635 ;;		line 72 in file "../20221_sem11_ls51_servo.X/LCD.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0, cstack
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   649 ;;      Params:         0       0       0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0       0       0
   651 ;;      Temps:          1       0       0       0       0       0       0       0       0
   652 ;;      Totals:         1       0       0       0       0       0       0       0       0
   653 ;;Total ram usage:        1 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 2
   656 ;; This function calls:
   657 ;;		_ENVIA_LCD_CMD
   658 ;;		_ENVIA_NIBBLE
   659 ;; This function is called by:
   660 ;;		_lcd_init
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text2
   665  00127A                     __ptext2:
   666                           	callstack 0
   667  00127A                     _LCD_CONFIG:
   668                           	callstack 27
   669  00127A                     
   670                           ;../20221_sem11_ls51_servo.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   671  00127A  908C               	bcf	140,0,c	;volatile
   672                           
   673                           ;../20221_sem11_ls51_servo.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   674  00127C  928C               	bcf	140,1,c	;volatile
   675  00127E                     
   676                           ;../20221_sem11_ls51_servo.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   677  00127E  0E30               	movlw	48
   678  001280  EC09  F00A         	call	_ENVIA_NIBBLE
   679  001284                     
   680                           ;../20221_sem11_ls51_servo.X/LCD.c: 77:         _delay(24000);
   681  001284  0E20               	movlw	32
   682  001286  6E04               	movwf	??_LCD_CONFIG^0,c
   683  001288  0E2A               	movlw	42
   684  00128A                     u1047:
   685  00128A  2EE8               	decfsz	wreg,f,c
   686  00128C  D7FE               	bra	u1047
   687  00128E  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   688  001290  D7FC               	bra	u1047
   689  001292                     
   690                           ;../20221_sem11_ls51_servo.X/LCD.c: 78:         _delay(24000);
   691  001292  0E20               	movlw	32
   692  001294  6E04               	movwf	??_LCD_CONFIG^0,c
   693  001296  0E2A               	movlw	42
   694  001298                     u1057:
   695  001298  2EE8               	decfsz	wreg,f,c
   696  00129A  D7FE               	bra	u1057
   697  00129C  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   698  00129E  D7FC               	bra	u1057
   699                           
   700                           ;../20221_sem11_ls51_servo.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   701  0012A0  0E30               	movlw	48
   702  0012A2  EC09  F00A         	call	_ENVIA_NIBBLE
   703  0012A6                     
   704                           ;../20221_sem11_ls51_servo.X/LCD.c: 83:  _delay(1200);
   705  0012A6  0EF0               	movlw	240
   706  0012A8                     u1067:
   707  0012A8  D000               	nop2	
   708  0012AA  2EE8               	decfsz	wreg,f,c
   709  0012AC  D7FD               	bra	u1067
   710  0012AE                     
   711                           ;../20221_sem11_ls51_servo.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   712  0012AE  0E30               	movlw	48
   713  0012B0  EC09  F00A         	call	_ENVIA_NIBBLE
   714  0012B4                     
   715                           ;../20221_sem11_ls51_servo.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   716  0012B4  0E20               	movlw	32
   717  0012B6  EC09  F00A         	call	_ENVIA_NIBBLE
   718  0012BA                     
   719                           ;../20221_sem11_ls51_servo.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   720  0012BA  0E01               	movlw	1
   721  0012BC  ECA9  F009         	call	_ENVIA_LCD_CMD
   722  0012C0                     
   723                           ;../20221_sem11_ls51_servo.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   724  0012C0  0E28               	movlw	40
   725  0012C2  ECA9  F009         	call	_ENVIA_LCD_CMD
   726  0012C6                     
   727                           ;../20221_sem11_ls51_servo.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   728  0012C6  0E0F               	movlw	15
   729  0012C8  ECA9  F009         	call	_ENVIA_LCD_CMD
   730  0012CC                     
   731                           ;../20221_sem11_ls51_servo.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   732  0012CC  0E06               	movlw	6
   733  0012CE  ECA9  F009         	call	_ENVIA_LCD_CMD
   734  0012D2                     
   735                           ;../20221_sem11_ls51_servo.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   736  0012D2  0E01               	movlw	1
   737  0012D4  ECA9  F009         	call	_ENVIA_LCD_CMD
   738  0012D8  0012               	return		;funcret
   739  0012DA                     __end_of_LCD_CONFIG:
   740                           	callstack 0
   741                           
   742 ;; *************** function _CURSOR_ONOFF *****************
   743 ;; Defined at:
   744 ;;		line 35 in file "../20221_sem11_ls51_servo.X/LCD.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  estado          1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  estado          1    3[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   758 ;;      Params:         0       0       0       0       0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; Hardware stack levels required when called: 2
   765 ;; This function calls:
   766 ;;		_ENVIA_LCD_CMD
   767 ;; This function is called by:
   768 ;;		_lcd_init
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text3
   773  0013BA                     __ptext3:
   774                           	callstack 0
   775  0013BA                     _CURSOR_ONOFF:
   776                           	callstack 27
   777                           
   778                           ;incstack = 0
   779                           ;CURSOR_ONOFF@estado stored from wreg
   780  0013BA  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   781  0013BC                     
   782                           ;../20221_sem11_ls51_servo.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20221
      +                          _sem11_ls51_servo.X/LCD.c: 36: {;../20221_sem11_ls51_servo.X/LCD.c: 37:  if(estado == 0)
      +                           ENVIA_LCD_CMD(0x0E);
   783  0013BC  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   784  0013BE  A4D8               	btfss	status,2,c
   785  0013C0  EFE4  F009         	goto	u21
   786  0013C4  EFE6  F009         	goto	u20
   787  0013C8                     u21:
   788  0013C8  EFE9  F009         	goto	l930
   789  0013CC                     u20:
   790  0013CC  0E0E               	movlw	14
   791  0013CE  ECA9  F009         	call	_ENVIA_LCD_CMD
   792  0013D2                     l930:
   793                           
   794                           ;../20221_sem11_ls51_servo.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   795  0013D2  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   796  0013D4  A4D8               	btfss	status,2,c
   797  0013D6  EFEF  F009         	goto	u31
   798  0013DA  EFF1  F009         	goto	u30
   799  0013DE                     u31:
   800  0013DE  EFF4  F009         	goto	l122
   801  0013E2                     u30:
   802  0013E2  0E0C               	movlw	12
   803  0013E4  ECA9  F009         	call	_ENVIA_LCD_CMD
   804  0013E8                     l122:
   805  0013E8  0012               	return		;funcret
   806  0013EA                     __end_of_CURSOR_ONOFF:
   807                           	callstack 0
   808                           
   809 ;; *************** function _CURSOR_HOME *****************
   810 ;; Defined at:
   811 ;;		line 30 in file "../20221_sem11_ls51_servo.X/LCD.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, status,2, status,0, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   825 ;;      Params:         0       0       0       0       0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0       0       0       0       0
   827 ;;      Temps:          0       0       0       0       0       0       0       0       0
   828 ;;      Totals:         0       0       0       0       0       0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used: 1
   831 ;; Hardware stack levels required when called: 2
   832 ;; This function calls:
   833 ;;		_ENVIA_LCD_CMD
   834 ;; This function is called by:
   835 ;;		_lcd_init
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  00146A                     __ptext4:
   841                           	callstack 0
   842  00146A                     _CURSOR_HOME:
   843                           	callstack 27
   844  00146A                     
   845                           ;../20221_sem11_ls51_servo.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   846  00146A  0E02               	movlw	2
   847  00146C  ECA9  F009         	call	_ENVIA_LCD_CMD
   848  001470  0012               	return		;funcret
   849  001472                     __end_of_CURSOR_HOME:
   850                           	callstack 0
   851                           
   852 ;; *************** function _BORRAR_LCD *****************
   853 ;; Defined at:
   854 ;;		line 67 in file "../20221_sem11_ls51_servo.X/LCD.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         0       0       0       0       0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 2
   875 ;; This function calls:
   876 ;;		_ENVIA_LCD_CMD
   877 ;; This function is called by:
   878 ;;		_lcd_init
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  001472                     __ptext5:
   884                           	callstack 0
   885  001472                     _BORRAR_LCD:
   886                           	callstack 27
   887  001472                     
   888                           ;../20221_sem11_ls51_servo.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   889  001472  0E01               	movlw	1
   890  001474  ECA9  F009         	call	_ENVIA_LCD_CMD
   891  001478  0012               	return		;funcret
   892  00147A                     __end_of_BORRAR_LCD:
   893                           	callstack 0
   894                           
   895 ;; *************** function _convierte *****************
   896 ;; Defined at:
   897 ;;		line 45 in file "maincode1.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  numero          2   12[COMRAM] unsigned int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   911 ;;      Params:         2       0       0       0       0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; Hardware stack levels required when called: 1
   918 ;; This function calls:
   919 ;;		___lwdiv
   920 ;;		___lwmod
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text6
   927  001082                     __ptext6:
   928                           	callstack 0
   929  001082                     _convierte:
   930                           	callstack 29
   931  001082                     
   932                           ;maincode1.c: 46:     millar = (numero %10000) /1000;
   933  001082  0E27               	movlw	39
   934  001084  6E04               	movwf	(___lwmod@divisor+1)^0,c
   935  001086  0E10               	movlw	16
   936  001088  6E03               	movwf	___lwmod@divisor^0,c
   937  00108A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   938  00108E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   939  001092  EC0B  F009         	call	___lwmod	;wreg free
   940  001096  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   941  00109A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   942  00109E  0E03               	movlw	3
   943  0010A0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   944  0010A2  0EE8               	movlw	232
   945  0010A4  6E08               	movwf	___lwdiv@divisor^0,c
   946  0010A6  EC98  F008         	call	___lwdiv	;wreg free
   947  0010AA  C006  F032         	movff	?___lwdiv,_millar
   948  0010AE  C007  F033         	movff	?___lwdiv+1,_millar+1
   949                           
   950                           ;maincode1.c: 47:     centena = (numero % 1000) / 100;
   951  0010B2  0E03               	movlw	3
   952  0010B4  6E04               	movwf	(___lwmod@divisor+1)^0,c
   953  0010B6  0EE8               	movlw	232
   954  0010B8  6E03               	movwf	___lwmod@divisor^0,c
   955  0010BA  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   956  0010BE  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   957  0010C2  EC0B  F009         	call	___lwmod	;wreg free
   958  0010C6  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   959  0010CA  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   960  0010CE  0E00               	movlw	0
   961  0010D0  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   962  0010D2  0E64               	movlw	100
   963  0010D4  6E08               	movwf	___lwdiv@divisor^0,c
   964  0010D6  EC98  F008         	call	___lwdiv	;wreg free
   965  0010DA  C006  F030         	movff	?___lwdiv,_centena
   966  0010DE  C007  F031         	movff	?___lwdiv+1,_centena+1
   967                           
   968                           ;maincode1.c: 48:     decena = (numero % 100) / 10;
   969  0010E2  0E00               	movlw	0
   970  0010E4  6E04               	movwf	(___lwmod@divisor+1)^0,c
   971  0010E6  0E64               	movlw	100
   972  0010E8  6E03               	movwf	___lwmod@divisor^0,c
   973  0010EA  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   974  0010EE  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   975  0010F2  EC0B  F009         	call	___lwmod	;wreg free
   976  0010F6  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   977  0010FA  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   978  0010FE  0E00               	movlw	0
   979  001100  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   980  001102  0E0A               	movlw	10
   981  001104  6E08               	movwf	___lwdiv@divisor^0,c
   982  001106  EC98  F008         	call	___lwdiv	;wreg free
   983  00110A  C006  F02E         	movff	?___lwdiv,_decena
   984  00110E  C007  F02F         	movff	?___lwdiv+1,_decena+1
   985                           
   986                           ;maincode1.c: 49:     unidad = numero % 10;
   987  001112  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   988  001116  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   989  00111A  0E00               	movlw	0
   990  00111C  6E04               	movwf	(___lwmod@divisor+1)^0,c
   991  00111E  0E0A               	movlw	10
   992  001120  6E03               	movwf	___lwmod@divisor^0,c
   993  001122  EC0B  F009         	call	___lwmod	;wreg free
   994  001126  C001  F02C         	movff	?___lwmod,_unidad
   995  00112A  C002  F02D         	movff	?___lwmod+1,_unidad+1
   996  00112E  0012               	return		;funcret
   997  001130                     __end_of_convierte:
   998                           	callstack 0
   999                           
  1000 ;; *************** function ___lwmod *****************
  1001 ;; Defined at:
  1002 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  dividend        2    0[COMRAM] unsigned int 
  1005 ;;  divisor         2    2[COMRAM] unsigned int 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  counter         1    4[COMRAM] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2    0[COMRAM] unsigned int 
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1017 ;;      Params:         4       0       0       0       0       0       0       0       0
  1018 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1020 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1021 ;;Total ram usage:        5 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_convierte
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text7
  1031  001216                     __ptext7:
  1032                           	callstack 0
  1033  001216                     ___lwmod:
  1034                           	callstack 29
  1035  001216  5003               	movf	___lwmod@divisor^0,w,c
  1036  001218  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1037  00121A  B4D8               	btfsc	status,2,c
  1038  00121C  EF12  F009         	goto	u591
  1039  001220  EF14  F009         	goto	u590
  1040  001224                     u591:
  1041  001224  EF38  F009         	goto	l658
  1042  001228                     u590:
  1043  001228  0E01               	movlw	1
  1044  00122A  6E05               	movwf	___lwmod@counter^0,c
  1045  00122C  EF1C  F009         	goto	l1352
  1046  001230                     l1350:
  1047  001230  90D8               	bcf	status,0,c
  1048  001232  3603               	rlcf	___lwmod@divisor^0,f,c
  1049  001234  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1050  001236  2A05               	incf	___lwmod@counter^0,f,c
  1051  001238                     l1352:
  1052  001238  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1053  00123A  EF21  F009         	goto	u601
  1054  00123E  EF23  F009         	goto	u600
  1055  001242                     u601:
  1056  001242  EF18  F009         	goto	l1350
  1057  001246                     u600:
  1058  001246                     l1354:
  1059  001246  5003               	movf	___lwmod@divisor^0,w,c
  1060  001248  5C01               	subwf	___lwmod@dividend^0,w,c
  1061  00124A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1062  00124C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1063  00124E  A0D8               	btfss	status,0,c
  1064  001250  EF2C  F009         	goto	u611
  1065  001254  EF2E  F009         	goto	u610
  1066  001258                     u611:
  1067  001258  EF32  F009         	goto	l1358
  1068  00125C                     u610:
  1069  00125C  5003               	movf	___lwmod@divisor^0,w,c
  1070  00125E  5E01               	subwf	___lwmod@dividend^0,f,c
  1071  001260  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1072  001262  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1073  001264                     l1358:
  1074  001264  90D8               	bcf	status,0,c
  1075  001266  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1076  001268  3203               	rrcf	___lwmod@divisor^0,f,c
  1077  00126A  2E05               	decfsz	___lwmod@counter^0,f,c
  1078  00126C  EF23  F009         	goto	l1354
  1079  001270                     l658:
  1080  001270  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1081  001274  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1082  001278  0012               	return		;funcret
  1083  00127A                     __end_of___lwmod:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function ___lwdiv *****************
  1087 ;; Defined at:
  1088 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  dividend        2    5[COMRAM] unsigned int 
  1091 ;;  divisor         2    7[COMRAM] unsigned int 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  quotient        2    9[COMRAM] unsigned int 
  1094 ;;  counter         1   11[COMRAM] unsigned char 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2    5[COMRAM] unsigned int 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2, status,0
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1104 ;;      Params:         4       0       0       0       0       0       0       0       0
  1105 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1107 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1108 ;;Total ram usage:        7 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_convierte
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text8
  1118  001130                     __ptext8:
  1119                           	callstack 0
  1120  001130                     ___lwdiv:
  1121                           	callstack 29
  1122  001130  0E00               	movlw	0
  1123  001132  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1124  001134  0E00               	movlw	0
  1125  001136  6E0A               	movwf	___lwdiv@quotient^0,c
  1126  001138  5008               	movf	___lwdiv@divisor^0,w,c
  1127  00113A  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1128  00113C  B4D8               	btfsc	status,2,c
  1129  00113E  EFA3  F008         	goto	u561
  1130  001142  EFA5  F008         	goto	u560
  1131  001146                     u561:
  1132  001146  EFCD  F008         	goto	l648
  1133  00114A                     u560:
  1134  00114A  0E01               	movlw	1
  1135  00114C  6E0C               	movwf	___lwdiv@counter^0,c
  1136  00114E  EFAD  F008         	goto	l1332
  1137  001152                     l1330:
  1138  001152  90D8               	bcf	status,0,c
  1139  001154  3608               	rlcf	___lwdiv@divisor^0,f,c
  1140  001156  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1141  001158  2A0C               	incf	___lwdiv@counter^0,f,c
  1142  00115A                     l1332:
  1143  00115A  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1144  00115C  EFB2  F008         	goto	u571
  1145  001160  EFB4  F008         	goto	u570
  1146  001164                     u571:
  1147  001164  EFA9  F008         	goto	l1330
  1148  001168                     u570:
  1149  001168                     l1334:
  1150  001168  90D8               	bcf	status,0,c
  1151  00116A  360A               	rlcf	___lwdiv@quotient^0,f,c
  1152  00116C  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1153  00116E  5008               	movf	___lwdiv@divisor^0,w,c
  1154  001170  5C06               	subwf	___lwdiv@dividend^0,w,c
  1155  001172  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1156  001174  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1157  001176  A0D8               	btfss	status,0,c
  1158  001178  EFC0  F008         	goto	u581
  1159  00117C  EFC2  F008         	goto	u580
  1160  001180                     u581:
  1161  001180  EFC7  F008         	goto	l1342
  1162  001184                     u580:
  1163  001184  5008               	movf	___lwdiv@divisor^0,w,c
  1164  001186  5E06               	subwf	___lwdiv@dividend^0,f,c
  1165  001188  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1166  00118A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1167  00118C  800A               	bsf	___lwdiv@quotient^0,0,c
  1168  00118E                     l1342:
  1169  00118E  90D8               	bcf	status,0,c
  1170  001190  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1171  001192  3208               	rrcf	___lwdiv@divisor^0,f,c
  1172  001194  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1173  001196  EFB4  F008         	goto	l1334
  1174  00119A                     l648:
  1175  00119A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1176  00119E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1177  0011A2  0012               	return		;funcret
  1178  0011A4                     __end_of___lwdiv:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _configuro *****************
  1182 ;; Defined at:
  1183 ;;		line 13 in file "maincode1.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		None
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1197 ;;      Params:         0       0       0       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1200 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used: 1
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           	psect	text9
  1211  00147A                     __ptext9:
  1212                           	callstack 0
  1213  00147A                     _configuro:
  1214                           	callstack 30
  1215  00147A  0012               	return		;funcret
  1216  00147C                     __end_of_configuro:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function ___xxtofl *****************
  1220 ;; Defined at:
  1221 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  sign            1    wreg     unsigned char 
  1224 ;;  val             4    0[COMRAM] long 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  sign            1    8[COMRAM] unsigned char 
  1227 ;;  arg             4   10[COMRAM] unsigned long 
  1228 ;;  exp             1    9[COMRAM] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  4    0[COMRAM] unsigned char 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1238 ;;      Params:         4       0       0       0       0       0       0       0       0
  1239 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1240 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1241 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1242 ;;Total ram usage:       14 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text10
  1252  000C44                     __ptext10:
  1253                           	callstack 0
  1254  000C44                     ___xxtofl:
  1255                           	callstack 30
  1256                           
  1257                           ;incstack = 0
  1258                           ;___xxtofl@sign stored from wreg
  1259  000C44  6E09               	movwf	___xxtofl@sign^0,c
  1260  000C46  5009               	movf	___xxtofl@sign^0,w,c
  1261  000C48  B4D8               	btfsc	status,2,c
  1262  000C4A  EF29  F006         	goto	u911
  1263  000C4E  EF2B  F006         	goto	u910
  1264  000C52                     u911:
  1265  000C52  EF4D  F006         	goto	l812
  1266  000C56                     u910:
  1267  000C56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1268  000C58  EF32  F006         	goto	u920
  1269  000C5C  EF30  F006         	goto	u921
  1270  000C60                     u921:
  1271  000C60  EF4D  F006         	goto	l812
  1272  000C64                     u920:
  1273  000C64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1274  000C68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1275  000C6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1276  000C70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1277  000C74  1E05               	comf	??___xxtofl^0,f,c
  1278  000C76  1E06               	comf	(??___xxtofl+1)^0,f,c
  1279  000C78  1E07               	comf	(??___xxtofl+2)^0,f,c
  1280  000C7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  1281  000C7C  2A05               	incf	??___xxtofl^0,f,c
  1282  000C7E  0E00               	movlw	0
  1283  000C80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1284  000C82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1285  000C84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1286  000C86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1287  000C8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1288  000C8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1289  000C92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1290  000C96  EF55  F006         	goto	l1560
  1291  000C9A                     l812:
  1292  000C9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1293  000C9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1294  000CA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1295  000CA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1296  000CAA                     l1560:
  1297  000CAA  5001               	movf	___xxtofl@val^0,w,c
  1298  000CAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1299  000CAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1300  000CB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1301  000CB2  A4D8               	btfss	status,2,c
  1302  000CB4  EF5E  F006         	goto	u931
  1303  000CB8  EF60  F006         	goto	u930
  1304  000CBC                     u931:
  1305  000CBC  EF6A  F006         	goto	l1566
  1306  000CC0                     u930:
  1307  000CC0  0E00               	movlw	0
  1308  000CC2  6E01               	movwf	?___xxtofl^0,c
  1309  000CC4  0E00               	movlw	0
  1310  000CC6  6E02               	movwf	(?___xxtofl+1)^0,c
  1311  000CC8  0E00               	movlw	0
  1312  000CCA  6E03               	movwf	(?___xxtofl+2)^0,c
  1313  000CCC  0E00               	movlw	0
  1314  000CCE  6E04               	movwf	(?___xxtofl+3)^0,c
  1315  000CD0  EFFB  F006         	goto	l815
  1316  000CD4                     l1566:
  1317  000CD4  0E96               	movlw	150
  1318  000CD6  6E0A               	movwf	___xxtofl@exp^0,c
  1319  000CD8  EF74  F006         	goto	l1570
  1320  000CDC                     l1568:
  1321  000CDC  2A0A               	incf	___xxtofl@exp^0,f,c
  1322  000CDE  90D8               	bcf	status,0,c
  1323  000CE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1324  000CE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1325  000CE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1326  000CE6  320B               	rrcf	___xxtofl@arg^0,f,c
  1327  000CE8                     l1570:
  1328  000CE8  0E00               	movlw	0
  1329  000CEA  140B               	andwf	___xxtofl@arg^0,w,c
  1330  000CEC  6E05               	movwf	??___xxtofl^0,c
  1331  000CEE  0E00               	movlw	0
  1332  000CF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1333  000CF2  6E06               	movwf	(??___xxtofl+1)^0,c
  1334  000CF4  0E00               	movlw	0
  1335  000CF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1336  000CF8  6E07               	movwf	(??___xxtofl+2)^0,c
  1337  000CFA  0EFE               	movlw	254
  1338  000CFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1339  000CFE  6E08               	movwf	(??___xxtofl+3)^0,c
  1340  000D00  5005               	movf	??___xxtofl^0,w,c
  1341  000D02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1342  000D04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1343  000D06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1344  000D08  A4D8               	btfss	status,2,c
  1345  000D0A  EF89  F006         	goto	u941
  1346  000D0E  EF8B  F006         	goto	u940
  1347  000D12                     u941:
  1348  000D12  EF6E  F006         	goto	l1568
  1349  000D16                     u940:
  1350  000D16  EF99  F006         	goto	l819
  1351  000D1A                     l1572:
  1352  000D1A  2A0A               	incf	___xxtofl@exp^0,f,c
  1353  000D1C  0E01               	movlw	1
  1354  000D1E  260B               	addwf	___xxtofl@arg^0,f,c
  1355  000D20  0E00               	movlw	0
  1356  000D22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1357  000D24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1358  000D26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1359  000D28  90D8               	bcf	status,0,c
  1360  000D2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1361  000D2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1362  000D2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1363  000D30  320B               	rrcf	___xxtofl@arg^0,f,c
  1364  000D32                     l819:
  1365  000D32  0E00               	movlw	0
  1366  000D34  140B               	andwf	___xxtofl@arg^0,w,c
  1367  000D36  6E05               	movwf	??___xxtofl^0,c
  1368  000D38  0E00               	movlw	0
  1369  000D3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1370  000D3C  6E06               	movwf	(??___xxtofl+1)^0,c
  1371  000D3E  0E00               	movlw	0
  1372  000D40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1373  000D42  6E07               	movwf	(??___xxtofl+2)^0,c
  1374  000D44  0EFF               	movlw	255
  1375  000D46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1376  000D48  6E08               	movwf	(??___xxtofl+3)^0,c
  1377  000D4A  5005               	movf	??___xxtofl^0,w,c
  1378  000D4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1379  000D4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1380  000D50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1381  000D52  A4D8               	btfss	status,2,c
  1382  000D54  EFAE  F006         	goto	u951
  1383  000D58  EFB0  F006         	goto	u950
  1384  000D5C                     u951:
  1385  000D5C  EF8D  F006         	goto	l1572
  1386  000D60                     u950:
  1387  000D60  EFB8  F006         	goto	l1580
  1388  000D64                     l1578:
  1389  000D64  060A               	decf	___xxtofl@exp^0,f,c
  1390  000D66  90D8               	bcf	status,0,c
  1391  000D68  360B               	rlcf	___xxtofl@arg^0,f,c
  1392  000D6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1393  000D6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1394  000D6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1395  000D70                     l1580:
  1396  000D70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1397  000D72  EFBD  F006         	goto	u961
  1398  000D76  EFBF  F006         	goto	u960
  1399  000D7A                     u961:
  1400  000D7A  EFC7  F006         	goto	l826
  1401  000D7E                     u960:
  1402  000D7E  0E02               	movlw	2
  1403  000D80  600A               	cpfslt	___xxtofl@exp^0,c
  1404  000D82  EFC5  F006         	goto	u971
  1405  000D86  EFC7  F006         	goto	u970
  1406  000D8A                     u971:
  1407  000D8A  EFB2  F006         	goto	l1578
  1408  000D8E                     u970:
  1409  000D8E                     l826:
  1410  000D8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  1411  000D90  EFCC  F006         	goto	u981
  1412  000D94  EFCE  F006         	goto	u980
  1413  000D98                     u981:
  1414  000D98  EFCF  F006         	goto	l1586
  1415  000D9C                     u980:
  1416  000D9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1417  000D9E                     l1586:
  1418  000D9E  90D8               	bcf	status,0,c
  1419  000DA0  320A               	rrcf	___xxtofl@exp^0,f,c
  1420  000DA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1421  000DA6  6A06               	clrf	(??___xxtofl+1)^0,c
  1422  000DA8  6A07               	clrf	(??___xxtofl+2)^0,c
  1423  000DAA  6A08               	clrf	(??___xxtofl+3)^0,c
  1424  000DAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1425  000DB0  6A07               	clrf	(??___xxtofl+2)^0,c
  1426  000DB2  6A06               	clrf	(??___xxtofl+1)^0,c
  1427  000DB4  6A05               	clrf	??___xxtofl^0,c
  1428  000DB6  5005               	movf	??___xxtofl^0,w,c
  1429  000DB8  120B               	iorwf	___xxtofl@arg^0,f,c
  1430  000DBA  5006               	movf	(??___xxtofl+1)^0,w,c
  1431  000DBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1432  000DBE  5007               	movf	(??___xxtofl+2)^0,w,c
  1433  000DC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1434  000DC2  5008               	movf	(??___xxtofl+3)^0,w,c
  1435  000DC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1436  000DC6  5009               	movf	___xxtofl@sign^0,w,c
  1437  000DC8  B4D8               	btfsc	status,2,c
  1438  000DCA  EFE9  F006         	goto	u991
  1439  000DCE  EFEB  F006         	goto	u990
  1440  000DD2                     u991:
  1441  000DD2  EFF3  F006         	goto	l1596
  1442  000DD6                     u990:
  1443  000DD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1444  000DD8  EFF2  F006         	goto	u1000
  1445  000DDC  EFF0  F006         	goto	u1001
  1446  000DE0                     u1001:
  1447  000DE0  EFF3  F006         	goto	l1596
  1448  000DE4                     u1000:
  1449  000DE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1450  000DE6                     l1596:
  1451  000DE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1452  000DEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1453  000DEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1454  000DF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1455  000DF6                     l815:
  1456  000DF6  0012               	return		;funcret
  1457  000DF8                     __end_of___xxtofl:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function ___fltol *****************
  1461 ;; Defined at:
  1462 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  f1              4    0[COMRAM] unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  exp1            1    9[COMRAM] unsigned char 
  1467 ;;  sign1           1    8[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  4    0[COMRAM] long 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1477 ;;      Params:         4       0       0       0       0       0       0       0       0
  1478 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1479 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1480 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1481 ;;Total ram usage:       10 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text11
  1491  000F7C                     __ptext11:
  1492                           	callstack 0
  1493  000F7C                     ___fltol:
  1494                           	callstack 30
  1495  000F7C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1496  000F7E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1497  000F80  6E0A               	movwf	___fltol@exp1^0,c
  1498  000F82  500A               	movf	___fltol@exp1^0,w,c
  1499  000F84  A4D8               	btfss	status,2,c
  1500  000F86  EFC7  F007         	goto	u841
  1501  000F8A  EFC9  F007         	goto	u840
  1502  000F8E                     u841:
  1503  000F8E  EFD3  F007         	goto	l1516
  1504  000F92                     u840:
  1505  000F92                     l1512:
  1506  000F92  0E00               	movlw	0
  1507  000F94  6E01               	movwf	?___fltol^0,c
  1508  000F96  0E00               	movlw	0
  1509  000F98  6E02               	movwf	(?___fltol+1)^0,c
  1510  000F9A  0E00               	movlw	0
  1511  000F9C  6E03               	movwf	(?___fltol+2)^0,c
  1512  000F9E  0E00               	movlw	0
  1513  000FA0  6E04               	movwf	(?___fltol+3)^0,c
  1514  000FA2  EF40  F008         	goto	l454
  1515  000FA6                     l1516:
  1516  000FA6  C001  F005         	movff	___fltol@f1,??___fltol
  1517  000FAA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1518  000FAE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1519  000FB2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1520  000FB6  0E20               	movlw	32
  1521  000FB8  EFE3  F007         	goto	u850
  1522  000FBC                     u855:
  1523  000FBC  90D8               	bcf	status,0,c
  1524  000FBE  3208               	rrcf	(??___fltol+3)^0,f,c
  1525  000FC0  3207               	rrcf	(??___fltol+2)^0,f,c
  1526  000FC2  3206               	rrcf	(??___fltol+1)^0,f,c
  1527  000FC4  3205               	rrcf	??___fltol^0,f,c
  1528  000FC6                     u850:
  1529  000FC6  2EE8               	decfsz	wreg,f,c
  1530  000FC8  EFDE  F007         	goto	u855
  1531  000FCC  5005               	movf	??___fltol^0,w,c
  1532  000FCE  6E09               	movwf	___fltol@sign1^0,c
  1533  000FD0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1534  000FD2  0EFF               	movlw	255
  1535  000FD4  1601               	andwf	___fltol@f1^0,f,c
  1536  000FD6  0EFF               	movlw	255
  1537  000FD8  1602               	andwf	(___fltol@f1+1)^0,f,c
  1538  000FDA  0EFF               	movlw	255
  1539  000FDC  1603               	andwf	(___fltol@f1+2)^0,f,c
  1540  000FDE  0E00               	movlw	0
  1541  000FE0  1604               	andwf	(___fltol@f1+3)^0,f,c
  1542  000FE2  0E96               	movlw	150
  1543  000FE4  5E0A               	subwf	___fltol@exp1^0,f,c
  1544  000FE6  BE0A               	btfsc	___fltol@exp1^0,7,c
  1545  000FE8  EFFA  F007         	goto	u860
  1546  000FEC  EFF8  F007         	goto	u861
  1547  000FF0                     u861:
  1548  000FF0  EF10  F008         	goto	l1536
  1549  000FF4                     u860:
  1550  000FF4  500A               	movf	___fltol@exp1^0,w,c
  1551  000FF6  0A80               	xorlw	128
  1552  000FF8  0F97               	addlw	151
  1553  000FFA  B0D8               	btfsc	status,0,c
  1554  000FFC  EF02  F008         	goto	u871
  1555  001000  EF04  F008         	goto	u870
  1556  001004                     u871:
  1557  001004  EF06  F008         	goto	l1532
  1558  001008                     u870:
  1559  001008  EFC9  F007         	goto	l1512
  1560  00100C                     l1532:
  1561  00100C  90D8               	bcf	status,0,c
  1562  00100E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1563  001010  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1564  001012  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1565  001014  3201               	rrcf	___fltol@f1^0,f,c
  1566  001016  3E0A               	incfsz	___fltol@exp1^0,f,c
  1567  001018  EF06  F008         	goto	l1532
  1568  00101C  EF28  F008         	goto	l1546
  1569  001020                     l1536:
  1570  001020  0E1F               	movlw	31
  1571  001022  640A               	cpfsgt	___fltol@exp1^0,c
  1572  001024  EF16  F008         	goto	u881
  1573  001028  EF18  F008         	goto	u880
  1574  00102C                     u881:
  1575  00102C  EF20  F008         	goto	l1544
  1576  001030                     u880:
  1577  001030  EFC9  F007         	goto	l1512
  1578  001034                     l1542:
  1579  001034  90D8               	bcf	status,0,c
  1580  001036  3601               	rlcf	___fltol@f1^0,f,c
  1581  001038  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1582  00103A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1583  00103C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1584  00103E  060A               	decf	___fltol@exp1^0,f,c
  1585  001040                     l1544:
  1586  001040  500A               	movf	___fltol@exp1^0,w,c
  1587  001042  A4D8               	btfss	status,2,c
  1588  001044  EF26  F008         	goto	u891
  1589  001048  EF28  F008         	goto	u890
  1590  00104C                     u891:
  1591  00104C  EF1A  F008         	goto	l1542
  1592  001050                     u890:
  1593  001050                     l1546:
  1594  001050  5009               	movf	___fltol@sign1^0,w,c
  1595  001052  B4D8               	btfsc	status,2,c
  1596  001054  EF2E  F008         	goto	u901
  1597  001058  EF30  F008         	goto	u900
  1598  00105C                     u901:
  1599  00105C  EF38  F008         	goto	l1550
  1600  001060                     u900:
  1601  001060  1E04               	comf	(___fltol@f1+3)^0,f,c
  1602  001062  1E03               	comf	(___fltol@f1+2)^0,f,c
  1603  001064  1E02               	comf	(___fltol@f1+1)^0,f,c
  1604  001066  6C01               	negf	___fltol@f1^0,c
  1605  001068  0E00               	movlw	0
  1606  00106A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1607  00106C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1608  00106E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1609  001070                     l1550:
  1610  001070  C001  F001         	movff	___fltol@f1,?___fltol
  1611  001074  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1612  001078  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1613  00107C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1614  001080                     l454:
  1615  001080  0012               	return		;funcret
  1616  001082                     __end_of___fltol:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function ___flmul *****************
  1620 ;; Defined at:
  1621 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  b               4   14[COMRAM] long 
  1624 ;;  a               4   18[COMRAM] long 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  prod            4   33[COMRAM] struct .
  1627 ;;  grs             4   27[COMRAM] unsigned long 
  1628 ;;  temp            2   37[COMRAM] struct .
  1629 ;;  bexp            1   32[COMRAM] unsigned char 
  1630 ;;  aexp            1   31[COMRAM] unsigned char 
  1631 ;;  sign            1   26[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  4   14[COMRAM] unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0, prodl, prodh
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1641 ;;      Params:         8       0       0       0       0       0       0       0       0
  1642 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1643 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1644 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1645 ;;Total ram usage:       25 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text12
  1655  00081A                     __ptext12:
  1656                           	callstack 0
  1657  00081A                     ___flmul:
  1658                           	callstack 30
  1659  00081A  5012               	movf	(___flmul@b+3)^0,w,c
  1660  00081C  0B80               	andlw	128
  1661  00081E  6E1B               	movwf	___flmul@sign^0,c
  1662  000820  5012               	movf	(___flmul@b+3)^0,w,c
  1663  000822  2412               	addwf	(___flmul@b+3)^0,w,c
  1664  000824  6E21               	movwf	___flmul@bexp^0,c
  1665  000826  AE11               	btfss	(___flmul@b+2)^0,7,c
  1666  000828  EF18  F004         	goto	u651
  1667  00082C  EF1A  F004         	goto	u650
  1668  000830                     u651:
  1669  000830  EF1B  F004         	goto	l1386
  1670  000834                     u650:
  1671  000834  8021               	bsf	___flmul@bexp^0,0,c
  1672  000836                     l1386:
  1673  000836  5021               	movf	___flmul@bexp^0,w,c
  1674  000838  B4D8               	btfsc	status,2,c
  1675  00083A  EF21  F004         	goto	u661
  1676  00083E  EF23  F004         	goto	u660
  1677  000842                     u661:
  1678  000842  EF36  F004         	goto	l1394
  1679  000846                     u660:
  1680  000846  2821               	incf	___flmul@bexp^0,w,c
  1681  000848  A4D8               	btfss	status,2,c
  1682  00084A  EF29  F004         	goto	u671
  1683  00084E  EF2B  F004         	goto	u670
  1684  000852                     u671:
  1685  000852  EF33  F004         	goto	l1392
  1686  000856                     u670:
  1687  000856  0E00               	movlw	0
  1688  000858  6E0F               	movwf	___flmul@b^0,c
  1689  00085A  0E00               	movlw	0
  1690  00085C  6E10               	movwf	(___flmul@b+1)^0,c
  1691  00085E  0E00               	movlw	0
  1692  000860  6E11               	movwf	(___flmul@b+2)^0,c
  1693  000862  0E00               	movlw	0
  1694  000864  6E12               	movwf	(___flmul@b+3)^0,c
  1695  000866                     l1392:
  1696  000866  8E11               	bsf	(___flmul@b+2)^0,7,c
  1697  000868  EF3E  F004         	goto	l1396
  1698  00086C                     l1394:
  1699  00086C  0E00               	movlw	0
  1700  00086E  6E0F               	movwf	___flmul@b^0,c
  1701  000870  0E00               	movlw	0
  1702  000872  6E10               	movwf	(___flmul@b+1)^0,c
  1703  000874  0E00               	movlw	0
  1704  000876  6E11               	movwf	(___flmul@b+2)^0,c
  1705  000878  0E00               	movlw	0
  1706  00087A  6E12               	movwf	(___flmul@b+3)^0,c
  1707  00087C                     l1396:
  1708  00087C  5016               	movf	(___flmul@a+3)^0,w,c
  1709  00087E  0B80               	andlw	128
  1710  000880  1A1B               	xorwf	___flmul@sign^0,f,c
  1711  000882  5016               	movf	(___flmul@a+3)^0,w,c
  1712  000884  2416               	addwf	(___flmul@a+3)^0,w,c
  1713  000886  6E20               	movwf	___flmul@aexp^0,c
  1714  000888  AE15               	btfss	(___flmul@a+2)^0,7,c
  1715  00088A  EF49  F004         	goto	u681
  1716  00088E  EF4B  F004         	goto	u680
  1717  000892                     u681:
  1718  000892  EF4C  F004         	goto	l1404
  1719  000896                     u680:
  1720  000896  8020               	bsf	___flmul@aexp^0,0,c
  1721  000898                     l1404:
  1722  000898  5020               	movf	___flmul@aexp^0,w,c
  1723  00089A  B4D8               	btfsc	status,2,c
  1724  00089C  EF52  F004         	goto	u691
  1725  0008A0  EF54  F004         	goto	u690
  1726  0008A4                     u691:
  1727  0008A4  EF67  F004         	goto	l1412
  1728  0008A8                     u690:
  1729  0008A8  2820               	incf	___flmul@aexp^0,w,c
  1730  0008AA  A4D8               	btfss	status,2,c
  1731  0008AC  EF5A  F004         	goto	u701
  1732  0008B0  EF5C  F004         	goto	u700
  1733  0008B4                     u701:
  1734  0008B4  EF64  F004         	goto	l1410
  1735  0008B8                     u700:
  1736  0008B8  0E00               	movlw	0
  1737  0008BA  6E13               	movwf	___flmul@a^0,c
  1738  0008BC  0E00               	movlw	0
  1739  0008BE  6E14               	movwf	(___flmul@a+1)^0,c
  1740  0008C0  0E00               	movlw	0
  1741  0008C2  6E15               	movwf	(___flmul@a+2)^0,c
  1742  0008C4  0E00               	movlw	0
  1743  0008C6  6E16               	movwf	(___flmul@a+3)^0,c
  1744  0008C8                     l1410:
  1745  0008C8  8E15               	bsf	(___flmul@a+2)^0,7,c
  1746  0008CA  EF6F  F004         	goto	l771
  1747  0008CE                     l1412:
  1748  0008CE  0E00               	movlw	0
  1749  0008D0  6E13               	movwf	___flmul@a^0,c
  1750  0008D2  0E00               	movlw	0
  1751  0008D4  6E14               	movwf	(___flmul@a+1)^0,c
  1752  0008D6  0E00               	movlw	0
  1753  0008D8  6E15               	movwf	(___flmul@a+2)^0,c
  1754  0008DA  0E00               	movlw	0
  1755  0008DC  6E16               	movwf	(___flmul@a+3)^0,c
  1756  0008DE                     l771:
  1757  0008DE  5020               	movf	___flmul@aexp^0,w,c
  1758  0008E0  B4D8               	btfsc	status,2,c
  1759  0008E2  EF75  F004         	goto	u711
  1760  0008E6  EF77  F004         	goto	u710
  1761  0008EA                     u711:
  1762  0008EA  EF7F  F004         	goto	l1416
  1763  0008EE                     u710:
  1764  0008EE  5021               	movf	___flmul@bexp^0,w,c
  1765  0008F0  A4D8               	btfss	status,2,c
  1766  0008F2  EF7D  F004         	goto	u721
  1767  0008F6  EF7F  F004         	goto	u720
  1768  0008FA                     u721:
  1769  0008FA  EF89  F004         	goto	l1420
  1770  0008FE                     u720:
  1771  0008FE                     l1416:
  1772  0008FE  0E00               	movlw	0
  1773  000900  6E0F               	movwf	?___flmul^0,c
  1774  000902  0E00               	movlw	0
  1775  000904  6E10               	movwf	(?___flmul+1)^0,c
  1776  000906  0E00               	movlw	0
  1777  000908  6E11               	movwf	(?___flmul+2)^0,c
  1778  00090A  0E00               	movlw	0
  1779  00090C  6E12               	movwf	(?___flmul+3)^0,c
  1780  00090E  EF21  F006         	goto	l775
  1781  000912                     l1420:
  1782  000912  5015               	movf	(___flmul@a+2)^0,w,c
  1783  000914  020F               	mulwf	___flmul@b^0,c
  1784  000916  CFF3 F026          	movff	prodl,___flmul@temp
  1785  00091A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1786  00091E  5026               	movf	___flmul@temp^0,w,c
  1787  000920  6E1C               	movwf	___flmul@grs^0,c
  1788  000922  6A1D               	clrf	(___flmul@grs+1)^0,c
  1789  000924  6A1E               	clrf	(___flmul@grs+2)^0,c
  1790  000926  6A1F               	clrf	(___flmul@grs+3)^0,c
  1791  000928  5027               	movf	(___flmul@temp+1)^0,w,c
  1792  00092A  6E22               	movwf	___flmul@prod^0,c
  1793  00092C  6A23               	clrf	(___flmul@prod+1)^0,c
  1794  00092E  6A24               	clrf	(___flmul@prod+2)^0,c
  1795  000930  6A25               	clrf	(___flmul@prod+3)^0,c
  1796  000932  5014               	movf	(___flmul@a+1)^0,w,c
  1797  000934  0210               	mulwf	(___flmul@b+1)^0,c
  1798  000936  CFF3 F026          	movff	prodl,___flmul@temp
  1799  00093A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1800  00093E  5026               	movf	___flmul@temp^0,w,c
  1801  000940  261C               	addwf	___flmul@grs^0,f,c
  1802  000942  0E00               	movlw	0
  1803  000944  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1804  000946  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1805  000948  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1806  00094A  5027               	movf	(___flmul@temp+1)^0,w,c
  1807  00094C  2622               	addwf	___flmul@prod^0,f,c
  1808  00094E  0E00               	movlw	0
  1809  000950  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1810  000952  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1811  000954  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1812  000956  5013               	movf	___flmul@a^0,w,c
  1813  000958  0211               	mulwf	(___flmul@b+2)^0,c
  1814  00095A  CFF3 F026          	movff	prodl,___flmul@temp
  1815  00095E  CFF4 F027          	movff	prodh,___flmul@temp+1
  1816  000962  5026               	movf	___flmul@temp^0,w,c
  1817  000964  261C               	addwf	___flmul@grs^0,f,c
  1818  000966  0E00               	movlw	0
  1819  000968  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1820  00096A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1821  00096C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1822  00096E  5027               	movf	(___flmul@temp+1)^0,w,c
  1823  000970  2622               	addwf	___flmul@prod^0,f,c
  1824  000972  0E00               	movlw	0
  1825  000974  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1826  000976  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1827  000978  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1828  00097A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1829  00097E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1830  000982  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1831  000986  6A1C               	clrf	___flmul@grs^0,c
  1832  000988  5013               	movf	___flmul@a^0,w,c
  1833  00098A  0210               	mulwf	(___flmul@b+1)^0,c
  1834  00098C  CFF3 F026          	movff	prodl,___flmul@temp
  1835  000990  CFF4 F027          	movff	prodh,___flmul@temp+1
  1836  000994  5026               	movf	___flmul@temp^0,w,c
  1837  000996  261C               	addwf	___flmul@grs^0,f,c
  1838  000998  5027               	movf	(___flmul@temp+1)^0,w,c
  1839  00099A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1840  00099C  0E00               	movlw	0
  1841  00099E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1842  0009A0  0E00               	movlw	0
  1843  0009A2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1844  0009A4  5014               	movf	(___flmul@a+1)^0,w,c
  1845  0009A6  020F               	mulwf	___flmul@b^0,c
  1846  0009A8  CFF3 F026          	movff	prodl,___flmul@temp
  1847  0009AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  1848  0009B0  5026               	movf	___flmul@temp^0,w,c
  1849  0009B2  261C               	addwf	___flmul@grs^0,f,c
  1850  0009B4  5027               	movf	(___flmul@temp+1)^0,w,c
  1851  0009B6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1852  0009B8  0E00               	movlw	0
  1853  0009BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1854  0009BC  0E00               	movlw	0
  1855  0009BE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1856  0009C0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1857  0009C4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1858  0009C8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1859  0009CC  6A1C               	clrf	___flmul@grs^0,c
  1860  0009CE  5013               	movf	___flmul@a^0,w,c
  1861  0009D0  020F               	mulwf	___flmul@b^0,c
  1862  0009D2  CFF3 F026          	movff	prodl,___flmul@temp
  1863  0009D6  CFF4 F027          	movff	prodh,___flmul@temp+1
  1864  0009DA  5026               	movf	___flmul@temp^0,w,c
  1865  0009DC  261C               	addwf	___flmul@grs^0,f,c
  1866  0009DE  5027               	movf	(___flmul@temp+1)^0,w,c
  1867  0009E0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1868  0009E2  0E00               	movlw	0
  1869  0009E4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1870  0009E6  0E00               	movlw	0
  1871  0009E8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1872  0009EA  5015               	movf	(___flmul@a+2)^0,w,c
  1873  0009EC  0210               	mulwf	(___flmul@b+1)^0,c
  1874  0009EE  CFF3 F026          	movff	prodl,___flmul@temp
  1875  0009F2  CFF4 F027          	movff	prodh,___flmul@temp+1
  1876  0009F6  5026               	movf	___flmul@temp^0,w,c
  1877  0009F8  2622               	addwf	___flmul@prod^0,f,c
  1878  0009FA  5027               	movf	(___flmul@temp+1)^0,w,c
  1879  0009FC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1880  0009FE  0E00               	movlw	0
  1881  000A00  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1882  000A02  0E00               	movlw	0
  1883  000A04  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1884  000A06  5014               	movf	(___flmul@a+1)^0,w,c
  1885  000A08  0211               	mulwf	(___flmul@b+2)^0,c
  1886  000A0A  CFF3 F026          	movff	prodl,___flmul@temp
  1887  000A0E  CFF4 F027          	movff	prodh,___flmul@temp+1
  1888  000A12  5026               	movf	___flmul@temp^0,w,c
  1889  000A14  2622               	addwf	___flmul@prod^0,f,c
  1890  000A16  5027               	movf	(___flmul@temp+1)^0,w,c
  1891  000A18  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1892  000A1A  0E00               	movlw	0
  1893  000A1C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1894  000A1E  0E00               	movlw	0
  1895  000A20  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1896  000A22  5015               	movf	(___flmul@a+2)^0,w,c
  1897  000A24  0211               	mulwf	(___flmul@b+2)^0,c
  1898  000A26  CFF3 F026          	movff	prodl,___flmul@temp
  1899  000A2A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1900  000A2E  5026               	movf	___flmul@temp^0,w,c
  1901  000A30  6E17               	movwf	??___flmul^0,c
  1902  000A32  5027               	movf	(___flmul@temp+1)^0,w,c
  1903  000A34  6E18               	movwf	(??___flmul+1)^0,c
  1904  000A36  6A19               	clrf	(??___flmul+2)^0,c
  1905  000A38  6A1A               	clrf	(??___flmul+3)^0,c
  1906  000A3A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1907  000A3E  C018  F019         	movff	??___flmul+1,??___flmul+2
  1908  000A42  C017  F018         	movff	??___flmul,??___flmul+1
  1909  000A46  6A17               	clrf	??___flmul^0,c
  1910  000A48  5017               	movf	??___flmul^0,w,c
  1911  000A4A  2622               	addwf	___flmul@prod^0,f,c
  1912  000A4C  5018               	movf	(??___flmul+1)^0,w,c
  1913  000A4E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1914  000A50  5019               	movf	(??___flmul+2)^0,w,c
  1915  000A52  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1916  000A54  501A               	movf	(??___flmul+3)^0,w,c
  1917  000A56  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1918  000A58  C01C  F017         	movff	___flmul@grs,??___flmul
  1919  000A5C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1920  000A60  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1921  000A64  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1922  000A68  0E19               	movlw	25
  1923  000A6A  EF3C  F005         	goto	u730
  1924  000A6E                     u735:
  1925  000A6E  90D8               	bcf	status,0,c
  1926  000A70  321A               	rrcf	(??___flmul+3)^0,f,c
  1927  000A72  3219               	rrcf	(??___flmul+2)^0,f,c
  1928  000A74  3218               	rrcf	(??___flmul+1)^0,f,c
  1929  000A76  3217               	rrcf	??___flmul^0,f,c
  1930  000A78                     u730:
  1931  000A78  2EE8               	decfsz	wreg,f,c
  1932  000A7A  EF37  F005         	goto	u735
  1933  000A7E  5017               	movf	??___flmul^0,w,c
  1934  000A80  2622               	addwf	___flmul@prod^0,f,c
  1935  000A82  5018               	movf	(??___flmul+1)^0,w,c
  1936  000A84  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1937  000A86  5019               	movf	(??___flmul+2)^0,w,c
  1938  000A88  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1939  000A8A  501A               	movf	(??___flmul+3)^0,w,c
  1940  000A8C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1941  000A8E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1942  000A92  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1943  000A96  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1944  000A9A  6A1C               	clrf	___flmul@grs^0,c
  1945  000A9C  5020               	movf	___flmul@aexp^0,w,c
  1946  000A9E  C021  F017         	movff	___flmul@bexp,??___flmul
  1947  000AA2  6A18               	clrf	(??___flmul+1)^0,c
  1948  000AA4  2617               	addwf	??___flmul^0,f,c
  1949  000AA6  0E00               	movlw	0
  1950  000AA8  2218               	addwfc	(??___flmul+1)^0,f,c
  1951  000AAA  0E82               	movlw	130
  1952  000AAC  2417               	addwf	??___flmul^0,w,c
  1953  000AAE  6E26               	movwf	___flmul@temp^0,c
  1954  000AB0  0EFF               	movlw	255
  1955  000AB2  2018               	addwfc	(??___flmul+1)^0,w,c
  1956  000AB4  6E27               	movwf	(___flmul@temp+1)^0,c
  1957  000AB6  EF72  F005         	goto	l1468
  1958  000ABA                     l1462:
  1959  000ABA  90D8               	bcf	status,0,c
  1960  000ABC  3622               	rlcf	___flmul@prod^0,f,c
  1961  000ABE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1962  000AC0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1963  000AC2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1964  000AC4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1965  000AC6  EF67  F005         	goto	u741
  1966  000ACA  EF69  F005         	goto	u740
  1967  000ACE                     u741:
  1968  000ACE  EF6A  F005         	goto	l778
  1969  000AD2                     u740:
  1970  000AD2  8022               	bsf	___flmul@prod^0,0,c
  1971  000AD4                     l778:
  1972  000AD4  90D8               	bcf	status,0,c
  1973  000AD6  361C               	rlcf	___flmul@grs^0,f,c
  1974  000AD8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  1975  000ADA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  1976  000ADC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  1977  000ADE  0626               	decf	___flmul@temp^0,f,c
  1978  000AE0  A0D8               	btfss	status,0,c
  1979  000AE2  0627               	decf	(___flmul@temp+1)^0,f,c
  1980  000AE4                     l1468:
  1981  000AE4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1982  000AE6  EF77  F005         	goto	u751
  1983  000AEA  EF79  F005         	goto	u750
  1984  000AEE                     u751:
  1985  000AEE  EF5D  F005         	goto	l1462
  1986  000AF2                     u750:
  1987  000AF2  0E00               	movlw	0
  1988  000AF4  6E20               	movwf	___flmul@aexp^0,c
  1989  000AF6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1990  000AF8  EF80  F005         	goto	u761
  1991  000AFC  EF82  F005         	goto	u760
  1992  000B00                     u761:
  1993  000B00  EFA6  F005         	goto	l780
  1994  000B04                     u760:
  1995  000B04  0EFF               	movlw	255
  1996  000B06  141C               	andwf	___flmul@grs^0,w,c
  1997  000B08  6E17               	movwf	??___flmul^0,c
  1998  000B0A  0EFF               	movlw	255
  1999  000B0C  141D               	andwf	(___flmul@grs+1)^0,w,c
  2000  000B0E  6E18               	movwf	(??___flmul+1)^0,c
  2001  000B10  0EFF               	movlw	255
  2002  000B12  141E               	andwf	(___flmul@grs+2)^0,w,c
  2003  000B14  6E19               	movwf	(??___flmul+2)^0,c
  2004  000B16  0E7F               	movlw	127
  2005  000B18  141F               	andwf	(___flmul@grs+3)^0,w,c
  2006  000B1A  6E1A               	movwf	(??___flmul+3)^0,c
  2007  000B1C  5017               	movf	??___flmul^0,w,c
  2008  000B1E  1018               	iorwf	(??___flmul+1)^0,w,c
  2009  000B20  1019               	iorwf	(??___flmul+2)^0,w,c
  2010  000B22  101A               	iorwf	(??___flmul+3)^0,w,c
  2011  000B24  B4D8               	btfsc	status,2,c
  2012  000B26  EF97  F005         	goto	u771
  2013  000B2A  EF99  F005         	goto	u770
  2014  000B2E                     u771:
  2015  000B2E  EF9D  F005         	goto	l781
  2016  000B32                     u770:
  2017  000B32                     l1476:
  2018  000B32  0E01               	movlw	1
  2019  000B34  6E20               	movwf	___flmul@aexp^0,c
  2020  000B36  EFA6  F005         	goto	l780
  2021  000B3A                     l781:
  2022  000B3A  A022               	btfss	___flmul@prod^0,0,c
  2023  000B3C  EFA2  F005         	goto	u781
  2024  000B40  EFA4  F005         	goto	u780
  2025  000B44                     u781:
  2026  000B44  EFA6  F005         	goto	l780
  2027  000B48                     u780:
  2028  000B48  EF99  F005         	goto	l1476
  2029  000B4C                     l780:
  2030  000B4C  5020               	movf	___flmul@aexp^0,w,c
  2031  000B4E  B4D8               	btfsc	status,2,c
  2032  000B50  EFAC  F005         	goto	u791
  2033  000B54  EFAE  F005         	goto	u790
  2034  000B58                     u791:
  2035  000B58  EFD2  F005         	goto	l1488
  2036  000B5C                     u790:
  2037  000B5C  0E01               	movlw	1
  2038  000B5E  2622               	addwf	___flmul@prod^0,f,c
  2039  000B60  0E00               	movlw	0
  2040  000B62  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2041  000B64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2042  000B66  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2043  000B68  A025               	btfss	(___flmul@prod+3)^0,0,c
  2044  000B6A  EFB9  F005         	goto	u801
  2045  000B6E  EFBB  F005         	goto	u800
  2046  000B72                     u801:
  2047  000B72  EFD2  F005         	goto	l1488
  2048  000B76                     u800:
  2049  000B76  C022  F017         	movff	___flmul@prod,??___flmul
  2050  000B7A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2051  000B7E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2052  000B82  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2053  000B86  341A               	rlcf	(??___flmul+3)^0,w,c
  2054  000B88  321A               	rrcf	(??___flmul+3)^0,f,c
  2055  000B8A  3219               	rrcf	(??___flmul+2)^0,f,c
  2056  000B8C  3218               	rrcf	(??___flmul+1)^0,f,c
  2057  000B8E  3217               	rrcf	??___flmul^0,f,c
  2058  000B90  C017  F022         	movff	??___flmul,___flmul@prod
  2059  000B94  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2060  000B98  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2061  000B9C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2062  000BA0  4A26               	infsnz	___flmul@temp^0,f,c
  2063  000BA2  2A27               	incf	(___flmul@temp+1)^0,f,c
  2064  000BA4                     l1488:
  2065  000BA4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2066  000BA6  EFDD  F005         	goto	u811
  2067  000BAA  5027               	movf	(___flmul@temp+1)^0,w,c
  2068  000BAC  E108               	bnz	u810
  2069  000BAE  2826               	incf	___flmul@temp^0,w,c
  2070  000BB0  A0D8               	btfss	status,0,c
  2071  000BB2  EFDD  F005         	goto	u811
  2072  000BB6  EFDF  F005         	goto	u810
  2073  000BBA                     u811:
  2074  000BBA  EFE9  F005         	goto	l1492
  2075  000BBE                     u810:
  2076  000BBE  0E00               	movlw	0
  2077  000BC0  6E22               	movwf	___flmul@prod^0,c
  2078  000BC2  0E00               	movlw	0
  2079  000BC4  6E23               	movwf	(___flmul@prod+1)^0,c
  2080  000BC6  0E80               	movlw	128
  2081  000BC8  6E24               	movwf	(___flmul@prod+2)^0,c
  2082  000BCA  0E7F               	movlw	127
  2083  000BCC  6E25               	movwf	(___flmul@prod+3)^0,c
  2084  000BCE  EF17  F006         	goto	l1504
  2085  000BD2                     l1492:
  2086  000BD2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2087  000BD4  EFF6  F005         	goto	u820
  2088  000BD8  5027               	movf	(___flmul@temp+1)^0,w,c
  2089  000BDA  E106               	bnz	u821
  2090  000BDC  0426               	decf	___flmul@temp^0,w,c
  2091  000BDE  B0D8               	btfsc	status,0,c
  2092  000BE0  EFF4  F005         	goto	u821
  2093  000BE4  EFF6  F005         	goto	u820
  2094  000BE8                     u821:
  2095  000BE8  EF02  F006         	goto	l788
  2096  000BEC                     u820:
  2097  000BEC  0E00               	movlw	0
  2098  000BEE  6E22               	movwf	___flmul@prod^0,c
  2099  000BF0  0E00               	movlw	0
  2100  000BF2  6E23               	movwf	(___flmul@prod+1)^0,c
  2101  000BF4  0E00               	movlw	0
  2102  000BF6  6E24               	movwf	(___flmul@prod+2)^0,c
  2103  000BF8  0E00               	movlw	0
  2104  000BFA  6E25               	movwf	(___flmul@prod+3)^0,c
  2105  000BFC  0E00               	movlw	0
  2106  000BFE  6E1B               	movwf	___flmul@sign^0,c
  2107  000C00  EF17  F006         	goto	l1504
  2108  000C04                     l788:
  2109  000C04  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2110  000C08  0EFF               	movlw	255
  2111  000C0A  1622               	andwf	___flmul@prod^0,f,c
  2112  000C0C  0EFF               	movlw	255
  2113  000C0E  1623               	andwf	(___flmul@prod+1)^0,f,c
  2114  000C10  0E7F               	movlw	127
  2115  000C12  1624               	andwf	(___flmul@prod+2)^0,f,c
  2116  000C14  0E00               	movlw	0
  2117  000C16  1625               	andwf	(___flmul@prod+3)^0,f,c
  2118  000C18  A021               	btfss	___flmul@bexp^0,0,c
  2119  000C1A  EF11  F006         	goto	u831
  2120  000C1E  EF13  F006         	goto	u830
  2121  000C22                     u831:
  2122  000C22  EF14  F006         	goto	l1502
  2123  000C26                     u830:
  2124  000C26  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2125  000C28                     l1502:
  2126  000C28  90D8               	bcf	status,0,c
  2127  000C2A  3021               	rrcf	___flmul@bexp^0,w,c
  2128  000C2C  6E25               	movwf	(___flmul@prod+3)^0,c
  2129  000C2E                     l1504:
  2130  000C2E  501B               	movf	___flmul@sign^0,w,c
  2131  000C30  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2132  000C32  C022  F00F         	movff	___flmul@prod,?___flmul
  2133  000C36  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2134  000C3A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2135  000C3E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2136  000C42                     l775:
  2137  000C42  0012               	return		;funcret
  2138  000C44                     __end_of___flmul:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _TMR0_config *****************
  2142 ;; Defined at:
  2143 ;;		line 29 in file "maincode1.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;		None
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		None
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2157 ;;      Params:         0       0       0       0       0       0       0       0       0
  2158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2161 ;;Total ram usage:        0 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_main
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text13
  2171  00147C                     __ptext13:
  2172                           	callstack 0
  2173  00147C                     _TMR0_config:
  2174                           	callstack 30
  2175  00147C  0012               	return		;funcret
  2176  00147E                     __end_of_TMR0_config:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _POS_CURSOR *****************
  2180 ;; Defined at:
  2181 ;;		line 6 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  fila            1    wreg     unsigned char 
  2184 ;;  columna         1    3[COMRAM] unsigned char 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  fila            1    4[COMRAM] unsigned char 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2196 ;;      Params:         1       0       0       0       0       0       0       0       0
  2197 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2199 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		_ENVIA_LCD_CMD
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text14
  2211  001318                     __ptext14:
  2212                           	callstack 0
  2213  001318                     _POS_CURSOR:
  2214                           	callstack 28
  2215                           
  2216                           ;incstack = 0
  2217                           ;POS_CURSOR@fila stored from wreg
  2218  001318  6E05               	movwf	POS_CURSOR@fila^0,c
  2219  00131A                     
  2220                           ;../20221_sem11_ls51_servo.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char 
      +                          columna);../20221_sem11_ls51_servo.X/LCD.c: 7: {;../20221_sem11_ls51_servo.X/LCD.c: 8:  
      +                          if(fila == 1)
  2221  00131A  0405               	decf	POS_CURSOR@fila^0,w,c
  2222  00131C  A4D8               	btfss	status,2,c
  2223  00131E  EF93  F009         	goto	u621
  2224  001322  EF95  F009         	goto	u620
  2225  001326                     u621:
  2226  001326  EF9B  F009         	goto	l1368
  2227  00132A                     u620:
  2228  00132A                     
  2229                           ;../20221_sem11_ls51_servo.X/LCD.c: 9:  {;../20221_sem11_ls51_servo.X/LCD.c: 10:   ENVIA
      +                          _LCD_CMD(0x80+columna);
  2230  00132A  5004               	movf	POS_CURSOR@columna^0,w,c
  2231  00132C  0F80               	addlw	128
  2232  00132E  ECA9  F009         	call	_ENVIA_LCD_CMD
  2233                           
  2234                           ;../20221_sem11_ls51_servo.X/LCD.c: 11:  }
  2235  001332  EFA8  F009         	goto	l104
  2236  001336                     l1368:
  2237  001336  0E02               	movlw	2
  2238  001338  1805               	xorwf	POS_CURSOR@fila^0,w,c
  2239  00133A  A4D8               	btfss	status,2,c
  2240  00133C  EFA2  F009         	goto	u631
  2241  001340  EFA4  F009         	goto	u630
  2242  001344                     u631:
  2243  001344  EFA8  F009         	goto	l104
  2244  001348                     u630:
  2245  001348                     
  2246                           ;../20221_sem11_ls51_servo.X/LCD.c: 13:  {;../20221_sem11_ls51_servo.X/LCD.c: 14:   ENVI
      +                          A_LCD_CMD(0xC0+columna);
  2247  001348  5004               	movf	POS_CURSOR@columna^0,w,c
  2248  00134A  0FC0               	addlw	192
  2249  00134C  ECA9  F009         	call	_ENVIA_LCD_CMD
  2250  001350                     l104:
  2251  001350  0012               	return		;funcret
  2252  001352                     __end_of_POS_CURSOR:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _ENVIA_LCD_CMD *****************
  2256 ;; Defined at:
  2257 ;;		line 104 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  dato            1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  dato            1    1[COMRAM] unsigned char 
  2262 ;;  aux             1    2[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 1
  2279 ;; This function calls:
  2280 ;;		_ENVIA_NIBBLE
  2281 ;;		_LEER_LCD
  2282 ;; This function is called by:
  2283 ;;		_POS_CURSOR
  2284 ;;		_CURSOR_HOME
  2285 ;;		_CURSOR_ONOFF
  2286 ;;		_BORRAR_LCD
  2287 ;;		_LCD_CONFIG
  2288 ;;		_BLINK_CURSOR
  2289 ;;		_DISPLAY_ONOFF
  2290 ;;		_GENERACARACTER
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text15
  2295  001352                     __ptext15:
  2296                           	callstack 0
  2297  001352                     _ENVIA_LCD_CMD:
  2298                           	callstack 27
  2299                           
  2300                           ;incstack = 0
  2301                           ;ENVIA_LCD_CMD@dato stored from wreg
  2302  001352  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2303  001354                     
  2304                           ;../20221_sem11_ls51_servo.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20221
      +                          _sem11_ls51_servo.X/LCD.c: 105: {;../20221_sem11_ls51_servo.X/LCD.c: 106:  unsigned char
      +                           aux;;../20221_sem11_ls51_servo.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  2305  001354  908C               	bcf	140,0,c	;volatile
  2306  001356                     
  2307                           ;../20221_sem11_ls51_servo.X/LCD.c: 108:  LEER_LCD();
  2308  001356  ECD2  F008         	call	_LEER_LCD	;wreg free
  2309  00135A                     
  2310                           ;../20221_sem11_ls51_servo.X/LCD.c: 109:  TRISD = 0b00000000;
  2311  00135A  0E00               	movlw	0
  2312  00135C  6E95               	movwf	149,c	;volatile
  2313  00135E                     
  2314                           ;../20221_sem11_ls51_servo.X/LCD.c: 111:         _delay(1200);
  2315  00135E  0EF0               	movlw	240
  2316  001360                     u1077:
  2317  001360  D000               	nop2	
  2318  001362  2EE8               	decfsz	wreg,f,c
  2319  001364  D7FD               	bra	u1077
  2320  001366                     
  2321                           ;../20221_sem11_ls51_servo.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  2322  001366  928C               	bcf	140,1,c	;volatile
  2323  001368                     
  2324                           ;../20221_sem11_ls51_servo.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  2325  001368  948C               	bcf	140,2,c	;volatile
  2326  00136A                     
  2327                           ;../20221_sem11_ls51_servo.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  2328  00136A  908C               	bcf	140,0,c	;volatile
  2329  00136C                     
  2330                           ;../20221_sem11_ls51_servo.X/LCD.c: 115:  aux = dato & 0xF0;
  2331  00136C  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2332  00136E  0BF0               	andlw	240
  2333  001370  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2334  001372                     
  2335                           ;../20221_sem11_ls51_servo.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  2336  001372  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2337  001374  EC09  F00A         	call	_ENVIA_NIBBLE
  2338  001378                     
  2339                           ;../20221_sem11_ls51_servo.X/LCD.c: 117:  aux = dato<<4;
  2340  001378  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2341  00137A  0BF0               	andlw	240
  2342  00137C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2343  00137E                     
  2344                           ;../20221_sem11_ls51_servo.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  2345  00137E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2346  001380  EC09  F00A         	call	_ENVIA_NIBBLE
  2347  001384  0012               	return		;funcret
  2348  001386                     __end_of_ENVIA_LCD_CMD:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _ESCRIBE_MENSAJE *****************
  2352 ;; Defined at:
  2353 ;;		line 41 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2356 ;;		 -> STR_3(6), STR_2(4), STR_1(14), 
  2357 ;;  tam             1    5[COMRAM] unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  i               1    8[COMRAM] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2369 ;;      Params:         3       0       0       0       0       0       0       0       0
  2370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2371 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2372 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2373 ;;Total ram usage:        6 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		_ENVIA_CHAR
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text16
  2384  0012DA                     __ptext16:
  2385                           	callstack 0
  2386  0012DA                     _ESCRIBE_MENSAJE:
  2387                           	callstack 28
  2388  0012DA                     
  2389                           ;../20221_sem11_ls51_servo.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned
      +                           char tam);../20221_sem11_ls51_servo.X/LCD.c: 42: {;../20221_sem11_ls51_servo.X/LCD.c: 4
      +                          3:  unsigned char i = 0;
  2390  0012DA  0E00               	movlw	0
  2391  0012DC  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2392                           
  2393                           ;../20221_sem11_ls51_servo.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  2394  0012DE  0E00               	movlw	0
  2395  0012E0  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2396  0012E2  EF82  F009         	goto	l1378
  2397  0012E6                     l1374:
  2398                           
  2399                           ;../20221_sem11_ls51_servo.X/LCD.c: 45:  {;../20221_sem11_ls51_servo.X/LCD.c: 46:   ENVI
      +                          A_CHAR(cadena[i]);
  2400  0012E6  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2401  0012E8  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2402  0012EA  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  2403  0012EC  0E00               	movlw	0
  2404  0012EE  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2405  0012F0  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2406  0012F2  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2407  0012F6  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2408  0012FA                     	if	0	;tblptru may be non-zero
  2409  0012FA                     	endif
  2410  0012FA                     	if	0	;tblptru may be non-zero
  2411  0012FA                     	endif
  2412  0012FA  0008               	tblrd		*
  2413  0012FC  50F5               	movf	tablat,w,c
  2414  0012FE  ECC3  F009         	call	_ENVIA_CHAR
  2415  001302                     
  2416                           ;../20221_sem11_ls51_servo.X/LCD.c: 47:  }
  2417  001302  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2418  001304                     l1378:
  2419  001304  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2420  001306  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2421  001308  A0D8               	btfss	status,0,c
  2422  00130A  EF89  F009         	goto	u641
  2423  00130E  EF8B  F009         	goto	u640
  2424  001312                     u641:
  2425  001312  EF73  F009         	goto	l1374
  2426  001316                     u640:
  2427  001316  0012               	return		;funcret
  2428  001318                     __end_of_ESCRIBE_MENSAJE:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _ENVIA_CHAR *****************
  2432 ;; Defined at:
  2433 ;;		line 50 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  dato            1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  dato            1    1[COMRAM] unsigned char 
  2438 ;;  aux             1    2[COMRAM] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0
  2449 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 1
  2455 ;; This function calls:
  2456 ;;		_ENVIA_NIBBLE
  2457 ;;		_LEER_LCD
  2458 ;; This function is called by:
  2459 ;;		_main
  2460 ;;		_ESCRIBE_MENSAJE
  2461 ;;		_GENERACARACTER
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text17
  2466  001386                     __ptext17:
  2467                           	callstack 0
  2468  001386                     _ENVIA_CHAR:
  2469                           	callstack 28
  2470                           
  2471                           ;incstack = 0
  2472                           ;ENVIA_CHAR@dato stored from wreg
  2473  001386  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2474  001388                     
  2475                           ;../20221_sem11_ls51_servo.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20221_sem
      +                          11_ls51_servo.X/LCD.c: 51: {;../20221_sem11_ls51_servo.X/LCD.c: 52:  unsigned char aux;;
      +                          ../20221_sem11_ls51_servo.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  2476  001388  808C               	bsf	140,0,c	;volatile
  2477  00138A                     
  2478                           ;../20221_sem11_ls51_servo.X/LCD.c: 54:  LEER_LCD();
  2479  00138A  ECD2  F008         	call	_LEER_LCD	;wreg free
  2480  00138E                     
  2481                           ;../20221_sem11_ls51_servo.X/LCD.c: 55:  TRISD = 0x00;
  2482  00138E  0E00               	movlw	0
  2483  001390  6E95               	movwf	149,c	;volatile
  2484  001392                     
  2485                           ;../20221_sem11_ls51_servo.X/LCD.c: 56:         _delay(1200);
  2486  001392  0EF0               	movlw	240
  2487  001394                     u1087:
  2488  001394  D000               	nop2	
  2489  001396  2EE8               	decfsz	wreg,f,c
  2490  001398  D7FD               	bra	u1087
  2491  00139A                     
  2492                           ;../20221_sem11_ls51_servo.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  2493  00139A  928C               	bcf	140,1,c	;volatile
  2494  00139C                     
  2495                           ;../20221_sem11_ls51_servo.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  2496  00139C  948C               	bcf	140,2,c	;volatile
  2497  00139E                     
  2498                           ;../20221_sem11_ls51_servo.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  2499  00139E  808C               	bsf	140,0,c	;volatile
  2500  0013A0                     
  2501                           ;../20221_sem11_ls51_servo.X/LCD.c: 61:  aux = dato & 0xF0;
  2502  0013A0  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2503  0013A2  0BF0               	andlw	240
  2504  0013A4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2505  0013A6                     
  2506                           ;../20221_sem11_ls51_servo.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  2507  0013A6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2508  0013A8  EC09  F00A         	call	_ENVIA_NIBBLE
  2509  0013AC                     
  2510                           ;../20221_sem11_ls51_servo.X/LCD.c: 63:  aux = dato << 4;
  2511  0013AC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2512  0013AE  0BF0               	andlw	240
  2513  0013B0  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2514  0013B2                     
  2515                           ;../20221_sem11_ls51_servo.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  2516  0013B2  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2517  0013B4  EC09  F00A         	call	_ENVIA_NIBBLE
  2518  0013B8  0012               	return		;funcret
  2519  0013BA                     __end_of_ENVIA_CHAR:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _LEER_LCD *****************
  2523 ;; Defined at:
  2524 ;;		line 121 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  aux             1    0[COMRAM] unsigned char 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0
  2539 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2541 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2542 ;;Total ram usage:        1 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_ENVIA_CHAR
  2548 ;;		_ENVIA_LCD_CMD
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text18
  2553  0011A4                     __ptext18:
  2554                           	callstack 0
  2555  0011A4                     _LEER_LCD:
  2556                           	callstack 27
  2557  0011A4                     
  2558                           ;../20221_sem11_ls51_servo.X/LCD.c: 123:  unsigned char aux;;../20221_sem11_ls51_servo.X
      +                          /LCD.c: 124:  TRISD = 0xF8;
  2559  0011A4  0EF8               	movlw	248
  2560  0011A6  6E95               	movwf	149,c	;volatile
  2561  0011A8                     
  2562                           ;../20221_sem11_ls51_servo.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  2563  0011A8  908C               	bcf	140,0,c	;volatile
  2564  0011AA                     
  2565                           ;../20221_sem11_ls51_servo.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  2566  0011AA  828C               	bsf	140,1,c	;volatile
  2567  0011AC                     
  2568                           ;../20221_sem11_ls51_servo.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  2569  0011AC  848C               	bsf	140,2,c	;volatile
  2570  0011AE                     
  2571                           ;../20221_sem11_ls51_servo.X/LCD.c: 128:         _delay(1200);
  2572  0011AE  0EF0               	movlw	240
  2573  0011B0                     u1097:
  2574  0011B0  D000               	nop2	
  2575  0011B2  2EE8               	decfsz	wreg,f,c
  2576  0011B4  D7FD               	bra	u1097
  2577  0011B6                     
  2578                           ;../20221_sem11_ls51_servo.X/LCD.c: 130:  aux = PORTD;
  2579  0011B6  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2580  0011BA                     
  2581                           ;../20221_sem11_ls51_servo.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  2582  0011BA  948C               	bcf	140,2,c	;volatile
  2583  0011BC                     
  2584                           ;../20221_sem11_ls51_servo.X/LCD.c: 132:         _delay(1200);
  2585  0011BC  0EF0               	movlw	240
  2586  0011BE                     u1107:
  2587  0011BE  D000               	nop2	
  2588  0011C0  2EE8               	decfsz	wreg,f,c
  2589  0011C2  D7FD               	bra	u1107
  2590  0011C4                     
  2591                           ;../20221_sem11_ls51_servo.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  2592  0011C4  848C               	bsf	140,2,c	;volatile
  2593  0011C6                     
  2594                           ;../20221_sem11_ls51_servo.X/LCD.c: 135:         _delay(1200);
  2595  0011C6  0EF0               	movlw	240
  2596  0011C8                     u1117:
  2597  0011C8  D000               	nop2	
  2598  0011CA  2EE8               	decfsz	wreg,f,c
  2599  0011CC  D7FD               	bra	u1117
  2600  0011CE                     
  2601                           ;../20221_sem11_ls51_servo.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  2602  0011CE  948C               	bcf	140,2,c	;volatile
  2603  0011D0                     l852:
  2604                           
  2605                           ;../20221_sem11_ls51_servo.X/LCD.c: 138:  aux = aux & 0x80;
  2606  0011D0  5001               	movf	LEER_LCD@aux^0,w,c
  2607  0011D2  0B80               	andlw	128
  2608  0011D4  6E01               	movwf	LEER_LCD@aux^0,c
  2609                           
  2610                           ;../20221_sem11_ls51_servo.X/LCD.c: 139:  while(aux == 0x80)
  2611  0011D6  EF01  F009         	goto	l866
  2612  0011DA                     l147:
  2613                           
  2614                           ;../20221_sem11_ls51_servo.X/LCD.c: 140:         {;../20221_sem11_ls51_servo.X/LCD.c: 14
      +                          1:             LATDbits.LATD2 = 1;
  2615  0011DA  848C               	bsf	140,2,c	;volatile
  2616  0011DC                     
  2617                           ;../20221_sem11_ls51_servo.X/LCD.c: 142:             _delay(1200);
  2618  0011DC  0EF0               	movlw	240
  2619  0011DE                     u1127:
  2620  0011DE  D000               	nop2	
  2621  0011E0  2EE8               	decfsz	wreg,f,c
  2622  0011E2  D7FD               	bra	u1127
  2623  0011E4                     
  2624                           ;../20221_sem11_ls51_servo.X/LCD.c: 143:             aux = PORTD;
  2625  0011E4  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2626  0011E8                     
  2627                           ;../20221_sem11_ls51_servo.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  2628  0011E8  948C               	bcf	140,2,c	;volatile
  2629                           
  2630                           ;../20221_sem11_ls51_servo.X/LCD.c: 145:             _delay(1200);
  2631  0011EA  0EF0               	movlw	240
  2632  0011EC                     u1137:
  2633  0011EC  D000               	nop2	
  2634  0011EE  2EE8               	decfsz	wreg,f,c
  2635  0011F0  D7FD               	bra	u1137
  2636  0011F2                     
  2637                           ;../20221_sem11_ls51_servo.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  2638  0011F2  848C               	bsf	140,2,c	;volatile
  2639                           
  2640                           ;../20221_sem11_ls51_servo.X/LCD.c: 147:             _delay(1200);
  2641  0011F4  0EF0               	movlw	240
  2642  0011F6                     u1147:
  2643  0011F6  D000               	nop2	
  2644  0011F8  2EE8               	decfsz	wreg,f,c
  2645  0011FA  D7FD               	bra	u1147
  2646  0011FC                     
  2647                           ;../20221_sem11_ls51_servo.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  2648  0011FC  948C               	bcf	140,2,c	;volatile
  2649  0011FE  EFE8  F008         	goto	l852
  2650  001202                     l866:
  2651                           
  2652                           ;../20221_sem11_ls51_servo.X/LCD.c: 139:  while(aux == 0x80)
  2653  001202  0E80               	movlw	128
  2654  001204  1801               	xorwf	LEER_LCD@aux^0,w,c
  2655  001206  B4D8               	btfsc	status,2,c
  2656  001208  EF08  F009         	goto	u11
  2657  00120C  EF0A  F009         	goto	u10
  2658  001210                     u11:
  2659  001210  EFED  F008         	goto	l147
  2660  001214                     u10:
  2661  001214  0012               	return		;funcret
  2662  001216                     __end_of_LEER_LCD:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _ENVIA_NIBBLE *****************
  2666 ;; Defined at:
  2667 ;;		line 93 in file "../20221_sem11_ls51_servo.X/LCD.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  dato            1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  dato            1    0[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2681 ;;      Params:         0       0       0       0       0       0       0       0       0
  2682 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2684 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_ENVIA_CHAR
  2691 ;;		_LCD_CONFIG
  2692 ;;		_ENVIA_LCD_CMD
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text19
  2697  001412                     __ptext19:
  2698                           	callstack 0
  2699  001412                     _ENVIA_NIBBLE:
  2700                           	callstack 28
  2701                           
  2702                           ;incstack = 0
  2703                           ;ENVIA_NIBBLE@dato stored from wreg
  2704  001412  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2705  001414                     
  2706                           ;../20221_sem11_ls51_servo.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20221_s
      +                          em11_ls51_servo.X/LCD.c: 94: {;../20221_sem11_ls51_servo.X/LCD.c: 95:  LATD &= 0x0F;
  2707  001414  0E0F               	movlw	15
  2708  001416  168C               	andwf	140,f,c	;volatile
  2709                           
  2710                           ;../20221_sem11_ls51_servo.X/LCD.c: 96:  dato &= 0xF0;
  2711  001418  0EF0               	movlw	240
  2712  00141A  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2713                           
  2714                           ;../20221_sem11_ls51_servo.X/LCD.c: 97:  LATD|= dato;
  2715  00141C  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2716  00141E  128C               	iorwf	140,f,c	;volatile
  2717  001420                     
  2718                           ;../20221_sem11_ls51_servo.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  2719  001420  848C               	bsf	140,2,c	;volatile
  2720  001422                     
  2721                           ;../20221_sem11_ls51_servo.X/LCD.c: 100:         _delay(1200);
  2722  001422  0EF0               	movlw	240
  2723  001424                     u1157:
  2724  001424  D000               	nop2	
  2725  001426  2EE8               	decfsz	wreg,f,c
  2726  001428  D7FD               	bra	u1157
  2727  00142A                     
  2728                           ;../20221_sem11_ls51_servo.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  2729  00142A  948C               	bcf	140,2,c	;volatile
  2730  00142C  0012               	return		;funcret
  2731  00142E                     __end_of_ENVIA_NIBBLE:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _CCP1_config *****************
  2735 ;; Defined at:
  2736 ;;		line 15 in file "maincode1.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2753 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text20
  2764  001448                     __ptext20:
  2765                           	callstack 0
  2766  001448                     _CCP1_config:
  2767                           	callstack 30
  2768  001448                     
  2769                           ;maincode1.c: 16:     PR2 = 155;
  2770  001448  0E9B               	movlw	155
  2771  00144A  6ECB               	movwf	203,c	;volatile
  2772                           
  2773                           ;maincode1.c: 17:     CCPR1L = 78;
  2774  00144C  0E4E               	movlw	78
  2775  00144E  6EBE               	movwf	190,c	;volatile
  2776  001450                     
  2777                           ;maincode1.c: 18:     TRISCbits.RC2 = 0;
  2778  001450  9494               	bcf	148,2,c	;volatile
  2779                           
  2780                           ;maincode1.c: 19:     T2CON = 0x07;
  2781  001452  0E07               	movlw	7
  2782  001454  6ECA               	movwf	202,c	;volatile
  2783                           
  2784                           ;maincode1.c: 20:     CCP1CON = 0x0C;
  2785  001456  0E0C               	movlw	12
  2786  001458  6EBD               	movwf	189,c	;volatile
  2787  00145A  0012               	return		;funcret
  2788  00145C                     __end_of_CCP1_config:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _ADC_config *****************
  2792 ;; Defined at:
  2793 ;;		line 23 in file "maincode1.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text21
  2821  00145C                     __ptext21:
  2822                           	callstack 0
  2823  00145C                     _ADC_config:
  2824                           	callstack 30
  2825  00145C                     
  2826                           ;maincode1.c: 24:     ADCON2 = 0x24;
  2827  00145C  0E24               	movlw	36
  2828  00145E  6EC0               	movwf	192,c	;volatile
  2829                           
  2830                           ;maincode1.c: 25:     ADCON1 = 0x0D;
  2831  001460  0E0D               	movlw	13
  2832  001462  6EC1               	movwf	193,c	;volatile
  2833                           
  2834                           ;maincode1.c: 26:     ADCON0 = 0x05;
  2835  001464  0E05               	movlw	5
  2836  001466  6EC2               	movwf	194,c	;volatile
  2837  001468  0012               	return		;funcret
  2838  00146A                     __end_of_ADC_config:
  2839                           	callstack 0
  2840                           
  2841                           	psect	rparam
  2842  0000                     
  2843                           	psect	idloc
  2844                           
  2845                           ;Config register IDLOC0 @ 0x200000
  2846                           ;	unspecified, using default values
  2847  200000                     	org	2097152
  2848  200000  FF                 	db	255
  2849                           
  2850                           ;Config register IDLOC1 @ 0x200001
  2851                           ;	unspecified, using default values
  2852  200001                     	org	2097153
  2853  200001  FF                 	db	255
  2854                           
  2855                           ;Config register IDLOC2 @ 0x200002
  2856                           ;	unspecified, using default values
  2857  200002                     	org	2097154
  2858  200002  FF                 	db	255
  2859                           
  2860                           ;Config register IDLOC3 @ 0x200003
  2861                           ;	unspecified, using default values
  2862  200003                     	org	2097155
  2863  200003  FF                 	db	255
  2864                           
  2865                           ;Config register IDLOC4 @ 0x200004
  2866                           ;	unspecified, using default values
  2867  200004                     	org	2097156
  2868  200004  FF                 	db	255
  2869                           
  2870                           ;Config register IDLOC5 @ 0x200005
  2871                           ;	unspecified, using default values
  2872  200005                     	org	2097157
  2873  200005  FF                 	db	255
  2874                           
  2875                           ;Config register IDLOC6 @ 0x200006
  2876                           ;	unspecified, using default values
  2877  200006                     	org	2097158
  2878  200006  FF                 	db	255
  2879                           
  2880                           ;Config register IDLOC7 @ 0x200007
  2881                           ;	unspecified, using default values
  2882  200007                     	org	2097159
  2883  200007  FF                 	db	255
  2884                           
  2885                           	psect	config
  2886                           
  2887                           ;Config register CONFIG1L @ 0x300000
  2888                           ;	PLL Prescaler Selection bits
  2889                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2890                           ;	System Clock Postscaler Selection bits
  2891                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2892                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2893                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2894  300000                     	org	3145728
  2895  300000  00                 	db	0
  2896                           
  2897                           ;Config register CONFIG1H @ 0x300001
  2898                           ;	Oscillator Selection bits
  2899                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2900                           ;	Fail-Safe Clock Monitor Enable bit
  2901                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2902                           ;	Internal/External Oscillator Switchover bit
  2903                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2904  300001                     	org	3145729
  2905  300001  02                 	db	2
  2906                           
  2907                           ;Config register CONFIG2L @ 0x300002
  2908                           ;	Power-up Timer Enable bit
  2909                           ;	PWRT = ON, PWRT enabled
  2910                           ;	Brown-out Reset Enable bits
  2911                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2912                           ;	Brown-out Reset Voltage bits
  2913                           ;	BORV = 3, Minimum setting 2.05V
  2914                           ;	USB Voltage Regulator Enable bit
  2915                           ;	VREGEN = OFF, USB voltage regulator disabled
  2916  300002                     	org	3145730
  2917  300002  18                 	db	24
  2918                           
  2919                           ;Config register CONFIG2H @ 0x300003
  2920                           ;	Watchdog Timer Enable bit
  2921                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2922                           ;	Watchdog Timer Postscale Select bits
  2923                           ;	WDTPS = 32768, 1:32768
  2924  300003                     	org	3145731
  2925  300003  1E                 	db	30
  2926                           
  2927                           ; Padding undefined space
  2928  300004                     	org	3145732
  2929  300004  FF                 	db	255
  2930                           
  2931                           ;Config register CONFIG3H @ 0x300005
  2932                           ;	CCP2 MUX bit
  2933                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2934                           ;	PORTB A/D Enable bit
  2935                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2936                           ;	Low-Power Timer 1 Oscillator Enable bit
  2937                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2938                           ;	MCLR Pin Enable bit
  2939                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2940  300005                     	org	3145733
  2941  300005  81                 	db	129
  2942                           
  2943                           ;Config register CONFIG4L @ 0x300006
  2944                           ;	Stack Full/Underflow Reset Enable bit
  2945                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2946                           ;	Single-Supply ICSP Enable bit
  2947                           ;	LVP = OFF, Single-Supply ICSP disabled
  2948                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2949                           ;	ICPRT = OFF, ICPORT disabled
  2950                           ;	Extended Instruction Set Enable bit
  2951                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2952                           ;	Background Debugger Enable bit
  2953                           ;	DEBUG = 0x1, unprogrammed default
  2954  300006                     	org	3145734
  2955  300006  81                 	db	129
  2956                           
  2957                           ; Padding undefined space
  2958  300007                     	org	3145735
  2959  300007  FF                 	db	255
  2960                           
  2961                           ;Config register CONFIG5L @ 0x300008
  2962                           ;	Code Protection bit
  2963                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2964                           ;	Code Protection bit
  2965                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2966                           ;	Code Protection bit
  2967                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2968                           ;	Code Protection bit
  2969                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2970  300008                     	org	3145736
  2971  300008  0F                 	db	15
  2972                           
  2973                           ;Config register CONFIG5H @ 0x300009
  2974                           ;	Boot Block Code Protection bit
  2975                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2976                           ;	Data EEPROM Code Protection bit
  2977                           ;	CPD = OFF, Data EEPROM is not code-protected
  2978  300009                     	org	3145737
  2979  300009  C0                 	db	192
  2980                           
  2981                           ;Config register CONFIG6L @ 0x30000A
  2982                           ;	Write Protection bit
  2983                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2984                           ;	Write Protection bit
  2985                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2986                           ;	Write Protection bit
  2987                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2988                           ;	Write Protection bit
  2989                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2990  30000A                     	org	3145738
  2991  30000A  0F                 	db	15
  2992                           
  2993                           ;Config register CONFIG6H @ 0x30000B
  2994                           ;	Configuration Register Write Protection bit
  2995                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2996                           ;	Boot Block Write Protection bit
  2997                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2998                           ;	Data EEPROM Write Protection bit
  2999                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3000  30000B                     	org	3145739
  3001  30000B  E0                 	db	224
  3002                           
  3003                           ;Config register CONFIG7L @ 0x30000C
  3004                           ;	Table Read Protection bit
  3005                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3006                           ;	Table Read Protection bit
  3007                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3008                           ;	Table Read Protection bit
  3009                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3010                           ;	Table Read Protection bit
  3011                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3012  30000C                     	org	3145740
  3013  30000C  0F                 	db	15
  3014                           
  3015                           ;Config register CONFIG7H @ 0x30000D
  3016                           ;	Boot Block Table Read Protection bit
  3017                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3018  30000D                     	org	3145741
  3019  30000D  40                 	db	64
  3020                           tosu	equ	0xFFF
  3021                           tosh	equ	0xFFE
  3022                           tosl	equ	0xFFD
  3023                           stkptr	equ	0xFFC
  3024                           pclatu	equ	0xFFB
  3025                           pclath	equ	0xFFA
  3026                           pcl	equ	0xFF9
  3027                           tblptru	equ	0xFF8
  3028                           tblptrh	equ	0xFF7
  3029                           tblptrl	equ	0xFF6
  3030                           tablat	equ	0xFF5
  3031                           prodh	equ	0xFF4
  3032                           prodl	equ	0xFF3
  3033                           indf0	equ	0xFEF
  3034                           postinc0	equ	0xFEE
  3035                           postdec0	equ	0xFED
  3036                           preinc0	equ	0xFEC
  3037                           plusw0	equ	0xFEB
  3038                           fsr0h	equ	0xFEA
  3039                           fsr0l	equ	0xFE9
  3040                           wreg	equ	0xFE8
  3041                           indf1	equ	0xFE7
  3042                           postinc1	equ	0xFE6
  3043                           postdec1	equ	0xFE5
  3044                           preinc1	equ	0xFE4
  3045                           plusw1	equ	0xFE3
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           bsr	equ	0xFE0
  3049                           indf2	equ	0xFDF
  3050                           postinc2	equ	0xFDE
  3051                           postdec2	equ	0xFDD
  3052                           preinc2	equ	0xFDC
  3053                           plusw2	equ	0xFDB
  3054                           fsr2h	equ	0xFDA
  3055                           fsr2l	equ	0xFD9
  3056                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6048
                         _ADC_config
                        _CCP1_config
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                        _TMR0_config
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1625
                                             12 COMRAM     2     0      2
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1896
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _CCP1_config
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _TMR0_config
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _configuro
   _convierte
     ___fltol (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      33       1       53.7%
BITBIGSFRh          34      0       0      20        0.0%
BITBIGSFRllh        27      0       0      24        0.0%
BITBIGSFRlllll      23      0       0      27        0.0%
BITBIGSFRllllh       8      0       0      26        0.0%
BITBIGSFRlllh        7      0       0      25        0.0%
BITBIGSFRlhhh        5      0       0      21        0.0%
BITBIGSFRlhhl        1      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      28        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 31 12:29:38 2022

                     l51 147A                       l60 147C                       l54 145A  
                     l63 1410                       l72 0E2A                       l57 1468  
                     l66 112E                       l75 0F34                       u10 1214  
                     u11 1210                       u20 13CC                       u21 13C8  
                     u30 13E2                       u31 13DE            ENVIA_CHAR@aux 0003  
                    l104 1350                      l122 13E8                      l131 13B8  
                    l140 142C                      l117 1470                      l134 1478  
                    l143 1384                      l128 1316                      l137 12D8  
                    l147 11DA                      l149 1214                      l454 1080  
                    l812 0C9A                      l900 127E                      l830 11A4  
                    l910 12B4                      l902 1284                      l815 0DF6  
                    l655 11A2                      l840 11B6                      l832 11A8  
                    l648 119A                      l920 12D2                      l912 12BA  
                    l904 1292                      l665 1278                      l850 11CE  
                    l842 11BA                      l834 11AA                      l826 0D8E  
                    l658 1270                      l922 1472                      l930 13D2  
                    l914 12C0                      l906 12A6                      l771 08DE  
                    l819 0D32                      l860 11F2                      l852 11D0  
                    l844 11BC                      l836 11AC                      l940 1392  
                    l780 0B4C                      l924 146A                      l932 13E2  
                    l916 12C6                      l908 12AE                      l781 0B3A  
                    l870 1420                      l862 11FC                      l854 11DC  
                    l846 11C4                      l838 11AE                      l950 13A6  
                    l942 139A                      l934 1388                      l926 13BC  
                    l918 12CC                      l775 0C42                      l872 1422  
                    l856 11E4                      l848 11C6                      l952 13AC  
                    l944 139C                      l936 138A                      l880 135A  
                    l928 13CC                      l874 142A                      l858 11E8  
                    l866 1202                      l954 13B2                      l946 139E  
                    l938 138E                      l890 136C                      l882 135E  
                    l778 0AD4                      l868 1414                      l948 13A0  
                    l892 1372                      l884 1366                      l876 1354  
                    l788 0C04                      l894 1378                      l886 1368  
                    l878 1356                      l896 137E                      l888 136A  
                    l994 1448                      l898 127A                      l996 1450  
                    l998 145C                      _PR2 000FCB                      u600 1246  
                    u601 1242                      u610 125C                      u611 1258  
                    u620 132A                      u700 08B8                      u621 1326  
                    u701 08B4                      u630 1348                      u710 08EE  
                    u631 1344                      u711 08EA                      u640 1316  
                    u800 0B76                      u720 08FE                      u560 114A  
                    u641 1312                      u801 0B72                      u721 08FA  
                    u561 1146                      u810 0BBE                      u730 0A78  
                    u650 0834                      u570 1168                      u811 0BBA  
                    u651 0830                      u571 1164                      u820 0BEC  
                    u740 0AD2                      u660 0846                      u900 1060  
                    u580 1184                      u821 0BE8                      u741 0ACE  
                    u661 0842                      u901 105C                      u581 1180  
                    u830 0C26                      u750 0AF2                      u670 0856  
                    u910 0C56                      u590 1228                      u831 0C22  
                    u751 0AEE                      u735 0A6E                      u671 0852  
                    u911 0C52                      u591 1224                      u760 0B04  
                    u680 0896                      u840 0F92                      u920 0C64  
                    u761 0B00                      u681 0892                      u841 0F8E  
                    u921 0C60                      u770 0B32                      u690 08A8  
                    u850 0FC6                      u930 0CC0                      u771 0B2E  
                    u691 08A4                      u931 0CBC                      u780 0B48  
                    u860 0FF4                      u940 0D16                      u781 0B44  
                    u861 0FF0                      u941 0D12                      u790 0B5C  
                    u870 1008                      u950 0D60                      u791 0B58  
                    u871 1004                      u855 0FBC                      u951 0D5C  
                    u880 1030                      u960 0D7E                      u881 102C  
                    u961 0D7A                      u890 1050                      u970 0D8E  
                    u891 104C                      u971 0D8A                      u980 0D9C  
                    u981 0D98                      u990 0DD6                      u991 0DD2  
            LEER_LCD@aux 0001                      wreg 000FE8             ?_CURSOR_HOME 0001  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022           ??_ENVIA_NIBBLE 0001  
           ___fltol@exp1 000A           ENVIA_CHAR@dato 0002                     l1000 13EA  
                   l1010 140A                     l1002 13EE                     l1004 13F2  
                   l1006 1402                     l1008 1406                     l1400 0888  
                   l1410 08C8                     l1402 0896                     l1330 1152  
                   l1500 0C26                     l1420 0912                     l1412 08CE  
                   l1404 0898                     l1340 118C                     l1332 115A  
                   l1324 1130                     l1502 0C28                     l1430 0962  
                   l1422 091E                     l1414 08EE                     l1406 08A8  
                   l1510 0F7C                     l1342 118E                     l1334 1168  
                   l1326 1138                     l1350 1230                     l1504 0C2E  
                   l1440 09A4                     l1432 096E                     l1424 0928  
                   l1416 08FE                     l1408 08B8                     l1520 0FD2  
                   l1512 0F92                     l1344 1194                     l1336 116E  
                   l1328 114A                     l1360 126A                     l1352 1238  
                   l1600 0DF8                     l1370 1348                     l1506 0C32  
                   l1450 0A06                     l1442 09B0                     l1434 097A  
                   l1426 093E                     l1522 0FE2                     l1338 1184  
                   l1354 1246                     l1346 1216                     l1362 1082  
                   l1610 0E16                     l1602 0DFC                     l1372 12DA  
                   l1364 131A                     l1460 0A9C                     l1452 0A12  
                   l1444 09C0                     l1436 0988                     l1428 094A  
                   l1380 081A                     l1532 100C                     l1524 0FE6  
                   l1516 0FA6                     l1356 125C                     l1348 1228  
                   l1620 0F02                     l1612 0E26                     l1604 0E00  
                   l1374 12E6                     l1366 132A                     l1470 0AF2  
                   l1462 0ABA                     l1454 0A2E                     l1446 09DA  
                   l1438 0994                     l1390 0856                     l1382 0826  
                   l1550 1070                     l1542 1034                     l1534 1016  
                   l1526 0FF4                     l1518 0FD0                     l1358 1264  
                   l1630 0F30                     l1622 0F12                     l1614 0E38  
                   l1606 0E08                     l1376 1302                     l1368 1336  
                   l1480 0B5C                     l1472 0AF6                     l1464 0AC4  
                   l1456 0A58                     l1448 09EA                     l1392 0866  
                   l1384 0834                     l1544 1040                     l1536 1020  
                   l1560 0CAA                     l1640 0F6C                     l1632 0F42  
                   l1624 0F1A                     l1616 0E7C                     l1608 0E0C  
                   l1378 1304                     l1490 0BBE                     l1482 0B68  
                   l1474 0B04                     l1466 0AD2                     l1458 0A8E  
                   l1394 086C                     l1386 0836                     l1546 1050  
                   l1570 0CE8                     l1562 0CC0                     l1554 0C46  
                   l1634 0F4C                     l1626 0F22                     l1618 0E94  
                   l1492 0BD2                     l1484 0B76                     l1476 0B32  
                   l1468 0AE4                     l1396 087C                     l1388 0846  
                   l1548 1060                     l1580 0D70                     l1572 0D1A  
                   l1556 0C56                     l1636 0F5C                     l1628 0F2A  
                   l1494 0BEC                     l1486 0BA0                     l1398 0882  
                   l1590 0DC6                     l1582 0D7E                     l1574 0D1C  
                   l1566 0CD4                     l1558 0C64                     l1638 0F64  
                   l1496 0C08                     l1488 0BA4                     l1592 0DD6  
                   l1584 0D9C                     l1576 0D28                     l1568 0CDC  
                   l1498 0C18                     l1594 0DE4                     l1586 0D9E  
                   l1578 0D64                     l1596 0DE6                     l1588 0DA2  
                   STR_1 0801                     STR_2 0815                     STR_3 080F  
                   u1000 0DE4                     u1001 0DE0                     u1010 0E38  
                   u1011 0E34                     u1020 0F42                     u1021 0F3E  
                   u1107 11BE                     u1117 11C8                     u1037 13F8  
                   u1127 11DE                     u1047 128A                     u1137 11EC  
                   u1057 1298                     u1147 11F6                     u1067 12A8  
                   u1157 1424                     u1077 1360                     u1087 1394  
                   _LATD 000F8C                     u1097 11B0                     _main 0DF8  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0002  
       __end_of_LEER_LCD 1216            ___fltol@sign1 0009                    ?_main 0001  
        __end_of___flmul 0C44          __end_of___fltol 1082                    _T2CON 000FCA  
        __end_of___lwdiv 11A4          __end_of___lwmod 127A                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    _x_var 0028  
                  tablat 000FF5                    status 000FD8           ??_CURSOR_ONOFF 0004  
        __initialization 142E             __end_of_main 0F7C          _ESCRIBE_MENSAJE 12DA  
                 ??_main 0028            __activetblptr 000001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _CCPR1L 000FBE         __end_of___xxtofl 0DF8             ??_ADC_config 0001  
       __end_of_lcd_init 1412                   _decena 002E     __end_of_ENVIA_NIBBLE 142E  
              ??___flmul 0017                ??___fltol 0005                ??___lwdiv 000A  
              ??___lwmod 0005                   _millar 0032                   clear_0 1434  
           ?_TMR0_config 0001                   isa$std 000001                   _unidad 002C  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8             ??_BORRAR_LCD 0004       __end_of_ADC_config 146A  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
              ?_LEER_LCD 0001               __accesstop 0060  __end_of__initialization 143A  
           ??_LCD_CONFIG 0004            ___rparam_used 000001             ??_ENVIA_CHAR 0002  
             ___fltol@f1 0001  __end_of_ESCRIBE_MENSAJE 1318           __pcstackCOMRAM 0001  
     __end_of_BORRAR_LCD 147A         ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 13EA  
     __end_of_LCD_CONFIG 12DA       __end_of_ENVIA_CHAR 13BA               ??_LEER_LCD 0001  
       ENVIA_NIBBLE@dato 0001                  _CCP1CON 000FBD                ?___xxtofl 0001  
          ??_CCP1_config 0001             ??_POS_CURSOR 0005                ?_lcd_init 0001  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0004  
      __end_of_configuro 147C                  ___flmul 081A                  ___fltol 0F7C  
                ___lwdiv 1130                  ___lwmod 1216             __psmallconst 0800  
  __end_of_ENVIA_LCD_CMD 1386        __end_of_convierte 1130                  __pcinit 142E  
     __end_of_POS_CURSOR 1352                  __ramtop 0800                  _centena 0030  
                __ptext0 0DF8                  __ptext1 13EA                  __ptext2 127A  
                __ptext3 13BA                  __ptext4 146A                  __ptext5 1472  
                __ptext6 1082                  __ptext7 1216                  __ptext8 1130  
                __ptext9 147A               ??___xxtofl 0005               ??_lcd_init 0005  
           _ENVIA_NIBBLE 1412     end_of_initialization 143A      __end_of_CCP1_config 145C  
                postinc0 000FEE            ___xxtofl@sign 0009                _TRISCbits 000F94  
            ___flmul@grs 001C             _CURSOR_ONOFF 13BA       CURSOR_ONOFF@estado 0004  
          ??_CURSOR_HOME 0004      start_initialization 142E              _CCP1_config 1448  
      ENVIA_LCD_CMD@dato 0002                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 0028      __end_of_CURSOR_HOME 1472         ___lwdiv@dividend 0006  
               ?___flmul 000F                 ?___fltol 0001                 ?___lwdiv 0006  
               ?___lwmod 0001                _configuro 147A              __smallconst 0800  
              _convierte 1082          convierte@numero 000D         ___lwdiv@quotient 000A  
               _LEER_LCD 11A4                 _LATDbits 000F8C            ??_TMR0_config 0001  
       ESCRIBE_MENSAJE@i 0009           POS_CURSOR@fila 0005               ?_configuro 0001  
             _ADCON0bits 000FC2               ?_convierte 000D              _CURSOR_HOME 146A  
               __Hrparam 0000               _ADC_config 145C                 __Lrparam 0000  
           __Lsmallconst 0800                 ___xxtofl 0C44      __end_of_TMR0_config 147E  
        ___lwdiv@divisor 0008             ?_CCP1_config 0001          ___lwdiv@counter 000C  
               __ptext10 0C44                 __ptext11 0F7C                 __ptext20 1448  
               __ptext12 081A                 __ptext21 145C                 __ptext13 147C  
               __ptext14 1318                 __ptext15 1352                 __ptext16 12DA  
               __ptext17 1386                 __ptext18 11A4                 __ptext19 1412  
             _BORRAR_LCD 1472                 _lcd_init 13EA               _LCD_CONFIG 127A  
             _ENVIA_CHAR 1386                 isa$xinst 000000            _ENVIA_LCD_CMD 1352  
            ??_configuro 0001              ??_convierte 000F        ??_ESCRIBE_MENSAJE 0007  
  ESCRIBE_MENSAJE@cadena 0004         ___lwmod@dividend 0001              ?_ADC_config 0001  
         ?_ENVIA_LCD_CMD 0001              _TMR0_config 147C          ___lwmod@divisor 0003  
        ___lwmod@counter 0005              ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001  
             _POS_CURSOR 1318              ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006  
            ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0004  
