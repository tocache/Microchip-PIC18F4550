

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 12:25:34 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007F29                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _holaupc
    59  007F29  76                 	db	118
    60  007F2A  3F                 	db	63
    61  007F2B  38                 	db	56
    62  007F2C  77                 	db	119
    63  007F2D  00                 	db	0
    64  007F2E  3E                 	db	62
    65  007F2F  73                 	db	115
    66  007F30  39                 	db	57
    67  007F31  00                 	db	0
    68  0000                     _PORTCbits	set	3970
    69  0000                     _TRISD	set	3989
    70  0000                     _LATD	set	3980
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  007F32                     __pcinit:
    76                           	callstack 0
    77  007F32                     start_initialization:
    78                           	callstack 0
    79  007F32                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Initialize objects allocated to COMRAM (9 bytes)
    83                           ; load TBLPTR registers with __pidataCOMRAM
    84  007F32  0E29               	movlw	low __pidataCOMRAM
    85  007F34  6EF6               	movwf	tblptrl,c
    86  007F36  0E7F               	movlw	high __pidataCOMRAM
    87  007F38  6EF7               	movwf	tblptrh,c
    88  007F3A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    89  007F3C  6EF8               	movwf	tblptru,c
    90  007F3E  EE00  F001         	lfsr	0,__pdataCOMRAM
    91  007F42  EE10 F009          	lfsr	1,9
    92  007F46                     copy_data0:
    93  007F46  0009               	tblrd		*+
    94  007F48  CFF5 FFEE          	movff	tablat,postinc0
    95  007F4C  50E5               	movf	postdec1,w,c
    96  007F4E  50E1               	movf	fsr1l,w,c
    97  007F50  E1FA               	bnz	copy_data0
    98                           
    99                           ; Clear objects allocated to COMRAM (1 bytes)
   100  007F52  6A10               	clrf	__pbssCOMRAM& (0+255),c
   101  007F54                     end_of_initialization:
   102                           	callstack 0
   103  007F54                     __end_of__initialization:
   104                           	callstack 0
   105  007F54  0100               	movlb	0
   106  007F56  EFC5  F03F         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  000010                     __pbssCOMRAM:
   110                           	callstack 0
   111  000010                     _cuenta:
   112                           	callstack 0
   113  000010                     	ds	1
   114                           
   115                           	psect	dataCOMRAM
   116  000001                     __pdataCOMRAM:
   117                           	callstack 0
   118  000001                     _holaupc:
   119                           	callstack 0
   120  000001                     	ds	9
   121                           
   122                           	psect	cstackCOMRAM
   123  00000A                     __pcstackCOMRAM:
   124                           	callstack 0
   125  00000A                     ??_invertida:
   126  00000A                     
   127                           ; 1 bytes @ 0x0
   128  00000A                     	ds	2
   129  00000C                     invertida@salida:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x2
   133  00000C                     	ds	1
   134  00000D                     invertida@dato:
   135                           	callstack 0
   136                           
   137                           ; 1 bytes @ 0x3
   138  00000D                     	ds	1
   139  00000E                     ??_main:
   140                           
   141                           ; 1 bytes @ 0x4
   142  00000E                     	ds	2
   143                           
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 21 in file "maincode.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   163 ;;      Params:         0       0       0       0       0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0
   165 ;;      Temps:          2       0       0       0       0       0       0       0       0
   166 ;;      Totals:         2       0       0       0       0       0       0       0       0
   167 ;;Total ram usage:        2 bytes
   168 ;; Hardware stack levels required when called: 1
   169 ;; This function calls:
   170 ;;		_configuro
   171 ;;		_invertida
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178  007F8A                     __ptext0:
   179                           	callstack 0
   180  007F8A                     _main:
   181                           	callstack 30
   182  007F8A                     
   183                           ;maincode.c: 22:     configuro();
   184  007F8A  EC91  F03F         	call	_configuro	;wreg free
   185  007F8E                     l718:
   186                           
   187                           ;maincode.c: 24:         if (PORTCbits.RC0 ==1){
   188  007F8E  A082               	btfss	130,0,c	;volatile
   189  007F90  EFCC  F03F         	goto	u11
   190  007F94  EFCE  F03F         	goto	u10
   191  007F98                     u11:
   192  007F98  EFDA  F03F         	goto	l722
   193  007F9C                     u10:
   194  007F9C                     
   195                           ;maincode.c: 25:             LATD = invertida(holaupc[cuenta]);
   196  007F9C  0E01               	movlw	low _holaupc
   197  007F9E  2410               	addwf	_cuenta^0,w,c
   198  007FA0  6ED9               	movwf	fsr2l,c
   199  007FA2  6ADA               	clrf	fsr2h,c
   200  007FA4  0E00               	movlw	high _holaupc
   201  007FA6  22DA               	addwfc	fsr2h,f,c
   202  007FA8  50DF               	movf	indf2,w,c
   203  007FAA  ECAD  F03F         	call	_invertida
   204  007FAE  6E8C               	movwf	140,c	;volatile
   205                           
   206                           ;maincode.c: 26:         }
   207  007FB0  EFE2  F03F         	goto	l724
   208  007FB4                     l722:
   209                           
   210                           ;maincode.c: 28:             LATD = holaupc[cuenta];
   211  007FB4  0E01               	movlw	low _holaupc
   212  007FB6  2410               	addwf	_cuenta^0,w,c
   213  007FB8  6ED9               	movwf	fsr2l,c
   214  007FBA  6ADA               	clrf	fsr2h,c
   215  007FBC  0E00               	movlw	high _holaupc
   216  007FBE  22DA               	addwfc	fsr2h,f,c
   217  007FC0  50DF               	movf	indf2,w,c
   218  007FC2  6E8C               	movwf	140,c	;volatile
   219  007FC4                     l724:
   220                           
   221                           ;maincode.c: 30:         _delay((unsigned long)((300)*(48000000UL/4000.0)));
   222  007FC4  0E13               	movlw	19
   223  007FC6  6E0F               	movwf	(??_main+1)^0,c
   224  007FC8  0E44               	movlw	68
   225  007FCA  6E0E               	movwf	??_main^0,c
   226  007FCC  0E44               	movlw	68
   227  007FCE                     u37:
   228  007FCE  2EE8               	decfsz	wreg,f,c
   229  007FD0  D7FE               	bra	u37
   230  007FD2  2E0E               	decfsz	??_main^0,f,c
   231  007FD4  D7FC               	bra	u37
   232  007FD6  2E0F               	decfsz	(??_main+1)^0,f,c
   233  007FD8  D7FA               	bra	u37
   234  007FDA  D000               	nop2	
   235  007FDC                     
   236                           ;maincode.c: 31:         if (cuenta == 8){
   237  007FDC  0E08               	movlw	8
   238  007FDE  1810               	xorwf	_cuenta^0,w,c
   239  007FE0  A4D8               	btfss	status,2,c
   240  007FE2  EFF5  F03F         	goto	u21
   241  007FE6  EFF7  F03F         	goto	u20
   242  007FEA                     u21:
   243  007FEA  EFFB  F03F         	goto	l730
   244  007FEE                     u20:
   245  007FEE                     
   246                           ;maincode.c: 32:             cuenta = 0;
   247  007FEE  0E00               	movlw	0
   248  007FF0  6E10               	movwf	_cuenta^0,c
   249                           
   250                           ;maincode.c: 33:         }
   251  007FF2  EFC7  F03F         	goto	l718
   252  007FF6                     l730:
   253                           
   254                           ;maincode.c: 35:             cuenta++;
   255  007FF6  2A10               	incf	_cuenta^0,f,c
   256  007FF8  EFC7  F03F         	goto	l718
   257  007FFC  EF00  F000         	goto	start
   258  008000                     __end_of_main:
   259                           	callstack 0
   260                           
   261 ;; *************** function _invertida *****************
   262 ;; Defined at:
   263 ;;		line 15 in file "maincode.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;  dato            1    wreg     unsigned char 
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  dato            1    3[COMRAM] unsigned char 
   268 ;;  salida          1    2[COMRAM] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      unsigned char 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   278 ;;      Params:         0       0       0       0       0       0       0       0       0
   279 ;;      Locals:         2       0       0       0       0       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0       0       0       0       0
   281 ;;      Totals:         4       0       0       0       0       0       0       0       0
   282 ;;Total ram usage:        4 bytes
   283 ;; Hardware stack levels used: 1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text1
   292  007F5A                     __ptext1:
   293                           	callstack 0
   294  007F5A                     _invertida:
   295                           	callstack 30
   296                           
   297                           ;incstack = 0
   298                           ;invertida@dato stored from wreg
   299  007F5A  6E0D               	movwf	invertida@dato^0,c
   300  007F5C                     
   301                           ;maincode.c: 17:     salida = ((dato << 3) & 0x38) + ((dato >> 3) & 0x07) + (dato & 0x40
      +                          );
   302  007F5C  C00D  F00A         	movff	invertida@dato,??_invertida
   303  007F60  0E40               	movlw	64
   304  007F62  160A               	andwf	??_invertida^0,f,c
   305  007F64  C00D  F00B         	movff	invertida@dato,??_invertida+1
   306  007F68  90D8               	bcf	status,0,c
   307  007F6A  320B               	rrcf	(??_invertida+1)^0,f,c
   308  007F6C  90D8               	bcf	status,0,c
   309  007F6E  320B               	rrcf	(??_invertida+1)^0,f,c
   310  007F70  90D8               	bcf	status,0,c
   311  007F72  320B               	rrcf	(??_invertida+1)^0,f,c
   312  007F74  0E07               	movlw	7
   313  007F76  160B               	andwf	(??_invertida+1)^0,f,c
   314  007F78  380D               	swapf	invertida@dato^0,w,c
   315  007F7A  42E8               	rrncf	wreg,f,c
   316  007F7C  0BF8               	andlw	248
   317  007F7E  0B38               	andlw	56
   318  007F80  240B               	addwf	(??_invertida+1)^0,w,c
   319  007F82  240A               	addwf	??_invertida^0,w,c
   320  007F84  6E0C               	movwf	invertida@salida^0,c
   321  007F86                     
   322                           ;maincode.c: 18:     return salida;
   323  007F86  500C               	movf	invertida@salida^0,w,c
   324  007F88  0012               	return		;funcret
   325  007F8A                     __end_of_invertida:
   326                           	callstack 0
   327                           
   328 ;; *************** function _configuro *****************
   329 ;; Defined at:
   330 ;;		line 11 in file "maincode.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   344 ;;      Params:         0       0       0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358  007F22                     __ptext2:
   359                           	callstack 0
   360  007F22                     _configuro:
   361                           	callstack 30
   362  007F22                     
   363                           ;maincode.c: 12:     TRISD = 0x80;
   364  007F22  0E80               	movlw	128
   365  007F24  6E95               	movwf	149,c	;volatile
   366  007F26  0012               	return		;funcret
   367  007F28                     __end_of_configuro:
   368                           	callstack 0
   369  0000                     
   370                           	psect	rparam
   371  0000                     
   372                           	psect	idloc
   373                           
   374                           ;Config register IDLOC0 @ 0x200000
   375                           ;	unspecified, using default values
   376  200000                     	org	2097152
   377  200000  FF                 	db	255
   378                           
   379                           ;Config register IDLOC1 @ 0x200001
   380                           ;	unspecified, using default values
   381  200001                     	org	2097153
   382  200001  FF                 	db	255
   383                           
   384                           ;Config register IDLOC2 @ 0x200002
   385                           ;	unspecified, using default values
   386  200002                     	org	2097154
   387  200002  FF                 	db	255
   388                           
   389                           ;Config register IDLOC3 @ 0x200003
   390                           ;	unspecified, using default values
   391  200003                     	org	2097155
   392  200003  FF                 	db	255
   393                           
   394                           ;Config register IDLOC4 @ 0x200004
   395                           ;	unspecified, using default values
   396  200004                     	org	2097156
   397  200004  FF                 	db	255
   398                           
   399                           ;Config register IDLOC5 @ 0x200005
   400                           ;	unspecified, using default values
   401  200005                     	org	2097157
   402  200005  FF                 	db	255
   403                           
   404                           ;Config register IDLOC6 @ 0x200006
   405                           ;	unspecified, using default values
   406  200006                     	org	2097158
   407  200006  FF                 	db	255
   408                           
   409                           ;Config register IDLOC7 @ 0x200007
   410                           ;	unspecified, using default values
   411  200007                     	org	2097159
   412  200007  FF                 	db	255
   413                           
   414                           	psect	config
   415                           
   416                           ;Config register CONFIG1L @ 0x300000
   417                           ;	PLL Prescaler Selection bits
   418                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   419                           ;	System Clock Postscaler Selection bits
   420                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   421                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   422                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   423  300000                     	org	3145728
   424  300000  00                 	db	0
   425                           
   426                           ;Config register CONFIG1H @ 0x300001
   427                           ;	Oscillator Selection bits
   428                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
   429                           ;	Fail-Safe Clock Monitor Enable bit
   430                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   431                           ;	Internal/External Oscillator Switchover bit
   432                           ;	IESO = OFF, Oscillator Switchover mode disabled
   433  300001                     	org	3145729
   434  300001  02                 	db	2
   435                           
   436                           ;Config register CONFIG2L @ 0x300002
   437                           ;	Power-up Timer Enable bit
   438                           ;	PWRT = ON, PWRT enabled
   439                           ;	Brown-out Reset Enable bits
   440                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   441                           ;	Brown-out Reset Voltage bits
   442                           ;	BORV = 3, Minimum setting 2.05V
   443                           ;	USB Voltage Regulator Enable bit
   444                           ;	VREGEN = OFF, USB voltage regulator disabled
   445  300002                     	org	3145730
   446  300002  18                 	db	24
   447                           
   448                           ;Config register CONFIG2H @ 0x300003
   449                           ;	Watchdog Timer Enable bit
   450                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   451                           ;	Watchdog Timer Postscale Select bits
   452                           ;	WDTPS = 32768, 1:32768
   453  300003                     	org	3145731
   454  300003  1E                 	db	30
   455                           
   456                           ; Padding undefined space
   457  300004                     	org	3145732
   458  300004  FF                 	db	255
   459                           
   460                           ;Config register CONFIG3H @ 0x300005
   461                           ;	CCP2 MUX bit
   462                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   463                           ;	PORTB A/D Enable bit
   464                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   465                           ;	Low-Power Timer 1 Oscillator Enable bit
   466                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   467                           ;	MCLR Pin Enable bit
   468                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   469  300005                     	org	3145733
   470  300005  81                 	db	129
   471                           
   472                           ;Config register CONFIG4L @ 0x300006
   473                           ;	Stack Full/Underflow Reset Enable bit
   474                           ;	STVREN = ON, Stack full/underflow will cause Reset
   475                           ;	Single-Supply ICSP Enable bit
   476                           ;	LVP = OFF, Single-Supply ICSP disabled
   477                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   478                           ;	ICPRT = OFF, ICPORT disabled
   479                           ;	Extended Instruction Set Enable bit
   480                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   481                           ;	Background Debugger Enable bit
   482                           ;	DEBUG = 0x1, unprogrammed default
   483  300006                     	org	3145734
   484  300006  81                 	db	129
   485                           
   486                           ; Padding undefined space
   487  300007                     	org	3145735
   488  300007  FF                 	db	255
   489                           
   490                           ;Config register CONFIG5L @ 0x300008
   491                           ;	Code Protection bit
   492                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   493                           ;	Code Protection bit
   494                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   495                           ;	Code Protection bit
   496                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   497                           ;	Code Protection bit
   498                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   499  300008                     	org	3145736
   500  300008  0F                 	db	15
   501                           
   502                           ;Config register CONFIG5H @ 0x300009
   503                           ;	Boot Block Code Protection bit
   504                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   505                           ;	Data EEPROM Code Protection bit
   506                           ;	CPD = OFF, Data EEPROM is not code-protected
   507  300009                     	org	3145737
   508  300009  C0                 	db	192
   509                           
   510                           ;Config register CONFIG6L @ 0x30000A
   511                           ;	Write Protection bit
   512                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   513                           ;	Write Protection bit
   514                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   515                           ;	Write Protection bit
   516                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   517                           ;	Write Protection bit
   518                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   519  30000A                     	org	3145738
   520  30000A  0F                 	db	15
   521                           
   522                           ;Config register CONFIG6H @ 0x30000B
   523                           ;	Configuration Register Write Protection bit
   524                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   525                           ;	Boot Block Write Protection bit
   526                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   527                           ;	Data EEPROM Write Protection bit
   528                           ;	WRTD = OFF, Data EEPROM is not write-protected
   529  30000B                     	org	3145739
   530  30000B  E0                 	db	224
   531                           
   532                           ;Config register CONFIG7L @ 0x30000C
   533                           ;	Table Read Protection bit
   534                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   535                           ;	Table Read Protection bit
   536                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   537                           ;	Table Read Protection bit
   538                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   539                           ;	Table Read Protection bit
   540                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   541  30000C                     	org	3145740
   542  30000C  0F                 	db	15
   543                           
   544                           ;Config register CONFIG7H @ 0x30000D
   545                           ;	Boot Block Table Read Protection bit
   546                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   547  30000D                     	org	3145741
   548  30000D  40                 	db	64
   549                           tosu	equ	0xFFF
   550                           tosh	equ	0xFFE
   551                           tosl	equ	0xFFD
   552                           stkptr	equ	0xFFC
   553                           pclatu	equ	0xFFB
   554                           pclath	equ	0xFFA
   555                           pcl	equ	0xFF9
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           prodh	equ	0xFF4
   561                           prodl	equ	0xFF3
   562                           indf0	equ	0xFEF
   563                           postinc0	equ	0xFEE
   564                           postdec0	equ	0xFED
   565                           preinc0	equ	0xFEC
   566                           plusw0	equ	0xFEB
   567                           fsr0h	equ	0xFEA
   568                           fsr0l	equ	0xFE9
   569                           wreg	equ	0xFE8
   570                           indf1	equ	0xFE7
   571                           postinc1	equ	0xFE6
   572                           postdec1	equ	0xFE5
   573                           preinc1	equ	0xFE4
   574                           plusw1	equ	0xFE3
   575                           fsr1h	equ	0xFE2
   576                           fsr1l	equ	0xFE1
   577                           bsr	equ	0xFE0
   578                           indf2	equ	0xFDF
   579                           postinc2	equ	0xFDE
   580                           postdec2	equ	0xFDD
   581                           preinc2	equ	0xFDC
   582                           plusw2	equ	0xFDB
   583                           fsr2h	equ	0xFDA
   584                           fsr2l	equ	0xFD9
   585                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_invertida

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              4 COMRAM     2     2      0
                          _configuro
                          _invertida
 ---------------------------------------------------------------------------------
 (1) _invertida                                            4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
   _invertida

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          6A      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      10       1       16.8%
BITBIGSFRll         22      0       0      23        0.0%
BITBIGSFRlhl         9      0       0      22        0.0%
BITBIGSFRlhh         8      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      24        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 12:25:34 2022

        invertida@salida 000C                       l15 7F26                       l18 7F88  
                     u10 7F9C                       u11 7F98                       u20 7FEE  
                     u21 7FEA                       u37 7FCE                      l710 7F5C  
                    l712 7F86                      l720 7F9C                      l706 7F22  
                    l730 7FF6                      l722 7FB4                      l708 7F5C  
                    l724 7FC4                      l716 7F8A                      l726 7FDC  
                    l718 7F8E                      l728 7FEE                      wreg 000FE8  
                   _LATD 000F8C                     _main 7F8A                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 000A                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 7F32  
           __end_of_main 8000                   ??_main 000E            __activetblptr 000000  
                 _cuenta 0010                   isa$std 000001             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060            invertida@dato 000D  __end_of__initialization 7F54  
          ___rparam_used 000001           __pcstackCOMRAM 000A                  __Hparam 0000  
                __Lparam 0000        __end_of_configuro 7F28                  __pcinit 7F32  
                __ramtop 0800                  __ptext0 7F8A                  __ptext1 7F5A  
                __ptext2 7F22                  _holaupc 0001        __end_of_invertida 7F8A  
   end_of_initialization 7F54                  postdec1 000FE5                  postinc0 000FEE  
              _PORTCbits 000F82            __pidataCOMRAM 7F29      start_initialization 7F32  
            __pbssCOMRAM 0010                _configuro 7F22                _invertida 7F5A  
             ?_configuro 000A                copy_data0 7F46               ?_invertida 000A  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
            ??_configuro 000A              ??_invertida 000A  
