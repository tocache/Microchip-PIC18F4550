

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 08:34:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007EF9                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _mensaje
    59  007EF9  3E                 	db	62
    60  007EFA  73                 	db	115
    61  007EFB  39                 	db	57
    62  0000                     _LATB	set	3978
    63  0000                     _LATDbits	set	3980
    64  0000                     _TRISB	set	3987
    65  0000                     _TRISDbits	set	3989
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  007F06                     __pcinit:
    71                           	callstack 0
    72  007F06                     start_initialization:
    73                           	callstack 0
    74  007F06                     __initialization:
    75                           	callstack 0
    76                           
    77                           ; Initialize objects allocated to COMRAM (3 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79  007F06  0EF9               	movlw	low __pidataCOMRAM
    80  007F08  6EF6               	movwf	tblptrl,c
    81  007F0A  0E7E               	movlw	high __pidataCOMRAM
    82  007F0C  6EF7               	movwf	tblptrh,c
    83  007F0E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84  007F10  6EF8               	movwf	tblptru,c
    85  007F12  0009               	tblrd		*+	;fetch initializer
    86  007F14  CFF5 F007          	movff	tablat,__pdataCOMRAM
    87  007F18  0009               	tblrd		*+	;fetch initializer
    88  007F1A  CFF5 F008          	movff	tablat,__pdataCOMRAM+1
    89  007F1E  0009               	tblrd		*+	;fetch initializer
    90  007F20  CFF5 F009          	movff	tablat,__pdataCOMRAM+2
    91                           
    92                           ; Clear objects allocated to COMRAM (1 bytes)
    93  007F24  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    94  007F26                     end_of_initialization:
    95                           	callstack 0
    96  007F26                     __end_of__initialization:
    97                           	callstack 0
    98  007F26  0100               	movlb	0
    99  007F28  EFAE  F03F         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	bssCOMRAM
   102  00000A                     __pbssCOMRAM:
   103                           	callstack 0
   104  00000A                     _cuenta:
   105                           	callstack 0
   106  00000A                     	ds	1
   107                           
   108                           	psect	dataCOMRAM
   109  000007                     __pdataCOMRAM:
   110                           	callstack 0
   111  000007                     _mensaje:
   112                           	callstack 0
   113  000007                     	ds	3
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	callstack 0
   118  000001                     ??_invertido:
   119  000001                     
   120                           ; 1 bytes @ 0x0
   121  000001                     	ds	2
   122  000003                     invertido@tempf:
   123                           	callstack 0
   124                           
   125                           ; 1 bytes @ 0x2
   126  000003                     	ds	1
   127  000004                     invertido@dato:
   128                           	callstack 0
   129                           
   130                           ; 1 bytes @ 0x3
   131  000004                     	ds	1
   132  000005                     ??_main:
   133                           
   134                           ; 1 bytes @ 0x4
   135  000005                     	ds	2
   136                           
   137 ;;
   138 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   139 ;;
   140 ;; *************** function _main *****************
   141 ;; Defined at:
   142 ;;		line 33 in file "maincode.c"
   143 ;; Parameters:    Size  Location     Type
   144 ;;		None
   145 ;; Auto vars:     Size  Location     Type
   146 ;;		None
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 0/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   156 ;;      Params:         0       0       0       0       0       0       0       0       0
   157 ;;      Locals:         0       0       0       0       0       0       0       0       0
   158 ;;      Temps:          2       0       0       0       0       0       0       0       0
   159 ;;      Totals:         2       0       0       0       0       0       0       0       0
   160 ;;Total ram usage:        2 bytes
   161 ;; Hardware stack levels required when called: 1
   162 ;; This function calls:
   163 ;;		_configuro
   164 ;;		_invertido
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           	psect	text0
   171  007F5C                     __ptext0:
   172                           	callstack 0
   173  007F5C                     _main:
   174                           	callstack 30
   175  007F5C                     
   176                           ;maincode.c: 34:     configuro();
   177  007F5C  EC7E  F03F         	call	_configuro	;wreg free
   178  007F60                     l722:
   179                           
   180                           ;maincode.c: 36:         LATDbits.LD1 = 1;
   181  007F60  828C               	bsf	140,1,c	;volatile
   182  007F62                     
   183                           ;maincode.c: 37:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   184  007F62  0E07               	movlw	7
   185  007F64  6E06               	movwf	(??_main+1)^0,c
   186  007F66  0E17               	movlw	23
   187  007F68  6E05               	movwf	??_main^0,c
   188  007F6A  0E6A               	movlw	106
   189  007F6C                     u27:
   190  007F6C  2EE8               	decfsz	wreg,f,c
   191  007F6E  D7FE               	bra	u27
   192  007F70  2E05               	decfsz	??_main^0,f,c
   193  007F72  D7FC               	bra	u27
   194  007F74  2E06               	decfsz	(??_main+1)^0,f,c
   195  007F76  D7FA               	bra	u27
   196  007F78  D000               	nop2	
   197  007F7A                     
   198                           ;maincode.c: 38:         LATDbits.LD1 = 0;
   199  007F7A  928C               	bcf	140,1,c	;volatile
   200  007F7C                     
   201                           ;maincode.c: 39:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   202  007F7C  0E07               	movlw	7
   203  007F7E  6E06               	movwf	(??_main+1)^0,c
   204  007F80  0E17               	movlw	23
   205  007F82  6E05               	movwf	??_main^0,c
   206  007F84  0E6A               	movlw	106
   207  007F86                     u37:
   208  007F86  2EE8               	decfsz	wreg,f,c
   209  007F88  D7FE               	bra	u37
   210  007F8A  2E05               	decfsz	??_main^0,f,c
   211  007F8C  D7FC               	bra	u37
   212  007F8E  2E06               	decfsz	(??_main+1)^0,f,c
   213  007F90  D7FA               	bra	u37
   214  007F92  D000               	nop2	
   215  007F94                     
   216                           ;maincode.c: 40:         LATDbits.LD6 = 1;
   217  007F94  8C8C               	bsf	140,6,c	;volatile
   218  007F96                     
   219                           ;maincode.c: 41:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   220  007F96  0E07               	movlw	7
   221  007F98  6E06               	movwf	(??_main+1)^0,c
   222  007F9A  0E17               	movlw	23
   223  007F9C  6E05               	movwf	??_main^0,c
   224  007F9E  0E6A               	movlw	106
   225  007FA0                     u47:
   226  007FA0  2EE8               	decfsz	wreg,f,c
   227  007FA2  D7FE               	bra	u47
   228  007FA4  2E05               	decfsz	??_main^0,f,c
   229  007FA6  D7FC               	bra	u47
   230  007FA8  2E06               	decfsz	(??_main+1)^0,f,c
   231  007FAA  D7FA               	bra	u47
   232  007FAC  D000               	nop2	
   233  007FAE                     
   234                           ;maincode.c: 42:         LATDbits.LD6 = 0;
   235  007FAE  9C8C               	bcf	140,6,c	;volatile
   236  007FB0                     
   237                           ;maincode.c: 43:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   238  007FB0  0E07               	movlw	7
   239  007FB2  6E06               	movwf	(??_main+1)^0,c
   240  007FB4  0E17               	movlw	23
   241  007FB6  6E05               	movwf	??_main^0,c
   242  007FB8  0E6A               	movlw	106
   243  007FBA                     u57:
   244  007FBA  2EE8               	decfsz	wreg,f,c
   245  007FBC  D7FE               	bra	u57
   246  007FBE  2E05               	decfsz	??_main^0,f,c
   247  007FC0  D7FC               	bra	u57
   248  007FC2  2E06               	decfsz	(??_main+1)^0,f,c
   249  007FC4  D7FA               	bra	u57
   250  007FC6  D000               	nop2	
   251  007FC8                     
   252                           ;maincode.c: 45:         LATB = invertido(mensaje[cuenta]);
   253  007FC8  0E07               	movlw	low _mensaje
   254  007FCA  240A               	addwf	_cuenta^0,w,c
   255  007FCC  6ED9               	movwf	fsr2l,c
   256  007FCE  6ADA               	clrf	fsr2h,c
   257  007FD0  0E00               	movlw	high _mensaje
   258  007FD2  22DA               	addwfc	fsr2h,f,c
   259  007FD4  50DF               	movf	indf2,w,c
   260  007FD6  EC96  F03F         	call	_invertido
   261  007FDA  6E8A               	movwf	138,c	;volatile
   262  007FDC                     
   263                           ;maincode.c: 46:         if (cuenta == 2){
   264  007FDC  0E02               	movlw	2
   265  007FDE  180A               	xorwf	_cuenta^0,w,c
   266  007FE0  A4D8               	btfss	status,2,c
   267  007FE2  EFF5  F03F         	goto	u11
   268  007FE6  EFF7  F03F         	goto	u10
   269  007FEA                     u11:
   270  007FEA  EFFB  F03F         	goto	l744
   271  007FEE                     u10:
   272  007FEE                     
   273                           ;maincode.c: 47:             cuenta = 0;
   274  007FEE  0E00               	movlw	0
   275  007FF0  6E0A               	movwf	_cuenta^0,c
   276                           
   277                           ;maincode.c: 48:         }
   278  007FF2  EFB0  F03F         	goto	l722
   279  007FF6                     l744:
   280                           
   281                           ;maincode.c: 50:             cuenta++;
   282  007FF6  2A0A               	incf	_cuenta^0,f,c
   283  007FF8  EFB0  F03F         	goto	l722
   284  007FFC  EF00  F000         	goto	start
   285  008000                     __end_of_main:
   286                           	callstack 0
   287                           
   288 ;; *************** function _invertido *****************
   289 ;; Defined at:
   290 ;;		line 27 in file "maincode.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;  dato            1    wreg     unsigned char 
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  dato            1    3[COMRAM] unsigned char 
   295 ;;  tempf           1    2[COMRAM] unsigned char 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      unsigned char 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   305 ;;      Params:         0       0       0       0       0       0       0       0       0
   306 ;;      Locals:         2       0       0       0       0       0       0       0       0
   307 ;;      Temps:          2       0       0       0       0       0       0       0       0
   308 ;;      Totals:         4       0       0       0       0       0       0       0       0
   309 ;;Total ram usage:        4 bytes
   310 ;; Hardware stack levels used: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text1
   319  007F2C                     __ptext1:
   320                           	callstack 0
   321  007F2C                     _invertido:
   322                           	callstack 30
   323                           
   324                           ;incstack = 0
   325                           ;invertido@dato stored from wreg
   326  007F2C  6E04               	movwf	invertido@dato^0,c
   327  007F2E                     
   328                           ;maincode.c: 29:     tempf = ((dato << 3) & 0x38) + ((dato >> 3) & 0x07) + (dato & 0x40)
      +                          ;
   329  007F2E  C004  F001         	movff	invertido@dato,??_invertido
   330  007F32  0E40               	movlw	64
   331  007F34  1601               	andwf	??_invertido^0,f,c
   332  007F36  C004  F002         	movff	invertido@dato,??_invertido+1
   333  007F3A  90D8               	bcf	status,0,c
   334  007F3C  3202               	rrcf	(??_invertido+1)^0,f,c
   335  007F3E  90D8               	bcf	status,0,c
   336  007F40  3202               	rrcf	(??_invertido+1)^0,f,c
   337  007F42  90D8               	bcf	status,0,c
   338  007F44  3202               	rrcf	(??_invertido+1)^0,f,c
   339  007F46  0E07               	movlw	7
   340  007F48  1602               	andwf	(??_invertido+1)^0,f,c
   341  007F4A  3804               	swapf	invertido@dato^0,w,c
   342  007F4C  42E8               	rrncf	wreg,f,c
   343  007F4E  0BF8               	andlw	248
   344  007F50  0B38               	andlw	56
   345  007F52  2402               	addwf	(??_invertido+1)^0,w,c
   346  007F54  2401               	addwf	??_invertido^0,w,c
   347  007F56  6E03               	movwf	invertido@tempf^0,c
   348  007F58                     
   349                           ;maincode.c: 30:     return tempf;
   350  007F58  5003               	movf	invertido@tempf^0,w,c
   351  007F5A  0012               	return		;funcret
   352  007F5C                     __end_of_invertido:
   353                           	callstack 0
   354                           
   355 ;; *************** function _configuro *****************
   356 ;; Defined at:
   357 ;;		line 8 in file "maincode.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, status,2
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   371 ;;      Params:         0       0       0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text2
   385  007EFC                     __ptext2:
   386                           	callstack 0
   387  007EFC                     _configuro:
   388                           	callstack 30
   389  007EFC                     
   390                           ;maincode.c: 9:     TRISB = 0x80;
   391  007EFC  0E80               	movlw	128
   392  007EFE  6E93               	movwf	147,c	;volatile
   393  007F00                     
   394                           ;maincode.c: 10:     TRISDbits.RD1 = 0;
   395  007F00  9295               	bcf	149,1,c	;volatile
   396  007F02                     
   397                           ;maincode.c: 11:     TRISDbits.RD6 = 0;
   398  007F02  9C95               	bcf	149,6,c	;volatile
   399  007F04  0012               	return		;funcret
   400  007F06                     __end_of_configuro:
   401                           	callstack 0
   402  0000                     
   403                           	psect	rparam
   404  0000                     
   405                           	psect	idloc
   406                           
   407                           ;Config register IDLOC0 @ 0x200000
   408                           ;	unspecified, using default values
   409  200000                     	org	2097152
   410  200000  FF                 	db	255
   411                           
   412                           ;Config register IDLOC1 @ 0x200001
   413                           ;	unspecified, using default values
   414  200001                     	org	2097153
   415  200001  FF                 	db	255
   416                           
   417                           ;Config register IDLOC2 @ 0x200002
   418                           ;	unspecified, using default values
   419  200002                     	org	2097154
   420  200002  FF                 	db	255
   421                           
   422                           ;Config register IDLOC3 @ 0x200003
   423                           ;	unspecified, using default values
   424  200003                     	org	2097155
   425  200003  FF                 	db	255
   426                           
   427                           ;Config register IDLOC4 @ 0x200004
   428                           ;	unspecified, using default values
   429  200004                     	org	2097156
   430  200004  FF                 	db	255
   431                           
   432                           ;Config register IDLOC5 @ 0x200005
   433                           ;	unspecified, using default values
   434  200005                     	org	2097157
   435  200005  FF                 	db	255
   436                           
   437                           ;Config register IDLOC6 @ 0x200006
   438                           ;	unspecified, using default values
   439  200006                     	org	2097158
   440  200006  FF                 	db	255
   441                           
   442                           ;Config register IDLOC7 @ 0x200007
   443                           ;	unspecified, using default values
   444  200007                     	org	2097159
   445  200007  FF                 	db	255
   446                           
   447                           	psect	config
   448                           
   449                           ;Config register CONFIG1L @ 0x300000
   450                           ;	PLL Prescaler Selection bits
   451                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   452                           ;	System Clock Postscaler Selection bits
   453                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   454                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   455                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   456  300000                     	org	3145728
   457  300000  00                 	db	0
   458                           
   459                           ;Config register CONFIG1H @ 0x300001
   460                           ;	Oscillator Selection bits
   461                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
   462                           ;	Fail-Safe Clock Monitor Enable bit
   463                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   464                           ;	Internal/External Oscillator Switchover bit
   465                           ;	IESO = OFF, Oscillator Switchover mode disabled
   466  300001                     	org	3145729
   467  300001  02                 	db	2
   468                           
   469                           ;Config register CONFIG2L @ 0x300002
   470                           ;	Power-up Timer Enable bit
   471                           ;	PWRT = ON, PWRT enabled
   472                           ;	Brown-out Reset Enable bits
   473                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   474                           ;	Brown-out Reset Voltage bits
   475                           ;	BORV = 3, Minimum setting 2.05V
   476                           ;	USB Voltage Regulator Enable bit
   477                           ;	VREGEN = OFF, USB voltage regulator disabled
   478  300002                     	org	3145730
   479  300002  18                 	db	24
   480                           
   481                           ;Config register CONFIG2H @ 0x300003
   482                           ;	Watchdog Timer Enable bit
   483                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   484                           ;	Watchdog Timer Postscale Select bits
   485                           ;	WDTPS = 32768, 1:32768
   486  300003                     	org	3145731
   487  300003  1E                 	db	30
   488                           
   489                           ; Padding undefined space
   490  300004                     	org	3145732
   491  300004  FF                 	db	255
   492                           
   493                           ;Config register CONFIG3H @ 0x300005
   494                           ;	CCP2 MUX bit
   495                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   496                           ;	PORTB A/D Enable bit
   497                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   498                           ;	Low-Power Timer 1 Oscillator Enable bit
   499                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   500                           ;	MCLR Pin Enable bit
   501                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   502  300005                     	org	3145733
   503  300005  81                 	db	129
   504                           
   505                           ;Config register CONFIG4L @ 0x300006
   506                           ;	Stack Full/Underflow Reset Enable bit
   507                           ;	STVREN = ON, Stack full/underflow will cause Reset
   508                           ;	Single-Supply ICSP Enable bit
   509                           ;	LVP = OFF, Single-Supply ICSP disabled
   510                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   511                           ;	ICPRT = OFF, ICPORT disabled
   512                           ;	Extended Instruction Set Enable bit
   513                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   514                           ;	Background Debugger Enable bit
   515                           ;	DEBUG = 0x1, unprogrammed default
   516  300006                     	org	3145734
   517  300006  81                 	db	129
   518                           
   519                           ; Padding undefined space
   520  300007                     	org	3145735
   521  300007  FF                 	db	255
   522                           
   523                           ;Config register CONFIG5L @ 0x300008
   524                           ;	Code Protection bit
   525                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   526                           ;	Code Protection bit
   527                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   528                           ;	Code Protection bit
   529                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   530                           ;	Code Protection bit
   531                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   532  300008                     	org	3145736
   533  300008  0F                 	db	15
   534                           
   535                           ;Config register CONFIG5H @ 0x300009
   536                           ;	Boot Block Code Protection bit
   537                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   538                           ;	Data EEPROM Code Protection bit
   539                           ;	CPD = OFF, Data EEPROM is not code-protected
   540  300009                     	org	3145737
   541  300009  C0                 	db	192
   542                           
   543                           ;Config register CONFIG6L @ 0x30000A
   544                           ;	Write Protection bit
   545                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   546                           ;	Write Protection bit
   547                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   548                           ;	Write Protection bit
   549                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   550                           ;	Write Protection bit
   551                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   552  30000A                     	org	3145738
   553  30000A  0F                 	db	15
   554                           
   555                           ;Config register CONFIG6H @ 0x30000B
   556                           ;	Configuration Register Write Protection bit
   557                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   558                           ;	Boot Block Write Protection bit
   559                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   560                           ;	Data EEPROM Write Protection bit
   561                           ;	WRTD = OFF, Data EEPROM is not write-protected
   562  30000B                     	org	3145739
   563  30000B  E0                 	db	224
   564                           
   565                           ;Config register CONFIG7L @ 0x30000C
   566                           ;	Table Read Protection bit
   567                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   568                           ;	Table Read Protection bit
   569                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   570                           ;	Table Read Protection bit
   571                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   572                           ;	Table Read Protection bit
   573                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   574  30000C                     	org	3145740
   575  30000C  0F                 	db	15
   576                           
   577                           ;Config register CONFIG7H @ 0x30000D
   578                           ;	Boot Block Table Read Protection bit
   579                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   580  30000D                     	org	3145741
   581  30000D  40                 	db	64
   582                           tosu	equ	0xFFF
   583                           tosh	equ	0xFFE
   584                           tosl	equ	0xFFD
   585                           stkptr	equ	0xFFC
   586                           pclatu	equ	0xFFB
   587                           pclath	equ	0xFFA
   588                           pcl	equ	0xFF9
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           prodh	equ	0xFF4
   594                           prodl	equ	0xFF3
   595                           indf0	equ	0xFEF
   596                           postinc0	equ	0xFEE
   597                           postdec0	equ	0xFED
   598                           preinc0	equ	0xFEC
   599                           plusw0	equ	0xFEB
   600                           fsr0h	equ	0xFEA
   601                           fsr0l	equ	0xFE9
   602                           wreg	equ	0xFE8
   603                           indf1	equ	0xFE7
   604                           postinc1	equ	0xFE6
   605                           postdec1	equ	0xFE5
   606                           preinc1	equ	0xFE4
   607                           plusw1	equ	0xFE3
   608                           fsr1h	equ	0xFE2
   609                           fsr1l	equ	0xFE1
   610                           bsr	equ	0xFE0
   611                           indf2	equ	0xFDF
   612                           postinc2	equ	0xFDE
   613                           postdec2	equ	0xFDD
   614                           preinc2	equ	0xFDC
   615                           plusw2	equ	0xFDB
   616                           fsr2h	equ	0xFDA
   617                           fsr2l	equ	0xFD9
   618                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_invertido

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              4 COMRAM     2     2      0
                          _configuro
                          _invertido
 ---------------------------------------------------------------------------------
 (1) _invertido                                            4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
   _invertido

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       A       1       10.5%
BITBIGSFRlll        2A      0       0      25        0.0%
BITBIGSFRlh          6      0       0      23        0.0%
BITBIGSFRllh         1      0       0      24        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       A       3        0.0%
DATA                 0      0       A       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 08:34:04 2022

                     l20 7F5A                       l17 7F04                       u10 7FEE  
                     u11 7FEA                       u27 7F6C                       u37 7F86  
                     u47 7FA0                       u57 7FBA                      l710 7F02  
                    l712 7F2E                      l720 7F5C                      l706 7EFC  
                    l714 7F2E                      l730 7F94                      l722 7F60  
                    l708 7F00                      l716 7F58                      l740 7FDC  
                    l732 7F96                      l724 7F62                      l742 7FEE  
                    l734 7FAE                      l726 7F7A                      l744 7FF6  
                    l736 7FB0                      l728 7F7C                      l738 7FC8  
                    wreg 000FE8                     _LATB 000F8A                     _main 7F5C  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _TRISB 000F93  
                  tablat 000FF5                    status 000FD8          __initialization 7F06  
           __end_of_main 8000                   ??_main 0005            __activetblptr 000000  
                 _cuenta 000A                   isa$std 000001             __pdataCOMRAM 0007  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7F26            ___rparam_used 000001  
          invertido@dato 0004           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000        __end_of_configuro 7F06                  __pcinit 7F06  
                __ramtop 0800                  __ptext0 7F5C                  __ptext1 7F2C  
                __ptext2 7EFC                  _mensaje 0007        __end_of_invertido 7F5C  
   end_of_initialization 7F26                _TRISDbits 000F95           invertido@tempf 0003  
          __pidataCOMRAM 7EF9      start_initialization 7F06              __pbssCOMRAM 000A  
              _configuro 7EFC                _invertido 7F2C                 _LATDbits 000F8C  
             ?_configuro 0001               ?_invertido 0001                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000              ??_configuro 0001  
            ??_invertido 0001  
