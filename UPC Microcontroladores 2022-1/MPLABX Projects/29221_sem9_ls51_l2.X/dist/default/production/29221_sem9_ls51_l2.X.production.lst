

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 18 12:33:42 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _LATD	set	3980
    63  0000                     _PORTD	set	3971
    64  0000                     _LATCbits	set	3979
    65  0000                     _TRISCbits	set	3988
    66  0000                     _TRISD	set	3989
    67  0000                     _LATDbits	set	3980
    68                           
    69                           	psect	smallconst
    70  000800                     __psmallconst:
    71                           	callstack 0
    72  000800  00                 	db	0
    73  000801                     STR_1:
    74  000801  49                 	db	73	;'I'
    75  000802  6E                 	db	110	;'n'
    76  000803  67                 	db	103	;'g'
    77  000804  2E                 	db	46
    78  000805  20                 	db	32
    79  000806  45                 	db	69	;'E'
    80  000807  6C                 	db	108	;'l'
    81  000808  65                 	db	101	;'e'
    82  000809  63                 	db	99	;'c'
    83  00080A  74                 	db	116	;'t'
    84  00080B  72                 	db	114	;'r'
    85  00080C  6F                 	db	111	;'o'
    86  00080D  6E                 	db	110	;'n'
    87  00080E  69                 	db	105	;'i'
    88  00080F  63                 	db	99	;'c'
    89  000810  61                 	db	97	;'a'
    90  000811  00                 	db	0
    91  000812                     STR_2:
    92  000812  48                 	db	72	;'H'
    93  000813  6F                 	db	111	;'o'
    94  000814  6C                 	db	108	;'l'
    95  000815  61                 	db	97	;'a'
    96  000816  20                 	db	32
    97  000817  55                 	db	85	;'U'
    98  000818  50                 	db	80	;'P'
    99  000819  43                 	db	67	;'C'
   100  00081A  00                 	db	0
   101  00081B  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106  000ABC                     __pcinit:
   107                           	callstack 0
   108  000ABC                     start_initialization:
   109                           	callstack 0
   110  000ABC                     __initialization:
   111                           	callstack 0
   112  000ABC                     end_of_initialization:
   113                           	callstack 0
   114  000ABC                     __end_of__initialization:
   115                           	callstack 0
   116  000ABC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117  000ABE  6EF8               	movwf	tblptru,c
   118  000AC0  0E08               	movlw	high __Lsmallconst
   119  000AC2  6EF7               	movwf	tblptrh,c
   120  000AC4  0100               	movlb	0
   121  000AC6  EF77  F004         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	cstackCOMRAM
   124  000001                     __pcstackCOMRAM:
   125                           	callstack 0
   126  000001                     ??_titileo_RC0:
   127  000001                     ENVIA_NIBBLE@dato:
   128                           	callstack 0
   129  000001                     LEER_LCD@aux:
   130                           	callstack 0
   131                           
   132                           ; 1 bytes @ 0x0
   133  000001                     	ds	1
   134  000002                     ENVIA_CHAR@dato:
   135                           	callstack 0
   136  000002                     ENVIA_LCD_CMD@dato:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x1
   140  000002                     	ds	1
   141  000003                     ENVIA_CHAR@aux:
   142                           	callstack 0
   143  000003                     ENVIA_LCD_CMD@aux:
   144                           	callstack 0
   145                           
   146                           ; 1 bytes @ 0x2
   147  000003                     	ds	1
   148  000004                     ??_LCD_CONFIG:
   149  000004                     POS_CURSOR@columna:
   150                           	callstack 0
   151  000004                     CURSOR_ONOFF@estado:
   152                           	callstack 0
   153  000004                     ESCRIBE_MENSAJE@cadena:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x3
   157  000004                     	ds	1
   158  000005                     ??_lcd_init:
   159  000005                     POS_CURSOR@fila:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x4
   163  000005                     	ds	1
   164  000006                     ESCRIBE_MENSAJE@tam:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x5
   168  000006                     	ds	1
   169  000007                     ??_ESCRIBE_MENSAJE:
   170                           
   171                           ; 1 bytes @ 0x6
   172  000007                     	ds	2
   173  000009                     ESCRIBE_MENSAJE@i:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x8
   177  000009                     	ds	1
   178  00000A                     
   179                           ; 1 bytes @ 0x9
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 26 in file "maincode.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 4
   205 ;; This function calls:
   206 ;;		_ESCRIBE_MENSAJE
   207 ;;		_POS_CURSOR
   208 ;;		_configuro
   209 ;;		_lcd_init
   210 ;;		_titileo_RC0
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  0008EE                     __ptext0:
   218                           	callstack 0
   219  0008EE                     _main:
   220                           	callstack 27
   221  0008EE                     
   222                           ;maincode.c: 27:     configuro();
   223  0008EE  EC6D  F005         	call	_configuro	;wreg free
   224  0008F2                     
   225                           ;maincode.c: 28:     lcd_init();
   226  0008F2  EC3C  F005         	call	_lcd_init	;wreg free
   227  0008F6                     l1015:
   228                           
   229                           ;maincode.c: 30:         POS_CURSOR(1, 0);
   230  0008F6  0E00               	movlw	0
   231  0008F8  6E04               	movwf	POS_CURSOR@columna^0,c
   232  0008FA  0E01               	movlw	1
   233  0008FC  ECBA  F004         	call	_POS_CURSOR
   234  000900                     
   235                           ;maincode.c: 31:         ESCRIBE_MENSAJE("Ing. Electronica",16);
   236  000900  0E01               	movlw	low STR_1
   237  000902  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   238  000904  0E08               	movlw	high STR_1
   239  000906  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   240  000908  0E10               	movlw	16
   241  00090A  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   242  00090C  EC9B  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   243  000910                     
   244                           ;maincode.c: 32:         POS_CURSOR(2, 3);
   245  000910  0E03               	movlw	3
   246  000912  6E04               	movwf	POS_CURSOR@columna^0,c
   247  000914  0E02               	movlw	2
   248  000916  ECBA  F004         	call	_POS_CURSOR
   249  00091A                     
   250                           ;maincode.c: 33:         ESCRIBE_MENSAJE("Hola UPC",8);
   251  00091A  0E12               	movlw	low STR_2
   252  00091C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   253  00091E  0E08               	movlw	high STR_2
   254  000920  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   255  000922  0E08               	movlw	8
   256  000924  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   257  000926  EC9B  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   258  00092A                     
   259                           ;maincode.c: 34:         titileo_RC0();
   260  00092A  EC0B  F005         	call	_titileo_RC0	;wreg free
   261  00092E  EF7B  F004         	goto	l1015
   262  000932  EF00  F000         	goto	start
   263  000936                     __end_of_main:
   264                           	callstack 0
   265                           
   266 ;; *************** function _titileo_RC0 *****************
   267 ;; Defined at:
   268 ;;		line 19 in file "maincode.c"
   269 ;; Parameters:    Size  Location     Type
   270 ;;		None
   271 ;; Auto vars:     Size  Location     Type
   272 ;;		None
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg
   277 ;; Tracked objects:
   278 ;;		On entry : 0/0
   279 ;;		On exit  : 0/0
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   282 ;;      Params:         0       0       0       0       0       0       0       0       0
   283 ;;      Locals:         0       0       0       0       0       0       0       0       0
   284 ;;      Temps:          2       0       0       0       0       0       0       0       0
   285 ;;      Totals:         2       0       0       0       0       0       0       0       0
   286 ;;Total ram usage:        2 bytes
   287 ;; Hardware stack levels used: 1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           	psect	text1
   296  000A16                     __ptext1:
   297                           	callstack 0
   298  000A16                     _titileo_RC0:
   299                           	callstack 30
   300  000A16                     
   301                           ;maincode.c: 20:     LATCbits.LC0 = 1;
   302  000A16  808B               	bsf	139,0,c	;volatile
   303  000A18                     
   304                           ;maincode.c: 21:     _delay((unsigned long)((200)*(48000000UL/4000.0)));
   305  000A18  0E0D               	movlw	13
   306  000A1A  6E02               	movwf	(??_titileo_RC0+1)^0,c
   307  000A1C  0E2D               	movlw	45
   308  000A1E  6E01               	movwf	??_titileo_RC0^0,c
   309  000A20  0ED8               	movlw	216
   310  000A22                     u157:
   311  000A22  2EE8               	decfsz	wreg,f,c
   312  000A24  D7FE               	bra	u157
   313  000A26  2E01               	decfsz	??_titileo_RC0^0,f,c
   314  000A28  D7FC               	bra	u157
   315  000A2A  2E02               	decfsz	(??_titileo_RC0+1)^0,f,c
   316  000A2C  D7FA               	bra	u157
   317  000A2E                     
   318                           ;maincode.c: 22:     LATCbits.LC0 = 0;
   319  000A2E  908B               	bcf	139,0,c	;volatile
   320                           
   321                           ;maincode.c: 23:     _delay((unsigned long)((200)*(48000000UL/4000.0)));
   322  000A30  0E0D               	movlw	13
   323  000A32  6E02               	movwf	(??_titileo_RC0+1)^0,c
   324  000A34  0E2D               	movlw	45
   325  000A36  6E01               	movwf	??_titileo_RC0^0,c
   326  000A38  0ED8               	movlw	216
   327  000A3A                     u167:
   328  000A3A  2EE8               	decfsz	wreg,f,c
   329  000A3C  D7FE               	bra	u167
   330  000A3E  2E01               	decfsz	??_titileo_RC0^0,f,c
   331  000A40  D7FC               	bra	u167
   332  000A42  2E02               	decfsz	(??_titileo_RC0+1)^0,f,c
   333  000A44  D7FA               	bra	u167
   334  000A46  0012               	return		;funcret
   335  000A48                     __end_of_titileo_RC0:
   336                           	callstack 0
   337                           
   338 ;; *************** function _lcd_init *****************
   339 ;; Defined at:
   340 ;;		line 10 in file "maincode.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0, cstack
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0
   356 ;;      Temps:          1       0       0       0       0       0       0       0       0
   357 ;;      Totals:         1       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        1 bytes
   359 ;; Hardware stack levels used: 1
   360 ;; Hardware stack levels required when called: 3
   361 ;; This function calls:
   362 ;;		_BORRAR_LCD
   363 ;;		_CURSOR_HOME
   364 ;;		_CURSOR_ONOFF
   365 ;;		_LCD_CONFIG
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text2
   372  000A78                     __ptext2:
   373                           	callstack 0
   374  000A78                     _lcd_init:
   375                           	callstack 27
   376  000A78                     
   377                           ;maincode.c: 11:     TRISD = 0x00;
   378  000A78  0E00               	movlw	0
   379  000A7A  6E95               	movwf	149,c	;volatile
   380  000A7C                     
   381                           ;maincode.c: 12:     LCD_CONFIG();
   382  000A7C  EC47  F004         	call	_LCD_CONFIG	;wreg free
   383  000A80                     
   384                           ;maincode.c: 13:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   385  000A80  0EEA               	movlw	234
   386  000A82  6E05               	movwf	??_lcd_init^0,c
   387  000A84  0EC3               	movlw	195
   388  000A86                     u177:
   389  000A86  2EE8               	decfsz	wreg,f,c
   390  000A88  D7FE               	bra	u177
   391  000A8A  2E05               	decfsz	??_lcd_init^0,f,c
   392  000A8C  D7FC               	bra	u177
   393  000A8E  F000               	nop	
   394  000A90                     
   395                           ;maincode.c: 14:     BORRAR_LCD();
   396  000A90  EC69  F005         	call	_BORRAR_LCD	;wreg free
   397  000A94                     
   398                           ;maincode.c: 15:     CURSOR_HOME();
   399  000A94  EC65  F005         	call	_CURSOR_HOME	;wreg free
   400  000A98                     
   401                           ;maincode.c: 16:     CURSOR_ONOFF(1);
   402  000A98  0E01               	movlw	1
   403  000A9A  EC24  F005         	call	_CURSOR_ONOFF
   404  000A9E  0012               	return		;funcret
   405  000AA0                     __end_of_lcd_init:
   406                           	callstack 0
   407                           
   408 ;; *************** function _LCD_CONFIG *****************
   409 ;; Defined at:
   410 ;;		line 72 in file "../20221_sem9_el51_lcd.X/LCD.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   424 ;;      Params:         0       0       0       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0       0       0
   426 ;;      Temps:          1       0       0       0       0       0       0       0       0
   427 ;;      Totals:         1       0       0       0       0       0       0       0       0
   428 ;;Total ram usage:        1 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 2
   431 ;; This function calls:
   432 ;;		_ENVIA_LCD_CMD
   433 ;;		_ENVIA_NIBBLE
   434 ;; This function is called by:
   435 ;;		_lcd_init
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text3
   440  00088E                     __ptext3:
   441                           	callstack 0
   442  00088E                     _LCD_CONFIG:
   443                           	callstack 27
   444  00088E                     
   445                           ;../20221_sem9_el51_lcd.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   446  00088E  908C               	bcf	140,0,c	;volatile
   447                           
   448                           ;../20221_sem9_el51_lcd.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   449  000890  928C               	bcf	140,1,c	;volatile
   450  000892                     
   451                           ;../20221_sem9_el51_lcd.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   452  000892  0E30               	movlw	48
   453  000894  EC50  F005         	call	_ENVIA_NIBBLE
   454  000898                     
   455                           ;../20221_sem9_el51_lcd.X/LCD.c: 77:         _delay(24000);
   456  000898  0E20               	movlw	32
   457  00089A  6E04               	movwf	??_LCD_CONFIG^0,c
   458  00089C  0E2A               	movlw	42
   459  00089E                     u187:
   460  00089E  2EE8               	decfsz	wreg,f,c
   461  0008A0  D7FE               	bra	u187
   462  0008A2  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   463  0008A4  D7FC               	bra	u187
   464  0008A6                     
   465                           ;../20221_sem9_el51_lcd.X/LCD.c: 78:         _delay(24000);
   466  0008A6  0E20               	movlw	32
   467  0008A8  6E04               	movwf	??_LCD_CONFIG^0,c
   468  0008AA  0E2A               	movlw	42
   469  0008AC                     u197:
   470  0008AC  2EE8               	decfsz	wreg,f,c
   471  0008AE  D7FE               	bra	u197
   472  0008B0  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   473  0008B2  D7FC               	bra	u197
   474                           
   475                           ;../20221_sem9_el51_lcd.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   476  0008B4  0E30               	movlw	48
   477  0008B6  EC50  F005         	call	_ENVIA_NIBBLE
   478  0008BA                     
   479                           ;../20221_sem9_el51_lcd.X/LCD.c: 83:  _delay(1200);
   480  0008BA  0EF0               	movlw	240
   481  0008BC                     u207:
   482  0008BC  D000               	nop2	
   483  0008BE  2EE8               	decfsz	wreg,f,c
   484  0008C0  D7FD               	bra	u207
   485  0008C2                     
   486                           ;../20221_sem9_el51_lcd.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   487  0008C2  0E30               	movlw	48
   488  0008C4  EC50  F005         	call	_ENVIA_NIBBLE
   489  0008C8                     
   490                           ;../20221_sem9_el51_lcd.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   491  0008C8  0E20               	movlw	32
   492  0008CA  EC50  F005         	call	_ENVIA_NIBBLE
   493  0008CE                     
   494                           ;../20221_sem9_el51_lcd.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   495  0008CE  0E01               	movlw	1
   496  0008D0  ECD7  F004         	call	_ENVIA_LCD_CMD
   497  0008D4                     
   498                           ;../20221_sem9_el51_lcd.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   499  0008D4  0E28               	movlw	40
   500  0008D6  ECD7  F004         	call	_ENVIA_LCD_CMD
   501  0008DA                     
   502                           ;../20221_sem9_el51_lcd.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   503  0008DA  0E0F               	movlw	15
   504  0008DC  ECD7  F004         	call	_ENVIA_LCD_CMD
   505  0008E0                     
   506                           ;../20221_sem9_el51_lcd.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   507  0008E0  0E06               	movlw	6
   508  0008E2  ECD7  F004         	call	_ENVIA_LCD_CMD
   509  0008E6                     
   510                           ;../20221_sem9_el51_lcd.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   511  0008E6  0E01               	movlw	1
   512  0008E8  ECD7  F004         	call	_ENVIA_LCD_CMD
   513  0008EC  0012               	return		;funcret
   514  0008EE                     __end_of_LCD_CONFIG:
   515                           	callstack 0
   516                           
   517 ;; *************** function _CURSOR_ONOFF *****************
   518 ;; Defined at:
   519 ;;		line 35 in file "../20221_sem9_el51_lcd.X/LCD.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  estado          1    wreg     unsigned char 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  estado          1    3[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   533 ;;      Params:         0       0       0       0       0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0
   536 ;;      Totals:         1       0       0       0       0       0       0       0       0
   537 ;;Total ram usage:        1 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 2
   540 ;; This function calls:
   541 ;;		_ENVIA_LCD_CMD
   542 ;; This function is called by:
   543 ;;		_lcd_init
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text4
   548  000A48                     __ptext4:
   549                           	callstack 0
   550  000A48                     _CURSOR_ONOFF:
   551                           	callstack 27
   552                           
   553                           ;incstack = 0
   554                           ;CURSOR_ONOFF@estado stored from wreg
   555  000A48  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   556  000A4A                     
   557                           ;../20221_sem9_el51_lcd.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 36: {;../20221_sem9_el51_lcd.X/LCD.c: 37:  if(estado == 0) ENVIA_LC
      +                          D_CMD(0x0E);
   558  000A4A  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   559  000A4C  A4D8               	btfss	status,2,c
   560  000A4E  EF2B  F005         	goto	u21
   561  000A52  EF2D  F005         	goto	u20
   562  000A56                     u21:
   563  000A56  EF30  F005         	goto	l887
   564  000A5A                     u20:
   565  000A5A  0E0E               	movlw	14
   566  000A5C  ECD7  F004         	call	_ENVIA_LCD_CMD
   567  000A60                     l887:
   568                           
   569                           ;../20221_sem9_el51_lcd.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   570  000A60  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   571  000A62  A4D8               	btfss	status,2,c
   572  000A64  EF36  F005         	goto	u31
   573  000A68  EF38  F005         	goto	u30
   574  000A6C                     u31:
   575  000A6C  EF3B  F005         	goto	l79
   576  000A70                     u30:
   577  000A70  0E0C               	movlw	12
   578  000A72  ECD7  F004         	call	_ENVIA_LCD_CMD
   579  000A76                     l79:
   580  000A76  0012               	return		;funcret
   581  000A78                     __end_of_CURSOR_ONOFF:
   582                           	callstack 0
   583                           
   584 ;; *************** function _CURSOR_HOME *****************
   585 ;; Defined at:
   586 ;;		line 30 in file "../20221_sem9_el51_lcd.X/LCD.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   600 ;;      Params:         0       0       0       0       0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used: 1
   606 ;; Hardware stack levels required when called: 2
   607 ;; This function calls:
   608 ;;		_ENVIA_LCD_CMD
   609 ;; This function is called by:
   610 ;;		_lcd_init
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           	psect	text5
   615  000ACA                     __ptext5:
   616                           	callstack 0
   617  000ACA                     _CURSOR_HOME:
   618                           	callstack 27
   619  000ACA                     
   620                           ;../20221_sem9_el51_lcd.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   621  000ACA  0E02               	movlw	2
   622  000ACC  ECD7  F004         	call	_ENVIA_LCD_CMD
   623  000AD0  0012               	return		;funcret
   624  000AD2                     __end_of_CURSOR_HOME:
   625                           	callstack 0
   626                           
   627 ;; *************** function _BORRAR_LCD *****************
   628 ;; Defined at:
   629 ;;		line 67 in file "../20221_sem9_el51_lcd.X/LCD.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   643 ;;      Params:         0       0       0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 2
   650 ;; This function calls:
   651 ;;		_ENVIA_LCD_CMD
   652 ;; This function is called by:
   653 ;;		_lcd_init
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text6
   658  000AD2                     __ptext6:
   659                           	callstack 0
   660  000AD2                     _BORRAR_LCD:
   661                           	callstack 27
   662  000AD2                     
   663                           ;../20221_sem9_el51_lcd.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   664  000AD2  0E01               	movlw	1
   665  000AD4  ECD7  F004         	call	_ENVIA_LCD_CMD
   666  000AD8  0012               	return		;funcret
   667  000ADA                     __end_of_BORRAR_LCD:
   668                           	callstack 0
   669                           
   670 ;; *************** function _configuro *****************
   671 ;; Defined at:
   672 ;;		line 6 in file "maincode.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		None
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         0       0       0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text7
   700  000ADA                     __ptext7:
   701                           	callstack 0
   702  000ADA                     _configuro:
   703                           	callstack 30
   704  000ADA                     
   705                           ;maincode.c: 7:     TRISCbits.RC0 = 0;
   706  000ADA  9094               	bcf	148,0,c	;volatile
   707  000ADC  0012               	return		;funcret
   708  000ADE                     __end_of_configuro:
   709                           	callstack 0
   710                           
   711 ;; *************** function _POS_CURSOR *****************
   712 ;; Defined at:
   713 ;;		line 6 in file "../20221_sem9_el51_lcd.X/LCD.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  fila            1    wreg     unsigned char 
   716 ;;  columna         1    3[COMRAM] unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  fila            1    4[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         1       0       0       0       0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         2       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        2 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 2
   735 ;; This function calls:
   736 ;;		_ENVIA_LCD_CMD
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text8
   743  000974                     __ptext8:
   744                           	callstack 0
   745  000974                     _POS_CURSOR:
   746                           	callstack 28
   747                           
   748                           ;incstack = 0
   749                           ;POS_CURSOR@fila stored from wreg
   750  000974  6E05               	movwf	POS_CURSOR@fila^0,c
   751  000976                     
   752                           ;../20221_sem9_el51_lcd.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char col
      +                          umna);../20221_sem9_el51_lcd.X/LCD.c: 7: {;../20221_sem9_el51_lcd.X/LCD.c: 8:  if(fila =
      +                          = 1)
   753  000976  0405               	decf	POS_CURSOR@fila^0,w,c
   754  000978  A4D8               	btfss	status,2,c
   755  00097A  EFC1  F004         	goto	u121
   756  00097E  EFC3  F004         	goto	u120
   757  000982                     u121:
   758  000982  EFC9  F004         	goto	l999
   759  000986                     u120:
   760  000986                     
   761                           ;../20221_sem9_el51_lcd.X/LCD.c: 9:  {;../20221_sem9_el51_lcd.X/LCD.c: 10:   ENVIA_LCD_C
      +                          MD(0x80+columna);
   762  000986  5004               	movf	POS_CURSOR@columna^0,w,c
   763  000988  0F80               	addlw	128
   764  00098A  ECD7  F004         	call	_ENVIA_LCD_CMD
   765                           
   766                           ;../20221_sem9_el51_lcd.X/LCD.c: 11:  }
   767  00098E  EFD6  F004         	goto	l61
   768  000992                     l999:
   769  000992  0E02               	movlw	2
   770  000994  1805               	xorwf	POS_CURSOR@fila^0,w,c
   771  000996  A4D8               	btfss	status,2,c
   772  000998  EFD0  F004         	goto	u131
   773  00099C  EFD2  F004         	goto	u130
   774  0009A0                     u131:
   775  0009A0  EFD6  F004         	goto	l61
   776  0009A4                     u130:
   777  0009A4                     
   778                           ;../20221_sem9_el51_lcd.X/LCD.c: 13:  {;../20221_sem9_el51_lcd.X/LCD.c: 14:   ENVIA_LCD_
      +                          CMD(0xC0+columna);
   779  0009A4  5004               	movf	POS_CURSOR@columna^0,w,c
   780  0009A6  0FC0               	addlw	192
   781  0009A8  ECD7  F004         	call	_ENVIA_LCD_CMD
   782  0009AC                     l61:
   783  0009AC  0012               	return		;funcret
   784  0009AE                     __end_of_POS_CURSOR:
   785                           	callstack 0
   786                           
   787 ;; *************** function _ENVIA_LCD_CMD *****************
   788 ;; Defined at:
   789 ;;		line 104 in file "../20221_sem9_el51_lcd.X/LCD.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  dato            1    wreg     unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  dato            1    1[COMRAM] unsigned char 
   794 ;;  aux             1    2[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         0       0       0       0       0       0       0       0       0
   805 ;;      Locals:         2       0       0       0       0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0
   807 ;;      Totals:         2       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:        2 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 1
   811 ;; This function calls:
   812 ;;		_ENVIA_NIBBLE
   813 ;;		_LEER_LCD
   814 ;; This function is called by:
   815 ;;		_POS_CURSOR
   816 ;;		_CURSOR_HOME
   817 ;;		_CURSOR_ONOFF
   818 ;;		_BORRAR_LCD
   819 ;;		_LCD_CONFIG
   820 ;;		_BLINK_CURSOR
   821 ;;		_DISPLAY_ONOFF
   822 ;;		_GENERACARACTER
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text9
   827  0009AE                     __ptext9:
   828                           	callstack 0
   829  0009AE                     _ENVIA_LCD_CMD:
   830                           	callstack 27
   831                           
   832                           ;incstack = 0
   833                           ;ENVIA_LCD_CMD@dato stored from wreg
   834  0009AE  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   835  0009B0                     
   836                           ;../20221_sem9_el51_lcd.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 105: {;../20221_sem9_el51_lcd.X/LCD.c: 106:  unsigned char aux;;../
      +                          20221_sem9_el51_lcd.X/LCD.c: 107:  LATDbits.LATD0 = 0;
   837  0009B0  908C               	bcf	140,0,c	;volatile
   838  0009B2                     
   839                           ;../20221_sem9_el51_lcd.X/LCD.c: 108:  LEER_LCD();
   840  0009B2  EC0E  F004         	call	_LEER_LCD	;wreg free
   841  0009B6                     
   842                           ;../20221_sem9_el51_lcd.X/LCD.c: 109:  TRISD = 0b00000000;
   843  0009B6  0E00               	movlw	0
   844  0009B8  6E95               	movwf	149,c	;volatile
   845  0009BA                     
   846                           ;../20221_sem9_el51_lcd.X/LCD.c: 111:         _delay(1200);
   847  0009BA  0EF0               	movlw	240
   848  0009BC                     u217:
   849  0009BC  D000               	nop2	
   850  0009BE  2EE8               	decfsz	wreg,f,c
   851  0009C0  D7FD               	bra	u217
   852  0009C2                     
   853                           ;../20221_sem9_el51_lcd.X/LCD.c: 112:         LATDbits.LATD1 = 0;
   854  0009C2  928C               	bcf	140,1,c	;volatile
   855  0009C4                     
   856                           ;../20221_sem9_el51_lcd.X/LCD.c: 113:  LATDbits.LATD2 = 0;
   857  0009C4  948C               	bcf	140,2,c	;volatile
   858  0009C6                     
   859                           ;../20221_sem9_el51_lcd.X/LCD.c: 114:  LATDbits.LATD0 = 0;
   860  0009C6  908C               	bcf	140,0,c	;volatile
   861  0009C8                     
   862                           ;../20221_sem9_el51_lcd.X/LCD.c: 115:  aux = dato & 0xF0;
   863  0009C8  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   864  0009CA  0BF0               	andlw	240
   865  0009CC  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   866  0009CE                     
   867                           ;../20221_sem9_el51_lcd.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
   868  0009CE  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   869  0009D0  EC50  F005         	call	_ENVIA_NIBBLE
   870  0009D4                     
   871                           ;../20221_sem9_el51_lcd.X/LCD.c: 117:  aux = dato<<4;
   872  0009D4  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   873  0009D6  0BF0               	andlw	240
   874  0009D8  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   875  0009DA                     
   876                           ;../20221_sem9_el51_lcd.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
   877  0009DA  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   878  0009DC  EC50  F005         	call	_ENVIA_NIBBLE
   879  0009E0  0012               	return		;funcret
   880  0009E2                     __end_of_ENVIA_LCD_CMD:
   881                           	callstack 0
   882                           
   883 ;; *************** function _ESCRIBE_MENSAJE *****************
   884 ;; Defined at:
   885 ;;		line 41 in file "../20221_sem9_el51_lcd.X/LCD.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   888 ;;		 -> STR_2(9), STR_1(17), 
   889 ;;  tam             1    5[COMRAM] unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  i               1    8[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   901 ;;      Params:         3       0       0       0       0       0       0       0       0
   902 ;;      Locals:         1       0       0       0       0       0       0       0       0
   903 ;;      Temps:          2       0       0       0       0       0       0       0       0
   904 ;;      Totals:         6       0       0       0       0       0       0       0       0
   905 ;;Total ram usage:        6 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 2
   908 ;; This function calls:
   909 ;;		_ENVIA_CHAR
   910 ;; This function is called by:
   911 ;;		_main
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text10
   916  000936                     __ptext10:
   917                           	callstack 0
   918  000936                     _ESCRIBE_MENSAJE:
   919                           	callstack 28
   920  000936                     
   921                           ;../20221_sem9_el51_lcd.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned ch
      +                          ar tam);../20221_sem9_el51_lcd.X/LCD.c: 42: {;../20221_sem9_el51_lcd.X/LCD.c: 43:  unsig
      +                          ned char i = 0;
   922  000936  0E00               	movlw	0
   923  000938  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   924                           
   925                           ;../20221_sem9_el51_lcd.X/LCD.c: 44:  for(i = 0; i<tam; i++)
   926  00093A  0E00               	movlw	0
   927  00093C  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   928  00093E  EFB0  F004         	goto	l1009
   929  000942                     l1005:
   930                           
   931                           ;../20221_sem9_el51_lcd.X/LCD.c: 45:  {;../20221_sem9_el51_lcd.X/LCD.c: 46:   ENVIA_CHAR
      +                          (cadena[i]);
   932  000942  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
   933  000944  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   934  000946  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
   935  000948  0E00               	movlw	0
   936  00094A  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   937  00094C  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   938  00094E  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   939  000952  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   940  000956                     	if	0	;tblptru may be non-zero
   941  000956                     	endif
   942  000956                     	if	0	;tblptru may be non-zero
   943  000956                     	endif
   944  000956  0008               	tblrd		*
   945  000958  50F5               	movf	tablat,w,c
   946  00095A  ECF1  F004         	call	_ENVIA_CHAR
   947  00095E                     
   948                           ;../20221_sem9_el51_lcd.X/LCD.c: 47:  }
   949  00095E  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
   950  000960                     l1009:
   951  000960  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   952  000962  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   953  000964  A0D8               	btfss	status,0,c
   954  000966  EFB7  F004         	goto	u141
   955  00096A  EFB9  F004         	goto	u140
   956  00096E                     u141:
   957  00096E  EFA1  F004         	goto	l1005
   958  000972                     u140:
   959  000972  0012               	return		;funcret
   960  000974                     __end_of_ESCRIBE_MENSAJE:
   961                           	callstack 0
   962                           
   963 ;; *************** function _ENVIA_CHAR *****************
   964 ;; Defined at:
   965 ;;		line 50 in file "../20221_sem9_el51_lcd.X/LCD.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  dato            1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  dato            1    1[COMRAM] unsigned char 
   970 ;;  aux             1    2[COMRAM] unsigned char 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         2       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0
   983 ;;      Totals:         2       0       0       0       0       0       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 1
   987 ;; This function calls:
   988 ;;		_ENVIA_NIBBLE
   989 ;;		_LEER_LCD
   990 ;; This function is called by:
   991 ;;		_ESCRIBE_MENSAJE
   992 ;;		_GENERACARACTER
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text11
   997  0009E2                     __ptext11:
   998                           	callstack 0
   999  0009E2                     _ENVIA_CHAR:
  1000                           	callstack 28
  1001                           
  1002                           ;incstack = 0
  1003                           ;ENVIA_CHAR@dato stored from wreg
  1004  0009E2  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1005  0009E4                     
  1006                           ;../20221_sem9_el51_lcd.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20221_sem9_e
      +                          l51_lcd.X/LCD.c: 51: {;../20221_sem9_el51_lcd.X/LCD.c: 52:  unsigned char aux;;../20221_
      +                          sem9_el51_lcd.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  1007  0009E4  808C               	bsf	140,0,c	;volatile
  1008  0009E6                     
  1009                           ;../20221_sem9_el51_lcd.X/LCD.c: 54:  LEER_LCD();
  1010  0009E6  EC0E  F004         	call	_LEER_LCD	;wreg free
  1011  0009EA                     
  1012                           ;../20221_sem9_el51_lcd.X/LCD.c: 55:  TRISD = 0x00;
  1013  0009EA  0E00               	movlw	0
  1014  0009EC  6E95               	movwf	149,c	;volatile
  1015  0009EE                     
  1016                           ;../20221_sem9_el51_lcd.X/LCD.c: 56:         _delay(1200);
  1017  0009EE  0EF0               	movlw	240
  1018  0009F0                     u227:
  1019  0009F0  D000               	nop2	
  1020  0009F2  2EE8               	decfsz	wreg,f,c
  1021  0009F4  D7FD               	bra	u227
  1022  0009F6                     
  1023                           ;../20221_sem9_el51_lcd.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1024  0009F6  928C               	bcf	140,1,c	;volatile
  1025  0009F8                     
  1026                           ;../20221_sem9_el51_lcd.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1027  0009F8  948C               	bcf	140,2,c	;volatile
  1028  0009FA                     
  1029                           ;../20221_sem9_el51_lcd.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1030  0009FA  808C               	bsf	140,0,c	;volatile
  1031  0009FC                     
  1032                           ;../20221_sem9_el51_lcd.X/LCD.c: 61:  aux = dato & 0xF0;
  1033  0009FC  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1034  0009FE  0BF0               	andlw	240
  1035  000A00  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1036  000A02                     
  1037                           ;../20221_sem9_el51_lcd.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1038  000A02  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1039  000A04  EC50  F005         	call	_ENVIA_NIBBLE
  1040  000A08                     
  1041                           ;../20221_sem9_el51_lcd.X/LCD.c: 63:  aux = dato << 4;
  1042  000A08  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1043  000A0A  0BF0               	andlw	240
  1044  000A0C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1045  000A0E                     
  1046                           ;../20221_sem9_el51_lcd.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1047  000A0E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1048  000A10  EC50  F005         	call	_ENVIA_NIBBLE
  1049  000A14  0012               	return		;funcret
  1050  000A16                     __end_of_ENVIA_CHAR:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _LEER_LCD *****************
  1054 ;; Defined at:
  1055 ;;		line 121 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;  aux             1    0[COMRAM] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1069 ;;      Params:         0       0       0       0       0       0       0       0       0
  1070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1072 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1073 ;;Total ram usage:        1 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_ENVIA_CHAR
  1079 ;;		_ENVIA_LCD_CMD
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text12
  1084  00081C                     __ptext12:
  1085                           	callstack 0
  1086  00081C                     _LEER_LCD:
  1087                           	callstack 27
  1088  00081C                     
  1089                           ;../20221_sem9_el51_lcd.X/LCD.c: 123:  unsigned char aux;;../20221_sem9_el51_lcd.X/LCD.c
      +                          : 124:  TRISD = 0xF8;
  1090  00081C  0EF8               	movlw	248
  1091  00081E  6E95               	movwf	149,c	;volatile
  1092  000820                     
  1093                           ;../20221_sem9_el51_lcd.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1094  000820  908C               	bcf	140,0,c	;volatile
  1095  000822                     
  1096                           ;../20221_sem9_el51_lcd.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1097  000822  828C               	bsf	140,1,c	;volatile
  1098  000824                     
  1099                           ;../20221_sem9_el51_lcd.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1100  000824  848C               	bsf	140,2,c	;volatile
  1101  000826                     
  1102                           ;../20221_sem9_el51_lcd.X/LCD.c: 128:         _delay(1200);
  1103  000826  0EF0               	movlw	240
  1104  000828                     u237:
  1105  000828  D000               	nop2	
  1106  00082A  2EE8               	decfsz	wreg,f,c
  1107  00082C  D7FD               	bra	u237
  1108  00082E                     
  1109                           ;../20221_sem9_el51_lcd.X/LCD.c: 130:  aux = PORTD;
  1110  00082E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1111  000832                     
  1112                           ;../20221_sem9_el51_lcd.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1113  000832  948C               	bcf	140,2,c	;volatile
  1114  000834                     
  1115                           ;../20221_sem9_el51_lcd.X/LCD.c: 132:         _delay(1200);
  1116  000834  0EF0               	movlw	240
  1117  000836                     u247:
  1118  000836  D000               	nop2	
  1119  000838  2EE8               	decfsz	wreg,f,c
  1120  00083A  D7FD               	bra	u247
  1121  00083C                     
  1122                           ;../20221_sem9_el51_lcd.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1123  00083C  848C               	bsf	140,2,c	;volatile
  1124  00083E                     
  1125                           ;../20221_sem9_el51_lcd.X/LCD.c: 135:         _delay(1200);
  1126  00083E  0EF0               	movlw	240
  1127  000840                     u257:
  1128  000840  D000               	nop2	
  1129  000842  2EE8               	decfsz	wreg,f,c
  1130  000844  D7FD               	bra	u257
  1131  000846                     
  1132                           ;../20221_sem9_el51_lcd.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1133  000846  948C               	bcf	140,2,c	;volatile
  1134  000848                     l809:
  1135                           
  1136                           ;../20221_sem9_el51_lcd.X/LCD.c: 138:  aux = aux & 0x80;
  1137  000848  5001               	movf	LEER_LCD@aux^0,w,c
  1138  00084A  0B80               	andlw	128
  1139  00084C  6E01               	movwf	LEER_LCD@aux^0,c
  1140                           
  1141                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1142  00084E  EF3D  F004         	goto	l823
  1143  000852                     l104:
  1144                           
  1145                           ;../20221_sem9_el51_lcd.X/LCD.c: 140:         {;../20221_sem9_el51_lcd.X/LCD.c: 141:    
      +                                   LATDbits.LATD2 = 1;
  1146  000852  848C               	bsf	140,2,c	;volatile
  1147  000854                     
  1148                           ;../20221_sem9_el51_lcd.X/LCD.c: 142:             _delay(1200);
  1149  000854  0EF0               	movlw	240
  1150  000856                     u267:
  1151  000856  D000               	nop2	
  1152  000858  2EE8               	decfsz	wreg,f,c
  1153  00085A  D7FD               	bra	u267
  1154  00085C                     
  1155                           ;../20221_sem9_el51_lcd.X/LCD.c: 143:             aux = PORTD;
  1156  00085C  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1157  000860                     
  1158                           ;../20221_sem9_el51_lcd.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1159  000860  948C               	bcf	140,2,c	;volatile
  1160                           
  1161                           ;../20221_sem9_el51_lcd.X/LCD.c: 145:             _delay(1200);
  1162  000862  0EF0               	movlw	240
  1163  000864                     u277:
  1164  000864  D000               	nop2	
  1165  000866  2EE8               	decfsz	wreg,f,c
  1166  000868  D7FD               	bra	u277
  1167  00086A                     
  1168                           ;../20221_sem9_el51_lcd.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1169  00086A  848C               	bsf	140,2,c	;volatile
  1170                           
  1171                           ;../20221_sem9_el51_lcd.X/LCD.c: 147:             _delay(1200);
  1172  00086C  0EF0               	movlw	240
  1173  00086E                     u287:
  1174  00086E  D000               	nop2	
  1175  000870  2EE8               	decfsz	wreg,f,c
  1176  000872  D7FD               	bra	u287
  1177  000874                     
  1178                           ;../20221_sem9_el51_lcd.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1179  000874  948C               	bcf	140,2,c	;volatile
  1180  000876  EF24  F004         	goto	l809
  1181  00087A                     l823:
  1182                           
  1183                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1184  00087A  0E80               	movlw	128
  1185  00087C  1801               	xorwf	LEER_LCD@aux^0,w,c
  1186  00087E  B4D8               	btfsc	status,2,c
  1187  000880  EF44  F004         	goto	u11
  1188  000884  EF46  F004         	goto	u10
  1189  000888                     u11:
  1190  000888  EF29  F004         	goto	l104
  1191  00088C                     u10:
  1192  00088C  0012               	return		;funcret
  1193  00088E                     __end_of_LEER_LCD:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _ENVIA_NIBBLE *****************
  1197 ;; Defined at:
  1198 ;;		line 93 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;  dato            1    wreg     unsigned char 
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  dato            1    0[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1212 ;;      Params:         0       0       0       0       0       0       0       0       0
  1213 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1215 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1216 ;;Total ram usage:        1 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_ENVIA_CHAR
  1222 ;;		_LCD_CONFIG
  1223 ;;		_ENVIA_LCD_CMD
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           	psect	text13
  1228  000AA0                     __ptext13:
  1229                           	callstack 0
  1230  000AA0                     _ENVIA_NIBBLE:
  1231                           	callstack 28
  1232                           
  1233                           ;incstack = 0
  1234                           ;ENVIA_NIBBLE@dato stored from wreg
  1235  000AA0  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1236  000AA2                     
  1237                           ;../20221_sem9_el51_lcd.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20221_sem9
      +                          _el51_lcd.X/LCD.c: 94: {;../20221_sem9_el51_lcd.X/LCD.c: 95:  LATD &= 0x0F;
  1238  000AA2  0E0F               	movlw	15
  1239  000AA4  168C               	andwf	140,f,c	;volatile
  1240                           
  1241                           ;../20221_sem9_el51_lcd.X/LCD.c: 96:  dato &= 0xF0;
  1242  000AA6  0EF0               	movlw	240
  1243  000AA8  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1244                           
  1245                           ;../20221_sem9_el51_lcd.X/LCD.c: 97:  LATD|= dato;
  1246  000AAA  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1247  000AAC  128C               	iorwf	140,f,c	;volatile
  1248  000AAE                     
  1249                           ;../20221_sem9_el51_lcd.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1250  000AAE  848C               	bsf	140,2,c	;volatile
  1251  000AB0                     
  1252                           ;../20221_sem9_el51_lcd.X/LCD.c: 100:         _delay(1200);
  1253  000AB0  0EF0               	movlw	240
  1254  000AB2                     u297:
  1255  000AB2  D000               	nop2	
  1256  000AB4  2EE8               	decfsz	wreg,f,c
  1257  000AB6  D7FD               	bra	u297
  1258  000AB8                     
  1259                           ;../20221_sem9_el51_lcd.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1260  000AB8  948C               	bcf	140,2,c	;volatile
  1261  000ABA  0012               	return		;funcret
  1262  000ABC                     __end_of_ENVIA_NIBBLE:
  1263                           	callstack 0
  1264                           
  1265                           	psect	rparam
  1266  0000                     
  1267                           	psect	idloc
  1268                           
  1269                           ;Config register IDLOC0 @ 0x200000
  1270                           ;	unspecified, using default values
  1271  200000                     	org	2097152
  1272  200000  FF                 	db	255
  1273                           
  1274                           ;Config register IDLOC1 @ 0x200001
  1275                           ;	unspecified, using default values
  1276  200001                     	org	2097153
  1277  200001  FF                 	db	255
  1278                           
  1279                           ;Config register IDLOC2 @ 0x200002
  1280                           ;	unspecified, using default values
  1281  200002                     	org	2097154
  1282  200002  FF                 	db	255
  1283                           
  1284                           ;Config register IDLOC3 @ 0x200003
  1285                           ;	unspecified, using default values
  1286  200003                     	org	2097155
  1287  200003  FF                 	db	255
  1288                           
  1289                           ;Config register IDLOC4 @ 0x200004
  1290                           ;	unspecified, using default values
  1291  200004                     	org	2097156
  1292  200004  FF                 	db	255
  1293                           
  1294                           ;Config register IDLOC5 @ 0x200005
  1295                           ;	unspecified, using default values
  1296  200005                     	org	2097157
  1297  200005  FF                 	db	255
  1298                           
  1299                           ;Config register IDLOC6 @ 0x200006
  1300                           ;	unspecified, using default values
  1301  200006                     	org	2097158
  1302  200006  FF                 	db	255
  1303                           
  1304                           ;Config register IDLOC7 @ 0x200007
  1305                           ;	unspecified, using default values
  1306  200007                     	org	2097159
  1307  200007  FF                 	db	255
  1308                           
  1309                           	psect	config
  1310                           
  1311                           ;Config register CONFIG1L @ 0x300000
  1312                           ;	PLL Prescaler Selection bits
  1313                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1314                           ;	System Clock Postscaler Selection bits
  1315                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1316                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1317                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1318  300000                     	org	3145728
  1319  300000  00                 	db	0
  1320                           
  1321                           ;Config register CONFIG1H @ 0x300001
  1322                           ;	Oscillator Selection bits
  1323                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1324                           ;	Fail-Safe Clock Monitor Enable bit
  1325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1326                           ;	Internal/External Oscillator Switchover bit
  1327                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1328  300001                     	org	3145729
  1329  300001  02                 	db	2
  1330                           
  1331                           ;Config register CONFIG2L @ 0x300002
  1332                           ;	Power-up Timer Enable bit
  1333                           ;	PWRT = ON, PWRT enabled
  1334                           ;	Brown-out Reset Enable bits
  1335                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1336                           ;	Brown-out Reset Voltage bits
  1337                           ;	BORV = 3, Minimum setting 2.05V
  1338                           ;	USB Voltage Regulator Enable bit
  1339                           ;	VREGEN = OFF, USB voltage regulator disabled
  1340  300002                     	org	3145730
  1341  300002  18                 	db	24
  1342                           
  1343                           ;Config register CONFIG2H @ 0x300003
  1344                           ;	Watchdog Timer Enable bit
  1345                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1346                           ;	Watchdog Timer Postscale Select bits
  1347                           ;	WDTPS = 32768, 1:32768
  1348  300003                     	org	3145731
  1349  300003  1E                 	db	30
  1350                           
  1351                           ; Padding undefined space
  1352  300004                     	org	3145732
  1353  300004  FF                 	db	255
  1354                           
  1355                           ;Config register CONFIG3H @ 0x300005
  1356                           ;	CCP2 MUX bit
  1357                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1358                           ;	PORTB A/D Enable bit
  1359                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1360                           ;	Low-Power Timer 1 Oscillator Enable bit
  1361                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1362                           ;	MCLR Pin Enable bit
  1363                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1364  300005                     	org	3145733
  1365  300005  81                 	db	129
  1366                           
  1367                           ;Config register CONFIG4L @ 0x300006
  1368                           ;	Stack Full/Underflow Reset Enable bit
  1369                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1370                           ;	Single-Supply ICSP Enable bit
  1371                           ;	LVP = OFF, Single-Supply ICSP disabled
  1372                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1373                           ;	ICPRT = OFF, ICPORT disabled
  1374                           ;	Extended Instruction Set Enable bit
  1375                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1376                           ;	Background Debugger Enable bit
  1377                           ;	DEBUG = 0x1, unprogrammed default
  1378  300006                     	org	3145734
  1379  300006  81                 	db	129
  1380                           
  1381                           ; Padding undefined space
  1382  300007                     	org	3145735
  1383  300007  FF                 	db	255
  1384                           
  1385                           ;Config register CONFIG5L @ 0x300008
  1386                           ;	Code Protection bit
  1387                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1388                           ;	Code Protection bit
  1389                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1390                           ;	Code Protection bit
  1391                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1392                           ;	Code Protection bit
  1393                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1394  300008                     	org	3145736
  1395  300008  0F                 	db	15
  1396                           
  1397                           ;Config register CONFIG5H @ 0x300009
  1398                           ;	Boot Block Code Protection bit
  1399                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1400                           ;	Data EEPROM Code Protection bit
  1401                           ;	CPD = OFF, Data EEPROM is not code-protected
  1402  300009                     	org	3145737
  1403  300009  C0                 	db	192
  1404                           
  1405                           ;Config register CONFIG6L @ 0x30000A
  1406                           ;	Write Protection bit
  1407                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1408                           ;	Write Protection bit
  1409                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1410                           ;	Write Protection bit
  1411                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1412                           ;	Write Protection bit
  1413                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1414  30000A                     	org	3145738
  1415  30000A  0F                 	db	15
  1416                           
  1417                           ;Config register CONFIG6H @ 0x30000B
  1418                           ;	Configuration Register Write Protection bit
  1419                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1420                           ;	Boot Block Write Protection bit
  1421                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1422                           ;	Data EEPROM Write Protection bit
  1423                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1424  30000B                     	org	3145739
  1425  30000B  E0                 	db	224
  1426                           
  1427                           ;Config register CONFIG7L @ 0x30000C
  1428                           ;	Table Read Protection bit
  1429                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1430                           ;	Table Read Protection bit
  1431                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1432                           ;	Table Read Protection bit
  1433                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1434                           ;	Table Read Protection bit
  1435                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1436  30000C                     	org	3145740
  1437  30000C  0F                 	db	15
  1438                           
  1439                           ;Config register CONFIG7H @ 0x30000D
  1440                           ;	Boot Block Table Read Protection bit
  1441                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1442  30000D                     	org	3145741
  1443  30000D  40                 	db	64
  1444                           tosu	equ	0xFFF
  1445                           tosh	equ	0xFFE
  1446                           tosl	equ	0xFFD
  1447                           stkptr	equ	0xFFC
  1448                           pclatu	equ	0xFFB
  1449                           pclath	equ	0xFFA
  1450                           pcl	equ	0xFF9
  1451                           tblptru	equ	0xFF8
  1452                           tblptrh	equ	0xFF7
  1453                           tblptrl	equ	0xFF6
  1454                           tablat	equ	0xFF5
  1455                           prodh	equ	0xFF4
  1456                           prodl	equ	0xFF3
  1457                           indf0	equ	0xFEF
  1458                           postinc0	equ	0xFEE
  1459                           postdec0	equ	0xFED
  1460                           preinc0	equ	0xFEC
  1461                           plusw0	equ	0xFEB
  1462                           fsr0h	equ	0xFEA
  1463                           fsr0l	equ	0xFE9
  1464                           wreg	equ	0xFE8
  1465                           indf1	equ	0xFE7
  1466                           postinc1	equ	0xFE6
  1467                           postdec1	equ	0xFE5
  1468                           preinc1	equ	0xFE4
  1469                           plusw1	equ	0xFE3
  1470                           fsr1h	equ	0xFE2
  1471                           fsr1l	equ	0xFE1
  1472                           bsr	equ	0xFE0
  1473                           indf2	equ	0xFDF
  1474                           postinc2	equ	0xFDE
  1475                           postdec2	equ	0xFDD
  1476                           preinc2	equ	0xFDC
  1477                           plusw2	equ	0xFDB
  1478                           fsr2h	equ	0xFDA
  1479                           fsr2l	equ	0xFD9
  1480                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[9]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
                        _titileo_RC0
 ---------------------------------------------------------------------------------
 (1) _titileo_RC0                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _titileo_RC0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          6A      0       0      20        0.0%
BITBIGSFRlh          7      0       0      21        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BITBIGSFRlll        23      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 18 12:33:42 2022

                     l23 0ADC                       l26 0A9E                       l61 09AC  
                     l29 0A46                       l74 0AD0                       l91 0AD8  
                     l85 0972                       l94 08EC                       l79 0A76  
                     l88 0A14                       l97 0ABA                       u10 088C  
                     u11 0888                       u20 0A5A                       u21 0A56  
                     u30 0A70                       u31 0A6C            ENVIA_CHAR@aux 0003  
                    l100 09E0                      l104 0852                      l106 088C  
                    l801 0834                      l811 0854                      l803 083C  
                    l813 085C                      l805 083E                      l901 09F8  
                    l831 0AB8                      l815 0860                      l823 087A  
                    l807 0846                      l911 0A0E                      l903 09FA  
                    l825 0AA2                      l817 086A                      l809 0848  
                    l905 09FC                      l841 09C2                      l833 09B0  
                    l913 0ADA                      l921 0A90                      l827 0AAE  
                    l819 0874                      l907 0A02                      l851 09D4  
                    l843 09C4                      l835 09B2                      l923 0A94  
                    l915 0A78                      l931 0A2E                      l829 0AB0  
                    l909 0A08                      l853 09DA                      l845 09C6  
                    l837 09B6                      l861 08A6                      l925 0A98  
                    l917 0A7C                      l791 0822                      l847 09C8  
                    l839 09BA                      l871 08D4                      l863 08BA  
                    l855 088E                      l919 0A80                      l927 0A16  
                    l793 0824                      l849 09CE                      l881 0ACA  
                    l873 08DA                      l865 08C2                      l857 0892  
                    l929 0A18                      l795 0826                      l787 081C  
                    l891 09E4                      l883 0A4A                      l875 08E0  
                    l867 08C8                      l859 0898                      l797 082E  
                    l789 0820                      l893 09E6                      l885 0A5A  
                    l877 08E6                      l869 08CE                      l799 0832  
                    l895 09EA                      l879 0AD2                      l887 0A60  
                    l897 09EE                      l889 0A70                      l899 09F6  
                    l995 0976                      l997 0986                      l999 0992  
                    u120 0986                      u121 0982                      u130 09A4  
                    u131 09A0                      u140 0972                      u141 096E  
                    u207 08BC                      u217 09BC                      u227 09F0  
                    u237 0828                      u157 0A22                      u247 0836  
                    u167 0A3A                      u257 0840                      u177 0A86  
                    u267 0856                      u187 089E                      u277 0864  
                    u197 08AC                      u287 086E                      u297 0AB2  
            LEER_LCD@aux 0001                      wreg 000FE8             ?_CURSOR_HOME 0001  
         ??_ENVIA_NIBBLE 0001           ENVIA_CHAR@dato 0002                     l1001 09A4  
                   l1003 0936                     l1011 08EE                     l1005 0942  
                   l1021 091A                     l1013 08F2                     l1007 095E  
                   l1023 092A                     l1015 08F6                     l1009 0960  
                   l1017 0900                     l1019 0910                     STR_1 0801  
                   STR_2 0812                     _LATD 000F8C                     _main 08EE  
                   start 0000            ?_CURSOR_ONOFF 0001             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0002         __end_of_LEER_LCD 088E                    ?_main 0001  
                  _PORTD 000F83                    _TRISD 000F95              ?_POS_CURSOR 0004  
                  tablat 000FF5                    status 000FD8           ??_CURSOR_ONOFF 0004  
        __initialization 0ABC             __end_of_main 0936          _ESCRIBE_MENSAJE 0936  
                 ??_main 000A            __activetblptr 000001         __end_of_lcd_init 0AA0  
   __end_of_ENVIA_NIBBLE 0ABC                   isa$std 000001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0ABC             ??_LCD_CONFIG 0004            ___rparam_used 000001  
           ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 0974             ?_titileo_RC0 0001  
         __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0ADA         ENVIA_LCD_CMD@aux 0003  
   __end_of_CURSOR_ONOFF 0A78       __end_of_LCD_CONFIG 08EE       __end_of_ENVIA_CHAR 0A16  
             ??_LEER_LCD 0001         ENVIA_NIBBLE@dato 0001             ??_POS_CURSOR 0005  
              ?_lcd_init 0001                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0004        __end_of_configuro 0ADE             __psmallconst 0800  
  __end_of_ENVIA_LCD_CMD 09E2                  __pcinit 0ABC       __end_of_POS_CURSOR 09AE  
                __ramtop 0800                  __ptext0 08EE                  __ptext1 0A16  
                __ptext2 0A78                  __ptext3 088E                  __ptext4 0A48  
                __ptext5 0ACA                  __ptext6 0AD2                  __ptext7 0ADA  
                __ptext8 0974                  __ptext9 09AE               ??_lcd_init 0005  
           _ENVIA_NIBBLE 0AA0     end_of_initialization 0ABC                _TRISCbits 000F94  
           _CURSOR_ONOFF 0A48       CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004  
    start_initialization 0ABC        ENVIA_LCD_CMD@dato 0002      __end_of_CURSOR_HOME 0AD2  
              _configuro 0ADA              __smallconst 0800                 _LEER_LCD 081C  
               _LATCbits 000F8B                 _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009  
         POS_CURSOR@fila 0005               ?_configuro 0001              _CURSOR_HOME 0ACA  
               __Hrparam 0000            ??_titileo_RC0 0001                 __Lrparam 0000  
           __Lsmallconst 0800                 __ptext10 0936                 __ptext11 09E2  
               __ptext12 081C                 __ptext13 0AA0               _BORRAR_LCD 0AD2  
               _lcd_init 0A78               _LCD_CONFIG 088E               _ENVIA_CHAR 09E2  
               isa$xinst 000000            _ENVIA_LCD_CMD 09AE      __end_of_titileo_RC0 0A48  
            ??_configuro 0001        ??_ESCRIBE_MENSAJE 0007    ESCRIBE_MENSAJE@cadena 0004  
         ?_ENVIA_LCD_CMD 0001              ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001  
             _POS_CURSOR 0974              ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006  
            ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0004              _titileo_RC0 0A16  
