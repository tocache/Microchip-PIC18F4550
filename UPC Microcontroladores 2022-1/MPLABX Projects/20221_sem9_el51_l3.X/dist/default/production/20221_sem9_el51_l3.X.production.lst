

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 18 21:39:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     _LATD	set	3980
    63  0000                     _PORTD	set	3971
    64  0000                     _LATCbits	set	3979
    65  0000                     _TRISCbits	set	3988
    66  0000                     _TRISD	set	3989
    67  0000                     _LATDbits	set	3980
    68                           
    69                           	psect	smallconst
    70  000800                     __psmallconst:
    71                           	callstack 0
    72  000800  00                 	db	0
    73  000801                     STR_2:
    74  000801  49                 	db	73	;'I'
    75  000802  6E                 	db	110	;'n'
    76  000803  67                 	db	103	;'g'
    77  000804  2E                 	db	46
    78  000805  20                 	db	32
    79  000806  4D                 	db	77	;'M'
    80  000807  65                 	db	101	;'e'
    81  000808  63                 	db	99	;'c'
    82  000809  61                 	db	97	;'a'
    83  00080A  74                 	db	116	;'t'
    84  00080B  72                 	db	114	;'r'
    85  00080C  6F                 	db	111	;'o'
    86  00080D  6E                 	db	110	;'n'
    87  00080E  69                 	db	105	;'i'
    88  00080F  63                 	db	99	;'c'
    89  000810  61                 	db	97	;'a'
    90  000811  00                 	db	0
    91  000812                     STR_1:
    92  000812  48                 	db	72	;'H'
    93  000813  6F                 	db	111	;'o'
    94  000814  6C                 	db	108	;'l'
    95  000815  61                 	db	97	;'a'
    96  000816  20                 	db	32
    97  000817  55                 	db	85	;'U'
    98  000818  50                 	db	80	;'P'
    99  000819  43                 	db	67	;'C'
   100  00081A  69                 	db	105	;'i'
   101  00081B  6E                 	db	110	;'n'
   102  00081C  6F                 	db	111	;'o'
   103  00081D  00                 	db	0
   104  00081E  00                 	db	0	; dummy byte at the end
   105  0000                     
   106                           ; #config settings
   107                           
   108                           	psect	cinit
   109  000A66                     __pcinit:
   110                           	callstack 0
   111  000A66                     start_initialization:
   112                           	callstack 0
   113  000A66                     __initialization:
   114                           	callstack 0
   115  000A66                     end_of_initialization:
   116                           	callstack 0
   117  000A66                     __end_of__initialization:
   118                           	callstack 0
   119  000A66  0E00               	movlw	low (__Lsmallconst shr (0+16))
   120  000A68  6EF8               	movwf	tblptru,c
   121  000A6A  0E08               	movlw	high __Lsmallconst
   122  000A6C  6EF7               	movwf	tblptrh,c
   123  000A6E  0100               	movlb	0
   124  000A70  EF71  F004         	goto	_main	;jump to C main() function
   125                           
   126                           	psect	cstackCOMRAM
   127  000001                     __pcstackCOMRAM:
   128                           	callstack 0
   129  000001                     ??_titileo_RC0:
   130  000001                     ENVIA_NIBBLE@dato:
   131                           	callstack 0
   132  000001                     LEER_LCD@aux:
   133                           	callstack 0
   134                           
   135                           ; 1 bytes @ 0x0
   136  000001                     	ds	1
   137  000002                     ENVIA_CHAR@dato:
   138                           	callstack 0
   139  000002                     ENVIA_LCD_CMD@dato:
   140                           	callstack 0
   141                           
   142                           ; 1 bytes @ 0x1
   143  000002                     	ds	1
   144  000003                     ENVIA_CHAR@aux:
   145                           	callstack 0
   146  000003                     ENVIA_LCD_CMD@aux:
   147                           	callstack 0
   148                           
   149                           ; 1 bytes @ 0x2
   150  000003                     	ds	1
   151  000004                     ??_LCD_CONFIG:
   152  000004                     POS_CURSOR@columna:
   153                           	callstack 0
   154  000004                     CURSOR_ONOFF@estado:
   155                           	callstack 0
   156  000004                     ESCRIBE_MENSAJE@cadena:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x3
   160  000004                     	ds	1
   161  000005                     ??_lcd_init:
   162  000005                     POS_CURSOR@fila:
   163                           	callstack 0
   164  000005                     ESCRIBE_MENSAJE@tam:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  000005                     	ds	1
   169  000006                     ??_ESCRIBE_MENSAJE:
   170                           
   171                           ; 1 bytes @ 0x5
   172  000006                     	ds	1
   173  000007                     ESCRIBE_MENSAJE@i:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x6
   177  000007                     	ds	1
   178  000008                     
   179                           ; 1 bytes @ 0x7
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 26 in file "maincode.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels required when called: 4
   205 ;; This function calls:
   206 ;;		_ESCRIBE_MENSAJE
   207 ;;		_POS_CURSOR
   208 ;;		_configuro
   209 ;;		_lcd_init
   210 ;;		_titileo_RC0
   211 ;; This function is called by:
   212 ;;		Startup code after reset
   213 ;; This function uses a non-reentrant model
   214 ;;
   215                           
   216                           	psect	text0
   217  0008E2                     __ptext0:
   218                           	callstack 0
   219  0008E2                     _main:
   220                           	callstack 27
   221                           
   222                           ;maincode.c: 27:     configuro();
   223                           
   224                           ;incstack = 0
   225  0008E2  EC42  F005         	call	_configuro	;wreg free
   226                           
   227                           ;maincode.c: 28:     lcd_init();
   228  0008E6  ECDD  F004         	call	_lcd_init	;wreg free
   229  0008EA                     l983:
   230                           
   231                           ;maincode.c: 30:         POS_CURSOR(1,2);
   232  0008EA  0E02               	movlw	2
   233  0008EC  6E04               	movwf	POS_CURSOR@columna^0,c
   234  0008EE  0E01               	movlw	1
   235  0008F0  EC05  F005         	call	_POS_CURSOR
   236                           
   237                           ;maincode.c: 31:         ESCRIBE_MENSAJE("Hola UPCino",11);
   238  0008F4  0E12               	movlw	low STR_1
   239  0008F6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   240  0008F8  0E0B               	movlw	11
   241  0008FA  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   242  0008FC  ECF1  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   243                           
   244                           ;maincode.c: 32:         POS_CURSOR(2,0);
   245  000900  0E00               	movlw	0
   246  000902  6E04               	movwf	POS_CURSOR@columna^0,c
   247  000904  0E02               	movlw	2
   248  000906  EC05  F005         	call	_POS_CURSOR
   249                           
   250                           ;maincode.c: 33:         ESCRIBE_MENSAJE("Ing. Mecatronica",16);
   251  00090A  0E01               	movlw	low STR_2
   252  00090C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   253  00090E  0E10               	movlw	16
   254  000910  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   255  000912  ECF1  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   256                           
   257                           ;maincode.c: 34:         titileo_RC0();
   258  000916  EC8E  F004         	call	_titileo_RC0	;wreg free
   259  00091A  D7E7               	goto	l983
   260  00091C                     __end_of_main:
   261                           	callstack 0
   262                           
   263 ;; *************** function _titileo_RC0 *****************
   264 ;; Defined at:
   265 ;;		line 19 in file "maincode.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		wreg
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   279 ;;      Params:         0       0       0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0       0       0
   281 ;;      Temps:          2       0       0       0       0       0       0       0       0
   282 ;;      Totals:         2       0       0       0       0       0       0       0       0
   283 ;;Total ram usage:        2 bytes
   284 ;; Hardware stack levels used: 1
   285 ;; This function calls:
   286 ;;		Nothing
   287 ;; This function is called by:
   288 ;;		_main
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text1
   293  00091C                     __ptext1:
   294                           	callstack 0
   295  00091C                     _titileo_RC0:
   296                           	callstack 30
   297                           
   298                           ;maincode.c: 20:     LATCbits.LC0 = 1;
   299                           
   300                           ;incstack = 0
   301  00091C  808B               	bsf	139,0,c	;volatile
   302                           
   303                           ;maincode.c: 21:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   304  00091E  0E07               	movlw	7
   305  000920  6E02               	movwf	(??_titileo_RC0+1)^0,c
   306  000922  0E17               	movlw	23
   307  000924  6E01               	movwf	??_titileo_RC0^0,c
   308  000926  0E6A               	movlw	106
   309  000928                     u107:
   310  000928  2EE8               	decfsz	wreg,f,c
   311  00092A  D7FE               	bra	u107
   312  00092C  2E01               	decfsz	??_titileo_RC0^0,f,c
   313  00092E  D7FC               	bra	u107
   314  000930  2E02               	decfsz	(??_titileo_RC0+1)^0,f,c
   315  000932  D7FA               	bra	u107
   316  000934  D000               	nop2	
   317                           
   318                           ;maincode.c: 22:     LATCbits.LC0 = 0;
   319  000936  908B               	bcf	139,0,c	;volatile
   320                           
   321                           ;maincode.c: 23:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   322  000938  0E07               	movlw	7
   323  00093A  6E02               	movwf	(??_titileo_RC0+1)^0,c
   324  00093C  0E17               	movlw	23
   325  00093E  6E01               	movwf	??_titileo_RC0^0,c
   326  000940  0E6A               	movlw	106
   327  000942                     u117:
   328  000942  2EE8               	decfsz	wreg,f,c
   329  000944  D7FE               	bra	u117
   330  000946  2E01               	decfsz	??_titileo_RC0^0,f,c
   331  000948  D7FC               	bra	u117
   332  00094A  2E02               	decfsz	(??_titileo_RC0+1)^0,f,c
   333  00094C  D7FA               	bra	u117
   334  00094E  D000               	nop2	
   335  000950  0012               	return		;funcret
   336  000952                     __end_of_titileo_RC0:
   337                           	callstack 0
   338                           
   339 ;; *************** function _lcd_init *****************
   340 ;; Defined at:
   341 ;;		line 10 in file "maincode.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   355 ;;      Params:         0       0       0       0       0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0       0       0       0       0
   357 ;;      Temps:          1       0       0       0       0       0       0       0       0
   358 ;;      Totals:         1       0       0       0       0       0       0       0       0
   359 ;;Total ram usage:        1 bytes
   360 ;; Hardware stack levels used: 1
   361 ;; Hardware stack levels required when called: 3
   362 ;; This function calls:
   363 ;;		_BORRAR_LCD
   364 ;;		_CURSOR_HOME
   365 ;;		_CURSOR_ONOFF
   366 ;;		_LCD_CONFIG
   367 ;; This function is called by:
   368 ;;		_main
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372                           	psect	text2
   373  0009BA                     __ptext2:
   374                           	callstack 0
   375  0009BA                     _lcd_init:
   376                           	callstack 27
   377                           
   378                           ;maincode.c: 11:     TRISD = 0x00;
   379                           
   380                           ;incstack = 0
   381  0009BA  0E00               	movlw	0
   382  0009BC  6E95               	movwf	149,c	;volatile
   383                           
   384                           ;maincode.c: 12:     LCD_CONFIG();
   385  0009BE  EC41  F004         	call	_LCD_CONFIG	;wreg free
   386                           
   387                           ;maincode.c: 13:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   388  0009C2  0EEA               	movlw	234
   389  0009C4  6E05               	movwf	??_lcd_init^0,c
   390  0009C6  0EC3               	movlw	195
   391  0009C8                     u127:
   392  0009C8  2EE8               	decfsz	wreg,f,c
   393  0009CA  D7FE               	bra	u127
   394  0009CC  2E05               	decfsz	??_lcd_init^0,f,c
   395  0009CE  D7FC               	bra	u127
   396  0009D0  F000               	nop	
   397                           
   398                           ;maincode.c: 14:     BORRAR_LCD();
   399  0009D2  EC3E  F005         	call	_BORRAR_LCD	;wreg free
   400                           
   401                           ;maincode.c: 15:     CURSOR_HOME();
   402  0009D6  EC3A  F005         	call	_CURSOR_HOME	;wreg free
   403                           
   404                           ;maincode.c: 16:     CURSOR_ONOFF(1);
   405  0009DA  0E01               	movlw	1
   406  0009DC  EC17  F005         	call	_CURSOR_ONOFF
   407  0009E0  0012               	return		;funcret
   408  0009E2                     __end_of_lcd_init:
   409                           	callstack 0
   410                           
   411 ;; *************** function _LCD_CONFIG *****************
   412 ;; Defined at:
   413 ;;		line 72 in file "../20221_sem9_el51_lcd.X/LCD.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : 0/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   427 ;;      Params:         0       0       0       0       0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0       0       0       0       0
   429 ;;      Temps:          1       0       0       0       0       0       0       0       0
   430 ;;      Totals:         1       0       0       0       0       0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels used: 1
   433 ;; Hardware stack levels required when called: 2
   434 ;; This function calls:
   435 ;;		_ENVIA_LCD_CMD
   436 ;;		_ENVIA_NIBBLE
   437 ;; This function is called by:
   438 ;;		_lcd_init
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text3
   443  000882                     __ptext3:
   444                           	callstack 0
   445  000882                     _LCD_CONFIG:
   446                           	callstack 27
   447                           
   448                           ;../20221_sem9_el51_lcd.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   449                           
   450                           ;incstack = 0
   451  000882  908C               	bcf	140,0,c	;volatile
   452                           
   453                           ;../20221_sem9_el51_lcd.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   454  000884  928C               	bcf	140,1,c	;volatile
   455                           
   456                           ;../20221_sem9_el51_lcd.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   457  000886  0E30               	movlw	48
   458  000888  EC25  F005         	call	_ENVIA_NIBBLE
   459                           
   460                           ;../20221_sem9_el51_lcd.X/LCD.c: 77:         _delay(24000);
   461  00088C  0E20               	movlw	32
   462  00088E  6E04               	movwf	??_LCD_CONFIG^0,c
   463  000890  0E2A               	movlw	42
   464  000892                     u137:
   465  000892  2EE8               	decfsz	wreg,f,c
   466  000894  D7FE               	bra	u137
   467  000896  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   468  000898  D7FC               	bra	u137
   469                           
   470                           ;../20221_sem9_el51_lcd.X/LCD.c: 78:         _delay(24000);
   471  00089A  0E20               	movlw	32
   472  00089C  6E04               	movwf	??_LCD_CONFIG^0,c
   473  00089E  0E2A               	movlw	42
   474  0008A0                     u147:
   475  0008A0  2EE8               	decfsz	wreg,f,c
   476  0008A2  D7FE               	bra	u147
   477  0008A4  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   478  0008A6  D7FC               	bra	u147
   479                           
   480                           ;../20221_sem9_el51_lcd.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   481  0008A8  0E30               	movlw	48
   482  0008AA  EC25  F005         	call	_ENVIA_NIBBLE
   483                           
   484                           ;../20221_sem9_el51_lcd.X/LCD.c: 83:  _delay(1200);
   485  0008AE  0EF0               	movlw	240
   486  0008B0                     u157:
   487  0008B0  D000               	nop2	
   488  0008B2  2EE8               	decfsz	wreg,f,c
   489  0008B4  D7FD               	bra	u157
   490                           
   491                           ;../20221_sem9_el51_lcd.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   492  0008B6  0E30               	movlw	48
   493  0008B8  EC25  F005         	call	_ENVIA_NIBBLE
   494                           
   495                           ;../20221_sem9_el51_lcd.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   496  0008BC  0E20               	movlw	32
   497  0008BE  EC25  F005         	call	_ENVIA_NIBBLE
   498                           
   499                           ;../20221_sem9_el51_lcd.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   500  0008C2  0E01               	movlw	1
   501  0008C4  ECA9  F004         	call	_ENVIA_LCD_CMD
   502                           
   503                           ;../20221_sem9_el51_lcd.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   504  0008C8  0E28               	movlw	40
   505  0008CA  ECA9  F004         	call	_ENVIA_LCD_CMD
   506                           
   507                           ;../20221_sem9_el51_lcd.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   508  0008CE  0E0F               	movlw	15
   509  0008D0  ECA9  F004         	call	_ENVIA_LCD_CMD
   510                           
   511                           ;../20221_sem9_el51_lcd.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   512  0008D4  0E06               	movlw	6
   513  0008D6  ECA9  F004         	call	_ENVIA_LCD_CMD
   514                           
   515                           ;../20221_sem9_el51_lcd.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   516  0008DA  0E01               	movlw	1
   517  0008DC  ECA9  F004         	call	_ENVIA_LCD_CMD
   518  0008E0  0012               	return		;funcret
   519  0008E2                     __end_of_LCD_CONFIG:
   520                           	callstack 0
   521                           
   522 ;; *************** function _CURSOR_ONOFF *****************
   523 ;; Defined at:
   524 ;;		line 35 in file "../20221_sem9_el51_lcd.X/LCD.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  estado          1    wreg     unsigned char 
   527 ;; Auto vars:     Size  Location     Type
   528 ;;  estado          1    3[COMRAM] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   538 ;;      Params:         0       0       0       0       0       0       0       0       0
   539 ;;      Locals:         1       0       0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0
   541 ;;      Totals:         1       0       0       0       0       0       0       0       0
   542 ;;Total ram usage:        1 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 2
   545 ;; This function calls:
   546 ;;		_ENVIA_LCD_CMD
   547 ;; This function is called by:
   548 ;;		_lcd_init
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text4
   553  000A2E                     __ptext4:
   554                           	callstack 0
   555  000A2E                     _CURSOR_ONOFF:
   556                           	callstack 27
   557                           
   558                           ;incstack = 0
   559                           ;CURSOR_ONOFF@estado stored from wreg
   560  000A2E  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   561                           
   562                           ;../20221_sem9_el51_lcd.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 36: {;../20221_sem9_el51_lcd.X/LCD.c: 37:  if(estado == 0) ENVIA_LC
      +                          D_CMD(0x0E);
   563  000A30  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   564  000A32  A4D8               	btfss	status,2,c
   565  000A34  D003               	goto	l887
   566  000A36  0E0E               	movlw	14
   567  000A38  ECA9  F004         	call	_ENVIA_LCD_CMD
   568  000A3C                     l887:
   569                           
   570                           ;../20221_sem9_el51_lcd.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   571  000A3C  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   572  000A3E  A4D8               	btfss	status,2,c
   573  000A40  0012               	return	
   574  000A42  0E0C               	movlw	12
   575  000A44  ECA9  F004         	call	_ENVIA_LCD_CMD
   576  000A48  0012               	return		;funcret
   577  000A4A                     __end_of_CURSOR_ONOFF:
   578                           	callstack 0
   579                           
   580 ;; *************** function _CURSOR_HOME *****************
   581 ;; Defined at:
   582 ;;		line 30 in file "../20221_sem9_el51_lcd.X/LCD.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_ENVIA_LCD_CMD
   605 ;; This function is called by:
   606 ;;		_lcd_init
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text5
   611  000A74                     __ptext5:
   612                           	callstack 0
   613  000A74                     _CURSOR_HOME:
   614                           	callstack 27
   615                           
   616                           ;../20221_sem9_el51_lcd.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   617                           
   618                           ;incstack = 0
   619  000A74  0E02               	movlw	2
   620  000A76  ECA9  F004         	call	_ENVIA_LCD_CMD
   621  000A7A  0012               	return		;funcret
   622  000A7C                     __end_of_CURSOR_HOME:
   623                           	callstack 0
   624                           
   625 ;; *************** function _BORRAR_LCD *****************
   626 ;; Defined at:
   627 ;;		line 67 in file "../20221_sem9_el51_lcd.X/LCD.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_ENVIA_LCD_CMD
   650 ;; This function is called by:
   651 ;;		_lcd_init
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text6
   656  000A7C                     __ptext6:
   657                           	callstack 0
   658  000A7C                     _BORRAR_LCD:
   659                           	callstack 27
   660                           
   661                           ;../20221_sem9_el51_lcd.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   662                           
   663                           ;incstack = 0
   664  000A7C  0E01               	movlw	1
   665  000A7E  ECA9  F004         	call	_ENVIA_LCD_CMD
   666  000A82  0012               	return		;funcret
   667  000A84                     __end_of_BORRAR_LCD:
   668                           	callstack 0
   669                           
   670 ;; *************** function _configuro *****************
   671 ;; Defined at:
   672 ;;		line 6 in file "maincode.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		None
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   686 ;;      Params:         0       0       0       0       0       0       0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text7
   700  000A84                     __ptext7:
   701                           	callstack 0
   702  000A84                     _configuro:
   703                           	callstack 30
   704                           
   705                           ;maincode.c: 7:     TRISCbits.RC0 = 0;
   706                           
   707                           ;incstack = 0
   708  000A84  9094               	bcf	148,0,c	;volatile
   709  000A86  0012               	return		;funcret
   710  000A88                     __end_of_configuro:
   711                           	callstack 0
   712                           
   713 ;; *************** function _POS_CURSOR *****************
   714 ;; Defined at:
   715 ;;		line 6 in file "../20221_sem9_el51_lcd.X/LCD.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  fila            1    wreg     unsigned char 
   718 ;;  columna         1    3[COMRAM] unsigned char 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  fila            1    4[COMRAM] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         1       0       0       0       0       0       0       0       0
   731 ;;      Locals:         1       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         2       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        2 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 2
   737 ;; This function calls:
   738 ;;		_ENVIA_LCD_CMD
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text8
   745  000A0A                     __ptext8:
   746                           	callstack 0
   747  000A0A                     _POS_CURSOR:
   748                           	callstack 28
   749                           
   750                           ;incstack = 0
   751                           ;POS_CURSOR@fila stored from wreg
   752  000A0A  6E05               	movwf	POS_CURSOR@fila^0,c
   753                           
   754                           ;../20221_sem9_el51_lcd.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char col
      +                          umna);../20221_sem9_el51_lcd.X/LCD.c: 7: {;../20221_sem9_el51_lcd.X/LCD.c: 8:  if(fila =
      +                          = 1)
   755  000A0C  0405               	decf	POS_CURSOR@fila^0,w,c
   756  000A0E  A4D8               	btfss	status,2,c
   757  000A10  D005               	goto	l967
   758                           
   759                           ;../20221_sem9_el51_lcd.X/LCD.c: 9:  {;../20221_sem9_el51_lcd.X/LCD.c: 10:   ENVIA_LCD_C
      +                          MD(0x80+columna);
   760  000A12  5004               	movf	POS_CURSOR@columna^0,w,c
   761  000A14  0F80               	addlw	128
   762  000A16  ECA9  F004         	call	_ENVIA_LCD_CMD
   763                           
   764                           ;../20221_sem9_el51_lcd.X/LCD.c: 11:  }
   765  000A1A  0012               	return	
   766  000A1C                     l967:
   767  000A1C  0E02               	movlw	2
   768  000A1E  1805               	xorwf	POS_CURSOR@fila^0,w,c
   769  000A20  A4D8               	btfss	status,2,c
   770  000A22  0012               	return	
   771                           
   772                           ;../20221_sem9_el51_lcd.X/LCD.c: 13:  {;../20221_sem9_el51_lcd.X/LCD.c: 14:   ENVIA_LCD_
      +                          CMD(0xC0+columna);
   773  000A24  5004               	movf	POS_CURSOR@columna^0,w,c
   774  000A26  0FC0               	addlw	192
   775  000A28  ECA9  F004         	call	_ENVIA_LCD_CMD
   776  000A2C  0012               	return		;funcret
   777  000A2E                     __end_of_POS_CURSOR:
   778                           	callstack 0
   779                           
   780 ;; *************** function _ENVIA_LCD_CMD *****************
   781 ;; Defined at:
   782 ;;		line 104 in file "../20221_sem9_el51_lcd.X/LCD.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  dato            1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  dato            1    1[COMRAM] unsigned char 
   787 ;;  aux             1    2[COMRAM] unsigned char 
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2, status,0, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         2       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         2       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        2 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		_ENVIA_NIBBLE
   806 ;;		_LEER_LCD
   807 ;; This function is called by:
   808 ;;		_POS_CURSOR
   809 ;;		_CURSOR_HOME
   810 ;;		_CURSOR_ONOFF
   811 ;;		_BORRAR_LCD
   812 ;;		_LCD_CONFIG
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text9
   817  000952                     __ptext9:
   818                           	callstack 0
   819  000952                     _ENVIA_LCD_CMD:
   820                           	callstack 27
   821                           
   822                           ;incstack = 0
   823                           ;ENVIA_LCD_CMD@dato stored from wreg
   824  000952  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   825                           
   826                           ;../20221_sem9_el51_lcd.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20221_se
      +                          m9_el51_lcd.X/LCD.c: 105: {;../20221_sem9_el51_lcd.X/LCD.c: 106:  unsigned char aux;;../
      +                          20221_sem9_el51_lcd.X/LCD.c: 107:  LATDbits.LATD0 = 0;
   827  000954  908C               	bcf	140,0,c	;volatile
   828                           
   829                           ;../20221_sem9_el51_lcd.X/LCD.c: 108:  LEER_LCD();
   830  000956  EC10  F004         	call	_LEER_LCD	;wreg free
   831                           
   832                           ;../20221_sem9_el51_lcd.X/LCD.c: 109:  TRISD = 0b00000000;
   833  00095A  0E00               	movlw	0
   834  00095C  6E95               	movwf	149,c	;volatile
   835                           
   836                           ;../20221_sem9_el51_lcd.X/LCD.c: 111:         _delay(1200);
   837  00095E  0EF0               	movlw	240
   838  000960                     u167:
   839  000960  D000               	nop2	
   840  000962  2EE8               	decfsz	wreg,f,c
   841  000964  D7FD               	bra	u167
   842                           
   843                           ;../20221_sem9_el51_lcd.X/LCD.c: 112:         LATDbits.LATD1 = 0;
   844  000966  928C               	bcf	140,1,c	;volatile
   845                           
   846                           ;../20221_sem9_el51_lcd.X/LCD.c: 113:  LATDbits.LATD2 = 0;
   847  000968  948C               	bcf	140,2,c	;volatile
   848                           
   849                           ;../20221_sem9_el51_lcd.X/LCD.c: 114:  LATDbits.LATD0 = 0;
   850  00096A  908C               	bcf	140,0,c	;volatile
   851                           
   852                           ;../20221_sem9_el51_lcd.X/LCD.c: 115:  aux = dato & 0xF0;
   853  00096C  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   854  00096E  0BF0               	andlw	240
   855  000970  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   856                           
   857                           ;../20221_sem9_el51_lcd.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
   858  000972  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   859  000974  EC25  F005         	call	_ENVIA_NIBBLE
   860                           
   861                           ;../20221_sem9_el51_lcd.X/LCD.c: 117:  aux = dato<<4;
   862  000978  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   863  00097A  0BF0               	andlw	240
   864  00097C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   865                           
   866                           ;../20221_sem9_el51_lcd.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
   867  00097E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   868  000980  EC25  F005         	call	_ENVIA_NIBBLE
   869  000984  0012               	return		;funcret
   870  000986                     __end_of_ENVIA_LCD_CMD:
   871                           	callstack 0
   872                           
   873 ;; *************** function _ESCRIBE_MENSAJE *****************
   874 ;; Defined at:
   875 ;;		line 41 in file "../20221_sem9_el51_lcd.X/LCD.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   878 ;;		 -> STR_2(17), STR_1(12), 
   879 ;;  tam             1    4[COMRAM] unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  i               1    6[COMRAM] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   891 ;;      Params:         2       0       0       0       0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0       0       0       0       0
   893 ;;      Temps:          1       0       0       0       0       0       0       0       0
   894 ;;      Totals:         4       0       0       0       0       0       0       0       0
   895 ;;Total ram usage:        4 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 2
   898 ;; This function calls:
   899 ;;		_ENVIA_CHAR
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text10
   906  0009E2                     __ptext10:
   907                           	callstack 0
   908  0009E2                     _ESCRIBE_MENSAJE:
   909                           	callstack 28
   910                           
   911                           ;../20221_sem9_el51_lcd.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned ch
      +                          ar tam);../20221_sem9_el51_lcd.X/LCD.c: 42: {;../20221_sem9_el51_lcd.X/LCD.c: 43:  unsig
      +                          ned char i = 0;
   912                           
   913                           ;incstack = 0
   914  0009E2  0E00               	movlw	0
   915  0009E4  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
   916                           
   917                           ;../20221_sem9_el51_lcd.X/LCD.c: 44:  for(i = 0; i<tam; i++)
   918  0009E6  0E00               	movlw	0
   919  0009E8  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
   920  0009EA  D00A               	goto	l977
   921  0009EC                     l973:
   922                           
   923                           ;../20221_sem9_el51_lcd.X/LCD.c: 45:  {;../20221_sem9_el51_lcd.X/LCD.c: 46:   ENVIA_CHAR
      +                          (cadena[i]);
   924  0009EC  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
   925  0009EE  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
   926  0009F0  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
   927  0009F2  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   928  0009F6                     	if	0	;There is only one active tblptr byte
   929  0009F6                     	endif
   930  0009F6                     	if	0	;tblptru may be non-zero
   931  0009F6                     	endif
   932  0009F6                     	if	0	;tblptru may be non-zero
   933  0009F6                     	endif
   934  0009F6  0008               	tblrd		*
   935  0009F8  50F5               	movf	tablat,w,c
   936  0009FA  ECC3  F004         	call	_ENVIA_CHAR
   937                           
   938                           ;../20221_sem9_el51_lcd.X/LCD.c: 47:  }
   939  0009FE  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
   940  000A00                     l977:
   941  000A00  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   942  000A02  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   943  000A04  B0D8               	btfsc	status,0,c
   944  000A06  0012               	return	
   945  000A08  D7F1               	goto	l973
   946  000A0A                     __end_of_ESCRIBE_MENSAJE:
   947                           	callstack 0
   948                           
   949 ;; *************** function _ENVIA_CHAR *****************
   950 ;; Defined at:
   951 ;;		line 50 in file "../20221_sem9_el51_lcd.X/LCD.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  dato            1    wreg     unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  dato            1    1[COMRAM] unsigned char 
   956 ;;  aux             1    2[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         0       0       0       0       0       0       0       0       0
   967 ;;      Locals:         2       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 1
   973 ;; This function calls:
   974 ;;		_ENVIA_NIBBLE
   975 ;;		_LEER_LCD
   976 ;; This function is called by:
   977 ;;		_ESCRIBE_MENSAJE
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text11
   982  000986                     __ptext11:
   983                           	callstack 0
   984  000986                     _ENVIA_CHAR:
   985                           	callstack 28
   986                           
   987                           ;incstack = 0
   988                           ;ENVIA_CHAR@dato stored from wreg
   989  000986  6E02               	movwf	ENVIA_CHAR@dato^0,c
   990                           
   991                           ;../20221_sem9_el51_lcd.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20221_sem9_e
      +                          l51_lcd.X/LCD.c: 51: {;../20221_sem9_el51_lcd.X/LCD.c: 52:  unsigned char aux;;../20221_
      +                          sem9_el51_lcd.X/LCD.c: 53:  LATDbits.LATD0 = 1;
   992  000988  808C               	bsf	140,0,c	;volatile
   993                           
   994                           ;../20221_sem9_el51_lcd.X/LCD.c: 54:  LEER_LCD();
   995  00098A  EC10  F004         	call	_LEER_LCD	;wreg free
   996                           
   997                           ;../20221_sem9_el51_lcd.X/LCD.c: 55:  TRISD = 0x00;
   998  00098E  0E00               	movlw	0
   999  000990  6E95               	movwf	149,c	;volatile
  1000                           
  1001                           ;../20221_sem9_el51_lcd.X/LCD.c: 56:         _delay(1200);
  1002  000992  0EF0               	movlw	240
  1003  000994                     u177:
  1004  000994  D000               	nop2	
  1005  000996  2EE8               	decfsz	wreg,f,c
  1006  000998  D7FD               	bra	u177
  1007                           
  1008                           ;../20221_sem9_el51_lcd.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1009  00099A  928C               	bcf	140,1,c	;volatile
  1010                           
  1011                           ;../20221_sem9_el51_lcd.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1012  00099C  948C               	bcf	140,2,c	;volatile
  1013                           
  1014                           ;../20221_sem9_el51_lcd.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1015  00099E  808C               	bsf	140,0,c	;volatile
  1016                           
  1017                           ;../20221_sem9_el51_lcd.X/LCD.c: 61:  aux = dato & 0xF0;
  1018  0009A0  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1019  0009A2  0BF0               	andlw	240
  1020  0009A4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1021                           
  1022                           ;../20221_sem9_el51_lcd.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1023  0009A6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1024  0009A8  EC25  F005         	call	_ENVIA_NIBBLE
  1025                           
  1026                           ;../20221_sem9_el51_lcd.X/LCD.c: 63:  aux = dato << 4;
  1027  0009AC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1028  0009AE  0BF0               	andlw	240
  1029  0009B0  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1030                           
  1031                           ;../20221_sem9_el51_lcd.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1032  0009B2  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1033  0009B4  EC25  F005         	call	_ENVIA_NIBBLE
  1034  0009B8  0012               	return		;funcret
  1035  0009BA                     __end_of_ENVIA_CHAR:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _LEER_LCD *****************
  1039 ;; Defined at:
  1040 ;;		line 121 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  aux             1    0[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:        1 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_ENVIA_CHAR
  1064 ;;		_ENVIA_LCD_CMD
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text12
  1069  000820                     __ptext12:
  1070                           	callstack 0
  1071  000820                     _LEER_LCD:
  1072                           	callstack 27
  1073                           
  1074                           ;../20221_sem9_el51_lcd.X/LCD.c: 123:  unsigned char aux;;../20221_sem9_el51_lcd.X/LCD.c
      +                          : 124:  TRISD = 0xF8;
  1075                           
  1076                           ;incstack = 0
  1077  000820  0EF8               	movlw	248
  1078  000822  6E95               	movwf	149,c	;volatile
  1079                           
  1080                           ;../20221_sem9_el51_lcd.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1081  000824  908C               	bcf	140,0,c	;volatile
  1082                           
  1083                           ;../20221_sem9_el51_lcd.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1084  000826  828C               	bsf	140,1,c	;volatile
  1085                           
  1086                           ;../20221_sem9_el51_lcd.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1087  000828  848C               	bsf	140,2,c	;volatile
  1088                           
  1089                           ;../20221_sem9_el51_lcd.X/LCD.c: 128:         _delay(1200);
  1090  00082A  0EF0               	movlw	240
  1091  00082C                     u187:
  1092  00082C  D000               	nop2	
  1093  00082E  2EE8               	decfsz	wreg,f,c
  1094  000830  D7FD               	bra	u187
  1095                           
  1096                           ;../20221_sem9_el51_lcd.X/LCD.c: 130:  aux = PORTD;
  1097  000832  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1098                           
  1099                           ;../20221_sem9_el51_lcd.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1100  000836  948C               	bcf	140,2,c	;volatile
  1101                           
  1102                           ;../20221_sem9_el51_lcd.X/LCD.c: 132:         _delay(1200);
  1103  000838  0EF0               	movlw	240
  1104  00083A                     u197:
  1105  00083A  D000               	nop2	
  1106  00083C  2EE8               	decfsz	wreg,f,c
  1107  00083E  D7FD               	bra	u197
  1108                           
  1109                           ;../20221_sem9_el51_lcd.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1110  000840  848C               	bsf	140,2,c	;volatile
  1111                           
  1112                           ;../20221_sem9_el51_lcd.X/LCD.c: 135:         _delay(1200);
  1113  000842  0EF0               	movlw	240
  1114  000844                     u207:
  1115  000844  D000               	nop2	
  1116  000846  2EE8               	decfsz	wreg,f,c
  1117  000848  D7FD               	bra	u207
  1118  00084A                     l807:
  1119                           
  1120                           ;../20221_sem9_el51_lcd.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1121  00084A  948C               	bcf	140,2,c	;volatile
  1122                           
  1123                           ;../20221_sem9_el51_lcd.X/LCD.c: 138:  aux = aux & 0x80;
  1124  00084C  5001               	movf	LEER_LCD@aux^0,w,c
  1125  00084E  0B80               	andlw	128
  1126  000850  6E01               	movwf	LEER_LCD@aux^0,c
  1127                           
  1128                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1129  000852  D012               	goto	l823
  1130  000854                     l104:
  1131                           
  1132                           ;../20221_sem9_el51_lcd.X/LCD.c: 140:         {;../20221_sem9_el51_lcd.X/LCD.c: 141:    
      +                                   LATDbits.LATD2 = 1;
  1133  000854  848C               	bsf	140,2,c	;volatile
  1134                           
  1135                           ;../20221_sem9_el51_lcd.X/LCD.c: 142:             _delay(1200);
  1136  000856  0EF0               	movlw	240
  1137  000858                     u217:
  1138  000858  D000               	nop2	
  1139  00085A  2EE8               	decfsz	wreg,f,c
  1140  00085C  D7FD               	bra	u217
  1141                           
  1142                           ;../20221_sem9_el51_lcd.X/LCD.c: 143:             aux = PORTD;
  1143  00085E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1144                           
  1145                           ;../20221_sem9_el51_lcd.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1146  000862  948C               	bcf	140,2,c	;volatile
  1147                           
  1148                           ;../20221_sem9_el51_lcd.X/LCD.c: 145:             _delay(1200);
  1149  000864  0EF0               	movlw	240
  1150  000866                     u227:
  1151  000866  D000               	nop2	
  1152  000868  2EE8               	decfsz	wreg,f,c
  1153  00086A  D7FD               	bra	u227
  1154                           
  1155                           ;../20221_sem9_el51_lcd.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1156  00086C  848C               	bsf	140,2,c	;volatile
  1157                           
  1158                           ;../20221_sem9_el51_lcd.X/LCD.c: 147:             _delay(1200);
  1159  00086E  0EF0               	movlw	240
  1160  000870                     u237:
  1161  000870  D000               	nop2	
  1162  000872  2EE8               	decfsz	wreg,f,c
  1163  000874  D7FD               	bra	u237
  1164  000876  D7E9               	goto	l807
  1165  000878                     l823:
  1166                           
  1167                           ;../20221_sem9_el51_lcd.X/LCD.c: 139:  while(aux == 0x80)
  1168  000878  0E80               	movlw	128
  1169  00087A  1801               	xorwf	LEER_LCD@aux^0,w,c
  1170  00087C  A4D8               	btfss	status,2,c
  1171  00087E  0012               	return	
  1172  000880  D7E9               	goto	l104
  1173  000882                     __end_of_LEER_LCD:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _ENVIA_NIBBLE *****************
  1177 ;; Defined at:
  1178 ;;		line 93 in file "../20221_sem9_el51_lcd.X/LCD.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  dato            1    wreg     unsigned char 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  dato            1    0[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:        1 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_ENVIA_CHAR
  1202 ;;		_LCD_CONFIG
  1203 ;;		_ENVIA_LCD_CMD
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text13
  1208  000A4A                     __ptext13:
  1209                           	callstack 0
  1210  000A4A                     _ENVIA_NIBBLE:
  1211                           	callstack 28
  1212                           
  1213                           ;incstack = 0
  1214                           ;ENVIA_NIBBLE@dato stored from wreg
  1215  000A4A  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1216                           
  1217                           ;../20221_sem9_el51_lcd.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20221_sem9
      +                          _el51_lcd.X/LCD.c: 94: {;../20221_sem9_el51_lcd.X/LCD.c: 95:  LATD &= 0x0F;
  1218  000A4C  0E0F               	movlw	15
  1219  000A4E  168C               	andwf	140,f,c	;volatile
  1220                           
  1221                           ;../20221_sem9_el51_lcd.X/LCD.c: 96:  dato &= 0xF0;
  1222  000A50  0EF0               	movlw	240
  1223  000A52  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1224                           
  1225                           ;../20221_sem9_el51_lcd.X/LCD.c: 97:  LATD|= dato;
  1226  000A54  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1227  000A56  128C               	iorwf	140,f,c	;volatile
  1228                           
  1229                           ;../20221_sem9_el51_lcd.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1230  000A58  848C               	bsf	140,2,c	;volatile
  1231                           
  1232                           ;../20221_sem9_el51_lcd.X/LCD.c: 100:         _delay(1200);
  1233  000A5A  0EF0               	movlw	240
  1234  000A5C                     u247:
  1235  000A5C  D000               	nop2	
  1236  000A5E  2EE8               	decfsz	wreg,f,c
  1237  000A60  D7FD               	bra	u247
  1238                           
  1239                           ;../20221_sem9_el51_lcd.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1240  000A62  948C               	bcf	140,2,c	;volatile
  1241  000A64  0012               	return		;funcret
  1242  000A66                     __end_of_ENVIA_NIBBLE:
  1243                           	callstack 0
  1244                           
  1245                           	psect	rparam
  1246  0000                     
  1247                           	psect	idloc
  1248                           
  1249                           ;Config register IDLOC0 @ 0x200000
  1250                           ;	unspecified, using default values
  1251  200000                     	org	2097152
  1252  200000  FF                 	db	255
  1253                           
  1254                           ;Config register IDLOC1 @ 0x200001
  1255                           ;	unspecified, using default values
  1256  200001                     	org	2097153
  1257  200001  FF                 	db	255
  1258                           
  1259                           ;Config register IDLOC2 @ 0x200002
  1260                           ;	unspecified, using default values
  1261  200002                     	org	2097154
  1262  200002  FF                 	db	255
  1263                           
  1264                           ;Config register IDLOC3 @ 0x200003
  1265                           ;	unspecified, using default values
  1266  200003                     	org	2097155
  1267  200003  FF                 	db	255
  1268                           
  1269                           ;Config register IDLOC4 @ 0x200004
  1270                           ;	unspecified, using default values
  1271  200004                     	org	2097156
  1272  200004  FF                 	db	255
  1273                           
  1274                           ;Config register IDLOC5 @ 0x200005
  1275                           ;	unspecified, using default values
  1276  200005                     	org	2097157
  1277  200005  FF                 	db	255
  1278                           
  1279                           ;Config register IDLOC6 @ 0x200006
  1280                           ;	unspecified, using default values
  1281  200006                     	org	2097158
  1282  200006  FF                 	db	255
  1283                           
  1284                           ;Config register IDLOC7 @ 0x200007
  1285                           ;	unspecified, using default values
  1286  200007                     	org	2097159
  1287  200007  FF                 	db	255
  1288                           
  1289                           	psect	config
  1290                           
  1291                           ;Config register CONFIG1L @ 0x300000
  1292                           ;	PLL Prescaler Selection bits
  1293                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1294                           ;	System Clock Postscaler Selection bits
  1295                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1296                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1297                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1298  300000                     	org	3145728
  1299  300000  00                 	db	0
  1300                           
  1301                           ;Config register CONFIG1H @ 0x300001
  1302                           ;	Oscillator Selection bits
  1303                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1304                           ;	Fail-Safe Clock Monitor Enable bit
  1305                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1306                           ;	Internal/External Oscillator Switchover bit
  1307                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1308  300001                     	org	3145729
  1309  300001  02                 	db	2
  1310                           
  1311                           ;Config register CONFIG2L @ 0x300002
  1312                           ;	Power-up Timer Enable bit
  1313                           ;	PWRT = ON, PWRT enabled
  1314                           ;	Brown-out Reset Enable bits
  1315                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1316                           ;	Brown-out Reset Voltage bits
  1317                           ;	BORV = 3, Minimum setting 2.05V
  1318                           ;	USB Voltage Regulator Enable bit
  1319                           ;	VREGEN = OFF, USB voltage regulator disabled
  1320  300002                     	org	3145730
  1321  300002  18                 	db	24
  1322                           
  1323                           ;Config register CONFIG2H @ 0x300003
  1324                           ;	Watchdog Timer Enable bit
  1325                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1326                           ;	Watchdog Timer Postscale Select bits
  1327                           ;	WDTPS = 32768, 1:32768
  1328  300003                     	org	3145731
  1329  300003  1E                 	db	30
  1330                           
  1331                           ; Padding undefined space
  1332  300004                     	org	3145732
  1333  300004  FF                 	db	255
  1334                           
  1335                           ;Config register CONFIG3H @ 0x300005
  1336                           ;	CCP2 MUX bit
  1337                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1338                           ;	PORTB A/D Enable bit
  1339                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1340                           ;	Low-Power Timer 1 Oscillator Enable bit
  1341                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1342                           ;	MCLR Pin Enable bit
  1343                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1344  300005                     	org	3145733
  1345  300005  81                 	db	129
  1346                           
  1347                           ;Config register CONFIG4L @ 0x300006
  1348                           ;	Stack Full/Underflow Reset Enable bit
  1349                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1350                           ;	Single-Supply ICSP Enable bit
  1351                           ;	LVP = OFF, Single-Supply ICSP disabled
  1352                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1353                           ;	ICPRT = OFF, ICPORT disabled
  1354                           ;	Extended Instruction Set Enable bit
  1355                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1356                           ;	Background Debugger Enable bit
  1357                           ;	DEBUG = 0x1, unprogrammed default
  1358  300006                     	org	3145734
  1359  300006  81                 	db	129
  1360                           
  1361                           ; Padding undefined space
  1362  300007                     	org	3145735
  1363  300007  FF                 	db	255
  1364                           
  1365                           ;Config register CONFIG5L @ 0x300008
  1366                           ;	Code Protection bit
  1367                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1368                           ;	Code Protection bit
  1369                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1370                           ;	Code Protection bit
  1371                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1372                           ;	Code Protection bit
  1373                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1374  300008                     	org	3145736
  1375  300008  0F                 	db	15
  1376                           
  1377                           ;Config register CONFIG5H @ 0x300009
  1378                           ;	Boot Block Code Protection bit
  1379                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1380                           ;	Data EEPROM Code Protection bit
  1381                           ;	CPD = OFF, Data EEPROM is not code-protected
  1382  300009                     	org	3145737
  1383  300009  C0                 	db	192
  1384                           
  1385                           ;Config register CONFIG6L @ 0x30000A
  1386                           ;	Write Protection bit
  1387                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1388                           ;	Write Protection bit
  1389                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1390                           ;	Write Protection bit
  1391                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1392                           ;	Write Protection bit
  1393                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1394  30000A                     	org	3145738
  1395  30000A  0F                 	db	15
  1396                           
  1397                           ;Config register CONFIG6H @ 0x30000B
  1398                           ;	Configuration Register Write Protection bit
  1399                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1400                           ;	Boot Block Write Protection bit
  1401                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1402                           ;	Data EEPROM Write Protection bit
  1403                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1404  30000B                     	org	3145739
  1405  30000B  E0                 	db	224
  1406                           
  1407                           ;Config register CONFIG7L @ 0x30000C
  1408                           ;	Table Read Protection bit
  1409                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1410                           ;	Table Read Protection bit
  1411                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1412                           ;	Table Read Protection bit
  1413                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1414                           ;	Table Read Protection bit
  1415                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1416  30000C                     	org	3145740
  1417  30000C  0F                 	db	15
  1418                           
  1419                           ;Config register CONFIG7H @ 0x30000D
  1420                           ;	Boot Block Table Read Protection bit
  1421                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1422  30000D                     	org	3145741
  1423  30000D  40                 	db	64
  1424                           tosu	equ	0xFFF
  1425                           tosh	equ	0xFFE
  1426                           tosl	equ	0xFFD
  1427                           stkptr	equ	0xFFC
  1428                           pclatu	equ	0xFFB
  1429                           pclath	equ	0xFFA
  1430                           pcl	equ	0xFF9
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodh	equ	0xFF4
  1436                           prodl	equ	0xFF3
  1437                           indf0	equ	0xFEF
  1438                           postinc0	equ	0xFEE
  1439                           postdec0	equ	0xFED
  1440                           preinc0	equ	0xFEC
  1441                           plusw0	equ	0xFEB
  1442                           fsr0h	equ	0xFEA
  1443                           fsr0l	equ	0xFE9
  1444                           wreg	equ	0xFE8
  1445                           indf1	equ	0xFE7
  1446                           postinc1	equ	0xFE6
  1447                           postdec1	equ	0xFE5
  1448                           preinc1	equ	0xFE4
  1449                           plusw1	equ	0xFE3
  1450                           fsr1h	equ	0xFE2
  1451                           fsr1l	equ	0xFE1
  1452                           bsr	equ	0xFE0
  1453                           indf2	equ	0xFDF
  1454                           postinc2	equ	0xFDE
  1455                           postdec2	equ	0xFDD
  1456                           preinc2	equ	0xFDC
  1457                           plusw2	equ	0xFDB
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
                        _titileo_RC0
 ---------------------------------------------------------------------------------
 (1) _titileo_RC0                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     515
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _titileo_RC0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          6A      0       0      20        0.0%
BITBIGSFRlh          7      0       0      21        0.0%
BITBIGSFRllh         7      0       0      22        0.0%
BITBIGSFRlll        23      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 18 21:39:12 2022

          ENVIA_CHAR@aux 0003                      l104 0854                      l823 0878  
                    l807 084A                      l973 09EC                      l967 0A1C  
                    l887 0A3C                      l983 08EA                      l977 0A00  
                    u107 0928                      u117 0942                      u207 0844  
                    u127 09C8                      u217 0858                      u137 0892  
                    u227 0866                      u147 08A0                      u237 0870  
                    u157 08B0                      u247 0A5C                      u167 0960  
                    u177 0994                      u187 082C                      u197 083A  
            LEER_LCD@aux 0001                      wreg 000FE8             ?_CURSOR_HOME 0001  
         ??_ENVIA_NIBBLE 0001           ENVIA_CHAR@dato 0002                     STR_1 0812  
                   STR_2 0801                     _LATD 000F8C                     _main 08E2  
                   start 0000            ?_CURSOR_ONOFF 0001             ___param_bank 000000  
        ??_ENVIA_LCD_CMD 0002         __end_of_LEER_LCD 0882                    ?_main 0001  
                  _PORTD 000F83                    _TRISD 000F95              ?_POS_CURSOR 0004  
                  tablat 000FF5                    status 000FD8           ??_CURSOR_ONOFF 0004  
        __initialization 0A66             __end_of_main 091C          _ESCRIBE_MENSAJE 09E2  
                 ??_main 0008            __activetblptr 000001         __end_of_lcd_init 09E2  
   __end_of_ENVIA_NIBBLE 0A66                   isa$std 000001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0A66             ??_LCD_CONFIG 0004            ___rparam_used 000001  
           ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 0A0A             ?_titileo_RC0 0001  
         __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0A84         ENVIA_LCD_CMD@aux 0003  
   __end_of_CURSOR_ONOFF 0A4A       __end_of_LCD_CONFIG 08E2       __end_of_ENVIA_CHAR 09BA  
             ??_LEER_LCD 0001         ENVIA_NIBBLE@dato 0001             ??_POS_CURSOR 0005  
              ?_lcd_init 0001                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0004        __end_of_configuro 0A88             __psmallconst 0800  
  __end_of_ENVIA_LCD_CMD 0986                  __pcinit 0A66       __end_of_POS_CURSOR 0A2E  
                __ramtop 0800                  __ptext0 08E2                  __ptext1 091C  
                __ptext2 09BA                  __ptext3 0882                  __ptext4 0A2E  
                __ptext5 0A74                  __ptext6 0A7C                  __ptext7 0A84  
                __ptext8 0A0A                  __ptext9 0952               ??_lcd_init 0005  
           _ENVIA_NIBBLE 0A4A     end_of_initialization 0A66                _TRISCbits 000F94  
           _CURSOR_ONOFF 0A2E       CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004  
    start_initialization 0A66        ENVIA_LCD_CMD@dato 0002      __end_of_CURSOR_HOME 0A7C  
              _configuro 0A84              __smallconst 0800                 _LEER_LCD 0820  
               _LATCbits 000F8B                 _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0007  
         POS_CURSOR@fila 0005               ?_configuro 0001              _CURSOR_HOME 0A74  
               __Hrparam 0000            ??_titileo_RC0 0001                 __Lrparam 0000  
           __Lsmallconst 0800                 __ptext10 09E2                 __ptext11 0986  
               __ptext12 0820                 __ptext13 0A4A               _BORRAR_LCD 0A7C  
               _lcd_init 09BA               _LCD_CONFIG 0882               _ENVIA_CHAR 0986  
               isa$xinst 000000            _ENVIA_LCD_CMD 0952      __end_of_titileo_RC0 0952  
            ??_configuro 0001        ??_ESCRIBE_MENSAJE 0006    ESCRIBE_MENSAJE@cadena 0004  
         ?_ENVIA_LCD_CMD 0001              ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001  
             _POS_CURSOR 0A0A              ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0005  
            ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0004              _titileo_RC0 091C  
