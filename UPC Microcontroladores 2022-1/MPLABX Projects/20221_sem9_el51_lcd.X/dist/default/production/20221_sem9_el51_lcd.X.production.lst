

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 21:43:10 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATD	set	3980
    62  0000                     _PORTD	set	3971
    63  0000                     _LATDbits	set	3980
    64  0000                     _TRISD	set	3989
    65                           
    66                           	psect	smallconst
    67  000800                     __psmallconst:
    68                           	callstack 0
    69  000800  00                 	db	0
    70  000801                     STR_1:
    71  000801  48                 	db	72	;'H'
    72  000802  6F                 	db	111	;'o'
    73  000803  6C                 	db	108	;'l'
    74  000804  61                 	db	97	;'a'
    75  000805  20                 	db	32
    76  000806  55                 	db	85	;'U'
    77  000807  50                 	db	80	;'P'
    78  000808  4E                 	db	78	;'N'
    79  000809  00                 	db	0
    80  00080A  00                 	db	0	; dummy byte at the end
    81  0000                     
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85  000A5C                     __pcinit:
    86                           	callstack 0
    87  000A5C                     start_initialization:
    88                           	callstack 0
    89  000A5C                     __initialization:
    90                           	callstack 0
    91  000A5C                     end_of_initialization:
    92                           	callstack 0
    93  000A5C                     __end_of__initialization:
    94                           	callstack 0
    95  000A5C  0E00               	movlw	low (__Lsmallconst shr (0+16))
    96  000A5E  6EF8               	movwf	tblptru,c
    97  000A60  0E08               	movlw	high __Lsmallconst
    98  000A62  6EF7               	movwf	tblptrh,c
    99  000A64  0100               	movlb	0
   100  000A66  EFF7  F004         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	cstackCOMRAM
   103  000001                     __pcstackCOMRAM:
   104                           	callstack 0
   105  000001                     ENVIA_NIBBLE@dato:
   106                           	callstack 0
   107  000001                     LEER_LCD@aux:
   108                           	callstack 0
   109                           
   110                           ; 1 bytes @ 0x0
   111  000001                     	ds	1
   112  000002                     ENVIA_CHAR@dato:
   113                           	callstack 0
   114  000002                     ENVIA_LCD_CMD@dato:
   115                           	callstack 0
   116                           
   117                           ; 1 bytes @ 0x1
   118  000002                     	ds	1
   119  000003                     ENVIA_CHAR@aux:
   120                           	callstack 0
   121  000003                     ENVIA_LCD_CMD@aux:
   122                           	callstack 0
   123                           
   124                           ; 1 bytes @ 0x2
   125  000003                     	ds	1
   126  000004                     ??_LCD_CONFIG:
   127  000004                     POS_CURSOR@columna:
   128                           	callstack 0
   129  000004                     CURSOR_ONOFF@estado:
   130                           	callstack 0
   131  000004                     ESCRIBE_MENSAJE@cadena:
   132                           	callstack 0
   133                           
   134                           ; 2 bytes @ 0x3
   135  000004                     	ds	1
   136  000005                     ??_lcd_config:
   137  000005                     POS_CURSOR@fila:
   138                           	callstack 0
   139                           
   140                           ; 1 bytes @ 0x4
   141  000005                     	ds	1
   142  000006                     ESCRIBE_MENSAJE@tam:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x5
   146  000006                     	ds	1
   147  000007                     ??_ESCRIBE_MENSAJE:
   148                           
   149                           ; 1 bytes @ 0x6
   150  000007                     	ds	2
   151  000009                     ESCRIBE_MENSAJE@i:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x8
   155  000009                     	ds	1
   156  00000A                     
   157                           ; 1 bytes @ 0x9
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 19 in file "maincode.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   177 ;;      Params:         0       0       0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels required when called: 4
   183 ;; This function calls:
   184 ;;		_ESCRIBE_MENSAJE
   185 ;;		_POS_CURSOR
   186 ;;		_configuro
   187 ;;		_lcd_config
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194  0009EE                     __ptext0:
   195                           	callstack 0
   196  0009EE                     _main:
   197                           	callstack 27
   198  0009EE                     
   199                           ;maincode.c: 20:     configuro();
   200  0009EE  EC3D  F005         	call	_configuro	;wreg free
   201  0009F2                     
   202                           ;maincode.c: 21:     lcd_config();
   203  0009F2  EC0C  F005         	call	_lcd_config	;wreg free
   204  0009F6                     l994:
   205                           
   206                           ;maincode.c: 23:         POS_CURSOR(1, 3);
   207  0009F6  0E03               	movlw	3
   208  0009F8  6E04               	movwf	POS_CURSOR@columna^0,c
   209  0009FA  0E01               	movlw	1
   210  0009FC  EC8E  F004         	call	_POS_CURSOR
   211  000A00                     
   212                           ;maincode.c: 24:         ESCRIBE_MENSAJE("Hola UPN",8);
   213  000A00  0E01               	movlw	low STR_1
   214  000A02  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   215  000A04  0E08               	movlw	high STR_1
   216  000A06  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   217  000A08  0E08               	movlw	8
   218  000A0A  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   219  000A0C  EC6F  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   220  000A10  EFFB  F004         	goto	l994
   221  000A14  EF00  F000         	goto	start
   222  000A18                     __end_of_main:
   223                           	callstack 0
   224                           
   225 ;; *************** function _lcd_config *****************
   226 ;; Defined at:
   227 ;;		line 10 in file "maincode.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         0       0       0       0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0
   243 ;;      Temps:          1       0       0       0       0       0       0       0       0
   244 ;;      Totals:         1       0       0       0       0       0       0       0       0
   245 ;;Total ram usage:        1 bytes
   246 ;; Hardware stack levels used: 1
   247 ;; Hardware stack levels required when called: 3
   248 ;; This function calls:
   249 ;;		_BORRAR_LCD
   250 ;;		_CURSOR_HOME
   251 ;;		_CURSOR_ONOFF
   252 ;;		_LCD_CONFIG
   253 ;; This function is called by:
   254 ;;		_main
   255 ;; This function uses a non-reentrant model
   256 ;;
   257                           
   258                           	psect	text1
   259  000A18                     __ptext1:
   260                           	callstack 0
   261  000A18                     _lcd_config:
   262                           	callstack 27
   263  000A18                     
   264                           ;maincode.c: 11:     TRISD = 0x00;
   265  000A18  0E00               	movlw	0
   266  000A1A  6E95               	movwf	149,c	;volatile
   267  000A1C                     
   268                           ;maincode.c: 12:     LCD_CONFIG();
   269  000A1C  EC3F  F004         	call	_LCD_CONFIG	;wreg free
   270  000A20                     
   271                           ;maincode.c: 13:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   272  000A20  0EEA               	movlw	234
   273  000A22  6E05               	movwf	??_lcd_config^0,c
   274  000A24  0EC3               	movlw	195
   275  000A26                     u157:
   276  000A26  2EE8               	decfsz	wreg,f,c
   277  000A28  D7FE               	bra	u157
   278  000A2A  2E05               	decfsz	??_lcd_config^0,f,c
   279  000A2C  D7FC               	bra	u157
   280  000A2E  F000               	nop	
   281  000A30                     
   282                           ;maincode.c: 14:     BORRAR_LCD();
   283  000A30  EC39  F005         	call	_BORRAR_LCD	;wreg free
   284  000A34                     
   285                           ;maincode.c: 15:     CURSOR_HOME();
   286  000A34  EC35  F005         	call	_CURSOR_HOME	;wreg free
   287  000A38                     
   288                           ;maincode.c: 16:     CURSOR_ONOFF(1);
   289  000A38  0E01               	movlw	1
   290  000A3A  ECDF  F004         	call	_CURSOR_ONOFF
   291  000A3E  0012               	return		;funcret
   292  000A40                     __end_of_lcd_config:
   293                           	callstack 0
   294                           
   295 ;; *************** function _LCD_CONFIG *****************
   296 ;; Defined at:
   297 ;;		line 72 in file "LCD.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;		None
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         0       0       0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0
   313 ;;      Temps:          1       0       0       0       0       0       0       0       0
   314 ;;      Totals:         1       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        1 bytes
   316 ;; Hardware stack levels used: 1
   317 ;; Hardware stack levels required when called: 2
   318 ;; This function calls:
   319 ;;		_ENVIA_LCD_CMD
   320 ;;		_ENVIA_NIBBLE
   321 ;; This function is called by:
   322 ;;		_lcd_config
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text2
   327  00087E                     __ptext2:
   328                           	callstack 0
   329  00087E                     _LCD_CONFIG:
   330                           	callstack 27
   331  00087E                     
   332                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   333  00087E  908C               	bcf	140,0,c	;volatile
   334                           
   335                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   336  000880  928C               	bcf	140,1,c	;volatile
   337  000882                     
   338                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   339  000882  0E30               	movlw	48
   340  000884  EC20  F005         	call	_ENVIA_NIBBLE
   341  000888                     
   342                           ;LCD.c: 77:         _delay(24000);
   343  000888  0E20               	movlw	32
   344  00088A  6E04               	movwf	??_LCD_CONFIG^0,c
   345  00088C  0E2A               	movlw	42
   346  00088E                     u167:
   347  00088E  2EE8               	decfsz	wreg,f,c
   348  000890  D7FE               	bra	u167
   349  000892  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   350  000894  D7FC               	bra	u167
   351  000896                     
   352                           ;LCD.c: 78:         _delay(24000);
   353  000896  0E20               	movlw	32
   354  000898  6E04               	movwf	??_LCD_CONFIG^0,c
   355  00089A  0E2A               	movlw	42
   356  00089C                     u177:
   357  00089C  2EE8               	decfsz	wreg,f,c
   358  00089E  D7FE               	bra	u177
   359  0008A0  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   360  0008A2  D7FC               	bra	u177
   361                           
   362                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   363  0008A4  0E30               	movlw	48
   364  0008A6  EC20  F005         	call	_ENVIA_NIBBLE
   365  0008AA                     
   366                           ;LCD.c: 83:  _delay(1200);
   367  0008AA  0EF0               	movlw	240
   368  0008AC                     u187:
   369  0008AC  D000               	nop2	
   370  0008AE  2EE8               	decfsz	wreg,f,c
   371  0008B0  D7FD               	bra	u187
   372  0008B2                     
   373                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   374  0008B2  0E30               	movlw	48
   375  0008B4  EC20  F005         	call	_ENVIA_NIBBLE
   376  0008B8                     
   377                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   378  0008B8  0E20               	movlw	32
   379  0008BA  EC20  F005         	call	_ENVIA_NIBBLE
   380  0008BE                     
   381                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   382  0008BE  0E01               	movlw	1
   383  0008C0  ECAB  F004         	call	_ENVIA_LCD_CMD
   384  0008C4                     
   385                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   386  0008C4  0E28               	movlw	40
   387  0008C6  ECAB  F004         	call	_ENVIA_LCD_CMD
   388  0008CA                     
   389                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   390  0008CA  0E0F               	movlw	15
   391  0008CC  ECAB  F004         	call	_ENVIA_LCD_CMD
   392  0008D0                     
   393                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   394  0008D0  0E06               	movlw	6
   395  0008D2  ECAB  F004         	call	_ENVIA_LCD_CMD
   396  0008D6                     
   397                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   398  0008D6  0E01               	movlw	1
   399  0008D8  ECAB  F004         	call	_ENVIA_LCD_CMD
   400  0008DC  0012               	return		;funcret
   401  0008DE                     __end_of_LCD_CONFIG:
   402                           	callstack 0
   403                           
   404 ;; *************** function _CURSOR_ONOFF *****************
   405 ;; Defined at:
   406 ;;		line 35 in file "LCD.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;  estado          1    wreg     unsigned char 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  estado          1    3[COMRAM] unsigned char 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         1       0       0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0
   423 ;;      Totals:         1       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        1 bytes
   425 ;; Hardware stack levels used: 1
   426 ;; Hardware stack levels required when called: 2
   427 ;; This function calls:
   428 ;;		_ENVIA_LCD_CMD
   429 ;; This function is called by:
   430 ;;		_lcd_config
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text3
   435  0009BE                     __ptext3:
   436                           	callstack 0
   437  0009BE                     _CURSOR_ONOFF:
   438                           	callstack 27
   439                           
   440                           ;incstack = 0
   441                           ;CURSOR_ONOFF@estado stored from wreg
   442  0009BE  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   443  0009C0                     
   444                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   445  0009C0  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   446  0009C2  A4D8               	btfss	status,2,c
   447  0009C4  EFE6  F004         	goto	u21
   448  0009C8  EFE8  F004         	goto	u20
   449  0009CC                     u21:
   450  0009CC  EFEB  F004         	goto	l880
   451  0009D0                     u20:
   452  0009D0  0E0E               	movlw	14
   453  0009D2  ECAB  F004         	call	_ENVIA_LCD_CMD
   454  0009D6                     l880:
   455                           
   456                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   457  0009D6  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   458  0009D8  A4D8               	btfss	status,2,c
   459  0009DA  EFF1  F004         	goto	u31
   460  0009DE  EFF3  F004         	goto	u30
   461  0009E2                     u31:
   462  0009E2  EFF6  F004         	goto	l72
   463  0009E6                     u30:
   464  0009E6  0E0C               	movlw	12
   465  0009E8  ECAB  F004         	call	_ENVIA_LCD_CMD
   466  0009EC                     l72:
   467  0009EC  0012               	return		;funcret
   468  0009EE                     __end_of_CURSOR_ONOFF:
   469                           	callstack 0
   470                           
   471 ;; *************** function _CURSOR_HOME *****************
   472 ;; Defined at:
   473 ;;		line 30 in file "LCD.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 2
   494 ;; This function calls:
   495 ;;		_ENVIA_LCD_CMD
   496 ;; This function is called by:
   497 ;;		_lcd_config
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text4
   502  000A6A                     __ptext4:
   503                           	callstack 0
   504  000A6A                     _CURSOR_HOME:
   505                           	callstack 27
   506  000A6A                     
   507                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   508  000A6A  0E02               	movlw	2
   509  000A6C  ECAB  F004         	call	_ENVIA_LCD_CMD
   510  000A70  0012               	return		;funcret
   511  000A72                     __end_of_CURSOR_HOME:
   512                           	callstack 0
   513                           
   514 ;; *************** function _BORRAR_LCD *****************
   515 ;; Defined at:
   516 ;;		line 67 in file "LCD.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg, status,2, status,0, cstack
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   530 ;;      Params:         0       0       0       0       0       0       0       0       0
   531 ;;      Locals:         0       0       0       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0       0       0
   533 ;;      Totals:         0       0       0       0       0       0       0       0       0
   534 ;;Total ram usage:        0 bytes
   535 ;; Hardware stack levels used: 1
   536 ;; Hardware stack levels required when called: 2
   537 ;; This function calls:
   538 ;;		_ENVIA_LCD_CMD
   539 ;; This function is called by:
   540 ;;		_lcd_config
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           	psect	text5
   545  000A72                     __ptext5:
   546                           	callstack 0
   547  000A72                     _BORRAR_LCD:
   548                           	callstack 27
   549  000A72                     
   550                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   551  000A72  0E01               	movlw	1
   552  000A74  ECAB  F004         	call	_ENVIA_LCD_CMD
   553  000A78  0012               	return		;funcret
   554  000A7A                     __end_of_BORRAR_LCD:
   555                           	callstack 0
   556                           
   557 ;; *************** function _configuro *****************
   558 ;; Defined at:
   559 ;;		line 6 in file "maincode.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		None
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text6
   587  000A7A                     __ptext6:
   588                           	callstack 0
   589  000A7A                     _configuro:
   590                           	callstack 30
   591  000A7A  0012               	return		;funcret
   592  000A7C                     __end_of_configuro:
   593                           	callstack 0
   594                           
   595 ;; *************** function _POS_CURSOR *****************
   596 ;; Defined at:
   597 ;;		line 6 in file "LCD.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;  fila            1    wreg     unsigned char 
   600 ;;  columna         1    3[COMRAM] unsigned char 
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  fila            1    4[COMRAM] unsigned char 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   612 ;;      Params:         1       0       0       0       0       0       0       0       0
   613 ;;      Locals:         1       0       0       0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0
   615 ;;      Totals:         2       0       0       0       0       0       0       0       0
   616 ;;Total ram usage:        2 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; Hardware stack levels required when called: 2
   619 ;; This function calls:
   620 ;;		_ENVIA_LCD_CMD
   621 ;; This function is called by:
   622 ;;		_main
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           	psect	text7
   627  00091C                     __ptext7:
   628                           	callstack 0
   629  00091C                     _POS_CURSOR:
   630                           	callstack 28
   631                           
   632                           ;incstack = 0
   633                           ;POS_CURSOR@fila stored from wreg
   634  00091C  6E05               	movwf	POS_CURSOR@fila^0,c
   635  00091E                     
   636                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   637  00091E  0405               	decf	POS_CURSOR@fila^0,w,c
   638  000920  A4D8               	btfss	status,2,c
   639  000922  EF95  F004         	goto	u121
   640  000926  EF97  F004         	goto	u120
   641  00092A                     u121:
   642  00092A  EF9D  F004         	goto	l978
   643  00092E                     u120:
   644  00092E                     
   645                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   646  00092E  5004               	movf	POS_CURSOR@columna^0,w,c
   647  000930  0F80               	addlw	128
   648  000932  ECAB  F004         	call	_ENVIA_LCD_CMD
   649                           
   650                           ;LCD.c: 11:  }
   651  000936  EFAA  F004         	goto	l54
   652  00093A                     l978:
   653  00093A  0E02               	movlw	2
   654  00093C  1805               	xorwf	POS_CURSOR@fila^0,w,c
   655  00093E  A4D8               	btfss	status,2,c
   656  000940  EFA4  F004         	goto	u131
   657  000944  EFA6  F004         	goto	u130
   658  000948                     u131:
   659  000948  EFAA  F004         	goto	l54
   660  00094C                     u130:
   661  00094C                     
   662                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   663  00094C  5004               	movf	POS_CURSOR@columna^0,w,c
   664  00094E  0FC0               	addlw	192
   665  000950  ECAB  F004         	call	_ENVIA_LCD_CMD
   666  000954                     l54:
   667  000954  0012               	return		;funcret
   668  000956                     __end_of_POS_CURSOR:
   669                           	callstack 0
   670                           
   671 ;; *************** function _ENVIA_LCD_CMD *****************
   672 ;; Defined at:
   673 ;;		line 104 in file "LCD.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  dato            1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  dato            1    1[COMRAM] unsigned char 
   678 ;;  aux             1    2[COMRAM] unsigned char 
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2, status,0, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   688 ;;      Params:         0       0       0       0       0       0       0       0       0
   689 ;;      Locals:         2       0       0       0       0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0
   691 ;;      Totals:         2       0       0       0       0       0       0       0       0
   692 ;;Total ram usage:        2 bytes
   693 ;; Hardware stack levels used: 1
   694 ;; Hardware stack levels required when called: 1
   695 ;; This function calls:
   696 ;;		_ENVIA_NIBBLE
   697 ;;		_LEER_LCD
   698 ;; This function is called by:
   699 ;;		_POS_CURSOR
   700 ;;		_CURSOR_HOME
   701 ;;		_CURSOR_ONOFF
   702 ;;		_BORRAR_LCD
   703 ;;		_LCD_CONFIG
   704 ;;		_BLINK_CURSOR
   705 ;;		_DISPLAY_ONOFF
   706 ;;		_GENERACARACTER
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text8
   711  000956                     __ptext8:
   712                           	callstack 0
   713  000956                     _ENVIA_LCD_CMD:
   714                           	callstack 27
   715                           
   716                           ;incstack = 0
   717                           ;ENVIA_LCD_CMD@dato stored from wreg
   718  000956  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   719  000958                     
   720                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   721  000958  908C               	bcf	140,0,c	;volatile
   722  00095A                     
   723                           ;LCD.c: 108:  LEER_LCD();
   724  00095A  EC06  F004         	call	_LEER_LCD	;wreg free
   725  00095E                     
   726                           ;LCD.c: 109:  TRISD = 0b00000000;
   727  00095E  0E00               	movlw	0
   728  000960  6E95               	movwf	149,c	;volatile
   729  000962                     
   730                           ;LCD.c: 111:         _delay(1200);
   731  000962  0EF0               	movlw	240
   732  000964                     u197:
   733  000964  D000               	nop2	
   734  000966  2EE8               	decfsz	wreg,f,c
   735  000968  D7FD               	bra	u197
   736  00096A                     
   737                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   738  00096A  928C               	bcf	140,1,c	;volatile
   739  00096C                     
   740                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   741  00096C  948C               	bcf	140,2,c	;volatile
   742  00096E                     
   743                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   744  00096E  908C               	bcf	140,0,c	;volatile
   745  000970                     
   746                           ;LCD.c: 115:  aux = dato & 0xF0;
   747  000970  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   748  000972  0BF0               	andlw	240
   749  000974  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   750  000976                     
   751                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   752  000976  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   753  000978  EC20  F005         	call	_ENVIA_NIBBLE
   754  00097C                     
   755                           ;LCD.c: 117:  aux = dato<<4;
   756  00097C  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   757  00097E  0BF0               	andlw	240
   758  000980  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   759  000982                     
   760                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   761  000982  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   762  000984  EC20  F005         	call	_ENVIA_NIBBLE
   763  000988  0012               	return		;funcret
   764  00098A                     __end_of_ENVIA_LCD_CMD:
   765                           	callstack 0
   766                           
   767 ;; *************** function _ESCRIBE_MENSAJE *****************
   768 ;; Defined at:
   769 ;;		line 41 in file "LCD.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   772 ;;		 -> STR_1(9), 
   773 ;;  tam             1    5[COMRAM] unsigned char 
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  i               1    8[COMRAM] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         3       0       0       0       0       0       0       0       0
   786 ;;      Locals:         1       0       0       0       0       0       0       0       0
   787 ;;      Temps:          2       0       0       0       0       0       0       0       0
   788 ;;      Totals:         6       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        6 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 2
   792 ;; This function calls:
   793 ;;		_ENVIA_CHAR
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text9
   800  0008DE                     __ptext9:
   801                           	callstack 0
   802  0008DE                     _ESCRIBE_MENSAJE:
   803                           	callstack 28
   804  0008DE                     
   805                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   806  0008DE  0E00               	movlw	0
   807  0008E0  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   808                           
   809                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   810  0008E2  0E00               	movlw	0
   811  0008E4  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   812  0008E6  EF84  F004         	goto	l988
   813  0008EA                     l984:
   814                           
   815                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   816  0008EA  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
   817  0008EC  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   818  0008EE  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
   819  0008F0  0E00               	movlw	0
   820  0008F2  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   821  0008F4  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   822  0008F6  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   823  0008FA  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   824  0008FE                     	if	0	;tblptru may be non-zero
   825  0008FE                     	endif
   826  0008FE                     	if	0	;tblptru may be non-zero
   827  0008FE                     	endif
   828  0008FE  0008               	tblrd		*
   829  000900  50F5               	movf	tablat,w,c
   830  000902  ECC5  F004         	call	_ENVIA_CHAR
   831  000906                     
   832                           ;LCD.c: 47:  }
   833  000906  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
   834  000908                     l988:
   835  000908  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   836  00090A  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   837  00090C  A0D8               	btfss	status,0,c
   838  00090E  EF8B  F004         	goto	u141
   839  000912  EF8D  F004         	goto	u140
   840  000916                     u141:
   841  000916  EF75  F004         	goto	l984
   842  00091A                     u140:
   843  00091A  0012               	return		;funcret
   844  00091C                     __end_of_ESCRIBE_MENSAJE:
   845                           	callstack 0
   846                           
   847 ;; *************** function _ENVIA_CHAR *****************
   848 ;; Defined at:
   849 ;;		line 50 in file "LCD.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;  dato            1    wreg     unsigned char 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  dato            1    1[COMRAM] unsigned char 
   854 ;;  aux             1    2[COMRAM] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   864 ;;      Params:         0       0       0       0       0       0       0       0       0
   865 ;;      Locals:         2       0       0       0       0       0       0       0       0
   866 ;;      Temps:          0       0       0       0       0       0       0       0       0
   867 ;;      Totals:         2       0       0       0       0       0       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels used: 1
   870 ;; Hardware stack levels required when called: 1
   871 ;; This function calls:
   872 ;;		_ENVIA_NIBBLE
   873 ;;		_LEER_LCD
   874 ;; This function is called by:
   875 ;;		_ESCRIBE_MENSAJE
   876 ;;		_GENERACARACTER
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text10
   881  00098A                     __ptext10:
   882                           	callstack 0
   883  00098A                     _ENVIA_CHAR:
   884                           	callstack 28
   885                           
   886                           ;incstack = 0
   887                           ;ENVIA_CHAR@dato stored from wreg
   888  00098A  6E02               	movwf	ENVIA_CHAR@dato^0,c
   889  00098C                     
   890                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   891  00098C  808C               	bsf	140,0,c	;volatile
   892  00098E                     
   893                           ;LCD.c: 54:  LEER_LCD();
   894  00098E  EC06  F004         	call	_LEER_LCD	;wreg free
   895  000992                     
   896                           ;LCD.c: 55:  TRISD = 0x00;
   897  000992  0E00               	movlw	0
   898  000994  6E95               	movwf	149,c	;volatile
   899  000996                     
   900                           ;LCD.c: 56:         _delay(1200);
   901  000996  0EF0               	movlw	240
   902  000998                     u207:
   903  000998  D000               	nop2	
   904  00099A  2EE8               	decfsz	wreg,f,c
   905  00099C  D7FD               	bra	u207
   906  00099E                     
   907                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   908  00099E  928C               	bcf	140,1,c	;volatile
   909  0009A0                     
   910                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   911  0009A0  948C               	bcf	140,2,c	;volatile
   912  0009A2                     
   913                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   914  0009A2  808C               	bsf	140,0,c	;volatile
   915  0009A4                     
   916                           ;LCD.c: 61:  aux = dato & 0xF0;
   917  0009A4  5002               	movf	ENVIA_CHAR@dato^0,w,c
   918  0009A6  0BF0               	andlw	240
   919  0009A8  6E03               	movwf	ENVIA_CHAR@aux^0,c
   920  0009AA                     
   921                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   922  0009AA  5003               	movf	ENVIA_CHAR@aux^0,w,c
   923  0009AC  EC20  F005         	call	_ENVIA_NIBBLE
   924  0009B0                     
   925                           ;LCD.c: 63:  aux = dato << 4;
   926  0009B0  3802               	swapf	ENVIA_CHAR@dato^0,w,c
   927  0009B2  0BF0               	andlw	240
   928  0009B4  6E03               	movwf	ENVIA_CHAR@aux^0,c
   929  0009B6                     
   930                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   931  0009B6  5003               	movf	ENVIA_CHAR@aux^0,w,c
   932  0009B8  EC20  F005         	call	_ENVIA_NIBBLE
   933  0009BC  0012               	return		;funcret
   934  0009BE                     __end_of_ENVIA_CHAR:
   935                           	callstack 0
   936                           
   937 ;; *************** function _LEER_LCD *****************
   938 ;; Defined at:
   939 ;;		line 121 in file "LCD.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  aux             1    0[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   953 ;;      Params:         0       0       0       0       0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0
   956 ;;      Totals:         1       0       0       0       0       0       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_ENVIA_CHAR
   963 ;;		_ENVIA_LCD_CMD
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text11
   968  00080C                     __ptext11:
   969                           	callstack 0
   970  00080C                     _LEER_LCD:
   971                           	callstack 27
   972  00080C                     
   973                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
   974  00080C  0EF8               	movlw	248
   975  00080E  6E95               	movwf	149,c	;volatile
   976  000810                     
   977                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
   978  000810  908C               	bcf	140,0,c	;volatile
   979  000812                     
   980                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
   981  000812  828C               	bsf	140,1,c	;volatile
   982  000814                     
   983                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
   984  000814  848C               	bsf	140,2,c	;volatile
   985  000816                     
   986                           ;LCD.c: 128:         _delay(1200);
   987  000816  0EF0               	movlw	240
   988  000818                     u217:
   989  000818  D000               	nop2	
   990  00081A  2EE8               	decfsz	wreg,f,c
   991  00081C  D7FD               	bra	u217
   992  00081E                     
   993                           ;LCD.c: 130:  aux = PORTD;
   994  00081E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
   995  000822                     
   996                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
   997  000822  948C               	bcf	140,2,c	;volatile
   998  000824                     
   999                           ;LCD.c: 132:         _delay(1200);
  1000  000824  0EF0               	movlw	240
  1001  000826                     u227:
  1002  000826  D000               	nop2	
  1003  000828  2EE8               	decfsz	wreg,f,c
  1004  00082A  D7FD               	bra	u227
  1005  00082C                     
  1006                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1007  00082C  848C               	bsf	140,2,c	;volatile
  1008  00082E                     
  1009                           ;LCD.c: 135:         _delay(1200);
  1010  00082E  0EF0               	movlw	240
  1011  000830                     u237:
  1012  000830  D000               	nop2	
  1013  000832  2EE8               	decfsz	wreg,f,c
  1014  000834  D7FD               	bra	u237
  1015  000836                     
  1016                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1017  000836  948C               	bcf	140,2,c	;volatile
  1018  000838                     l802:
  1019                           
  1020                           ;LCD.c: 138:  aux = aux & 0x80;
  1021  000838  5001               	movf	LEER_LCD@aux^0,w,c
  1022  00083A  0B80               	andlw	128
  1023  00083C  6E01               	movwf	LEER_LCD@aux^0,c
  1024                           
  1025                           ;LCD.c: 139:  while(aux == 0x80)
  1026  00083E  EF35  F004         	goto	l816
  1027  000842                     l97:
  1028                           
  1029                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1030  000842  848C               	bsf	140,2,c	;volatile
  1031  000844                     
  1032                           ;LCD.c: 142:             _delay(1200);
  1033  000844  0EF0               	movlw	240
  1034  000846                     u247:
  1035  000846  D000               	nop2	
  1036  000848  2EE8               	decfsz	wreg,f,c
  1037  00084A  D7FD               	bra	u247
  1038  00084C                     
  1039                           ;LCD.c: 143:             aux = PORTD;
  1040  00084C  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1041  000850                     
  1042                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1043  000850  948C               	bcf	140,2,c	;volatile
  1044                           
  1045                           ;LCD.c: 145:             _delay(1200);
  1046  000852  0EF0               	movlw	240
  1047  000854                     u257:
  1048  000854  D000               	nop2	
  1049  000856  2EE8               	decfsz	wreg,f,c
  1050  000858  D7FD               	bra	u257
  1051  00085A                     
  1052                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1053  00085A  848C               	bsf	140,2,c	;volatile
  1054                           
  1055                           ;LCD.c: 147:             _delay(1200);
  1056  00085C  0EF0               	movlw	240
  1057  00085E                     u267:
  1058  00085E  D000               	nop2	
  1059  000860  2EE8               	decfsz	wreg,f,c
  1060  000862  D7FD               	bra	u267
  1061  000864                     
  1062                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1063  000864  948C               	bcf	140,2,c	;volatile
  1064  000866  EF1C  F004         	goto	l802
  1065  00086A                     l816:
  1066                           
  1067                           ;LCD.c: 139:  while(aux == 0x80)
  1068  00086A  0E80               	movlw	128
  1069  00086C  1801               	xorwf	LEER_LCD@aux^0,w,c
  1070  00086E  B4D8               	btfsc	status,2,c
  1071  000870  EF3C  F004         	goto	u11
  1072  000874  EF3E  F004         	goto	u10
  1073  000878                     u11:
  1074  000878  EF21  F004         	goto	l97
  1075  00087C                     u10:
  1076  00087C  0012               	return		;funcret
  1077  00087E                     __end_of_LEER_LCD:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _ENVIA_NIBBLE *****************
  1081 ;; Defined at:
  1082 ;;		line 93 in file "LCD.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  dato            1    wreg     unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  dato            1    0[COMRAM] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0
  1097 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1099 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1100 ;;Total ram usage:        1 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_ENVIA_CHAR
  1106 ;;		_LCD_CONFIG
  1107 ;;		_ENVIA_LCD_CMD
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text12
  1112  000A40                     __ptext12:
  1113                           	callstack 0
  1114  000A40                     _ENVIA_NIBBLE:
  1115                           	callstack 28
  1116                           
  1117                           ;incstack = 0
  1118                           ;ENVIA_NIBBLE@dato stored from wreg
  1119  000A40  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1120  000A42                     
  1121                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1122  000A42  0E0F               	movlw	15
  1123  000A44  168C               	andwf	140,f,c	;volatile
  1124                           
  1125                           ;LCD.c: 96:  dato &= 0xF0;
  1126  000A46  0EF0               	movlw	240
  1127  000A48  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1128                           
  1129                           ;LCD.c: 97:  LATD|= dato;
  1130  000A4A  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1131  000A4C  128C               	iorwf	140,f,c	;volatile
  1132  000A4E                     
  1133                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1134  000A4E  848C               	bsf	140,2,c	;volatile
  1135  000A50                     
  1136                           ;LCD.c: 100:         _delay(1200);
  1137  000A50  0EF0               	movlw	240
  1138  000A52                     u277:
  1139  000A52  D000               	nop2	
  1140  000A54  2EE8               	decfsz	wreg,f,c
  1141  000A56  D7FD               	bra	u277
  1142  000A58                     
  1143                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1144  000A58  948C               	bcf	140,2,c	;volatile
  1145  000A5A  0012               	return		;funcret
  1146  000A5C                     __end_of_ENVIA_NIBBLE:
  1147                           	callstack 0
  1148                           
  1149                           	psect	rparam
  1150  0000                     
  1151                           	psect	idloc
  1152                           
  1153                           ;Config register IDLOC0 @ 0x200000
  1154                           ;	unspecified, using default values
  1155  200000                     	org	2097152
  1156  200000  FF                 	db	255
  1157                           
  1158                           ;Config register IDLOC1 @ 0x200001
  1159                           ;	unspecified, using default values
  1160  200001                     	org	2097153
  1161  200001  FF                 	db	255
  1162                           
  1163                           ;Config register IDLOC2 @ 0x200002
  1164                           ;	unspecified, using default values
  1165  200002                     	org	2097154
  1166  200002  FF                 	db	255
  1167                           
  1168                           ;Config register IDLOC3 @ 0x200003
  1169                           ;	unspecified, using default values
  1170  200003                     	org	2097155
  1171  200003  FF                 	db	255
  1172                           
  1173                           ;Config register IDLOC4 @ 0x200004
  1174                           ;	unspecified, using default values
  1175  200004                     	org	2097156
  1176  200004  FF                 	db	255
  1177                           
  1178                           ;Config register IDLOC5 @ 0x200005
  1179                           ;	unspecified, using default values
  1180  200005                     	org	2097157
  1181  200005  FF                 	db	255
  1182                           
  1183                           ;Config register IDLOC6 @ 0x200006
  1184                           ;	unspecified, using default values
  1185  200006                     	org	2097158
  1186  200006  FF                 	db	255
  1187                           
  1188                           ;Config register IDLOC7 @ 0x200007
  1189                           ;	unspecified, using default values
  1190  200007                     	org	2097159
  1191  200007  FF                 	db	255
  1192                           
  1193                           	psect	config
  1194                           
  1195                           ;Config register CONFIG1L @ 0x300000
  1196                           ;	PLL Prescaler Selection bits
  1197                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1198                           ;	System Clock Postscaler Selection bits
  1199                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1200                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1201                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1202  300000                     	org	3145728
  1203  300000  00                 	db	0
  1204                           
  1205                           ;Config register CONFIG1H @ 0x300001
  1206                           ;	Oscillator Selection bits
  1207                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1208                           ;	Fail-Safe Clock Monitor Enable bit
  1209                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1210                           ;	Internal/External Oscillator Switchover bit
  1211                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1212  300001                     	org	3145729
  1213  300001  02                 	db	2
  1214                           
  1215                           ;Config register CONFIG2L @ 0x300002
  1216                           ;	Power-up Timer Enable bit
  1217                           ;	PWRT = ON, PWRT enabled
  1218                           ;	Brown-out Reset Enable bits
  1219                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1220                           ;	Brown-out Reset Voltage bits
  1221                           ;	BORV = 3, Minimum setting 2.05V
  1222                           ;	USB Voltage Regulator Enable bit
  1223                           ;	VREGEN = OFF, USB voltage regulator disabled
  1224  300002                     	org	3145730
  1225  300002  18                 	db	24
  1226                           
  1227                           ;Config register CONFIG2H @ 0x300003
  1228                           ;	Watchdog Timer Enable bit
  1229                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1230                           ;	Watchdog Timer Postscale Select bits
  1231                           ;	WDTPS = 32768, 1:32768
  1232  300003                     	org	3145731
  1233  300003  1E                 	db	30
  1234                           
  1235                           ; Padding undefined space
  1236  300004                     	org	3145732
  1237  300004  FF                 	db	255
  1238                           
  1239                           ;Config register CONFIG3H @ 0x300005
  1240                           ;	CCP2 MUX bit
  1241                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1242                           ;	PORTB A/D Enable bit
  1243                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1244                           ;	Low-Power Timer 1 Oscillator Enable bit
  1245                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1246                           ;	MCLR Pin Enable bit
  1247                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1248  300005                     	org	3145733
  1249  300005  81                 	db	129
  1250                           
  1251                           ;Config register CONFIG4L @ 0x300006
  1252                           ;	Stack Full/Underflow Reset Enable bit
  1253                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1254                           ;	Single-Supply ICSP Enable bit
  1255                           ;	LVP = OFF, Single-Supply ICSP disabled
  1256                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1257                           ;	ICPRT = OFF, ICPORT disabled
  1258                           ;	Extended Instruction Set Enable bit
  1259                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1260                           ;	Background Debugger Enable bit
  1261                           ;	DEBUG = 0x1, unprogrammed default
  1262  300006                     	org	3145734
  1263  300006  81                 	db	129
  1264                           
  1265                           ; Padding undefined space
  1266  300007                     	org	3145735
  1267  300007  FF                 	db	255
  1268                           
  1269                           ;Config register CONFIG5L @ 0x300008
  1270                           ;	Code Protection bit
  1271                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1272                           ;	Code Protection bit
  1273                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1274                           ;	Code Protection bit
  1275                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1276                           ;	Code Protection bit
  1277                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1278  300008                     	org	3145736
  1279  300008  0F                 	db	15
  1280                           
  1281                           ;Config register CONFIG5H @ 0x300009
  1282                           ;	Boot Block Code Protection bit
  1283                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1284                           ;	Data EEPROM Code Protection bit
  1285                           ;	CPD = OFF, Data EEPROM is not code-protected
  1286  300009                     	org	3145737
  1287  300009  C0                 	db	192
  1288                           
  1289                           ;Config register CONFIG6L @ 0x30000A
  1290                           ;	Write Protection bit
  1291                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1292                           ;	Write Protection bit
  1293                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1294                           ;	Write Protection bit
  1295                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1296                           ;	Write Protection bit
  1297                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1298  30000A                     	org	3145738
  1299  30000A  0F                 	db	15
  1300                           
  1301                           ;Config register CONFIG6H @ 0x30000B
  1302                           ;	Configuration Register Write Protection bit
  1303                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1304                           ;	Boot Block Write Protection bit
  1305                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1306                           ;	Data EEPROM Write Protection bit
  1307                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1308  30000B                     	org	3145739
  1309  30000B  E0                 	db	224
  1310                           
  1311                           ;Config register CONFIG7L @ 0x30000C
  1312                           ;	Table Read Protection bit
  1313                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1314                           ;	Table Read Protection bit
  1315                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1316                           ;	Table Read Protection bit
  1317                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1318                           ;	Table Read Protection bit
  1319                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1320  30000C                     	org	3145740
  1321  30000C  0F                 	db	15
  1322                           
  1323                           ;Config register CONFIG7H @ 0x30000D
  1324                           ;	Boot Block Table Read Protection bit
  1325                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1326  30000D                     	org	3145741
  1327  30000D  40                 	db	64
  1328                           tosu	equ	0xFFF
  1329                           tosh	equ	0xFFE
  1330                           tosl	equ	0xFFD
  1331                           stkptr	equ	0xFFC
  1332                           pclatu	equ	0xFFB
  1333                           pclath	equ	0xFFA
  1334                           pcl	equ	0xFF9
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           indf0	equ	0xFEF
  1342                           postinc0	equ	0xFEE
  1343                           postdec0	equ	0xFED
  1344                           preinc0	equ	0xFEC
  1345                           plusw0	equ	0xFEB
  1346                           fsr0h	equ	0xFEA
  1347                           fsr0l	equ	0xFE9
  1348                           wreg	equ	0xFE8
  1349                           indf1	equ	0xFE7
  1350                           postinc1	equ	0xFE6
  1351                           postdec1	equ	0xFE5
  1352                           preinc1	equ	0xFE4
  1353                           plusw1	equ	0xFE3
  1354                           fsr1h	equ	0xFE2
  1355                           fsr1l	equ	0xFE1
  1356                           bsr	equ	0xFE0
  1357                           indf2	equ	0xFDF
  1358                           postinc2	equ	0xFDE
  1359                           postdec2	equ	0xFDD
  1360                           preinc2	equ	0xFDC
  1361                           plusw2	equ	0xFDB
  1362                           fsr2h	equ	0xFDA
  1363                           fsr2l	equ	0xFD9
  1364                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_config->_CURSOR_ONOFF
    _lcd_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1172
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_config
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRh          6A      0       0      20        0.0%
BITBIGSFRlh          8      0       0      21        0.0%
BITBIGSFRllh         8      0       0      22        0.0%
BITBIGSFRlll        23      0       0      23        0.0%
ABS                  0      0       0      24        0.0%
BIGRAM             7FF      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 21:43:10 2022

                     l22 0A3E                       l19 0A7A                       l54 0954  
                     l72 09EC                       l81 09BC                       l90 0A5A  
                     l67 0A70                       l84 0A78                       l93 0988  
                     l78 091A                       l87 08DC                       l97 0842  
                     l99 087C                       u10 087C                       u11 0878  
                     u20 09D0                       u21 09CC                       u30 09E6  
                     u31 09E2            ENVIA_CHAR@aux 0003                      l800 0836  
                    l810 085A                      l802 0838                      l820 0A4E  
                    l812 0864                      l804 0844                      l900 09AA  
                    l822 0A50                      l806 084C                      l902 09B0  
                    l830 095E                      l910 0A20                      l824 0A58  
                    l808 0850                      l816 086A                      l904 09B6  
                    l840 0970                      l832 0962                      l912 0A30  
                    l818 0A42                      l842 0976                      l834 096A  
                    l826 0958                      l850 0882                      l914 0A34  
                    l906 0A18                      l780 080C                      l844 097C  
                    l836 096C                      l828 095A                      l860 08B8  
                    l852 0888                      l916 0A38                      l908 0A1C  
                    l790 081E                      l782 0810                      l846 0982  
                    l838 096E                      l870 08D6                      l862 08BE  
                    l854 0896                      l792 0822                      l784 0812  
                    l872 0A72                      l880 09D6                      l864 08C4  
                    l856 08AA                      l848 087E                      l794 0824  
                    l786 0814                      l890 0996                      l874 0A6A  
                    l882 09E6                      l866 08CA                      l858 08B2  
                    l796 082C                      l788 0816                      l892 099E  
                    l884 098C                      l980 094C                      l876 09C0  
                    l868 08D0                      l798 082E                      l894 09A0  
                    l886 098E                      l982 08DE                      l974 091E  
                    l878 09D0                      l990 09EE                      l896 09A2  
                    l888 0992                      l984 08EA                      l976 092E  
                    l992 09F2                      l898 09A4                      l986 0906  
                    l978 093A                      l994 09F6                      l988 0908  
                    l996 0A00                      u120 092E                      u121 092A  
                    u130 094C                      u131 0948                      u140 091A  
                    u141 0916                      u207 0998                      u217 0818  
                    u227 0826                      u237 0830                      u157 0A26  
                    u247 0846                      u167 088E                      u257 0854  
                    u177 089C                      u267 085E                      u187 08AC  
                    u277 0A52                      u197 0964              LEER_LCD@aux 0001  
                    wreg 000FE8             ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0001  
         ENVIA_CHAR@dato 0002                     STR_1 0801                     _LATD 000F8C  
                   _main 09EE                     start 0000            ?_CURSOR_ONOFF 0001  
           ___param_bank 000000          ??_ENVIA_LCD_CMD 0002         __end_of_LEER_LCD 087E  
                  ?_main 0001                    _PORTD 000F83                    _TRISD 000F95  
            ?_POS_CURSOR 0004                    tablat 000FF5                    status 000FD8  
         ??_CURSOR_ONOFF 0004          __initialization 0A5C             __end_of_main 0A18  
        _ESCRIBE_MENSAJE 08DE                   ??_main 000A            __activetblptr 000001  
   __end_of_ENVIA_NIBBLE 0A5C                   isa$std 000001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004                ?_LEER_LCD 0001               __accesstop 0060  
__end_of__initialization 0A5C             ??_LCD_CONFIG 0004            ___rparam_used 000001  
           ??_ENVIA_CHAR 0002  __end_of_ESCRIBE_MENSAJE 091C           __pcstackCOMRAM 0001  
     __end_of_BORRAR_LCD 0A7A         ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 09EE  
     __end_of_LCD_CONFIG 08DE       __end_of_ENVIA_CHAR 09BE               ??_LEER_LCD 0001  
       ENVIA_NIBBLE@dato 0001               _lcd_config 0A18             ??_POS_CURSOR 0005  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0004  
      __end_of_configuro 0A7C             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 098A  
                __pcinit 0A5C       __end_of_POS_CURSOR 0956                  __ramtop 0800  
                __ptext0 09EE                  __ptext1 0A18                  __ptext2 087E  
                __ptext3 09BE                  __ptext4 0A6A                  __ptext5 0A72  
                __ptext6 0A7A                  __ptext7 091C                  __ptext8 0956  
                __ptext9 08DE             _ENVIA_NIBBLE 0A40     end_of_initialization 0A5C  
            ?_lcd_config 0001             _CURSOR_ONOFF 09BE       CURSOR_ONOFF@estado 0004  
          ??_CURSOR_HOME 0004      start_initialization 0A5C        ENVIA_LCD_CMD@dato 0002  
    __end_of_CURSOR_HOME 0A72                _configuro 0A7A              __smallconst 0800  
               _LEER_LCD 080C                 _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009  
         POS_CURSOR@fila 0005               ?_configuro 0001             ??_lcd_config 0005  
            _CURSOR_HOME 0A6A                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800       __end_of_lcd_config 0A40                 __ptext10 098A  
               __ptext11 080C                 __ptext12 0A40               _BORRAR_LCD 0A72  
             _LCD_CONFIG 087E               _ENVIA_CHAR 098A                 isa$xinst 000000  
          _ENVIA_LCD_CMD 0956              ??_configuro 0001        ??_ESCRIBE_MENSAJE 0007  
  ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001              ?_BORRAR_LCD 0001  
          ?_ENVIA_NIBBLE 0001               _POS_CURSOR 091C              ?_LCD_CONFIG 0001  
     ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001        POS_CURSOR@columna 0004  
