

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 01 20:20:28 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _LATD	set	3980
    71  0000                     _ADCON0	set	4034
    72  0000                     _PORTD	set	3971
    73  0000                     _LATDbits	set	3980
    74  0000                     _TRISCbits	set	3988
    75  0000                     _TRISD	set	3989
    76  0000                     _CCP1CON	set	4029
    77  0000                     _CCPR1L	set	4030
    78  0000                     _PR2	set	4043
    79  0000                     _ADCON2	set	4032
    80  0000                     _T2CON	set	4042
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON1	set	4033
    84                           
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     STR_1:
    90  000801  4C                 	db	76	;'L'
    91  000802  61                 	db	97	;'a'
    92  000803  62                 	db	98	;'b'
    93  000804  20                 	db	32
    94  000805  31                 	db	49	;'1'
    95  000806  31                 	db	49	;'1'
    96  000807  20                 	db	32
    97  000808  4D                 	db	77	;'M'
    98  000809  69                 	db	105	;'i'
    99  00080A  63                 	db	99	;'c'
   100  00080B  72                 	db	114	;'r'
   101  00080C  6F                 	db	111	;'o'
   102  00080D  00                 	db	0
   103  00080E                     STR_2:
   104  00080E  43                 	db	67	;'C'
   105  00080F  48                 	db	72	;'H'
   106  000810  31                 	db	49	;'1'
   107  000811  3A                 	db	58	;':'
   108  000812  00                 	db	0
   109  000813  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  0013C8                     __pcinit:
   115                           	callstack 0
   116  0013C8                     start_initialization:
   117                           	callstack 0
   118  0013C8                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Clear objects allocated to COMRAM (3 bytes)
   122  0013C8  6A34               	clrf	(__pbssCOMRAM+2)& (0+255),c
   123  0013CA  6A33               	clrf	(__pbssCOMRAM+1)& (0+255),c
   124  0013CC  6A32               	clrf	__pbssCOMRAM& (0+255),c
   125  0013CE                     end_of_initialization:
   126                           	callstack 0
   127  0013CE                     __end_of__initialization:
   128                           	callstack 0
   129  0013CE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   130  0013D0  6EF8               	movwf	tblptru,c
   131  0013D2  0E08               	movlw	high __Lsmallconst
   132  0013D4  6EF7               	movwf	tblptrh,c
   133  0013D6  0100               	movlb	0
   134  0013D8  EF7C  F007         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137  000032                     __pbssCOMRAM:
   138                           	callstack 0
   139  000032                     _unidad:
   140                           	callstack 0
   141  000032                     	ds	1
   142  000033                     _decena:
   143                           	callstack 0
   144  000033                     	ds	1
   145  000034                     _centena:
   146                           	callstack 0
   147  000034                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000001                     ?___awmod:
   153                           	callstack 0
   154  000001                     ?___xxtofl:
   155                           	callstack 0
   156  000001                     ENVIA_NIBBLE@dato:
   157                           	callstack 0
   158  000001                     LEER_LCD@aux:
   159                           	callstack 0
   160  000001                     ___awmod@dividend:
   161                           	callstack 0
   162  000001                     ___xxtofl@val:
   163                           	callstack 0
   164                           
   165                           ; 4 bytes @ 0x0
   166  000001                     	ds	1
   167  000002                     ENVIA_CHAR@dato:
   168                           	callstack 0
   169  000002                     ENVIA_LCD_CMD@dato:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x1
   173  000002                     	ds	1
   174  000003                     ENVIA_CHAR@aux:
   175                           	callstack 0
   176  000003                     ENVIA_LCD_CMD@aux:
   177                           	callstack 0
   178  000003                     ___awmod@divisor:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x2
   182  000003                     	ds	1
   183  000004                     ??_LCD_CONFIG:
   184  000004                     POS_CURSOR@columna:
   185                           	callstack 0
   186  000004                     CURSOR_ONOFF@estado:
   187                           	callstack 0
   188  000004                     ESCRIBE_MENSAJE@cadena:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     ??_LCD_config:
   194  000005                     ??___xxtofl:
   195  000005                     POS_CURSOR@fila:
   196                           	callstack 0
   197  000005                     ___awmod@counter:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x4
   201  000005                     	ds	1
   202  000006                     ESCRIBE_MENSAJE@tam:
   203                           	callstack 0
   204  000006                     ___awmod@sign:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x5
   208  000006                     	ds	1
   209  000007                     ??_ESCRIBE_MENSAJE:
   210  000007                     ?___awdiv:
   211                           	callstack 0
   212  000007                     ___awdiv@dividend:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0x6
   216  000007                     	ds	2
   217  000009                     ESCRIBE_MENSAJE@i:
   218                           	callstack 0
   219  000009                     ___xxtofl@sign:
   220                           	callstack 0
   221  000009                     ___awdiv@divisor:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x8
   225  000009                     	ds	1
   226  00000A                     ___xxtofl@exp:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x9
   230  00000A                     	ds	1
   231  00000B                     ___awdiv@counter:
   232                           	callstack 0
   233  00000B                     ___xxtofl@arg:
   234                           	callstack 0
   235                           
   236                           ; 4 bytes @ 0xA
   237  00000B                     	ds	1
   238  00000C                     ___awdiv@sign:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0xB
   242  00000C                     	ds	1
   243  00000D                     ___awdiv@quotient:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0xC
   247  00000D                     	ds	2
   248  00000F                     ?___flmul:
   249                           	callstack 0
   250  00000F                     convierte@numero:
   251                           	callstack 0
   252  00000F                     ___flmul@b:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0xE
   256  00000F                     	ds	4
   257  000013                     ___flmul@a:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x12
   261  000013                     	ds	4
   262  000017                     ??___flmul:
   263                           
   264                           ; 1 bytes @ 0x16
   265  000017                     	ds	4
   266  00001B                     ___flmul@sign:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x1A
   270  00001B                     	ds	1
   271  00001C                     ___flmul@grs:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x1B
   275  00001C                     	ds	4
   276  000020                     ___flmul@aexp:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x1F
   280  000020                     	ds	1
   281  000021                     ___flmul@bexp:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0x20
   285  000021                     	ds	1
   286  000022                     ___flmul@prod:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x21
   290  000022                     	ds	4
   291  000026                     ___flmul@temp:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x25
   295  000026                     	ds	2
   296  000028                     ?___fltol:
   297                           	callstack 0
   298  000028                     ___fltol@f1:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x27
   302  000028                     	ds	4
   303  00002C                     ??___fltol:
   304                           
   305                           ; 1 bytes @ 0x2B
   306  00002C                     	ds	4
   307  000030                     ___fltol@sign1:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x2F
   311  000030                     	ds	1
   312  000031                     ___fltol@exp1:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x30
   316  000031                     	ds	1
   317  000032                     
   318                           ; 1 bytes @ 0x31
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 41 in file "maincode.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ADC_config
   346 ;;		_CCP1_config
   347 ;;		_ENVIA_CHAR
   348 ;;		_ESCRIBE_MENSAJE
   349 ;;		_INIT_config
   350 ;;		_LCD_config
   351 ;;		_POS_CURSOR
   352 ;;		___flmul
   353 ;;		___fltol
   354 ;;		___xxtofl
   355 ;;		_convierte
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text0
   362  000EF8                     __ptext0:
   363                           	callstack 0
   364  000EF8                     _main:
   365                           	callstack 27
   366  000EF8                     
   367                           ;maincode.c: 42:     INIT_config();
   368  000EF8  EC06  F00A         	call	_INIT_config	;wreg free
   369  000EFC                     
   370                           ;maincode.c: 43:     CCP1_config();
   371  000EFC  ECEE  F009         	call	_CCP1_config	;wreg free
   372  000F00                     
   373                           ;maincode.c: 44:     LCD_config();
   374  000F00  ECC2  F009         	call	_LCD_config	;wreg free
   375  000F04                     
   376                           ;maincode.c: 45:     ADC_config();
   377  000F04  ECF8  F009         	call	_ADC_config	;wreg free
   378  000F08                     
   379                           ;maincode.c: 46:     POS_CURSOR(1,0);
   380  000F08  0E00               	movlw	0
   381  000F0A  6E04               	movwf	POS_CURSOR@columna^0,c
   382  000F0C  0E01               	movlw	1
   383  000F0E  EC59  F009         	call	_POS_CURSOR
   384  000F12                     
   385                           ;maincode.c: 47:     ESCRIBE_MENSAJE("Lab 11 Micro", 12);
   386  000F12  0E01               	movlw	low STR_1
   387  000F14  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   388  000F16  0E08               	movlw	high STR_1
   389  000F18  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   390  000F1A  0E0C               	movlw	12
   391  000F1C  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   392  000F1E  EC3A  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   393  000F22                     l1674:
   394                           
   395                           ;maincode.c: 49:         ADCON0 = 0x07;
   396  000F22  0E07               	movlw	7
   397  000F24  6EC2               	movwf	194,c	;volatile
   398  000F26                     l65:
   399  000F26  B2C2               	btfsc	194,1,c	;volatile
   400  000F28  EF98  F007         	goto	u1121
   401  000F2C  EF9A  F007         	goto	u1120
   402  000F30                     u1121:
   403  000F30  EF93  F007         	goto	l65
   404  000F34                     u1120:
   405  000F34                     
   406                           ;maincode.c: 51:         CCPR1L = ADRESH * 0.61;
   407  000F34  0EF6               	movlw	246
   408  000F36  6E13               	movwf	___flmul@a^0,c
   409  000F38  0E28               	movlw	40
   410  000F3A  6E14               	movwf	(___flmul@a+1)^0,c
   411  000F3C  0E1C               	movlw	28
   412  000F3E  6E15               	movwf	(___flmul@a+2)^0,c
   413  000F40  0E3F               	movlw	63
   414  000F42  6E16               	movwf	(___flmul@a+3)^0,c
   415  000F44  50C4               	movf	196,w,c	;volatile
   416  000F46  6E01               	movwf	___xxtofl@val^0,c
   417  000F48  6A02               	clrf	(___xxtofl@val+1)^0,c
   418  000F4A  6A03               	clrf	(___xxtofl@val+2)^0,c
   419  000F4C  6A04               	clrf	(___xxtofl@val+3)^0,c
   420  000F4E  0E01               	movlw	1
   421  000F50  EC1F  F006         	call	___xxtofl
   422  000F54  C001  F00F         	movff	?___xxtofl,___flmul@b
   423  000F58  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   424  000F5C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   425  000F60  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   426  000F64  EC0A  F004         	call	___flmul	;wreg free
   427  000F68  C00F  F028         	movff	?___flmul,___fltol@f1
   428  000F6C  C010  F029         	movff	?___flmul+1,___fltol@f1+1
   429  000F70  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
   430  000F74  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
   431  000F78  ECF9  F006         	call	___fltol	;wreg free
   432  000F7C  5028               	movf	?___fltol^0,w,c
   433  000F7E  6EBE               	movwf	190,c	;volatile
   434  000F80                     
   435                           ;maincode.c: 52:         convierte(CCPR1L);
   436  000F80  50BE               	movf	190,w,c	;volatile
   437  000F82  ECD3  F008         	call	_convierte
   438  000F86                     
   439                           ;maincode.c: 53:         POS_CURSOR(2,0);
   440  000F86  0E00               	movlw	0
   441  000F88  6E04               	movwf	POS_CURSOR@columna^0,c
   442  000F8A  0E02               	movlw	2
   443  000F8C  EC59  F009         	call	_POS_CURSOR
   444  000F90                     
   445                           ;maincode.c: 54:         ESCRIBE_MENSAJE("CH1:", 4);
   446  000F90  0E0E               	movlw	low STR_2
   447  000F92  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   448  000F94  0E08               	movlw	high STR_2
   449  000F96  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   450  000F98  0E04               	movlw	4
   451  000F9A  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   452  000F9C  EC3A  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   453  000FA0                     
   454                           ;maincode.c: 55:         ENVIA_CHAR(centena + 0x30);
   455  000FA0  5034               	movf	_centena^0,w,c
   456  000FA2  0F30               	addlw	48
   457  000FA4  EC90  F009         	call	_ENVIA_CHAR
   458  000FA8                     
   459                           ;maincode.c: 56:         ENVIA_CHAR(decena + 0x30);
   460  000FA8  5033               	movf	_decena^0,w,c
   461  000FAA  0F30               	addlw	48
   462  000FAC  EC90  F009         	call	_ENVIA_CHAR
   463  000FB0                     
   464                           ;maincode.c: 57:         ENVIA_CHAR(unidad + 0x30);
   465  000FB0  5032               	movf	_unidad^0,w,c
   466  000FB2  0F30               	addlw	48
   467  000FB4  EC90  F009         	call	_ENVIA_CHAR
   468  000FB8  EF91  F007         	goto	l1674
   469  000FBC  EF00  F000         	goto	start
   470  000FC0                     __end_of_main:
   471                           	callstack 0
   472                           
   473 ;; *************** function _convierte *****************
   474 ;; Defined at:
   475 ;;		line 35 in file "maincode.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  numero          1    wreg     unsigned char 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  numero          1   14[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   489 ;;      Params:         0       0       0       0       0       0       0       0       0
   490 ;;      Locals:         1       0       0       0       0       0       0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0
   492 ;;      Totals:         1       0       0       0       0       0       0       0       0
   493 ;;Total ram usage:        1 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 1
   496 ;; This function calls:
   497 ;;		___awdiv
   498 ;;		___awmod
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  0011A6                     __ptext1:
   506                           	callstack 0
   507  0011A6                     _convierte:
   508                           	callstack 29
   509                           
   510                           ;incstack = 0
   511                           ;convierte@numero stored from wreg
   512  0011A6  6E0F               	movwf	convierte@numero^0,c
   513  0011A8                     
   514                           ;maincode.c: 36:     centena = (numero % 1000) / 100;
   515  0011A8  0E03               	movlw	3
   516  0011AA  6E04               	movwf	(___awmod@divisor+1)^0,c
   517  0011AC  0EE8               	movlw	232
   518  0011AE  6E03               	movwf	___awmod@divisor^0,c
   519  0011B0  C00F  F001         	movff	convierte@numero,___awmod@dividend
   520  0011B4  6A02               	clrf	(___awmod@dividend+1)^0,c
   521  0011B6  EC42  F008         	call	___awmod	;wreg free
   522  0011BA  C001  F007         	movff	?___awmod,___awdiv@dividend
   523  0011BE  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   524  0011C2  0E00               	movlw	0
   525  0011C4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   526  0011C6  0E64               	movlw	100
   527  0011C8  6E09               	movwf	___awdiv@divisor^0,c
   528  0011CA  ECE0  F007         	call	___awdiv	;wreg free
   529  0011CE  5007               	movf	?___awdiv^0,w,c
   530  0011D0  6E34               	movwf	_centena^0,c
   531                           
   532                           ;maincode.c: 37:     decena = (numero % 100) / 10;
   533  0011D2  0E00               	movlw	0
   534  0011D4  6E04               	movwf	(___awmod@divisor+1)^0,c
   535  0011D6  0E64               	movlw	100
   536  0011D8  6E03               	movwf	___awmod@divisor^0,c
   537  0011DA  C00F  F001         	movff	convierte@numero,___awmod@dividend
   538  0011DE  6A02               	clrf	(___awmod@dividend+1)^0,c
   539  0011E0  EC42  F008         	call	___awmod	;wreg free
   540  0011E4  C001  F007         	movff	?___awmod,___awdiv@dividend
   541  0011E8  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   542  0011EC  0E00               	movlw	0
   543  0011EE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   544  0011F0  0E0A               	movlw	10
   545  0011F2  6E09               	movwf	___awdiv@divisor^0,c
   546  0011F4  ECE0  F007         	call	___awdiv	;wreg free
   547  0011F8  5007               	movf	?___awdiv^0,w,c
   548  0011FA  6E33               	movwf	_decena^0,c
   549                           
   550                           ;maincode.c: 38:     unidad = numero % 10;
   551  0011FC  C00F  F001         	movff	convierte@numero,___awmod@dividend
   552  001200  6A02               	clrf	(___awmod@dividend+1)^0,c
   553  001202  0E00               	movlw	0
   554  001204  6E04               	movwf	(___awmod@divisor+1)^0,c
   555  001206  0E0A               	movlw	10
   556  001208  6E03               	movwf	___awmod@divisor^0,c
   557  00120A  EC42  F008         	call	___awmod	;wreg free
   558  00120E  5001               	movf	?___awmod^0,w,c
   559  001210  6E32               	movwf	_unidad^0,c
   560  001212  0012               	return		;funcret
   561  001214                     __end_of_convierte:
   562                           	callstack 0
   563                           
   564 ;; *************** function ___awmod *****************
   565 ;; Defined at:
   566 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  dividend        2    0[COMRAM] int 
   569 ;;  divisor         2    2[COMRAM] int 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  sign            1    5[COMRAM] unsigned char 
   572 ;;  counter         1    4[COMRAM] unsigned char 
   573 ;; Return value:  Size  Location     Type
   574 ;;                  2    0[COMRAM] int 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   582 ;;      Params:         4       0       0       0       0       0       0       0       0
   583 ;;      Locals:         2       0       0       0       0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0
   585 ;;      Totals:         6       0       0       0       0       0       0       0       0
   586 ;;Total ram usage:        6 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; This function calls:
   589 ;;		Nothing
   590 ;; This function is called by:
   591 ;;		_convierte
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           	psect	text2
   596  001084                     __ptext2:
   597                           	callstack 0
   598  001084                     ___awmod:
   599                           	callstack 29
   600  001084  0E00               	movlw	0
   601  001086  6E06               	movwf	___awmod@sign^0,c
   602  001088  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   603  00108A  EF4B  F008         	goto	u670
   604  00108E  EF49  F008         	goto	u671
   605  001092                     u671:
   606  001092  EF51  F008         	goto	l1396
   607  001096                     u670:
   608  001096  6C01               	negf	___awmod@dividend^0,c
   609  001098  1E02               	comf	(___awmod@dividend+1)^0,f,c
   610  00109A  B0D8               	btfsc	status,0,c
   611  00109C  2A02               	incf	(___awmod@dividend+1)^0,f,c
   612  00109E  0E01               	movlw	1
   613  0010A0  6E06               	movwf	___awmod@sign^0,c
   614  0010A2                     l1396:
   615  0010A2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   616  0010A4  EF58  F008         	goto	u680
   617  0010A8  EF56  F008         	goto	u681
   618  0010AC                     u681:
   619  0010AC  EF5C  F008         	goto	l1400
   620  0010B0                     u680:
   621  0010B0  6C03               	negf	___awmod@divisor^0,c
   622  0010B2  1E04               	comf	(___awmod@divisor+1)^0,f,c
   623  0010B4  B0D8               	btfsc	status,0,c
   624  0010B6  2A04               	incf	(___awmod@divisor+1)^0,f,c
   625  0010B8                     l1400:
   626  0010B8  5003               	movf	___awmod@divisor^0,w,c
   627  0010BA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   628  0010BC  B4D8               	btfsc	status,2,c
   629  0010BE  EF63  F008         	goto	u691
   630  0010C2  EF65  F008         	goto	u690
   631  0010C6                     u691:
   632  0010C6  EF89  F008         	goto	l1416
   633  0010CA                     u690:
   634  0010CA  0E01               	movlw	1
   635  0010CC  6E05               	movwf	___awmod@counter^0,c
   636  0010CE  EF6D  F008         	goto	l1406
   637  0010D2                     l1404:
   638  0010D2  90D8               	bcf	status,0,c
   639  0010D4  3603               	rlcf	___awmod@divisor^0,f,c
   640  0010D6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   641  0010D8  2A05               	incf	___awmod@counter^0,f,c
   642  0010DA                     l1406:
   643  0010DA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   644  0010DC  EF72  F008         	goto	u701
   645  0010E0  EF74  F008         	goto	u700
   646  0010E4                     u701:
   647  0010E4  EF69  F008         	goto	l1404
   648  0010E8                     u700:
   649  0010E8                     l1408:
   650  0010E8  5003               	movf	___awmod@divisor^0,w,c
   651  0010EA  5C01               	subwf	___awmod@dividend^0,w,c
   652  0010EC  5004               	movf	(___awmod@divisor+1)^0,w,c
   653  0010EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   654  0010F0  A0D8               	btfss	status,0,c
   655  0010F2  EF7D  F008         	goto	u711
   656  0010F6  EF7F  F008         	goto	u710
   657  0010FA                     u711:
   658  0010FA  EF83  F008         	goto	l1412
   659  0010FE                     u710:
   660  0010FE  5003               	movf	___awmod@divisor^0,w,c
   661  001100  5E01               	subwf	___awmod@dividend^0,f,c
   662  001102  5004               	movf	(___awmod@divisor+1)^0,w,c
   663  001104  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   664  001106                     l1412:
   665  001106  90D8               	bcf	status,0,c
   666  001108  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   667  00110A  3203               	rrcf	___awmod@divisor^0,f,c
   668  00110C  2E05               	decfsz	___awmod@counter^0,f,c
   669  00110E  EF74  F008         	goto	l1408
   670  001112                     l1416:
   671  001112  5006               	movf	___awmod@sign^0,w,c
   672  001114  B4D8               	btfsc	status,2,c
   673  001116  EF8F  F008         	goto	u721
   674  00111A  EF91  F008         	goto	u720
   675  00111E                     u721:
   676  00111E  EF95  F008         	goto	l1420
   677  001122                     u720:
   678  001122  6C01               	negf	___awmod@dividend^0,c
   679  001124  1E02               	comf	(___awmod@dividend+1)^0,f,c
   680  001126  B0D8               	btfsc	status,0,c
   681  001128  2A02               	incf	(___awmod@dividend+1)^0,f,c
   682  00112A                     l1420:
   683  00112A  C001  F001         	movff	___awmod@dividend,?___awmod
   684  00112E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   685  001132  0012               	return		;funcret
   686  001134                     __end_of___awmod:
   687                           	callstack 0
   688                           
   689 ;; *************** function ___awdiv *****************
   690 ;; Defined at:
   691 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  dividend        2    6[COMRAM] int 
   694 ;;  divisor         2    8[COMRAM] int 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  quotient        2   12[COMRAM] int 
   697 ;;  sign            1   11[COMRAM] unsigned char 
   698 ;;  counter         1   10[COMRAM] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  2    6[COMRAM] int 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   708 ;;      Params:         4       0       0       0       0       0       0       0       0
   709 ;;      Locals:         4       0       0       0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0
   711 ;;      Totals:         8       0       0       0       0       0       0       0       0
   712 ;;Total ram usage:        8 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_convierte
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text3
   722  000FC0                     __ptext3:
   723                           	callstack 0
   724  000FC0                     ___awdiv:
   725                           	callstack 29
   726  000FC0  0E00               	movlw	0
   727  000FC2  6E0C               	movwf	___awdiv@sign^0,c
   728  000FC4  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   729  000FC6  EFE9  F007         	goto	u610
   730  000FCA  EFE7  F007         	goto	u611
   731  000FCE                     u611:
   732  000FCE  EFEF  F007         	goto	l1352
   733  000FD2                     u610:
   734  000FD2  6C09               	negf	___awdiv@divisor^0,c
   735  000FD4  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   736  000FD6  B0D8               	btfsc	status,0,c
   737  000FD8  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   738  000FDA  0E01               	movlw	1
   739  000FDC  6E0C               	movwf	___awdiv@sign^0,c
   740  000FDE                     l1352:
   741  000FDE  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   742  000FE0  EFF6  F007         	goto	u620
   743  000FE4  EFF4  F007         	goto	u621
   744  000FE8                     u621:
   745  000FE8  EFFC  F007         	goto	l1358
   746  000FEC                     u620:
   747  000FEC  6C07               	negf	___awdiv@dividend^0,c
   748  000FEE  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   749  000FF0  B0D8               	btfsc	status,0,c
   750  000FF2  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   751  000FF4  0E01               	movlw	1
   752  000FF6  1A0C               	xorwf	___awdiv@sign^0,f,c
   753  000FF8                     l1358:
   754  000FF8  0E00               	movlw	0
   755  000FFA  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   756  000FFC  0E00               	movlw	0
   757  000FFE  6E0D               	movwf	___awdiv@quotient^0,c
   758  001000  5009               	movf	___awdiv@divisor^0,w,c
   759  001002  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   760  001004  B4D8               	btfsc	status,2,c
   761  001006  EF07  F008         	goto	u631
   762  00100A  EF09  F008         	goto	u630
   763  00100E                     u631:
   764  00100E  EF31  F008         	goto	l1380
   765  001012                     u630:
   766  001012  0E01               	movlw	1
   767  001014  6E0B               	movwf	___awdiv@counter^0,c
   768  001016  EF11  F008         	goto	l1366
   769  00101A                     l1364:
   770  00101A  90D8               	bcf	status,0,c
   771  00101C  3609               	rlcf	___awdiv@divisor^0,f,c
   772  00101E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   773  001020  2A0B               	incf	___awdiv@counter^0,f,c
   774  001022                     l1366:
   775  001022  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   776  001024  EF16  F008         	goto	u641
   777  001028  EF18  F008         	goto	u640
   778  00102C                     u641:
   779  00102C  EF0D  F008         	goto	l1364
   780  001030                     u640:
   781  001030                     l1368:
   782  001030  90D8               	bcf	status,0,c
   783  001032  360D               	rlcf	___awdiv@quotient^0,f,c
   784  001034  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   785  001036  5009               	movf	___awdiv@divisor^0,w,c
   786  001038  5C07               	subwf	___awdiv@dividend^0,w,c
   787  00103A  500A               	movf	(___awdiv@divisor+1)^0,w,c
   788  00103C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   789  00103E  A0D8               	btfss	status,0,c
   790  001040  EF24  F008         	goto	u651
   791  001044  EF26  F008         	goto	u650
   792  001048                     u651:
   793  001048  EF2B  F008         	goto	l1376
   794  00104C                     u650:
   795  00104C  5009               	movf	___awdiv@divisor^0,w,c
   796  00104E  5E07               	subwf	___awdiv@dividend^0,f,c
   797  001050  500A               	movf	(___awdiv@divisor+1)^0,w,c
   798  001052  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   799  001054  800D               	bsf	___awdiv@quotient^0,0,c
   800  001056                     l1376:
   801  001056  90D8               	bcf	status,0,c
   802  001058  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   803  00105A  3209               	rrcf	___awdiv@divisor^0,f,c
   804  00105C  2E0B               	decfsz	___awdiv@counter^0,f,c
   805  00105E  EF18  F008         	goto	l1368
   806  001062                     l1380:
   807  001062  500C               	movf	___awdiv@sign^0,w,c
   808  001064  B4D8               	btfsc	status,2,c
   809  001066  EF37  F008         	goto	u661
   810  00106A  EF39  F008         	goto	u660
   811  00106E                     u661:
   812  00106E  EF3D  F008         	goto	l1384
   813  001072                     u660:
   814  001072  6C0D               	negf	___awdiv@quotient^0,c
   815  001074  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   816  001076  B0D8               	btfsc	status,0,c
   817  001078  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   818  00107A                     l1384:
   819  00107A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   820  00107E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   821  001082  0012               	return		;funcret
   822  001084                     __end_of___awdiv:
   823                           	callstack 0
   824                           
   825 ;; *************** function ___xxtofl *****************
   826 ;; Defined at:
   827 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  sign            1    wreg     unsigned char 
   830 ;;  val             4    0[COMRAM] long 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;  sign            1    8[COMRAM] unsigned char 
   833 ;;  arg             4   10[COMRAM] unsigned long 
   834 ;;  exp             1    9[COMRAM] unsigned char 
   835 ;; Return value:  Size  Location     Type
   836 ;;                  4    0[COMRAM] unsigned char 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   844 ;;      Params:         4       0       0       0       0       0       0       0       0
   845 ;;      Locals:         6       0       0       0       0       0       0       0       0
   846 ;;      Temps:          4       0       0       0       0       0       0       0       0
   847 ;;      Totals:        14       0       0       0       0       0       0       0       0
   848 ;;Total ram usage:       14 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text4
   858  000C3E                     __ptext4:
   859                           	callstack 0
   860  000C3E                     ___xxtofl:
   861                           	callstack 30
   862                           
   863                           ;incstack = 0
   864                           ;___xxtofl@sign stored from wreg
   865  000C3E  6E09               	movwf	___xxtofl@sign^0,c
   866  000C40  5009               	movf	___xxtofl@sign^0,w,c
   867  000C42  B4D8               	btfsc	status,2,c
   868  000C44  EF26  F006         	goto	u1021
   869  000C48  EF28  F006         	goto	u1020
   870  000C4C                     u1021:
   871  000C4C  EF4A  F006         	goto	l802
   872  000C50                     u1020:
   873  000C50  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
   874  000C52  EF2F  F006         	goto	u1030
   875  000C56  EF2D  F006         	goto	u1031
   876  000C5A                     u1031:
   877  000C5A  EF4A  F006         	goto	l802
   878  000C5E                     u1030:
   879  000C5E  C001  F005         	movff	___xxtofl@val,??___xxtofl
   880  000C62  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
   881  000C66  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
   882  000C6A  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
   883  000C6E  1E05               	comf	??___xxtofl^0,f,c
   884  000C70  1E06               	comf	(??___xxtofl+1)^0,f,c
   885  000C72  1E07               	comf	(??___xxtofl+2)^0,f,c
   886  000C74  1E08               	comf	(??___xxtofl+3)^0,f,c
   887  000C76  2A05               	incf	??___xxtofl^0,f,c
   888  000C78  0E00               	movlw	0
   889  000C7A  2206               	addwfc	(??___xxtofl+1)^0,f,c
   890  000C7C  2207               	addwfc	(??___xxtofl+2)^0,f,c
   891  000C7E  2208               	addwfc	(??___xxtofl+3)^0,f,c
   892  000C80  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
   893  000C84  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
   894  000C88  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
   895  000C8C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
   896  000C90  EF52  F006         	goto	l1622
   897  000C94                     l802:
   898  000C94  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
   899  000C98  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
   900  000C9C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
   901  000CA0  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
   902  000CA4                     l1622:
   903  000CA4  5001               	movf	___xxtofl@val^0,w,c
   904  000CA6  1002               	iorwf	(___xxtofl@val+1)^0,w,c
   905  000CA8  1003               	iorwf	(___xxtofl@val+2)^0,w,c
   906  000CAA  1004               	iorwf	(___xxtofl@val+3)^0,w,c
   907  000CAC  A4D8               	btfss	status,2,c
   908  000CAE  EF5B  F006         	goto	u1041
   909  000CB2  EF5D  F006         	goto	u1040
   910  000CB6                     u1041:
   911  000CB6  EF67  F006         	goto	l1628
   912  000CBA                     u1040:
   913  000CBA  0E00               	movlw	0
   914  000CBC  6E01               	movwf	?___xxtofl^0,c
   915  000CBE  0E00               	movlw	0
   916  000CC0  6E02               	movwf	(?___xxtofl+1)^0,c
   917  000CC2  0E00               	movlw	0
   918  000CC4  6E03               	movwf	(?___xxtofl+2)^0,c
   919  000CC6  0E00               	movlw	0
   920  000CC8  6E04               	movwf	(?___xxtofl+3)^0,c
   921  000CCA  EFF8  F006         	goto	l805
   922  000CCE                     l1628:
   923  000CCE  0E96               	movlw	150
   924  000CD0  6E0A               	movwf	___xxtofl@exp^0,c
   925  000CD2  EF71  F006         	goto	l1632
   926  000CD6                     l1630:
   927  000CD6  2A0A               	incf	___xxtofl@exp^0,f,c
   928  000CD8  90D8               	bcf	status,0,c
   929  000CDA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
   930  000CDC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
   931  000CDE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
   932  000CE0  320B               	rrcf	___xxtofl@arg^0,f,c
   933  000CE2                     l1632:
   934  000CE2  0E00               	movlw	0
   935  000CE4  140B               	andwf	___xxtofl@arg^0,w,c
   936  000CE6  6E05               	movwf	??___xxtofl^0,c
   937  000CE8  0E00               	movlw	0
   938  000CEA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
   939  000CEC  6E06               	movwf	(??___xxtofl+1)^0,c
   940  000CEE  0E00               	movlw	0
   941  000CF0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
   942  000CF2  6E07               	movwf	(??___xxtofl+2)^0,c
   943  000CF4  0EFE               	movlw	254
   944  000CF6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
   945  000CF8  6E08               	movwf	(??___xxtofl+3)^0,c
   946  000CFA  5005               	movf	??___xxtofl^0,w,c
   947  000CFC  1006               	iorwf	(??___xxtofl+1)^0,w,c
   948  000CFE  1007               	iorwf	(??___xxtofl+2)^0,w,c
   949  000D00  1008               	iorwf	(??___xxtofl+3)^0,w,c
   950  000D02  A4D8               	btfss	status,2,c
   951  000D04  EF86  F006         	goto	u1051
   952  000D08  EF88  F006         	goto	u1050
   953  000D0C                     u1051:
   954  000D0C  EF6B  F006         	goto	l1630
   955  000D10                     u1050:
   956  000D10  EF96  F006         	goto	l809
   957  000D14                     l1634:
   958  000D14  2A0A               	incf	___xxtofl@exp^0,f,c
   959  000D16  0E01               	movlw	1
   960  000D18  260B               	addwf	___xxtofl@arg^0,f,c
   961  000D1A  0E00               	movlw	0
   962  000D1C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
   963  000D1E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
   964  000D20  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
   965  000D22  90D8               	bcf	status,0,c
   966  000D24  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
   967  000D26  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
   968  000D28  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
   969  000D2A  320B               	rrcf	___xxtofl@arg^0,f,c
   970  000D2C                     l809:
   971  000D2C  0E00               	movlw	0
   972  000D2E  140B               	andwf	___xxtofl@arg^0,w,c
   973  000D30  6E05               	movwf	??___xxtofl^0,c
   974  000D32  0E00               	movlw	0
   975  000D34  140C               	andwf	(___xxtofl@arg+1)^0,w,c
   976  000D36  6E06               	movwf	(??___xxtofl+1)^0,c
   977  000D38  0E00               	movlw	0
   978  000D3A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
   979  000D3C  6E07               	movwf	(??___xxtofl+2)^0,c
   980  000D3E  0EFF               	movlw	255
   981  000D40  140E               	andwf	(___xxtofl@arg+3)^0,w,c
   982  000D42  6E08               	movwf	(??___xxtofl+3)^0,c
   983  000D44  5005               	movf	??___xxtofl^0,w,c
   984  000D46  1006               	iorwf	(??___xxtofl+1)^0,w,c
   985  000D48  1007               	iorwf	(??___xxtofl+2)^0,w,c
   986  000D4A  1008               	iorwf	(??___xxtofl+3)^0,w,c
   987  000D4C  A4D8               	btfss	status,2,c
   988  000D4E  EFAB  F006         	goto	u1061
   989  000D52  EFAD  F006         	goto	u1060
   990  000D56                     u1061:
   991  000D56  EF8A  F006         	goto	l1634
   992  000D5A                     u1060:
   993  000D5A  EFB5  F006         	goto	l1642
   994  000D5E                     l1640:
   995  000D5E  060A               	decf	___xxtofl@exp^0,f,c
   996  000D60  90D8               	bcf	status,0,c
   997  000D62  360B               	rlcf	___xxtofl@arg^0,f,c
   998  000D64  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
   999  000D66  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1000  000D68  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1001  000D6A                     l1642:
  1002  000D6A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1003  000D6C  EFBA  F006         	goto	u1071
  1004  000D70  EFBC  F006         	goto	u1070
  1005  000D74                     u1071:
  1006  000D74  EFC4  F006         	goto	l816
  1007  000D78                     u1070:
  1008  000D78  0E02               	movlw	2
  1009  000D7A  600A               	cpfslt	___xxtofl@exp^0,c
  1010  000D7C  EFC2  F006         	goto	u1081
  1011  000D80  EFC4  F006         	goto	u1080
  1012  000D84                     u1081:
  1013  000D84  EFAF  F006         	goto	l1640
  1014  000D88                     u1080:
  1015  000D88                     l816:
  1016  000D88  B00A               	btfsc	___xxtofl@exp^0,0,c
  1017  000D8A  EFC9  F006         	goto	u1091
  1018  000D8E  EFCB  F006         	goto	u1090
  1019  000D92                     u1091:
  1020  000D92  EFCC  F006         	goto	l1648
  1021  000D96                     u1090:
  1022  000D96  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1023  000D98                     l1648:
  1024  000D98  90D8               	bcf	status,0,c
  1025  000D9A  320A               	rrcf	___xxtofl@exp^0,f,c
  1026  000D9C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1027  000DA0  6A06               	clrf	(??___xxtofl+1)^0,c
  1028  000DA2  6A07               	clrf	(??___xxtofl+2)^0,c
  1029  000DA4  6A08               	clrf	(??___xxtofl+3)^0,c
  1030  000DA6  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1031  000DAA  6A07               	clrf	(??___xxtofl+2)^0,c
  1032  000DAC  6A06               	clrf	(??___xxtofl+1)^0,c
  1033  000DAE  6A05               	clrf	??___xxtofl^0,c
  1034  000DB0  5005               	movf	??___xxtofl^0,w,c
  1035  000DB2  120B               	iorwf	___xxtofl@arg^0,f,c
  1036  000DB4  5006               	movf	(??___xxtofl+1)^0,w,c
  1037  000DB6  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1038  000DB8  5007               	movf	(??___xxtofl+2)^0,w,c
  1039  000DBA  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1040  000DBC  5008               	movf	(??___xxtofl+3)^0,w,c
  1041  000DBE  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1042  000DC0  5009               	movf	___xxtofl@sign^0,w,c
  1043  000DC2  B4D8               	btfsc	status,2,c
  1044  000DC4  EFE6  F006         	goto	u1101
  1045  000DC8  EFE8  F006         	goto	u1100
  1046  000DCC                     u1101:
  1047  000DCC  EFF0  F006         	goto	l1658
  1048  000DD0                     u1100:
  1049  000DD0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1050  000DD2  EFEF  F006         	goto	u1110
  1051  000DD6  EFED  F006         	goto	u1111
  1052  000DDA                     u1111:
  1053  000DDA  EFF0  F006         	goto	l1658
  1054  000DDE                     u1110:
  1055  000DDE  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1056  000DE0                     l1658:
  1057  000DE0  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1058  000DE4  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1059  000DE8  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1060  000DEC  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1061  000DF0                     l805:
  1062  000DF0  0012               	return		;funcret
  1063  000DF2                     __end_of___xxtofl:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function ___fltol *****************
  1067 ;; Defined at:
  1068 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  f1              4   39[COMRAM] unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  exp1            1   48[COMRAM] unsigned char 
  1073 ;;  sign1           1   47[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  4   39[COMRAM] long 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         4       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1086 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:       10 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  000DF2                     __ptext5:
  1098                           	callstack 0
  1099  000DF2                     ___fltol:
  1100                           	callstack 30
  1101  000DF2  342A               	rlcf	(___fltol@f1+2)^0,w,c
  1102  000DF4  342B               	rlcf	(___fltol@f1+3)^0,w,c
  1103  000DF6  6E31               	movwf	___fltol@exp1^0,c
  1104  000DF8  5031               	movf	___fltol@exp1^0,w,c
  1105  000DFA  A4D8               	btfss	status,2,c
  1106  000DFC  EF02  F007         	goto	u951
  1107  000E00  EF04  F007         	goto	u950
  1108  000E04                     u951:
  1109  000E04  EF0E  F007         	goto	l1578
  1110  000E08                     u950:
  1111  000E08                     l1574:
  1112  000E08  0E00               	movlw	0
  1113  000E0A  6E28               	movwf	?___fltol^0,c
  1114  000E0C  0E00               	movlw	0
  1115  000E0E  6E29               	movwf	(?___fltol+1)^0,c
  1116  000E10  0E00               	movlw	0
  1117  000E12  6E2A               	movwf	(?___fltol+2)^0,c
  1118  000E14  0E00               	movlw	0
  1119  000E16  6E2B               	movwf	(?___fltol+3)^0,c
  1120  000E18  EF7B  F007         	goto	l444
  1121  000E1C                     l1578:
  1122  000E1C  C028  F02C         	movff	___fltol@f1,??___fltol
  1123  000E20  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  1124  000E24  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  1125  000E28  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  1126  000E2C  0E20               	movlw	32
  1127  000E2E  EF1E  F007         	goto	u960
  1128  000E32                     u965:
  1129  000E32  90D8               	bcf	status,0,c
  1130  000E34  322F               	rrcf	(??___fltol+3)^0,f,c
  1131  000E36  322E               	rrcf	(??___fltol+2)^0,f,c
  1132  000E38  322D               	rrcf	(??___fltol+1)^0,f,c
  1133  000E3A  322C               	rrcf	??___fltol^0,f,c
  1134  000E3C                     u960:
  1135  000E3C  2EE8               	decfsz	wreg,f,c
  1136  000E3E  EF19  F007         	goto	u965
  1137  000E42  502C               	movf	??___fltol^0,w,c
  1138  000E44  6E30               	movwf	___fltol@sign1^0,c
  1139  000E46  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  1140  000E48  0EFF               	movlw	255
  1141  000E4A  1628               	andwf	___fltol@f1^0,f,c
  1142  000E4C  0EFF               	movlw	255
  1143  000E4E  1629               	andwf	(___fltol@f1+1)^0,f,c
  1144  000E50  0EFF               	movlw	255
  1145  000E52  162A               	andwf	(___fltol@f1+2)^0,f,c
  1146  000E54  0E00               	movlw	0
  1147  000E56  162B               	andwf	(___fltol@f1+3)^0,f,c
  1148  000E58  0E96               	movlw	150
  1149  000E5A  5E31               	subwf	___fltol@exp1^0,f,c
  1150  000E5C  BE31               	btfsc	___fltol@exp1^0,7,c
  1151  000E5E  EF35  F007         	goto	u970
  1152  000E62  EF33  F007         	goto	u971
  1153  000E66                     u971:
  1154  000E66  EF4B  F007         	goto	l1598
  1155  000E6A                     u970:
  1156  000E6A  5031               	movf	___fltol@exp1^0,w,c
  1157  000E6C  0A80               	xorlw	128
  1158  000E6E  0F97               	addlw	151
  1159  000E70  B0D8               	btfsc	status,0,c
  1160  000E72  EF3D  F007         	goto	u981
  1161  000E76  EF3F  F007         	goto	u980
  1162  000E7A                     u981:
  1163  000E7A  EF41  F007         	goto	l1594
  1164  000E7E                     u980:
  1165  000E7E  EF04  F007         	goto	l1574
  1166  000E82                     l1594:
  1167  000E82  90D8               	bcf	status,0,c
  1168  000E84  322B               	rrcf	(___fltol@f1+3)^0,f,c
  1169  000E86  322A               	rrcf	(___fltol@f1+2)^0,f,c
  1170  000E88  3229               	rrcf	(___fltol@f1+1)^0,f,c
  1171  000E8A  3228               	rrcf	___fltol@f1^0,f,c
  1172  000E8C  3E31               	incfsz	___fltol@exp1^0,f,c
  1173  000E8E  EF41  F007         	goto	l1594
  1174  000E92  EF63  F007         	goto	l1608
  1175  000E96                     l1598:
  1176  000E96  0E1F               	movlw	31
  1177  000E98  6431               	cpfsgt	___fltol@exp1^0,c
  1178  000E9A  EF51  F007         	goto	u991
  1179  000E9E  EF53  F007         	goto	u990
  1180  000EA2                     u991:
  1181  000EA2  EF5B  F007         	goto	l1606
  1182  000EA6                     u990:
  1183  000EA6  EF04  F007         	goto	l1574
  1184  000EAA                     l1604:
  1185  000EAA  90D8               	bcf	status,0,c
  1186  000EAC  3628               	rlcf	___fltol@f1^0,f,c
  1187  000EAE  3629               	rlcf	(___fltol@f1+1)^0,f,c
  1188  000EB0  362A               	rlcf	(___fltol@f1+2)^0,f,c
  1189  000EB2  362B               	rlcf	(___fltol@f1+3)^0,f,c
  1190  000EB4  0631               	decf	___fltol@exp1^0,f,c
  1191  000EB6                     l1606:
  1192  000EB6  5031               	movf	___fltol@exp1^0,w,c
  1193  000EB8  A4D8               	btfss	status,2,c
  1194  000EBA  EF61  F007         	goto	u1001
  1195  000EBE  EF63  F007         	goto	u1000
  1196  000EC2                     u1001:
  1197  000EC2  EF55  F007         	goto	l1604
  1198  000EC6                     u1000:
  1199  000EC6                     l1608:
  1200  000EC6  5030               	movf	___fltol@sign1^0,w,c
  1201  000EC8  B4D8               	btfsc	status,2,c
  1202  000ECA  EF69  F007         	goto	u1011
  1203  000ECE  EF6B  F007         	goto	u1010
  1204  000ED2                     u1011:
  1205  000ED2  EF73  F007         	goto	l1612
  1206  000ED6                     u1010:
  1207  000ED6  1E2B               	comf	(___fltol@f1+3)^0,f,c
  1208  000ED8  1E2A               	comf	(___fltol@f1+2)^0,f,c
  1209  000EDA  1E29               	comf	(___fltol@f1+1)^0,f,c
  1210  000EDC  6C28               	negf	___fltol@f1^0,c
  1211  000EDE  0E00               	movlw	0
  1212  000EE0  2229               	addwfc	(___fltol@f1+1)^0,f,c
  1213  000EE2  222A               	addwfc	(___fltol@f1+2)^0,f,c
  1214  000EE4  222B               	addwfc	(___fltol@f1+3)^0,f,c
  1215  000EE6                     l1612:
  1216  000EE6  C028  F028         	movff	___fltol@f1,?___fltol
  1217  000EEA  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  1218  000EEE  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  1219  000EF2  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  1220  000EF6                     l444:
  1221  000EF6  0012               	return		;funcret
  1222  000EF8                     __end_of___fltol:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function ___flmul *****************
  1226 ;; Defined at:
  1227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  b               4   14[COMRAM] long 
  1230 ;;  a               4   18[COMRAM] long 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  prod            4   33[COMRAM] struct .
  1233 ;;  grs             4   27[COMRAM] unsigned long 
  1234 ;;  temp            2   37[COMRAM] struct .
  1235 ;;  bexp            1   32[COMRAM] unsigned char 
  1236 ;;  aexp            1   31[COMRAM] unsigned char 
  1237 ;;  sign            1   26[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  4   14[COMRAM] unsigned char 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, prodl, prodh
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1247 ;;      Params:         8       0       0       0       0       0       0       0       0
  1248 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1249 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1250 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:       25 bytes
  1252 ;; Hardware stack levels used: 1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text6
  1261  000814                     __ptext6:
  1262                           	callstack 0
  1263  000814                     ___flmul:
  1264                           	callstack 30
  1265  000814  5012               	movf	(___flmul@b+3)^0,w,c
  1266  000816  0B80               	andlw	128
  1267  000818  6E1B               	movwf	___flmul@sign^0,c
  1268  00081A  5012               	movf	(___flmul@b+3)^0,w,c
  1269  00081C  2412               	addwf	(___flmul@b+3)^0,w,c
  1270  00081E  6E21               	movwf	___flmul@bexp^0,c
  1271  000820  AE11               	btfss	(___flmul@b+2)^0,7,c
  1272  000822  EF15  F004         	goto	u761
  1273  000826  EF17  F004         	goto	u760
  1274  00082A                     u761:
  1275  00082A  EF18  F004         	goto	l1448
  1276  00082E                     u760:
  1277  00082E  8021               	bsf	___flmul@bexp^0,0,c
  1278  000830                     l1448:
  1279  000830  5021               	movf	___flmul@bexp^0,w,c
  1280  000832  B4D8               	btfsc	status,2,c
  1281  000834  EF1E  F004         	goto	u771
  1282  000838  EF20  F004         	goto	u770
  1283  00083C                     u771:
  1284  00083C  EF33  F004         	goto	l1456
  1285  000840                     u770:
  1286  000840  2821               	incf	___flmul@bexp^0,w,c
  1287  000842  A4D8               	btfss	status,2,c
  1288  000844  EF26  F004         	goto	u781
  1289  000848  EF28  F004         	goto	u780
  1290  00084C                     u781:
  1291  00084C  EF30  F004         	goto	l1454
  1292  000850                     u780:
  1293  000850  0E00               	movlw	0
  1294  000852  6E0F               	movwf	___flmul@b^0,c
  1295  000854  0E00               	movlw	0
  1296  000856  6E10               	movwf	(___flmul@b+1)^0,c
  1297  000858  0E00               	movlw	0
  1298  00085A  6E11               	movwf	(___flmul@b+2)^0,c
  1299  00085C  0E00               	movlw	0
  1300  00085E  6E12               	movwf	(___flmul@b+3)^0,c
  1301  000860                     l1454:
  1302  000860  8E11               	bsf	(___flmul@b+2)^0,7,c
  1303  000862  EF3B  F004         	goto	l1458
  1304  000866                     l1456:
  1305  000866  0E00               	movlw	0
  1306  000868  6E0F               	movwf	___flmul@b^0,c
  1307  00086A  0E00               	movlw	0
  1308  00086C  6E10               	movwf	(___flmul@b+1)^0,c
  1309  00086E  0E00               	movlw	0
  1310  000870  6E11               	movwf	(___flmul@b+2)^0,c
  1311  000872  0E00               	movlw	0
  1312  000874  6E12               	movwf	(___flmul@b+3)^0,c
  1313  000876                     l1458:
  1314  000876  5016               	movf	(___flmul@a+3)^0,w,c
  1315  000878  0B80               	andlw	128
  1316  00087A  1A1B               	xorwf	___flmul@sign^0,f,c
  1317  00087C  5016               	movf	(___flmul@a+3)^0,w,c
  1318  00087E  2416               	addwf	(___flmul@a+3)^0,w,c
  1319  000880  6E20               	movwf	___flmul@aexp^0,c
  1320  000882  AE15               	btfss	(___flmul@a+2)^0,7,c
  1321  000884  EF46  F004         	goto	u791
  1322  000888  EF48  F004         	goto	u790
  1323  00088C                     u791:
  1324  00088C  EF49  F004         	goto	l1466
  1325  000890                     u790:
  1326  000890  8020               	bsf	___flmul@aexp^0,0,c
  1327  000892                     l1466:
  1328  000892  5020               	movf	___flmul@aexp^0,w,c
  1329  000894  B4D8               	btfsc	status,2,c
  1330  000896  EF4F  F004         	goto	u801
  1331  00089A  EF51  F004         	goto	u800
  1332  00089E                     u801:
  1333  00089E  EF64  F004         	goto	l1474
  1334  0008A2                     u800:
  1335  0008A2  2820               	incf	___flmul@aexp^0,w,c
  1336  0008A4  A4D8               	btfss	status,2,c
  1337  0008A6  EF57  F004         	goto	u811
  1338  0008AA  EF59  F004         	goto	u810
  1339  0008AE                     u811:
  1340  0008AE  EF61  F004         	goto	l1472
  1341  0008B2                     u810:
  1342  0008B2  0E00               	movlw	0
  1343  0008B4  6E13               	movwf	___flmul@a^0,c
  1344  0008B6  0E00               	movlw	0
  1345  0008B8  6E14               	movwf	(___flmul@a+1)^0,c
  1346  0008BA  0E00               	movlw	0
  1347  0008BC  6E15               	movwf	(___flmul@a+2)^0,c
  1348  0008BE  0E00               	movlw	0
  1349  0008C0  6E16               	movwf	(___flmul@a+3)^0,c
  1350  0008C2                     l1472:
  1351  0008C2  8E15               	bsf	(___flmul@a+2)^0,7,c
  1352  0008C4  EF6C  F004         	goto	l761
  1353  0008C8                     l1474:
  1354  0008C8  0E00               	movlw	0
  1355  0008CA  6E13               	movwf	___flmul@a^0,c
  1356  0008CC  0E00               	movlw	0
  1357  0008CE  6E14               	movwf	(___flmul@a+1)^0,c
  1358  0008D0  0E00               	movlw	0
  1359  0008D2  6E15               	movwf	(___flmul@a+2)^0,c
  1360  0008D4  0E00               	movlw	0
  1361  0008D6  6E16               	movwf	(___flmul@a+3)^0,c
  1362  0008D8                     l761:
  1363  0008D8  5020               	movf	___flmul@aexp^0,w,c
  1364  0008DA  B4D8               	btfsc	status,2,c
  1365  0008DC  EF72  F004         	goto	u821
  1366  0008E0  EF74  F004         	goto	u820
  1367  0008E4                     u821:
  1368  0008E4  EF7C  F004         	goto	l1478
  1369  0008E8                     u820:
  1370  0008E8  5021               	movf	___flmul@bexp^0,w,c
  1371  0008EA  A4D8               	btfss	status,2,c
  1372  0008EC  EF7A  F004         	goto	u831
  1373  0008F0  EF7C  F004         	goto	u830
  1374  0008F4                     u831:
  1375  0008F4  EF86  F004         	goto	l1482
  1376  0008F8                     u830:
  1377  0008F8                     l1478:
  1378  0008F8  0E00               	movlw	0
  1379  0008FA  6E0F               	movwf	?___flmul^0,c
  1380  0008FC  0E00               	movlw	0
  1381  0008FE  6E10               	movwf	(?___flmul+1)^0,c
  1382  000900  0E00               	movlw	0
  1383  000902  6E11               	movwf	(?___flmul+2)^0,c
  1384  000904  0E00               	movlw	0
  1385  000906  6E12               	movwf	(?___flmul+3)^0,c
  1386  000908  EF1E  F006         	goto	l765
  1387  00090C                     l1482:
  1388  00090C  5015               	movf	(___flmul@a+2)^0,w,c
  1389  00090E  020F               	mulwf	___flmul@b^0,c
  1390  000910  CFF3 F026          	movff	prodl,___flmul@temp
  1391  000914  CFF4 F027          	movff	prodh,___flmul@temp+1
  1392  000918  5026               	movf	___flmul@temp^0,w,c
  1393  00091A  6E1C               	movwf	___flmul@grs^0,c
  1394  00091C  6A1D               	clrf	(___flmul@grs+1)^0,c
  1395  00091E  6A1E               	clrf	(___flmul@grs+2)^0,c
  1396  000920  6A1F               	clrf	(___flmul@grs+3)^0,c
  1397  000922  5027               	movf	(___flmul@temp+1)^0,w,c
  1398  000924  6E22               	movwf	___flmul@prod^0,c
  1399  000926  6A23               	clrf	(___flmul@prod+1)^0,c
  1400  000928  6A24               	clrf	(___flmul@prod+2)^0,c
  1401  00092A  6A25               	clrf	(___flmul@prod+3)^0,c
  1402  00092C  5014               	movf	(___flmul@a+1)^0,w,c
  1403  00092E  0210               	mulwf	(___flmul@b+1)^0,c
  1404  000930  CFF3 F026          	movff	prodl,___flmul@temp
  1405  000934  CFF4 F027          	movff	prodh,___flmul@temp+1
  1406  000938  5026               	movf	___flmul@temp^0,w,c
  1407  00093A  261C               	addwf	___flmul@grs^0,f,c
  1408  00093C  0E00               	movlw	0
  1409  00093E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1410  000940  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1411  000942  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1412  000944  5027               	movf	(___flmul@temp+1)^0,w,c
  1413  000946  2622               	addwf	___flmul@prod^0,f,c
  1414  000948  0E00               	movlw	0
  1415  00094A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1416  00094C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1417  00094E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1418  000950  5013               	movf	___flmul@a^0,w,c
  1419  000952  0211               	mulwf	(___flmul@b+2)^0,c
  1420  000954  CFF3 F026          	movff	prodl,___flmul@temp
  1421  000958  CFF4 F027          	movff	prodh,___flmul@temp+1
  1422  00095C  5026               	movf	___flmul@temp^0,w,c
  1423  00095E  261C               	addwf	___flmul@grs^0,f,c
  1424  000960  0E00               	movlw	0
  1425  000962  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1426  000964  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1427  000966  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1428  000968  5027               	movf	(___flmul@temp+1)^0,w,c
  1429  00096A  2622               	addwf	___flmul@prod^0,f,c
  1430  00096C  0E00               	movlw	0
  1431  00096E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1432  000970  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1433  000972  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1434  000974  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1435  000978  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1436  00097C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1437  000980  6A1C               	clrf	___flmul@grs^0,c
  1438  000982  5013               	movf	___flmul@a^0,w,c
  1439  000984  0210               	mulwf	(___flmul@b+1)^0,c
  1440  000986  CFF3 F026          	movff	prodl,___flmul@temp
  1441  00098A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1442  00098E  5026               	movf	___flmul@temp^0,w,c
  1443  000990  261C               	addwf	___flmul@grs^0,f,c
  1444  000992  5027               	movf	(___flmul@temp+1)^0,w,c
  1445  000994  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1446  000996  0E00               	movlw	0
  1447  000998  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1448  00099A  0E00               	movlw	0
  1449  00099C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1450  00099E  5014               	movf	(___flmul@a+1)^0,w,c
  1451  0009A0  020F               	mulwf	___flmul@b^0,c
  1452  0009A2  CFF3 F026          	movff	prodl,___flmul@temp
  1453  0009A6  CFF4 F027          	movff	prodh,___flmul@temp+1
  1454  0009AA  5026               	movf	___flmul@temp^0,w,c
  1455  0009AC  261C               	addwf	___flmul@grs^0,f,c
  1456  0009AE  5027               	movf	(___flmul@temp+1)^0,w,c
  1457  0009B0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1458  0009B2  0E00               	movlw	0
  1459  0009B4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1460  0009B6  0E00               	movlw	0
  1461  0009B8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1462  0009BA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1463  0009BE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1464  0009C2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1465  0009C6  6A1C               	clrf	___flmul@grs^0,c
  1466  0009C8  5013               	movf	___flmul@a^0,w,c
  1467  0009CA  020F               	mulwf	___flmul@b^0,c
  1468  0009CC  CFF3 F026          	movff	prodl,___flmul@temp
  1469  0009D0  CFF4 F027          	movff	prodh,___flmul@temp+1
  1470  0009D4  5026               	movf	___flmul@temp^0,w,c
  1471  0009D6  261C               	addwf	___flmul@grs^0,f,c
  1472  0009D8  5027               	movf	(___flmul@temp+1)^0,w,c
  1473  0009DA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1474  0009DC  0E00               	movlw	0
  1475  0009DE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1476  0009E0  0E00               	movlw	0
  1477  0009E2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1478  0009E4  5015               	movf	(___flmul@a+2)^0,w,c
  1479  0009E6  0210               	mulwf	(___flmul@b+1)^0,c
  1480  0009E8  CFF3 F026          	movff	prodl,___flmul@temp
  1481  0009EC  CFF4 F027          	movff	prodh,___flmul@temp+1
  1482  0009F0  5026               	movf	___flmul@temp^0,w,c
  1483  0009F2  2622               	addwf	___flmul@prod^0,f,c
  1484  0009F4  5027               	movf	(___flmul@temp+1)^0,w,c
  1485  0009F6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1486  0009F8  0E00               	movlw	0
  1487  0009FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1488  0009FC  0E00               	movlw	0
  1489  0009FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1490  000A00  5014               	movf	(___flmul@a+1)^0,w,c
  1491  000A02  0211               	mulwf	(___flmul@b+2)^0,c
  1492  000A04  CFF3 F026          	movff	prodl,___flmul@temp
  1493  000A08  CFF4 F027          	movff	prodh,___flmul@temp+1
  1494  000A0C  5026               	movf	___flmul@temp^0,w,c
  1495  000A0E  2622               	addwf	___flmul@prod^0,f,c
  1496  000A10  5027               	movf	(___flmul@temp+1)^0,w,c
  1497  000A12  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1498  000A14  0E00               	movlw	0
  1499  000A16  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1500  000A18  0E00               	movlw	0
  1501  000A1A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1502  000A1C  5015               	movf	(___flmul@a+2)^0,w,c
  1503  000A1E  0211               	mulwf	(___flmul@b+2)^0,c
  1504  000A20  CFF3 F026          	movff	prodl,___flmul@temp
  1505  000A24  CFF4 F027          	movff	prodh,___flmul@temp+1
  1506  000A28  5026               	movf	___flmul@temp^0,w,c
  1507  000A2A  6E17               	movwf	??___flmul^0,c
  1508  000A2C  5027               	movf	(___flmul@temp+1)^0,w,c
  1509  000A2E  6E18               	movwf	(??___flmul+1)^0,c
  1510  000A30  6A19               	clrf	(??___flmul+2)^0,c
  1511  000A32  6A1A               	clrf	(??___flmul+3)^0,c
  1512  000A34  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1513  000A38  C018  F019         	movff	??___flmul+1,??___flmul+2
  1514  000A3C  C017  F018         	movff	??___flmul,??___flmul+1
  1515  000A40  6A17               	clrf	??___flmul^0,c
  1516  000A42  5017               	movf	??___flmul^0,w,c
  1517  000A44  2622               	addwf	___flmul@prod^0,f,c
  1518  000A46  5018               	movf	(??___flmul+1)^0,w,c
  1519  000A48  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1520  000A4A  5019               	movf	(??___flmul+2)^0,w,c
  1521  000A4C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1522  000A4E  501A               	movf	(??___flmul+3)^0,w,c
  1523  000A50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1524  000A52  C01C  F017         	movff	___flmul@grs,??___flmul
  1525  000A56  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1526  000A5A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1527  000A5E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1528  000A62  0E19               	movlw	25
  1529  000A64  EF39  F005         	goto	u840
  1530  000A68                     u845:
  1531  000A68  90D8               	bcf	status,0,c
  1532  000A6A  321A               	rrcf	(??___flmul+3)^0,f,c
  1533  000A6C  3219               	rrcf	(??___flmul+2)^0,f,c
  1534  000A6E  3218               	rrcf	(??___flmul+1)^0,f,c
  1535  000A70  3217               	rrcf	??___flmul^0,f,c
  1536  000A72                     u840:
  1537  000A72  2EE8               	decfsz	wreg,f,c
  1538  000A74  EF34  F005         	goto	u845
  1539  000A78  5017               	movf	??___flmul^0,w,c
  1540  000A7A  2622               	addwf	___flmul@prod^0,f,c
  1541  000A7C  5018               	movf	(??___flmul+1)^0,w,c
  1542  000A7E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1543  000A80  5019               	movf	(??___flmul+2)^0,w,c
  1544  000A82  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1545  000A84  501A               	movf	(??___flmul+3)^0,w,c
  1546  000A86  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1547  000A88  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1548  000A8C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1549  000A90  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1550  000A94  6A1C               	clrf	___flmul@grs^0,c
  1551  000A96  5020               	movf	___flmul@aexp^0,w,c
  1552  000A98  C021  F017         	movff	___flmul@bexp,??___flmul
  1553  000A9C  6A18               	clrf	(??___flmul+1)^0,c
  1554  000A9E  2617               	addwf	??___flmul^0,f,c
  1555  000AA0  0E00               	movlw	0
  1556  000AA2  2218               	addwfc	(??___flmul+1)^0,f,c
  1557  000AA4  0E82               	movlw	130
  1558  000AA6  2417               	addwf	??___flmul^0,w,c
  1559  000AA8  6E26               	movwf	___flmul@temp^0,c
  1560  000AAA  0EFF               	movlw	255
  1561  000AAC  2018               	addwfc	(??___flmul+1)^0,w,c
  1562  000AAE  6E27               	movwf	(___flmul@temp+1)^0,c
  1563  000AB0  EF6F  F005         	goto	l1530
  1564  000AB4                     l1524:
  1565  000AB4  90D8               	bcf	status,0,c
  1566  000AB6  3622               	rlcf	___flmul@prod^0,f,c
  1567  000AB8  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1568  000ABA  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1569  000ABC  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1570  000ABE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1571  000AC0  EF64  F005         	goto	u851
  1572  000AC4  EF66  F005         	goto	u850
  1573  000AC8                     u851:
  1574  000AC8  EF67  F005         	goto	l768
  1575  000ACC                     u850:
  1576  000ACC  8022               	bsf	___flmul@prod^0,0,c
  1577  000ACE                     l768:
  1578  000ACE  90D8               	bcf	status,0,c
  1579  000AD0  361C               	rlcf	___flmul@grs^0,f,c
  1580  000AD2  361D               	rlcf	(___flmul@grs+1)^0,f,c
  1581  000AD4  361E               	rlcf	(___flmul@grs+2)^0,f,c
  1582  000AD6  361F               	rlcf	(___flmul@grs+3)^0,f,c
  1583  000AD8  0626               	decf	___flmul@temp^0,f,c
  1584  000ADA  A0D8               	btfss	status,0,c
  1585  000ADC  0627               	decf	(___flmul@temp+1)^0,f,c
  1586  000ADE                     l1530:
  1587  000ADE  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1588  000AE0  EF74  F005         	goto	u861
  1589  000AE4  EF76  F005         	goto	u860
  1590  000AE8                     u861:
  1591  000AE8  EF5A  F005         	goto	l1524
  1592  000AEC                     u860:
  1593  000AEC  0E00               	movlw	0
  1594  000AEE  6E20               	movwf	___flmul@aexp^0,c
  1595  000AF0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1596  000AF2  EF7D  F005         	goto	u871
  1597  000AF6  EF7F  F005         	goto	u870
  1598  000AFA                     u871:
  1599  000AFA  EFA3  F005         	goto	l770
  1600  000AFE                     u870:
  1601  000AFE  0EFF               	movlw	255
  1602  000B00  141C               	andwf	___flmul@grs^0,w,c
  1603  000B02  6E17               	movwf	??___flmul^0,c
  1604  000B04  0EFF               	movlw	255
  1605  000B06  141D               	andwf	(___flmul@grs+1)^0,w,c
  1606  000B08  6E18               	movwf	(??___flmul+1)^0,c
  1607  000B0A  0EFF               	movlw	255
  1608  000B0C  141E               	andwf	(___flmul@grs+2)^0,w,c
  1609  000B0E  6E19               	movwf	(??___flmul+2)^0,c
  1610  000B10  0E7F               	movlw	127
  1611  000B12  141F               	andwf	(___flmul@grs+3)^0,w,c
  1612  000B14  6E1A               	movwf	(??___flmul+3)^0,c
  1613  000B16  5017               	movf	??___flmul^0,w,c
  1614  000B18  1018               	iorwf	(??___flmul+1)^0,w,c
  1615  000B1A  1019               	iorwf	(??___flmul+2)^0,w,c
  1616  000B1C  101A               	iorwf	(??___flmul+3)^0,w,c
  1617  000B1E  B4D8               	btfsc	status,2,c
  1618  000B20  EF94  F005         	goto	u881
  1619  000B24  EF96  F005         	goto	u880
  1620  000B28                     u881:
  1621  000B28  EF9A  F005         	goto	l771
  1622  000B2C                     u880:
  1623  000B2C                     l1538:
  1624  000B2C  0E01               	movlw	1
  1625  000B2E  6E20               	movwf	___flmul@aexp^0,c
  1626  000B30  EFA3  F005         	goto	l770
  1627  000B34                     l771:
  1628  000B34  A022               	btfss	___flmul@prod^0,0,c
  1629  000B36  EF9F  F005         	goto	u891
  1630  000B3A  EFA1  F005         	goto	u890
  1631  000B3E                     u891:
  1632  000B3E  EFA3  F005         	goto	l770
  1633  000B42                     u890:
  1634  000B42  EF96  F005         	goto	l1538
  1635  000B46                     l770:
  1636  000B46  5020               	movf	___flmul@aexp^0,w,c
  1637  000B48  B4D8               	btfsc	status,2,c
  1638  000B4A  EFA9  F005         	goto	u901
  1639  000B4E  EFAB  F005         	goto	u900
  1640  000B52                     u901:
  1641  000B52  EFCF  F005         	goto	l1550
  1642  000B56                     u900:
  1643  000B56  0E01               	movlw	1
  1644  000B58  2622               	addwf	___flmul@prod^0,f,c
  1645  000B5A  0E00               	movlw	0
  1646  000B5C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1647  000B5E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1648  000B60  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1649  000B62  A025               	btfss	(___flmul@prod+3)^0,0,c
  1650  000B64  EFB6  F005         	goto	u911
  1651  000B68  EFB8  F005         	goto	u910
  1652  000B6C                     u911:
  1653  000B6C  EFCF  F005         	goto	l1550
  1654  000B70                     u910:
  1655  000B70  C022  F017         	movff	___flmul@prod,??___flmul
  1656  000B74  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  1657  000B78  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  1658  000B7C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  1659  000B80  341A               	rlcf	(??___flmul+3)^0,w,c
  1660  000B82  321A               	rrcf	(??___flmul+3)^0,f,c
  1661  000B84  3219               	rrcf	(??___flmul+2)^0,f,c
  1662  000B86  3218               	rrcf	(??___flmul+1)^0,f,c
  1663  000B88  3217               	rrcf	??___flmul^0,f,c
  1664  000B8A  C017  F022         	movff	??___flmul,___flmul@prod
  1665  000B8E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  1666  000B92  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  1667  000B96  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  1668  000B9A  4A26               	infsnz	___flmul@temp^0,f,c
  1669  000B9C  2A27               	incf	(___flmul@temp+1)^0,f,c
  1670  000B9E                     l1550:
  1671  000B9E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  1672  000BA0  EFDA  F005         	goto	u921
  1673  000BA4  5027               	movf	(___flmul@temp+1)^0,w,c
  1674  000BA6  E108               	bnz	u920
  1675  000BA8  2826               	incf	___flmul@temp^0,w,c
  1676  000BAA  A0D8               	btfss	status,0,c
  1677  000BAC  EFDA  F005         	goto	u921
  1678  000BB0  EFDC  F005         	goto	u920
  1679  000BB4                     u921:
  1680  000BB4  EFE6  F005         	goto	l1554
  1681  000BB8                     u920:
  1682  000BB8  0E00               	movlw	0
  1683  000BBA  6E22               	movwf	___flmul@prod^0,c
  1684  000BBC  0E00               	movlw	0
  1685  000BBE  6E23               	movwf	(___flmul@prod+1)^0,c
  1686  000BC0  0E80               	movlw	128
  1687  000BC2  6E24               	movwf	(___flmul@prod+2)^0,c
  1688  000BC4  0E7F               	movlw	127
  1689  000BC6  6E25               	movwf	(___flmul@prod+3)^0,c
  1690  000BC8  EF14  F006         	goto	l1566
  1691  000BCC                     l1554:
  1692  000BCC  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  1693  000BCE  EFF3  F005         	goto	u930
  1694  000BD2  5027               	movf	(___flmul@temp+1)^0,w,c
  1695  000BD4  E106               	bnz	u931
  1696  000BD6  0426               	decf	___flmul@temp^0,w,c
  1697  000BD8  B0D8               	btfsc	status,0,c
  1698  000BDA  EFF1  F005         	goto	u931
  1699  000BDE  EFF3  F005         	goto	u930
  1700  000BE2                     u931:
  1701  000BE2  EFFF  F005         	goto	l778
  1702  000BE6                     u930:
  1703  000BE6  0E00               	movlw	0
  1704  000BE8  6E22               	movwf	___flmul@prod^0,c
  1705  000BEA  0E00               	movlw	0
  1706  000BEC  6E23               	movwf	(___flmul@prod+1)^0,c
  1707  000BEE  0E00               	movlw	0
  1708  000BF0  6E24               	movwf	(___flmul@prod+2)^0,c
  1709  000BF2  0E00               	movlw	0
  1710  000BF4  6E25               	movwf	(___flmul@prod+3)^0,c
  1711  000BF6  0E00               	movlw	0
  1712  000BF8  6E1B               	movwf	___flmul@sign^0,c
  1713  000BFA  EF14  F006         	goto	l1566
  1714  000BFE                     l778:
  1715  000BFE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  1716  000C02  0EFF               	movlw	255
  1717  000C04  1622               	andwf	___flmul@prod^0,f,c
  1718  000C06  0EFF               	movlw	255
  1719  000C08  1623               	andwf	(___flmul@prod+1)^0,f,c
  1720  000C0A  0E7F               	movlw	127
  1721  000C0C  1624               	andwf	(___flmul@prod+2)^0,f,c
  1722  000C0E  0E00               	movlw	0
  1723  000C10  1625               	andwf	(___flmul@prod+3)^0,f,c
  1724  000C12  A021               	btfss	___flmul@bexp^0,0,c
  1725  000C14  EF0E  F006         	goto	u941
  1726  000C18  EF10  F006         	goto	u940
  1727  000C1C                     u941:
  1728  000C1C  EF11  F006         	goto	l1564
  1729  000C20                     u940:
  1730  000C20  8E24               	bsf	(___flmul@prod+2)^0,7,c
  1731  000C22                     l1564:
  1732  000C22  90D8               	bcf	status,0,c
  1733  000C24  3021               	rrcf	___flmul@bexp^0,w,c
  1734  000C26  6E25               	movwf	(___flmul@prod+3)^0,c
  1735  000C28                     l1566:
  1736  000C28  501B               	movf	___flmul@sign^0,w,c
  1737  000C2A  1225               	iorwf	(___flmul@prod+3)^0,f,c
  1738  000C2C  C022  F00F         	movff	___flmul@prod,?___flmul
  1739  000C30  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  1740  000C34  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  1741  000C38  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  1742  000C3C                     l765:
  1743  000C3C  0012               	return		;funcret
  1744  000C3E                     __end_of___flmul:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _POS_CURSOR *****************
  1748 ;; Defined at:
  1749 ;;		line 6 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  fila            1    wreg     unsigned char 
  1752 ;;  columna         1    3[COMRAM] unsigned char 
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;  fila            1    4[COMRAM] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1764 ;;      Params:         1       0       0       0       0       0       0       0       0
  1765 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1767 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1768 ;;Total ram usage:        2 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 2
  1771 ;; This function calls:
  1772 ;;		_ENVIA_LCD_CMD
  1773 ;; This function is called by:
  1774 ;;		_main
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text7
  1779  0012B2                     __ptext7:
  1780                           	callstack 0
  1781  0012B2                     _POS_CURSOR:
  1782                           	callstack 28
  1783                           
  1784                           ;incstack = 0
  1785                           ;POS_CURSOR@fila stored from wreg
  1786  0012B2  6E05               	movwf	POS_CURSOR@fila^0,c
  1787  0012B4                     
  1788                           ;../20221_sem11_ls51_lab1.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char c
      +                          olumna);../20221_sem11_ls51_lab1.X/LCD.c: 7: {;../20221_sem11_ls51_lab1.X/LCD.c: 8:  if(
      +                          fila == 1)
  1789  0012B4  0405               	decf	POS_CURSOR@fila^0,w,c
  1790  0012B6  A4D8               	btfss	status,2,c
  1791  0012B8  EF60  F009         	goto	u731
  1792  0012BC  EF62  F009         	goto	u730
  1793  0012C0                     u731:
  1794  0012C0  EF68  F009         	goto	l1430
  1795  0012C4                     u730:
  1796  0012C4                     
  1797                           ;../20221_sem11_ls51_lab1.X/LCD.c: 9:  {;../20221_sem11_ls51_lab1.X/LCD.c: 10:   ENVIA_L
      +                          CD_CMD(0x80+columna);
  1798  0012C4  5004               	movf	POS_CURSOR@columna^0,w,c
  1799  0012C6  0F80               	addlw	128
  1800  0012C8  EC76  F009         	call	_ENVIA_LCD_CMD
  1801                           
  1802                           ;../20221_sem11_ls51_lab1.X/LCD.c: 11:  }
  1803  0012CC  EF75  F009         	goto	l94
  1804  0012D0                     l1430:
  1805  0012D0  0E02               	movlw	2
  1806  0012D2  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1807  0012D4  A4D8               	btfss	status,2,c
  1808  0012D6  EF6F  F009         	goto	u741
  1809  0012DA  EF71  F009         	goto	u740
  1810  0012DE                     u741:
  1811  0012DE  EF75  F009         	goto	l94
  1812  0012E2                     u740:
  1813  0012E2                     
  1814                           ;../20221_sem11_ls51_lab1.X/LCD.c: 13:  {;../20221_sem11_ls51_lab1.X/LCD.c: 14:   ENVIA_
      +                          LCD_CMD(0xC0+columna);
  1815  0012E2  5004               	movf	POS_CURSOR@columna^0,w,c
  1816  0012E4  0FC0               	addlw	192
  1817  0012E6  EC76  F009         	call	_ENVIA_LCD_CMD
  1818  0012EA                     l94:
  1819  0012EA  0012               	return		;funcret
  1820  0012EC                     __end_of_POS_CURSOR:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _LCD_config *****************
  1824 ;; Defined at:
  1825 ;;		line 12 in file "maincode.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      void 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        1 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 3
  1846 ;; This function calls:
  1847 ;;		_BORRAR_LCD
  1848 ;;		_CURSOR_HOME
  1849 ;;		_CURSOR_ONOFF
  1850 ;;		_LCD_CONFIG
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text8
  1857  001384                     __ptext8:
  1858                           	callstack 0
  1859  001384                     _LCD_config:
  1860                           	callstack 27
  1861  001384                     
  1862                           ;maincode.c: 13:     TRISD = 0x00;
  1863  001384  0E00               	movlw	0
  1864  001386  6E95               	movwf	149,c	;volatile
  1865  001388                     
  1866                           ;maincode.c: 14:     LCD_CONFIG();
  1867  001388  EC0A  F009         	call	_LCD_CONFIG	;wreg free
  1868  00138C                     
  1869                           ;maincode.c: 15:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
  1870  00138C  0EEA               	movlw	234
  1871  00138E  6E05               	movwf	??_LCD_config^0,c
  1872  001390  0EC3               	movlw	195
  1873  001392                     u1137:
  1874  001392  2EE8               	decfsz	wreg,f,c
  1875  001394  D7FE               	bra	u1137
  1876  001396  2E05               	decfsz	??_LCD_config^0,f,c
  1877  001398  D7FC               	bra	u1137
  1878  00139A  F000               	nop	
  1879  00139C                     
  1880                           ;maincode.c: 16:     BORRAR_LCD();
  1881  00139C  EC02  F00A         	call	_BORRAR_LCD	;wreg free
  1882  0013A0                     
  1883                           ;maincode.c: 17:     CURSOR_HOME();
  1884  0013A0  ECFE  F009         	call	_CURSOR_HOME	;wreg free
  1885  0013A4                     
  1886                           ;maincode.c: 18:     CURSOR_ONOFF(1);
  1887  0013A4  0E01               	movlw	1
  1888  0013A6  ECAA  F009         	call	_CURSOR_ONOFF
  1889  0013AA  0012               	return		;funcret
  1890  0013AC                     __end_of_LCD_config:
  1891                           	callstack 0
  1892                           
  1893 ;; *************** function _LCD_CONFIG *****************
  1894 ;; Defined at:
  1895 ;;		line 72 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1911 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1912 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1913 ;;Total ram usage:        1 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 2
  1916 ;; This function calls:
  1917 ;;		_ENVIA_LCD_CMD
  1918 ;;		_ENVIA_NIBBLE
  1919 ;; This function is called by:
  1920 ;;		_LCD_config
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           	psect	text9
  1925  001214                     __ptext9:
  1926                           	callstack 0
  1927  001214                     _LCD_CONFIG:
  1928                           	callstack 27
  1929  001214                     
  1930                           ;../20221_sem11_ls51_lab1.X/LCD.c: 74:  LATDbits.LATD0 = 0;
  1931  001214  908C               	bcf	140,0,c	;volatile
  1932                           
  1933                           ;../20221_sem11_ls51_lab1.X/LCD.c: 75:  LATDbits.LATD1 = 0;
  1934  001216  928C               	bcf	140,1,c	;volatile
  1935  001218                     
  1936                           ;../20221_sem11_ls51_lab1.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1937  001218  0E30               	movlw	48
  1938  00121A  ECD6  F009         	call	_ENVIA_NIBBLE
  1939  00121E                     
  1940                           ;../20221_sem11_ls51_lab1.X/LCD.c: 77:         _delay(24000);
  1941  00121E  0E20               	movlw	32
  1942  001220  6E04               	movwf	??_LCD_CONFIG^0,c
  1943  001222  0E2A               	movlw	42
  1944  001224                     u1147:
  1945  001224  2EE8               	decfsz	wreg,f,c
  1946  001226  D7FE               	bra	u1147
  1947  001228  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1948  00122A  D7FC               	bra	u1147
  1949  00122C                     
  1950                           ;../20221_sem11_ls51_lab1.X/LCD.c: 78:         _delay(24000);
  1951  00122C  0E20               	movlw	32
  1952  00122E  6E04               	movwf	??_LCD_CONFIG^0,c
  1953  001230  0E2A               	movlw	42
  1954  001232                     u1157:
  1955  001232  2EE8               	decfsz	wreg,f,c
  1956  001234  D7FE               	bra	u1157
  1957  001236  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1958  001238  D7FC               	bra	u1157
  1959                           
  1960                           ;../20221_sem11_ls51_lab1.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1961  00123A  0E30               	movlw	48
  1962  00123C  ECD6  F009         	call	_ENVIA_NIBBLE
  1963  001240                     
  1964                           ;../20221_sem11_ls51_lab1.X/LCD.c: 83:  _delay(1200);
  1965  001240  0EF0               	movlw	240
  1966  001242                     u1167:
  1967  001242  D000               	nop2	
  1968  001244  2EE8               	decfsz	wreg,f,c
  1969  001246  D7FD               	bra	u1167
  1970  001248                     
  1971                           ;../20221_sem11_ls51_lab1.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1972  001248  0E30               	movlw	48
  1973  00124A  ECD6  F009         	call	_ENVIA_NIBBLE
  1974  00124E                     
  1975                           ;../20221_sem11_ls51_lab1.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1976  00124E  0E20               	movlw	32
  1977  001250  ECD6  F009         	call	_ENVIA_NIBBLE
  1978  001254                     
  1979                           ;../20221_sem11_ls51_lab1.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1980  001254  0E01               	movlw	1
  1981  001256  EC76  F009         	call	_ENVIA_LCD_CMD
  1982  00125A                     
  1983                           ;../20221_sem11_ls51_lab1.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1984  00125A  0E28               	movlw	40
  1985  00125C  EC76  F009         	call	_ENVIA_LCD_CMD
  1986  001260                     
  1987                           ;../20221_sem11_ls51_lab1.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1988  001260  0E0F               	movlw	15
  1989  001262  EC76  F009         	call	_ENVIA_LCD_CMD
  1990  001266                     
  1991                           ;../20221_sem11_ls51_lab1.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1992  001266  0E06               	movlw	6
  1993  001268  EC76  F009         	call	_ENVIA_LCD_CMD
  1994  00126C                     
  1995                           ;../20221_sem11_ls51_lab1.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1996  00126C  0E01               	movlw	1
  1997  00126E  EC76  F009         	call	_ENVIA_LCD_CMD
  1998  001272  0012               	return		;funcret
  1999  001274                     __end_of_LCD_CONFIG:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _CURSOR_ONOFF *****************
  2003 ;; Defined at:
  2004 ;;		line 35 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  estado          1    wreg     unsigned char 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  estado          1    3[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2021 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 2
  2025 ;; This function calls:
  2026 ;;		_ENVIA_LCD_CMD
  2027 ;; This function is called by:
  2028 ;;		_LCD_config
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text10
  2033  001354                     __ptext10:
  2034                           	callstack 0
  2035  001354                     _CURSOR_ONOFF:
  2036                           	callstack 27
  2037                           
  2038                           ;incstack = 0
  2039                           ;CURSOR_ONOFF@estado stored from wreg
  2040  001354  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  2041  001356                     
  2042                           ;../20221_sem11_ls51_lab1.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20221_
      +                          sem11_ls51_lab1.X/LCD.c: 36: {;../20221_sem11_ls51_lab1.X/LCD.c: 37:  if(estado == 0) EN
      +                          VIA_LCD_CMD(0x0E);
  2043  001356  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  2044  001358  A4D8               	btfss	status,2,c
  2045  00135A  EFB1  F009         	goto	u21
  2046  00135E  EFB3  F009         	goto	u20
  2047  001362                     u21:
  2048  001362  EFB6  F009         	goto	l920
  2049  001366                     u20:
  2050  001366  0E0E               	movlw	14
  2051  001368  EC76  F009         	call	_ENVIA_LCD_CMD
  2052  00136C                     l920:
  2053                           
  2054                           ;../20221_sem11_ls51_lab1.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2055  00136C  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  2056  00136E  A4D8               	btfss	status,2,c
  2057  001370  EFBC  F009         	goto	u31
  2058  001374  EFBE  F009         	goto	u30
  2059  001378                     u31:
  2060  001378  EFC1  F009         	goto	l112
  2061  00137C                     u30:
  2062  00137C  0E0C               	movlw	12
  2063  00137E  EC76  F009         	call	_ENVIA_LCD_CMD
  2064  001382                     l112:
  2065  001382  0012               	return		;funcret
  2066  001384                     __end_of_CURSOR_ONOFF:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _CURSOR_HOME *****************
  2070 ;; Defined at:
  2071 ;;		line 30 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 2
  2092 ;; This function calls:
  2093 ;;		_ENVIA_LCD_CMD
  2094 ;; This function is called by:
  2095 ;;		_LCD_config
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text11
  2100  0013FC                     __ptext11:
  2101                           	callstack 0
  2102  0013FC                     _CURSOR_HOME:
  2103                           	callstack 27
  2104  0013FC                     
  2105                           ;../20221_sem11_ls51_lab1.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2106  0013FC  0E02               	movlw	2
  2107  0013FE  EC76  F009         	call	_ENVIA_LCD_CMD
  2108  001402  0012               	return		;funcret
  2109  001404                     __end_of_CURSOR_HOME:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _BORRAR_LCD *****************
  2113 ;; Defined at:
  2114 ;;		line 67 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 2
  2135 ;; This function calls:
  2136 ;;		_ENVIA_LCD_CMD
  2137 ;; This function is called by:
  2138 ;;		_LCD_config
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text12
  2143  001404                     __ptext12:
  2144                           	callstack 0
  2145  001404                     _BORRAR_LCD:
  2146                           	callstack 27
  2147  001404                     
  2148                           ;../20221_sem11_ls51_lab1.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2149  001404  0E01               	movlw	1
  2150  001406  EC76  F009         	call	_ENVIA_LCD_CMD
  2151  00140A  0012               	return		;funcret
  2152  00140C                     __end_of_BORRAR_LCD:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _ENVIA_LCD_CMD *****************
  2156 ;; Defined at:
  2157 ;;		line 104 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  dato            1    wreg     unsigned char 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  dato            1    1[COMRAM] unsigned char 
  2162 ;;  aux             1    2[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2175 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 1
  2179 ;; This function calls:
  2180 ;;		_ENVIA_NIBBLE
  2181 ;;		_LEER_LCD
  2182 ;; This function is called by:
  2183 ;;		_POS_CURSOR
  2184 ;;		_CURSOR_HOME
  2185 ;;		_CURSOR_ONOFF
  2186 ;;		_BORRAR_LCD
  2187 ;;		_LCD_CONFIG
  2188 ;;		_BLINK_CURSOR
  2189 ;;		_DISPLAY_ONOFF
  2190 ;;		_GENERACARACTER
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194                           	psect	text13
  2195  0012EC                     __ptext13:
  2196                           	callstack 0
  2197  0012EC                     _ENVIA_LCD_CMD:
  2198                           	callstack 28
  2199                           
  2200                           ;incstack = 0
  2201                           ;ENVIA_LCD_CMD@dato stored from wreg
  2202  0012EC  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2203  0012EE                     
  2204                           ;../20221_sem11_ls51_lab1.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20221_
      +                          sem11_ls51_lab1.X/LCD.c: 105: {;../20221_sem11_ls51_lab1.X/LCD.c: 106:  unsigned char au
      +                          x;;../20221_sem11_ls51_lab1.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  2205  0012EE  908C               	bcf	140,0,c	;volatile
  2206  0012F0                     
  2207                           ;../20221_sem11_ls51_lab1.X/LCD.c: 108:  LEER_LCD();
  2208  0012F0  EC9A  F008         	call	_LEER_LCD	;wreg free
  2209  0012F4                     
  2210                           ;../20221_sem11_ls51_lab1.X/LCD.c: 109:  TRISD = 0b00000000;
  2211  0012F4  0E00               	movlw	0
  2212  0012F6  6E95               	movwf	149,c	;volatile
  2213  0012F8                     
  2214                           ;../20221_sem11_ls51_lab1.X/LCD.c: 111:         _delay(1200);
  2215  0012F8  0EF0               	movlw	240
  2216  0012FA                     u1177:
  2217  0012FA  D000               	nop2	
  2218  0012FC  2EE8               	decfsz	wreg,f,c
  2219  0012FE  D7FD               	bra	u1177
  2220  001300                     
  2221                           ;../20221_sem11_ls51_lab1.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  2222  001300  928C               	bcf	140,1,c	;volatile
  2223  001302                     
  2224                           ;../20221_sem11_ls51_lab1.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  2225  001302  948C               	bcf	140,2,c	;volatile
  2226  001304                     
  2227                           ;../20221_sem11_ls51_lab1.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  2228  001304  908C               	bcf	140,0,c	;volatile
  2229  001306                     
  2230                           ;../20221_sem11_ls51_lab1.X/LCD.c: 115:  aux = dato & 0xF0;
  2231  001306  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2232  001308  0BF0               	andlw	240
  2233  00130A  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2234  00130C                     
  2235                           ;../20221_sem11_ls51_lab1.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  2236  00130C  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2237  00130E  ECD6  F009         	call	_ENVIA_NIBBLE
  2238  001312                     
  2239                           ;../20221_sem11_ls51_lab1.X/LCD.c: 117:  aux = dato<<4;
  2240  001312  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2241  001314  0BF0               	andlw	240
  2242  001316  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2243  001318                     
  2244                           ;../20221_sem11_ls51_lab1.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  2245  001318  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2246  00131A  ECD6  F009         	call	_ENVIA_NIBBLE
  2247  00131E  0012               	return		;funcret
  2248  001320                     __end_of_ENVIA_LCD_CMD:
  2249                           	callstack 0
  2250                           
  2251 ;; *************** function _INIT_config *****************
  2252 ;; Defined at:
  2253 ;;		line 8 in file "maincode.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		None
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2267 ;;      Params:         0       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text14
  2281  00140C                     __ptext14:
  2282                           	callstack 0
  2283  00140C                     _INIT_config:
  2284                           	callstack 30
  2285  00140C  0012               	return		;funcret
  2286  00140E                     __end_of_INIT_config:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _ESCRIBE_MENSAJE *****************
  2290 ;; Defined at:
  2291 ;;		line 41 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2294 ;;		 -> STR_2(5), STR_1(13), 
  2295 ;;  tam             1    5[COMRAM] unsigned char 
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  i               1    8[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2307 ;;      Params:         3       0       0       0       0       0       0       0       0
  2308 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2309 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2310 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2311 ;;Total ram usage:        6 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; Hardware stack levels required when called: 2
  2314 ;; This function calls:
  2315 ;;		_ENVIA_CHAR
  2316 ;; This function is called by:
  2317 ;;		_main
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text15
  2322  001274                     __ptext15:
  2323                           	callstack 0
  2324  001274                     _ESCRIBE_MENSAJE:
  2325                           	callstack 28
  2326  001274                     
  2327                           ;../20221_sem11_ls51_lab1.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned 
      +                          char tam);../20221_sem11_ls51_lab1.X/LCD.c: 42: {;../20221_sem11_ls51_lab1.X/LCD.c: 43: 
      +                           unsigned char i = 0;
  2328  001274  0E00               	movlw	0
  2329  001276  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2330                           
  2331                           ;../20221_sem11_ls51_lab1.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  2332  001278  0E00               	movlw	0
  2333  00127A  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2334  00127C  EF4F  F009         	goto	l1440
  2335  001280                     l1436:
  2336                           
  2337                           ;../20221_sem11_ls51_lab1.X/LCD.c: 45:  {;../20221_sem11_ls51_lab1.X/LCD.c: 46:   ENVIA_
      +                          CHAR(cadena[i]);
  2338  001280  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2339  001282  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2340  001284  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  2341  001286  0E00               	movlw	0
  2342  001288  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2343  00128A  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2344  00128C  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2345  001290  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2346  001294                     	if	0	;tblptru may be non-zero
  2347  001294                     	endif
  2348  001294                     	if	0	;tblptru may be non-zero
  2349  001294                     	endif
  2350  001294  0008               	tblrd		*
  2351  001296  50F5               	movf	tablat,w,c
  2352  001298  EC90  F009         	call	_ENVIA_CHAR
  2353  00129C                     
  2354                           ;../20221_sem11_ls51_lab1.X/LCD.c: 47:  }
  2355  00129C  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2356  00129E                     l1440:
  2357  00129E  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2358  0012A0  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2359  0012A2  A0D8               	btfss	status,0,c
  2360  0012A4  EF56  F009         	goto	u751
  2361  0012A8  EF58  F009         	goto	u750
  2362  0012AC                     u751:
  2363  0012AC  EF40  F009         	goto	l1436
  2364  0012B0                     u750:
  2365  0012B0  0012               	return		;funcret
  2366  0012B2                     __end_of_ESCRIBE_MENSAJE:
  2367                           	callstack 0
  2368                           
  2369 ;; *************** function _ENVIA_CHAR *****************
  2370 ;; Defined at:
  2371 ;;		line 50 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2372 ;; Parameters:    Size  Location     Type
  2373 ;;  dato            1    wreg     unsigned char 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  dato            1    1[COMRAM] unsigned char 
  2376 ;;  aux             1    2[COMRAM] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         0       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:        2 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		_ENVIA_NIBBLE
  2395 ;;		_LEER_LCD
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;;		_ESCRIBE_MENSAJE
  2399 ;;		_GENERACARACTER
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text16
  2404  001320                     __ptext16:
  2405                           	callstack 0
  2406  001320                     _ENVIA_CHAR:
  2407                           	callstack 28
  2408                           
  2409                           ;incstack = 0
  2410                           ;ENVIA_CHAR@dato stored from wreg
  2411  001320  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2412  001322                     
  2413                           ;../20221_sem11_ls51_lab1.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20221_sem1
      +                          1_ls51_lab1.X/LCD.c: 51: {;../20221_sem11_ls51_lab1.X/LCD.c: 52:  unsigned char aux;;../
      +                          20221_sem11_ls51_lab1.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  2414  001322  808C               	bsf	140,0,c	;volatile
  2415  001324                     
  2416                           ;../20221_sem11_ls51_lab1.X/LCD.c: 54:  LEER_LCD();
  2417  001324  EC9A  F008         	call	_LEER_LCD	;wreg free
  2418  001328                     
  2419                           ;../20221_sem11_ls51_lab1.X/LCD.c: 55:  TRISD = 0x00;
  2420  001328  0E00               	movlw	0
  2421  00132A  6E95               	movwf	149,c	;volatile
  2422  00132C                     
  2423                           ;../20221_sem11_ls51_lab1.X/LCD.c: 56:         _delay(1200);
  2424  00132C  0EF0               	movlw	240
  2425  00132E                     u1187:
  2426  00132E  D000               	nop2	
  2427  001330  2EE8               	decfsz	wreg,f,c
  2428  001332  D7FD               	bra	u1187
  2429  001334                     
  2430                           ;../20221_sem11_ls51_lab1.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  2431  001334  928C               	bcf	140,1,c	;volatile
  2432  001336                     
  2433                           ;../20221_sem11_ls51_lab1.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  2434  001336  948C               	bcf	140,2,c	;volatile
  2435  001338                     
  2436                           ;../20221_sem11_ls51_lab1.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  2437  001338  808C               	bsf	140,0,c	;volatile
  2438  00133A                     
  2439                           ;../20221_sem11_ls51_lab1.X/LCD.c: 61:  aux = dato & 0xF0;
  2440  00133A  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2441  00133C  0BF0               	andlw	240
  2442  00133E  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2443  001340                     
  2444                           ;../20221_sem11_ls51_lab1.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  2445  001340  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2446  001342  ECD6  F009         	call	_ENVIA_NIBBLE
  2447  001346                     
  2448                           ;../20221_sem11_ls51_lab1.X/LCD.c: 63:  aux = dato << 4;
  2449  001346  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2450  001348  0BF0               	andlw	240
  2451  00134A  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2452  00134C                     
  2453                           ;../20221_sem11_ls51_lab1.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  2454  00134C  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2455  00134E  ECD6  F009         	call	_ENVIA_NIBBLE
  2456  001352  0012               	return		;funcret
  2457  001354                     __end_of_ENVIA_CHAR:
  2458                           	callstack 0
  2459                           
  2460 ;; *************** function _LEER_LCD *****************
  2461 ;; Defined at:
  2462 ;;		line 121 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  aux             1    0[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        1 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_ENVIA_CHAR
  2486 ;;		_ENVIA_LCD_CMD
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text17
  2491  001134                     __ptext17:
  2492                           	callstack 0
  2493  001134                     _LEER_LCD:
  2494                           	callstack 28
  2495  001134                     
  2496                           ;../20221_sem11_ls51_lab1.X/LCD.c: 123:  unsigned char aux;;../20221_sem11_ls51_lab1.X/L
      +                          CD.c: 124:  TRISD = 0xF8;
  2497  001134  0EF8               	movlw	248
  2498  001136  6E95               	movwf	149,c	;volatile
  2499  001138                     
  2500                           ;../20221_sem11_ls51_lab1.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  2501  001138  908C               	bcf	140,0,c	;volatile
  2502  00113A                     
  2503                           ;../20221_sem11_ls51_lab1.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  2504  00113A  828C               	bsf	140,1,c	;volatile
  2505  00113C                     
  2506                           ;../20221_sem11_ls51_lab1.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  2507  00113C  848C               	bsf	140,2,c	;volatile
  2508  00113E                     
  2509                           ;../20221_sem11_ls51_lab1.X/LCD.c: 128:         _delay(1200);
  2510  00113E  0EF0               	movlw	240
  2511  001140                     u1197:
  2512  001140  D000               	nop2	
  2513  001142  2EE8               	decfsz	wreg,f,c
  2514  001144  D7FD               	bra	u1197
  2515  001146                     
  2516                           ;../20221_sem11_ls51_lab1.X/LCD.c: 130:  aux = PORTD;
  2517  001146  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2518  00114A                     
  2519                           ;../20221_sem11_ls51_lab1.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  2520  00114A  948C               	bcf	140,2,c	;volatile
  2521  00114C                     
  2522                           ;../20221_sem11_ls51_lab1.X/LCD.c: 132:         _delay(1200);
  2523  00114C  0EF0               	movlw	240
  2524  00114E                     u1207:
  2525  00114E  D000               	nop2	
  2526  001150  2EE8               	decfsz	wreg,f,c
  2527  001152  D7FD               	bra	u1207
  2528  001154                     
  2529                           ;../20221_sem11_ls51_lab1.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  2530  001154  848C               	bsf	140,2,c	;volatile
  2531  001156                     
  2532                           ;../20221_sem11_ls51_lab1.X/LCD.c: 135:         _delay(1200);
  2533  001156  0EF0               	movlw	240
  2534  001158                     u1217:
  2535  001158  D000               	nop2	
  2536  00115A  2EE8               	decfsz	wreg,f,c
  2537  00115C  D7FD               	bra	u1217
  2538  00115E                     
  2539                           ;../20221_sem11_ls51_lab1.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  2540  00115E  948C               	bcf	140,2,c	;volatile
  2541  001160                     l842:
  2542                           
  2543                           ;../20221_sem11_ls51_lab1.X/LCD.c: 138:  aux = aux & 0x80;
  2544  001160  5001               	movf	LEER_LCD@aux^0,w,c
  2545  001162  0B80               	andlw	128
  2546  001164  6E01               	movwf	LEER_LCD@aux^0,c
  2547                           
  2548                           ;../20221_sem11_ls51_lab1.X/LCD.c: 139:  while(aux == 0x80)
  2549  001166  EFC9  F008         	goto	l856
  2550  00116A                     l137:
  2551                           
  2552                           ;../20221_sem11_ls51_lab1.X/LCD.c: 140:         {;../20221_sem11_ls51_lab1.X/LCD.c: 141:
      +                                       LATDbits.LATD2 = 1;
  2553  00116A  848C               	bsf	140,2,c	;volatile
  2554  00116C                     
  2555                           ;../20221_sem11_ls51_lab1.X/LCD.c: 142:             _delay(1200);
  2556  00116C  0EF0               	movlw	240
  2557  00116E                     u1227:
  2558  00116E  D000               	nop2	
  2559  001170  2EE8               	decfsz	wreg,f,c
  2560  001172  D7FD               	bra	u1227
  2561  001174                     
  2562                           ;../20221_sem11_ls51_lab1.X/LCD.c: 143:             aux = PORTD;
  2563  001174  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2564  001178                     
  2565                           ;../20221_sem11_ls51_lab1.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  2566  001178  948C               	bcf	140,2,c	;volatile
  2567                           
  2568                           ;../20221_sem11_ls51_lab1.X/LCD.c: 145:             _delay(1200);
  2569  00117A  0EF0               	movlw	240
  2570  00117C                     u1237:
  2571  00117C  D000               	nop2	
  2572  00117E  2EE8               	decfsz	wreg,f,c
  2573  001180  D7FD               	bra	u1237
  2574  001182                     
  2575                           ;../20221_sem11_ls51_lab1.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  2576  001182  848C               	bsf	140,2,c	;volatile
  2577                           
  2578                           ;../20221_sem11_ls51_lab1.X/LCD.c: 147:             _delay(1200);
  2579  001184  0EF0               	movlw	240
  2580  001186                     u1247:
  2581  001186  D000               	nop2	
  2582  001188  2EE8               	decfsz	wreg,f,c
  2583  00118A  D7FD               	bra	u1247
  2584  00118C                     
  2585                           ;../20221_sem11_ls51_lab1.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  2586  00118C  948C               	bcf	140,2,c	;volatile
  2587  00118E  EFB0  F008         	goto	l842
  2588  001192                     l856:
  2589                           
  2590                           ;../20221_sem11_ls51_lab1.X/LCD.c: 139:  while(aux == 0x80)
  2591  001192  0E80               	movlw	128
  2592  001194  1801               	xorwf	LEER_LCD@aux^0,w,c
  2593  001196  B4D8               	btfsc	status,2,c
  2594  001198  EFD0  F008         	goto	u11
  2595  00119C  EFD2  F008         	goto	u10
  2596  0011A0                     u11:
  2597  0011A0  EFB5  F008         	goto	l137
  2598  0011A4                     u10:
  2599  0011A4  0012               	return		;funcret
  2600  0011A6                     __end_of_LEER_LCD:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _ENVIA_NIBBLE *****************
  2604 ;; Defined at:
  2605 ;;		line 93 in file "../20221_sem11_ls51_lab1.X/LCD.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  dato            1    wreg     unsigned char 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;  dato            1    0[COMRAM] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0
  2620 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2622 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_ENVIA_CHAR
  2629 ;;		_LCD_CONFIG
  2630 ;;		_ENVIA_LCD_CMD
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text18
  2635  0013AC                     __ptext18:
  2636                           	callstack 0
  2637  0013AC                     _ENVIA_NIBBLE:
  2638                           	callstack 28
  2639                           
  2640                           ;incstack = 0
  2641                           ;ENVIA_NIBBLE@dato stored from wreg
  2642  0013AC  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2643  0013AE                     
  2644                           ;../20221_sem11_ls51_lab1.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20221_se
      +                          m11_ls51_lab1.X/LCD.c: 94: {;../20221_sem11_ls51_lab1.X/LCD.c: 95:  LATD &= 0x0F;
  2645  0013AE  0E0F               	movlw	15
  2646  0013B0  168C               	andwf	140,f,c	;volatile
  2647                           
  2648                           ;../20221_sem11_ls51_lab1.X/LCD.c: 96:  dato &= 0xF0;
  2649  0013B2  0EF0               	movlw	240
  2650  0013B4  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2651                           
  2652                           ;../20221_sem11_ls51_lab1.X/LCD.c: 97:  LATD|= dato;
  2653  0013B6  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2654  0013B8  128C               	iorwf	140,f,c	;volatile
  2655  0013BA                     
  2656                           ;../20221_sem11_ls51_lab1.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  2657  0013BA  848C               	bsf	140,2,c	;volatile
  2658  0013BC                     
  2659                           ;../20221_sem11_ls51_lab1.X/LCD.c: 100:         _delay(1200);
  2660  0013BC  0EF0               	movlw	240
  2661  0013BE                     u1257:
  2662  0013BE  D000               	nop2	
  2663  0013C0  2EE8               	decfsz	wreg,f,c
  2664  0013C2  D7FD               	bra	u1257
  2665  0013C4                     
  2666                           ;../20221_sem11_ls51_lab1.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  2667  0013C4  948C               	bcf	140,2,c	;volatile
  2668  0013C6  0012               	return		;funcret
  2669  0013C8                     __end_of_ENVIA_NIBBLE:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _CCP1_config *****************
  2673 ;; Defined at:
  2674 ;;		line 21 in file "maincode.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text19
  2702  0013DC                     __ptext19:
  2703                           	callstack 0
  2704  0013DC                     _CCP1_config:
  2705                           	callstack 30
  2706  0013DC                     
  2707                           ;maincode.c: 22:     PR2 = 155;
  2708  0013DC  0E9B               	movlw	155
  2709  0013DE  6ECB               	movwf	203,c	;volatile
  2710                           
  2711                           ;maincode.c: 23:     CCPR1L = 78;
  2712  0013E0  0E4E               	movlw	78
  2713  0013E2  6EBE               	movwf	190,c	;volatile
  2714  0013E4                     
  2715                           ;maincode.c: 24:     TRISCbits.RC2 = 0;
  2716  0013E4  9494               	bcf	148,2,c	;volatile
  2717                           
  2718                           ;maincode.c: 25:     T2CON = 0x07;
  2719  0013E6  0E07               	movlw	7
  2720  0013E8  6ECA               	movwf	202,c	;volatile
  2721                           
  2722                           ;maincode.c: 26:     CCP1CON = 0x0C;
  2723  0013EA  0E0C               	movlw	12
  2724  0013EC  6EBD               	movwf	189,c	;volatile
  2725  0013EE  0012               	return		;funcret
  2726  0013F0                     __end_of_CCP1_config:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _ADC_config *****************
  2730 ;; Defined at:
  2731 ;;		line 29 in file "maincode.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text20
  2759  0013F0                     __ptext20:
  2760                           	callstack 0
  2761  0013F0                     _ADC_config:
  2762                           	callstack 30
  2763  0013F0                     
  2764                           ;maincode.c: 30:     ADCON2 = 0x24;
  2765  0013F0  0E24               	movlw	36
  2766  0013F2  6EC0               	movwf	192,c	;volatile
  2767                           
  2768                           ;maincode.c: 31:     ADCON1 = 0x0D;
  2769  0013F4  0E0D               	movlw	13
  2770  0013F6  6EC1               	movwf	193,c	;volatile
  2771  0013F8                     
  2772                           ;maincode.c: 32:     ADCON0bits.ADON = 1;
  2773  0013F8  80C2               	bsf	194,0,c	;volatile
  2774  0013FA  0012               	return		;funcret
  2775  0013FC                     __end_of_ADC_config:
  2776                           	callstack 0
  2777                           
  2778                           	psect	rparam
  2779  0000                     
  2780                           	psect	idloc
  2781                           
  2782                           ;Config register IDLOC0 @ 0x200000
  2783                           ;	unspecified, using default values
  2784  200000                     	org	2097152
  2785  200000  FF                 	db	255
  2786                           
  2787                           ;Config register IDLOC1 @ 0x200001
  2788                           ;	unspecified, using default values
  2789  200001                     	org	2097153
  2790  200001  FF                 	db	255
  2791                           
  2792                           ;Config register IDLOC2 @ 0x200002
  2793                           ;	unspecified, using default values
  2794  200002                     	org	2097154
  2795  200002  FF                 	db	255
  2796                           
  2797                           ;Config register IDLOC3 @ 0x200003
  2798                           ;	unspecified, using default values
  2799  200003                     	org	2097155
  2800  200003  FF                 	db	255
  2801                           
  2802                           ;Config register IDLOC4 @ 0x200004
  2803                           ;	unspecified, using default values
  2804  200004                     	org	2097156
  2805  200004  FF                 	db	255
  2806                           
  2807                           ;Config register IDLOC5 @ 0x200005
  2808                           ;	unspecified, using default values
  2809  200005                     	org	2097157
  2810  200005  FF                 	db	255
  2811                           
  2812                           ;Config register IDLOC6 @ 0x200006
  2813                           ;	unspecified, using default values
  2814  200006                     	org	2097158
  2815  200006  FF                 	db	255
  2816                           
  2817                           ;Config register IDLOC7 @ 0x200007
  2818                           ;	unspecified, using default values
  2819  200007                     	org	2097159
  2820  200007  FF                 	db	255
  2821                           
  2822                           	psect	config
  2823                           
  2824                           ;Config register CONFIG1L @ 0x300000
  2825                           ;	PLL Prescaler Selection bits
  2826                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2827                           ;	System Clock Postscaler Selection bits
  2828                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2829                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2830                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2831  300000                     	org	3145728
  2832  300000  00                 	db	0
  2833                           
  2834                           ;Config register CONFIG1H @ 0x300001
  2835                           ;	Oscillator Selection bits
  2836                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2837                           ;	Fail-Safe Clock Monitor Enable bit
  2838                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2839                           ;	Internal/External Oscillator Switchover bit
  2840                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2841  300001                     	org	3145729
  2842  300001  02                 	db	2
  2843                           
  2844                           ;Config register CONFIG2L @ 0x300002
  2845                           ;	Power-up Timer Enable bit
  2846                           ;	PWRT = ON, PWRT enabled
  2847                           ;	Brown-out Reset Enable bits
  2848                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2849                           ;	Brown-out Reset Voltage bits
  2850                           ;	BORV = 3, Minimum setting 2.05V
  2851                           ;	USB Voltage Regulator Enable bit
  2852                           ;	VREGEN = OFF, USB voltage regulator disabled
  2853  300002                     	org	3145730
  2854  300002  18                 	db	24
  2855                           
  2856                           ;Config register CONFIG2H @ 0x300003
  2857                           ;	Watchdog Timer Enable bit
  2858                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2859                           ;	Watchdog Timer Postscale Select bits
  2860                           ;	WDTPS = 32768, 1:32768
  2861  300003                     	org	3145731
  2862  300003  1E                 	db	30
  2863                           
  2864                           ; Padding undefined space
  2865  300004                     	org	3145732
  2866  300004  FF                 	db	255
  2867                           
  2868                           ;Config register CONFIG3H @ 0x300005
  2869                           ;	CCP2 MUX bit
  2870                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2871                           ;	PORTB A/D Enable bit
  2872                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2873                           ;	Low-Power Timer 1 Oscillator Enable bit
  2874                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2875                           ;	MCLR Pin Enable bit
  2876                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2877  300005                     	org	3145733
  2878  300005  81                 	db	129
  2879                           
  2880                           ;Config register CONFIG4L @ 0x300006
  2881                           ;	Stack Full/Underflow Reset Enable bit
  2882                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2883                           ;	Single-Supply ICSP Enable bit
  2884                           ;	LVP = OFF, Single-Supply ICSP disabled
  2885                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2886                           ;	ICPRT = OFF, ICPORT disabled
  2887                           ;	Extended Instruction Set Enable bit
  2888                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2889                           ;	Background Debugger Enable bit
  2890                           ;	DEBUG = 0x1, unprogrammed default
  2891  300006                     	org	3145734
  2892  300006  81                 	db	129
  2893                           
  2894                           ; Padding undefined space
  2895  300007                     	org	3145735
  2896  300007  FF                 	db	255
  2897                           
  2898                           ;Config register CONFIG5L @ 0x300008
  2899                           ;	Code Protection bit
  2900                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2901                           ;	Code Protection bit
  2902                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2903                           ;	Code Protection bit
  2904                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2905                           ;	Code Protection bit
  2906                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2907  300008                     	org	3145736
  2908  300008  0F                 	db	15
  2909                           
  2910                           ;Config register CONFIG5H @ 0x300009
  2911                           ;	Boot Block Code Protection bit
  2912                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2913                           ;	Data EEPROM Code Protection bit
  2914                           ;	CPD = OFF, Data EEPROM is not code-protected
  2915  300009                     	org	3145737
  2916  300009  C0                 	db	192
  2917                           
  2918                           ;Config register CONFIG6L @ 0x30000A
  2919                           ;	Write Protection bit
  2920                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2921                           ;	Write Protection bit
  2922                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2923                           ;	Write Protection bit
  2924                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2925                           ;	Write Protection bit
  2926                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2927  30000A                     	org	3145738
  2928  30000A  0F                 	db	15
  2929                           
  2930                           ;Config register CONFIG6H @ 0x30000B
  2931                           ;	Configuration Register Write Protection bit
  2932                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2933                           ;	Boot Block Write Protection bit
  2934                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2935                           ;	Data EEPROM Write Protection bit
  2936                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2937  30000B                     	org	3145739
  2938  30000B  E0                 	db	224
  2939                           
  2940                           ;Config register CONFIG7L @ 0x30000C
  2941                           ;	Table Read Protection bit
  2942                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2943                           ;	Table Read Protection bit
  2944                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2945                           ;	Table Read Protection bit
  2946                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2947                           ;	Table Read Protection bit
  2948                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2949  30000C                     	org	3145740
  2950  30000C  0F                 	db	15
  2951                           
  2952                           ;Config register CONFIG7H @ 0x30000D
  2953                           ;	Boot Block Table Read Protection bit
  2954                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2955  30000D                     	org	3145741
  2956  30000D  40                 	db	64
  2957                           tosu	equ	0xFFF
  2958                           tosh	equ	0xFFE
  2959                           tosl	equ	0xFFD
  2960                           stkptr	equ	0xFFC
  2961                           pclatu	equ	0xFFB
  2962                           pclath	equ	0xFFA
  2963                           pcl	equ	0xFF9
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           indf0	equ	0xFEF
  2971                           postinc0	equ	0xFEE
  2972                           postdec0	equ	0xFED
  2973                           preinc0	equ	0xFEC
  2974                           plusw0	equ	0xFEB
  2975                           fsr0h	equ	0xFEA
  2976                           fsr0l	equ	0xFE9
  2977                           wreg	equ	0xFE8
  2978                           indf1	equ	0xFE7
  2979                           postinc1	equ	0xFE6
  2980                           postdec1	equ	0xFE5
  2981                           preinc1	equ	0xFE4
  2982                           plusw1	equ	0xFE3
  2983                           fsr1h	equ	0xFE2
  2984                           fsr1l	equ	0xFE1
  2985                           bsr	equ	0xFE0
  2986                           indf2	equ	0xFDF
  2987                           postinc2	equ	0xFDE
  2988                           postdec2	equ	0xFDD
  2989                           preinc2	equ	0xFDC
  2990                           plusw2	equ	0xFDB
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_2(CODE[5]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _convierte->___awdiv
    ___awdiv->___awmod
    ___fltol->___flmul
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_config->_CURSOR_ONOFF
    _LCD_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5389
                         _ADC_config
                        _CCP1_config
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                        _INIT_config
                         _LCD_config
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1422
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _INIT_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_config
   _CCP1_config
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _INIT_config
   _LCD_config
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      34       1       54.7%
BITBIGSFRhh         34      0       0      20        0.0%
BITBIGSFRhll        27      0       0      24        0.0%
BITBIGSFRlll        23      0       0      27        0.0%
BITBIGSFRllh         8      0       0      26        0.0%
BITBIGSFRlh          7      0       0      25        0.0%
BITBIGSFRhlhhh       5      0       0      21        0.0%
BITBIGSFRhlhhl       1      0       0      22        0.0%
BITBIGSFRhlhl        1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      28        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 01 20:20:28 2022

                     l50 13AA                       l53 13EE                       l47 140C  
                     l56 13FA                       l65 0F26                       l59 1212  
                     l94 12EA                       u10 11A4                       u11 11A0  
                     u20 1366                       u21 1362                       u30 137C  
                     u31 1378             ___awdiv@sign 000C            ENVIA_CHAR@aux 0003  
                    l112 1382                      l121 1352                      l130 13C6  
                    l107 1402                      l124 140A                      l133 131E  
                    l118 12B0                      l127 1272                      l137 116A  
                    l139 11A4                      l444 0EF6                      l391 1132  
            ?_LCD_config 0001                      l802 0C94                      l378 1082  
                    l820 1134                      l900 124E                      l805 0DF0  
                    l830 1146                      l822 1138                      l910 126C  
                    l902 1254                      l840 115E                      l832 114A  
                    l824 113A                      l912 1404                      l920 136C  
                    l904 125A                      l816 0D88                      l761 08D8  
                    l809 0D2C                      l850 1182                      l842 1160  
                    l834 114C                      l826 113C                      l930 132C  
                    l914 13FC                      l922 137C                      l906 1260  
                    l770 0B46                      l771 0B34                      l860 13BA  
                    l852 118C                      l844 116C                      l836 1154  
                    l828 113E                      l940 1340                      l932 1334  
                    l924 1322                      l916 1356                      l908 1266  
                    l765 0C3C                      l862 13BC                      l846 1174  
                    l838 1156                      l942 1346                      l934 1336  
                    l926 1324                      l870 12F4                      l918 1366  
                    l864 13C4                      l848 1178                      l856 1192  
                    l944 134C                      l936 1338                      l928 1328  
                    l880 1306                      l872 12F8                      l768 0ACE  
                    l858 13AE                      l938 133A                      l882 130C  
                    l874 1300                      l866 12EE                      l890 1218  
                    l778 0BFE                      l884 1312                      l876 1302  
                    l868 12F0                      l892 121E                      l886 1318  
                    l878 1304                      l894 122C                      l896 1240  
                    l888 1214                      l898 1248                      _PR2 000FCB  
                    u610 0FD2                      u611 0FCE                      u620 0FEC  
                    u700 10E8                      u621 0FE8                      u701 10E4  
                    u630 1012                      u710 10FE                      u631 100E  
                    u711 10FA                      u800 08A2                      u640 1030  
                    u720 1122                      u801 089E                      u641 102C  
                    u721 111E                      u730 12C4                      u810 08B2  
                    u650 104C                      u731 12C0                      u811 08AE  
                    u651 1048                      u740 12E2                      u900 0B56  
                    u820 08E8                      u660 1072                      u741 12DE  
                    u901 0B52                      u821 08E4                      u661 106E  
                    u750 12B0                      u910 0B70                      u830 08F8  
                    u670 1096                      u751 12AC                      u911 0B6C  
                    u831 08F4                      u671 1092                      u920 0BB8  
                    u840 0A72                      u760 082E                      u680 10B0  
                    u921 0BB4                      u761 082A                      u681 10AC  
                    u930 0BE6                      u850 0ACC                      u770 0840  
                    u690 10CA                      u931 0BE2                      u851 0AC8  
                    u771 083C                      u691 10C6                      u940 0C20  
                    u860 0AEC                      u780 0850                      u941 0C1C  
                    u861 0AE8                      u845 0A68                      u781 084C  
                    u870 0AFE                      u790 0890                      u950 0E08  
                    u871 0AFA                      u791 088C                      u951 0E04  
                    u880 0B2C                      u960 0E3C                      u881 0B28  
                    u890 0B42                      u970 0E6A                      u891 0B3E  
                    u971 0E66                      u980 0E7E                      u981 0E7A  
                    u965 0E32                      u990 0EA6                      u991 0EA2  
           ___awmod@sign 0006              LEER_LCD@aux 0001                      wreg 000FE8  
           ?_CURSOR_HOME 0001             ___flmul@aexp 0020             ___flmul@bexp 0021  
           ___flmul@sign 001B             ___flmul@temp 0026             ___flmul@prod 0022  
         ??_ENVIA_NIBBLE 0001             ___fltol@exp1 0031           ENVIA_CHAR@dato 0002  
                   l1030 138C                     l1040 13E4                     l1032 139C  
                   l1042 13F0                     l1034 13A0                     l1026 1384  
                   l1044 13F8                     l1036 13A4                     l1028 1388  
                   l1038 13DC                     l1400 10B8                     l1410 10FE  
                   l1402 10CA                     l1500 098E                     l1420 112A  
                   l1412 1106                     l1404 10D2                     l1430 12D0  
                   l1510 09E4                     l1502 099E                     l1350 0FDA  
                   l1414 110C                     l1406 10DA                     l1440 129E  
                   l1432 12E2                     l1520 0A88                     l1512 0A00  
                   l1504 09AA                     l1360 1000                     l1352 0FDE  
                   l1344 0FC0                     l1408 10E8                     l1416 1112  
                   l1424 11A8                     l1434 1274                     l1426 12B4  
                   l1530 0ADE                     l1522 0A96                     l1514 0A0C  
                   l1506 09BA                     l1450 0840                     l1442 0814  
                   l1610 0ED6                     l1370 1036                     l1362 1012  
                   l1354 0FEC                     l1346 0FC4                     l1418 1122  
                   l1436 1280                     l1428 12C4                     l1532 0AEC  
                   l1524 0AB4                     l1516 0A28                     l1508 09D4  
                   l1460 087C                     l1452 0850                     l1444 0820  
                   l1612 0EE6                     l1604 0EAA                     l1620 0C5E  
                   l1372 104C                     l1364 101A                     l1380 1062  
                   l1356 0FF4                     l1348 0FD2                     l1438 129C  
                   l1542 0B56                     l1550 0B9E                     l1534 0AF0  
                   l1526 0ABE                     l1518 0A52                     l1470 08B2  
                   l1462 0882                     l1454 0860                     l1446 082E  
                   l1606 0EB6                     l1630 0CD6                     l1622 0CA4  
                   l1382 1072                     l1374 1054                     l1366 1022  
                   l1358 0FF8                     l1390 1088                     l1560 0C12  
                   l1552 0BB8                     l1544 0B62                     l1536 0AFE  
                   l1528 0ACC                     l1472 08C2                     l1464 0890  
                   l1456 0866                     l1448 0830                     l1608 0EC6  
                   l1640 0D5E                     l1632 0CE2                     l1624 0CBA  
                   l1616 0C40                     l1384 107A                     l1376 1056  
                   l1368 1030                     l1392 1096                     l1562 0C20  
                   l1554 0BCC                     l1546 0B70                     l1538 0B2C  
                   l1490 0944                     l1482 090C                     l1474 08C8  
                   l1466 0892                     l1458 0876                     l1650 0D9C  
                   l1642 0D6A                     l1634 0D14                     l1618 0C50  
                   l1378 105C                     l1394 109E                     l1564 0C22  
                   l1556 0BE6                     l1548 0B9A                     l1492 095C  
                   l1484 0918                     l1476 08E8                     l1468 08A2  
                   l1580 0E46                     l1572 0DF2                     l1652 0DC0  
                   l1644 0D78                     l1636 0D16                     l1628 0CCE  
                   l1396 10A2                     l1388 1084                     l1558 0C02  
                   l1566 0C28                     l1494 0968                     l1486 0922  
                   l1478 08F8                     l1582 0E48                     l1574 0E08  
                   l1654 0DD0                     l1646 0D96                     l1638 0D22  
                   l1398 10B0                     l1670 0F08                     l1662 0EF8  
                   l1568 0C2C                     l1496 0974                     l1488 0938  
                   l1584 0E58                     l1656 0DDE                     l1648 0D98  
                   l1680 0F86                     l1672 0F12                     l1664 0EFC  
                   l1498 0982                     l1594 0E82                     l1586 0E5C  
                   l1578 0E1C                     l1658 0DE0                     l1682 0F90  
                   l1674 0F22                     l1666 0F00                     l1596 0E8C  
                   l1588 0E6A                     l1684 0FA0                     l1676 0F34  
                   l1668 0F04                     l1598 0E96                     l1686 0FA8  
                   l1678 0F80                     l1688 0FB0                     STR_1 0801  
                   STR_2 080E                     u1000 0EC6                     u1001 0EC2  
                   u1010 0ED6                     u1011 0ED2                     u1100 0DD0  
                   u1020 0C50                     u1101 0DCC                     u1021 0C4C  
                   u1110 0DDE                     u1030 0C5E                     u1111 0DDA  
                   u1031 0C5A                     u1040 0CBA                     u1120 0F34  
                   u1041 0CB6                     u1121 0F30                     u1050 0D10  
                   u1051 0D0C                     u1060 0D5A                     u1061 0D56  
                   u1070 0D78                     u1207 114E                     u1071 0D74  
                   u1080 0D88                     u1217 1158                     u1137 1392  
                   u1081 0D84                     u1090 0D96                     u1227 116E  
                   u1147 1224                     u1091 0D92                     u1237 117C  
                   u1157 1232                     u1247 1186                     u1167 1242  
                   _LATD 000F8C                     u1257 13BE                     u1177 12FA  
                   u1187 132E                     u1197 1140                     _main 0EF8  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0002  
           ?_INIT_config 0001         __end_of_LEER_LCD 11A6            ___fltol@sign1 0030  
                  ?_main 0001          __end_of___awdiv 1084          __end_of___awmod 1134  
        __end_of___flmul 0C3E          __end_of___fltol 0EF8          ___awdiv@divisor 0009  
                  _T2CON 000FCA          ___awdiv@counter 000B                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    tablat 000FF5  
                  status 000FD8           ??_CURSOR_ONOFF 0004          __initialization 13C8  
           __end_of_main 0FC0          _ESCRIBE_MENSAJE 1274                   ??_main 0032  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _CCPR1L 000FBE  
       ___awdiv@dividend 0007         __end_of___xxtofl 0DF2             ??_ADC_config 0001  
              ??___awdiv 000B                   _decena 0033                ??___awmod 0005  
   __end_of_ENVIA_NIBBLE 13C8                ??___flmul 0017                ??___fltol 002C  
       ___awdiv@quotient 000D          ___awmod@divisor 0003                   isa$std 000001  
        ___awmod@counter 0005                   _unidad 0032             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
           ??_BORRAR_LCD 0004       __end_of_ADC_config 13FC             ___xxtofl@arg 000B  
           ___xxtofl@exp 000A             ___xxtofl@val 0001                ?_LEER_LCD 0001  
             __accesstop 0060  __end_of__initialization 13CE             ??_LCD_CONFIG 0004  
          ___rparam_used 000001             ??_ENVIA_CHAR 0002               ___fltol@f1 0028  
__end_of_ESCRIBE_MENSAJE 12B2           __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 140C  
           ??_LCD_config 0005         ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 1384  
     __end_of_LCD_CONFIG 1274       __end_of_ENVIA_CHAR 1354               ??_LEER_LCD 0001  
       ENVIA_NIBBLE@dato 0001       __end_of_LCD_config 13AC                  _CCP1CON 000FBD  
              ?___xxtofl 0001            ??_CCP1_config 0001             ??_POS_CURSOR 0005  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0004  
                ___awdiv 0FC0                  ___awmod 1084                  ___flmul 0814  
                ___fltol 0DF2             __psmallconst 0800    __end_of_ENVIA_LCD_CMD 1320  
      __end_of_convierte 1214                  __pcinit 13C8       __end_of_POS_CURSOR 12EC  
                __ramtop 0800                  _centena 0034                  __ptext0 0EF8  
                __ptext1 11A6                  __ptext2 1084                  __ptext3 0FC0  
                __ptext4 0C3E                  __ptext5 0DF2                  __ptext6 0814  
                __ptext7 12B2                  __ptext8 1384                  __ptext9 1214  
             ??___xxtofl 0005         ___awmod@dividend 0001             _ENVIA_NIBBLE 13AC  
   end_of_initialization 13CE      __end_of_CCP1_config 13F0            ___xxtofl@sign 0009  
              _TRISCbits 000F94              ___flmul@grs 001C             _CURSOR_ONOFF 1354  
     CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004      start_initialization 13C8  
            _CCP1_config 13DC        ENVIA_LCD_CMD@dato 0002            ??_INIT_config 0001  
              ___flmul@a 0013                ___flmul@b 000F              __pbssCOMRAM 0032  
    __end_of_CURSOR_HOME 1404                 ?___awdiv 0007                 ?___awmod 0001  
               ?___flmul 000F                 ?___fltol 0028              __smallconst 0800  
    __end_of_INIT_config 140E                _convierte 11A6          convierte@numero 000F  
               _LEER_LCD 1134                 _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009  
         POS_CURSOR@fila 0005               _ADCON0bits 000FC2               ?_convierte 0001  
            _CURSOR_HOME 13FC                 __Hrparam 0000               _ADC_config 13F0  
               __Lrparam 0000             __Lsmallconst 0800              _INIT_config 140C  
               ___xxtofl 0C3E             ?_CCP1_config 0001                 __ptext10 1354  
               __ptext11 13FC                 __ptext20 13F0                 __ptext12 1404  
               __ptext13 12EC                 __ptext14 140C                 __ptext15 1274  
               __ptext16 1320                 __ptext17 1134                 __ptext18 13AC  
               __ptext19 13DC               _BORRAR_LCD 1404               _LCD_CONFIG 1214  
             _ENVIA_CHAR 1320                 isa$xinst 000000            _ENVIA_LCD_CMD 12EC  
             _LCD_config 1384              ??_convierte 000F        ??_ESCRIBE_MENSAJE 0007  
  ESCRIBE_MENSAJE@cadena 0004              ?_ADC_config 0001           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 12B2  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0004  
