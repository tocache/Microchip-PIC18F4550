

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 30 11:43:20 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATD	set	3980
    62  0000                     _PORTBbits	set	3969
    63  0000                     _TRISBbits	set	3987
    64  0000                     _TRISD	set	3989
    65  0000                     _PORTD	set	3971
    66  0000                     _LATBbits	set	3978
    67  0000                     _LATDbits	set	3980
    68                           
    69                           	psect	smallconst
    70  000800                     __psmallconst:
    71                           	callstack 0
    72  000800  00                 	db	0
    73  000801                     STR_1:
    74  000801  4D                 	db	77	;'M'
    75  000802  69                 	db	105	;'i'
    76  000803  63                 	db	99	;'c'
    77  000804  72                 	db	114	;'r'
    78  000805  6F                 	db	111	;'o'
    79  000806  20                 	db	32
    80  000807  53                 	db	83	;'S'
    81  000808  65                 	db	101	;'e'
    82  000809  6D                 	db	109	;'m'
    83  00080A  61                 	db	97	;'a'
    84  00080B  6E                 	db	110	;'n'
    85  00080C  61                 	db	97	;'a'
    86  00080D  20                 	db	32
    87  00080E  31                 	db	49	;'1'
    88  00080F  31                 	db	49	;'1'
    89  000810  00                 	db	0
    90  000811                     STR_3:
    91  000811  53                 	db	83	;'S'
    92  000812  65                 	db	101	;'e'
    93  000813  72                 	db	114	;'r'
    94  000814  76                 	db	118	;'v'
    95  000815  6F                 	db	111	;'o'
    96  000816  20                 	db	32
    97  000817  31                 	db	49	;'1'
    98  000818  3A                 	db	58	;':'
    99  000819  20                 	db	32
   100  00081A  30                 	db	48	;'0'
   101  00081B  30                 	db	48	;'0'
   102  00081C  30                 	db	48	;'0'
   103  00081D  00                 	db	0
   104  00081E                     STR_2:
   105  00081E  53                 	db	83	;'S'
   106  00081F  65                 	db	101	;'e'
   107  000820  72                 	db	114	;'r'
   108  000821  76                 	db	118	;'v'
   109  000822  6F                 	db	111	;'o'
   110  000823  20                 	db	32
   111  000824  31                 	db	49	;'1'
   112  000825  3A                 	db	58	;':'
   113  000826  20                 	db	32
   114  000827  31                 	db	49	;'1'
   115  000828  38                 	db	56	;'8'
   116  000829  30                 	db	48	;'0'
   117  00082A  00                 	db	0
   118  00082B  00                 	db	0	; dummy byte at the end
   119  0000                     
   120                           ; #config settings
   121                           
   122                           	psect	cinit
   123  000B22                     __pcinit:
   124                           	callstack 0
   125  000B22                     start_initialization:
   126                           	callstack 0
   127  000B22                     __initialization:
   128                           	callstack 0
   129  000B22                     end_of_initialization:
   130                           	callstack 0
   131  000B22                     __end_of__initialization:
   132                           	callstack 0
   133  000B22  0E00               	movlw	low (__Lsmallconst shr (0+16))
   134  000B24  6EF8               	movwf	tblptru,c
   135  000B26  0E08               	movlw	high __Lsmallconst
   136  000B28  6EF7               	movwf	tblptrh,c
   137  000B2A  0100               	movlb	0
   138  000B2C  EF16  F004         	goto	_main	;jump to C main() function
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	callstack 0
   143  000001                     ENVIA_NIBBLE@dato:
   144                           	callstack 0
   145  000001                     LEER_LCD@aux:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x0
   149  000001                     	ds	1
   150  000002                     ENVIA_CHAR@dato:
   151                           	callstack 0
   152  000002                     ENVIA_LCD_CMD@dato:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x1
   156  000002                     	ds	1
   157  000003                     ENVIA_CHAR@aux:
   158                           	callstack 0
   159  000003                     ENVIA_LCD_CMD@aux:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x2
   163  000003                     	ds	1
   164  000004                     ??_LCD_CONFIG:
   165  000004                     POS_CURSOR@columna:
   166                           	callstack 0
   167  000004                     CURSOR_ONOFF@estado:
   168                           	callstack 0
   169  000004                     ESCRIBE_MENSAJE@cadena:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x3
   173  000004                     	ds	1
   174  000005                     ??_lcd_init:
   175  000005                     POS_CURSOR@fila:
   176                           	callstack 0
   177                           
   178                           ; 1 bytes @ 0x4
   179  000005                     	ds	1
   180  000006                     ESCRIBE_MENSAJE@tam:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x5
   184  000006                     	ds	1
   185  000007                     ??_ESCRIBE_MENSAJE:
   186                           
   187                           ; 1 bytes @ 0x6
   188  000007                     	ds	2
   189  000009                     ESCRIBE_MENSAJE@i:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x8
   193  000009                     	ds	1
   194  00000A                     ??_main:
   195                           
   196                           ; 1 bytes @ 0x9
   197  00000A                     	ds	2
   198                           
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 20 in file "maincode.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   218 ;;      Params:         0       0       0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0       0       0       0       0
   221 ;;      Totals:         2       0       0       0       0       0       0       0       0
   222 ;;Total ram usage:        2 bytes
   223 ;; Hardware stack levels required when called: 4
   224 ;; This function calls:
   225 ;;		_ENVIA_CHAR
   226 ;;		_ESCRIBE_MENSAJE
   227 ;;		_POS_CURSOR
   228 ;;		_configuro
   229 ;;		_lcd_init
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           	psect	text0
   236  00082C                     __ptext0:
   237                           	callstack 0
   238  00082C                     _main:
   239                           	callstack 27
   240  00082C                     
   241                           ;maincode.c: 21:     configuro();
   242  00082C  ECA0  F005         	call	_configuro	;wreg free
   243  000830                     
   244                           ;maincode.c: 22:     lcd_init();
   245  000830  EC6F  F005         	call	_lcd_init	;wreg free
   246  000834                     
   247                           ;maincode.c: 23:     POS_CURSOR(1,0);
   248  000834  0E00               	movlw	0
   249  000836  6E04               	movwf	POS_CURSOR@columna^0,c
   250  000838  0E01               	movlw	1
   251  00083A  EC06  F005         	call	_POS_CURSOR
   252  00083E                     
   253                           ;maincode.c: 24:     ESCRIBE_MENSAJE("Micro Semana 11",15);
   254  00083E  0E01               	movlw	low STR_1
   255  000840  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   256  000842  0E08               	movlw	high STR_1
   257  000844  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   258  000846  0E0F               	movlw	15
   259  000848  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   260  00084A  ECE7  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   261  00084E                     l1034:
   262                           
   263                           ;maincode.c: 26:         if(PORTBbits.RB0 == 1){
   264  00084E  A081               	btfss	129,0,c	;volatile
   265  000850  EF2C  F004         	goto	u161
   266  000854  EF2E  F004         	goto	u160
   267  000858                     u161:
   268  000858  EF54  F004         	goto	l36
   269  00085C                     u160:
   270  00085C                     
   271                           ;maincode.c: 27:             LATBbits.LB7 = 1;
   272  00085C  8E8A               	bsf	138,7,c	;volatile
   273  00085E                     
   274                           ;maincode.c: 28:             _delay((unsigned long)((2000)*(48000000UL/4000000.0)));
   275  00085E  0E20               	movlw	32
   276  000860  6E0A               	movwf	??_main^0,c
   277  000862  0E2A               	movlw	42
   278  000864                     u177:
   279  000864  2EE8               	decfsz	wreg,f,c
   280  000866  D7FE               	bra	u177
   281  000868  2E0A               	decfsz	??_main^0,f,c
   282  00086A  D7FC               	bra	u177
   283  00086C                     
   284                           ;maincode.c: 29:             LATBbits.LB7 = 0;
   285  00086C  9E8A               	bcf	138,7,c	;volatile
   286                           
   287                           ;maincode.c: 30:             _delay((unsigned long)((18000)*(48000000UL/4000000.0)));
   288  00086E  0E02               	movlw	2
   289  000870  6E0B               	movwf	(??_main+1)^0,c
   290  000872  0E19               	movlw	25
   291  000874  6E0A               	movwf	??_main^0,c
   292  000876  0E82               	movlw	130
   293  000878                     u187:
   294  000878  2EE8               	decfsz	wreg,f,c
   295  00087A  D7FE               	bra	u187
   296  00087C  2E0A               	decfsz	??_main^0,f,c
   297  00087E  D7FC               	bra	u187
   298  000880  2E0B               	decfsz	(??_main+1)^0,f,c
   299  000882  D7FA               	bra	u187
   300  000884                     
   301                           ;maincode.c: 31:             POS_CURSOR(2,0);
   302  000884  0E00               	movlw	0
   303  000886  6E04               	movwf	POS_CURSOR@columna^0,c
   304  000888  0E02               	movlw	2
   305  00088A  EC06  F005         	call	_POS_CURSOR
   306  00088E                     
   307                           ;maincode.c: 32:             ESCRIBE_MENSAJE("Servo 1: 180",12);
   308  00088E  0E1E               	movlw	low STR_2
   309  000890  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   310  000892  0E08               	movlw	high STR_2
   311  000894  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   312  000896  0E0C               	movlw	12
   313  000898  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   314  00089A  ECE7  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   315  00089E                     
   316                           ;maincode.c: 33:             ENVIA_CHAR(0xDF);
   317  00089E  0EDF               	movlw	223
   318  0008A0  EC3D  F005         	call	_ENVIA_CHAR
   319                           
   320                           ;maincode.c: 34:         }
   321  0008A4  EF27  F004         	goto	l1034
   322  0008A8                     l36:
   323                           
   324                           ;maincode.c: 36:             LATBbits.LB7 = 1;
   325  0008A8  8E8A               	bsf	138,7,c	;volatile
   326  0008AA                     
   327                           ;maincode.c: 37:             _delay((unsigned long)((1000)*(48000000UL/4000000.0)));
   328  0008AA  0E10               	movlw	16
   329  0008AC  6E0A               	movwf	??_main^0,c
   330  0008AE  0E94               	movlw	148
   331  0008B0                     u197:
   332  0008B0  2EE8               	decfsz	wreg,f,c
   333  0008B2  D7FE               	bra	u197
   334  0008B4  2E0A               	decfsz	??_main^0,f,c
   335  0008B6  D7FC               	bra	u197
   336  0008B8  D000               	nop2	
   337  0008BA                     
   338                           ;maincode.c: 38:             LATBbits.LB7 = 0;
   339  0008BA  9E8A               	bcf	138,7,c	;volatile
   340                           
   341                           ;maincode.c: 39:             _delay((unsigned long)((19000)*(48000000UL/4000000.0)));
   342  0008BC  0E02               	movlw	2
   343  0008BE  6E0B               	movwf	(??_main+1)^0,c
   344  0008C0  0E29               	movlw	41
   345  0008C2  6E0A               	movwf	??_main^0,c
   346  0008C4  0E17               	movlw	23
   347  0008C6                     u207:
   348  0008C6  2EE8               	decfsz	wreg,f,c
   349  0008C8  D7FE               	bra	u207
   350  0008CA  2E0A               	decfsz	??_main^0,f,c
   351  0008CC  D7FC               	bra	u207
   352  0008CE  2E0B               	decfsz	(??_main+1)^0,f,c
   353  0008D0  D7FA               	bra	u207
   354  0008D2  F000               	nop	
   355  0008D4                     
   356                           ;maincode.c: 40:             POS_CURSOR(2,0);
   357  0008D4  0E00               	movlw	0
   358  0008D6  6E04               	movwf	POS_CURSOR@columna^0,c
   359  0008D8  0E02               	movlw	2
   360  0008DA  EC06  F005         	call	_POS_CURSOR
   361  0008DE                     
   362                           ;maincode.c: 41:             ESCRIBE_MENSAJE("Servo 1: 000",12);
   363  0008DE  0E11               	movlw	low STR_3
   364  0008E0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   365  0008E2  0E08               	movlw	high STR_3
   366  0008E4  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   367  0008E6  0E0C               	movlw	12
   368  0008E8  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   369  0008EA  ECE7  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   370  0008EE                     
   371                           ;maincode.c: 42:             ENVIA_CHAR(0xDF);
   372  0008EE  0EDF               	movlw	223
   373  0008F0  EC3D  F005         	call	_ENVIA_CHAR
   374  0008F4  EF27  F004         	goto	l1034
   375  0008F8  EF00  F000         	goto	start
   376  0008FC                     __end_of_main:
   377                           	callstack 0
   378                           
   379 ;; *************** function _lcd_init *****************
   380 ;; Defined at:
   381 ;;		line 10 in file "maincode.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2, status,0, cstack
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         0       0       0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0
   397 ;;      Temps:          1       0       0       0       0       0       0       0       0
   398 ;;      Totals:         1       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        1 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; Hardware stack levels required when called: 3
   402 ;; This function calls:
   403 ;;		_BORRAR_LCD
   404 ;;		_CURSOR_HOME
   405 ;;		_CURSOR_ONOFF
   406 ;;		_LCD_CONFIG
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413  000ADE                     __ptext1:
   414                           	callstack 0
   415  000ADE                     _lcd_init:
   416                           	callstack 27
   417  000ADE                     
   418                           ;maincode.c: 11:     TRISD = 0x00;
   419  000ADE  0E00               	movlw	0
   420  000AE0  6E95               	movwf	149,c	;volatile
   421  000AE2                     
   422                           ;maincode.c: 12:     LCD_CONFIG();
   423  000AE2  ECB7  F004         	call	_LCD_CONFIG	;wreg free
   424  000AE6                     
   425                           ;maincode.c: 13:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   426  000AE6  0EEA               	movlw	234
   427  000AE8  6E05               	movwf	??_lcd_init^0,c
   428  000AEA  0EC3               	movlw	195
   429  000AEC                     u217:
   430  000AEC  2EE8               	decfsz	wreg,f,c
   431  000AEE  D7FE               	bra	u217
   432  000AF0  2E05               	decfsz	??_lcd_init^0,f,c
   433  000AF2  D7FC               	bra	u217
   434  000AF4  F000               	nop	
   435  000AF6                     
   436                           ;maincode.c: 14:     BORRAR_LCD();
   437  000AF6  EC9C  F005         	call	_BORRAR_LCD	;wreg free
   438  000AFA                     
   439                           ;maincode.c: 15:     CURSOR_HOME();
   440  000AFA  EC98  F005         	call	_CURSOR_HOME	;wreg free
   441  000AFE                     
   442                           ;maincode.c: 16:     CURSOR_ONOFF(1);
   443  000AFE  0E01               	movlw	1
   444  000B00  EC57  F005         	call	_CURSOR_ONOFF
   445  000B04  0012               	return		;funcret
   446  000B06                     __end_of_lcd_init:
   447                           	callstack 0
   448                           
   449 ;; *************** function _LCD_CONFIG *****************
   450 ;; Defined at:
   451 ;;		line 72 in file "LCD.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   465 ;;      Params:         0       0       0       0       0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0
   467 ;;      Temps:          1       0       0       0       0       0       0       0       0
   468 ;;      Totals:         1       0       0       0       0       0       0       0       0
   469 ;;Total ram usage:        1 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 2
   472 ;; This function calls:
   473 ;;		_ENVIA_LCD_CMD
   474 ;;		_ENVIA_NIBBLE
   475 ;; This function is called by:
   476 ;;		_lcd_init
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text2
   481  00096E                     __ptext2:
   482                           	callstack 0
   483  00096E                     _LCD_CONFIG:
   484                           	callstack 27
   485  00096E                     
   486                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   487  00096E  908C               	bcf	140,0,c	;volatile
   488                           
   489                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   490  000970  928C               	bcf	140,1,c	;volatile
   491  000972                     
   492                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   493  000972  0E30               	movlw	48
   494  000974  EC83  F005         	call	_ENVIA_NIBBLE
   495  000978                     
   496                           ;LCD.c: 77:         _delay(24000);
   497  000978  0E20               	movlw	32
   498  00097A  6E04               	movwf	??_LCD_CONFIG^0,c
   499  00097C  0E2A               	movlw	42
   500  00097E                     u227:
   501  00097E  2EE8               	decfsz	wreg,f,c
   502  000980  D7FE               	bra	u227
   503  000982  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   504  000984  D7FC               	bra	u227
   505  000986                     
   506                           ;LCD.c: 78:         _delay(24000);
   507  000986  0E20               	movlw	32
   508  000988  6E04               	movwf	??_LCD_CONFIG^0,c
   509  00098A  0E2A               	movlw	42
   510  00098C                     u237:
   511  00098C  2EE8               	decfsz	wreg,f,c
   512  00098E  D7FE               	bra	u237
   513  000990  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   514  000992  D7FC               	bra	u237
   515                           
   516                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   517  000994  0E30               	movlw	48
   518  000996  EC83  F005         	call	_ENVIA_NIBBLE
   519  00099A                     
   520                           ;LCD.c: 83:  _delay(1200);
   521  00099A  0EF0               	movlw	240
   522  00099C                     u247:
   523  00099C  D000               	nop2	
   524  00099E  2EE8               	decfsz	wreg,f,c
   525  0009A0  D7FD               	bra	u247
   526  0009A2                     
   527                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   528  0009A2  0E30               	movlw	48
   529  0009A4  EC83  F005         	call	_ENVIA_NIBBLE
   530  0009A8                     
   531                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   532  0009A8  0E20               	movlw	32
   533  0009AA  EC83  F005         	call	_ENVIA_NIBBLE
   534  0009AE                     
   535                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   536  0009AE  0E01               	movlw	1
   537  0009B0  EC23  F005         	call	_ENVIA_LCD_CMD
   538  0009B4                     
   539                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   540  0009B4  0E28               	movlw	40
   541  0009B6  EC23  F005         	call	_ENVIA_LCD_CMD
   542  0009BA                     
   543                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   544  0009BA  0E0F               	movlw	15
   545  0009BC  EC23  F005         	call	_ENVIA_LCD_CMD
   546  0009C0                     
   547                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   548  0009C0  0E06               	movlw	6
   549  0009C2  EC23  F005         	call	_ENVIA_LCD_CMD
   550  0009C6                     
   551                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   552  0009C6  0E01               	movlw	1
   553  0009C8  EC23  F005         	call	_ENVIA_LCD_CMD
   554  0009CC  0012               	return		;funcret
   555  0009CE                     __end_of_LCD_CONFIG:
   556                           	callstack 0
   557                           
   558 ;; *************** function _CURSOR_ONOFF *****************
   559 ;; Defined at:
   560 ;;		line 35 in file "LCD.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  estado          1    wreg     unsigned char 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  estado          1    3[COMRAM] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   574 ;;      Params:         0       0       0       0       0       0       0       0       0
   575 ;;      Locals:         1       0       0       0       0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0
   577 ;;      Totals:         1       0       0       0       0       0       0       0       0
   578 ;;Total ram usage:        1 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; Hardware stack levels required when called: 2
   581 ;; This function calls:
   582 ;;		_ENVIA_LCD_CMD
   583 ;; This function is called by:
   584 ;;		_lcd_init
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589  000AAE                     __ptext3:
   590                           	callstack 0
   591  000AAE                     _CURSOR_ONOFF:
   592                           	callstack 27
   593                           
   594                           ;incstack = 0
   595                           ;CURSOR_ONOFF@estado stored from wreg
   596  000AAE  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   597  000AB0                     
   598                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   599  000AB0  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   600  000AB2  A4D8               	btfss	status,2,c
   601  000AB4  EF5E  F005         	goto	u21
   602  000AB8  EF60  F005         	goto	u20
   603  000ABC                     u21:
   604  000ABC  EF63  F005         	goto	l890
   605  000AC0                     u20:
   606  000AC0  0E0E               	movlw	14
   607  000AC2  EC23  F005         	call	_ENVIA_LCD_CMD
   608  000AC6                     l890:
   609                           
   610                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   611  000AC6  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   612  000AC8  A4D8               	btfss	status,2,c
   613  000ACA  EF69  F005         	goto	u31
   614  000ACE  EF6B  F005         	goto	u30
   615  000AD2                     u31:
   616  000AD2  EF6E  F005         	goto	l82
   617  000AD6                     u30:
   618  000AD6  0E0C               	movlw	12
   619  000AD8  EC23  F005         	call	_ENVIA_LCD_CMD
   620  000ADC                     l82:
   621  000ADC  0012               	return		;funcret
   622  000ADE                     __end_of_CURSOR_ONOFF:
   623                           	callstack 0
   624                           
   625 ;; *************** function _CURSOR_HOME *****************
   626 ;; Defined at:
   627 ;;		line 30 in file "LCD.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 2
   648 ;; This function calls:
   649 ;;		_ENVIA_LCD_CMD
   650 ;; This function is called by:
   651 ;;		_lcd_init
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  000B30                     __ptext4:
   657                           	callstack 0
   658  000B30                     _CURSOR_HOME:
   659                           	callstack 27
   660  000B30                     
   661                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   662  000B30  0E02               	movlw	2
   663  000B32  EC23  F005         	call	_ENVIA_LCD_CMD
   664  000B36  0012               	return		;funcret
   665  000B38                     __end_of_CURSOR_HOME:
   666                           	callstack 0
   667                           
   668 ;; *************** function _BORRAR_LCD *****************
   669 ;; Defined at:
   670 ;;		line 67 in file "LCD.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   684 ;;      Params:         0       0       0       0       0       0       0       0       0
   685 ;;      Locals:         0       0       0       0       0       0       0       0       0
   686 ;;      Temps:          0       0       0       0       0       0       0       0       0
   687 ;;      Totals:         0       0       0       0       0       0       0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 2
   691 ;; This function calls:
   692 ;;		_ENVIA_LCD_CMD
   693 ;; This function is called by:
   694 ;;		_lcd_init
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text5
   699  000B38                     __ptext5:
   700                           	callstack 0
   701  000B38                     _BORRAR_LCD:
   702                           	callstack 27
   703  000B38                     
   704                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   705  000B38  0E01               	movlw	1
   706  000B3A  EC23  F005         	call	_ENVIA_LCD_CMD
   707  000B3E  0012               	return		;funcret
   708  000B40                     __end_of_BORRAR_LCD:
   709                           	callstack 0
   710                           
   711 ;; *************** function _configuro *****************
   712 ;; Defined at:
   713 ;;		line 6 in file "maincode.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		None
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   727 ;;      Params:         0       0       0       0       0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_main
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text6
   741  000B40                     __ptext6:
   742                           	callstack 0
   743  000B40                     _configuro:
   744                           	callstack 30
   745  000B40                     
   746                           ;maincode.c: 7:     TRISBbits.RB7 = 0;
   747  000B40  9E93               	bcf	147,7,c	;volatile
   748  000B42  0012               	return		;funcret
   749  000B44                     __end_of_configuro:
   750                           	callstack 0
   751                           
   752 ;; *************** function _POS_CURSOR *****************
   753 ;; Defined at:
   754 ;;		line 6 in file "LCD.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  fila            1    wreg     unsigned char 
   757 ;;  columna         1    3[COMRAM] unsigned char 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  fila            1    4[COMRAM] unsigned char 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   769 ;;      Params:         1       0       0       0       0       0       0       0       0
   770 ;;      Locals:         1       0       0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0
   772 ;;      Totals:         2       0       0       0       0       0       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels used: 1
   775 ;; Hardware stack levels required when called: 2
   776 ;; This function calls:
   777 ;;		_ENVIA_LCD_CMD
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text7
   784  000A0C                     __ptext7:
   785                           	callstack 0
   786  000A0C                     _POS_CURSOR:
   787                           	callstack 28
   788                           
   789                           ;incstack = 0
   790                           ;POS_CURSOR@fila stored from wreg
   791  000A0C  6E05               	movwf	POS_CURSOR@fila^0,c
   792  000A0E                     
   793                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   794  000A0E  0405               	decf	POS_CURSOR@fila^0,w,c
   795  000A10  A4D8               	btfss	status,2,c
   796  000A12  EF0D  F005         	goto	u131
   797  000A16  EF0F  F005         	goto	u130
   798  000A1A                     u131:
   799  000A1A  EF15  F005         	goto	l1014
   800  000A1E                     u130:
   801  000A1E                     
   802                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   803  000A1E  5004               	movf	POS_CURSOR@columna^0,w,c
   804  000A20  0F80               	addlw	128
   805  000A22  EC23  F005         	call	_ENVIA_LCD_CMD
   806                           
   807                           ;LCD.c: 11:  }
   808  000A26  EF22  F005         	goto	l64
   809  000A2A                     l1014:
   810  000A2A  0E02               	movlw	2
   811  000A2C  1805               	xorwf	POS_CURSOR@fila^0,w,c
   812  000A2E  A4D8               	btfss	status,2,c
   813  000A30  EF1C  F005         	goto	u141
   814  000A34  EF1E  F005         	goto	u140
   815  000A38                     u141:
   816  000A38  EF22  F005         	goto	l64
   817  000A3C                     u140:
   818  000A3C                     
   819                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   820  000A3C  5004               	movf	POS_CURSOR@columna^0,w,c
   821  000A3E  0FC0               	addlw	192
   822  000A40  EC23  F005         	call	_ENVIA_LCD_CMD
   823  000A44                     l64:
   824  000A44  0012               	return		;funcret
   825  000A46                     __end_of_POS_CURSOR:
   826                           	callstack 0
   827                           
   828 ;; *************** function _ENVIA_LCD_CMD *****************
   829 ;; Defined at:
   830 ;;		line 104 in file "LCD.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;  dato            1    wreg     unsigned char 
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  dato            1    1[COMRAM] unsigned char 
   835 ;;  aux             1    2[COMRAM] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   845 ;;      Params:         0       0       0       0       0       0       0       0       0
   846 ;;      Locals:         2       0       0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0
   848 ;;      Totals:         2       0       0       0       0       0       0       0       0
   849 ;;Total ram usage:        2 bytes
   850 ;; Hardware stack levels used: 1
   851 ;; Hardware stack levels required when called: 1
   852 ;; This function calls:
   853 ;;		_ENVIA_NIBBLE
   854 ;;		_LEER_LCD
   855 ;; This function is called by:
   856 ;;		_POS_CURSOR
   857 ;;		_CURSOR_HOME
   858 ;;		_CURSOR_ONOFF
   859 ;;		_BORRAR_LCD
   860 ;;		_LCD_CONFIG
   861 ;;		_BLINK_CURSOR
   862 ;;		_DISPLAY_ONOFF
   863 ;;		_GENERACARACTER
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text8
   868  000A46                     __ptext8:
   869                           	callstack 0
   870  000A46                     _ENVIA_LCD_CMD:
   871                           	callstack 27
   872                           
   873                           ;incstack = 0
   874                           ;ENVIA_LCD_CMD@dato stored from wreg
   875  000A46  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   876  000A48                     
   877                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   878  000A48  908C               	bcf	140,0,c	;volatile
   879  000A4A                     
   880                           ;LCD.c: 108:  LEER_LCD();
   881  000A4A  EC7E  F004         	call	_LEER_LCD	;wreg free
   882  000A4E                     
   883                           ;LCD.c: 109:  TRISD = 0b00000000;
   884  000A4E  0E00               	movlw	0
   885  000A50  6E95               	movwf	149,c	;volatile
   886  000A52                     
   887                           ;LCD.c: 111:         _delay(1200);
   888  000A52  0EF0               	movlw	240
   889  000A54                     u257:
   890  000A54  D000               	nop2	
   891  000A56  2EE8               	decfsz	wreg,f,c
   892  000A58  D7FD               	bra	u257
   893  000A5A                     
   894                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   895  000A5A  928C               	bcf	140,1,c	;volatile
   896  000A5C                     
   897                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   898  000A5C  948C               	bcf	140,2,c	;volatile
   899  000A5E                     
   900                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   901  000A5E  908C               	bcf	140,0,c	;volatile
   902  000A60                     
   903                           ;LCD.c: 115:  aux = dato & 0xF0;
   904  000A60  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   905  000A62  0BF0               	andlw	240
   906  000A64  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   907  000A66                     
   908                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   909  000A66  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   910  000A68  EC83  F005         	call	_ENVIA_NIBBLE
   911  000A6C                     
   912                           ;LCD.c: 117:  aux = dato<<4;
   913  000A6C  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   914  000A6E  0BF0               	andlw	240
   915  000A70  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   916  000A72                     
   917                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   918  000A72  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   919  000A74  EC83  F005         	call	_ENVIA_NIBBLE
   920  000A78  0012               	return		;funcret
   921  000A7A                     __end_of_ENVIA_LCD_CMD:
   922                           	callstack 0
   923                           
   924 ;; *************** function _ESCRIBE_MENSAJE *****************
   925 ;; Defined at:
   926 ;;		line 41 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   929 ;;		 -> STR_3(13), STR_2(13), STR_1(16), 
   930 ;;  tam             1    5[COMRAM] unsigned char 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  i               1    8[COMRAM] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   942 ;;      Params:         3       0       0       0       0       0       0       0       0
   943 ;;      Locals:         1       0       0       0       0       0       0       0       0
   944 ;;      Temps:          2       0       0       0       0       0       0       0       0
   945 ;;      Totals:         6       0       0       0       0       0       0       0       0
   946 ;;Total ram usage:        6 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 2
   949 ;; This function calls:
   950 ;;		_ENVIA_CHAR
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text9
   957  0009CE                     __ptext9:
   958                           	callstack 0
   959  0009CE                     _ESCRIBE_MENSAJE:
   960                           	callstack 28
   961  0009CE                     
   962                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   963  0009CE  0E00               	movlw	0
   964  0009D0  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   965                           
   966                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   967  0009D2  0E00               	movlw	0
   968  0009D4  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   969  0009D6  EFFC  F004         	goto	l1024
   970  0009DA                     l1020:
   971                           
   972                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   973  0009DA  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
   974  0009DC  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   975  0009DE  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
   976  0009E0  0E00               	movlw	0
   977  0009E2  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   978  0009E4  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   979  0009E6  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   980  0009EA  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   981  0009EE                     	if	0	;tblptru may be non-zero
   982  0009EE                     	endif
   983  0009EE                     	if	0	;tblptru may be non-zero
   984  0009EE                     	endif
   985  0009EE  0008               	tblrd		*
   986  0009F0  50F5               	movf	tablat,w,c
   987  0009F2  EC3D  F005         	call	_ENVIA_CHAR
   988  0009F6                     
   989                           ;LCD.c: 47:  }
   990  0009F6  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
   991  0009F8                     l1024:
   992  0009F8  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   993  0009FA  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   994  0009FC  A0D8               	btfss	status,0,c
   995  0009FE  EF03  F005         	goto	u151
   996  000A02  EF05  F005         	goto	u150
   997  000A06                     u151:
   998  000A06  EFED  F004         	goto	l1020
   999  000A0A                     u150:
  1000  000A0A  0012               	return		;funcret
  1001  000A0C                     __end_of_ESCRIBE_MENSAJE:
  1002                           	callstack 0
  1003                           
  1004 ;; *************** function _ENVIA_CHAR *****************
  1005 ;; Defined at:
  1006 ;;		line 50 in file "LCD.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  dato            1    wreg     unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  dato            1    1[COMRAM] unsigned char 
  1011 ;;  aux             1    2[COMRAM] unsigned char 
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2, status,0, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0
  1022 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1024 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; Hardware stack levels required when called: 1
  1028 ;; This function calls:
  1029 ;;		_ENVIA_NIBBLE
  1030 ;;		_LEER_LCD
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;;		_ESCRIBE_MENSAJE
  1034 ;;		_GENERACARACTER
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text10
  1039  000A7A                     __ptext10:
  1040                           	callstack 0
  1041  000A7A                     _ENVIA_CHAR:
  1042                           	callstack 28
  1043                           
  1044                           ;incstack = 0
  1045                           ;ENVIA_CHAR@dato stored from wreg
  1046  000A7A  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1047  000A7C                     
  1048                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1049  000A7C  808C               	bsf	140,0,c	;volatile
  1050  000A7E                     
  1051                           ;LCD.c: 54:  LEER_LCD();
  1052  000A7E  EC7E  F004         	call	_LEER_LCD	;wreg free
  1053  000A82                     
  1054                           ;LCD.c: 55:  TRISD = 0x00;
  1055  000A82  0E00               	movlw	0
  1056  000A84  6E95               	movwf	149,c	;volatile
  1057  000A86                     
  1058                           ;LCD.c: 56:         _delay(1200);
  1059  000A86  0EF0               	movlw	240
  1060  000A88                     u267:
  1061  000A88  D000               	nop2	
  1062  000A8A  2EE8               	decfsz	wreg,f,c
  1063  000A8C  D7FD               	bra	u267
  1064  000A8E                     
  1065                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1066  000A8E  928C               	bcf	140,1,c	;volatile
  1067  000A90                     
  1068                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1069  000A90  948C               	bcf	140,2,c	;volatile
  1070  000A92                     
  1071                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1072  000A92  808C               	bsf	140,0,c	;volatile
  1073  000A94                     
  1074                           ;LCD.c: 61:  aux = dato & 0xF0;
  1075  000A94  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1076  000A96  0BF0               	andlw	240
  1077  000A98  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1078  000A9A                     
  1079                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1080  000A9A  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1081  000A9C  EC83  F005         	call	_ENVIA_NIBBLE
  1082  000AA0                     
  1083                           ;LCD.c: 63:  aux = dato << 4;
  1084  000AA0  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1085  000AA2  0BF0               	andlw	240
  1086  000AA4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1087  000AA6                     
  1088                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1089  000AA6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1090  000AA8  EC83  F005         	call	_ENVIA_NIBBLE
  1091  000AAC  0012               	return		;funcret
  1092  000AAE                     __end_of_ENVIA_CHAR:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _LEER_LCD *****************
  1096 ;; Defined at:
  1097 ;;		line 121 in file "LCD.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  aux             1    0[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1114 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1115 ;;Total ram usage:        1 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_ENVIA_CHAR
  1121 ;;		_ENVIA_LCD_CMD
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text11
  1126  0008FC                     __ptext11:
  1127                           	callstack 0
  1128  0008FC                     _LEER_LCD:
  1129                           	callstack 27
  1130  0008FC                     
  1131                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1132  0008FC  0EF8               	movlw	248
  1133  0008FE  6E95               	movwf	149,c	;volatile
  1134  000900                     
  1135                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1136  000900  908C               	bcf	140,0,c	;volatile
  1137  000902                     
  1138                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1139  000902  828C               	bsf	140,1,c	;volatile
  1140  000904                     
  1141                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1142  000904  848C               	bsf	140,2,c	;volatile
  1143  000906                     
  1144                           ;LCD.c: 128:         _delay(1200);
  1145  000906  0EF0               	movlw	240
  1146  000908                     u277:
  1147  000908  D000               	nop2	
  1148  00090A  2EE8               	decfsz	wreg,f,c
  1149  00090C  D7FD               	bra	u277
  1150  00090E                     
  1151                           ;LCD.c: 130:  aux = PORTD;
  1152  00090E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1153  000912                     
  1154                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1155  000912  948C               	bcf	140,2,c	;volatile
  1156  000914                     
  1157                           ;LCD.c: 132:         _delay(1200);
  1158  000914  0EF0               	movlw	240
  1159  000916                     u287:
  1160  000916  D000               	nop2	
  1161  000918  2EE8               	decfsz	wreg,f,c
  1162  00091A  D7FD               	bra	u287
  1163  00091C                     
  1164                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1165  00091C  848C               	bsf	140,2,c	;volatile
  1166  00091E                     
  1167                           ;LCD.c: 135:         _delay(1200);
  1168  00091E  0EF0               	movlw	240
  1169  000920                     u297:
  1170  000920  D000               	nop2	
  1171  000922  2EE8               	decfsz	wreg,f,c
  1172  000924  D7FD               	bra	u297
  1173  000926                     
  1174                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1175  000926  948C               	bcf	140,2,c	;volatile
  1176  000928                     l812:
  1177                           
  1178                           ;LCD.c: 138:  aux = aux & 0x80;
  1179  000928  5001               	movf	LEER_LCD@aux^0,w,c
  1180  00092A  0B80               	andlw	128
  1181  00092C  6E01               	movwf	LEER_LCD@aux^0,c
  1182                           
  1183                           ;LCD.c: 139:  while(aux == 0x80)
  1184  00092E  EFAD  F004         	goto	l826
  1185  000932                     l107:
  1186                           
  1187                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1188  000932  848C               	bsf	140,2,c	;volatile
  1189  000934                     
  1190                           ;LCD.c: 142:             _delay(1200);
  1191  000934  0EF0               	movlw	240
  1192  000936                     u307:
  1193  000936  D000               	nop2	
  1194  000938  2EE8               	decfsz	wreg,f,c
  1195  00093A  D7FD               	bra	u307
  1196  00093C                     
  1197                           ;LCD.c: 143:             aux = PORTD;
  1198  00093C  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1199  000940                     
  1200                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1201  000940  948C               	bcf	140,2,c	;volatile
  1202                           
  1203                           ;LCD.c: 145:             _delay(1200);
  1204  000942  0EF0               	movlw	240
  1205  000944                     u317:
  1206  000944  D000               	nop2	
  1207  000946  2EE8               	decfsz	wreg,f,c
  1208  000948  D7FD               	bra	u317
  1209  00094A                     
  1210                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1211  00094A  848C               	bsf	140,2,c	;volatile
  1212                           
  1213                           ;LCD.c: 147:             _delay(1200);
  1214  00094C  0EF0               	movlw	240
  1215  00094E                     u327:
  1216  00094E  D000               	nop2	
  1217  000950  2EE8               	decfsz	wreg,f,c
  1218  000952  D7FD               	bra	u327
  1219  000954                     
  1220                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1221  000954  948C               	bcf	140,2,c	;volatile
  1222  000956  EF94  F004         	goto	l812
  1223  00095A                     l826:
  1224                           
  1225                           ;LCD.c: 139:  while(aux == 0x80)
  1226  00095A  0E80               	movlw	128
  1227  00095C  1801               	xorwf	LEER_LCD@aux^0,w,c
  1228  00095E  B4D8               	btfsc	status,2,c
  1229  000960  EFB4  F004         	goto	u11
  1230  000964  EFB6  F004         	goto	u10
  1231  000968                     u11:
  1232  000968  EF99  F004         	goto	l107
  1233  00096C                     u10:
  1234  00096C  0012               	return		;funcret
  1235  00096E                     __end_of_LEER_LCD:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _ENVIA_NIBBLE *****************
  1239 ;; Defined at:
  1240 ;;		line 93 in file "LCD.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  dato            1    wreg     unsigned char 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  dato            1    0[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, status,2, status,0
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0
  1255 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1257 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1258 ;;Total ram usage:        1 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_ENVIA_CHAR
  1264 ;;		_LCD_CONFIG
  1265 ;;		_ENVIA_LCD_CMD
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text12
  1270  000B06                     __ptext12:
  1271                           	callstack 0
  1272  000B06                     _ENVIA_NIBBLE:
  1273                           	callstack 28
  1274                           
  1275                           ;incstack = 0
  1276                           ;ENVIA_NIBBLE@dato stored from wreg
  1277  000B06  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1278  000B08                     
  1279                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1280  000B08  0E0F               	movlw	15
  1281  000B0A  168C               	andwf	140,f,c	;volatile
  1282                           
  1283                           ;LCD.c: 96:  dato &= 0xF0;
  1284  000B0C  0EF0               	movlw	240
  1285  000B0E  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1286                           
  1287                           ;LCD.c: 97:  LATD|= dato;
  1288  000B10  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1289  000B12  128C               	iorwf	140,f,c	;volatile
  1290  000B14                     
  1291                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1292  000B14  848C               	bsf	140,2,c	;volatile
  1293  000B16                     
  1294                           ;LCD.c: 100:         _delay(1200);
  1295  000B16  0EF0               	movlw	240
  1296  000B18                     u337:
  1297  000B18  D000               	nop2	
  1298  000B1A  2EE8               	decfsz	wreg,f,c
  1299  000B1C  D7FD               	bra	u337
  1300  000B1E                     
  1301                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1302  000B1E  948C               	bcf	140,2,c	;volatile
  1303  000B20  0012               	return		;funcret
  1304  000B22                     __end_of_ENVIA_NIBBLE:
  1305                           	callstack 0
  1306                           
  1307                           	psect	rparam
  1308  0000                     
  1309                           	psect	idloc
  1310                           
  1311                           ;Config register IDLOC0 @ 0x200000
  1312                           ;	unspecified, using default values
  1313  200000                     	org	2097152
  1314  200000  FF                 	db	255
  1315                           
  1316                           ;Config register IDLOC1 @ 0x200001
  1317                           ;	unspecified, using default values
  1318  200001                     	org	2097153
  1319  200001  FF                 	db	255
  1320                           
  1321                           ;Config register IDLOC2 @ 0x200002
  1322                           ;	unspecified, using default values
  1323  200002                     	org	2097154
  1324  200002  FF                 	db	255
  1325                           
  1326                           ;Config register IDLOC3 @ 0x200003
  1327                           ;	unspecified, using default values
  1328  200003                     	org	2097155
  1329  200003  FF                 	db	255
  1330                           
  1331                           ;Config register IDLOC4 @ 0x200004
  1332                           ;	unspecified, using default values
  1333  200004                     	org	2097156
  1334  200004  FF                 	db	255
  1335                           
  1336                           ;Config register IDLOC5 @ 0x200005
  1337                           ;	unspecified, using default values
  1338  200005                     	org	2097157
  1339  200005  FF                 	db	255
  1340                           
  1341                           ;Config register IDLOC6 @ 0x200006
  1342                           ;	unspecified, using default values
  1343  200006                     	org	2097158
  1344  200006  FF                 	db	255
  1345                           
  1346                           ;Config register IDLOC7 @ 0x200007
  1347                           ;	unspecified, using default values
  1348  200007                     	org	2097159
  1349  200007  FF                 	db	255
  1350                           
  1351                           	psect	config
  1352                           
  1353                           ;Config register CONFIG1L @ 0x300000
  1354                           ;	PLL Prescaler Selection bits
  1355                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1356                           ;	System Clock Postscaler Selection bits
  1357                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1358                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1359                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1360  300000                     	org	3145728
  1361  300000  00                 	db	0
  1362                           
  1363                           ;Config register CONFIG1H @ 0x300001
  1364                           ;	Oscillator Selection bits
  1365                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1366                           ;	Fail-Safe Clock Monitor Enable bit
  1367                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1368                           ;	Internal/External Oscillator Switchover bit
  1369                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1370  300001                     	org	3145729
  1371  300001  02                 	db	2
  1372                           
  1373                           ;Config register CONFIG2L @ 0x300002
  1374                           ;	Power-up Timer Enable bit
  1375                           ;	PWRT = ON, PWRT enabled
  1376                           ;	Brown-out Reset Enable bits
  1377                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1378                           ;	Brown-out Reset Voltage bits
  1379                           ;	BORV = 3, Minimum setting 2.05V
  1380                           ;	USB Voltage Regulator Enable bit
  1381                           ;	VREGEN = OFF, USB voltage regulator disabled
  1382  300002                     	org	3145730
  1383  300002  18                 	db	24
  1384                           
  1385                           ;Config register CONFIG2H @ 0x300003
  1386                           ;	Watchdog Timer Enable bit
  1387                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1388                           ;	Watchdog Timer Postscale Select bits
  1389                           ;	WDTPS = 32768, 1:32768
  1390  300003                     	org	3145731
  1391  300003  1E                 	db	30
  1392                           
  1393                           ; Padding undefined space
  1394  300004                     	org	3145732
  1395  300004  FF                 	db	255
  1396                           
  1397                           ;Config register CONFIG3H @ 0x300005
  1398                           ;	CCP2 MUX bit
  1399                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1400                           ;	PORTB A/D Enable bit
  1401                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1402                           ;	Low-Power Timer 1 Oscillator Enable bit
  1403                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1404                           ;	MCLR Pin Enable bit
  1405                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1406  300005                     	org	3145733
  1407  300005  81                 	db	129
  1408                           
  1409                           ;Config register CONFIG4L @ 0x300006
  1410                           ;	Stack Full/Underflow Reset Enable bit
  1411                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1412                           ;	Single-Supply ICSP Enable bit
  1413                           ;	LVP = OFF, Single-Supply ICSP disabled
  1414                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1415                           ;	ICPRT = OFF, ICPORT disabled
  1416                           ;	Extended Instruction Set Enable bit
  1417                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1418                           ;	Background Debugger Enable bit
  1419                           ;	DEBUG = 0x1, unprogrammed default
  1420  300006                     	org	3145734
  1421  300006  81                 	db	129
  1422                           
  1423                           ; Padding undefined space
  1424  300007                     	org	3145735
  1425  300007  FF                 	db	255
  1426                           
  1427                           ;Config register CONFIG5L @ 0x300008
  1428                           ;	Code Protection bit
  1429                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1430                           ;	Code Protection bit
  1431                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1432                           ;	Code Protection bit
  1433                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1434                           ;	Code Protection bit
  1435                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1436  300008                     	org	3145736
  1437  300008  0F                 	db	15
  1438                           
  1439                           ;Config register CONFIG5H @ 0x300009
  1440                           ;	Boot Block Code Protection bit
  1441                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1442                           ;	Data EEPROM Code Protection bit
  1443                           ;	CPD = OFF, Data EEPROM is not code-protected
  1444  300009                     	org	3145737
  1445  300009  C0                 	db	192
  1446                           
  1447                           ;Config register CONFIG6L @ 0x30000A
  1448                           ;	Write Protection bit
  1449                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1450                           ;	Write Protection bit
  1451                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1452                           ;	Write Protection bit
  1453                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1454                           ;	Write Protection bit
  1455                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1456  30000A                     	org	3145738
  1457  30000A  0F                 	db	15
  1458                           
  1459                           ;Config register CONFIG6H @ 0x30000B
  1460                           ;	Configuration Register Write Protection bit
  1461                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1462                           ;	Boot Block Write Protection bit
  1463                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1464                           ;	Data EEPROM Write Protection bit
  1465                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1466  30000B                     	org	3145739
  1467  30000B  E0                 	db	224
  1468                           
  1469                           ;Config register CONFIG7L @ 0x30000C
  1470                           ;	Table Read Protection bit
  1471                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1472                           ;	Table Read Protection bit
  1473                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1474                           ;	Table Read Protection bit
  1475                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1476                           ;	Table Read Protection bit
  1477                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1478  30000C                     	org	3145740
  1479  30000C  0F                 	db	15
  1480                           
  1481                           ;Config register CONFIG7H @ 0x30000D
  1482                           ;	Boot Block Table Read Protection bit
  1483                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1484  30000D                     	org	3145741
  1485  30000D  40                 	db	64
  1486                           tosu	equ	0xFFF
  1487                           tosh	equ	0xFFE
  1488                           tosl	equ	0xFFD
  1489                           stkptr	equ	0xFFC
  1490                           pclatu	equ	0xFFB
  1491                           pclath	equ	0xFFA
  1492                           pcl	equ	0xFF9
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           indf0	equ	0xFEF
  1500                           postinc0	equ	0xFEE
  1501                           postdec0	equ	0xFED
  1502                           preinc0	equ	0xFEC
  1503                           plusw0	equ	0xFEB
  1504                           fsr0h	equ	0xFEA
  1505                           fsr0l	equ	0xFE9
  1506                           wreg	equ	0xFE8
  1507                           indf1	equ	0xFE7
  1508                           postinc1	equ	0xFE6
  1509                           postdec1	equ	0xFE5
  1510                           preinc1	equ	0xFE4
  1511                           plusw1	equ	0xFE3
  1512                           fsr1h	equ	0xFE2
  1513                           fsr1l	equ	0xFE1
  1514                           bsr	equ	0xFE0
  1515                           indf2	equ	0xFDF
  1516                           postinc2	equ	0xFDE
  1517                           postdec2	equ	0xFDD
  1518                           preinc2	equ	0xFDC
  1519                           plusw2	equ	0xFDB
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1748
                                              9 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     436
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhh         6A      0       0      20        0.0%
BITBIGSFRhl          1      0       0      21        0.0%
BITBIGSFRlhhh        6      0       0      22        0.0%
BITBIGSFRlhhl        1      0       0      23        0.0%
BITBIGSFRlhlh        6      0       0      24        0.0%
BITBIGSFRlhll        1      0       0      25        0.0%
BITBIGSFRll         21      0       0      26        0.0%
ABS                  0      0       0      27        0.0%
BIGRAM             7FF      0       0      28        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 30 11:43:20 2022

                     l30 0B04                       l27 0B42                       l36 08A8  
                     l64 0A44                       l82 0ADC                       l91 0AAC  
                     l77 0B36                       l94 0B3E                       l88 0A0A  
                     l97 09CC                       u10 096C                       u11 0968  
                     u20 0AC0                       u21 0ABC                       u30 0AD6  
                     u31 0AD2            ENVIA_CHAR@aux 0003                      l100 0B20  
                    l103 0A78                      l107 0932                      l109 096C  
                    l800 090E                      l810 0926                      l802 0912  
                    l820 094A                      l812 0928                      l804 0914  
                    l900 0A86                      l830 0B14                      l822 0954  
                    l814 0934                      l806 091C                      l910 0A9A  
                    l902 0A8E                      l832 0B16                      l816 093C  
                    l808 091E                      l912 0AA0                      l904 0A90  
                    l840 0A4E                      l920 0AE2                      l834 0B1E  
                    l818 0940                      l826 095A                      l914 0AA6  
                    l906 0A92                      l850 0A60                      l842 0A52  
                    l922 0AE6                      l828 0B08                      l908 0A94  
                    l852 0A66                      l844 0A5A                      l836 0A48  
                    l916 0B40                      l860 0972                      l924 0AF6  
                    l790 08FC                      l854 0A6C                      l846 0A5C  
                    l838 0A4A                      l870 09A8                      l862 0978  
                    l926 0AFA                      l918 0ADE                      l792 0900  
                    l856 0A72                      l848 0A5E                      l880 09C6  
                    l872 09AE                      l864 0986                      l928 0AFE  
                    l794 0902                      l882 0B38                      l890 0AC6  
                    l874 09B4                      l866 099A                      l858 096E  
                    l796 0904                      l884 0B30                      l892 0AD6  
                    l876 09BA                      l868 09A2                      l798 0906  
                    l894 0A7C                      l886 0AB0                      l878 09C0  
                    l896 0A7E                      l888 0AC0                      l898 0A82  
                    u130 0A1E                      u131 0A1A                      u140 0A3C  
                    u141 0A38                      u150 0A0A                      u151 0A06  
                    u207 08C6                      u160 085C                      u217 0AEC  
                    u161 0858                      u307 0936                      u227 097E  
                    u317 0944                      u237 098C                      u327 094E  
                    u247 099C                      u337 0B18                      u257 0A54  
                    u177 0864                      u267 0A88                      u187 0878  
                    u277 0908                      u197 08B0                      u287 0916  
                    u297 0920              LEER_LCD@aux 0001                      wreg 000FE8  
           ?_CURSOR_HOME 0001           ??_ENVIA_NIBBLE 0001           ENVIA_CHAR@dato 0002  
                   l1010 0A0E                     l1020 09DA                     l1012 0A1E  
                   l1022 09F6                     l1014 0A2A                     l1030 0834  
                   l1024 09F8                     l1016 0A3C                     l1040 086C  
                   l1032 083E                     l1018 09CE                     l1050 08BA  
                   l1042 0884                     l1034 084E                     l1026 082C  
                   l1052 08D4                     l1044 088E                     l1036 085C  
                   l1028 0830                     l1054 08DE                     l1046 089E  
                   l1038 085E                     l1056 08EE                     l1048 08AA  
                   STR_1 0801                     STR_2 081E                     STR_3 0811  
                   _LATD 000F8C                     _main 082C                     start 0000  
          ?_CURSOR_ONOFF 0001             ___param_bank 000000          ??_ENVIA_LCD_CMD 0002  
       __end_of_LEER_LCD 096E                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95              ?_POS_CURSOR 0004                    tablat 000FF5  
                  status 000FD8           ??_CURSOR_ONOFF 0004          __initialization 0B22  
           __end_of_main 08FC          _ESCRIBE_MENSAJE 09CE                   ??_main 000A  
          __activetblptr 000001         __end_of_lcd_init 0B06     __end_of_ENVIA_NIBBLE 0B22  
                 isa$std 000001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8             ??_BORRAR_LCD 0004  
              ?_LEER_LCD 0001               __accesstop 0060  __end_of__initialization 0B22  
           ??_LCD_CONFIG 0004            ___rparam_used 000001             ??_ENVIA_CHAR 0002  
__end_of_ESCRIBE_MENSAJE 0A0C           __pcstackCOMRAM 0001       __end_of_BORRAR_LCD 0B40  
       ENVIA_LCD_CMD@aux 0003     __end_of_CURSOR_ONOFF 0ADE       __end_of_LCD_CONFIG 09CE  
     __end_of_ENVIA_CHAR 0AAE               ??_LEER_LCD 0001         ENVIA_NIBBLE@dato 0001  
           ??_POS_CURSOR 0005                ?_lcd_init 0001                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0004        __end_of_configuro 0B44  
           __psmallconst 0800    __end_of_ENVIA_LCD_CMD 0A7A                  __pcinit 0B22  
     __end_of_POS_CURSOR 0A46                  __ramtop 0800                  __ptext0 082C  
                __ptext1 0ADE                  __ptext2 096E                  __ptext3 0AAE  
                __ptext4 0B30                  __ptext5 0B38                  __ptext6 0B40  
                __ptext7 0A0C                  __ptext8 0A46                  __ptext9 09CE  
             ??_lcd_init 0005             _ENVIA_NIBBLE 0B06     end_of_initialization 0B22  
              _PORTBbits 000F81                _TRISBbits 000F93             _CURSOR_ONOFF 0AAE  
     CURSOR_ONOFF@estado 0004            ??_CURSOR_HOME 0004      start_initialization 0B22  
      ENVIA_LCD_CMD@dato 0002      __end_of_CURSOR_HOME 0B38                _configuro 0B40  
            __smallconst 0800                 _LEER_LCD 08FC                 _LATBbits 000F8A  
               _LATDbits 000F8C         ESCRIBE_MENSAJE@i 0009           POS_CURSOR@fila 0005  
             ?_configuro 0001              _CURSOR_HOME 0B30                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800                 __ptext10 0A7A  
               __ptext11 08FC                 __ptext12 0B06               _BORRAR_LCD 0B38  
               _lcd_init 0ADE               _LCD_CONFIG 096E               _ENVIA_CHAR 0A7A  
               isa$xinst 000000            _ENVIA_LCD_CMD 0A46              ??_configuro 0001  
      ??_ESCRIBE_MENSAJE 0007    ESCRIBE_MENSAJE@cadena 0004           ?_ENVIA_LCD_CMD 0001  
            ?_BORRAR_LCD 0001            ?_ENVIA_NIBBLE 0001               _POS_CURSOR 0A0C  
            ?_LCD_CONFIG 0001       ESCRIBE_MENSAJE@tam 0006              ?_ENVIA_CHAR 0001  
      POS_CURSOR@columna 0004  
