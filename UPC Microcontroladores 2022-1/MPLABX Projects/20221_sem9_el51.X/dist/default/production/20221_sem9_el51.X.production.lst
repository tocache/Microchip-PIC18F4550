

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue May 17 09:07:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  007EE2                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _tabla_7s
    59  007EE2  3F                 	db	63
    60  007EE3  06                 	db	6
    61  007EE4  5B                 	db	91
    62  007EE5  4F                 	db	79
    63  007EE6  66                 	db	102
    64  007EE7  6D                 	db	109
    65  007EE8  7D                 	db	125
    66  007EE9  07                 	db	7
    67  007EEA  7F                 	db	127
    68  007EEB  67                 	db	103
    69  0000                     _LATB	set	3978
    70  0000                     _LATDbits	set	3980
    71  0000                     _TRISB	set	3987
    72  0000                     _TRISDbits	set	3989
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007EEC                     __pcinit:
    78                           	callstack 0
    79  007EEC                     start_initialization:
    80                           	callstack 0
    81  007EEC                     __initialization:
    82                           	callstack 0
    83                           
    84                           ; Initialize objects allocated to COMRAM (10 bytes)
    85                           ; load TBLPTR registers with __pidataCOMRAM
    86  007EEC  0EE2               	movlw	low __pidataCOMRAM
    87  007EEE  6EF6               	movwf	tblptrl,c
    88  007EF0  0E7E               	movlw	high __pidataCOMRAM
    89  007EF2  6EF7               	movwf	tblptrh,c
    90  007EF4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    91  007EF6  6EF8               	movwf	tblptru,c
    92  007EF8  EE00  F001         	lfsr	0,__pdataCOMRAM
    93  007EFC  EE10 F00A          	lfsr	1,10
    94  007F00                     copy_data0:
    95  007F00  0009               	tblrd		*+
    96  007F02  CFF5 FFEE          	movff	tablat,postinc0
    97  007F06  50E5               	movf	postdec1,w,c
    98  007F08  50E1               	movf	fsr1l,w,c
    99  007F0A  E1FA               	bnz	copy_data0
   100                           
   101                           ; Clear objects allocated to COMRAM (1 bytes)
   102  007F0C  6A11               	clrf	__pbssCOMRAM& (0+255),c
   103  007F0E                     end_of_initialization:
   104                           	callstack 0
   105  007F0E                     __end_of__initialization:
   106                           	callstack 0
   107  007F0E  0100               	movlb	0
   108  007F10  EFA2  F03F         	goto	_main	;jump to C main() function
   109                           
   110                           	psect	bssCOMRAM
   111  000011                     __pbssCOMRAM:
   112                           	callstack 0
   113  000011                     _cuenta:
   114                           	callstack 0
   115  000011                     	ds	1
   116                           
   117                           	psect	dataCOMRAM
   118  000001                     __pdataCOMRAM:
   119                           	callstack 0
   120  000001                     _tabla_7s:
   121                           	callstack 0
   122  000001                     	ds	10
   123                           
   124                           	psect	cstackCOMRAM
   125  00000B                     __pcstackCOMRAM:
   126                           	callstack 0
   127  00000B                     ??_invertido:
   128  00000B                     
   129                           ; 1 bytes @ 0x0
   130  00000B                     	ds	2
   131  00000D                     invertido@tempf:
   132                           	callstack 0
   133                           
   134                           ; 1 bytes @ 0x2
   135  00000D                     	ds	1
   136  00000E                     invertido@dato:
   137                           	callstack 0
   138                           
   139                           ; 1 bytes @ 0x3
   140  00000E                     	ds	1
   141  00000F                     ??_main:
   142                           
   143                           ; 1 bytes @ 0x4
   144  00000F                     	ds	2
   145                           
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 27 in file "maincode.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0
   167 ;;      Temps:          2       0       0       0       0       0       0       0       0
   168 ;;      Totals:         2       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        2 bytes
   170 ;; Hardware stack levels required when called: 1
   171 ;; This function calls:
   172 ;;		_configuro
   173 ;;		_invertido
   174 ;; This function is called by:
   175 ;;		Startup code after reset
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text0
   180  007F44                     __ptext0:
   181                           	callstack 0
   182  007F44                     _main:
   183                           	callstack 30
   184  007F44                     
   185                           ;maincode.c: 28:     configuro();
   186  007F44  EC6C  F03F         	call	_configuro	;wreg free
   187  007F48                     l720:
   188                           
   189                           ;maincode.c: 30:         LATDbits.LD1 = 1;
   190  007F48  828C               	bsf	140,1,c	;volatile
   191  007F4A                     
   192                           ;maincode.c: 31:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   193  007F4A  0E0A               	movlw	10
   194  007F4C  6E10               	movwf	(??_main+1)^0,c
   195  007F4E  0E22               	movlw	34
   196  007F50  6E0F               	movwf	??_main^0,c
   197  007F52  0EA1               	movlw	161
   198  007F54                     u27:
   199  007F54  2EE8               	decfsz	wreg,f,c
   200  007F56  D7FE               	bra	u27
   201  007F58  2E0F               	decfsz	??_main^0,f,c
   202  007F5A  D7FC               	bra	u27
   203  007F5C  2E10               	decfsz	(??_main+1)^0,f,c
   204  007F5E  D7FA               	bra	u27
   205  007F60  F000               	nop	
   206  007F62                     
   207                           ;maincode.c: 32:         LATDbits.LD6 = 1;
   208  007F62  8C8C               	bsf	140,6,c	;volatile
   209  007F64                     
   210                           ;maincode.c: 33:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   211  007F64  0E0A               	movlw	10
   212  007F66  6E10               	movwf	(??_main+1)^0,c
   213  007F68  0E22               	movlw	34
   214  007F6A  6E0F               	movwf	??_main^0,c
   215  007F6C  0EA1               	movlw	161
   216  007F6E                     u37:
   217  007F6E  2EE8               	decfsz	wreg,f,c
   218  007F70  D7FE               	bra	u37
   219  007F72  2E0F               	decfsz	??_main^0,f,c
   220  007F74  D7FC               	bra	u37
   221  007F76  2E10               	decfsz	(??_main+1)^0,f,c
   222  007F78  D7FA               	bra	u37
   223  007F7A  F000               	nop	
   224  007F7C                     
   225                           ;maincode.c: 34:         LATDbits.LD1 = 0;
   226  007F7C  928C               	bcf	140,1,c	;volatile
   227  007F7E                     
   228                           ;maincode.c: 35:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   229  007F7E  0E0A               	movlw	10
   230  007F80  6E10               	movwf	(??_main+1)^0,c
   231  007F82  0E22               	movlw	34
   232  007F84  6E0F               	movwf	??_main^0,c
   233  007F86  0EA1               	movlw	161
   234  007F88                     u47:
   235  007F88  2EE8               	decfsz	wreg,f,c
   236  007F8A  D7FE               	bra	u47
   237  007F8C  2E0F               	decfsz	??_main^0,f,c
   238  007F8E  D7FC               	bra	u47
   239  007F90  2E10               	decfsz	(??_main+1)^0,f,c
   240  007F92  D7FA               	bra	u47
   241  007F94  F000               	nop	
   242  007F96                     
   243                           ;maincode.c: 36:         LATDbits.LD6 = 0;
   244  007F96  9C8C               	bcf	140,6,c	;volatile
   245  007F98                     
   246                           ;maincode.c: 37:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   247  007F98  0E0A               	movlw	10
   248  007F9A  6E10               	movwf	(??_main+1)^0,c
   249  007F9C  0E22               	movlw	34
   250  007F9E  6E0F               	movwf	??_main^0,c
   251  007FA0  0EA1               	movlw	161
   252  007FA2                     u57:
   253  007FA2  2EE8               	decfsz	wreg,f,c
   254  007FA4  D7FE               	bra	u57
   255  007FA6  2E0F               	decfsz	??_main^0,f,c
   256  007FA8  D7FC               	bra	u57
   257  007FAA  2E10               	decfsz	(??_main+1)^0,f,c
   258  007FAC  D7FA               	bra	u57
   259  007FAE  F000               	nop	
   260  007FB0                     
   261                           ;maincode.c: 39:         LATB = invertido(tabla_7s[cuenta]);
   262  007FB0  0E01               	movlw	low _tabla_7s
   263  007FB2  2411               	addwf	_cuenta^0,w,c
   264  007FB4  6ED9               	movwf	fsr2l,c
   265  007FB6  6ADA               	clrf	fsr2h,c
   266  007FB8  0E00               	movlw	high _tabla_7s
   267  007FBA  22DA               	addwfc	fsr2h,f,c
   268  007FBC  50DF               	movf	indf2,w,c
   269  007FBE  EC8A  F03F         	call	_invertido
   270  007FC2  6E8A               	movwf	138,c	;volatile
   271  007FC4                     
   272                           ;maincode.c: 40:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   273  007FC4  0E0A               	movlw	10
   274  007FC6  6E10               	movwf	(??_main+1)^0,c
   275  007FC8  0E22               	movlw	34
   276  007FCA  6E0F               	movwf	??_main^0,c
   277  007FCC  0EA1               	movlw	161
   278  007FCE                     u67:
   279  007FCE  2EE8               	decfsz	wreg,f,c
   280  007FD0  D7FE               	bra	u67
   281  007FD2  2E0F               	decfsz	??_main^0,f,c
   282  007FD4  D7FC               	bra	u67
   283  007FD6  2E10               	decfsz	(??_main+1)^0,f,c
   284  007FD8  D7FA               	bra	u67
   285  007FDA  F000               	nop	
   286  007FDC                     
   287                           ;maincode.c: 41:         if (cuenta == 9){
   288  007FDC  0E09               	movlw	9
   289  007FDE  1811               	xorwf	_cuenta^0,w,c
   290  007FE0  A4D8               	btfss	status,2,c
   291  007FE2  EFF5  F03F         	goto	u11
   292  007FE6  EFF7  F03F         	goto	u10
   293  007FEA                     u11:
   294  007FEA  EFFB  F03F         	goto	l744
   295  007FEE                     u10:
   296  007FEE                     
   297                           ;maincode.c: 42:             cuenta = 0;
   298  007FEE  0E00               	movlw	0
   299  007FF0  6E11               	movwf	_cuenta^0,c
   300                           
   301                           ;maincode.c: 43:         }
   302  007FF2  EFA4  F03F         	goto	l720
   303  007FF6                     l744:
   304                           
   305                           ;maincode.c: 45:             cuenta++;
   306  007FF6  2A11               	incf	_cuenta^0,f,c
   307  007FF8  EFA4  F03F         	goto	l720
   308  007FFC  EF00  F000         	goto	start
   309  008000                     __end_of_main:
   310                           	callstack 0
   311                           
   312 ;; *************** function _invertido *****************
   313 ;; Defined at:
   314 ;;		line 21 in file "maincode.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;  dato            1    wreg     unsigned char 
   317 ;; Auto vars:     Size  Location     Type
   318 ;;  dato            1    3[COMRAM] unsigned char 
   319 ;;  tempf           1    2[COMRAM] unsigned char 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      unsigned char 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   329 ;;      Params:         0       0       0       0       0       0       0       0       0
   330 ;;      Locals:         2       0       0       0       0       0       0       0       0
   331 ;;      Temps:          2       0       0       0       0       0       0       0       0
   332 ;;      Totals:         4       0       0       0       0       0       0       0       0
   333 ;;Total ram usage:        4 bytes
   334 ;; Hardware stack levels used: 1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text1
   343  007F14                     __ptext1:
   344                           	callstack 0
   345  007F14                     _invertido:
   346                           	callstack 30
   347                           
   348                           ;incstack = 0
   349                           ;invertido@dato stored from wreg
   350  007F14  6E0E               	movwf	invertido@dato^0,c
   351  007F16                     
   352                           ;maincode.c: 23:     tempf = ((dato << 3) & 0x38) + ((dato >> 3) & 0x07) + (dato & 0x40)
      +                          ;
   353  007F16  C00E  F00B         	movff	invertido@dato,??_invertido
   354  007F1A  0E40               	movlw	64
   355  007F1C  160B               	andwf	??_invertido^0,f,c
   356  007F1E  C00E  F00C         	movff	invertido@dato,??_invertido+1
   357  007F22  90D8               	bcf	status,0,c
   358  007F24  320C               	rrcf	(??_invertido+1)^0,f,c
   359  007F26  90D8               	bcf	status,0,c
   360  007F28  320C               	rrcf	(??_invertido+1)^0,f,c
   361  007F2A  90D8               	bcf	status,0,c
   362  007F2C  320C               	rrcf	(??_invertido+1)^0,f,c
   363  007F2E  0E07               	movlw	7
   364  007F30  160C               	andwf	(??_invertido+1)^0,f,c
   365  007F32  380E               	swapf	invertido@dato^0,w,c
   366  007F34  42E8               	rrncf	wreg,f,c
   367  007F36  0BF8               	andlw	248
   368  007F38  0B38               	andlw	56
   369  007F3A  240C               	addwf	(??_invertido+1)^0,w,c
   370  007F3C  240B               	addwf	??_invertido^0,w,c
   371  007F3E  6E0D               	movwf	invertido@tempf^0,c
   372  007F40                     
   373                           ;maincode.c: 24:     return tempf;
   374  007F40  500D               	movf	invertido@tempf^0,w,c
   375  007F42  0012               	return		;funcret
   376  007F44                     __end_of_invertido:
   377                           	callstack 0
   378                           
   379 ;; *************** function _configuro *****************
   380 ;; Defined at:
   381 ;;		line 15 in file "maincode.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : 0/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   395 ;;      Params:         0       0       0       0       0       0       0       0       0
   396 ;;      Locals:         0       0       0       0       0       0       0       0       0
   397 ;;      Temps:          0       0       0       0       0       0       0       0       0
   398 ;;      Totals:         0       0       0       0       0       0       0       0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used: 1
   401 ;; This function calls:
   402 ;;		Nothing
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text2
   409  007ED8                     __ptext2:
   410                           	callstack 0
   411  007ED8                     _configuro:
   412                           	callstack 30
   413  007ED8                     
   414                           ;maincode.c: 16:     TRISDbits.RD1 = 0;
   415  007ED8  9295               	bcf	149,1,c	;volatile
   416                           
   417                           ;maincode.c: 17:     TRISDbits.RD6 = 0;
   418  007EDA  9C95               	bcf	149,6,c	;volatile
   419  007EDC                     
   420                           ;maincode.c: 18:     TRISB = 0x80;
   421  007EDC  0E80               	movlw	128
   422  007EDE  6E93               	movwf	147,c	;volatile
   423  007EE0  0012               	return		;funcret
   424  007EE2                     __end_of_configuro:
   425                           	callstack 0
   426  0000                     
   427                           	psect	rparam
   428  0000                     
   429                           	psect	idloc
   430                           
   431                           ;Config register IDLOC0 @ 0x200000
   432                           ;	unspecified, using default values
   433  200000                     	org	2097152
   434  200000  FF                 	db	255
   435                           
   436                           ;Config register IDLOC1 @ 0x200001
   437                           ;	unspecified, using default values
   438  200001                     	org	2097153
   439  200001  FF                 	db	255
   440                           
   441                           ;Config register IDLOC2 @ 0x200002
   442                           ;	unspecified, using default values
   443  200002                     	org	2097154
   444  200002  FF                 	db	255
   445                           
   446                           ;Config register IDLOC3 @ 0x200003
   447                           ;	unspecified, using default values
   448  200003                     	org	2097155
   449  200003  FF                 	db	255
   450                           
   451                           ;Config register IDLOC4 @ 0x200004
   452                           ;	unspecified, using default values
   453  200004                     	org	2097156
   454  200004  FF                 	db	255
   455                           
   456                           ;Config register IDLOC5 @ 0x200005
   457                           ;	unspecified, using default values
   458  200005                     	org	2097157
   459  200005  FF                 	db	255
   460                           
   461                           ;Config register IDLOC6 @ 0x200006
   462                           ;	unspecified, using default values
   463  200006                     	org	2097158
   464  200006  FF                 	db	255
   465                           
   466                           ;Config register IDLOC7 @ 0x200007
   467                           ;	unspecified, using default values
   468  200007                     	org	2097159
   469  200007  FF                 	db	255
   470                           
   471                           	psect	config
   472                           
   473                           ;Config register CONFIG1L @ 0x300000
   474                           ;	PLL Prescaler Selection bits
   475                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   476                           ;	System Clock Postscaler Selection bits
   477                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   478                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   479                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   480  300000                     	org	3145728
   481  300000  00                 	db	0
   482                           
   483                           ;Config register CONFIG1H @ 0x300001
   484                           ;	Oscillator Selection bits
   485                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
   486                           ;	Fail-Safe Clock Monitor Enable bit
   487                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   488                           ;	Internal/External Oscillator Switchover bit
   489                           ;	IESO = OFF, Oscillator Switchover mode disabled
   490  300001                     	org	3145729
   491  300001  02                 	db	2
   492                           
   493                           ;Config register CONFIG2L @ 0x300002
   494                           ;	Power-up Timer Enable bit
   495                           ;	PWRT = ON, PWRT enabled
   496                           ;	Brown-out Reset Enable bits
   497                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   498                           ;	Brown-out Reset Voltage bits
   499                           ;	BORV = 3, Minimum setting 2.05V
   500                           ;	USB Voltage Regulator Enable bit
   501                           ;	VREGEN = OFF, USB voltage regulator disabled
   502  300002                     	org	3145730
   503  300002  18                 	db	24
   504                           
   505                           ;Config register CONFIG2H @ 0x300003
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   508                           ;	Watchdog Timer Postscale Select bits
   509                           ;	WDTPS = 32768, 1:32768
   510  300003                     	org	3145731
   511  300003  1E                 	db	30
   512                           
   513                           ; Padding undefined space
   514  300004                     	org	3145732
   515  300004  FF                 	db	255
   516                           
   517                           ;Config register CONFIG3H @ 0x300005
   518                           ;	CCP2 MUX bit
   519                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   520                           ;	PORTB A/D Enable bit
   521                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   522                           ;	Low-Power Timer 1 Oscillator Enable bit
   523                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   524                           ;	MCLR Pin Enable bit
   525                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   526  300005                     	org	3145733
   527  300005  81                 	db	129
   528                           
   529                           ;Config register CONFIG4L @ 0x300006
   530                           ;	Stack Full/Underflow Reset Enable bit
   531                           ;	STVREN = ON, Stack full/underflow will cause Reset
   532                           ;	Single-Supply ICSP Enable bit
   533                           ;	LVP = OFF, Single-Supply ICSP disabled
   534                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   535                           ;	ICPRT = OFF, ICPORT disabled
   536                           ;	Extended Instruction Set Enable bit
   537                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   538                           ;	Background Debugger Enable bit
   539                           ;	DEBUG = 0x1, unprogrammed default
   540  300006                     	org	3145734
   541  300006  81                 	db	129
   542                           
   543                           ; Padding undefined space
   544  300007                     	org	3145735
   545  300007  FF                 	db	255
   546                           
   547                           ;Config register CONFIG5L @ 0x300008
   548                           ;	Code Protection bit
   549                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   550                           ;	Code Protection bit
   551                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   552                           ;	Code Protection bit
   553                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   554                           ;	Code Protection bit
   555                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   556  300008                     	org	3145736
   557  300008  0F                 	db	15
   558                           
   559                           ;Config register CONFIG5H @ 0x300009
   560                           ;	Boot Block Code Protection bit
   561                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   562                           ;	Data EEPROM Code Protection bit
   563                           ;	CPD = OFF, Data EEPROM is not code-protected
   564  300009                     	org	3145737
   565  300009  C0                 	db	192
   566                           
   567                           ;Config register CONFIG6L @ 0x30000A
   568                           ;	Write Protection bit
   569                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   570                           ;	Write Protection bit
   571                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   572                           ;	Write Protection bit
   573                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   574                           ;	Write Protection bit
   575                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   576  30000A                     	org	3145738
   577  30000A  0F                 	db	15
   578                           
   579                           ;Config register CONFIG6H @ 0x30000B
   580                           ;	Configuration Register Write Protection bit
   581                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   582                           ;	Boot Block Write Protection bit
   583                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   584                           ;	Data EEPROM Write Protection bit
   585                           ;	WRTD = OFF, Data EEPROM is not write-protected
   586  30000B                     	org	3145739
   587  30000B  E0                 	db	224
   588                           
   589                           ;Config register CONFIG7L @ 0x30000C
   590                           ;	Table Read Protection bit
   591                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   592                           ;	Table Read Protection bit
   593                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   594                           ;	Table Read Protection bit
   595                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   596                           ;	Table Read Protection bit
   597                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   598  30000C                     	org	3145740
   599  30000C  0F                 	db	15
   600                           
   601                           ;Config register CONFIG7H @ 0x30000D
   602                           ;	Boot Block Table Read Protection bit
   603                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   604  30000D                     	org	3145741
   605  30000D  40                 	db	64
   606                           tosu	equ	0xFFF
   607                           tosh	equ	0xFFE
   608                           tosl	equ	0xFFD
   609                           stkptr	equ	0xFFC
   610                           pclatu	equ	0xFFB
   611                           pclath	equ	0xFFA
   612                           pcl	equ	0xFF9
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           prodh	equ	0xFF4
   618                           prodl	equ	0xFF3
   619                           indf0	equ	0xFEF
   620                           postinc0	equ	0xFEE
   621                           postdec0	equ	0xFED
   622                           preinc0	equ	0xFEC
   623                           plusw0	equ	0xFEB
   624                           fsr0h	equ	0xFEA
   625                           fsr0l	equ	0xFE9
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postinc1	equ	0xFE6
   629                           postdec1	equ	0xFE5
   630                           preinc1	equ	0xFE4
   631                           plusw1	equ	0xFE3
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           bsr	equ	0xFE0
   635                           indf2	equ	0xFDF
   636                           postinc2	equ	0xFDE
   637                           postdec2	equ	0xFDD
   638                           preinc2	equ	0xFDC
   639                           plusw2	equ	0xFDB
   640                           fsr2h	equ	0xFDA
   641                           fsr2l	equ	0xFD9
   642                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_invertido

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              4 COMRAM     2     2      0
                          _configuro
                          _invertido
 ---------------------------------------------------------------------------------
 (1) _invertido                                            4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
   _invertido

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBIGSFRh          6A      0       0      21        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6      11       1       17.9%
BITBIGSFRllll       2A      0       0      25        0.0%
BITBIGSFRllh         6      0       0      23        0.0%
BITBIGSFRlllh        1      0       0      24        0.0%
BITBIGSFRlh          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11       3        0.0%
DATA                 0      0      11       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue May 17 09:07:56 2022

                     l20 7F42                       l17 7EE0                       u10 7FEE  
                     u11 7FEA                       u27 7F54                       u37 7F6E  
                     u47 7F88                       u57 7FA2                       u67 7FCE  
                    l710 7F16                      l712 7F16                      l720 7F48  
                    l706 7ED8                      l714 7F40                      l730 7F7E  
                    l722 7F4A                      l708 7EDC                      l740 7FDC  
                    l732 7F96                      l724 7F62                      l742 7FEE  
                    l734 7F98                      l726 7F64                      l718 7F44  
                    l744 7FF6                      l736 7FB0                      l728 7F7C  
                    l738 7FC4                      wreg 000FE8                     _LATB 000F8A  
                   _main 7F44                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ?_main 000B                    _TRISB 000F93                    tablat 000FF5  
                  status 000FD8          __initialization 7EEC             __end_of_main 8000  
                 ??_main 000F            __activetblptr 000000                   _cuenta 0011  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F0E            ___rparam_used 000001            invertido@dato 000E  
         __pcstackCOMRAM 000B                  __Hparam 0000                  __Lparam 0000  
      __end_of_configuro 7EE2                  __pcinit 7EEC                  __ramtop 0800  
                __ptext0 7F44                  __ptext1 7F14                  __ptext2 7ED8  
      __end_of_invertido 7F44     end_of_initialization 7F0E                  postdec1 000FE5  
                postinc0 000FEE                _TRISDbits 000F95           invertido@tempf 000D  
          __pidataCOMRAM 7EE2      start_initialization 7EEC              __pbssCOMRAM 0011  
              _configuro 7ED8                _invertido 7F14                 _LATDbits 000F8C  
             ?_configuro 000B                copy_data0 7F00               ?_invertido 000B  
               __Hrparam 0000                 __Lrparam 0000                 _tabla_7s 0001  
               isa$xinst 000000              ??_configuro 000B              ??_invertido 000B  
