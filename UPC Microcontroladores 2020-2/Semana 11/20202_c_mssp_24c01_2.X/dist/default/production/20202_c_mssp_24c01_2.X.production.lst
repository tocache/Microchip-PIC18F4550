

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 28 12:52:02 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     _PORTD	set	3971
    64  0000                     _LATD	set	3980
    65  0000                     _LATDbits	set	3980
    66  0000                     _PORTBbits	set	3969
    67  0000                     _SSPSTATbits	set	4039
    68  0000                     _SSPBUF	set	4041
    69  0000                     _SSPCON2bits	set	4037
    70  0000                     _SSPADD	set	4040
    71  0000                     _SSPCON1bits	set	4038
    72  0000                     _TRISD	set	3989
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     STR_1:
    79  000801  47                 	db	71	;'G'
    80  000802  72                 	db	114	;'r'
    81  000803  61                 	db	97	;'a'
    82  000804  62                 	db	98	;'b'
    83  000805  61                 	db	97	;'a'
    84  000806  64                 	db	100	;'d'
    85  000807  6F                 	db	111	;'o'
    86  000808  72                 	db	114	;'r'
    87  000809  20                 	db	32
    88  00080A  64                 	db	100	;'d'
    89  00080B  65                 	db	101	;'e'
    90  00080C  20                 	db	32
    91  00080D  45                 	db	69	;'E'
    92  00080E  45                 	db	69	;'E'
    93  00080F  50                 	db	80	;'P'
    94  000810  52                 	db	82	;'R'
    95  000811  4F                 	db	79	;'O'
    96  000812  4D                 	db	77	;'M'
    97  000813  00                 	db	0
    98  000814                     STR_3:
    99  000814  52                 	db	82	;'R'
   100  000815  65                 	db	101	;'e'
   101  000816  61                 	db	97	;'a'
   102  000817  64                 	db	100	;'d'
   103  000818  79                 	db	121	;'y'
   104  000819  2E                 	db	46
   105  00081A  2E                 	db	46
   106  00081B  2E                 	db	46
   107  00081C  20                 	db	32
   108  00081D  20                 	db	32
   109  00081E  00                 	db	0
   110  00081F                     STR_2:
   111  00081F  57                 	db	87	;'W'
   112  000820  72                 	db	114	;'r'
   113  000821  69                 	db	105	;'i'
   114  000822  74                 	db	116	;'t'
   115  000823  69                 	db	105	;'i'
   116  000824  6E                 	db	110	;'n'
   117  000825  67                 	db	103	;'g'
   118  000826  2E                 	db	46
   119  000827  2E                 	db	46
   120  000828  2E                 	db	46
   121  000829  00                 	db	0
   122  00082A  00                 	db	0	; dummy byte at the end
   123  0000                     
   124                           ; #config settings
   125                           
   126                           	psect	cinit
   127  000D84                     __pcinit:
   128                           	callstack 0
   129  000D84                     start_initialization:
   130                           	callstack 0
   131  000D84                     __initialization:
   132                           	callstack 0
   133                           
   134                           ; Clear objects allocated to COMRAM (1 bytes)
   135  000D84  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   136  000D86                     end_of_initialization:
   137                           	callstack 0
   138  000D86                     __end_of__initialization:
   139                           	callstack 0
   140  000D86  0E00               	movlw	low (__Lsmallconst shr (0+16))
   141  000D88  6EF8               	movwf	tblptru,c
   142  000D8A  0E08               	movlw	high __Lsmallconst
   143  000D8C  6EF7               	movwf	tblptrh,c
   144  000D8E  0100               	movlb	0
   145  000D90  EF54  F005         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssCOMRAM
   148  00000B                     __pbssCOMRAM:
   149                           	callstack 0
   150  00000B                     _dato:
   151                           	callstack 0
   152  00000B                     	ds	1
   153                           
   154                           	psect	cstackCOMRAM
   155  000001                     __pcstackCOMRAM:
   156                           	callstack 0
   157  000001                     ??_m24c01_write:
   158  000001                     m24c01_read@direccion:
   159                           	callstack 0
   160  000001                     ENVIA_NIBBLE@dato:
   161                           	callstack 0
   162  000001                     LEER_LCD@aux:
   163                           	callstack 0
   164                           
   165                           ; 1 bytes @ 0x0
   166  000001                     	ds	1
   167  000002                     m24c01_read@leido:
   168                           	callstack 0
   169  000002                     ENVIA_CHAR@dato:
   170                           	callstack 0
   171  000002                     ENVIA_LCD_CMD@dato:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x1
   175  000002                     	ds	1
   176  000003                     ENVIA_CHAR@aux:
   177                           	callstack 0
   178  000003                     ENVIA_LCD_CMD@aux:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x2
   182  000003                     	ds	1
   183  000004                     ??_LCD_CONFIG:
   184  000004                     POS_CURSOR@columna:
   185                           	callstack 0
   186  000004                     CURSOR_ONOFF@estado:
   187                           	callstack 0
   188  000004                     ESCRIBE_MENSAJE@cadena:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x3
   192  000004                     	ds	1
   193  000005                     ??_lcd_init:
   194  000005                     POS_CURSOR@fila:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x4
   198  000005                     	ds	1
   199  000006                     ESCRIBE_MENSAJE@tam:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x5
   203  000006                     	ds	1
   204  000007                     ??_ESCRIBE_MENSAJE:
   205                           
   206                           ; 1 bytes @ 0x6
   207  000007                     	ds	2
   208  000009                     ESCRIBE_MENSAJE@i:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x8
   212  000009                     	ds	1
   213  00000A                     main@x:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x9
   217  00000A                     	ds	1
   218                           
   219 ;;
   220 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   221 ;;
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 108 in file "maincode.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;  x               1    9[COMRAM] unsigned char 
   229 ;; Return value:  Size  Location     Type
   230 ;;                  1    wreg      void 
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 0/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   238 ;;      Params:         0       0       0       0       0       0       0       0       0
   239 ;;      Locals:         1       0       0       0       0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0       0       0       0       0
   241 ;;      Totals:         1       0       0       0       0       0       0       0       0
   242 ;;Total ram usage:        1 bytes
   243 ;; Hardware stack levels required when called:    4
   244 ;; This function calls:
   245 ;;		_ENVIA_CHAR
   246 ;;		_ESCRIBE_MENSAJE
   247 ;;		_POS_CURSOR
   248 ;;		_lcd_init
   249 ;;		_m24c01_read
   250 ;;		_m24c01_write
   251 ;;		_mssp_conf
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text0
   258  000AA8                     __ptext0:
   259                           	callstack 0
   260  000AA8                     _main:
   261                           	callstack 27
   262  000AA8                     
   263                           ;maincode.c: 109:     lcd_init();
   264  000AA8  ECA0  F006         	call	_lcd_init	;wreg free
   265  000AAC                     
   266                           ;maincode.c: 110:     mssp_conf();
   267  000AAC  ECCA  F006         	call	_mssp_conf	;wreg free
   268  000AB0                     
   269                           ;maincode.c: 111:     POS_CURSOR(1,0);
   270  000AB0  0E00               	movlw	0
   271  000AB2  6E04               	movwf	POS_CURSOR@columna^0,c
   272  000AB4  0E01               	movlw	1
   273  000AB6  EC37  F006         	call	_POS_CURSOR
   274  000ABA                     
   275                           ;maincode.c: 112:     ESCRIBE_MENSAJE("Grabador de EEPROM",18);
   276  000ABA  0E01               	movlw	low STR_1
   277  000ABC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   278  000ABE  0E08               	movlw	high STR_1
   279  000AC0  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   280  000AC2  0E12               	movlw	18
   281  000AC4  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   282  000AC6  EC18  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   283  000ACA                     l1208:
   284                           
   285                           ;maincode.c: 114:         if(PORTBbits.RB6 == 1){
   286  000ACA  AC81               	btfss	129,6,c	;volatile
   287  000ACC  EF6A  F005         	goto	u561
   288  000AD0  EF6C  F005         	goto	u560
   289  000AD4                     u561:
   290  000AD4  EF7D  F005         	goto	l164
   291  000AD8                     u560:
   292  000AD8                     
   293                           ;maincode.c: 115:             POS_CURSOR(2,0);
   294  000AD8  0E00               	movlw	0
   295  000ADA  6E04               	movwf	POS_CURSOR@columna^0,c
   296  000ADC  0E02               	movlw	2
   297  000ADE  EC37  F006         	call	_POS_CURSOR
   298  000AE2                     
   299                           ;maincode.c: 116:             ESCRIBE_MENSAJE("Writing...",10);
   300  000AE2  0E1F               	movlw	low STR_2
   301  000AE4  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   302  000AE6  0E08               	movlw	high STR_2
   303  000AE8  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   304  000AEA  0E0A               	movlw	10
   305  000AEC  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   306  000AEE  EC18  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   307  000AF2                     
   308                           ;maincode.c: 117:             m24c01_write();
   309  000AF2  EC16  F004         	call	_m24c01_write	;wreg free
   310                           
   311                           ;maincode.c: 118:         }
   312  000AF6  EF65  F005         	goto	l1208
   313  000AFA                     l164:
   314  000AFA  AE81               	btfss	129,7,c	;volatile
   315  000AFC  EF82  F005         	goto	u571
   316  000B00  EF84  F005         	goto	u570
   317  000B04                     u571:
   318  000B04  EF9E  F005         	goto	l1230
   319  000B08                     u570:
   320  000B08                     
   321                           ;maincode.c: 120:             POS_CURSOR(2,0);
   322  000B08  0E00               	movlw	0
   323  000B0A  6E04               	movwf	POS_CURSOR@columna^0,c
   324  000B0C  0E02               	movlw	2
   325  000B0E  EC37  F006         	call	_POS_CURSOR
   326  000B12                     
   327                           ;maincode.c: 121:             for(unsigned char x=0;x<10;x++){
   328  000B12  0E00               	movlw	0
   329  000B14  6E0A               	movwf	main@x^0,c
   330  000B16                     l1224:
   331                           
   332                           ;maincode.c: 122:                 dato = m24c01_read(x+100);
   333  000B16  500A               	movf	main@x^0,w,c
   334  000B18  0F64               	addlw	100
   335  000B1A  ECEF  F004         	call	_m24c01_read
   336  000B1E  6E0B               	movwf	_dato^0,c
   337                           
   338                           ;maincode.c: 123:                 ENVIA_CHAR(dato);
   339  000B20  500B               	movf	_dato^0,w,c
   340  000B22  EC6E  F006         	call	_ENVIA_CHAR
   341  000B26                     
   342                           ;maincode.c: 124:             }
   343  000B26  2A0A               	incf	main@x^0,f,c
   344  000B28  0E09               	movlw	9
   345  000B2A  640A               	cpfsgt	main@x^0,c
   346  000B2C  EF9A  F005         	goto	u581
   347  000B30  EF9C  F005         	goto	u580
   348  000B34                     u581:
   349  000B34  EF8B  F005         	goto	l1224
   350  000B38                     u580:
   351  000B38  EF65  F005         	goto	l1208
   352  000B3C                     l1230:
   353                           
   354                           ;maincode.c: 127:             POS_CURSOR(2,0);
   355  000B3C  0E00               	movlw	0
   356  000B3E  6E04               	movwf	POS_CURSOR@columna^0,c
   357  000B40  0E02               	movlw	2
   358  000B42  EC37  F006         	call	_POS_CURSOR
   359  000B46                     
   360                           ;maincode.c: 128:             ESCRIBE_MENSAJE("Ready...  ",10);
   361  000B46  0E14               	movlw	low STR_3
   362  000B48  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   363  000B4A  0E08               	movlw	high STR_3
   364  000B4C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   365  000B4E  0E0A               	movlw	10
   366  000B50  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   367  000B52  EC18  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   368  000B56  EF65  F005         	goto	l1208
   369  000B5A  EF00  F000         	goto	start
   370  000B5E                     __end_of_main:
   371                           	callstack 0
   372                           
   373 ;; *************** function _mssp_conf *****************
   374 ;; Defined at:
   375 ;;		line 28 in file "maincode.c"
   376 ;; Parameters:    Size  Location     Type
   377 ;;		None
   378 ;; Auto vars:     Size  Location     Type
   379 ;;		None
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, status,2
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   389 ;;      Params:         0       0       0       0       0       0       0       0       0
   390 ;;      Locals:         0       0       0       0       0       0       0       0       0
   391 ;;      Temps:          0       0       0       0       0       0       0       0       0
   392 ;;      Totals:         0       0       0       0       0       0       0       0       0
   393 ;;Total ram usage:        0 bytes
   394 ;; Hardware stack levels used:    1
   395 ;; This function calls:
   396 ;;		Nothing
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text1
   403  000D94                     __ptext1:
   404                           	callstack 0
   405  000D94                     _mssp_conf:
   406                           	callstack 30
   407  000D94                     
   408                           ;maincode.c: 29:     SSPCON1bits.SSPEN = 1;
   409  000D94  8AC6               	bsf	198,5,c	;volatile
   410                           
   411                           ;maincode.c: 30:     SSPCON1bits.SSPM3 = 1;
   412  000D96  86C6               	bsf	198,3,c	;volatile
   413                           
   414                           ;maincode.c: 31:     SSPCON1bits.SSPM2 = 0;
   415  000D98  94C6               	bcf	198,2,c	;volatile
   416                           
   417                           ;maincode.c: 32:     SSPCON1bits.SSPM1 = 0;
   418  000D9A  92C6               	bcf	198,1,c	;volatile
   419                           
   420                           ;maincode.c: 33:     SSPCON1bits.SSPM0 = 0;
   421  000D9C  90C6               	bcf	198,0,c	;volatile
   422  000D9E                     
   423                           ;maincode.c: 34:     SSPADD = 29;
   424  000D9E  0E1D               	movlw	29
   425  000DA0  6EC8               	movwf	200,c	;volatile
   426  000DA2  0012               	return		;funcret
   427  000DA4                     __end_of_mssp_conf:
   428                           	callstack 0
   429                           
   430 ;; *************** function _m24c01_write *****************
   431 ;; Defined at:
   432 ;;		line 37 in file "maincode.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, status,2
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   446 ;;      Params:         0       0       0       0       0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0       0       0       0       0
   448 ;;      Temps:          1       0       0       0       0       0       0       0       0
   449 ;;      Totals:         1       0       0       0       0       0       0       0       0
   450 ;;Total ram usage:        1 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; This function calls:
   453 ;;		Nothing
   454 ;; This function is called by:
   455 ;;		_main
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text2
   460  00082C                     __ptext2:
   461                           	callstack 0
   462  00082C                     _m24c01_write:
   463                           	callstack 30
   464  00082C                     
   465                           ;maincode.c: 38:     SSPCON2bits.SEN = 1;
   466  00082C  80C5               	bsf	197,0,c	;volatile
   467  00082E                     l41:
   468  00082E  B0C5               	btfsc	197,0,c	;volatile
   469  000830  EF1C  F004         	goto	u41
   470  000834  EF1E  F004         	goto	u40
   471  000838                     u41:
   472  000838  EF17  F004         	goto	l41
   473  00083C                     u40:
   474  00083C                     
   475                           ;maincode.c: 40:     SSPBUF = 0xA0;
   476  00083C  0EA0               	movlw	160
   477  00083E  6EC9               	movwf	201,c	;volatile
   478  000840                     l44:
   479  000840  B0C7               	btfsc	199,0,c	;volatile
   480  000842  EF25  F004         	goto	u51
   481  000846  EF27  F004         	goto	u50
   482  00084A                     u51:
   483  00084A  EF20  F004         	goto	l44
   484  00084E                     u50:
   485  00084E                     l47:
   486  00084E  B4C7               	btfsc	199,2,c	;volatile
   487  000850  EF2C  F004         	goto	u61
   488  000854  EF2E  F004         	goto	u60
   489  000858                     u61:
   490  000858  EF27  F004         	goto	l47
   491  00085C                     u60:
   492  00085C                     
   493                           ;maincode.c: 43:     SSPBUF = 100;
   494  00085C  0E64               	movlw	100
   495  00085E  6EC9               	movwf	201,c	;volatile
   496  000860                     l50:
   497  000860  B0C7               	btfsc	199,0,c	;volatile
   498  000862  EF35  F004         	goto	u71
   499  000866  EF37  F004         	goto	u70
   500  00086A                     u71:
   501  00086A  EF30  F004         	goto	l50
   502  00086E                     u70:
   503  00086E                     l53:
   504  00086E  B4C7               	btfsc	199,2,c	;volatile
   505  000870  EF3C  F004         	goto	u81
   506  000874  EF3E  F004         	goto	u80
   507  000878                     u81:
   508  000878  EF37  F004         	goto	l53
   509  00087C                     u80:
   510  00087C                     
   511                           ;maincode.c: 46:     SSPBUF = 'I';
   512  00087C  0E49               	movlw	73
   513  00087E  6EC9               	movwf	201,c	;volatile
   514  000880                     l56:
   515  000880  B0C7               	btfsc	199,0,c	;volatile
   516  000882  EF45  F004         	goto	u91
   517  000886  EF47  F004         	goto	u90
   518  00088A                     u91:
   519  00088A  EF40  F004         	goto	l56
   520  00088E                     u90:
   521  00088E                     l59:
   522  00088E  B4C7               	btfsc	199,2,c	;volatile
   523  000890  EF4C  F004         	goto	u101
   524  000894  EF4E  F004         	goto	u100
   525  000898                     u101:
   526  000898  EF47  F004         	goto	l59
   527  00089C                     u100:
   528  00089C                     
   529                           ;maincode.c: 49:     SSPBUF = 'n';
   530  00089C  0E6E               	movlw	110
   531  00089E  6EC9               	movwf	201,c	;volatile
   532  0008A0                     l62:
   533  0008A0  B0C7               	btfsc	199,0,c	;volatile
   534  0008A2  EF55  F004         	goto	u111
   535  0008A6  EF57  F004         	goto	u110
   536  0008AA                     u111:
   537  0008AA  EF50  F004         	goto	l62
   538  0008AE                     u110:
   539  0008AE                     l65:
   540  0008AE  B4C7               	btfsc	199,2,c	;volatile
   541  0008B0  EF5C  F004         	goto	u121
   542  0008B4  EF5E  F004         	goto	u120
   543  0008B8                     u121:
   544  0008B8  EF57  F004         	goto	l65
   545  0008BC                     u120:
   546  0008BC                     
   547                           ;maincode.c: 52:     SSPBUF = 'g';
   548  0008BC  0E67               	movlw	103
   549  0008BE  6EC9               	movwf	201,c	;volatile
   550  0008C0                     l68:
   551  0008C0  B0C7               	btfsc	199,0,c	;volatile
   552  0008C2  EF65  F004         	goto	u131
   553  0008C6  EF67  F004         	goto	u130
   554  0008CA                     u131:
   555  0008CA  EF60  F004         	goto	l68
   556  0008CE                     u130:
   557  0008CE                     l71:
   558  0008CE  B4C7               	btfsc	199,2,c	;volatile
   559  0008D0  EF6C  F004         	goto	u141
   560  0008D4  EF6E  F004         	goto	u140
   561  0008D8                     u141:
   562  0008D8  EF67  F004         	goto	l71
   563  0008DC                     u140:
   564  0008DC                     
   565                           ;maincode.c: 55:     SSPBUF = 'e';
   566  0008DC  0E65               	movlw	101
   567  0008DE  6EC9               	movwf	201,c	;volatile
   568  0008E0                     l74:
   569  0008E0  B0C7               	btfsc	199,0,c	;volatile
   570  0008E2  EF75  F004         	goto	u151
   571  0008E6  EF77  F004         	goto	u150
   572  0008EA                     u151:
   573  0008EA  EF70  F004         	goto	l74
   574  0008EE                     u150:
   575  0008EE                     l77:
   576  0008EE  B4C7               	btfsc	199,2,c	;volatile
   577  0008F0  EF7C  F004         	goto	u161
   578  0008F4  EF7E  F004         	goto	u160
   579  0008F8                     u161:
   580  0008F8  EF77  F004         	goto	l77
   581  0008FC                     u160:
   582  0008FC                     
   583                           ;maincode.c: 58:     SSPBUF = 'n';
   584  0008FC  0E6E               	movlw	110
   585  0008FE  6EC9               	movwf	201,c	;volatile
   586  000900                     l80:
   587  000900  B0C7               	btfsc	199,0,c	;volatile
   588  000902  EF85  F004         	goto	u171
   589  000906  EF87  F004         	goto	u170
   590  00090A                     u171:
   591  00090A  EF80  F004         	goto	l80
   592  00090E                     u170:
   593  00090E                     l83:
   594  00090E  B4C7               	btfsc	199,2,c	;volatile
   595  000910  EF8C  F004         	goto	u181
   596  000914  EF8E  F004         	goto	u180
   597  000918                     u181:
   598  000918  EF87  F004         	goto	l83
   599  00091C                     u180:
   600  00091C                     
   601                           ;maincode.c: 61:     SSPBUF = 'i';
   602  00091C  0E69               	movlw	105
   603  00091E  6EC9               	movwf	201,c	;volatile
   604  000920                     l86:
   605  000920  B0C7               	btfsc	199,0,c	;volatile
   606  000922  EF95  F004         	goto	u191
   607  000926  EF97  F004         	goto	u190
   608  00092A                     u191:
   609  00092A  EF90  F004         	goto	l86
   610  00092E                     u190:
   611  00092E                     l89:
   612  00092E  B4C7               	btfsc	199,2,c	;volatile
   613  000930  EF9C  F004         	goto	u201
   614  000934  EF9E  F004         	goto	u200
   615  000938                     u201:
   616  000938  EF97  F004         	goto	l89
   617  00093C                     u200:
   618  00093C                     
   619                           ;maincode.c: 64:     SSPBUF = 'e';
   620  00093C  0E65               	movlw	101
   621  00093E  6EC9               	movwf	201,c	;volatile
   622  000940                     l92:
   623  000940  B0C7               	btfsc	199,0,c	;volatile
   624  000942  EFA5  F004         	goto	u211
   625  000946  EFA7  F004         	goto	u210
   626  00094A                     u211:
   627  00094A  EFA0  F004         	goto	l92
   628  00094E                     u210:
   629  00094E                     l95:
   630  00094E  B4C7               	btfsc	199,2,c	;volatile
   631  000950  EFAC  F004         	goto	u221
   632  000954  EFAE  F004         	goto	u220
   633  000958                     u221:
   634  000958  EFA7  F004         	goto	l95
   635  00095C                     u220:
   636  00095C                     
   637                           ;maincode.c: 67:     SSPBUF = 'r';
   638  00095C  0E72               	movlw	114
   639  00095E  6EC9               	movwf	201,c	;volatile
   640  000960                     l98:
   641  000960  B0C7               	btfsc	199,0,c	;volatile
   642  000962  EFB5  F004         	goto	u231
   643  000966  EFB7  F004         	goto	u230
   644  00096A                     u231:
   645  00096A  EFB0  F004         	goto	l98
   646  00096E                     u230:
   647  00096E                     l101:
   648  00096E  B4C7               	btfsc	199,2,c	;volatile
   649  000970  EFBC  F004         	goto	u241
   650  000974  EFBE  F004         	goto	u240
   651  000978                     u241:
   652  000978  EFB7  F004         	goto	l101
   653  00097C                     u240:
   654  00097C                     
   655                           ;maincode.c: 70:     SSPBUF = 'i';
   656  00097C  0E69               	movlw	105
   657  00097E  6EC9               	movwf	201,c	;volatile
   658  000980                     l104:
   659  000980  B0C7               	btfsc	199,0,c	;volatile
   660  000982  EFC5  F004         	goto	u251
   661  000986  EFC7  F004         	goto	u250
   662  00098A                     u251:
   663  00098A  EFC0  F004         	goto	l104
   664  00098E                     u250:
   665  00098E                     l107:
   666  00098E  B4C7               	btfsc	199,2,c	;volatile
   667  000990  EFCC  F004         	goto	u261
   668  000994  EFCE  F004         	goto	u260
   669  000998                     u261:
   670  000998  EFC7  F004         	goto	l107
   671  00099C                     u260:
   672  00099C                     
   673                           ;maincode.c: 73:     SSPBUF = 'a';
   674  00099C  0E61               	movlw	97
   675  00099E  6EC9               	movwf	201,c	;volatile
   676  0009A0                     l110:
   677  0009A0  B0C7               	btfsc	199,0,c	;volatile
   678  0009A2  EFD5  F004         	goto	u271
   679  0009A6  EFD7  F004         	goto	u270
   680  0009AA                     u271:
   681  0009AA  EFD0  F004         	goto	l110
   682  0009AE                     u270:
   683  0009AE                     l113:
   684  0009AE  B4C7               	btfsc	199,2,c	;volatile
   685  0009B0  EFDC  F004         	goto	u281
   686  0009B4  EFDE  F004         	goto	u280
   687  0009B8                     u281:
   688  0009B8  EFD7  F004         	goto	l113
   689  0009BC                     u280:
   690  0009BC                     
   691                           ;maincode.c: 76:     SSPCON2bits.PEN = 1;
   692  0009BC  84C5               	bsf	197,2,c	;volatile
   693  0009BE                     l116:
   694  0009BE  B4C5               	btfsc	197,2,c	;volatile
   695  0009C0  EFE4  F004         	goto	u291
   696  0009C4  EFE6  F004         	goto	u290
   697  0009C8                     u291:
   698  0009C8  EFDF  F004         	goto	l116
   699  0009CC                     u290:
   700  0009CC                     
   701                           ;maincode.c: 78:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   702  0009CC  0E9C               	movlw	156
   703  0009CE  6E01               	movwf	??_m24c01_write^0,c
   704  0009D0  0ED7               	movlw	215
   705  0009D2                     u597:
   706  0009D2  2EE8               	decfsz	wreg,f,c
   707  0009D4  D7FE               	bra	u597
   708  0009D6  2E01               	decfsz	??_m24c01_write^0,f,c
   709  0009D8  D7FC               	bra	u597
   710  0009DA  F000               	nop	
   711  0009DC  0012               	return		;funcret
   712  0009DE                     __end_of_m24c01_write:
   713                           	callstack 0
   714                           
   715 ;; *************** function _m24c01_read *****************
   716 ;; Defined at:
   717 ;;		line 81 in file "maincode.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  direccion       1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  direccion       1    0[COMRAM] unsigned char 
   722 ;;  leido           1    1[COMRAM] unsigned char 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      unsigned char 
   725 ;; Registers used:
   726 ;;		wreg, status,2
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   732 ;;      Params:         0       0       0       0       0       0       0       0       0
   733 ;;      Locals:         2       0       0       0       0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0       0       0       0       0
   735 ;;      Totals:         2       0       0       0       0       0       0       0       0
   736 ;;Total ram usage:        2 bytes
   737 ;; Hardware stack levels used:    1
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  0009DE                     __ptext3:
   747                           	callstack 0
   748  0009DE                     _m24c01_read:
   749                           	callstack 30
   750                           
   751                           ;incstack = 0
   752                           ;m24c01_read@direccion stored from wreg
   753  0009DE  6E01               	movwf	m24c01_read@direccion^0,c
   754  0009E0                     
   755                           ;maincode.c: 83:     SSPCON2bits.SEN = 1;
   756  0009E0  80C5               	bsf	197,0,c	;volatile
   757  0009E2                     l122:
   758  0009E2  B0C5               	btfsc	197,0,c	;volatile
   759  0009E4  EFF6  F004         	goto	u301
   760  0009E8  EFF8  F004         	goto	u300
   761  0009EC                     u301:
   762  0009EC  EFF1  F004         	goto	l122
   763  0009F0                     u300:
   764  0009F0                     
   765                           ;maincode.c: 85:     SSPBUF = 0xA0;
   766  0009F0  0EA0               	movlw	160
   767  0009F2  6EC9               	movwf	201,c	;volatile
   768  0009F4                     l125:
   769  0009F4  B0C7               	btfsc	199,0,c	;volatile
   770  0009F6  EFFF  F004         	goto	u311
   771  0009FA  EF01  F005         	goto	u310
   772  0009FE                     u311:
   773  0009FE  EFFA  F004         	goto	l125
   774  000A02                     u310:
   775  000A02                     l128:
   776  000A02  B4C7               	btfsc	199,2,c	;volatile
   777  000A04  EF06  F005         	goto	u321
   778  000A08  EF08  F005         	goto	u320
   779  000A0C                     u321:
   780  000A0C  EF01  F005         	goto	l128
   781  000A10                     u320:
   782  000A10                     
   783                           ;maincode.c: 88:     SSPBUF = direccion;
   784  000A10  C001  FFC9         	movff	m24c01_read@direccion,4041	;volatile
   785  000A14                     l131:
   786  000A14  B0C7               	btfsc	199,0,c	;volatile
   787  000A16  EF0F  F005         	goto	u331
   788  000A1A  EF11  F005         	goto	u330
   789  000A1E                     u331:
   790  000A1E  EF0A  F005         	goto	l131
   791  000A22                     u330:
   792  000A22                     l134:
   793  000A22  B4C7               	btfsc	199,2,c	;volatile
   794  000A24  EF16  F005         	goto	u341
   795  000A28  EF18  F005         	goto	u340
   796  000A2C                     u341:
   797  000A2C  EF11  F005         	goto	l134
   798  000A30                     u340:
   799  000A30                     
   800                           ;maincode.c: 91:     SSPCON2bits.RSEN = 1;
   801  000A30  82C5               	bsf	197,1,c	;volatile
   802  000A32                     l137:
   803  000A32  B2C5               	btfsc	197,1,c	;volatile
   804  000A34  EF1E  F005         	goto	u351
   805  000A38  EF20  F005         	goto	u350
   806  000A3C                     u351:
   807  000A3C  EF19  F005         	goto	l137
   808  000A40                     u350:
   809  000A40                     
   810                           ;maincode.c: 93:     SSPBUF = 0xA1;
   811  000A40  0EA1               	movlw	161
   812  000A42  6EC9               	movwf	201,c	;volatile
   813  000A44                     l140:
   814  000A44  B0C7               	btfsc	199,0,c	;volatile
   815  000A46  EF27  F005         	goto	u361
   816  000A4A  EF29  F005         	goto	u360
   817  000A4E                     u361:
   818  000A4E  EF22  F005         	goto	l140
   819  000A52                     u360:
   820  000A52                     l143:
   821  000A52  B4C7               	btfsc	199,2,c	;volatile
   822  000A54  EF2E  F005         	goto	u371
   823  000A58  EF30  F005         	goto	u370
   824  000A5C                     u371:
   825  000A5C  EF29  F005         	goto	l143
   826  000A60                     u370:
   827  000A60                     
   828                           ;maincode.c: 96:     SSPCON2bits.RCEN = 1;
   829  000A60  86C5               	bsf	197,3,c	;volatile
   830  000A62                     l146:
   831  000A62  B6C5               	btfsc	197,3,c	;volatile
   832  000A64  EF36  F005         	goto	u381
   833  000A68  EF38  F005         	goto	u380
   834  000A6C                     u381:
   835  000A6C  EF31  F005         	goto	l146
   836  000A70                     u380:
   837  000A70                     l149:
   838  000A70  A0C7               	btfss	199,0,c	;volatile
   839  000A72  EF3D  F005         	goto	u391
   840  000A76  EF3F  F005         	goto	u390
   841  000A7A                     u391:
   842  000A7A  EF38  F005         	goto	l149
   843  000A7E                     u390:
   844  000A7E                     
   845                           ;maincode.c: 99:     leido = SSPBUF;
   846  000A7E  CFC9 F002          	movff	4041,m24c01_read@leido	;volatile
   847                           
   848                           ;maincode.c: 100:     SSPCON2bits.ACKDT = 1;
   849  000A82  8AC5               	bsf	197,5,c	;volatile
   850                           
   851                           ;maincode.c: 101:     SSPCON2bits.ACKEN = 1;
   852  000A84  88C5               	bsf	197,4,c	;volatile
   853  000A86                     l152:
   854  000A86  B8C5               	btfsc	197,4,c	;volatile
   855  000A88  EF48  F005         	goto	u401
   856  000A8C  EF4A  F005         	goto	u400
   857  000A90                     u401:
   858  000A90  EF43  F005         	goto	l152
   859  000A94                     u400:
   860  000A94                     
   861                           ;maincode.c: 103:     SSPCON2bits.PEN = 1;
   862  000A94  84C5               	bsf	197,2,c	;volatile
   863  000A96                     l155:
   864  000A96  B4C5               	btfsc	197,2,c	;volatile
   865  000A98  EF50  F005         	goto	u411
   866  000A9C  EF52  F005         	goto	u410
   867  000AA0                     u411:
   868  000AA0  EF4B  F005         	goto	l155
   869  000AA4                     u410:
   870  000AA4                     
   871                           ;maincode.c: 105:     return(leido);
   872  000AA4  5002               	movf	m24c01_read@leido^0,w,c
   873  000AA6  0012               	return		;funcret
   874  000AA8                     __end_of_m24c01_read:
   875                           	callstack 0
   876                           
   877 ;; *************** function _lcd_init *****************
   878 ;; Defined at:
   879 ;;		line 18 in file "maincode.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2, status,0, cstack
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   893 ;;      Params:         0       0       0       0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0       0       0
   895 ;;      Temps:          1       0       0       0       0       0       0       0       0
   896 ;;      Totals:         1       0       0       0       0       0       0       0       0
   897 ;;Total ram usage:        1 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    3
   900 ;; This function calls:
   901 ;;		_BORRAR_LCD
   902 ;;		_CURSOR_HOME
   903 ;;		_CURSOR_ONOFF
   904 ;;		_LCD_CONFIG
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text4
   911  000D40                     __ptext4:
   912                           	callstack 0
   913  000D40                     _lcd_init:
   914                           	callstack 27
   915  000D40                     
   916                           ;maincode.c: 19:     TRISD = 0x00;
   917  000D40  0E00               	movlw	0
   918  000D42  6E95               	movwf	149,c	;volatile
   919  000D44                     
   920                           ;maincode.c: 20:     LCD_CONFIG();
   921  000D44  ECE8  F005         	call	_LCD_CONFIG	;wreg free
   922  000D48                     
   923                           ;maincode.c: 21:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   924  000D48  0EEA               	movlw	234
   925  000D4A  6E05               	movwf	??_lcd_init^0,c
   926  000D4C  0EC3               	movlw	195
   927  000D4E                     u607:
   928  000D4E  2EE8               	decfsz	wreg,f,c
   929  000D50  D7FE               	bra	u607
   930  000D52  2E05               	decfsz	??_lcd_init^0,f,c
   931  000D54  D7FC               	bra	u607
   932  000D56  F000               	nop	
   933  000D58                     
   934                           ;maincode.c: 22:     BORRAR_LCD();
   935  000D58  ECD6  F006         	call	_BORRAR_LCD	;wreg free
   936  000D5C                     
   937                           ;maincode.c: 23:     CURSOR_HOME();
   938  000D5C  ECD2  F006         	call	_CURSOR_HOME	;wreg free
   939  000D60                     
   940                           ;maincode.c: 24:     CURSOR_ONOFF(1);
   941  000D60  0E01               	movlw	1
   942  000D62  EC88  F006         	call	_CURSOR_ONOFF
   943  000D66  0012               	return		;funcret
   944  000D68                     __end_of_lcd_init:
   945                           	callstack 0
   946                           
   947 ;; *************** function _LCD_CONFIG *****************
   948 ;; Defined at:
   949 ;;		line 72 in file "LCD.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          1       0       0       0       0       0       0       0       0
   966 ;;      Totals:         1       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        1 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    2
   970 ;; This function calls:
   971 ;;		_ENVIA_LCD_CMD
   972 ;;		_ENVIA_NIBBLE
   973 ;; This function is called by:
   974 ;;		_lcd_init
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text5
   979  000BD0                     __ptext5:
   980                           	callstack 0
   981  000BD0                     _LCD_CONFIG:
   982                           	callstack 27
   983  000BD0                     
   984                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   985  000BD0  908C               	bcf	140,0,c	;volatile
   986                           
   987                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   988  000BD2  928C               	bcf	140,1,c	;volatile
   989  000BD4                     
   990                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   991  000BD4  0E30               	movlw	48
   992  000BD6  ECB4  F006         	call	_ENVIA_NIBBLE
   993  000BDA                     
   994                           ;LCD.c: 77:         _delay(24000);
   995  000BDA  0E20               	movlw	32
   996  000BDC  6E04               	movwf	??_LCD_CONFIG^0,c
   997  000BDE  0E2A               	movlw	42
   998  000BE0                     u617:
   999  000BE0  2EE8               	decfsz	wreg,f,c
  1000  000BE2  D7FE               	bra	u617
  1001  000BE4  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1002  000BE6  D7FC               	bra	u617
  1003  000BE8                     
  1004                           ;LCD.c: 78:         _delay(24000);
  1005  000BE8  0E20               	movlw	32
  1006  000BEA  6E04               	movwf	??_LCD_CONFIG^0,c
  1007  000BEC  0E2A               	movlw	42
  1008  000BEE                     u627:
  1009  000BEE  2EE8               	decfsz	wreg,f,c
  1010  000BF0  D7FE               	bra	u627
  1011  000BF2  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1012  000BF4  D7FC               	bra	u627
  1013                           
  1014                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1015  000BF6  0E30               	movlw	48
  1016  000BF8  ECB4  F006         	call	_ENVIA_NIBBLE
  1017  000BFC                     
  1018                           ;LCD.c: 83:  _delay(1200);
  1019  000BFC  0EF0               	movlw	240
  1020  000BFE                     u637:
  1021  000BFE  D000               	nop2	
  1022  000C00  2EE8               	decfsz	wreg,f,c
  1023  000C02  D7FD               	bra	u637
  1024  000C04                     
  1025                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1026  000C04  0E30               	movlw	48
  1027  000C06  ECB4  F006         	call	_ENVIA_NIBBLE
  1028  000C0A                     
  1029                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1030  000C0A  0E20               	movlw	32
  1031  000C0C  ECB4  F006         	call	_ENVIA_NIBBLE
  1032  000C10                     
  1033                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1034  000C10  0E01               	movlw	1
  1035  000C12  EC54  F006         	call	_ENVIA_LCD_CMD
  1036  000C16                     
  1037                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1038  000C16  0E28               	movlw	40
  1039  000C18  EC54  F006         	call	_ENVIA_LCD_CMD
  1040  000C1C                     
  1041                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1042  000C1C  0E0F               	movlw	15
  1043  000C1E  EC54  F006         	call	_ENVIA_LCD_CMD
  1044  000C22                     
  1045                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1046  000C22  0E06               	movlw	6
  1047  000C24  EC54  F006         	call	_ENVIA_LCD_CMD
  1048  000C28                     
  1049                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1050  000C28  0E01               	movlw	1
  1051  000C2A  EC54  F006         	call	_ENVIA_LCD_CMD
  1052  000C2E  0012               	return		;funcret
  1053  000C30                     __end_of_LCD_CONFIG:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _CURSOR_ONOFF *****************
  1057 ;; Defined at:
  1058 ;;		line 35 in file "LCD.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  estado          1    wreg     unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  estado          1    3[COMRAM] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        1 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    2
  1079 ;; This function calls:
  1080 ;;		_ENVIA_LCD_CMD
  1081 ;; This function is called by:
  1082 ;;		_lcd_init
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text6
  1087  000D10                     __ptext6:
  1088                           	callstack 0
  1089  000D10                     _CURSOR_ONOFF:
  1090                           	callstack 27
  1091                           
  1092                           ;incstack = 0
  1093                           ;CURSOR_ONOFF@estado stored from wreg
  1094  000D10  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1095  000D12                     
  1096                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1097  000D12  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1098  000D14  A4D8               	btfss	status,2,c
  1099  000D16  EF8F  F006         	goto	u21
  1100  000D1A  EF91  F006         	goto	u20
  1101  000D1E                     u21:
  1102  000D1E  EF94  F006         	goto	l1022
  1103  000D22                     u20:
  1104  000D22  0E0E               	movlw	14
  1105  000D24  EC54  F006         	call	_ENVIA_LCD_CMD
  1106  000D28                     l1022:
  1107                           
  1108                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1109  000D28  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1110  000D2A  A4D8               	btfss	status,2,c
  1111  000D2C  EF9A  F006         	goto	u31
  1112  000D30  EF9C  F006         	goto	u30
  1113  000D34                     u31:
  1114  000D34  EF9F  F006         	goto	l214
  1115  000D38                     u30:
  1116  000D38  0E0C               	movlw	12
  1117  000D3A  EC54  F006         	call	_ENVIA_LCD_CMD
  1118  000D3E                     l214:
  1119  000D3E  0012               	return		;funcret
  1120  000D40                     __end_of_CURSOR_ONOFF:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _CURSOR_HOME *****************
  1124 ;; Defined at:
  1125 ;;		line 30 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		_ENVIA_LCD_CMD
  1148 ;; This function is called by:
  1149 ;;		_lcd_init
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text7
  1154  000DA4                     __ptext7:
  1155                           	callstack 0
  1156  000DA4                     _CURSOR_HOME:
  1157                           	callstack 27
  1158  000DA4                     
  1159                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1160  000DA4  0E02               	movlw	2
  1161  000DA6  EC54  F006         	call	_ENVIA_LCD_CMD
  1162  000DAA  0012               	return		;funcret
  1163  000DAC                     __end_of_CURSOR_HOME:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _BORRAR_LCD *****************
  1167 ;; Defined at:
  1168 ;;		line 67 in file "LCD.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		_ENVIA_LCD_CMD
  1191 ;; This function is called by:
  1192 ;;		_lcd_init
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text8
  1197  000DAC                     __ptext8:
  1198                           	callstack 0
  1199  000DAC                     _BORRAR_LCD:
  1200                           	callstack 27
  1201  000DAC                     
  1202                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1203  000DAC  0E01               	movlw	1
  1204  000DAE  EC54  F006         	call	_ENVIA_LCD_CMD
  1205  000DB2  0012               	return		;funcret
  1206  000DB4                     __end_of_BORRAR_LCD:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _POS_CURSOR *****************
  1210 ;; Defined at:
  1211 ;;		line 6 in file "LCD.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  fila            1    wreg     unsigned char 
  1214 ;;  columna         1    3[COMRAM] unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  fila            1    4[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         1       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    2
  1233 ;; This function calls:
  1234 ;;		_ENVIA_LCD_CMD
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	text9
  1241  000C6E                     __ptext9:
  1242                           	callstack 0
  1243  000C6E                     _POS_CURSOR:
  1244                           	callstack 28
  1245                           
  1246                           ;incstack = 0
  1247                           ;POS_CURSOR@fila stored from wreg
  1248  000C6E  6E05               	movwf	POS_CURSOR@fila^0,c
  1249  000C70                     
  1250                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1251  000C70  0405               	decf	POS_CURSOR@fila^0,w,c
  1252  000C72  A4D8               	btfss	status,2,c
  1253  000C74  EF3E  F006         	goto	u531
  1254  000C78  EF40  F006         	goto	u530
  1255  000C7C                     u531:
  1256  000C7C  EF46  F006         	goto	l1188
  1257  000C80                     u530:
  1258  000C80                     
  1259                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1260  000C80  5004               	movf	POS_CURSOR@columna^0,w,c
  1261  000C82  0F80               	addlw	128
  1262  000C84  EC54  F006         	call	_ENVIA_LCD_CMD
  1263                           
  1264                           ;LCD.c: 11:  }
  1265  000C88  EF53  F006         	goto	l196
  1266  000C8C                     l1188:
  1267  000C8C  0E02               	movlw	2
  1268  000C8E  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1269  000C90  A4D8               	btfss	status,2,c
  1270  000C92  EF4D  F006         	goto	u541
  1271  000C96  EF4F  F006         	goto	u540
  1272  000C9A                     u541:
  1273  000C9A  EF53  F006         	goto	l196
  1274  000C9E                     u540:
  1275  000C9E                     
  1276                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1277  000C9E  5004               	movf	POS_CURSOR@columna^0,w,c
  1278  000CA0  0FC0               	addlw	192
  1279  000CA2  EC54  F006         	call	_ENVIA_LCD_CMD
  1280  000CA6                     l196:
  1281  000CA6  0012               	return		;funcret
  1282  000CA8                     __end_of_POS_CURSOR:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _ENVIA_LCD_CMD *****************
  1286 ;; Defined at:
  1287 ;;		line 104 in file "LCD.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  dato            1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  dato            1    1[COMRAM] unsigned char 
  1292 ;;  aux             1    2[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0
  1303 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1305 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1306 ;;Total ram usage:        2 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    1
  1309 ;; This function calls:
  1310 ;;		_ENVIA_NIBBLE
  1311 ;;		_LEER_LCD
  1312 ;; This function is called by:
  1313 ;;		_POS_CURSOR
  1314 ;;		_CURSOR_HOME
  1315 ;;		_CURSOR_ONOFF
  1316 ;;		_BORRAR_LCD
  1317 ;;		_LCD_CONFIG
  1318 ;;		_BLINK_CURSOR
  1319 ;;		_DISPLAY_ONOFF
  1320 ;;		_GENERACARACTER
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text10
  1325  000CA8                     __ptext10:
  1326                           	callstack 0
  1327  000CA8                     _ENVIA_LCD_CMD:
  1328                           	callstack 27
  1329                           
  1330                           ;incstack = 0
  1331                           ;ENVIA_LCD_CMD@dato stored from wreg
  1332  000CA8  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1333  000CAA                     
  1334                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1335  000CAA  908C               	bcf	140,0,c	;volatile
  1336  000CAC                     
  1337                           ;LCD.c: 108:  LEER_LCD();
  1338  000CAC  ECAF  F005         	call	_LEER_LCD	;wreg free
  1339  000CB0                     
  1340                           ;LCD.c: 109:  TRISD = 0b00000000;
  1341  000CB0  0E00               	movlw	0
  1342  000CB2  6E95               	movwf	149,c	;volatile
  1343  000CB4                     
  1344                           ;LCD.c: 111:         _delay(1200);
  1345  000CB4  0EF0               	movlw	240
  1346  000CB6                     u647:
  1347  000CB6  D000               	nop2	
  1348  000CB8  2EE8               	decfsz	wreg,f,c
  1349  000CBA  D7FD               	bra	u647
  1350  000CBC                     
  1351                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1352  000CBC  928C               	bcf	140,1,c	;volatile
  1353  000CBE                     
  1354                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1355  000CBE  948C               	bcf	140,2,c	;volatile
  1356  000CC0                     
  1357                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1358  000CC0  908C               	bcf	140,0,c	;volatile
  1359  000CC2                     
  1360                           ;LCD.c: 115:  aux = dato & 0xF0;
  1361  000CC2  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1362  000CC4  0BF0               	andlw	240
  1363  000CC6  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1364  000CC8                     
  1365                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1366  000CC8  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1367  000CCA  ECB4  F006         	call	_ENVIA_NIBBLE
  1368  000CCE                     
  1369                           ;LCD.c: 117:  aux = dato<<4;
  1370  000CCE  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1371  000CD0  0BF0               	andlw	240
  1372  000CD2  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1373  000CD4                     
  1374                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1375  000CD4  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1376  000CD6  ECB4  F006         	call	_ENVIA_NIBBLE
  1377  000CDA  0012               	return		;funcret
  1378  000CDC                     __end_of_ENVIA_LCD_CMD:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _ESCRIBE_MENSAJE *****************
  1382 ;; Defined at:
  1383 ;;		line 41 in file "LCD.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1386 ;;		 -> STR_3(11), STR_2(11), STR_1(19), 
  1387 ;;  tam             1    5[COMRAM] unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  i               1    8[COMRAM] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1399 ;;      Params:         3       0       0       0       0       0       0       0       0
  1400 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1401 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1402 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1403 ;;Total ram usage:        6 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    2
  1406 ;; This function calls:
  1407 ;;		_ENVIA_CHAR
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text11
  1414  000C30                     __ptext11:
  1415                           	callstack 0
  1416  000C30                     _ESCRIBE_MENSAJE:
  1417                           	callstack 28
  1418  000C30                     
  1419                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1420  000C30  0E00               	movlw	0
  1421  000C32  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1422                           
  1423                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1424  000C34  0E00               	movlw	0
  1425  000C36  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1426  000C38  EF2D  F006         	goto	l1198
  1427  000C3C                     l1194:
  1428                           
  1429                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1430  000C3C  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1431  000C3E  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1432  000C40  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1433  000C42  0E00               	movlw	0
  1434  000C44  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1435  000C46  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1436  000C48  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1437  000C4C  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1438  000C50                     	if	0	;tblptru may be non-zero
  1439  000C50                     	endif
  1440  000C50                     	if	0	;tblptru may be non-zero
  1441  000C50                     	endif
  1442  000C50  0008               	tblrd		*
  1443  000C52  50F5               	movf	tablat,w,c
  1444  000C54  EC6E  F006         	call	_ENVIA_CHAR
  1445  000C58                     
  1446                           ;LCD.c: 47:  }
  1447  000C58  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1448  000C5A                     l1198:
  1449  000C5A  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1450  000C5C  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1451  000C5E  A0D8               	btfss	status,0,c
  1452  000C60  EF34  F006         	goto	u551
  1453  000C64  EF36  F006         	goto	u550
  1454  000C68                     u551:
  1455  000C68  EF1E  F006         	goto	l1194
  1456  000C6C                     u550:
  1457  000C6C  0012               	return		;funcret
  1458  000C6E                     __end_of_ESCRIBE_MENSAJE:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _ENVIA_CHAR *****************
  1462 ;; Defined at:
  1463 ;;		line 50 in file "LCD.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  dato            1    wreg     unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  dato            1    1[COMRAM] unsigned char 
  1468 ;;  aux             1    2[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0
  1479 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		_ENVIA_NIBBLE
  1487 ;;		_LEER_LCD
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;;		_ESCRIBE_MENSAJE
  1491 ;;		_GENERACARACTER
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           
  1495                           	psect	text12
  1496  000CDC                     __ptext12:
  1497                           	callstack 0
  1498  000CDC                     _ENVIA_CHAR:
  1499                           	callstack 28
  1500                           
  1501                           ;incstack = 0
  1502                           ;ENVIA_CHAR@dato stored from wreg
  1503  000CDC  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1504  000CDE                     
  1505                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1506  000CDE  808C               	bsf	140,0,c	;volatile
  1507  000CE0                     
  1508                           ;LCD.c: 54:  LEER_LCD();
  1509  000CE0  ECAF  F005         	call	_LEER_LCD	;wreg free
  1510  000CE4                     
  1511                           ;LCD.c: 55:  TRISD = 0x00;
  1512  000CE4  0E00               	movlw	0
  1513  000CE6  6E95               	movwf	149,c	;volatile
  1514  000CE8                     
  1515                           ;LCD.c: 56:         _delay(1200);
  1516  000CE8  0EF0               	movlw	240
  1517  000CEA                     u657:
  1518  000CEA  D000               	nop2	
  1519  000CEC  2EE8               	decfsz	wreg,f,c
  1520  000CEE  D7FD               	bra	u657
  1521  000CF0                     
  1522                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1523  000CF0  928C               	bcf	140,1,c	;volatile
  1524  000CF2                     
  1525                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1526  000CF2  948C               	bcf	140,2,c	;volatile
  1527  000CF4                     
  1528                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1529  000CF4  808C               	bsf	140,0,c	;volatile
  1530  000CF6                     
  1531                           ;LCD.c: 61:  aux = dato & 0xF0;
  1532  000CF6  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1533  000CF8  0BF0               	andlw	240
  1534  000CFA  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1535  000CFC                     
  1536                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1537  000CFC  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1538  000CFE  ECB4  F006         	call	_ENVIA_NIBBLE
  1539  000D02                     
  1540                           ;LCD.c: 63:  aux = dato << 4;
  1541  000D02  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1542  000D04  0BF0               	andlw	240
  1543  000D06  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1544  000D08                     
  1545                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1546  000D08  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1547  000D0A  ECB4  F006         	call	_ENVIA_NIBBLE
  1548  000D0E  0012               	return		;funcret
  1549  000D10                     __end_of_ENVIA_CHAR:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _LEER_LCD *****************
  1553 ;; Defined at:
  1554 ;;		line 121 in file "LCD.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  aux             1    0[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        1 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_ENVIA_CHAR
  1578 ;;		_ENVIA_LCD_CMD
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text13
  1583  000B5E                     __ptext13:
  1584                           	callstack 0
  1585  000B5E                     _LEER_LCD:
  1586                           	callstack 27
  1587  000B5E                     
  1588                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1589  000B5E  0EF8               	movlw	248
  1590  000B60  6E95               	movwf	149,c	;volatile
  1591  000B62                     
  1592                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1593  000B62  908C               	bcf	140,0,c	;volatile
  1594  000B64                     
  1595                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1596  000B64  828C               	bsf	140,1,c	;volatile
  1597  000B66                     
  1598                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1599  000B66  848C               	bsf	140,2,c	;volatile
  1600  000B68                     
  1601                           ;LCD.c: 128:         _delay(1200);
  1602  000B68  0EF0               	movlw	240
  1603  000B6A                     u667:
  1604  000B6A  D000               	nop2	
  1605  000B6C  2EE8               	decfsz	wreg,f,c
  1606  000B6E  D7FD               	bra	u667
  1607  000B70                     
  1608                           ;LCD.c: 130:  aux = PORTD;
  1609  000B70  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1610  000B74                     
  1611                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1612  000B74  948C               	bcf	140,2,c	;volatile
  1613  000B76                     
  1614                           ;LCD.c: 132:         _delay(1200);
  1615  000B76  0EF0               	movlw	240
  1616  000B78                     u677:
  1617  000B78  D000               	nop2	
  1618  000B7A  2EE8               	decfsz	wreg,f,c
  1619  000B7C  D7FD               	bra	u677
  1620  000B7E                     
  1621                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1622  000B7E  848C               	bsf	140,2,c	;volatile
  1623  000B80                     
  1624                           ;LCD.c: 135:         _delay(1200);
  1625  000B80  0EF0               	movlw	240
  1626  000B82                     u687:
  1627  000B82  D000               	nop2	
  1628  000B84  2EE8               	decfsz	wreg,f,c
  1629  000B86  D7FD               	bra	u687
  1630  000B88                     
  1631                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1632  000B88  948C               	bcf	140,2,c	;volatile
  1633  000B8A                     l944:
  1634                           
  1635                           ;LCD.c: 138:  aux = aux & 0x80;
  1636  000B8A  5001               	movf	LEER_LCD@aux^0,w,c
  1637  000B8C  0B80               	andlw	128
  1638  000B8E  6E01               	movwf	LEER_LCD@aux^0,c
  1639                           
  1640                           ;LCD.c: 139:  while(aux == 0x80)
  1641  000B90  EFDE  F005         	goto	l958
  1642  000B94                     l239:
  1643                           
  1644                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1645  000B94  848C               	bsf	140,2,c	;volatile
  1646  000B96                     
  1647                           ;LCD.c: 142:             _delay(1200);
  1648  000B96  0EF0               	movlw	240
  1649  000B98                     u697:
  1650  000B98  D000               	nop2	
  1651  000B9A  2EE8               	decfsz	wreg,f,c
  1652  000B9C  D7FD               	bra	u697
  1653  000B9E                     
  1654                           ;LCD.c: 143:             aux = PORTD;
  1655  000B9E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1656  000BA2                     
  1657                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1658  000BA2  948C               	bcf	140,2,c	;volatile
  1659                           
  1660                           ;LCD.c: 145:             _delay(1200);
  1661  000BA4  0EF0               	movlw	240
  1662  000BA6                     u707:
  1663  000BA6  D000               	nop2	
  1664  000BA8  2EE8               	decfsz	wreg,f,c
  1665  000BAA  D7FD               	bra	u707
  1666  000BAC                     
  1667                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1668  000BAC  848C               	bsf	140,2,c	;volatile
  1669                           
  1670                           ;LCD.c: 147:             _delay(1200);
  1671  000BAE  0EF0               	movlw	240
  1672  000BB0                     u717:
  1673  000BB0  D000               	nop2	
  1674  000BB2  2EE8               	decfsz	wreg,f,c
  1675  000BB4  D7FD               	bra	u717
  1676  000BB6                     
  1677                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1678  000BB6  948C               	bcf	140,2,c	;volatile
  1679  000BB8  EFC5  F005         	goto	l944
  1680  000BBC                     l958:
  1681                           
  1682                           ;LCD.c: 139:  while(aux == 0x80)
  1683  000BBC  0E80               	movlw	128
  1684  000BBE  1801               	xorwf	LEER_LCD@aux^0,w,c
  1685  000BC0  B4D8               	btfsc	status,2,c
  1686  000BC2  EFE5  F005         	goto	u11
  1687  000BC6  EFE7  F005         	goto	u10
  1688  000BCA                     u11:
  1689  000BCA  EFCA  F005         	goto	l239
  1690  000BCE                     u10:
  1691  000BCE  0012               	return		;funcret
  1692  000BD0                     __end_of_LEER_LCD:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _ENVIA_NIBBLE *****************
  1696 ;; Defined at:
  1697 ;;		line 93 in file "LCD.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  dato            1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  dato            1    0[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        1 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_ENVIA_CHAR
  1721 ;;		_LCD_CONFIG
  1722 ;;		_ENVIA_LCD_CMD
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text14
  1727  000D68                     __ptext14:
  1728                           	callstack 0
  1729  000D68                     _ENVIA_NIBBLE:
  1730                           	callstack 28
  1731                           
  1732                           ;incstack = 0
  1733                           ;ENVIA_NIBBLE@dato stored from wreg
  1734  000D68  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1735  000D6A                     
  1736                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1737  000D6A  0E0F               	movlw	15
  1738  000D6C  168C               	andwf	140,f,c	;volatile
  1739                           
  1740                           ;LCD.c: 96:  dato &= 0xF0;
  1741  000D6E  0EF0               	movlw	240
  1742  000D70  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1743                           
  1744                           ;LCD.c: 97:  LATD|= dato;
  1745  000D72  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1746  000D74  128C               	iorwf	140,f,c	;volatile
  1747  000D76                     
  1748                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1749  000D76  848C               	bsf	140,2,c	;volatile
  1750  000D78                     
  1751                           ;LCD.c: 100:         _delay(1200);
  1752  000D78  0EF0               	movlw	240
  1753  000D7A                     u727:
  1754  000D7A  D000               	nop2	
  1755  000D7C  2EE8               	decfsz	wreg,f,c
  1756  000D7E  D7FD               	bra	u727
  1757  000D80                     
  1758                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1759  000D80  948C               	bcf	140,2,c	;volatile
  1760  000D82  0012               	return		;funcret
  1761  000D84                     __end_of_ENVIA_NIBBLE:
  1762                           	callstack 0
  1763                           
  1764                           	psect	rparam
  1765  0000                     
  1766                           	psect	idloc
  1767                           
  1768                           ;Config register IDLOC0 @ 0x200000
  1769                           ;	unspecified, using default values
  1770  200000                     	org	2097152
  1771  200000  FF                 	db	255
  1772                           
  1773                           ;Config register IDLOC1 @ 0x200001
  1774                           ;	unspecified, using default values
  1775  200001                     	org	2097153
  1776  200001  FF                 	db	255
  1777                           
  1778                           ;Config register IDLOC2 @ 0x200002
  1779                           ;	unspecified, using default values
  1780  200002                     	org	2097154
  1781  200002  FF                 	db	255
  1782                           
  1783                           ;Config register IDLOC3 @ 0x200003
  1784                           ;	unspecified, using default values
  1785  200003                     	org	2097155
  1786  200003  FF                 	db	255
  1787                           
  1788                           ;Config register IDLOC4 @ 0x200004
  1789                           ;	unspecified, using default values
  1790  200004                     	org	2097156
  1791  200004  FF                 	db	255
  1792                           
  1793                           ;Config register IDLOC5 @ 0x200005
  1794                           ;	unspecified, using default values
  1795  200005                     	org	2097157
  1796  200005  FF                 	db	255
  1797                           
  1798                           ;Config register IDLOC6 @ 0x200006
  1799                           ;	unspecified, using default values
  1800  200006                     	org	2097158
  1801  200006  FF                 	db	255
  1802                           
  1803                           ;Config register IDLOC7 @ 0x200007
  1804                           ;	unspecified, using default values
  1805  200007                     	org	2097159
  1806  200007  FF                 	db	255
  1807                           
  1808                           	psect	config
  1809                           
  1810                           ;Config register CONFIG1L @ 0x300000
  1811                           ;	PLL Prescaler Selection bits
  1812                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1813                           ;	System Clock Postscaler Selection bits
  1814                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1815                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1816                           ;	USBDIV = 0x0, unprogrammed default
  1817  300000                     	org	3145728
  1818  300000  00                 	db	0
  1819                           
  1820                           ;Config register CONFIG1H @ 0x300001
  1821                           ;	Oscillator Selection bits
  1822                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1823                           ;	Fail-Safe Clock Monitor Enable bit
  1824                           ;	FCMEN = 0x0, unprogrammed default
  1825                           ;	Internal/External Oscillator Switchover bit
  1826                           ;	IESO = 0x0, unprogrammed default
  1827  300001                     	org	3145729
  1828  300001  02                 	db	2
  1829                           
  1830                           ;Config register CONFIG2L @ 0x300002
  1831                           ;	Power-up Timer Enable bit
  1832                           ;	PWRT = ON, PWRT enabled
  1833                           ;	Brown-out Reset Enable bits
  1834                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1835                           ;	Brown-out Reset Voltage bits
  1836                           ;	BORV = 0x3, unprogrammed default
  1837                           ;	USB Voltage Regulator Enable bit
  1838                           ;	VREGEN = 0x0, unprogrammed default
  1839  300002                     	org	3145730
  1840  300002  18                 	db	24
  1841                           
  1842                           ;Config register CONFIG2H @ 0x300003
  1843                           ;	Watchdog Timer Enable bit
  1844                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1845                           ;	Watchdog Timer Postscale Select bits
  1846                           ;	WDTPS = 0xF, unprogrammed default
  1847  300003                     	org	3145731
  1848  300003  1E                 	db	30
  1849                           
  1850                           ; Padding undefined space
  1851  300004                     	org	3145732
  1852  300004  FF                 	db	255
  1853                           
  1854                           ;Config register CONFIG3H @ 0x300005
  1855                           ;	CCP2 MUX bit
  1856                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1857                           ;	PORTB A/D Enable bit
  1858                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1859                           ;	Low-Power Timer 1 Oscillator Enable bit
  1860                           ;	LPT1OSC = 0x0, unprogrammed default
  1861                           ;	MCLR Pin Enable bit
  1862                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1863  300005                     	org	3145733
  1864  300005  81                 	db	129
  1865                           
  1866                           ;Config register CONFIG4L @ 0x300006
  1867                           ;	Stack Full/Underflow Reset Enable bit
  1868                           ;	STVREN = 0x1, unprogrammed default
  1869                           ;	Single-Supply ICSP Enable bit
  1870                           ;	LVP = OFF, Single-Supply ICSP disabled
  1871                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1872                           ;	ICPRT = 0x0, unprogrammed default
  1873                           ;	Extended Instruction Set Enable bit
  1874                           ;	XINST = 0x0, unprogrammed default
  1875                           ;	Background Debugger Enable bit
  1876                           ;	DEBUG = 0x1, unprogrammed default
  1877  300006                     	org	3145734
  1878  300006  81                 	db	129
  1879                           
  1880                           ; Padding undefined space
  1881  300007                     	org	3145735
  1882  300007  FF                 	db	255
  1883                           
  1884                           ;Config register CONFIG5L @ 0x300008
  1885                           ;	unspecified, using default values
  1886                           ;	Code Protection bit
  1887                           ;	CP0 = 0x1, unprogrammed default
  1888                           ;	Code Protection bit
  1889                           ;	CP1 = 0x1, unprogrammed default
  1890                           ;	Code Protection bit
  1891                           ;	CP2 = 0x1, unprogrammed default
  1892                           ;	Code Protection bit
  1893                           ;	CP3 = 0x1, unprogrammed default
  1894  300008                     	org	3145736
  1895  300008  0F                 	db	15
  1896                           
  1897                           ;Config register CONFIG5H @ 0x300009
  1898                           ;	unspecified, using default values
  1899                           ;	Boot Block Code Protection bit
  1900                           ;	CPB = 0x1, unprogrammed default
  1901                           ;	Data EEPROM Code Protection bit
  1902                           ;	CPD = 0x1, unprogrammed default
  1903  300009                     	org	3145737
  1904  300009  C0                 	db	192
  1905                           
  1906                           ;Config register CONFIG6L @ 0x30000A
  1907                           ;	unspecified, using default values
  1908                           ;	Write Protection bit
  1909                           ;	WRT0 = 0x1, unprogrammed default
  1910                           ;	Write Protection bit
  1911                           ;	WRT1 = 0x1, unprogrammed default
  1912                           ;	Write Protection bit
  1913                           ;	WRT2 = 0x1, unprogrammed default
  1914                           ;	Write Protection bit
  1915                           ;	WRT3 = 0x1, unprogrammed default
  1916  30000A                     	org	3145738
  1917  30000A  0F                 	db	15
  1918                           
  1919                           ;Config register CONFIG6H @ 0x30000B
  1920                           ;	unspecified, using default values
  1921                           ;	Configuration Register Write Protection bit
  1922                           ;	WRTC = 0x1, unprogrammed default
  1923                           ;	Boot Block Write Protection bit
  1924                           ;	WRTB = 0x1, unprogrammed default
  1925                           ;	Data EEPROM Write Protection bit
  1926                           ;	WRTD = 0x1, unprogrammed default
  1927  30000B                     	org	3145739
  1928  30000B  E0                 	db	224
  1929                           
  1930                           ;Config register CONFIG7L @ 0x30000C
  1931                           ;	unspecified, using default values
  1932                           ;	Table Read Protection bit
  1933                           ;	EBTR0 = 0x1, unprogrammed default
  1934                           ;	Table Read Protection bit
  1935                           ;	EBTR1 = 0x1, unprogrammed default
  1936                           ;	Table Read Protection bit
  1937                           ;	EBTR2 = 0x1, unprogrammed default
  1938                           ;	Table Read Protection bit
  1939                           ;	EBTR3 = 0x1, unprogrammed default
  1940  30000C                     	org	3145740
  1941  30000C  0F                 	db	15
  1942                           
  1943                           ;Config register CONFIG7H @ 0x30000D
  1944                           ;	unspecified, using default values
  1945                           ;	Boot Block Table Read Protection bit
  1946                           ;	EBTRB = 0x1, unprogrammed default
  1947  30000D                     	org	3145741
  1948  30000D  40                 	db	64
  1949                           tosu	equ	0xFFF
  1950                           tosh	equ	0xFFE
  1951                           tosl	equ	0xFFD
  1952                           stkptr	equ	0xFFC
  1953                           pclatu	equ	0xFFB
  1954                           pclath	equ	0xFFA
  1955                           pcl	equ	0xFF9
  1956                           tblptru	equ	0xFF8
  1957                           tblptrh	equ	0xFF7
  1958                           tblptrl	equ	0xFF6
  1959                           tablat	equ	0xFF5
  1960                           prodh	equ	0xFF4
  1961                           prodl	equ	0xFF3
  1962                           indf0	equ	0xFEF
  1963                           postinc0	equ	0xFEE
  1964                           postdec0	equ	0xFED
  1965                           preinc0	equ	0xFEC
  1966                           plusw0	equ	0xFEB
  1967                           fsr0h	equ	0xFEA
  1968                           fsr0l	equ	0xFE9
  1969                           wreg	equ	0xFE8
  1970                           indf1	equ	0xFE7
  1971                           postinc1	equ	0xFE6
  1972                           postdec1	equ	0xFE5
  1973                           preinc1	equ	0xFE4
  1974                           plusw1	equ	0xFE3
  1975                           fsr1h	equ	0xFE2
  1976                           fsr1l	equ	0xFE1
  1977                           bsr	equ	0xFE0
  1978                           indf2	equ	0xFDF
  1979                           postinc2	equ	0xFDE
  1980                           postdec2	equ	0xFDD
  1981                           preinc2	equ	0xFDC
  1982                           plusw2	equ	0xFDB
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1922
                                              9 COMRAM     1     1      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                           _lcd_init
                        _m24c01_read
                       _m24c01_write
                          _mssp_conf
 ---------------------------------------------------------------------------------
 (1) _mssp_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _m24c01_write                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _m24c01_read                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE
   _m24c01_read
   _m24c01_write
   _mssp_conf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       B       1       11.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 28 12:52:02 2020

             _SSPSTATbits 000FC7                        l41 082E                        l50 0860  
                      l35 0D66                        l44 0840                        l53 086E  
                      l62 08A0                        l38 0DA2                        l71 08CE  
                      l47 084E                        l80 0900                        l56 0880  
                      l65 08AE                        l74 08E0                        l83 090E  
                      l59 088E                        l92 0940                        l68 08C0  
                      l77 08EE                        l86 0920                        l95 094E  
                      l89 092E                        l98 0960                        u10 0BCE  
                      u11 0BCA                        u20 0D22                        u21 0D1E  
                      u30 0D38                        u31 0D34                        u40 083C  
                      u41 0838                        u50 084E                        u51 084A  
                      u60 085C                        u61 0858                        u70 086E  
                      u71 086A                        u80 087C                        u81 0878  
                      u90 088E                        u91 088A             ENVIA_CHAR@aux 0003  
                     l101 096E                       l110 09A0                       l104 0980  
                     l113 09AE                       l122 09E2                       l131 0A14  
                     l115 09BC                       l107 098E                       l220 0C6C  
                     l140 0A44                       l116 09BE                       l125 09F4  
                     l214 0D3E                       l134 0A22                       l223 0D0E  
                     l151 0A7E                       l143 0A52                       l119 09DC  
                     l232 0D82                       l152 0A86                       l136 0A30  
                     l128 0A02                       l241 0BCE                       l209 0DAA  
                     l145 0A60                       l137 0A32                       l226 0DB2  
                     l154 0A94                       l146 0A62                       l235 0CDA  
                     l155 0A96                       l164 0AFA                       l229 0C2E  
                     l157 0AA4                       l149 0A70                       l158 0AA6  
                     l239 0B94                       l196 0CA6                       l930 0B68  
                     l922 0B5E                       l940 0B80                       l932 0B70  
                     l924 0B62                       l950 0BA2                       l942 0B88  
                     l934 0B74                       l926 0B64                       l960 0D6A  
                     l952 0BAC                       l944 0B8A                       l936 0B76  
                     l928 0B66                       l962 0D76                       l954 0BB6  
                     l946 0B96                       l938 0B7E                       l970 0CAC  
                     l964 0D78                       l948 0B9E                       l980 0CC0  
                     l972 0CB0                       l966 0D80                       l958 0BBC  
                     l982 0CC2                       l974 0CB4                       l990 0BD0  
                     l984 0CC8                       l976 0CBC                       l968 0CAA  
                     l992 0BD4                       l986 0CCE                       l978 0CBE  
                     l994 0BDA                       l988 0CD4                       l996 0BE8  
                     l998 0BFC                       u100 089C                       u101 0898  
                     u110 08AE                       u111 08AA                       u200 093C  
                     u120 08BC                       u201 0938                       u121 08B8  
                     u210 094E                       u130 08CE                       u211 094A  
                     u131 08CA                       u300 09F0                       u220 095C  
                     u140 08DC                       u301 09EC                       u221 0958  
                     u141 08D8                       u310 0A02                       u230 096E  
                     u150 08EE                       u311 09FE                       u231 096A  
                     u151 08EA                       u400 0A94                       u320 0A10  
                     u240 097C                       u160 08FC                       u401 0A90  
                     u321 0A0C                       u241 0978                       u161 08F8  
                     u410 0AA4                       u330 0A22                       u250 098E  
                     u170 090E                       u411 0AA0                       u331 0A1E  
                     u251 098A                       u171 090A                       u340 0A30  
                     u260 099C                       u180 091C                       u341 0A2C  
                     u261 0998                       u181 0918                       u350 0A40  
                     u270 09AE                       u190 092E                       u351 0A3C  
                     u271 09AA                       u191 092A                       u360 0A52  
                     u280 09BC                       u361 0A4E                       u281 09B8  
                     u530 0C80                       u370 0A60                       u290 09CC  
                     u531 0C7C                       u371 0A5C                       u291 09C8  
                     u540 0C9E                       u380 0A70                       u541 0C9A  
                     u381 0A6C                       u550 0C6C                       u390 0A7E  
                     u551 0C68                       u607 0D4E                       u391 0A7A  
                     u560 0AD8                       u617 0BE0                       u561 0AD4  
                     u570 0B08                       u707 0BA6                       u627 0BEE  
                     u571 0B04                       u580 0B38                       u717 0BB0  
                     u637 0BFE                       u581 0B34                       u727 0D7A  
                     u647 0CB6                       u657 0CEA                       u667 0B6A  
                     u677 0B78                       u597 09D2                       u687 0B82  
                     u697 0B98               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001            ENVIA_CHAR@dato 0002  
                    l1000 0C04                      l1010 0C22                      l1002 0C0A  
                    l1020 0D22                      l1012 0C28                      l1004 0C10  
                    l1100 0A40                      l1030 0CE4                      l1014 0DAC  
                    l1022 0D28                      l1006 0C16                      l1040 0CF6  
                    l1032 0CE8                      l1016 0DA4                      l1024 0D38  
                    l1008 0C1C                      l1200 0AA8                      l1042 0CFC  
                    l1034 0CF0                      l1026 0CDE                      l1018 0D12  
                    l1050 0D44                      l1210 0AD8                      l1202 0AAC  
                    l1044 0D02                      l1036 0CF2                      l1028 0CE0  
                    l1052 0D48                      l1060 0D94                      l1212 0AE2  
                    l1204 0AB0                      l1046 0D08                      l1038 0CF4  
                    l1054 0D58                      l1070 087C                      l1062 0D9E  
                    l1230 0B3C                      l1214 0AF2                      l1206 0ABA  
                    l1056 0D5C                      l1048 0D40                      l1080 091C  
                    l1072 089C                      l1064 082C                      l1232 0B46  
                    l1224 0B16                      l1216 0B08                      l1208 0ACA  
                    l1058 0D60                      l1090 09CC                      l1082 093C  
                    l1074 08BC                      l1066 083C                      l1226 0B26  
                    l1218 0B12                      l1092 09E0                      l1084 095C  
                    l1076 08DC                      l1068 085C                      l1228 0B28  
                    l1190 0C9E                      l1094 09E0                      l1086 097C  
                    l1078 08FC                      l1192 0C30                      l1184 0C70  
                    l1096 09F0                      l1088 099C                      l1194 0C3C  
                    l1186 0C80                      l1098 0A10                      l1196 0C58  
                    l1188 0C8C                      l1198 0C5A     __size_of_m24c01_write 01B2  
                    STR_1 0801                      STR_2 081F                      STR_3 0814  
             _m24c01_read 09DE                      _LATD 000F8C                      _dato 000B  
                    _main 0AA8                      start 0000             ?_CURSOR_ONOFF 0001  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0BD0  
     __size_of_BORRAR_LCD 0008                     ?_main 0001              _m24c01_write 082C  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004                     main@x 000A  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 0D84              __end_of_main 0B5E           _ESCRIBE_MENSAJE 0C30  
                  ??_main 000A             __activetblptr 000001                    _SSPADD 000FC8  
                  _SSPBUF 000FC9          __end_of_lcd_init 0D68      __end_of_ENVIA_NIBBLE 0D84  
     __size_of_POS_CURSOR 003A              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0D86              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0C6E            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0DB4          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0D40  
      __end_of_LCD_CONFIG 0C30        __end_of_ENVIA_CHAR 0D10              ?_m24c01_read 0001  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001        __size_of_mssp_conf 0010  
            ??_POS_CURSOR 0005                 ?_lcd_init 0001     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
            __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0CDC                   __pcinit 0D84  
      __end_of_POS_CURSOR 0CA8                   __ramtop 0800                   __ptext0 0AA8  
                 __ptext1 0D94                   __ptext2 082C                   __ptext3 09DE  
                 __ptext4 0D40                   __ptext5 0BD0                   __ptext6 0D10  
                 __ptext7 0DA4                   __ptext8 0DAC                   __ptext9 0C6E  
              ??_lcd_init 0005              _ENVIA_NIBBLE 0D68      end_of_initialization 0D86  
       __end_of_mssp_conf 0DA4     __size_of_CURSOR_ONOFF 0030                 _PORTBbits 000F81  
    __size_of_m24c01_read 00CA      m24c01_read@direccion 0001         __size_of_LEER_LCD 0072  
            _CURSOR_ONOFF 0D10        CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004  
     start_initialization 0D84         ENVIA_LCD_CMD@dato 0002             ?_m24c01_write 0001  
             __pbssCOMRAM 000B       __end_of_CURSOR_HOME 0DAC         __size_of_lcd_init 0028  
          ??_m24c01_write 0001               __smallconst 0800                  _LEER_LCD 0B5E  
                _LATDbits 000F8C                 _mssp_conf 0D94          ESCRIBE_MENSAJE@i 0009  
          POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 003E               _CURSOR_HOME 0DA4  
  __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 0800                ?_mssp_conf 0001                  __ptext10 0CA8  
                __ptext11 0C30                  __ptext12 0CDC                  __ptext13 0B5E  
                __ptext14 0D68                _BORRAR_LCD 0DAC             ??_m24c01_read 0001  
                _lcd_init 0D40             __size_of_main 00B6                _LCD_CONFIG 0BD0  
    __end_of_m24c01_write 09DE                _ENVIA_CHAR 0CDC             _ENVIA_LCD_CMD 0CA8  
       ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004       __end_of_m24c01_read 0AA8  
             ??_mssp_conf 0001            ?_ENVIA_LCD_CMD 0001               _SSPCON1bits 000FC6  
             _SSPCON2bits 000FC5          m24c01_read@leido 0002               ?_BORRAR_LCD 0001  
           ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0C6E               ?_LCD_CONFIG 0001  
      ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
