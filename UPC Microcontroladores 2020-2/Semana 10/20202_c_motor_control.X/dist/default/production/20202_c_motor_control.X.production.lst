

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 25 18:02:22 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PORTD	set	3971
    69  0000                     _LATD	set	3980
    70  0000                     _LATDbits	set	3980
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _CCP1CON	set	4029
    74  0000                     _T2CON	set	4042
    75  0000                     _TRISCbits	set	3988
    76  0000                     _CCPR1L	set	4030
    77  0000                     _PR2	set	4043
    78  0000                     _ADCON0	set	4034
    79  0000                     _ADCON1	set	4033
    80  0000                     _ADCON2	set	4032
    81  0000                     _TRISD	set	3989
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  57                 	db	87	;'W'
    89  000802  65                 	db	101	;'e'
    90  000803  65                 	db	101	;'e'
    91  000804  6B                 	db	107	;'k'
    92  000805  65                 	db	101	;'e'
    93  000806  6E                 	db	110	;'n'
    94  000807  64                 	db	100	;'d'
    95  000808  20                 	db	32
    96  000809  77                 	db	119	;'w'
    97  00080A  61                 	db	97	;'a'
    98  00080B  72                 	db	114	;'r'
    99  00080C  72                 	db	114	;'r'
   100  00080D  69                 	db	105	;'i'
   101  00080E  6F                 	db	111	;'o'
   102  00080F  72                 	db	114	;'r'
   103  000810  00                 	db	0
   104  000811                     STR_2:
   105  000811  43                 	db	67	;'C'
   106  000812  43                 	db	67	;'C'
   107  000813  50                 	db	80	;'P'
   108  000814  52                 	db	82	;'R'
   109  000815  31                 	db	49	;'1'
   110  000816  4C                 	db	76	;'L'
   111  000817  3A                 	db	58	;':'
   112  000818  00                 	db	0
   113  000819  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  001382                     __pcinit:
   119                           	callstack 0
   120  001382                     start_initialization:
   121                           	callstack 0
   122  001382                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (12 bytes)
   126  001382  EE00  F028         	lfsr	0,__pbssCOMRAM
   127  001386  0E0C               	movlw	12
   128  001388                     clear_0:
   129  001388  6AEE               	clrf	postinc0,c
   130  00138A  06E8               	decf	wreg,f,c
   131  00138C  E1FD               	bnz	clear_0
   132  00138E                     end_of_initialization:
   133                           	callstack 0
   134  00138E                     __end_of__initialization:
   135                           	callstack 0
   136  00138E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   137  001390  6EF8               	movwf	tblptru,c
   138  001392  0E08               	movlw	high __Lsmallconst
   139  001394  6EF7               	movwf	tblptrh,c
   140  001396  0100               	movlb	0
   141  001398  EF7F  F007         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMRAM
   144  000028                     __pbssCOMRAM:
   145                           	callstack 0
   146  000028                     _calculo:
   147                           	callstack 0
   148  000028                     	ds	4
   149  00002C                     _unidad:
   150                           	callstack 0
   151  00002C                     	ds	2
   152  00002E                     _decena:
   153                           	callstack 0
   154  00002E                     	ds	2
   155  000030                     _centena:
   156                           	callstack 0
   157  000030                     	ds	2
   158  000032                     _millar:
   159                           	callstack 0
   160  000032                     	ds	2
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165  000001                     ?___lwmod:
   166                           	callstack 0
   167  000001                     ?___fltol:
   168                           	callstack 0
   169  000001                     ?___xxtofl:
   170                           	callstack 0
   171  000001                     ENVIA_NIBBLE@dato:
   172                           	callstack 0
   173  000001                     LEER_LCD@aux:
   174                           	callstack 0
   175  000001                     ___lwmod@dividend:
   176                           	callstack 0
   177  000001                     ___fltol@f1:
   178                           	callstack 0
   179  000001                     ___xxtofl@val:
   180                           	callstack 0
   181                           
   182                           ; 4 bytes @ 0x0
   183  000001                     	ds	1
   184  000002                     ENVIA_CHAR@dato:
   185                           	callstack 0
   186  000002                     ENVIA_LCD_CMD@dato:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ENVIA_CHAR@aux:
   192                           	callstack 0
   193  000003                     ENVIA_LCD_CMD@aux:
   194                           	callstack 0
   195  000003                     ___lwmod@divisor:
   196                           	callstack 0
   197                           
   198                           ; 2 bytes @ 0x2
   199  000003                     	ds	1
   200  000004                     ??_LCD_CONFIG:
   201  000004                     POS_CURSOR@columna:
   202                           	callstack 0
   203  000004                     CURSOR_ONOFF@estado:
   204                           	callstack 0
   205  000004                     ESCRIBE_MENSAJE@cadena:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x3
   209  000004                     	ds	1
   210  000005                     ??_lcd_init:
   211  000005                     ??___fltol:
   212  000005                     ??___xxtofl:
   213  000005                     POS_CURSOR@fila:
   214                           	callstack 0
   215  000005                     ___lwmod@counter:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x4
   219  000005                     	ds	1
   220  000006                     ?___lwdiv:
   221                           	callstack 0
   222  000006                     ESCRIBE_MENSAJE@tam:
   223                           	callstack 0
   224  000006                     ___lwdiv@dividend:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0x5
   228  000006                     	ds	1
   229  000007                     ??_ESCRIBE_MENSAJE:
   230                           
   231                           ; 1 bytes @ 0x6
   232  000007                     	ds	1
   233  000008                     ___lwdiv@divisor:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x7
   237  000008                     	ds	1
   238  000009                     ESCRIBE_MENSAJE@i:
   239                           	callstack 0
   240  000009                     ___fltol@sign1:
   241                           	callstack 0
   242  000009                     ___xxtofl@sign:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0x8
   246  000009                     	ds	1
   247  00000A                     ___fltol@exp1:
   248                           	callstack 0
   249  00000A                     ___xxtofl@exp:
   250                           	callstack 0
   251  00000A                     ___lwdiv@quotient:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x9
   255  00000A                     	ds	1
   256  00000B                     ___xxtofl@arg:
   257                           	callstack 0
   258                           
   259                           ; 4 bytes @ 0xA
   260  00000B                     	ds	1
   261  00000C                     ___lwdiv@counter:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0xB
   265  00000C                     	ds	1
   266  00000D                     convierte@numero:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0xC
   270  00000D                     	ds	2
   271  00000F                     ?___flmul:
   272                           	callstack 0
   273  00000F                     ___flmul@b:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0xE
   277  00000F                     	ds	4
   278  000013                     ___flmul@a:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x12
   282  000013                     	ds	4
   283  000017                     ??___flmul:
   284                           
   285                           ; 1 bytes @ 0x16
   286  000017                     	ds	4
   287  00001B                     ___flmul@sign:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x1A
   291  00001B                     	ds	1
   292  00001C                     ___flmul@grs:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x1B
   296  00001C                     	ds	4
   297  000020                     ___flmul@aexp:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x1F
   301  000020                     	ds	1
   302  000021                     ___flmul@bexp:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x20
   306  000021                     	ds	1
   307  000022                     ___flmul@prod:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x21
   311  000022                     	ds	4
   312  000026                     ___flmul@temp:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x25
   316  000026                     	ds	2
   317  000028                     
   318                           ; 1 bytes @ 0x27
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 52 in file "maincode.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels required when called:    4
   344 ;; This function calls:
   345 ;;		_ENVIA_CHAR
   346 ;;		_ESCRIBE_MENSAJE
   347 ;;		_POS_CURSOR
   348 ;;		___flmul
   349 ;;		___fltol
   350 ;;		___xxtofl
   351 ;;		_ad_config
   352 ;;		_ccp1pwm_config
   353 ;;		_convierte
   354 ;;		_lcd_init
   355 ;; This function is called by:
   356 ;;		Startup code after reset
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text0
   361  000EFE                     __ptext0:
   362                           	callstack 0
   363  000EFE                     _main:
   364                           	callstack 27
   365  000EFE                     
   366                           ;maincode.c: 53:     lcd_init();
   367  000EFE  EC9F  F009         	call	_lcd_init	;wreg free
   368  000F02                     
   369                           ;maincode.c: 54:     ad_config();
   370  000F02  ECD8  F009         	call	_ad_config	;wreg free
   371  000F06                     
   372                           ;maincode.c: 55:     ccp1pwm_config();
   373  000F06  ECCE  F009         	call	_ccp1pwm_config	;wreg free
   374                           
   375                           ;maincode.c: 56:     POS_CURSOR(1,0);
   376  000F0A  0E00               	movlw	0
   377  000F0C  6E04               	movwf	POS_CURSOR@columna^0,c
   378  000F0E  0E01               	movlw	1
   379  000F10  EC36  F009         	call	_POS_CURSOR
   380  000F14                     
   381                           ;maincode.c: 57:     ESCRIBE_MENSAJE("Weekend warrior",15);
   382  000F14  0E01               	movlw	low STR_1
   383  000F16  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   384  000F18  0E08               	movlw	high STR_1
   385  000F1A  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   386  000F1C  0E0F               	movlw	15
   387  000F1E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   388  000F20  EC17  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   389  000F24                     l1583:
   390                           
   391                           ;maincode.c: 59:         ADCON0bits.GODONE = 1;
   392  000F24  82C2               	bsf	194,1,c	;volatile
   393  000F26                     l66:
   394  000F26  B2C2               	btfsc	194,1,c	;volatile
   395  000F28  EF98  F007         	goto	u1001
   396  000F2C  EF9A  F007         	goto	u1000
   397  000F30                     u1001:
   398  000F30  EF93  F007         	goto	l66
   399  000F34                     u1000:
   400  000F34                     
   401                           ;maincode.c: 61:         POS_CURSOR(2,0);
   402  000F34  0E00               	movlw	0
   403  000F36  6E04               	movwf	POS_CURSOR@columna^0,c
   404  000F38  0E02               	movlw	2
   405  000F3A  EC36  F009         	call	_POS_CURSOR
   406  000F3E                     
   407                           ;maincode.c: 62:         ESCRIBE_MENSAJE("CCPR1L:", 7);
   408  000F3E  0E11               	movlw	low STR_2
   409  000F40  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   410  000F42  0E08               	movlw	high STR_2
   411  000F44  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   412  000F46  0E07               	movlw	7
   413  000F48  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   414  000F4A  EC17  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   415  000F4E                     
   416                           ;maincode.c: 63:         calculo = ADRESH * 0.61;
   417  000F4E  50C4               	movf	196,w,c	;volatile
   418  000F50  6E01               	movwf	___xxtofl@val^0,c
   419  000F52  6A02               	clrf	(___xxtofl@val+1)^0,c
   420  000F54  6A03               	clrf	(___xxtofl@val+2)^0,c
   421  000F56  6A04               	clrf	(___xxtofl@val+3)^0,c
   422  000F58  0E01               	movlw	1
   423  000F5A  EC22  F006         	call	___xxtofl
   424  000F5E  C001  F00F         	movff	?___xxtofl,___flmul@b
   425  000F62  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   426  000F66  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   427  000F6A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   428  000F6E  0EF6               	movlw	246
   429  000F70  6E13               	movwf	___flmul@a^0,c
   430  000F72  0E28               	movlw	40
   431  000F74  6E14               	movwf	(___flmul@a+1)^0,c
   432  000F76  0E1C               	movlw	28
   433  000F78  6E15               	movwf	(___flmul@a+2)^0,c
   434  000F7A  0E3F               	movlw	63
   435  000F7C  6E16               	movwf	(___flmul@a+3)^0,c
   436  000F7E  EC0D  F004         	call	___flmul	;wreg free
   437  000F82  C00F  F028         	movff	?___flmul,_calculo
   438  000F86  C010  F029         	movff	?___flmul+1,_calculo+1
   439  000F8A  C011  F02A         	movff	?___flmul+2,_calculo+2
   440  000F8E  C012  F02B         	movff	?___flmul+3,_calculo+3
   441  000F92                     
   442                           ;maincode.c: 64:         CCPR1L = calculo;
   443  000F92  C028  F001         	movff	_calculo,___fltol@f1
   444  000F96  C029  F002         	movff	_calculo+1,___fltol@f1+1
   445  000F9A  C02A  F003         	movff	_calculo+2,___fltol@f1+2
   446  000F9E  C02B  F004         	movff	_calculo+3,___fltol@f1+3
   447  000FA2  ECFC  F006         	call	___fltol	;wreg free
   448  000FA6  5001               	movf	?___fltol^0,w,c
   449  000FA8  6EBE               	movwf	190,c	;volatile
   450  000FAA                     
   451                           ;maincode.c: 65:         convierte(calculo);
   452  000FAA  C028  F001         	movff	_calculo,___fltol@f1
   453  000FAE  C029  F002         	movff	_calculo+1,___fltol@f1+1
   454  000FB2  C02A  F003         	movff	_calculo+2,___fltol@f1+2
   455  000FB6  C02B  F004         	movff	_calculo+3,___fltol@f1+3
   456  000FBA  ECFC  F006         	call	___fltol	;wreg free
   457  000FBE  C001  F00D         	movff	?___fltol,convierte@numero
   458  000FC2  C002  F00E         	movff	?___fltol+1,convierte@numero+1
   459  000FC6  ECF5  F007         	call	_convierte	;wreg free
   460  000FCA                     
   461                           ;maincode.c: 66:         ENVIA_CHAR(centena+0x30);
   462  000FCA  5030               	movf	_centena^0,w,c
   463  000FCC  0F30               	addlw	48
   464  000FCE  EC6D  F009         	call	_ENVIA_CHAR
   465  000FD2                     
   466                           ;maincode.c: 67:         ENVIA_CHAR(decena+0x30);
   467  000FD2  502E               	movf	_decena^0,w,c
   468  000FD4  0F30               	addlw	48
   469  000FD6  EC6D  F009         	call	_ENVIA_CHAR
   470  000FDA                     
   471                           ;maincode.c: 68:         ENVIA_CHAR(unidad+0x30);
   472  000FDA  502C               	movf	_unidad^0,w,c
   473  000FDC  0F30               	addlw	48
   474  000FDE  EC6D  F009         	call	_ENVIA_CHAR
   475  000FE2  EF92  F007         	goto	l1583
   476  000FE6  EF00  F000         	goto	start
   477  000FEA                     __end_of_main:
   478                           	callstack 0
   479                           
   480 ;; *************** function _lcd_init *****************
   481 ;; Defined at:
   482 ;;		line 29 in file "maincode.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   496 ;;      Params:         0       0       0       0       0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0
   498 ;;      Temps:          1       0       0       0       0       0       0       0       0
   499 ;;      Totals:         1       0       0       0       0       0       0       0       0
   500 ;;Total ram usage:        1 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_BORRAR_LCD
   505 ;;		_CURSOR_HOME
   506 ;;		_CURSOR_ONOFF
   507 ;;		_LCD_CONFIG
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text1
   514  00133E                     __ptext1:
   515                           	callstack 0
   516  00133E                     _lcd_init:
   517                           	callstack 27
   518  00133E                     
   519                           ;maincode.c: 30:     TRISD = 0x00;
   520  00133E  0E00               	movlw	0
   521  001340  6E95               	movwf	149,c	;volatile
   522  001342                     
   523                           ;maincode.c: 31:     LCD_CONFIG();
   524  001342  ECE7  F008         	call	_LCD_CONFIG	;wreg free
   525  001346                     
   526                           ;maincode.c: 32:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   527  001346  0EEA               	movlw	234
   528  001348  6E05               	movwf	??_lcd_init^0,c
   529  00134A  0EC3               	movlw	195
   530  00134C                     u1017:
   531  00134C  2EE8               	decfsz	wreg,f,c
   532  00134E  D7FE               	bra	u1017
   533  001350  2E05               	decfsz	??_lcd_init^0,f,c
   534  001352  D7FC               	bra	u1017
   535  001354  F000               	nop	
   536  001356                     
   537                           ;maincode.c: 33:     BORRAR_LCD();
   538  001356  ECE3  F009         	call	_BORRAR_LCD	;wreg free
   539  00135A                     
   540                           ;maincode.c: 34:     CURSOR_HOME();
   541  00135A  ECDF  F009         	call	_CURSOR_HOME	;wreg free
   542  00135E                     
   543                           ;maincode.c: 35:     CURSOR_ONOFF(1);
   544  00135E  0E01               	movlw	1
   545  001360  EC87  F009         	call	_CURSOR_ONOFF
   546  001364  0012               	return		;funcret
   547  001366                     __end_of_lcd_init:
   548                           	callstack 0
   549                           
   550 ;; *************** function _LCD_CONFIG *****************
   551 ;; Defined at:
   552 ;;		line 72 in file "LCD.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		wreg, status,2, status,0, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   566 ;;      Params:         0       0       0       0       0       0       0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0
   568 ;;      Temps:          1       0       0       0       0       0       0       0       0
   569 ;;      Totals:         1       0       0       0       0       0       0       0       0
   570 ;;Total ram usage:        1 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; Hardware stack levels required when called:    2
   573 ;; This function calls:
   574 ;;		_ENVIA_LCD_CMD
   575 ;;		_ENVIA_NIBBLE
   576 ;; This function is called by:
   577 ;;		_lcd_init
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text2
   582  0011CE                     __ptext2:
   583                           	callstack 0
   584  0011CE                     _LCD_CONFIG:
   585                           	callstack 27
   586  0011CE                     
   587                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   588  0011CE  908C               	bcf	140,0,c	;volatile
   589                           
   590                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   591  0011D0  928C               	bcf	140,1,c	;volatile
   592  0011D2                     
   593                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   594  0011D2  0E30               	movlw	48
   595  0011D4  ECB3  F009         	call	_ENVIA_NIBBLE
   596  0011D8                     
   597                           ;LCD.c: 77:         _delay(24000);
   598  0011D8  0E20               	movlw	32
   599  0011DA  6E04               	movwf	??_LCD_CONFIG^0,c
   600  0011DC  0E2A               	movlw	42
   601  0011DE                     u1027:
   602  0011DE  2EE8               	decfsz	wreg,f,c
   603  0011E0  D7FE               	bra	u1027
   604  0011E2  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   605  0011E4  D7FC               	bra	u1027
   606  0011E6                     
   607                           ;LCD.c: 78:         _delay(24000);
   608  0011E6  0E20               	movlw	32
   609  0011E8  6E04               	movwf	??_LCD_CONFIG^0,c
   610  0011EA  0E2A               	movlw	42
   611  0011EC                     u1037:
   612  0011EC  2EE8               	decfsz	wreg,f,c
   613  0011EE  D7FE               	bra	u1037
   614  0011F0  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   615  0011F2  D7FC               	bra	u1037
   616                           
   617                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   618  0011F4  0E30               	movlw	48
   619  0011F6  ECB3  F009         	call	_ENVIA_NIBBLE
   620  0011FA                     
   621                           ;LCD.c: 83:  _delay(1200);
   622  0011FA  0EF0               	movlw	240
   623  0011FC                     u1047:
   624  0011FC  D000               	nop2	
   625  0011FE  2EE8               	decfsz	wreg,f,c
   626  001200  D7FD               	bra	u1047
   627  001202                     
   628                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   629  001202  0E30               	movlw	48
   630  001204  ECB3  F009         	call	_ENVIA_NIBBLE
   631  001208                     
   632                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   633  001208  0E20               	movlw	32
   634  00120A  ECB3  F009         	call	_ENVIA_NIBBLE
   635  00120E                     
   636                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   637  00120E  0E01               	movlw	1
   638  001210  EC53  F009         	call	_ENVIA_LCD_CMD
   639  001214                     
   640                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   641  001214  0E28               	movlw	40
   642  001216  EC53  F009         	call	_ENVIA_LCD_CMD
   643  00121A                     
   644                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   645  00121A  0E0F               	movlw	15
   646  00121C  EC53  F009         	call	_ENVIA_LCD_CMD
   647  001220                     
   648                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   649  001220  0E06               	movlw	6
   650  001222  EC53  F009         	call	_ENVIA_LCD_CMD
   651  001226                     
   652                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   653  001226  0E01               	movlw	1
   654  001228  EC53  F009         	call	_ENVIA_LCD_CMD
   655  00122C  0012               	return		;funcret
   656  00122E                     __end_of_LCD_CONFIG:
   657                           	callstack 0
   658                           
   659 ;; *************** function _CURSOR_ONOFF *****************
   660 ;; Defined at:
   661 ;;		line 35 in file "LCD.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  estado          1    wreg     unsigned char 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  estado          1    3[COMRAM] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   675 ;;      Params:         0       0       0       0       0       0       0       0       0
   676 ;;      Locals:         1       0       0       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0
   678 ;;      Totals:         1       0       0       0       0       0       0       0       0
   679 ;;Total ram usage:        1 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    2
   682 ;; This function calls:
   683 ;;		_ENVIA_LCD_CMD
   684 ;; This function is called by:
   685 ;;		_lcd_init
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text3
   690  00130E                     __ptext3:
   691                           	callstack 0
   692  00130E                     _CURSOR_ONOFF:
   693                           	callstack 27
   694                           
   695                           ;incstack = 0
   696                           ;CURSOR_ONOFF@estado stored from wreg
   697  00130E  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   698  001310                     
   699                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   700  001310  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   701  001312  A4D8               	btfss	status,2,c
   702  001314  EF8E  F009         	goto	u21
   703  001318  EF90  F009         	goto	u20
   704  00131C                     u21:
   705  00131C  EF93  F009         	goto	l921
   706  001320                     u20:
   707  001320  0E0E               	movlw	14
   708  001322  EC53  F009         	call	_ENVIA_LCD_CMD
   709  001326                     l921:
   710                           
   711                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   712  001326  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   713  001328  A4D8               	btfss	status,2,c
   714  00132A  EF99  F009         	goto	u31
   715  00132E  EF9B  F009         	goto	u30
   716  001332                     u31:
   717  001332  EF9E  F009         	goto	l113
   718  001336                     u30:
   719  001336  0E0C               	movlw	12
   720  001338  EC53  F009         	call	_ENVIA_LCD_CMD
   721  00133C                     l113:
   722  00133C  0012               	return		;funcret
   723  00133E                     __end_of_CURSOR_ONOFF:
   724                           	callstack 0
   725                           
   726 ;; *************** function _CURSOR_HOME *****************
   727 ;; Defined at:
   728 ;;		line 30 in file "LCD.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   742 ;;      Params:         0       0       0       0       0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    2
   749 ;; This function calls:
   750 ;;		_ENVIA_LCD_CMD
   751 ;; This function is called by:
   752 ;;		_lcd_init
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text4
   757  0013BE                     __ptext4:
   758                           	callstack 0
   759  0013BE                     _CURSOR_HOME:
   760                           	callstack 27
   761  0013BE                     
   762                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   763  0013BE  0E02               	movlw	2
   764  0013C0  EC53  F009         	call	_ENVIA_LCD_CMD
   765  0013C4  0012               	return		;funcret
   766  0013C6                     __end_of_CURSOR_HOME:
   767                           	callstack 0
   768                           
   769 ;; *************** function _BORRAR_LCD *****************
   770 ;; Defined at:
   771 ;;		line 67 in file "LCD.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   785 ;;      Params:         0       0       0       0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    2
   792 ;; This function calls:
   793 ;;		_ENVIA_LCD_CMD
   794 ;; This function is called by:
   795 ;;		_lcd_init
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text5
   800  0013C6                     __ptext5:
   801                           	callstack 0
   802  0013C6                     _BORRAR_LCD:
   803                           	callstack 27
   804  0013C6                     
   805                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   806  0013C6  0E01               	movlw	1
   807  0013C8  EC53  F009         	call	_ENVIA_LCD_CMD
   808  0013CC  0012               	return		;funcret
   809  0013CE                     __end_of_BORRAR_LCD:
   810                           	callstack 0
   811                           
   812 ;; *************** function _convierte *****************
   813 ;; Defined at:
   814 ;;		line 22 in file "maincode.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  numero          2   12[COMRAM] unsigned int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         2       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0
   831 ;;      Totals:         2       0       0       0       0       0       0       0       0
   832 ;;Total ram usage:        2 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    1
   835 ;; This function calls:
   836 ;;		___lwdiv
   837 ;;		___lwmod
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text6
   844  000FEA                     __ptext6:
   845                           	callstack 0
   846  000FEA                     _convierte:
   847                           	callstack 29
   848  000FEA                     
   849                           ;maincode.c: 23:     millar = numero /1000;
   850  000FEA  C00D  F006         	movff	convierte@numero,___lwdiv@dividend
   851  000FEE  C00E  F007         	movff	convierte@numero+1,___lwdiv@dividend+1
   852  000FF2  0E03               	movlw	3
   853  000FF4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   854  000FF6  0EE8               	movlw	232
   855  000FF8  6E08               	movwf	___lwdiv@divisor^0,c
   856  000FFA  EC42  F008         	call	___lwdiv	;wreg free
   857  000FFE  C006  F032         	movff	?___lwdiv,_millar
   858  001002  C007  F033         	movff	?___lwdiv+1,_millar+1
   859                           
   860                           ;maincode.c: 24:     centena = (numero % 1000) / 100;
   861  001006  0E03               	movlw	3
   862  001008  6E04               	movwf	(___lwmod@divisor+1)^0,c
   863  00100A  0EE8               	movlw	232
   864  00100C  6E03               	movwf	___lwmod@divisor^0,c
   865  00100E  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   866  001012  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   867  001016  ECB5  F008         	call	___lwmod	;wreg free
   868  00101A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   869  00101E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   870  001022  0E00               	movlw	0
   871  001024  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   872  001026  0E64               	movlw	100
   873  001028  6E08               	movwf	___lwdiv@divisor^0,c
   874  00102A  EC42  F008         	call	___lwdiv	;wreg free
   875  00102E  C006  F030         	movff	?___lwdiv,_centena
   876  001032  C007  F031         	movff	?___lwdiv+1,_centena+1
   877                           
   878                           ;maincode.c: 25:     decena = (numero % 100) / 10;
   879  001036  0E00               	movlw	0
   880  001038  6E04               	movwf	(___lwmod@divisor+1)^0,c
   881  00103A  0E64               	movlw	100
   882  00103C  6E03               	movwf	___lwmod@divisor^0,c
   883  00103E  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   884  001042  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   885  001046  ECB5  F008         	call	___lwmod	;wreg free
   886  00104A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   887  00104E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   888  001052  0E00               	movlw	0
   889  001054  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   890  001056  0E0A               	movlw	10
   891  001058  6E08               	movwf	___lwdiv@divisor^0,c
   892  00105A  EC42  F008         	call	___lwdiv	;wreg free
   893  00105E  C006  F02E         	movff	?___lwdiv,_decena
   894  001062  C007  F02F         	movff	?___lwdiv+1,_decena+1
   895                           
   896                           ;maincode.c: 26:     unidad = numero % 10;
   897  001066  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   898  00106A  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   899  00106E  0E00               	movlw	0
   900  001070  6E04               	movwf	(___lwmod@divisor+1)^0,c
   901  001072  0E0A               	movlw	10
   902  001074  6E03               	movwf	___lwmod@divisor^0,c
   903  001076  ECB5  F008         	call	___lwmod	;wreg free
   904  00107A  C001  F02C         	movff	?___lwmod,_unidad
   905  00107E  C002  F02D         	movff	?___lwmod+1,_unidad+1
   906  001082  0012               	return		;funcret
   907  001084                     __end_of_convierte:
   908                           	callstack 0
   909                           
   910 ;; *************** function ___lwmod *****************
   911 ;; Defined at:
   912 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  dividend        2    0[COMRAM] unsigned int 
   915 ;;  divisor         2    2[COMRAM] unsigned int 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  counter         1    4[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  2    0[COMRAM] unsigned int 
   920 ;; Registers used:
   921 ;;		wreg, status,2, status,0
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   927 ;;      Params:         4       0       0       0       0       0       0       0       0
   928 ;;      Locals:         1       0       0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0       0       0
   930 ;;      Totals:         5       0       0       0       0       0       0       0       0
   931 ;;Total ram usage:        5 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_convierte
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           	psect	text7
   941  00116A                     __ptext7:
   942                           	callstack 0
   943  00116A                     ___lwmod:
   944                           	callstack 29
   945  00116A  5003               	movf	___lwmod@divisor^0,w,c
   946  00116C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   947  00116E  B4D8               	btfsc	status,2,c
   948  001170  EFBC  F008         	goto	u581
   949  001174  EFBE  F008         	goto	u580
   950  001178                     u581:
   951  001178  EFE2  F008         	goto	l649
   952  00117C                     u580:
   953  00117C  0E01               	movlw	1
   954  00117E  6E05               	movwf	___lwmod@counter^0,c
   955  001180  EFC6  F008         	goto	l1327
   956  001184                     l1325:
   957  001184  90D8               	bcf	status,0,c
   958  001186  3603               	rlcf	___lwmod@divisor^0,f,c
   959  001188  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   960  00118A  2A05               	incf	___lwmod@counter^0,f,c
   961  00118C                     l1327:
   962  00118C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   963  00118E  EFCB  F008         	goto	u591
   964  001192  EFCD  F008         	goto	u590
   965  001196                     u591:
   966  001196  EFC2  F008         	goto	l1325
   967  00119A                     u590:
   968  00119A                     l1329:
   969  00119A  5003               	movf	___lwmod@divisor^0,w,c
   970  00119C  5C01               	subwf	___lwmod@dividend^0,w,c
   971  00119E  5004               	movf	(___lwmod@divisor+1)^0,w,c
   972  0011A0  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   973  0011A2  A0D8               	btfss	status,0,c
   974  0011A4  EFD6  F008         	goto	u601
   975  0011A8  EFD8  F008         	goto	u600
   976  0011AC                     u601:
   977  0011AC  EFDC  F008         	goto	l1333
   978  0011B0                     u600:
   979  0011B0  5003               	movf	___lwmod@divisor^0,w,c
   980  0011B2  5E01               	subwf	___lwmod@dividend^0,f,c
   981  0011B4  5004               	movf	(___lwmod@divisor+1)^0,w,c
   982  0011B6  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   983  0011B8                     l1333:
   984  0011B8  90D8               	bcf	status,0,c
   985  0011BA  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   986  0011BC  3203               	rrcf	___lwmod@divisor^0,f,c
   987  0011BE  2E05               	decfsz	___lwmod@counter^0,f,c
   988  0011C0  EFCD  F008         	goto	l1329
   989  0011C4                     l649:
   990  0011C4  C001  F001         	movff	___lwmod@dividend,?___lwmod
   991  0011C8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   992  0011CC  0012               	return		;funcret
   993  0011CE                     __end_of___lwmod:
   994                           	callstack 0
   995                           
   996 ;; *************** function ___lwdiv *****************
   997 ;; Defined at:
   998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  dividend        2    5[COMRAM] unsigned int 
  1001 ;;  divisor         2    7[COMRAM] unsigned int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  quotient        2    9[COMRAM] unsigned int 
  1004 ;;  counter         1   11[COMRAM] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    5[COMRAM] unsigned int 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1014 ;;      Params:         4       0       0       0       0       0       0       0       0
  1015 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1017 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1018 ;;Total ram usage:        7 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_convierte
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text8
  1028  001084                     __ptext8:
  1029                           	callstack 0
  1030  001084                     ___lwdiv:
  1031                           	callstack 29
  1032  001084  0E00               	movlw	0
  1033  001086  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1034  001088  0E00               	movlw	0
  1035  00108A  6E0A               	movwf	___lwdiv@quotient^0,c
  1036  00108C  5008               	movf	___lwdiv@divisor^0,w,c
  1037  00108E  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1038  001090  B4D8               	btfsc	status,2,c
  1039  001092  EF4D  F008         	goto	u551
  1040  001096  EF4F  F008         	goto	u550
  1041  00109A                     u551:
  1042  00109A  EF77  F008         	goto	l639
  1043  00109E                     u550:
  1044  00109E  0E01               	movlw	1
  1045  0010A0  6E0C               	movwf	___lwdiv@counter^0,c
  1046  0010A2  EF57  F008         	goto	l1307
  1047  0010A6                     l1305:
  1048  0010A6  90D8               	bcf	status,0,c
  1049  0010A8  3608               	rlcf	___lwdiv@divisor^0,f,c
  1050  0010AA  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1051  0010AC  2A0C               	incf	___lwdiv@counter^0,f,c
  1052  0010AE                     l1307:
  1053  0010AE  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1054  0010B0  EF5C  F008         	goto	u561
  1055  0010B4  EF5E  F008         	goto	u560
  1056  0010B8                     u561:
  1057  0010B8  EF53  F008         	goto	l1305
  1058  0010BC                     u560:
  1059  0010BC                     l1309:
  1060  0010BC  90D8               	bcf	status,0,c
  1061  0010BE  360A               	rlcf	___lwdiv@quotient^0,f,c
  1062  0010C0  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1063  0010C2  5008               	movf	___lwdiv@divisor^0,w,c
  1064  0010C4  5C06               	subwf	___lwdiv@dividend^0,w,c
  1065  0010C6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1066  0010C8  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1067  0010CA  A0D8               	btfss	status,0,c
  1068  0010CC  EF6A  F008         	goto	u571
  1069  0010D0  EF6C  F008         	goto	u570
  1070  0010D4                     u571:
  1071  0010D4  EF71  F008         	goto	l1317
  1072  0010D8                     u570:
  1073  0010D8  5008               	movf	___lwdiv@divisor^0,w,c
  1074  0010DA  5E06               	subwf	___lwdiv@dividend^0,f,c
  1075  0010DC  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1076  0010DE  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1077  0010E0  800A               	bsf	___lwdiv@quotient^0,0,c
  1078  0010E2                     l1317:
  1079  0010E2  90D8               	bcf	status,0,c
  1080  0010E4  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1081  0010E6  3208               	rrcf	___lwdiv@divisor^0,f,c
  1082  0010E8  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1083  0010EA  EF5E  F008         	goto	l1309
  1084  0010EE                     l639:
  1085  0010EE  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1086  0010F2  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1087  0010F6  0012               	return		;funcret
  1088  0010F8                     __end_of___lwdiv:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _ccp1pwm_config *****************
  1092 ;; Defined at:
  1093 ;;		line 44 in file "maincode.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text9
  1121  00139C                     __ptext9:
  1122                           	callstack 0
  1123  00139C                     _ccp1pwm_config:
  1124                           	callstack 30
  1125  00139C                     
  1126                           ;maincode.c: 45:     PR2 = 155;
  1127  00139C  0E9B               	movlw	155
  1128  00139E  6ECB               	movwf	203,c	;volatile
  1129                           
  1130                           ;maincode.c: 46:     CCPR1L = 78;
  1131  0013A0  0E4E               	movlw	78
  1132  0013A2  6EBE               	movwf	190,c	;volatile
  1133  0013A4                     
  1134                           ;maincode.c: 47:     TRISCbits.RC2 = 0;
  1135  0013A4  9494               	bcf	148,2,c	;volatile
  1136                           
  1137                           ;maincode.c: 48:     T2CON = 0x07;
  1138  0013A6  0E07               	movlw	7
  1139  0013A8  6ECA               	movwf	202,c	;volatile
  1140                           
  1141                           ;maincode.c: 49:     CCP1CON = 0x0C;
  1142  0013AA  0E0C               	movlw	12
  1143  0013AC  6EBD               	movwf	189,c	;volatile
  1144  0013AE  0012               	return		;funcret
  1145  0013B0                     __end_of_ccp1pwm_config:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _ad_config *****************
  1149 ;; Defined at:
  1150 ;;		line 38 in file "maincode.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text10
  1178  0013B0                     __ptext10:
  1179                           	callstack 0
  1180  0013B0                     _ad_config:
  1181                           	callstack 30
  1182  0013B0                     
  1183                           ;maincode.c: 39:     ADCON2 = 0x24;
  1184  0013B0  0E24               	movlw	36
  1185  0013B2  6EC0               	movwf	192,c	;volatile
  1186                           
  1187                           ;maincode.c: 40:     ADCON1 = 0x0E;
  1188  0013B4  0E0E               	movlw	14
  1189  0013B6  6EC1               	movwf	193,c	;volatile
  1190                           
  1191                           ;maincode.c: 41:     ADCON0 = 0x01;
  1192  0013B8  0E01               	movlw	1
  1193  0013BA  6EC2               	movwf	194,c	;volatile
  1194  0013BC  0012               	return		;funcret
  1195  0013BE                     __end_of_ad_config:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function ___xxtofl *****************
  1199 ;; Defined at:
  1200 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\xxtofl.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  sign            1    wreg     unsigned char 
  1203 ;;  val             4    0[COMRAM] long 
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;  sign            1    8[COMRAM] unsigned char 
  1206 ;;  arg             4   10[COMRAM] unsigned long 
  1207 ;;  exp             1    9[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  4    0[COMRAM] unsigned char 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         4       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1219 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1220 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1221 ;;Total ram usage:       14 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text11
  1231  000C44                     __ptext11:
  1232                           	callstack 0
  1233  000C44                     ___xxtofl:
  1234                           	callstack 30
  1235                           
  1236                           ;incstack = 0
  1237                           ;___xxtofl@sign stored from wreg
  1238  000C44  6E09               	movwf	___xxtofl@sign^0,c
  1239  000C46  5009               	movf	___xxtofl@sign^0,w,c
  1240  000C48  B4D8               	btfsc	status,2,c
  1241  000C4A  EF29  F006         	goto	u901
  1242  000C4E  EF2B  F006         	goto	u900
  1243  000C52                     u901:
  1244  000C52  EF4D  F006         	goto	l803
  1245  000C56                     u900:
  1246  000C56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1247  000C58  EF32  F006         	goto	u910
  1248  000C5C  EF30  F006         	goto	u911
  1249  000C60                     u911:
  1250  000C60  EF4D  F006         	goto	l803
  1251  000C64                     u910:
  1252  000C64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1253  000C68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1254  000C6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1255  000C70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1256  000C74  1E05               	comf	??___xxtofl^0,f,c
  1257  000C76  1E06               	comf	(??___xxtofl+1)^0,f,c
  1258  000C78  1E07               	comf	(??___xxtofl+2)^0,f,c
  1259  000C7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  1260  000C7C  2A05               	incf	??___xxtofl^0,f,c
  1261  000C7E  0E00               	movlw	0
  1262  000C80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1263  000C82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1264  000C84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1265  000C86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1266  000C8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1267  000C8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1268  000C92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1269  000C96  EF55  F006         	goto	l1535
  1270  000C9A                     l803:
  1271  000C9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1272  000C9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1273  000CA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1274  000CA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1275  000CAA                     l1535:
  1276  000CAA  5001               	movf	___xxtofl@val^0,w,c
  1277  000CAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1278  000CAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1279  000CB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1280  000CB2  A4D8               	btfss	status,2,c
  1281  000CB4  EF5E  F006         	goto	u921
  1282  000CB8  EF60  F006         	goto	u920
  1283  000CBC                     u921:
  1284  000CBC  EF6A  F006         	goto	l1541
  1285  000CC0                     u920:
  1286  000CC0  0E00               	movlw	0
  1287  000CC2  6E01               	movwf	?___xxtofl^0,c
  1288  000CC4  0E00               	movlw	0
  1289  000CC6  6E02               	movwf	(?___xxtofl+1)^0,c
  1290  000CC8  0E00               	movlw	0
  1291  000CCA  6E03               	movwf	(?___xxtofl+2)^0,c
  1292  000CCC  0E00               	movlw	0
  1293  000CCE  6E04               	movwf	(?___xxtofl+3)^0,c
  1294  000CD0  EFFB  F006         	goto	l806
  1295  000CD4                     l1541:
  1296  000CD4  0E96               	movlw	150
  1297  000CD6  6E0A               	movwf	___xxtofl@exp^0,c
  1298  000CD8  EF74  F006         	goto	l1545
  1299  000CDC                     l1543:
  1300  000CDC  2A0A               	incf	___xxtofl@exp^0,f,c
  1301  000CDE  90D8               	bcf	status,0,c
  1302  000CE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1303  000CE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1304  000CE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1305  000CE6  320B               	rrcf	___xxtofl@arg^0,f,c
  1306  000CE8                     l1545:
  1307  000CE8  0E00               	movlw	0
  1308  000CEA  140B               	andwf	___xxtofl@arg^0,w,c
  1309  000CEC  6E05               	movwf	??___xxtofl^0,c
  1310  000CEE  0E00               	movlw	0
  1311  000CF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1312  000CF2  6E06               	movwf	(??___xxtofl+1)^0,c
  1313  000CF4  0E00               	movlw	0
  1314  000CF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1315  000CF8  6E07               	movwf	(??___xxtofl+2)^0,c
  1316  000CFA  0EFE               	movlw	254
  1317  000CFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1318  000CFE  6E08               	movwf	(??___xxtofl+3)^0,c
  1319  000D00  5005               	movf	??___xxtofl^0,w,c
  1320  000D02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1321  000D04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1322  000D06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1323  000D08  A4D8               	btfss	status,2,c
  1324  000D0A  EF89  F006         	goto	u931
  1325  000D0E  EF8B  F006         	goto	u930
  1326  000D12                     u931:
  1327  000D12  EF6E  F006         	goto	l1543
  1328  000D16                     u930:
  1329  000D16  EF99  F006         	goto	l810
  1330  000D1A                     l1547:
  1331  000D1A  2A0A               	incf	___xxtofl@exp^0,f,c
  1332  000D1C  0E01               	movlw	1
  1333  000D1E  260B               	addwf	___xxtofl@arg^0,f,c
  1334  000D20  0E00               	movlw	0
  1335  000D22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1336  000D24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1337  000D26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1338  000D28  90D8               	bcf	status,0,c
  1339  000D2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1340  000D2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1341  000D2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1342  000D30  320B               	rrcf	___xxtofl@arg^0,f,c
  1343  000D32                     l810:
  1344  000D32  0E00               	movlw	0
  1345  000D34  140B               	andwf	___xxtofl@arg^0,w,c
  1346  000D36  6E05               	movwf	??___xxtofl^0,c
  1347  000D38  0E00               	movlw	0
  1348  000D3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1349  000D3C  6E06               	movwf	(??___xxtofl+1)^0,c
  1350  000D3E  0E00               	movlw	0
  1351  000D40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1352  000D42  6E07               	movwf	(??___xxtofl+2)^0,c
  1353  000D44  0EFF               	movlw	255
  1354  000D46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1355  000D48  6E08               	movwf	(??___xxtofl+3)^0,c
  1356  000D4A  5005               	movf	??___xxtofl^0,w,c
  1357  000D4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1358  000D4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1359  000D50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1360  000D52  A4D8               	btfss	status,2,c
  1361  000D54  EFAE  F006         	goto	u941
  1362  000D58  EFB0  F006         	goto	u940
  1363  000D5C                     u941:
  1364  000D5C  EF8D  F006         	goto	l1547
  1365  000D60                     u940:
  1366  000D60  EFB8  F006         	goto	l1555
  1367  000D64                     l1553:
  1368  000D64  060A               	decf	___xxtofl@exp^0,f,c
  1369  000D66  90D8               	bcf	status,0,c
  1370  000D68  360B               	rlcf	___xxtofl@arg^0,f,c
  1371  000D6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1372  000D6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1373  000D6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1374  000D70                     l1555:
  1375  000D70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1376  000D72  EFBD  F006         	goto	u951
  1377  000D76  EFBF  F006         	goto	u950
  1378  000D7A                     u951:
  1379  000D7A  EFC7  F006         	goto	l817
  1380  000D7E                     u950:
  1381  000D7E  0E02               	movlw	2
  1382  000D80  600A               	cpfslt	___xxtofl@exp^0,c
  1383  000D82  EFC5  F006         	goto	u961
  1384  000D86  EFC7  F006         	goto	u960
  1385  000D8A                     u961:
  1386  000D8A  EFB2  F006         	goto	l1553
  1387  000D8E                     u960:
  1388  000D8E                     l817:
  1389  000D8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  1390  000D90  EFCC  F006         	goto	u971
  1391  000D94  EFCE  F006         	goto	u970
  1392  000D98                     u971:
  1393  000D98  EFCF  F006         	goto	l1561
  1394  000D9C                     u970:
  1395  000D9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1396  000D9E                     l1561:
  1397  000D9E  90D8               	bcf	status,0,c
  1398  000DA0  320A               	rrcf	___xxtofl@exp^0,f,c
  1399  000DA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1400  000DA6  6A06               	clrf	(??___xxtofl+1)^0,c
  1401  000DA8  6A07               	clrf	(??___xxtofl+2)^0,c
  1402  000DAA  6A08               	clrf	(??___xxtofl+3)^0,c
  1403  000DAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1404  000DB0  6A07               	clrf	(??___xxtofl+2)^0,c
  1405  000DB2  6A06               	clrf	(??___xxtofl+1)^0,c
  1406  000DB4  6A05               	clrf	??___xxtofl^0,c
  1407  000DB6  5005               	movf	??___xxtofl^0,w,c
  1408  000DB8  120B               	iorwf	___xxtofl@arg^0,f,c
  1409  000DBA  5006               	movf	(??___xxtofl+1)^0,w,c
  1410  000DBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1411  000DBE  5007               	movf	(??___xxtofl+2)^0,w,c
  1412  000DC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1413  000DC2  5008               	movf	(??___xxtofl+3)^0,w,c
  1414  000DC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1415  000DC6  5009               	movf	___xxtofl@sign^0,w,c
  1416  000DC8  B4D8               	btfsc	status,2,c
  1417  000DCA  EFE9  F006         	goto	u981
  1418  000DCE  EFEB  F006         	goto	u980
  1419  000DD2                     u981:
  1420  000DD2  EFF3  F006         	goto	l1571
  1421  000DD6                     u980:
  1422  000DD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1423  000DD8  EFF2  F006         	goto	u990
  1424  000DDC  EFF0  F006         	goto	u991
  1425  000DE0                     u991:
  1426  000DE0  EFF3  F006         	goto	l1571
  1427  000DE4                     u990:
  1428  000DE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1429  000DE6                     l1571:
  1430  000DE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1431  000DEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1432  000DEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1433  000DF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1434  000DF6                     l806:
  1435  000DF6  0012               	return		;funcret
  1436  000DF8                     __end_of___xxtofl:
  1437                           	callstack 0
  1438                           
  1439 ;; *************** function ___fltol *****************
  1440 ;; Defined at:
  1441 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\fltol.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;  f1              4    0[COMRAM] unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  exp1            1    9[COMRAM] unsigned char 
  1446 ;;  sign1           1    8[COMRAM] unsigned char 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  4    0[COMRAM] long 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1456 ;;      Params:         4       0       0       0       0       0       0       0       0
  1457 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1458 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1459 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1460 ;;Total ram usage:       10 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text12
  1470  000DF8                     __ptext12:
  1471                           	callstack 0
  1472  000DF8                     ___fltol:
  1473                           	callstack 30
  1474  000DF8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1475  000DFA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1476  000DFC  6E0A               	movwf	___fltol@exp1^0,c
  1477  000DFE  500A               	movf	___fltol@exp1^0,w,c
  1478  000E00  A4D8               	btfss	status,2,c
  1479  000E02  EF05  F007         	goto	u831
  1480  000E06  EF07  F007         	goto	u830
  1481  000E0A                     u831:
  1482  000E0A  EF11  F007         	goto	l1491
  1483  000E0E                     u830:
  1484  000E0E                     l1487:
  1485  000E0E  0E00               	movlw	0
  1486  000E10  6E01               	movwf	?___fltol^0,c
  1487  000E12  0E00               	movlw	0
  1488  000E14  6E02               	movwf	(?___fltol+1)^0,c
  1489  000E16  0E00               	movlw	0
  1490  000E18  6E03               	movwf	(?___fltol+2)^0,c
  1491  000E1A  0E00               	movlw	0
  1492  000E1C  6E04               	movwf	(?___fltol+3)^0,c
  1493  000E1E  EF7E  F007         	goto	l445
  1494  000E22                     l1491:
  1495  000E22  C001  F005         	movff	___fltol@f1,??___fltol
  1496  000E26  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1497  000E2A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1498  000E2E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1499  000E32  0E20               	movlw	32
  1500  000E34  EF21  F007         	goto	u840
  1501  000E38                     u845:
  1502  000E38  90D8               	bcf	status,0,c
  1503  000E3A  3208               	rrcf	(??___fltol+3)^0,f,c
  1504  000E3C  3207               	rrcf	(??___fltol+2)^0,f,c
  1505  000E3E  3206               	rrcf	(??___fltol+1)^0,f,c
  1506  000E40  3205               	rrcf	??___fltol^0,f,c
  1507  000E42                     u840:
  1508  000E42  2EE8               	decfsz	wreg,f,c
  1509  000E44  EF1C  F007         	goto	u845
  1510  000E48  5005               	movf	??___fltol^0,w,c
  1511  000E4A  6E09               	movwf	___fltol@sign1^0,c
  1512  000E4C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1513  000E4E  0EFF               	movlw	255
  1514  000E50  1601               	andwf	___fltol@f1^0,f,c
  1515  000E52  0EFF               	movlw	255
  1516  000E54  1602               	andwf	(___fltol@f1+1)^0,f,c
  1517  000E56  0EFF               	movlw	255
  1518  000E58  1603               	andwf	(___fltol@f1+2)^0,f,c
  1519  000E5A  0E00               	movlw	0
  1520  000E5C  1604               	andwf	(___fltol@f1+3)^0,f,c
  1521  000E5E  0E96               	movlw	150
  1522  000E60  5E0A               	subwf	___fltol@exp1^0,f,c
  1523  000E62  BE0A               	btfsc	___fltol@exp1^0,7,c
  1524  000E64  EF38  F007         	goto	u850
  1525  000E68  EF36  F007         	goto	u851
  1526  000E6C                     u851:
  1527  000E6C  EF4E  F007         	goto	l1511
  1528  000E70                     u850:
  1529  000E70  500A               	movf	___fltol@exp1^0,w,c
  1530  000E72  0A80               	xorlw	128
  1531  000E74  0F97               	addlw	151
  1532  000E76  B0D8               	btfsc	status,0,c
  1533  000E78  EF40  F007         	goto	u861
  1534  000E7C  EF42  F007         	goto	u860
  1535  000E80                     u861:
  1536  000E80  EF44  F007         	goto	l1507
  1537  000E84                     u860:
  1538  000E84  EF07  F007         	goto	l1487
  1539  000E88                     l1507:
  1540  000E88  90D8               	bcf	status,0,c
  1541  000E8A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1542  000E8C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1543  000E8E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1544  000E90  3201               	rrcf	___fltol@f1^0,f,c
  1545  000E92  3E0A               	incfsz	___fltol@exp1^0,f,c
  1546  000E94  EF44  F007         	goto	l1507
  1547  000E98  EF66  F007         	goto	l1521
  1548  000E9C                     l1511:
  1549  000E9C  0E1F               	movlw	31
  1550  000E9E  640A               	cpfsgt	___fltol@exp1^0,c
  1551  000EA0  EF54  F007         	goto	u871
  1552  000EA4  EF56  F007         	goto	u870
  1553  000EA8                     u871:
  1554  000EA8  EF5E  F007         	goto	l1519
  1555  000EAC                     u870:
  1556  000EAC  EF07  F007         	goto	l1487
  1557  000EB0                     l1517:
  1558  000EB0  90D8               	bcf	status,0,c
  1559  000EB2  3601               	rlcf	___fltol@f1^0,f,c
  1560  000EB4  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1561  000EB6  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1562  000EB8  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1563  000EBA  060A               	decf	___fltol@exp1^0,f,c
  1564  000EBC                     l1519:
  1565  000EBC  500A               	movf	___fltol@exp1^0,w,c
  1566  000EBE  A4D8               	btfss	status,2,c
  1567  000EC0  EF64  F007         	goto	u881
  1568  000EC4  EF66  F007         	goto	u880
  1569  000EC8                     u881:
  1570  000EC8  EF58  F007         	goto	l1517
  1571  000ECC                     u880:
  1572  000ECC                     l1521:
  1573  000ECC  5009               	movf	___fltol@sign1^0,w,c
  1574  000ECE  B4D8               	btfsc	status,2,c
  1575  000ED0  EF6C  F007         	goto	u891
  1576  000ED4  EF6E  F007         	goto	u890
  1577  000ED8                     u891:
  1578  000ED8  EF76  F007         	goto	l1525
  1579  000EDC                     u890:
  1580  000EDC  1E04               	comf	(___fltol@f1+3)^0,f,c
  1581  000EDE  1E03               	comf	(___fltol@f1+2)^0,f,c
  1582  000EE0  1E02               	comf	(___fltol@f1+1)^0,f,c
  1583  000EE2  6C01               	negf	___fltol@f1^0,c
  1584  000EE4  0E00               	movlw	0
  1585  000EE6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1586  000EE8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1587  000EEA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1588  000EEC                     l1525:
  1589  000EEC  C001  F001         	movff	___fltol@f1,?___fltol
  1590  000EF0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1591  000EF4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1592  000EF8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1593  000EFC                     l445:
  1594  000EFC  0012               	return		;funcret
  1595  000EFE                     __end_of___fltol:
  1596                           	callstack 0
  1597                           
  1598 ;; *************** function ___flmul *****************
  1599 ;; Defined at:
  1600 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\sprcmul.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;  b               4   14[COMRAM] long 
  1603 ;;  a               4   18[COMRAM] long 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  prod            4   33[COMRAM] struct .
  1606 ;;  grs             4   27[COMRAM] unsigned long 
  1607 ;;  temp            2   37[COMRAM] struct .
  1608 ;;  bexp            1   32[COMRAM] unsigned char 
  1609 ;;  aexp            1   31[COMRAM] unsigned char 
  1610 ;;  sign            1   26[COMRAM] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  4   14[COMRAM] unsigned char 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, prodl, prodh
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1620 ;;      Params:         8       0       0       0       0       0       0       0       0
  1621 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1622 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1623 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1624 ;;Total ram usage:       25 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text13
  1634  00081A                     __ptext13:
  1635                           	callstack 0
  1636  00081A                     ___flmul:
  1637                           	callstack 30
  1638  00081A  5012               	movf	(___flmul@b+3)^0,w,c
  1639  00081C  0B80               	andlw	128
  1640  00081E  6E1B               	movwf	___flmul@sign^0,c
  1641  000820  5012               	movf	(___flmul@b+3)^0,w,c
  1642  000822  2412               	addwf	(___flmul@b+3)^0,w,c
  1643  000824  6E21               	movwf	___flmul@bexp^0,c
  1644  000826  AE11               	btfss	(___flmul@b+2)^0,7,c
  1645  000828  EF18  F004         	goto	u641
  1646  00082C  EF1A  F004         	goto	u640
  1647  000830                     u641:
  1648  000830  EF1B  F004         	goto	l1361
  1649  000834                     u640:
  1650  000834  8021               	bsf	___flmul@bexp^0,0,c
  1651  000836                     l1361:
  1652  000836  5021               	movf	___flmul@bexp^0,w,c
  1653  000838  B4D8               	btfsc	status,2,c
  1654  00083A  EF21  F004         	goto	u651
  1655  00083E  EF23  F004         	goto	u650
  1656  000842                     u651:
  1657  000842  EF36  F004         	goto	l1369
  1658  000846                     u650:
  1659  000846  2821               	incf	___flmul@bexp^0,w,c
  1660  000848  A4D8               	btfss	status,2,c
  1661  00084A  EF29  F004         	goto	u661
  1662  00084E  EF2B  F004         	goto	u660
  1663  000852                     u661:
  1664  000852  EF33  F004         	goto	l1367
  1665  000856                     u660:
  1666  000856  0E00               	movlw	0
  1667  000858  6E0F               	movwf	___flmul@b^0,c
  1668  00085A  0E00               	movlw	0
  1669  00085C  6E10               	movwf	(___flmul@b+1)^0,c
  1670  00085E  0E00               	movlw	0
  1671  000860  6E11               	movwf	(___flmul@b+2)^0,c
  1672  000862  0E00               	movlw	0
  1673  000864  6E12               	movwf	(___flmul@b+3)^0,c
  1674  000866                     l1367:
  1675  000866  8E11               	bsf	(___flmul@b+2)^0,7,c
  1676  000868  EF3E  F004         	goto	l1371
  1677  00086C                     l1369:
  1678  00086C  0E00               	movlw	0
  1679  00086E  6E0F               	movwf	___flmul@b^0,c
  1680  000870  0E00               	movlw	0
  1681  000872  6E10               	movwf	(___flmul@b+1)^0,c
  1682  000874  0E00               	movlw	0
  1683  000876  6E11               	movwf	(___flmul@b+2)^0,c
  1684  000878  0E00               	movlw	0
  1685  00087A  6E12               	movwf	(___flmul@b+3)^0,c
  1686  00087C                     l1371:
  1687  00087C  5016               	movf	(___flmul@a+3)^0,w,c
  1688  00087E  0B80               	andlw	128
  1689  000880  1A1B               	xorwf	___flmul@sign^0,f,c
  1690  000882  5016               	movf	(___flmul@a+3)^0,w,c
  1691  000884  2416               	addwf	(___flmul@a+3)^0,w,c
  1692  000886  6E20               	movwf	___flmul@aexp^0,c
  1693  000888  AE15               	btfss	(___flmul@a+2)^0,7,c
  1694  00088A  EF49  F004         	goto	u671
  1695  00088E  EF4B  F004         	goto	u670
  1696  000892                     u671:
  1697  000892  EF4C  F004         	goto	l1379
  1698  000896                     u670:
  1699  000896  8020               	bsf	___flmul@aexp^0,0,c
  1700  000898                     l1379:
  1701  000898  5020               	movf	___flmul@aexp^0,w,c
  1702  00089A  B4D8               	btfsc	status,2,c
  1703  00089C  EF52  F004         	goto	u681
  1704  0008A0  EF54  F004         	goto	u680
  1705  0008A4                     u681:
  1706  0008A4  EF67  F004         	goto	l1387
  1707  0008A8                     u680:
  1708  0008A8  2820               	incf	___flmul@aexp^0,w,c
  1709  0008AA  A4D8               	btfss	status,2,c
  1710  0008AC  EF5A  F004         	goto	u691
  1711  0008B0  EF5C  F004         	goto	u690
  1712  0008B4                     u691:
  1713  0008B4  EF64  F004         	goto	l1385
  1714  0008B8                     u690:
  1715  0008B8  0E00               	movlw	0
  1716  0008BA  6E13               	movwf	___flmul@a^0,c
  1717  0008BC  0E00               	movlw	0
  1718  0008BE  6E14               	movwf	(___flmul@a+1)^0,c
  1719  0008C0  0E00               	movlw	0
  1720  0008C2  6E15               	movwf	(___flmul@a+2)^0,c
  1721  0008C4  0E00               	movlw	0
  1722  0008C6  6E16               	movwf	(___flmul@a+3)^0,c
  1723  0008C8                     l1385:
  1724  0008C8  8E15               	bsf	(___flmul@a+2)^0,7,c
  1725  0008CA  EF6F  F004         	goto	l762
  1726  0008CE                     l1387:
  1727  0008CE  0E00               	movlw	0
  1728  0008D0  6E13               	movwf	___flmul@a^0,c
  1729  0008D2  0E00               	movlw	0
  1730  0008D4  6E14               	movwf	(___flmul@a+1)^0,c
  1731  0008D6  0E00               	movlw	0
  1732  0008D8  6E15               	movwf	(___flmul@a+2)^0,c
  1733  0008DA  0E00               	movlw	0
  1734  0008DC  6E16               	movwf	(___flmul@a+3)^0,c
  1735  0008DE                     l762:
  1736  0008DE  5020               	movf	___flmul@aexp^0,w,c
  1737  0008E0  B4D8               	btfsc	status,2,c
  1738  0008E2  EF75  F004         	goto	u701
  1739  0008E6  EF77  F004         	goto	u700
  1740  0008EA                     u701:
  1741  0008EA  EF7F  F004         	goto	l1391
  1742  0008EE                     u700:
  1743  0008EE  5021               	movf	___flmul@bexp^0,w,c
  1744  0008F0  A4D8               	btfss	status,2,c
  1745  0008F2  EF7D  F004         	goto	u711
  1746  0008F6  EF7F  F004         	goto	u710
  1747  0008FA                     u711:
  1748  0008FA  EF89  F004         	goto	l1395
  1749  0008FE                     u710:
  1750  0008FE                     l1391:
  1751  0008FE  0E00               	movlw	0
  1752  000900  6E0F               	movwf	?___flmul^0,c
  1753  000902  0E00               	movlw	0
  1754  000904  6E10               	movwf	(?___flmul+1)^0,c
  1755  000906  0E00               	movlw	0
  1756  000908  6E11               	movwf	(?___flmul+2)^0,c
  1757  00090A  0E00               	movlw	0
  1758  00090C  6E12               	movwf	(?___flmul+3)^0,c
  1759  00090E  EF21  F006         	goto	l766
  1760  000912                     l1395:
  1761  000912  5015               	movf	(___flmul@a+2)^0,w,c
  1762  000914  020F               	mulwf	___flmul@b^0,c
  1763  000916  CFF3 F026          	movff	prodl,___flmul@temp
  1764  00091A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1765  00091E  5026               	movf	___flmul@temp^0,w,c
  1766  000920  6E1C               	movwf	___flmul@grs^0,c
  1767  000922  6A1D               	clrf	(___flmul@grs+1)^0,c
  1768  000924  6A1E               	clrf	(___flmul@grs+2)^0,c
  1769  000926  6A1F               	clrf	(___flmul@grs+3)^0,c
  1770  000928  5027               	movf	(___flmul@temp+1)^0,w,c
  1771  00092A  6E22               	movwf	___flmul@prod^0,c
  1772  00092C  6A23               	clrf	(___flmul@prod+1)^0,c
  1773  00092E  6A24               	clrf	(___flmul@prod+2)^0,c
  1774  000930  6A25               	clrf	(___flmul@prod+3)^0,c
  1775  000932  5014               	movf	(___flmul@a+1)^0,w,c
  1776  000934  0210               	mulwf	(___flmul@b+1)^0,c
  1777  000936  CFF3 F026          	movff	prodl,___flmul@temp
  1778  00093A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1779  00093E  5026               	movf	___flmul@temp^0,w,c
  1780  000940  261C               	addwf	___flmul@grs^0,f,c
  1781  000942  0E00               	movlw	0
  1782  000944  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1783  000946  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1784  000948  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1785  00094A  5027               	movf	(___flmul@temp+1)^0,w,c
  1786  00094C  2622               	addwf	___flmul@prod^0,f,c
  1787  00094E  0E00               	movlw	0
  1788  000950  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1789  000952  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1790  000954  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1791  000956  5013               	movf	___flmul@a^0,w,c
  1792  000958  0211               	mulwf	(___flmul@b+2)^0,c
  1793  00095A  CFF3 F026          	movff	prodl,___flmul@temp
  1794  00095E  CFF4 F027          	movff	prodh,___flmul@temp+1
  1795  000962  5026               	movf	___flmul@temp^0,w,c
  1796  000964  261C               	addwf	___flmul@grs^0,f,c
  1797  000966  0E00               	movlw	0
  1798  000968  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1799  00096A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1800  00096C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1801  00096E  5027               	movf	(___flmul@temp+1)^0,w,c
  1802  000970  2622               	addwf	___flmul@prod^0,f,c
  1803  000972  0E00               	movlw	0
  1804  000974  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1805  000976  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1806  000978  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1807  00097A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1808  00097E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1809  000982  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1810  000986  6A1C               	clrf	___flmul@grs^0,c
  1811  000988  5013               	movf	___flmul@a^0,w,c
  1812  00098A  0210               	mulwf	(___flmul@b+1)^0,c
  1813  00098C  CFF3 F026          	movff	prodl,___flmul@temp
  1814  000990  CFF4 F027          	movff	prodh,___flmul@temp+1
  1815  000994  5026               	movf	___flmul@temp^0,w,c
  1816  000996  261C               	addwf	___flmul@grs^0,f,c
  1817  000998  5027               	movf	(___flmul@temp+1)^0,w,c
  1818  00099A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1819  00099C  0E00               	movlw	0
  1820  00099E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1821  0009A0  0E00               	movlw	0
  1822  0009A2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1823  0009A4  5014               	movf	(___flmul@a+1)^0,w,c
  1824  0009A6  020F               	mulwf	___flmul@b^0,c
  1825  0009A8  CFF3 F026          	movff	prodl,___flmul@temp
  1826  0009AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  1827  0009B0  5026               	movf	___flmul@temp^0,w,c
  1828  0009B2  261C               	addwf	___flmul@grs^0,f,c
  1829  0009B4  5027               	movf	(___flmul@temp+1)^0,w,c
  1830  0009B6  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1831  0009B8  0E00               	movlw	0
  1832  0009BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1833  0009BC  0E00               	movlw	0
  1834  0009BE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1835  0009C0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1836  0009C4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1837  0009C8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1838  0009CC  6A1C               	clrf	___flmul@grs^0,c
  1839  0009CE  5013               	movf	___flmul@a^0,w,c
  1840  0009D0  020F               	mulwf	___flmul@b^0,c
  1841  0009D2  CFF3 F026          	movff	prodl,___flmul@temp
  1842  0009D6  CFF4 F027          	movff	prodh,___flmul@temp+1
  1843  0009DA  5026               	movf	___flmul@temp^0,w,c
  1844  0009DC  261C               	addwf	___flmul@grs^0,f,c
  1845  0009DE  5027               	movf	(___flmul@temp+1)^0,w,c
  1846  0009E0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1847  0009E2  0E00               	movlw	0
  1848  0009E4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1849  0009E6  0E00               	movlw	0
  1850  0009E8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1851  0009EA  5015               	movf	(___flmul@a+2)^0,w,c
  1852  0009EC  0210               	mulwf	(___flmul@b+1)^0,c
  1853  0009EE  CFF3 F026          	movff	prodl,___flmul@temp
  1854  0009F2  CFF4 F027          	movff	prodh,___flmul@temp+1
  1855  0009F6  5026               	movf	___flmul@temp^0,w,c
  1856  0009F8  2622               	addwf	___flmul@prod^0,f,c
  1857  0009FA  5027               	movf	(___flmul@temp+1)^0,w,c
  1858  0009FC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1859  0009FE  0E00               	movlw	0
  1860  000A00  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1861  000A02  0E00               	movlw	0
  1862  000A04  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1863  000A06  5014               	movf	(___flmul@a+1)^0,w,c
  1864  000A08  0211               	mulwf	(___flmul@b+2)^0,c
  1865  000A0A  CFF3 F026          	movff	prodl,___flmul@temp
  1866  000A0E  CFF4 F027          	movff	prodh,___flmul@temp+1
  1867  000A12  5026               	movf	___flmul@temp^0,w,c
  1868  000A14  2622               	addwf	___flmul@prod^0,f,c
  1869  000A16  5027               	movf	(___flmul@temp+1)^0,w,c
  1870  000A18  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1871  000A1A  0E00               	movlw	0
  1872  000A1C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1873  000A1E  0E00               	movlw	0
  1874  000A20  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1875  000A22  5015               	movf	(___flmul@a+2)^0,w,c
  1876  000A24  0211               	mulwf	(___flmul@b+2)^0,c
  1877  000A26  CFF3 F026          	movff	prodl,___flmul@temp
  1878  000A2A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1879  000A2E  5026               	movf	___flmul@temp^0,w,c
  1880  000A30  6E17               	movwf	??___flmul^0,c
  1881  000A32  5027               	movf	(___flmul@temp+1)^0,w,c
  1882  000A34  6E18               	movwf	(??___flmul+1)^0,c
  1883  000A36  6A19               	clrf	(??___flmul+2)^0,c
  1884  000A38  6A1A               	clrf	(??___flmul+3)^0,c
  1885  000A3A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1886  000A3E  C018  F019         	movff	??___flmul+1,??___flmul+2
  1887  000A42  C017  F018         	movff	??___flmul,??___flmul+1
  1888  000A46  6A17               	clrf	??___flmul^0,c
  1889  000A48  5017               	movf	??___flmul^0,w,c
  1890  000A4A  2622               	addwf	___flmul@prod^0,f,c
  1891  000A4C  5018               	movf	(??___flmul+1)^0,w,c
  1892  000A4E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1893  000A50  5019               	movf	(??___flmul+2)^0,w,c
  1894  000A52  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1895  000A54  501A               	movf	(??___flmul+3)^0,w,c
  1896  000A56  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1897  000A58  C01C  F017         	movff	___flmul@grs,??___flmul
  1898  000A5C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1899  000A60  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1900  000A64  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1901  000A68  0E19               	movlw	25
  1902  000A6A  EF3C  F005         	goto	u720
  1903  000A6E                     u725:
  1904  000A6E  90D8               	bcf	status,0,c
  1905  000A70  321A               	rrcf	(??___flmul+3)^0,f,c
  1906  000A72  3219               	rrcf	(??___flmul+2)^0,f,c
  1907  000A74  3218               	rrcf	(??___flmul+1)^0,f,c
  1908  000A76  3217               	rrcf	??___flmul^0,f,c
  1909  000A78                     u720:
  1910  000A78  2EE8               	decfsz	wreg,f,c
  1911  000A7A  EF37  F005         	goto	u725
  1912  000A7E  5017               	movf	??___flmul^0,w,c
  1913  000A80  2622               	addwf	___flmul@prod^0,f,c
  1914  000A82  5018               	movf	(??___flmul+1)^0,w,c
  1915  000A84  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1916  000A86  5019               	movf	(??___flmul+2)^0,w,c
  1917  000A88  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1918  000A8A  501A               	movf	(??___flmul+3)^0,w,c
  1919  000A8C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1920  000A8E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1921  000A92  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1922  000A96  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1923  000A9A  6A1C               	clrf	___flmul@grs^0,c
  1924  000A9C  5020               	movf	___flmul@aexp^0,w,c
  1925  000A9E  C021  F017         	movff	___flmul@bexp,??___flmul
  1926  000AA2  6A18               	clrf	(??___flmul+1)^0,c
  1927  000AA4  2617               	addwf	??___flmul^0,f,c
  1928  000AA6  0E00               	movlw	0
  1929  000AA8  2218               	addwfc	(??___flmul+1)^0,f,c
  1930  000AAA  0E82               	movlw	130
  1931  000AAC  2417               	addwf	??___flmul^0,w,c
  1932  000AAE  6E26               	movwf	___flmul@temp^0,c
  1933  000AB0  0EFF               	movlw	255
  1934  000AB2  2018               	addwfc	(??___flmul+1)^0,w,c
  1935  000AB4  6E27               	movwf	(___flmul@temp+1)^0,c
  1936  000AB6  EF72  F005         	goto	l1443
  1937  000ABA                     l1437:
  1938  000ABA  90D8               	bcf	status,0,c
  1939  000ABC  3622               	rlcf	___flmul@prod^0,f,c
  1940  000ABE  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1941  000AC0  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1942  000AC2  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1943  000AC4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1944  000AC6  EF67  F005         	goto	u731
  1945  000ACA  EF69  F005         	goto	u730
  1946  000ACE                     u731:
  1947  000ACE  EF6A  F005         	goto	l769
  1948  000AD2                     u730:
  1949  000AD2  8022               	bsf	___flmul@prod^0,0,c
  1950  000AD4                     l769:
  1951  000AD4  90D8               	bcf	status,0,c
  1952  000AD6  361C               	rlcf	___flmul@grs^0,f,c
  1953  000AD8  361D               	rlcf	(___flmul@grs+1)^0,f,c
  1954  000ADA  361E               	rlcf	(___flmul@grs+2)^0,f,c
  1955  000ADC  361F               	rlcf	(___flmul@grs+3)^0,f,c
  1956  000ADE  0626               	decf	___flmul@temp^0,f,c
  1957  000AE0  A0D8               	btfss	status,0,c
  1958  000AE2  0627               	decf	(___flmul@temp+1)^0,f,c
  1959  000AE4                     l1443:
  1960  000AE4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1961  000AE6  EF77  F005         	goto	u741
  1962  000AEA  EF79  F005         	goto	u740
  1963  000AEE                     u741:
  1964  000AEE  EF5D  F005         	goto	l1437
  1965  000AF2                     u740:
  1966  000AF2  0E00               	movlw	0
  1967  000AF4  6E20               	movwf	___flmul@aexp^0,c
  1968  000AF6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1969  000AF8  EF80  F005         	goto	u751
  1970  000AFC  EF82  F005         	goto	u750
  1971  000B00                     u751:
  1972  000B00  EFA6  F005         	goto	l771
  1973  000B04                     u750:
  1974  000B04  0EFF               	movlw	255
  1975  000B06  141C               	andwf	___flmul@grs^0,w,c
  1976  000B08  6E17               	movwf	??___flmul^0,c
  1977  000B0A  0EFF               	movlw	255
  1978  000B0C  141D               	andwf	(___flmul@grs+1)^0,w,c
  1979  000B0E  6E18               	movwf	(??___flmul+1)^0,c
  1980  000B10  0EFF               	movlw	255
  1981  000B12  141E               	andwf	(___flmul@grs+2)^0,w,c
  1982  000B14  6E19               	movwf	(??___flmul+2)^0,c
  1983  000B16  0E7F               	movlw	127
  1984  000B18  141F               	andwf	(___flmul@grs+3)^0,w,c
  1985  000B1A  6E1A               	movwf	(??___flmul+3)^0,c
  1986  000B1C  5017               	movf	??___flmul^0,w,c
  1987  000B1E  1018               	iorwf	(??___flmul+1)^0,w,c
  1988  000B20  1019               	iorwf	(??___flmul+2)^0,w,c
  1989  000B22  101A               	iorwf	(??___flmul+3)^0,w,c
  1990  000B24  B4D8               	btfsc	status,2,c
  1991  000B26  EF97  F005         	goto	u761
  1992  000B2A  EF99  F005         	goto	u760
  1993  000B2E                     u761:
  1994  000B2E  EF9D  F005         	goto	l772
  1995  000B32                     u760:
  1996  000B32                     l1451:
  1997  000B32  0E01               	movlw	1
  1998  000B34  6E20               	movwf	___flmul@aexp^0,c
  1999  000B36  EFA6  F005         	goto	l771
  2000  000B3A                     l772:
  2001  000B3A  A022               	btfss	___flmul@prod^0,0,c
  2002  000B3C  EFA2  F005         	goto	u771
  2003  000B40  EFA4  F005         	goto	u770
  2004  000B44                     u771:
  2005  000B44  EFA6  F005         	goto	l771
  2006  000B48                     u770:
  2007  000B48  EF99  F005         	goto	l1451
  2008  000B4C                     l771:
  2009  000B4C  5020               	movf	___flmul@aexp^0,w,c
  2010  000B4E  B4D8               	btfsc	status,2,c
  2011  000B50  EFAC  F005         	goto	u781
  2012  000B54  EFAE  F005         	goto	u780
  2013  000B58                     u781:
  2014  000B58  EFD2  F005         	goto	l1463
  2015  000B5C                     u780:
  2016  000B5C  0E01               	movlw	1
  2017  000B5E  2622               	addwf	___flmul@prod^0,f,c
  2018  000B60  0E00               	movlw	0
  2019  000B62  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2020  000B64  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2021  000B66  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2022  000B68  A025               	btfss	(___flmul@prod+3)^0,0,c
  2023  000B6A  EFB9  F005         	goto	u791
  2024  000B6E  EFBB  F005         	goto	u790
  2025  000B72                     u791:
  2026  000B72  EFD2  F005         	goto	l1463
  2027  000B76                     u790:
  2028  000B76  C022  F017         	movff	___flmul@prod,??___flmul
  2029  000B7A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2030  000B7E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2031  000B82  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2032  000B86  341A               	rlcf	(??___flmul+3)^0,w,c
  2033  000B88  321A               	rrcf	(??___flmul+3)^0,f,c
  2034  000B8A  3219               	rrcf	(??___flmul+2)^0,f,c
  2035  000B8C  3218               	rrcf	(??___flmul+1)^0,f,c
  2036  000B8E  3217               	rrcf	??___flmul^0,f,c
  2037  000B90  C017  F022         	movff	??___flmul,___flmul@prod
  2038  000B94  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2039  000B98  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2040  000B9C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2041  000BA0  4A26               	infsnz	___flmul@temp^0,f,c
  2042  000BA2  2A27               	incf	(___flmul@temp+1)^0,f,c
  2043  000BA4                     l1463:
  2044  000BA4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2045  000BA6  EFDD  F005         	goto	u801
  2046  000BAA  5027               	movf	(___flmul@temp+1)^0,w,c
  2047  000BAC  E108               	bnz	u800
  2048  000BAE  2826               	incf	___flmul@temp^0,w,c
  2049  000BB0  A0D8               	btfss	status,0,c
  2050  000BB2  EFDD  F005         	goto	u801
  2051  000BB6  EFDF  F005         	goto	u800
  2052  000BBA                     u801:
  2053  000BBA  EFE9  F005         	goto	l1467
  2054  000BBE                     u800:
  2055  000BBE  0E00               	movlw	0
  2056  000BC0  6E22               	movwf	___flmul@prod^0,c
  2057  000BC2  0E00               	movlw	0
  2058  000BC4  6E23               	movwf	(___flmul@prod+1)^0,c
  2059  000BC6  0E80               	movlw	128
  2060  000BC8  6E24               	movwf	(___flmul@prod+2)^0,c
  2061  000BCA  0E7F               	movlw	127
  2062  000BCC  6E25               	movwf	(___flmul@prod+3)^0,c
  2063  000BCE  EF17  F006         	goto	l1479
  2064  000BD2                     l1467:
  2065  000BD2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2066  000BD4  EFF6  F005         	goto	u810
  2067  000BD8  5027               	movf	(___flmul@temp+1)^0,w,c
  2068  000BDA  E106               	bnz	u811
  2069  000BDC  0426               	decf	___flmul@temp^0,w,c
  2070  000BDE  B0D8               	btfsc	status,0,c
  2071  000BE0  EFF4  F005         	goto	u811
  2072  000BE4  EFF6  F005         	goto	u810
  2073  000BE8                     u811:
  2074  000BE8  EF02  F006         	goto	l779
  2075  000BEC                     u810:
  2076  000BEC  0E00               	movlw	0
  2077  000BEE  6E22               	movwf	___flmul@prod^0,c
  2078  000BF0  0E00               	movlw	0
  2079  000BF2  6E23               	movwf	(___flmul@prod+1)^0,c
  2080  000BF4  0E00               	movlw	0
  2081  000BF6  6E24               	movwf	(___flmul@prod+2)^0,c
  2082  000BF8  0E00               	movlw	0
  2083  000BFA  6E25               	movwf	(___flmul@prod+3)^0,c
  2084  000BFC  0E00               	movlw	0
  2085  000BFE  6E1B               	movwf	___flmul@sign^0,c
  2086  000C00  EF17  F006         	goto	l1479
  2087  000C04                     l779:
  2088  000C04  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2089  000C08  0EFF               	movlw	255
  2090  000C0A  1622               	andwf	___flmul@prod^0,f,c
  2091  000C0C  0EFF               	movlw	255
  2092  000C0E  1623               	andwf	(___flmul@prod+1)^0,f,c
  2093  000C10  0E7F               	movlw	127
  2094  000C12  1624               	andwf	(___flmul@prod+2)^0,f,c
  2095  000C14  0E00               	movlw	0
  2096  000C16  1625               	andwf	(___flmul@prod+3)^0,f,c
  2097  000C18  A021               	btfss	___flmul@bexp^0,0,c
  2098  000C1A  EF11  F006         	goto	u821
  2099  000C1E  EF13  F006         	goto	u820
  2100  000C22                     u821:
  2101  000C22  EF14  F006         	goto	l1477
  2102  000C26                     u820:
  2103  000C26  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2104  000C28                     l1477:
  2105  000C28  90D8               	bcf	status,0,c
  2106  000C2A  3021               	rrcf	___flmul@bexp^0,w,c
  2107  000C2C  6E25               	movwf	(___flmul@prod+3)^0,c
  2108  000C2E                     l1479:
  2109  000C2E  501B               	movf	___flmul@sign^0,w,c
  2110  000C30  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2111  000C32  C022  F00F         	movff	___flmul@prod,?___flmul
  2112  000C36  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2113  000C3A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2114  000C3E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2115  000C42                     l766:
  2116  000C42  0012               	return		;funcret
  2117  000C44                     __end_of___flmul:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _POS_CURSOR *****************
  2121 ;; Defined at:
  2122 ;;		line 6 in file "LCD.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  fila            1    wreg     unsigned char 
  2125 ;;  columna         1    3[COMRAM] unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  fila            1    4[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         1       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    2
  2144 ;; This function calls:
  2145 ;;		_ENVIA_LCD_CMD
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text14
  2152  00126C                     __ptext14:
  2153                           	callstack 0
  2154  00126C                     _POS_CURSOR:
  2155                           	callstack 28
  2156                           
  2157                           ;incstack = 0
  2158                           ;POS_CURSOR@fila stored from wreg
  2159  00126C  6E05               	movwf	POS_CURSOR@fila^0,c
  2160  00126E                     
  2161                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2162  00126E  0405               	decf	POS_CURSOR@fila^0,w,c
  2163  001270  A4D8               	btfss	status,2,c
  2164  001272  EF3D  F009         	goto	u611
  2165  001276  EF3F  F009         	goto	u610
  2166  00127A                     u611:
  2167  00127A  EF45  F009         	goto	l1343
  2168  00127E                     u610:
  2169  00127E                     
  2170                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2171  00127E  5004               	movf	POS_CURSOR@columna^0,w,c
  2172  001280  0F80               	addlw	128
  2173  001282  EC53  F009         	call	_ENVIA_LCD_CMD
  2174                           
  2175                           ;LCD.c: 11:  }
  2176  001286  EF52  F009         	goto	l95
  2177  00128A                     l1343:
  2178  00128A  0E02               	movlw	2
  2179  00128C  1805               	xorwf	POS_CURSOR@fila^0,w,c
  2180  00128E  A4D8               	btfss	status,2,c
  2181  001290  EF4C  F009         	goto	u621
  2182  001294  EF4E  F009         	goto	u620
  2183  001298                     u621:
  2184  001298  EF52  F009         	goto	l95
  2185  00129C                     u620:
  2186  00129C                     
  2187                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2188  00129C  5004               	movf	POS_CURSOR@columna^0,w,c
  2189  00129E  0FC0               	addlw	192
  2190  0012A0  EC53  F009         	call	_ENVIA_LCD_CMD
  2191  0012A4                     l95:
  2192  0012A4  0012               	return		;funcret
  2193  0012A6                     __end_of_POS_CURSOR:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _ENVIA_LCD_CMD *****************
  2197 ;; Defined at:
  2198 ;;		line 104 in file "LCD.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  dato            1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  dato            1    1[COMRAM] unsigned char 
  2203 ;;  aux             1    2[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    1
  2220 ;; This function calls:
  2221 ;;		_ENVIA_NIBBLE
  2222 ;;		_LEER_LCD
  2223 ;; This function is called by:
  2224 ;;		_POS_CURSOR
  2225 ;;		_CURSOR_HOME
  2226 ;;		_CURSOR_ONOFF
  2227 ;;		_BORRAR_LCD
  2228 ;;		_LCD_CONFIG
  2229 ;;		_BLINK_CURSOR
  2230 ;;		_DISPLAY_ONOFF
  2231 ;;		_GENERACARACTER
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text15
  2236  0012A6                     __ptext15:
  2237                           	callstack 0
  2238  0012A6                     _ENVIA_LCD_CMD:
  2239                           	callstack 27
  2240                           
  2241                           ;incstack = 0
  2242                           ;ENVIA_LCD_CMD@dato stored from wreg
  2243  0012A6  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2244  0012A8                     
  2245                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2246  0012A8  908C               	bcf	140,0,c	;volatile
  2247  0012AA                     
  2248                           ;LCD.c: 108:  LEER_LCD();
  2249  0012AA  EC7C  F008         	call	_LEER_LCD	;wreg free
  2250  0012AE                     
  2251                           ;LCD.c: 109:  TRISD = 0b00000000;
  2252  0012AE  0E00               	movlw	0
  2253  0012B0  6E95               	movwf	149,c	;volatile
  2254  0012B2                     
  2255                           ;LCD.c: 111:         _delay(1200);
  2256  0012B2  0EF0               	movlw	240
  2257  0012B4                     u1057:
  2258  0012B4  D000               	nop2	
  2259  0012B6  2EE8               	decfsz	wreg,f,c
  2260  0012B8  D7FD               	bra	u1057
  2261  0012BA                     
  2262                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2263  0012BA  928C               	bcf	140,1,c	;volatile
  2264  0012BC                     
  2265                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2266  0012BC  948C               	bcf	140,2,c	;volatile
  2267  0012BE                     
  2268                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2269  0012BE  908C               	bcf	140,0,c	;volatile
  2270  0012C0                     
  2271                           ;LCD.c: 115:  aux = dato & 0xF0;
  2272  0012C0  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2273  0012C2  0BF0               	andlw	240
  2274  0012C4  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2275  0012C6                     
  2276                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2277  0012C6  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2278  0012C8  ECB3  F009         	call	_ENVIA_NIBBLE
  2279  0012CC                     
  2280                           ;LCD.c: 117:  aux = dato<<4;
  2281  0012CC  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2282  0012CE  0BF0               	andlw	240
  2283  0012D0  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2284  0012D2                     
  2285                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2286  0012D2  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2287  0012D4  ECB3  F009         	call	_ENVIA_NIBBLE
  2288  0012D8  0012               	return		;funcret
  2289  0012DA                     __end_of_ENVIA_LCD_CMD:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _ESCRIBE_MENSAJE *****************
  2293 ;; Defined at:
  2294 ;;		line 41 in file "LCD.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2297 ;;		 -> STR_2(8), STR_1(16), 
  2298 ;;  tam             1    5[COMRAM] unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  i               1    8[COMRAM] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2310 ;;      Params:         3       0       0       0       0       0       0       0       0
  2311 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2312 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2313 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2314 ;;Total ram usage:        6 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    2
  2317 ;; This function calls:
  2318 ;;		_ENVIA_CHAR
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text16
  2325  00122E                     __ptext16:
  2326                           	callstack 0
  2327  00122E                     _ESCRIBE_MENSAJE:
  2328                           	callstack 28
  2329  00122E                     
  2330                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2331  00122E  0E00               	movlw	0
  2332  001230  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2333                           
  2334                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2335  001232  0E00               	movlw	0
  2336  001234  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2337  001236  EF2C  F009         	goto	l1353
  2338  00123A                     l1349:
  2339                           
  2340                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2341  00123A  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2342  00123C  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2343  00123E  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  2344  001240  0E00               	movlw	0
  2345  001242  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2346  001244  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2347  001246  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2348  00124A  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2349  00124E                     	if	0	;tblptru may be non-zero
  2350  00124E                     	endif
  2351  00124E                     	if	0	;tblptru may be non-zero
  2352  00124E                     	endif
  2353  00124E  0008               	tblrd		*
  2354  001250  50F5               	movf	tablat,w,c
  2355  001252  EC6D  F009         	call	_ENVIA_CHAR
  2356  001256                     
  2357                           ;LCD.c: 47:  }
  2358  001256  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2359  001258                     l1353:
  2360  001258  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2361  00125A  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2362  00125C  A0D8               	btfss	status,0,c
  2363  00125E  EF33  F009         	goto	u631
  2364  001262  EF35  F009         	goto	u630
  2365  001266                     u631:
  2366  001266  EF1D  F009         	goto	l1349
  2367  00126A                     u630:
  2368  00126A  0012               	return		;funcret
  2369  00126C                     __end_of_ESCRIBE_MENSAJE:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _ENVIA_CHAR *****************
  2373 ;; Defined at:
  2374 ;;		line 50 in file "LCD.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  dato            1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  dato            1    1[COMRAM] unsigned char 
  2379 ;;  aux             1    2[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    1
  2396 ;; This function calls:
  2397 ;;		_ENVIA_NIBBLE
  2398 ;;		_LEER_LCD
  2399 ;; This function is called by:
  2400 ;;		_main
  2401 ;;		_ESCRIBE_MENSAJE
  2402 ;;		_GENERACARACTER
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text17
  2407  0012DA                     __ptext17:
  2408                           	callstack 0
  2409  0012DA                     _ENVIA_CHAR:
  2410                           	callstack 28
  2411                           
  2412                           ;incstack = 0
  2413                           ;ENVIA_CHAR@dato stored from wreg
  2414  0012DA  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2415  0012DC                     
  2416                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2417  0012DC  808C               	bsf	140,0,c	;volatile
  2418  0012DE                     
  2419                           ;LCD.c: 54:  LEER_LCD();
  2420  0012DE  EC7C  F008         	call	_LEER_LCD	;wreg free
  2421  0012E2                     
  2422                           ;LCD.c: 55:  TRISD = 0x00;
  2423  0012E2  0E00               	movlw	0
  2424  0012E4  6E95               	movwf	149,c	;volatile
  2425  0012E6                     
  2426                           ;LCD.c: 56:         _delay(1200);
  2427  0012E6  0EF0               	movlw	240
  2428  0012E8                     u1067:
  2429  0012E8  D000               	nop2	
  2430  0012EA  2EE8               	decfsz	wreg,f,c
  2431  0012EC  D7FD               	bra	u1067
  2432  0012EE                     
  2433                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2434  0012EE  928C               	bcf	140,1,c	;volatile
  2435  0012F0                     
  2436                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2437  0012F0  948C               	bcf	140,2,c	;volatile
  2438  0012F2                     
  2439                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2440  0012F2  808C               	bsf	140,0,c	;volatile
  2441  0012F4                     
  2442                           ;LCD.c: 61:  aux = dato & 0xF0;
  2443  0012F4  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2444  0012F6  0BF0               	andlw	240
  2445  0012F8  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2446  0012FA                     
  2447                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2448  0012FA  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2449  0012FC  ECB3  F009         	call	_ENVIA_NIBBLE
  2450  001300                     
  2451                           ;LCD.c: 63:  aux = dato << 4;
  2452  001300  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2453  001302  0BF0               	andlw	240
  2454  001304  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2455  001306                     
  2456                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2457  001306  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2458  001308  ECB3  F009         	call	_ENVIA_NIBBLE
  2459  00130C  0012               	return		;funcret
  2460  00130E                     __end_of_ENVIA_CHAR:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _LEER_LCD *****************
  2464 ;; Defined at:
  2465 ;;		line 121 in file "LCD.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  aux             1    0[COMRAM] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0
  2480 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2482 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2483 ;;Total ram usage:        1 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_ENVIA_CHAR
  2489 ;;		_ENVIA_LCD_CMD
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text18
  2494  0010F8                     __ptext18:
  2495                           	callstack 0
  2496  0010F8                     _LEER_LCD:
  2497                           	callstack 27
  2498  0010F8                     
  2499                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2500  0010F8  0EF8               	movlw	248
  2501  0010FA  6E95               	movwf	149,c	;volatile
  2502  0010FC                     
  2503                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2504  0010FC  908C               	bcf	140,0,c	;volatile
  2505  0010FE                     
  2506                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2507  0010FE  828C               	bsf	140,1,c	;volatile
  2508  001100                     
  2509                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2510  001100  848C               	bsf	140,2,c	;volatile
  2511  001102                     
  2512                           ;LCD.c: 128:         _delay(1200);
  2513  001102  0EF0               	movlw	240
  2514  001104                     u1077:
  2515  001104  D000               	nop2	
  2516  001106  2EE8               	decfsz	wreg,f,c
  2517  001108  D7FD               	bra	u1077
  2518  00110A                     
  2519                           ;LCD.c: 130:  aux = PORTD;
  2520  00110A  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2521  00110E                     
  2522                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2523  00110E  948C               	bcf	140,2,c	;volatile
  2524  001110                     
  2525                           ;LCD.c: 132:         _delay(1200);
  2526  001110  0EF0               	movlw	240
  2527  001112                     u1087:
  2528  001112  D000               	nop2	
  2529  001114  2EE8               	decfsz	wreg,f,c
  2530  001116  D7FD               	bra	u1087
  2531  001118                     
  2532                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2533  001118  848C               	bsf	140,2,c	;volatile
  2534  00111A                     
  2535                           ;LCD.c: 135:         _delay(1200);
  2536  00111A  0EF0               	movlw	240
  2537  00111C                     u1097:
  2538  00111C  D000               	nop2	
  2539  00111E  2EE8               	decfsz	wreg,f,c
  2540  001120  D7FD               	bra	u1097
  2541  001122                     
  2542                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2543  001122  948C               	bcf	140,2,c	;volatile
  2544  001124                     l843:
  2545                           
  2546                           ;LCD.c: 138:  aux = aux & 0x80;
  2547  001124  5001               	movf	LEER_LCD@aux^0,w,c
  2548  001126  0B80               	andlw	128
  2549  001128  6E01               	movwf	LEER_LCD@aux^0,c
  2550                           
  2551                           ;LCD.c: 139:  while(aux == 0x80)
  2552  00112A  EFAB  F008         	goto	l857
  2553  00112E                     l138:
  2554                           
  2555                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2556  00112E  848C               	bsf	140,2,c	;volatile
  2557  001130                     
  2558                           ;LCD.c: 142:             _delay(1200);
  2559  001130  0EF0               	movlw	240
  2560  001132                     u1107:
  2561  001132  D000               	nop2	
  2562  001134  2EE8               	decfsz	wreg,f,c
  2563  001136  D7FD               	bra	u1107
  2564  001138                     
  2565                           ;LCD.c: 143:             aux = PORTD;
  2566  001138  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2567  00113C                     
  2568                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2569  00113C  948C               	bcf	140,2,c	;volatile
  2570                           
  2571                           ;LCD.c: 145:             _delay(1200);
  2572  00113E  0EF0               	movlw	240
  2573  001140                     u1117:
  2574  001140  D000               	nop2	
  2575  001142  2EE8               	decfsz	wreg,f,c
  2576  001144  D7FD               	bra	u1117
  2577  001146                     
  2578                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2579  001146  848C               	bsf	140,2,c	;volatile
  2580                           
  2581                           ;LCD.c: 147:             _delay(1200);
  2582  001148  0EF0               	movlw	240
  2583  00114A                     u1127:
  2584  00114A  D000               	nop2	
  2585  00114C  2EE8               	decfsz	wreg,f,c
  2586  00114E  D7FD               	bra	u1127
  2587  001150                     
  2588                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2589  001150  948C               	bcf	140,2,c	;volatile
  2590  001152  EF92  F008         	goto	l843
  2591  001156                     l857:
  2592                           
  2593                           ;LCD.c: 139:  while(aux == 0x80)
  2594  001156  0E80               	movlw	128
  2595  001158  1801               	xorwf	LEER_LCD@aux^0,w,c
  2596  00115A  B4D8               	btfsc	status,2,c
  2597  00115C  EFB2  F008         	goto	u11
  2598  001160  EFB4  F008         	goto	u10
  2599  001164                     u11:
  2600  001164  EF97  F008         	goto	l138
  2601  001168                     u10:
  2602  001168  0012               	return		;funcret
  2603  00116A                     __end_of_LEER_LCD:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _ENVIA_NIBBLE *****************
  2607 ;; Defined at:
  2608 ;;		line 93 in file "LCD.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  dato            1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  dato            1    0[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_ENVIA_CHAR
  2632 ;;		_LCD_CONFIG
  2633 ;;		_ENVIA_LCD_CMD
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text19
  2638  001366                     __ptext19:
  2639                           	callstack 0
  2640  001366                     _ENVIA_NIBBLE:
  2641                           	callstack 28
  2642                           
  2643                           ;incstack = 0
  2644                           ;ENVIA_NIBBLE@dato stored from wreg
  2645  001366  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2646  001368                     
  2647                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2648  001368  0E0F               	movlw	15
  2649  00136A  168C               	andwf	140,f,c	;volatile
  2650                           
  2651                           ;LCD.c: 96:  dato &= 0xF0;
  2652  00136C  0EF0               	movlw	240
  2653  00136E  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2654                           
  2655                           ;LCD.c: 97:  LATD|= dato;
  2656  001370  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2657  001372  128C               	iorwf	140,f,c	;volatile
  2658  001374                     
  2659                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2660  001374  848C               	bsf	140,2,c	;volatile
  2661  001376                     
  2662                           ;LCD.c: 100:         _delay(1200);
  2663  001376  0EF0               	movlw	240
  2664  001378                     u1137:
  2665  001378  D000               	nop2	
  2666  00137A  2EE8               	decfsz	wreg,f,c
  2667  00137C  D7FD               	bra	u1137
  2668  00137E                     
  2669                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2670  00137E  948C               	bcf	140,2,c	;volatile
  2671  001380  0012               	return		;funcret
  2672  001382                     __end_of_ENVIA_NIBBLE:
  2673                           	callstack 0
  2674                           
  2675                           	psect	rparam
  2676  0000                     
  2677                           	psect	idloc
  2678                           
  2679                           ;Config register IDLOC0 @ 0x200000
  2680                           ;	unspecified, using default values
  2681  200000                     	org	2097152
  2682  200000  FF                 	db	255
  2683                           
  2684                           ;Config register IDLOC1 @ 0x200001
  2685                           ;	unspecified, using default values
  2686  200001                     	org	2097153
  2687  200001  FF                 	db	255
  2688                           
  2689                           ;Config register IDLOC2 @ 0x200002
  2690                           ;	unspecified, using default values
  2691  200002                     	org	2097154
  2692  200002  FF                 	db	255
  2693                           
  2694                           ;Config register IDLOC3 @ 0x200003
  2695                           ;	unspecified, using default values
  2696  200003                     	org	2097155
  2697  200003  FF                 	db	255
  2698                           
  2699                           ;Config register IDLOC4 @ 0x200004
  2700                           ;	unspecified, using default values
  2701  200004                     	org	2097156
  2702  200004  FF                 	db	255
  2703                           
  2704                           ;Config register IDLOC5 @ 0x200005
  2705                           ;	unspecified, using default values
  2706  200005                     	org	2097157
  2707  200005  FF                 	db	255
  2708                           
  2709                           ;Config register IDLOC6 @ 0x200006
  2710                           ;	unspecified, using default values
  2711  200006                     	org	2097158
  2712  200006  FF                 	db	255
  2713                           
  2714                           ;Config register IDLOC7 @ 0x200007
  2715                           ;	unspecified, using default values
  2716  200007                     	org	2097159
  2717  200007  FF                 	db	255
  2718                           
  2719                           	psect	config
  2720                           
  2721                           ;Config register CONFIG1L @ 0x300000
  2722                           ;	PLL Prescaler Selection bits
  2723                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2724                           ;	System Clock Postscaler Selection bits
  2725                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2726                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2727                           ;	USBDIV = 0x0, unprogrammed default
  2728  300000                     	org	3145728
  2729  300000  00                 	db	0
  2730                           
  2731                           ;Config register CONFIG1H @ 0x300001
  2732                           ;	Oscillator Selection bits
  2733                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2734                           ;	Fail-Safe Clock Monitor Enable bit
  2735                           ;	FCMEN = 0x0, unprogrammed default
  2736                           ;	Internal/External Oscillator Switchover bit
  2737                           ;	IESO = 0x0, unprogrammed default
  2738  300001                     	org	3145729
  2739  300001  02                 	db	2
  2740                           
  2741                           ;Config register CONFIG2L @ 0x300002
  2742                           ;	Power-up Timer Enable bit
  2743                           ;	PWRT = ON, PWRT enabled
  2744                           ;	Brown-out Reset Enable bits
  2745                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2746                           ;	Brown-out Reset Voltage bits
  2747                           ;	BORV = 0x3, unprogrammed default
  2748                           ;	USB Voltage Regulator Enable bit
  2749                           ;	VREGEN = 0x0, unprogrammed default
  2750  300002                     	org	3145730
  2751  300002  18                 	db	24
  2752                           
  2753                           ;Config register CONFIG2H @ 0x300003
  2754                           ;	Watchdog Timer Enable bit
  2755                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2756                           ;	Watchdog Timer Postscale Select bits
  2757                           ;	WDTPS = 0xF, unprogrammed default
  2758  300003                     	org	3145731
  2759  300003  1E                 	db	30
  2760                           
  2761                           ; Padding undefined space
  2762  300004                     	org	3145732
  2763  300004  FF                 	db	255
  2764                           
  2765                           ;Config register CONFIG3H @ 0x300005
  2766                           ;	CCP2 MUX bit
  2767                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2768                           ;	PORTB A/D Enable bit
  2769                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2770                           ;	Low-Power Timer 1 Oscillator Enable bit
  2771                           ;	LPT1OSC = 0x0, unprogrammed default
  2772                           ;	MCLR Pin Enable bit
  2773                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2774  300005                     	org	3145733
  2775  300005  81                 	db	129
  2776                           
  2777                           ;Config register CONFIG4L @ 0x300006
  2778                           ;	Stack Full/Underflow Reset Enable bit
  2779                           ;	STVREN = 0x1, unprogrammed default
  2780                           ;	Single-Supply ICSP Enable bit
  2781                           ;	LVP = OFF, Single-Supply ICSP disabled
  2782                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2783                           ;	ICPRT = 0x0, unprogrammed default
  2784                           ;	Extended Instruction Set Enable bit
  2785                           ;	XINST = 0x0, unprogrammed default
  2786                           ;	Background Debugger Enable bit
  2787                           ;	DEBUG = 0x1, unprogrammed default
  2788  300006                     	org	3145734
  2789  300006  81                 	db	129
  2790                           
  2791                           ; Padding undefined space
  2792  300007                     	org	3145735
  2793  300007  FF                 	db	255
  2794                           
  2795                           ;Config register CONFIG5L @ 0x300008
  2796                           ;	unspecified, using default values
  2797                           ;	Code Protection bit
  2798                           ;	CP0 = 0x1, unprogrammed default
  2799                           ;	Code Protection bit
  2800                           ;	CP1 = 0x1, unprogrammed default
  2801                           ;	Code Protection bit
  2802                           ;	CP2 = 0x1, unprogrammed default
  2803                           ;	Code Protection bit
  2804                           ;	CP3 = 0x1, unprogrammed default
  2805  300008                     	org	3145736
  2806  300008  0F                 	db	15
  2807                           
  2808                           ;Config register CONFIG5H @ 0x300009
  2809                           ;	unspecified, using default values
  2810                           ;	Boot Block Code Protection bit
  2811                           ;	CPB = 0x1, unprogrammed default
  2812                           ;	Data EEPROM Code Protection bit
  2813                           ;	CPD = 0x1, unprogrammed default
  2814  300009                     	org	3145737
  2815  300009  C0                 	db	192
  2816                           
  2817                           ;Config register CONFIG6L @ 0x30000A
  2818                           ;	unspecified, using default values
  2819                           ;	Write Protection bit
  2820                           ;	WRT0 = 0x1, unprogrammed default
  2821                           ;	Write Protection bit
  2822                           ;	WRT1 = 0x1, unprogrammed default
  2823                           ;	Write Protection bit
  2824                           ;	WRT2 = 0x1, unprogrammed default
  2825                           ;	Write Protection bit
  2826                           ;	WRT3 = 0x1, unprogrammed default
  2827  30000A                     	org	3145738
  2828  30000A  0F                 	db	15
  2829                           
  2830                           ;Config register CONFIG6H @ 0x30000B
  2831                           ;	unspecified, using default values
  2832                           ;	Configuration Register Write Protection bit
  2833                           ;	WRTC = 0x1, unprogrammed default
  2834                           ;	Boot Block Write Protection bit
  2835                           ;	WRTB = 0x1, unprogrammed default
  2836                           ;	Data EEPROM Write Protection bit
  2837                           ;	WRTD = 0x1, unprogrammed default
  2838  30000B                     	org	3145739
  2839  30000B  E0                 	db	224
  2840                           
  2841                           ;Config register CONFIG7L @ 0x30000C
  2842                           ;	unspecified, using default values
  2843                           ;	Table Read Protection bit
  2844                           ;	EBTR0 = 0x1, unprogrammed default
  2845                           ;	Table Read Protection bit
  2846                           ;	EBTR1 = 0x1, unprogrammed default
  2847                           ;	Table Read Protection bit
  2848                           ;	EBTR2 = 0x1, unprogrammed default
  2849                           ;	Table Read Protection bit
  2850                           ;	EBTR3 = 0x1, unprogrammed default
  2851  30000C                     	org	3145740
  2852  30000C  0F                 	db	15
  2853                           
  2854                           ;Config register CONFIG7H @ 0x30000D
  2855                           ;	unspecified, using default values
  2856                           ;	Boot Block Table Read Protection bit
  2857                           ;	EBTRB = 0x1, unprogrammed default
  2858  30000D                     	org	3145741
  2859  30000D  40                 	db	64
  2860                           tosu	equ	0xFFF
  2861                           tosh	equ	0xFFE
  2862                           tosl	equ	0xFFD
  2863                           stkptr	equ	0xFFC
  2864                           pclatu	equ	0xFFB
  2865                           pclath	equ	0xFFA
  2866                           pcl	equ	0xFF9
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           prodh	equ	0xFF4
  2872                           prodl	equ	0xFF3
  2873                           indf0	equ	0xFEF
  2874                           postinc0	equ	0xFEE
  2875                           postdec0	equ	0xFED
  2876                           preinc0	equ	0xFEC
  2877                           plusw0	equ	0xFEB
  2878                           fsr0h	equ	0xFEA
  2879                           fsr0l	equ	0xFE9
  2880                           wreg	equ	0xFE8
  2881                           indf1	equ	0xFE7
  2882                           postinc1	equ	0xFE6
  2883                           postdec1	equ	0xFE5
  2884                           preinc1	equ	0xFE4
  2885                           plusw1	equ	0xFE3
  2886                           fsr1h	equ	0xFE2
  2887                           fsr1l	equ	0xFE1
  2888                           bsr	equ	0xFE0
  2889                           indf2	equ	0xFDF
  2890                           postinc2	equ	0xFDE
  2891                           postdec2	equ	0xFDD
  2892                           preinc2	equ	0xFDC
  2893                           plusw2	equ	0xFDB
  2894                           fsr2h	equ	0xFDA
  2895                           fsr2l	equ	0xFD9
  2896                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5440
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _ad_config
                     _ccp1pwm_config
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1397
                                             12 COMRAM     2     0      2
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ccp1pwm_config                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ad_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _ad_config
   _ccp1pwm_config
   _convierte
     ___fltol (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      33       1       53.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      20        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 25 18:02:22 2020

                      l51 1082                        l60 13AE                        l54 1364  
                      l57 13BC                        l66 0F26                        l95 12A4  
                      u10 1168                        u11 1164                        u20 1320  
                      u21 131C                        u30 1336                        u31 1332  
           ENVIA_CHAR@aux 0003                       l113 133C                       l122 130C  
                     l131 1380                       l140 1168                       l108 13C4  
                     l125 13CC                       l134 12D8                       l119 126A  
                     l128 122C                       l138 112E                       l445 0EFC  
                     l810 0D32                       l803 0C9A                       l821 10F8  
                     l901 1208                       l806 0DF6                       l646 10F6  
                     l831 110A                       l823 10FC                       l639 10EE  
                     l911 1226                       l903 120E                       l656 11CC  
                     l841 1122                       l833 110E                       l825 10FE  
                     l817 0D8E                       l649 11C4                       l913 13C6  
                     l921 1326                       l905 1214                       l762 08DE  
                     l851 1146                       l843 1124                       l835 1110  
                     l827 1100                       l931 12E6                       l771 0B4C  
                     l915 13BE                       l923 1336                       l907 121A  
                     l772 0B3A                       l861 1374                       l853 1150  
                     l845 1130                       l837 1118                       l829 1102  
                     l941 12FA                       l933 12EE                       l925 12DC  
                     l917 1310                       l909 1220                       l766 0C42  
                     l863 1376                       l847 1138                       l839 111A  
                     l943 1300                       l935 12F0                       l927 12DE  
                     l871 12AE                       l919 1320                       l865 137E  
                     l849 113C                       l857 1156                       l945 1306  
                     l937 12F2                       l929 12E2                       l881 12C0  
                     l873 12B2                       l769 0AD4                       l859 1368  
                     l939 12F4                       l883 12C6                       l875 12BA  
                     l867 12A8                       l779 0C04                       l891 11D2  
                     l885 12CC                       l877 12BC                       l869 12AA  
                     l893 11D8                       l887 12D2                       l879 12BE  
                     l895 11E6                       l991 1346                       l897 11FA  
                     l889 11CE                       l993 1356                       l899 1202  
                     l995 135A                       l987 133E                       l997 135E  
                     l989 1342                       l999 13B0                       _PR2 000FCB  
                     u600 11B0                       u601 11AC                       u610 127E  
                     u611 127A                       u620 129C                       u700 08EE  
                     u621 1298                       u701 08EA                       u630 126A  
                     u710 08FE                       u550 109E                       u631 1266  
                     u711 08FA                       u551 109A                       u800 0BBE  
                     u720 0A78                       u640 0834                       u560 10BC  
                     u801 0BBA                       u641 0830                       u561 10B8  
                     u810 0BEC                       u730 0AD2                       u650 0846  
                     u570 10D8                       u811 0BE8                       u731 0ACE  
                     u651 0842                       u571 10D4                       u820 0C26  
                     u740 0AF2                       u660 0856                       u900 0C56  
                     u580 117C                       u821 0C22                       u741 0AEE  
                     u725 0A6E                       u661 0852                       u901 0C52  
                     u581 1178                       u750 0B04                       u670 0896  
                     u830 0E0E                       u910 0C64                       u590 119A  
                     u751 0B00                       u671 0892                       u831 0E0A  
                     u911 0C60                       u591 1196                       u760 0B32  
                     u680 08A8                       u840 0E42                       u920 0CC0  
                     u761 0B2E                       u681 08A4                       u921 0CBC  
                     u770 0B48                       u690 08B8                       u850 0E70  
                     u930 0D16                       u771 0B44                       u691 08B4  
                     u851 0E6C                       u931 0D12                       u780 0B5C  
                     u860 0E84                       u940 0D60                       u781 0B58  
                     u861 0E80                       u845 0E38                       u941 0D5C  
                     u790 0B76                       u870 0EAC                       u950 0D7E  
                     u791 0B72                       u871 0EA8                       u951 0D7A  
                     u880 0ECC                       u960 0D8E                       u881 0EC8  
                     u961 0D8A                       u890 0EDC                       u970 0D9C  
                     u891 0ED8                       u971 0D98                       u980 0DD6  
                     u981 0DD2                       u990 0DE4                       u991 0DE0  
             LEER_LCD@aux 0001                       wreg 000FE8              ?_CURSOR_HOME 0001  
            ___flmul@aexp 0020              ___flmul@bexp 0021              ___flmul@sign 001B  
            ___flmul@temp 0026              ___flmul@prod 0022            ??_ENVIA_NIBBLE 0001  
            ___fltol@exp1 000A            ENVIA_CHAR@dato 0002                      l1001 139C  
                    l1003 13A4                      l1301 108C                      l1311 10C2  
                    l1303 109E                      l1401 093E                      l1313 10D8  
                    l1305 10A6                      l1321 116A                      l1411 0988  
                    l1403 094A                      l1315 10E0                      l1307 10AE  
                    l1331 11B0                      l1323 117C                      l1341 127E  
                    l1421 09DA                      l1413 0994                      l1405 0962  
                    l1501 0E70                      l1317 10E2                      l1309 10BC  
                    l1333 11B8                      l1325 1184                      l1351 1256  
                    l1343 128A                      l1431 0A58                      l1423 09EA  
                    l1415 09A4                      l1407 096E                      l1511 0E9C  
                    l1319 10E8                      l1335 11BE                      l1327 118C  
                    l1353 1258                      l1345 129C                      l1441 0AD2  
                    l1433 0A8E                      l1425 0A06                      l1417 09B0  
                    l1409 097A                      l1361 0836                      l1521 0ECC  
                    l1329 119A                      l1337 0FEA                      l1347 122E  
                    l1339 126E                      l1451 0B32                      l1443 0AE4  
                    l1435 0A9C                      l1427 0A12                      l1419 09C0  
                    l1371 087C                      l1363 0846                      l1355 081A  
                    l1523 0EDC                      l1507 0E88                      l1531 0C56  
                    l1349 123A                      l1461 0BA0                      l1445 0AF2  
                    l1437 0ABA                      l1429 0A2E                      l1381 08A8  
                    l1373 0882                      l1365 0856                      l1357 0826  
                    l1525 0EEC                      l1517 0EB0                      l1509 0E92  
                    l1541 0CD4                      l1533 0C64                      l1471 0C08  
                    l1455 0B5C                      l1463 0BA4                      l1447 0AF6  
                    l1439 0AC4                      l1391 08FE                      l1383 08B8  
                    l1375 0888                      l1367 0866                      l1359 0834  
                    l1519 0EBC                      l1551 0D28                      l1543 0CDC  
                    l1535 0CAA                      l1481 0C32                      l1473 0C18  
                    l1465 0BBE                      l1457 0B68                      l1449 0B04  
                    l1385 08C8                      l1377 0896                      l1369 086C  
                    l1561 0D9E                      l1553 0D64                      l1545 0CE8  
                    l1537 0CC0                      l1529 0C46                      l1475 0C26  
                    l1467 0BD2                      l1459 0B76                      l1395 0912  
                    l1387 08CE                      l1379 0898                      l1491 0E22  
                    l1571 0DE6                      l1563 0DA2                      l1555 0D70  
                    l1547 0D1A                      l1299 1084                      l1477 0C28  
                    l1469 0BEC                      l1397 091E                      l1389 08EE  
                    l1493 0E4C                      l1485 0DF8                      l1565 0DC6  
                    l1557 0D7E                      l1549 0D1C                      l1581 0F14  
                    l1479 0C2E                      l1399 0928                      l1495 0E4E  
                    l1487 0E0E                      l1567 0DD6                      l1559 0D9C  
                    l1591 0F92                      l1583 0F24                      l1575 0EFE  
                    l1497 0E5E                      l1569 0DE4                      l1593 0FAA  
                    l1585 0F34                      l1577 0F02                      l1499 0E62  
                    l1595 0FCA                      l1587 0F3E                      l1579 0F06  
                    l1597 0FD2                      l1589 0F4E                      l1599 0FDA  
                    STR_1 0801                      STR_2 0811                      u1000 0F34  
                    u1001 0F30                      u1017 134C                      u1107 1132  
                    u1027 11DE                      u1117 1140                      u1037 11EC  
                    u1127 114A                      u1047 11FC                      u1137 1378  
                    u1057 12B4                      u1067 12E8                      u1077 1104  
                    u1087 1112                      _LATD 000F8C                      u1097 111C  
                    _main 0EFE                      prodh 000FF4                      prodl 000FF3  
                    start 0000             ?_CURSOR_ONOFF 0001              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 116A       __size_of_BORRAR_LCD 0008  
           ___fltol@sign1 0009                     ?_main 0001           __end_of___flmul 0C44  
         __end_of___fltol 0EFE                     _T2CON 000FCA           __end_of___lwdiv 10F8  
         __end_of___lwmod 11CE                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 1382              __end_of_main 0FEA           _ESCRIBE_MENSAJE 122E  
                  ??_main 0028             __activetblptr 000001   __size_of_ccp1pwm_config 0014  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADCON2 000FC0  
                  _ADRESH 000FC4                    _CCPR1L 000FBE          __end_of___xxtofl 0DF8  
        __end_of_lcd_init 1366                    _decena 002E      __end_of_ENVIA_NIBBLE 1382  
               ??___flmul 0017                 ??___fltol 0005                 ??___lwdiv 000A  
               ??___lwmod 0005       __size_of_POS_CURSOR 003A                    _millar 0032  
                  clear_0 1388                    _unidad 002C              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008              ___xxtofl@arg 000B  
            ___xxtofl@exp 000A              ___xxtofl@val 0001                 ?_LEER_LCD 0001  
              __accesstop 0060   __end_of__initialization 138E              ??_LCD_CONFIG 0004  
      __size_of_ad_config 000E             ___rparam_used 000001              ??_ENVIA_CHAR 0002  
              ___fltol@f1 0001   __end_of_ESCRIBE_MENSAJE 126C            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 13CE          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 133E  
      __end_of_LCD_CONFIG 122E        __end_of_ENVIA_CHAR 130E        __size_of_convierte 009A  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001                   _CCP1CON 000FBD  
          _ccp1pwm_config 139C         __end_of_ad_config 13BE                 ?___xxtofl 0001  
            ??_POS_CURSOR 0005                 ?_lcd_init 0001     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
                 ___flmul 081A                   ___fltol 0DF8                   ___lwdiv 1084  
                 ___lwmod 116A              __psmallconst 0800    __end_of_ccp1pwm_config 13B0  
   __end_of_ENVIA_LCD_CMD 12DA         __end_of_convierte 1084                   _calculo 0028  
                 __pcinit 1382        __end_of_POS_CURSOR 12A6                   __ramtop 0800  
                 _centena 0030                   __ptext0 0EFE                   __ptext1 133E  
                 __ptext2 11CE                   __ptext3 130E                   __ptext4 13BE  
                 __ptext5 13C6                   __ptext6 0FEA                   __ptext7 116A  
                 __ptext8 1084                   __ptext9 139C                ??___xxtofl 0005  
              ??_lcd_init 0005              _ENVIA_NIBBLE 1366      end_of_initialization 138E  
                 postinc0 000FEE           ?_ccp1pwm_config 0001     __size_of_CURSOR_ONOFF 0030  
           ___xxtofl@sign 0009                 _TRISCbits 000F94               ___flmul@grs 001C  
       __size_of_LEER_LCD 0072              _CURSOR_ONOFF 130E        CURSOR_ONOFF@estado 0004  
           ??_CURSOR_HOME 0004       start_initialization 1382         ENVIA_LCD_CMD@dato 0002  
               ___flmul@a 0013                 ___flmul@b 000F               __pbssCOMRAM 0028  
               _ad_config 13B0         __size_of___xxtofl 01B4       __end_of_CURSOR_HOME 13C6  
       __size_of_lcd_init 0028          ___lwdiv@dividend 0006                  ?___flmul 000F  
                ?___fltol 0001                  ?___lwdiv 0006                  ?___lwmod 0001  
             __smallconst 0800                 _convierte 0FEA           convierte@numero 000D  
              ?_ad_config 0001          ___lwdiv@quotient 000A                  _LEER_LCD 10F8  
                _LATDbits 000F8C          ??_ccp1pwm_config 0001          ESCRIBE_MENSAJE@i 0009  
          POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2  
              ?_convierte 000D               _CURSOR_HOME 13BE    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___flmul 042A          __size_of___fltol 0106          __size_of___lwdiv 0074  
        __size_of___lwmod 0064                  ___xxtofl 0C44           ___lwdiv@divisor 0008  
             ??_ad_config 0001           ___lwdiv@counter 000C                  __ptext10 13B0  
                __ptext11 0C44                  __ptext12 0DF8                  __ptext13 081A  
                __ptext14 126C                  __ptext15 12A6                  __ptext16 122E  
                __ptext17 12DA                  __ptext18 10F8                  __ptext19 1366  
              _BORRAR_LCD 13C6                  _lcd_init 133E             __size_of_main 00EC  
              _LCD_CONFIG 11CE                _ENVIA_CHAR 12DA             _ENVIA_LCD_CMD 12A6  
             ??_convierte 000F         ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004  
        ___lwmod@dividend 0001            ?_ENVIA_LCD_CMD 0001           ___lwmod@divisor 0003  
         ___lwmod@counter 0005               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 126C               ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006  
             ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
