

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 21:12:30 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000D60                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _cara_feliz
    73  000D60  00                 	db	0
    74  000D61  0A                 	db	10
    75  000D62  0A                 	db	10
    76  000D63  0A                 	db	10
    77  000D64  00                 	db	0
    78  000D65  11                 	db	17
    79  000D66  0E                 	db	14
    80  000D67  00                 	db	0
    81                           
    82                           ;initializer for _o_tilde
    83  000D68  02                 	db	2
    84  000D69  04                 	db	4
    85  000D6A  00                 	db	0
    86  000D6B  0E                 	db	14
    87  000D6C  11                 	db	17
    88  000D6D  11                 	db	17
    89  000D6E  11                 	db	17
    90  000D6F  0E                 	db	14
    91  0000                     _ADRESL	set	4035
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _PORTD	set	3971
    98  0000                     _LATD	set	3980
    99  0000                     _TRISD	set	3989
   100  0000                     _LATDbits	set	3980
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_2:
   107  000801  6D                 	db	109	;'m'
   108  000802  65                 	db	101	;'e'
   109  000803  74                 	db	116	;'t'
   110  000804  72                 	db	114	;'r'
   111  000805  6F                 	db	111	;'o'
   112  000806  20                 	db	32
   113  000807  4C                 	db	76	;'L'
   114  000808  53                 	db	83	;'S'
   115  000809  35                 	db	53	;'5'
   116  00080A  41                 	db	65	;'A'
   117  00080B  3A                 	db	58	;':'
   118  00080C  20                 	db	32
   119  00080D  00                 	db	0
   120  00080E                     STR_3:
   121  00080E  4C                 	db	76	;'L'
   122  00080F  4D                 	db	77	;'M'
   123  000810  33                 	db	51	;'3'
   124  000811  35                 	db	53	;'5'
   125  000812  3A                 	db	58	;':'
   126  000813  20                 	db	32
   127  000814  00                 	db	0
   128  000815                     STR_1:
   129  000815  54                 	db	84	;'T'
   130  000816  65                 	db	101	;'e'
   131  000817  72                 	db	114	;'r'
   132  000818  6D                 	db	109	;'m'
   133  000819  00                 	db	0
   134  00081A                     STR_4:
   135  00081A  43                 	db	67	;'C'
   136  00081B  00                 	db	0
   137  00081C  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           ; #config settings
   140                           
   141                           	psect	cinit
   142  000C10                     __pcinit:
   143                           	callstack 0
   144  000C10                     start_initialization:
   145                           	callstack 0
   146  000C10                     __initialization:
   147                           	callstack 0
   148                           
   149                           ; Initialize objects allocated to COMRAM (16 bytes)
   150                           ; load TBLPTR registers with __pidataCOMRAM
   151  000C10  0E60               	movlw	low __pidataCOMRAM
   152  000C12  6EF6               	movwf	tblptrl,c
   153  000C14  0E0D               	movlw	high __pidataCOMRAM
   154  000C16  6EF7               	movwf	tblptrh,c
   155  000C18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   156  000C1A  6EF8               	movwf	tblptru,c
   157  000C1C  EE00  F001         	lfsr	0,__pdataCOMRAM
   158  000C20  EE10 F010          	lfsr	1,16
   159  000C24                     copy_data0:
   160  000C24  0009               	tblrd		*+
   161  000C26  CFF5 FFEE          	movff	tablat,postinc0
   162  000C2A  50E5               	movf	postdec1,w,c
   163  000C2C  50E1               	movf	fsr1l,w,c
   164  000C2E  E1FA               	bnz	copy_data0
   165                           
   166                           ; Clear objects allocated to COMRAM (12 bytes)
   167  000C30  EE00  F021         	lfsr	0,__pbssCOMRAM
   168  000C34  0E0C               	movlw	12
   169  000C36                     clear_0:
   170  000C36  6AEE               	clrf	postinc0,c
   171  000C38  06E8               	decf	wreg,f,c
   172  000C3A  E1FD               	bnz	clear_0
   173  000C3C                     end_of_initialization:
   174                           	callstack 0
   175  000C3C                     __end_of__initialization:
   176                           	callstack 0
   177  000C3C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   178  000C3E  6EF8               	movwf	tblptru,c
   179  000C40  0E08               	movlw	high __Lsmallconst
   180  000C42  6EF7               	movwf	tblptrh,c
   181  000C44  0100               	movlb	0
   182  000C46  EF0F  F004         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000021                     __pbssCOMRAM:
   186                           	callstack 0
   187  000021                     _unidad:
   188                           	callstack 0
   189  000021                     	ds	2
   190  000023                     _decena:
   191                           	callstack 0
   192  000023                     	ds	2
   193  000025                     _centena:
   194                           	callstack 0
   195  000025                     	ds	2
   196  000027                     _millar:
   197                           	callstack 0
   198  000027                     	ds	2
   199  000029                     _d_millar:
   200                           	callstack 0
   201  000029                     	ds	2
   202  00002B                     _lm35var:
   203                           	callstack 0
   204  00002B                     	ds	2
   205                           
   206                           	psect	dataCOMRAM
   207  000001                     __pdataCOMRAM:
   208                           	callstack 0
   209  000001                     _cara_feliz:
   210                           	callstack 0
   211  000001                     	ds	8
   212  000009                     _o_tilde:
   213                           	callstack 0
   214  000009                     	ds	8
   215                           
   216                           	psect	cstackCOMRAM
   217  000011                     __pcstackCOMRAM:
   218                           	callstack 0
   219  000011                     ?___lwmod:
   220                           	callstack 0
   221  000011                     ENVIA_NIBBLE@dato:
   222                           	callstack 0
   223  000011                     LEER_LCD@aux:
   224                           	callstack 0
   225  000011                     ___lwmod@dividend:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000011                     	ds	1
   230  000012                     ENVIA_CHAR@dato:
   231                           	callstack 0
   232  000012                     ENVIA_LCD_CMD@dato:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x1
   236  000012                     	ds	1
   237  000013                     ENVIA_CHAR@aux:
   238                           	callstack 0
   239  000013                     ENVIA_LCD_CMD@aux:
   240                           	callstack 0
   241  000013                     ___lwmod@divisor:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000013                     	ds	1
   246  000014                     ??_LCD_CONFIG:
   247  000014                     POS_CURSOR@columna:
   248                           	callstack 0
   249  000014                     CURSOR_ONOFF@estado:
   250                           	callstack 0
   251  000014                     ESCRIBE_MENSAJE@cadena:
   252                           	callstack 0
   253  000014                     GENERACARACTER@vector:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x3
   257  000014                     	ds	1
   258  000015                     ??_lcd_init:
   259  000015                     POS_CURSOR@fila:
   260                           	callstack 0
   261  000015                     ___lwmod@counter:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x4
   265  000015                     	ds	1
   266  000016                     ?___lwdiv:
   267                           	callstack 0
   268  000016                     ESCRIBE_MENSAJE@tam:
   269                           	callstack 0
   270  000016                     GENERACARACTER@pos:
   271                           	callstack 0
   272  000016                     ___lwdiv@dividend:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x5
   276  000016                     	ds	1
   277  000017                     ??_ESCRIBE_MENSAJE:
   278  000017                     GENERACARACTER@i:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x6
   282  000017                     	ds	1
   283  000018                     ___lwdiv@divisor:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x7
   287  000018                     	ds	1
   288  000019                     ESCRIBE_MENSAJE@i:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0x8
   292  000019                     	ds	1
   293  00001A                     ___lwdiv@quotient:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x9
   297  00001A                     	ds	2
   298  00001C                     ___lwdiv@counter:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0xB
   302  00001C                     	ds	1
   303  00001D                     convierte@numero:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xC
   307  00001D                     	ds	2
   308  00001F                     ??_main:
   309                           
   310                           ; 1 bytes @ 0xE
   311  00001F                     	ds	2
   312                           
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 61 in file "maincode.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         0       0       0       0       0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0       0       0       0       0
   334 ;;      Temps:          2       0       0       0       0       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels required when called:    4
   338 ;; This function calls:
   339 ;;		_ENVIA_CHAR
   340 ;;		_ESCRIBE_MENSAJE
   341 ;;		_GENERACARACTER
   342 ;;		_POS_CURSOR
   343 ;;		___lwdiv
   344 ;;		_adc_init
   345 ;;		_convierte
   346 ;;		_lcd_init
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353  00081E                     __ptext0:
   354                           	callstack 0
   355  00081E                     _main:
   356                           	callstack 27
   357  00081E                     
   358                           ;maincode.c: 62:     lcd_init();
   359  00081E  EC8E  F006         	call	_lcd_init	;wreg free
   360  000822                     
   361                           ;maincode.c: 63:     adc_init();
   362  000822  ECB8  F006         	call	_adc_init	;wreg free
   363  000826                     
   364                           ;maincode.c: 64:     GENERACARACTER(o_tilde, 0);
   365  000826  0E09               	movlw	low _o_tilde
   366  000828  6E14               	movwf	GENERACARACTER@vector^0,c
   367  00082A  0E00               	movlw	high _o_tilde
   368  00082C  6E15               	movwf	(GENERACARACTER@vector+1)^0,c
   369  00082E  0E00               	movlw	0
   370  000830  6E16               	movwf	GENERACARACTER@pos^0,c
   371  000832  ECEA  F005         	call	_GENERACARACTER	;wreg free
   372  000836                     
   373                           ;maincode.c: 65:     GENERACARACTER(cara_feliz, 1);
   374  000836  0E01               	movlw	low _cara_feliz
   375  000838  6E14               	movwf	GENERACARACTER@vector^0,c
   376  00083A  0E00               	movlw	high _cara_feliz
   377  00083C  6E15               	movwf	(GENERACARACTER@vector+1)^0,c
   378  00083E  0E01               	movlw	1
   379  000840  6E16               	movwf	GENERACARACTER@pos^0,c
   380  000842  ECEA  F005         	call	_GENERACARACTER	;wreg free
   381  000846                     
   382                           ;maincode.c: 66:     POS_CURSOR(1,0);
   383  000846  0E00               	movlw	0
   384  000848  6E14               	movwf	POS_CURSOR@columna^0,c
   385  00084A  0E01               	movlw	1
   386  00084C  EC25  F006         	call	_POS_CURSOR
   387  000850                     
   388                           ;maincode.c: 67:     ESCRIBE_MENSAJE("Term", 4);
   389  000850  0E15               	movlw	low STR_1
   390  000852  6E14               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   391  000854  0E08               	movlw	high STR_1
   392  000856  6E15               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   393  000858  0E04               	movlw	4
   394  00085A  6E16               	movwf	ESCRIBE_MENSAJE@tam^0,c
   395  00085C  ECCB  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   396  000860                     
   397                           ;maincode.c: 68:     ENVIA_CHAR(0x00);
   398  000860  0E00               	movlw	0
   399  000862  EC5C  F006         	call	_ENVIA_CHAR
   400  000866                     
   401                           ;maincode.c: 69:     ESCRIBE_MENSAJE("metro LS5A: ", 12);
   402  000866  0E01               	movlw	low STR_2
   403  000868  6E14               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   404  00086A  0E08               	movlw	high STR_2
   405  00086C  6E15               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   406  00086E  0E0C               	movlw	12
   407  000870  6E16               	movwf	ESCRIBE_MENSAJE@tam^0,c
   408  000872  ECCB  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   409  000876                     
   410                           ;maincode.c: 70:     ENVIA_CHAR(0x01);
   411  000876  0E01               	movlw	1
   412  000878  EC5C  F006         	call	_ENVIA_CHAR
   413  00087C                     l1180:
   414                           
   415                           ;maincode.c: 72:         ADCON0bits.GODONE = 1;
   416  00087C  82C2               	bsf	194,1,c	;volatile
   417  00087E                     l137:
   418  00087E  B2C2               	btfsc	194,1,c	;volatile
   419  000880  EF44  F004         	goto	u291
   420  000884  EF46  F004         	goto	u290
   421  000888                     u291:
   422  000888  EF3F  F004         	goto	l137
   423  00088C                     u290:
   424  00088C                     
   425                           ;maincode.c: 74:         lm35var = (ADRESH <<8) + ADRESL;
   426  00088C  50C4               	movf	196,w,c	;volatile
   427  00088E  6E20               	movwf	(??_main+1)^0,c
   428  000890  6A1F               	clrf	??_main^0,c
   429  000892  50C3               	movf	195,w,c	;volatile
   430  000894  241F               	addwf	??_main^0,w,c
   431  000896  6E2B               	movwf	_lm35var^0,c
   432  000898  0E00               	movlw	0
   433  00089A  2020               	addwfc	(??_main+1)^0,w,c
   434  00089C  6E2C               	movwf	(_lm35var+1)^0,c
   435  00089E                     
   436                           ;maincode.c: 75:         lm35var = lm35var /10;
   437  00089E  C02B  F016         	movff	_lm35var,___lwdiv@dividend
   438  0008A2  C02C  F017         	movff	_lm35var+1,___lwdiv@dividend+1
   439  0008A6  0E00               	movlw	0
   440  0008A8  6E19               	movwf	(___lwdiv@divisor+1)^0,c
   441  0008AA  0E0A               	movlw	10
   442  0008AC  6E18               	movwf	___lwdiv@divisor^0,c
   443  0008AE  ECF6  F004         	call	___lwdiv	;wreg free
   444  0008B2  C016  F02B         	movff	?___lwdiv,_lm35var
   445  0008B6  C017  F02C         	movff	?___lwdiv+1,_lm35var+1
   446  0008BA                     
   447                           ;maincode.c: 76:         convierte(lm35var);
   448  0008BA  C02B  F01D         	movff	_lm35var,convierte@numero
   449  0008BE  C02C  F01E         	movff	_lm35var+1,convierte@numero+1
   450  0008C2  EC91  F004         	call	_convierte	;wreg free
   451  0008C6                     
   452                           ;maincode.c: 77:         POS_CURSOR(2,0);
   453  0008C6  0E00               	movlw	0
   454  0008C8  6E14               	movwf	POS_CURSOR@columna^0,c
   455  0008CA  0E02               	movlw	2
   456  0008CC  EC25  F006         	call	_POS_CURSOR
   457  0008D0                     
   458                           ;maincode.c: 78:         ESCRIBE_MENSAJE("LM35: ", 6);
   459  0008D0  0E0E               	movlw	low STR_3
   460  0008D2  6E14               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   461  0008D4  0E08               	movlw	high STR_3
   462  0008D6  6E15               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   463  0008D8  0E06               	movlw	6
   464  0008DA  6E16               	movwf	ESCRIBE_MENSAJE@tam^0,c
   465  0008DC  ECCB  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   466  0008E0                     
   467                           ;maincode.c: 81:         ENVIA_CHAR(centena+0x30);
   468  0008E0  5025               	movf	_centena^0,w,c
   469  0008E2  0F30               	addlw	48
   470  0008E4  EC5C  F006         	call	_ENVIA_CHAR
   471  0008E8                     
   472                           ;maincode.c: 82:         ENVIA_CHAR(decena+0x30);
   473  0008E8  5023               	movf	_decena^0,w,c
   474  0008EA  0F30               	addlw	48
   475  0008EC  EC5C  F006         	call	_ENVIA_CHAR
   476  0008F0                     
   477                           ;maincode.c: 83:         ENVIA_CHAR(unidad+0x30);
   478  0008F0  5021               	movf	_unidad^0,w,c
   479  0008F2  0F30               	addlw	48
   480  0008F4  EC5C  F006         	call	_ENVIA_CHAR
   481  0008F8                     
   482                           ;maincode.c: 84:         ENVIA_CHAR(0x2E);
   483  0008F8  0E2E               	movlw	46
   484  0008FA  EC5C  F006         	call	_ENVIA_CHAR
   485  0008FE                     
   486                           ;maincode.c: 85:         ENVIA_CHAR(0x30);
   487  0008FE  0E30               	movlw	48
   488  000900  EC5C  F006         	call	_ENVIA_CHAR
   489  000904                     
   490                           ;maincode.c: 86:         ENVIA_CHAR(0xDF);
   491  000904  0EDF               	movlw	223
   492  000906  EC5C  F006         	call	_ENVIA_CHAR
   493  00090A                     
   494                           ;maincode.c: 87:         ESCRIBE_MENSAJE("C", 1);
   495  00090A  0E1A               	movlw	low STR_4
   496  00090C  6E14               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   497  00090E  0E08               	movlw	high STR_4
   498  000910  6E15               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   499  000912  0E01               	movlw	1
   500  000914  6E16               	movwf	ESCRIBE_MENSAJE@tam^0,c
   501  000916  ECCB  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   502  00091A  EF3E  F004         	goto	l1180
   503  00091E  EF00  F000         	goto	start
   504  000922                     __end_of_main:
   505                           	callstack 0
   506                           
   507 ;; *************** function _lcd_init *****************
   508 ;; Defined at:
   509 ;;		line 38 in file "maincode.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          1       0       0       0       0       0       0       0       0
   526 ;;      Totals:         1       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    3
   530 ;; This function calls:
   531 ;;		_BORRAR_LCD
   532 ;;		_CURSOR_HOME
   533 ;;		_CURSOR_ONOFF
   534 ;;		_LCD_CONFIG
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541  000D1C                     __ptext1:
   542                           	callstack 0
   543  000D1C                     _lcd_init:
   544                           	callstack 27
   545  000D1C                     
   546                           ;maincode.c: 39:     TRISD = 0x00;
   547  000D1C  0E00               	movlw	0
   548  000D1E  6E95               	movwf	149,c	;volatile
   549  000D20                     
   550                           ;maincode.c: 40:     LCD_CONFIG();
   551  000D20  EC9B  F005         	call	_LCD_CONFIG	;wreg free
   552  000D24                     
   553                           ;maincode.c: 41:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   554  000D24  0EEA               	movlw	234
   555  000D26  6E15               	movwf	??_lcd_init^0,c
   556  000D28  0EC3               	movlw	195
   557  000D2A                     u307:
   558  000D2A  2EE8               	decfsz	wreg,f,c
   559  000D2C  D7FE               	bra	u307
   560  000D2E  2E15               	decfsz	??_lcd_init^0,f,c
   561  000D30  D7FC               	bra	u307
   562  000D32  F000               	nop	
   563  000D34                     
   564                           ;maincode.c: 42:     BORRAR_LCD();
   565  000D34  ECC3  F006         	call	_BORRAR_LCD	;wreg free
   566  000D38                     
   567                           ;maincode.c: 43:     CURSOR_HOME();
   568  000D38  ECBF  F006         	call	_CURSOR_HOME	;wreg free
   569  000D3C                     
   570                           ;maincode.c: 44:     CURSOR_ONOFF(1);
   571  000D3C  0E01               	movlw	1
   572  000D3E  EC76  F006         	call	_CURSOR_ONOFF
   573  000D42  0012               	return		;funcret
   574  000D44                     __end_of_lcd_init:
   575                           	callstack 0
   576                           
   577 ;; *************** function _LCD_CONFIG *****************
   578 ;; Defined at:
   579 ;;		line 72 in file "../20202_c_electron.X/LCD.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;		None
   582 ;; Auto vars:     Size  Location     Type
   583 ;;		None
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   593 ;;      Params:         0       0       0       0       0       0       0       0       0
   594 ;;      Locals:         0       0       0       0       0       0       0       0       0
   595 ;;      Temps:          1       0       0       0       0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    2
   600 ;; This function calls:
   601 ;;		_ENVIA_LCD_CMD
   602 ;;		_ENVIA_NIBBLE
   603 ;; This function is called by:
   604 ;;		_lcd_init
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text2
   609  000B36                     __ptext2:
   610                           	callstack 0
   611  000B36                     _LCD_CONFIG:
   612                           	callstack 27
   613  000B36                     
   614                           ;../20202_c_electron.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   615  000B36  908C               	bcf	140,0,c	;volatile
   616                           
   617                           ;../20202_c_electron.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   618  000B38  928C               	bcf	140,1,c	;volatile
   619  000B3A                     
   620                           ;../20202_c_electron.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   621  000B3A  0E30               	movlw	48
   622  000B3C  ECA2  F006         	call	_ENVIA_NIBBLE
   623  000B40                     
   624                           ;../20202_c_electron.X/LCD.c: 77:         _delay(24000);
   625  000B40  0E20               	movlw	32
   626  000B42  6E14               	movwf	??_LCD_CONFIG^0,c
   627  000B44  0E2A               	movlw	42
   628  000B46                     u317:
   629  000B46  2EE8               	decfsz	wreg,f,c
   630  000B48  D7FE               	bra	u317
   631  000B4A  2E14               	decfsz	??_LCD_CONFIG^0,f,c
   632  000B4C  D7FC               	bra	u317
   633  000B4E                     
   634                           ;../20202_c_electron.X/LCD.c: 78:         _delay(24000);
   635  000B4E  0E20               	movlw	32
   636  000B50  6E14               	movwf	??_LCD_CONFIG^0,c
   637  000B52  0E2A               	movlw	42
   638  000B54                     u327:
   639  000B54  2EE8               	decfsz	wreg,f,c
   640  000B56  D7FE               	bra	u327
   641  000B58  2E14               	decfsz	??_LCD_CONFIG^0,f,c
   642  000B5A  D7FC               	bra	u327
   643                           
   644                           ;../20202_c_electron.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   645  000B5C  0E30               	movlw	48
   646  000B5E  ECA2  F006         	call	_ENVIA_NIBBLE
   647  000B62                     
   648                           ;../20202_c_electron.X/LCD.c: 83:  _delay(1200);
   649  000B62  0EF0               	movlw	240
   650  000B64                     u337:
   651  000B64  D000               	nop2	
   652  000B66  2EE8               	decfsz	wreg,f,c
   653  000B68  D7FD               	bra	u337
   654  000B6A                     
   655                           ;../20202_c_electron.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   656  000B6A  0E30               	movlw	48
   657  000B6C  ECA2  F006         	call	_ENVIA_NIBBLE
   658  000B70                     
   659                           ;../20202_c_electron.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   660  000B70  0E20               	movlw	32
   661  000B72  ECA2  F006         	call	_ENVIA_NIBBLE
   662  000B76                     
   663                           ;../20202_c_electron.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   664  000B76  0E01               	movlw	1
   665  000B78  EC42  F006         	call	_ENVIA_LCD_CMD
   666  000B7C                     
   667                           ;../20202_c_electron.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   668  000B7C  0E28               	movlw	40
   669  000B7E  EC42  F006         	call	_ENVIA_LCD_CMD
   670  000B82                     
   671                           ;../20202_c_electron.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   672  000B82  0E0F               	movlw	15
   673  000B84  EC42  F006         	call	_ENVIA_LCD_CMD
   674  000B88                     
   675                           ;../20202_c_electron.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   676  000B88  0E06               	movlw	6
   677  000B8A  EC42  F006         	call	_ENVIA_LCD_CMD
   678  000B8E                     
   679                           ;../20202_c_electron.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   680  000B8E  0E01               	movlw	1
   681  000B90  EC42  F006         	call	_ENVIA_LCD_CMD
   682  000B94  0012               	return		;funcret
   683  000B96                     __end_of_LCD_CONFIG:
   684                           	callstack 0
   685                           
   686 ;; *************** function _CURSOR_ONOFF *****************
   687 ;; Defined at:
   688 ;;		line 35 in file "../20202_c_electron.X/LCD.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  estado          1    wreg     unsigned char 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  estado          1    3[COMRAM] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   702 ;;      Params:         0       0       0       0       0       0       0       0       0
   703 ;;      Locals:         1       0       0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0
   705 ;;      Totals:         1       0       0       0       0       0       0       0       0
   706 ;;Total ram usage:        1 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    2
   709 ;; This function calls:
   710 ;;		_ENVIA_LCD_CMD
   711 ;; This function is called by:
   712 ;;		_lcd_init
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text3
   717  000CEC                     __ptext3:
   718                           	callstack 0
   719  000CEC                     _CURSOR_ONOFF:
   720                           	callstack 27
   721                           
   722                           ;incstack = 0
   723                           ;CURSOR_ONOFF@estado stored from wreg
   724  000CEC  6E14               	movwf	CURSOR_ONOFF@estado^0,c
   725  000CEE                     
   726                           ;../20202_c_electron.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20202_c_ele
      +                          ctron.X/LCD.c: 36: {;../20202_c_electron.X/LCD.c: 37:  if(estado == 0) ENVIA_LCD_CMD(0x0
      +                          E);
   727  000CEE  5014               	movf	CURSOR_ONOFF@estado^0,w,c
   728  000CF0  A4D8               	btfss	status,2,c
   729  000CF2  EF7D  F006         	goto	u21
   730  000CF6  EF7F  F006         	goto	u20
   731  000CFA                     u21:
   732  000CFA  EF82  F006         	goto	l892
   733  000CFE                     u20:
   734  000CFE  0E0E               	movlw	14
   735  000D00  EC42  F006         	call	_ENVIA_LCD_CMD
   736  000D04                     l892:
   737                           
   738                           ;../20202_c_electron.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   739  000D04  0414               	decf	CURSOR_ONOFF@estado^0,w,c
   740  000D06  A4D8               	btfss	status,2,c
   741  000D08  EF88  F006         	goto	u31
   742  000D0C  EF8A  F006         	goto	u30
   743  000D10                     u31:
   744  000D10  EF8D  F006         	goto	l42
   745  000D14                     u30:
   746  000D14  0E0C               	movlw	12
   747  000D16  EC42  F006         	call	_ENVIA_LCD_CMD
   748  000D1A                     l42:
   749  000D1A  0012               	return		;funcret
   750  000D1C                     __end_of_CURSOR_ONOFF:
   751                           	callstack 0
   752                           
   753 ;; *************** function _CURSOR_HOME *****************
   754 ;; Defined at:
   755 ;;		line 30 in file "../20202_c_electron.X/LCD.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   769 ;;      Params:         0       0       0       0       0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    2
   776 ;; This function calls:
   777 ;;		_ENVIA_LCD_CMD
   778 ;; This function is called by:
   779 ;;		_lcd_init
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text4
   784  000D7E                     __ptext4:
   785                           	callstack 0
   786  000D7E                     _CURSOR_HOME:
   787                           	callstack 27
   788  000D7E                     
   789                           ;../20202_c_electron.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   790  000D7E  0E02               	movlw	2
   791  000D80  EC42  F006         	call	_ENVIA_LCD_CMD
   792  000D84  0012               	return		;funcret
   793  000D86                     __end_of_CURSOR_HOME:
   794                           	callstack 0
   795                           
   796 ;; *************** function _BORRAR_LCD *****************
   797 ;; Defined at:
   798 ;;		line 67 in file "../20202_c_electron.X/LCD.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0, cstack
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         0       0       0       0       0       0       0       0       0
   813 ;;      Locals:         0       0       0       0       0       0       0       0       0
   814 ;;      Temps:          0       0       0       0       0       0       0       0       0
   815 ;;      Totals:         0       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		_ENVIA_LCD_CMD
   821 ;; This function is called by:
   822 ;;		_lcd_init
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text5
   827  000D86                     __ptext5:
   828                           	callstack 0
   829  000D86                     _BORRAR_LCD:
   830                           	callstack 27
   831  000D86                     
   832                           ;../20202_c_electron.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   833  000D86  0E01               	movlw	1
   834  000D88  EC42  F006         	call	_ENVIA_LCD_CMD
   835  000D8C  0012               	return		;funcret
   836  000D8E                     __end_of_BORRAR_LCD:
   837                           	callstack 0
   838                           
   839 ;; *************** function _convierte *****************
   840 ;; Defined at:
   841 ;;		line 53 in file "maincode.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  numero          2   12[COMRAM] unsigned int 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         2       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0       0       0       0       0
   858 ;;      Totals:         2       0       0       0       0       0       0       0       0
   859 ;;Total ram usage:        2 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    1
   862 ;; This function calls:
   863 ;;		___lwdiv
   864 ;;		___lwmod
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text6
   871  000922                     __ptext6:
   872                           	callstack 0
   873  000922                     _convierte:
   874                           	callstack 29
   875  000922                     
   876                           ;maincode.c: 54:     d_millar = numero / 10000;
   877  000922  C01D  F016         	movff	convierte@numero,___lwdiv@dividend
   878  000926  C01E  F017         	movff	convierte@numero+1,___lwdiv@dividend+1
   879  00092A  0E27               	movlw	39
   880  00092C  6E19               	movwf	(___lwdiv@divisor+1)^0,c
   881  00092E  0E10               	movlw	16
   882  000930  6E18               	movwf	___lwdiv@divisor^0,c
   883  000932  ECF6  F004         	call	___lwdiv	;wreg free
   884  000936  C016  F029         	movff	?___lwdiv,_d_millar
   885  00093A  C017  F02A         	movff	?___lwdiv+1,_d_millar+1
   886                           
   887                           ;maincode.c: 55:     millar = (numero %10000) /1000;
   888  00093E  0E27               	movlw	39
   889  000940  6E14               	movwf	(___lwmod@divisor+1)^0,c
   890  000942  0E10               	movlw	16
   891  000944  6E13               	movwf	___lwmod@divisor^0,c
   892  000946  C01D  F011         	movff	convierte@numero,___lwmod@dividend
   893  00094A  C01E  F012         	movff	convierte@numero+1,___lwmod@dividend+1
   894  00094E  EC69  F005         	call	___lwmod	;wreg free
   895  000952  C011  F016         	movff	?___lwmod,___lwdiv@dividend
   896  000956  C012  F017         	movff	?___lwmod+1,___lwdiv@dividend+1
   897  00095A  0E03               	movlw	3
   898  00095C  6E19               	movwf	(___lwdiv@divisor+1)^0,c
   899  00095E  0EE8               	movlw	232
   900  000960  6E18               	movwf	___lwdiv@divisor^0,c
   901  000962  ECF6  F004         	call	___lwdiv	;wreg free
   902  000966  C016  F027         	movff	?___lwdiv,_millar
   903  00096A  C017  F028         	movff	?___lwdiv+1,_millar+1
   904                           
   905                           ;maincode.c: 56:     centena = (numero % 1000) / 100;
   906  00096E  0E03               	movlw	3
   907  000970  6E14               	movwf	(___lwmod@divisor+1)^0,c
   908  000972  0EE8               	movlw	232
   909  000974  6E13               	movwf	___lwmod@divisor^0,c
   910  000976  C01D  F011         	movff	convierte@numero,___lwmod@dividend
   911  00097A  C01E  F012         	movff	convierte@numero+1,___lwmod@dividend+1
   912  00097E  EC69  F005         	call	___lwmod	;wreg free
   913  000982  C011  F016         	movff	?___lwmod,___lwdiv@dividend
   914  000986  C012  F017         	movff	?___lwmod+1,___lwdiv@dividend+1
   915  00098A  0E00               	movlw	0
   916  00098C  6E19               	movwf	(___lwdiv@divisor+1)^0,c
   917  00098E  0E64               	movlw	100
   918  000990  6E18               	movwf	___lwdiv@divisor^0,c
   919  000992  ECF6  F004         	call	___lwdiv	;wreg free
   920  000996  C016  F025         	movff	?___lwdiv,_centena
   921  00099A  C017  F026         	movff	?___lwdiv+1,_centena+1
   922                           
   923                           ;maincode.c: 57:     decena = (numero % 100) / 10;
   924  00099E  0E00               	movlw	0
   925  0009A0  6E14               	movwf	(___lwmod@divisor+1)^0,c
   926  0009A2  0E64               	movlw	100
   927  0009A4  6E13               	movwf	___lwmod@divisor^0,c
   928  0009A6  C01D  F011         	movff	convierte@numero,___lwmod@dividend
   929  0009AA  C01E  F012         	movff	convierte@numero+1,___lwmod@dividend+1
   930  0009AE  EC69  F005         	call	___lwmod	;wreg free
   931  0009B2  C011  F016         	movff	?___lwmod,___lwdiv@dividend
   932  0009B6  C012  F017         	movff	?___lwmod+1,___lwdiv@dividend+1
   933  0009BA  0E00               	movlw	0
   934  0009BC  6E19               	movwf	(___lwdiv@divisor+1)^0,c
   935  0009BE  0E0A               	movlw	10
   936  0009C0  6E18               	movwf	___lwdiv@divisor^0,c
   937  0009C2  ECF6  F004         	call	___lwdiv	;wreg free
   938  0009C6  C016  F023         	movff	?___lwdiv,_decena
   939  0009CA  C017  F024         	movff	?___lwdiv+1,_decena+1
   940                           
   941                           ;maincode.c: 58:     unidad = numero % 10;
   942  0009CE  C01D  F011         	movff	convierte@numero,___lwmod@dividend
   943  0009D2  C01E  F012         	movff	convierte@numero+1,___lwmod@dividend+1
   944  0009D6  0E00               	movlw	0
   945  0009D8  6E14               	movwf	(___lwmod@divisor+1)^0,c
   946  0009DA  0E0A               	movlw	10
   947  0009DC  6E13               	movwf	___lwmod@divisor^0,c
   948  0009DE  EC69  F005         	call	___lwmod	;wreg free
   949  0009E2  C011  F021         	movff	?___lwmod,_unidad
   950  0009E6  C012  F022         	movff	?___lwmod+1,_unidad+1
   951  0009EA  0012               	return		;funcret
   952  0009EC                     __end_of_convierte:
   953                           	callstack 0
   954                           
   955 ;; *************** function ___lwmod *****************
   956 ;; Defined at:
   957 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  dividend        2    0[COMRAM] unsigned int 
   960 ;;  divisor         2    2[COMRAM] unsigned int 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  counter         1    4[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  2    0[COMRAM] unsigned int 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   972 ;;      Params:         4       0       0       0       0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0
   975 ;;      Totals:         5       0       0       0       0       0       0       0       0
   976 ;;Total ram usage:        5 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_convierte
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text7
   986  000AD2                     __ptext7:
   987                           	callstack 0
   988  000AD2                     ___lwmod:
   989                           	callstack 29
   990  000AD2  5013               	movf	___lwmod@divisor^0,w,c
   991  000AD4  1014               	iorwf	(___lwmod@divisor+1)^0,w,c
   992  000AD6  B4D8               	btfsc	status,2,c
   993  000AD8  EF70  F005         	goto	u221
   994  000ADC  EF72  F005         	goto	u220
   995  000AE0                     u221:
   996  000AE0  EF96  F005         	goto	l646
   997  000AE4                     u220:
   998  000AE4  0E01               	movlw	1
   999  000AE6  6E15               	movwf	___lwmod@counter^0,c
  1000  000AE8  EF7A  F005         	goto	l1118
  1001  000AEC                     l1116:
  1002  000AEC  90D8               	bcf	status,0,c
  1003  000AEE  3613               	rlcf	___lwmod@divisor^0,f,c
  1004  000AF0  3614               	rlcf	(___lwmod@divisor+1)^0,f,c
  1005  000AF2  2A15               	incf	___lwmod@counter^0,f,c
  1006  000AF4                     l1118:
  1007  000AF4  AE14               	btfss	(___lwmod@divisor+1)^0,7,c
  1008  000AF6  EF7F  F005         	goto	u231
  1009  000AFA  EF81  F005         	goto	u230
  1010  000AFE                     u231:
  1011  000AFE  EF76  F005         	goto	l1116
  1012  000B02                     u230:
  1013  000B02                     l1120:
  1014  000B02  5013               	movf	___lwmod@divisor^0,w,c
  1015  000B04  5C11               	subwf	___lwmod@dividend^0,w,c
  1016  000B06  5014               	movf	(___lwmod@divisor+1)^0,w,c
  1017  000B08  5812               	subwfb	(___lwmod@dividend+1)^0,w,c
  1018  000B0A  A0D8               	btfss	status,0,c
  1019  000B0C  EF8A  F005         	goto	u241
  1020  000B10  EF8C  F005         	goto	u240
  1021  000B14                     u241:
  1022  000B14  EF90  F005         	goto	l1124
  1023  000B18                     u240:
  1024  000B18  5013               	movf	___lwmod@divisor^0,w,c
  1025  000B1A  5E11               	subwf	___lwmod@dividend^0,f,c
  1026  000B1C  5014               	movf	(___lwmod@divisor+1)^0,w,c
  1027  000B1E  5A12               	subwfb	(___lwmod@dividend+1)^0,f,c
  1028  000B20                     l1124:
  1029  000B20  90D8               	bcf	status,0,c
  1030  000B22  3214               	rrcf	(___lwmod@divisor+1)^0,f,c
  1031  000B24  3213               	rrcf	___lwmod@divisor^0,f,c
  1032  000B26  2E15               	decfsz	___lwmod@counter^0,f,c
  1033  000B28  EF81  F005         	goto	l1120
  1034  000B2C                     l646:
  1035  000B2C  C011  F011         	movff	___lwmod@dividend,?___lwmod
  1036  000B30  C012  F012         	movff	___lwmod@dividend+1,?___lwmod+1
  1037  000B34  0012               	return		;funcret
  1038  000B36                     __end_of___lwmod:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function ___lwdiv *****************
  1042 ;; Defined at:
  1043 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  dividend        2    5[COMRAM] unsigned int 
  1046 ;;  divisor         2    7[COMRAM] unsigned int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  quotient        2    9[COMRAM] unsigned int 
  1049 ;;  counter         1   11[COMRAM] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2    5[COMRAM] unsigned int 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         4       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        7 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_convierte
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text8
  1074  0009EC                     __ptext8:
  1075                           	callstack 0
  1076  0009EC                     ___lwdiv:
  1077                           	callstack 29
  1078  0009EC  0E00               	movlw	0
  1079  0009EE  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
  1080  0009F0  0E00               	movlw	0
  1081  0009F2  6E1A               	movwf	___lwdiv@quotient^0,c
  1082  0009F4  5018               	movf	___lwdiv@divisor^0,w,c
  1083  0009F6  1019               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1084  0009F8  B4D8               	btfsc	status,2,c
  1085  0009FA  EF01  F005         	goto	u191
  1086  0009FE  EF03  F005         	goto	u190
  1087  000A02                     u191:
  1088  000A02  EF2B  F005         	goto	l636
  1089  000A06                     u190:
  1090  000A06  0E01               	movlw	1
  1091  000A08  6E1C               	movwf	___lwdiv@counter^0,c
  1092  000A0A  EF0B  F005         	goto	l1098
  1093  000A0E                     l1096:
  1094  000A0E  90D8               	bcf	status,0,c
  1095  000A10  3618               	rlcf	___lwdiv@divisor^0,f,c
  1096  000A12  3619               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1097  000A14  2A1C               	incf	___lwdiv@counter^0,f,c
  1098  000A16                     l1098:
  1099  000A16  AE19               	btfss	(___lwdiv@divisor+1)^0,7,c
  1100  000A18  EF10  F005         	goto	u201
  1101  000A1C  EF12  F005         	goto	u200
  1102  000A20                     u201:
  1103  000A20  EF07  F005         	goto	l1096
  1104  000A24                     u200:
  1105  000A24                     l1100:
  1106  000A24  90D8               	bcf	status,0,c
  1107  000A26  361A               	rlcf	___lwdiv@quotient^0,f,c
  1108  000A28  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1109  000A2A  5018               	movf	___lwdiv@divisor^0,w,c
  1110  000A2C  5C16               	subwf	___lwdiv@dividend^0,w,c
  1111  000A2E  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  1112  000A30  5817               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1113  000A32  A0D8               	btfss	status,0,c
  1114  000A34  EF1E  F005         	goto	u211
  1115  000A38  EF20  F005         	goto	u210
  1116  000A3C                     u211:
  1117  000A3C  EF25  F005         	goto	l1108
  1118  000A40                     u210:
  1119  000A40  5018               	movf	___lwdiv@divisor^0,w,c
  1120  000A42  5E16               	subwf	___lwdiv@dividend^0,f,c
  1121  000A44  5019               	movf	(___lwdiv@divisor+1)^0,w,c
  1122  000A46  5A17               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1123  000A48  801A               	bsf	___lwdiv@quotient^0,0,c
  1124  000A4A                     l1108:
  1125  000A4A  90D8               	bcf	status,0,c
  1126  000A4C  3219               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1127  000A4E  3218               	rrcf	___lwdiv@divisor^0,f,c
  1128  000A50  2E1C               	decfsz	___lwdiv@counter^0,f,c
  1129  000A52  EF12  F005         	goto	l1100
  1130  000A56                     l636:
  1131  000A56  C01A  F016         	movff	___lwdiv@quotient,?___lwdiv
  1132  000A5A  C01B  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1133  000A5E  0012               	return		;funcret
  1134  000A60                     __end_of___lwdiv:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _adc_init *****************
  1138 ;; Defined at:
  1139 ;;		line 47 in file "maincode.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        0 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_main
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text9
  1167  000D70                     __ptext9:
  1168                           	callstack 0
  1169  000D70                     _adc_init:
  1170                           	callstack 30
  1171  000D70                     
  1172                           ;maincode.c: 48:     ADCON2 = 0xA4;
  1173  000D70  0EA4               	movlw	164
  1174  000D72  6EC0               	movwf	192,c	;volatile
  1175                           
  1176                           ;maincode.c: 49:     ADCON1 = 0x1B;
  1177  000D74  0E1B               	movlw	27
  1178  000D76  6EC1               	movwf	193,c	;volatile
  1179                           
  1180                           ;maincode.c: 50:     ADCON0 = 0x01;
  1181  000D78  0E01               	movlw	1
  1182  000D7A  6EC2               	movwf	194,c	;volatile
  1183  000D7C  0012               	return		;funcret
  1184  000D7E                     __end_of_adc_init:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _POS_CURSOR *****************
  1188 ;; Defined at:
  1189 ;;		line 6 in file "../20202_c_electron.X/LCD.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  fila            1    wreg     unsigned char 
  1192 ;;  columna         1    3[COMRAM] unsigned char 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  fila            1    4[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         1       0       0       0       0       0       0       0       0
  1205 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    2
  1211 ;; This function calls:
  1212 ;;		_ENVIA_LCD_CMD
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text10
  1219  000C4A                     __ptext10:
  1220                           	callstack 0
  1221  000C4A                     _POS_CURSOR:
  1222                           	callstack 28
  1223                           
  1224                           ;incstack = 0
  1225                           ;POS_CURSOR@fila stored from wreg
  1226  000C4A  6E15               	movwf	POS_CURSOR@fila^0,c
  1227  000C4C                     
  1228                           ;../20202_c_electron.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char column
      +                          a);../20202_c_electron.X/LCD.c: 7: {;../20202_c_electron.X/LCD.c: 8:  if(fila == 1)
  1229  000C4C  0415               	decf	POS_CURSOR@fila^0,w,c
  1230  000C4E  A4D8               	btfss	status,2,c
  1231  000C50  EF2C  F006         	goto	u251
  1232  000C54  EF2E  F006         	goto	u250
  1233  000C58                     u251:
  1234  000C58  EF34  F006         	goto	l1132
  1235  000C5C                     u250:
  1236  000C5C                     
  1237                           ;../20202_c_electron.X/LCD.c: 9:  {;../20202_c_electron.X/LCD.c: 10:   ENVIA_LCD_CMD(0x8
      +                          0+columna);
  1238  000C5C  5014               	movf	POS_CURSOR@columna^0,w,c
  1239  000C5E  0F80               	addlw	128
  1240  000C60  EC42  F006         	call	_ENVIA_LCD_CMD
  1241                           
  1242                           ;../20202_c_electron.X/LCD.c: 11:  }
  1243  000C64  EF41  F006         	goto	l24
  1244  000C68                     l1132:
  1245  000C68  0E02               	movlw	2
  1246  000C6A  1815               	xorwf	POS_CURSOR@fila^0,w,c
  1247  000C6C  A4D8               	btfss	status,2,c
  1248  000C6E  EF3B  F006         	goto	u261
  1249  000C72  EF3D  F006         	goto	u260
  1250  000C76                     u261:
  1251  000C76  EF41  F006         	goto	l24
  1252  000C7A                     u260:
  1253  000C7A                     
  1254                           ;../20202_c_electron.X/LCD.c: 13:  {;../20202_c_electron.X/LCD.c: 14:   ENVIA_LCD_CMD(0x
      +                          C0+columna);
  1255  000C7A  5014               	movf	POS_CURSOR@columna^0,w,c
  1256  000C7C  0FC0               	addlw	192
  1257  000C7E  EC42  F006         	call	_ENVIA_LCD_CMD
  1258  000C82                     l24:
  1259  000C82  0012               	return		;funcret
  1260  000C84                     __end_of_POS_CURSOR:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function _GENERACARACTER *****************
  1264 ;; Defined at:
  1265 ;;		line 153 in file "../20202_c_electron.X/LCD.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  1268 ;;		 -> cara_feliz(8), o_tilde(8), 
  1269 ;;  pos             1    5[COMRAM] unsigned char 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  i               1    6[COMRAM] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         3       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        4 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    2
  1288 ;; This function calls:
  1289 ;;		_ENVIA_CHAR
  1290 ;;		_ENVIA_LCD_CMD
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text11
  1297  000BD4                     __ptext11:
  1298                           	callstack 0
  1299  000BD4                     _GENERACARACTER:
  1300                           	callstack 28
  1301  000BD4                     
  1302                           ;../20202_c_electron.X/LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsig
      +                          ned char pos);../20202_c_electron.X/LCD.c: 154: {;../20202_c_electron.X/LCD.c: 155:  uns
      +                          igned char i;;../20202_c_electron.X/LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1303  000BD4  5016               	movf	GENERACARACTER@pos^0,w,c
  1304  000BD6  0D08               	mullw	8
  1305  000BD8  50F3               	movf	243,w,c
  1306  000BDA  0F40               	addlw	64
  1307  000BDC  EC42  F006         	call	_ENVIA_LCD_CMD
  1308  000BE0                     
  1309                           ;../20202_c_electron.X/LCD.c: 157:  for(i=0;i<8;i++)
  1310  000BE0  0E00               	movlw	0
  1311  000BE2  6E17               	movwf	GENERACARACTER@i^0,c
  1312  000BE4                     l1152:
  1313                           
  1314                           ;../20202_c_electron.X/LCD.c: 158:  {;../20202_c_electron.X/LCD.c: 159:   ENVIA_CHAR(vec
      +                          tor[i]);
  1315  000BE4  5017               	movf	GENERACARACTER@i^0,w,c
  1316  000BE6  2414               	addwf	GENERACARACTER@vector^0,w,c
  1317  000BE8  6ED9               	movwf	fsr2l,c
  1318  000BEA  0E00               	movlw	0
  1319  000BEC  2015               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1320  000BEE  6EDA               	movwf	fsr2h,c
  1321  000BF0  50DF               	movf	indf2,w,c
  1322  000BF2  EC5C  F006         	call	_ENVIA_CHAR
  1323  000BF6                     
  1324                           ;../20202_c_electron.X/LCD.c: 160:  }
  1325  000BF6  2A17               	incf	GENERACARACTER@i^0,f,c
  1326  000BF8  0E07               	movlw	7
  1327  000BFA  6417               	cpfsgt	GENERACARACTER@i^0,c
  1328  000BFC  EF02  F006         	goto	u281
  1329  000C00  EF04  F006         	goto	u280
  1330  000C04                     u281:
  1331  000C04  EFF2  F005         	goto	l1152
  1332  000C08                     u280:
  1333  000C08                     
  1334                           ;../20202_c_electron.X/LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1335  000C08  0E80               	movlw	128
  1336  000C0A  EC42  F006         	call	_ENVIA_LCD_CMD
  1337  000C0E  0012               	return		;funcret
  1338  000C10                     __end_of_GENERACARACTER:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _ENVIA_LCD_CMD *****************
  1342 ;; Defined at:
  1343 ;;		line 104 in file "../20202_c_electron.X/LCD.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  dato            1    wreg     unsigned char 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  dato            1    1[COMRAM] unsigned char 
  1348 ;;  aux             1    2[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1358 ;;      Params:         0       0       0       0       0       0       0       0       0
  1359 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1361 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    1
  1365 ;; This function calls:
  1366 ;;		_ENVIA_NIBBLE
  1367 ;;		_LEER_LCD
  1368 ;; This function is called by:
  1369 ;;		_POS_CURSOR
  1370 ;;		_CURSOR_HOME
  1371 ;;		_CURSOR_ONOFF
  1372 ;;		_BORRAR_LCD
  1373 ;;		_LCD_CONFIG
  1374 ;;		_GENERACARACTER
  1375 ;;		_BLINK_CURSOR
  1376 ;;		_DISPLAY_ONOFF
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text12
  1381  000C84                     __ptext12:
  1382                           	callstack 0
  1383  000C84                     _ENVIA_LCD_CMD:
  1384                           	callstack 27
  1385                           
  1386                           ;incstack = 0
  1387                           ;ENVIA_LCD_CMD@dato stored from wreg
  1388  000C84  6E12               	movwf	ENVIA_LCD_CMD@dato^0,c
  1389  000C86                     
  1390                           ;../20202_c_electron.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20202_c_ele
      +                          ctron.X/LCD.c: 105: {;../20202_c_electron.X/LCD.c: 106:  unsigned char aux;;../20202_c_e
      +                          lectron.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  1391  000C86  908C               	bcf	140,0,c	;volatile
  1392  000C88                     
  1393                           ;../20202_c_electron.X/LCD.c: 108:  LEER_LCD();
  1394  000C88  EC30  F005         	call	_LEER_LCD	;wreg free
  1395  000C8C                     
  1396                           ;../20202_c_electron.X/LCD.c: 109:  TRISD = 0b00000000;
  1397  000C8C  0E00               	movlw	0
  1398  000C8E  6E95               	movwf	149,c	;volatile
  1399  000C90                     
  1400                           ;../20202_c_electron.X/LCD.c: 111:         _delay(1200);
  1401  000C90  0EF0               	movlw	240
  1402  000C92                     u347:
  1403  000C92  D000               	nop2	
  1404  000C94  2EE8               	decfsz	wreg,f,c
  1405  000C96  D7FD               	bra	u347
  1406  000C98                     
  1407                           ;../20202_c_electron.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  1408  000C98  928C               	bcf	140,1,c	;volatile
  1409  000C9A                     
  1410                           ;../20202_c_electron.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  1411  000C9A  948C               	bcf	140,2,c	;volatile
  1412  000C9C                     
  1413                           ;../20202_c_electron.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  1414  000C9C  908C               	bcf	140,0,c	;volatile
  1415  000C9E                     
  1416                           ;../20202_c_electron.X/LCD.c: 115:  aux = dato & 0xF0;
  1417  000C9E  5012               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1418  000CA0  0BF0               	andlw	240
  1419  000CA2  6E13               	movwf	ENVIA_LCD_CMD@aux^0,c
  1420  000CA4                     
  1421                           ;../20202_c_electron.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  1422  000CA4  5013               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1423  000CA6  ECA2  F006         	call	_ENVIA_NIBBLE
  1424  000CAA                     
  1425                           ;../20202_c_electron.X/LCD.c: 117:  aux = dato<<4;
  1426  000CAA  3812               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1427  000CAC  0BF0               	andlw	240
  1428  000CAE  6E13               	movwf	ENVIA_LCD_CMD@aux^0,c
  1429  000CB0                     
  1430                           ;../20202_c_electron.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  1431  000CB0  5013               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1432  000CB2  ECA2  F006         	call	_ENVIA_NIBBLE
  1433  000CB6  0012               	return		;funcret
  1434  000CB8                     __end_of_ENVIA_LCD_CMD:
  1435                           	callstack 0
  1436                           
  1437 ;; *************** function _ESCRIBE_MENSAJE *****************
  1438 ;; Defined at:
  1439 ;;		line 41 in file "../20202_c_electron.X/LCD.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1442 ;;		 -> STR_4(2), STR_3(7), STR_2(13), STR_1(5), 
  1443 ;;  tam             1    5[COMRAM] unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  i               1    8[COMRAM] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1455 ;;      Params:         3       0       0       0       0       0       0       0       0
  1456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1457 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1458 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1459 ;;Total ram usage:        6 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    2
  1462 ;; This function calls:
  1463 ;;		_ENVIA_CHAR
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text13
  1470  000B96                     __ptext13:
  1471                           	callstack 0
  1472  000B96                     _ESCRIBE_MENSAJE:
  1473                           	callstack 28
  1474  000B96                     
  1475                           ;../20202_c_electron.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char 
      +                          tam);../20202_c_electron.X/LCD.c: 42: {;../20202_c_electron.X/LCD.c: 43:  unsigned char 
      +                          i = 0;
  1476  000B96  0E00               	movlw	0
  1477  000B98  6E19               	movwf	ESCRIBE_MENSAJE@i^0,c
  1478                           
  1479                           ;../20202_c_electron.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  1480  000B9A  0E00               	movlw	0
  1481  000B9C  6E19               	movwf	ESCRIBE_MENSAJE@i^0,c
  1482  000B9E  EFE0  F005         	goto	l1142
  1483  000BA2                     l1138:
  1484                           
  1485                           ;../20202_c_electron.X/LCD.c: 45:  {;../20202_c_electron.X/LCD.c: 46:   ENVIA_CHAR(caden
      +                          a[i]);
  1486  000BA2  5019               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1487  000BA4  2414               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1488  000BA6  6E17               	movwf	??_ESCRIBE_MENSAJE^0,c
  1489  000BA8  0E00               	movlw	0
  1490  000BAA  2015               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1491  000BAC  6E18               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1492  000BAE  C017  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1493  000BB2  C018  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1494  000BB6                     	if	0	;tblptru may be non-zero
  1495  000BB6                     	endif
  1496  000BB6                     	if	0	;tblptru may be non-zero
  1497  000BB6                     	endif
  1498  000BB6  0008               	tblrd		*
  1499  000BB8  50F5               	movf	tablat,w,c
  1500  000BBA  EC5C  F006         	call	_ENVIA_CHAR
  1501  000BBE                     
  1502                           ;../20202_c_electron.X/LCD.c: 47:  }
  1503  000BBE  2A19               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1504  000BC0                     l1142:
  1505  000BC0  5016               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1506  000BC2  5C19               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1507  000BC4  A0D8               	btfss	status,0,c
  1508  000BC6  EFE7  F005         	goto	u271
  1509  000BCA  EFE9  F005         	goto	u270
  1510  000BCE                     u271:
  1511  000BCE  EFD1  F005         	goto	l1138
  1512  000BD2                     u270:
  1513  000BD2  0012               	return		;funcret
  1514  000BD4                     __end_of_ESCRIBE_MENSAJE:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _ENVIA_CHAR *****************
  1518 ;; Defined at:
  1519 ;;		line 50 in file "../20202_c_electron.X/LCD.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  dato            1    wreg     unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  dato            1    1[COMRAM] unsigned char 
  1524 ;;  aux             1    2[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0
  1535 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1537 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    1
  1541 ;; This function calls:
  1542 ;;		_ENVIA_NIBBLE
  1543 ;;		_LEER_LCD
  1544 ;; This function is called by:
  1545 ;;		_ESCRIBE_MENSAJE
  1546 ;;		_GENERACARACTER
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text14
  1552  000CB8                     __ptext14:
  1553                           	callstack 0
  1554  000CB8                     _ENVIA_CHAR:
  1555                           	callstack 28
  1556                           
  1557                           ;incstack = 0
  1558                           ;ENVIA_CHAR@dato stored from wreg
  1559  000CB8  6E12               	movwf	ENVIA_CHAR@dato^0,c
  1560  000CBA                     
  1561                           ;../20202_c_electron.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20202_c_electro
      +                          n.X/LCD.c: 51: {;../20202_c_electron.X/LCD.c: 52:  unsigned char aux;;../20202_c_electro
      +                          n.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  1562  000CBA  808C               	bsf	140,0,c	;volatile
  1563  000CBC                     
  1564                           ;../20202_c_electron.X/LCD.c: 54:  LEER_LCD();
  1565  000CBC  EC30  F005         	call	_LEER_LCD	;wreg free
  1566  000CC0                     
  1567                           ;../20202_c_electron.X/LCD.c: 55:  TRISD = 0x00;
  1568  000CC0  0E00               	movlw	0
  1569  000CC2  6E95               	movwf	149,c	;volatile
  1570  000CC4                     
  1571                           ;../20202_c_electron.X/LCD.c: 56:         _delay(1200);
  1572  000CC4  0EF0               	movlw	240
  1573  000CC6                     u357:
  1574  000CC6  D000               	nop2	
  1575  000CC8  2EE8               	decfsz	wreg,f,c
  1576  000CCA  D7FD               	bra	u357
  1577  000CCC                     
  1578                           ;../20202_c_electron.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1579  000CCC  928C               	bcf	140,1,c	;volatile
  1580  000CCE                     
  1581                           ;../20202_c_electron.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1582  000CCE  948C               	bcf	140,2,c	;volatile
  1583  000CD0                     
  1584                           ;../20202_c_electron.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1585  000CD0  808C               	bsf	140,0,c	;volatile
  1586  000CD2                     
  1587                           ;../20202_c_electron.X/LCD.c: 61:  aux = dato & 0xF0;
  1588  000CD2  5012               	movf	ENVIA_CHAR@dato^0,w,c
  1589  000CD4  0BF0               	andlw	240
  1590  000CD6  6E13               	movwf	ENVIA_CHAR@aux^0,c
  1591  000CD8                     
  1592                           ;../20202_c_electron.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1593  000CD8  5013               	movf	ENVIA_CHAR@aux^0,w,c
  1594  000CDA  ECA2  F006         	call	_ENVIA_NIBBLE
  1595  000CDE                     
  1596                           ;../20202_c_electron.X/LCD.c: 63:  aux = dato << 4;
  1597  000CDE  3812               	swapf	ENVIA_CHAR@dato^0,w,c
  1598  000CE0  0BF0               	andlw	240
  1599  000CE2  6E13               	movwf	ENVIA_CHAR@aux^0,c
  1600  000CE4                     
  1601                           ;../20202_c_electron.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1602  000CE4  5013               	movf	ENVIA_CHAR@aux^0,w,c
  1603  000CE6  ECA2  F006         	call	_ENVIA_NIBBLE
  1604  000CEA  0012               	return		;funcret
  1605  000CEC                     __end_of_ENVIA_CHAR:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _LEER_LCD *****************
  1609 ;; Defined at:
  1610 ;;		line 121 in file "../20202_c_electron.X/LCD.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  aux             1    0[COMRAM] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0
  1625 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1627 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1628 ;;Total ram usage:        1 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_ENVIA_CHAR
  1634 ;;		_ENVIA_LCD_CMD
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text15
  1639  000A60                     __ptext15:
  1640                           	callstack 0
  1641  000A60                     _LEER_LCD:
  1642                           	callstack 27
  1643  000A60                     
  1644                           ;../20202_c_electron.X/LCD.c: 123:  unsigned char aux;;../20202_c_electron.X/LCD.c: 124:
      +                            TRISD = 0xF8;
  1645  000A60  0EF8               	movlw	248
  1646  000A62  6E95               	movwf	149,c	;volatile
  1647  000A64                     
  1648                           ;../20202_c_electron.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1649  000A64  908C               	bcf	140,0,c	;volatile
  1650  000A66                     
  1651                           ;../20202_c_electron.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1652  000A66  828C               	bsf	140,1,c	;volatile
  1653  000A68                     
  1654                           ;../20202_c_electron.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1655  000A68  848C               	bsf	140,2,c	;volatile
  1656  000A6A                     
  1657                           ;../20202_c_electron.X/LCD.c: 128:         _delay(1200);
  1658  000A6A  0EF0               	movlw	240
  1659  000A6C                     u367:
  1660  000A6C  D000               	nop2	
  1661  000A6E  2EE8               	decfsz	wreg,f,c
  1662  000A70  D7FD               	bra	u367
  1663  000A72                     
  1664                           ;../20202_c_electron.X/LCD.c: 130:  aux = PORTD;
  1665  000A72  CF83 F011          	movff	3971,LEER_LCD@aux	;volatile
  1666  000A76                     
  1667                           ;../20202_c_electron.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1668  000A76  948C               	bcf	140,2,c	;volatile
  1669  000A78                     
  1670                           ;../20202_c_electron.X/LCD.c: 132:         _delay(1200);
  1671  000A78  0EF0               	movlw	240
  1672  000A7A                     u377:
  1673  000A7A  D000               	nop2	
  1674  000A7C  2EE8               	decfsz	wreg,f,c
  1675  000A7E  D7FD               	bra	u377
  1676  000A80                     
  1677                           ;../20202_c_electron.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1678  000A80  848C               	bsf	140,2,c	;volatile
  1679  000A82                     
  1680                           ;../20202_c_electron.X/LCD.c: 135:         _delay(1200);
  1681  000A82  0EF0               	movlw	240
  1682  000A84                     u387:
  1683  000A84  D000               	nop2	
  1684  000A86  2EE8               	decfsz	wreg,f,c
  1685  000A88  D7FD               	bra	u387
  1686  000A8A                     
  1687                           ;../20202_c_electron.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1688  000A8A  948C               	bcf	140,2,c	;volatile
  1689  000A8C                     l840:
  1690                           
  1691                           ;../20202_c_electron.X/LCD.c: 138:  aux = aux & 0x80;
  1692  000A8C  5011               	movf	LEER_LCD@aux^0,w,c
  1693  000A8E  0B80               	andlw	128
  1694  000A90  6E11               	movwf	LEER_LCD@aux^0,c
  1695                           
  1696                           ;../20202_c_electron.X/LCD.c: 139:  while(aux == 0x80)
  1697  000A92  EF5F  F005         	goto	l854
  1698  000A96                     l67:
  1699                           
  1700                           ;../20202_c_electron.X/LCD.c: 140:         {;../20202_c_electron.X/LCD.c: 141:          
      +                             LATDbits.LATD2 = 1;
  1701  000A96  848C               	bsf	140,2,c	;volatile
  1702  000A98                     
  1703                           ;../20202_c_electron.X/LCD.c: 142:             _delay(1200);
  1704  000A98  0EF0               	movlw	240
  1705  000A9A                     u397:
  1706  000A9A  D000               	nop2	
  1707  000A9C  2EE8               	decfsz	wreg,f,c
  1708  000A9E  D7FD               	bra	u397
  1709  000AA0                     
  1710                           ;../20202_c_electron.X/LCD.c: 143:             aux = PORTD;
  1711  000AA0  CF83 F011          	movff	3971,LEER_LCD@aux	;volatile
  1712  000AA4                     
  1713                           ;../20202_c_electron.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1714  000AA4  948C               	bcf	140,2,c	;volatile
  1715                           
  1716                           ;../20202_c_electron.X/LCD.c: 145:             _delay(1200);
  1717  000AA6  0EF0               	movlw	240
  1718  000AA8                     u407:
  1719  000AA8  D000               	nop2	
  1720  000AAA  2EE8               	decfsz	wreg,f,c
  1721  000AAC  D7FD               	bra	u407
  1722  000AAE                     
  1723                           ;../20202_c_electron.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1724  000AAE  848C               	bsf	140,2,c	;volatile
  1725                           
  1726                           ;../20202_c_electron.X/LCD.c: 147:             _delay(1200);
  1727  000AB0  0EF0               	movlw	240
  1728  000AB2                     u417:
  1729  000AB2  D000               	nop2	
  1730  000AB4  2EE8               	decfsz	wreg,f,c
  1731  000AB6  D7FD               	bra	u417
  1732  000AB8                     
  1733                           ;../20202_c_electron.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1734  000AB8  948C               	bcf	140,2,c	;volatile
  1735  000ABA  EF46  F005         	goto	l840
  1736  000ABE                     l854:
  1737                           
  1738                           ;../20202_c_electron.X/LCD.c: 139:  while(aux == 0x80)
  1739  000ABE  0E80               	movlw	128
  1740  000AC0  1811               	xorwf	LEER_LCD@aux^0,w,c
  1741  000AC2  B4D8               	btfsc	status,2,c
  1742  000AC4  EF66  F005         	goto	u11
  1743  000AC8  EF68  F005         	goto	u10
  1744  000ACC                     u11:
  1745  000ACC  EF4B  F005         	goto	l67
  1746  000AD0                     u10:
  1747  000AD0  0012               	return		;funcret
  1748  000AD2                     __end_of_LEER_LCD:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _ENVIA_NIBBLE *****************
  1752 ;; Defined at:
  1753 ;;		line 93 in file "../20202_c_electron.X/LCD.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  dato            1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  dato            1    0[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         0       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        1 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_ENVIA_CHAR
  1777 ;;		_LCD_CONFIG
  1778 ;;		_ENVIA_LCD_CMD
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text16
  1783  000D44                     __ptext16:
  1784                           	callstack 0
  1785  000D44                     _ENVIA_NIBBLE:
  1786                           	callstack 28
  1787                           
  1788                           ;incstack = 0
  1789                           ;ENVIA_NIBBLE@dato stored from wreg
  1790  000D44  6E11               	movwf	ENVIA_NIBBLE@dato^0,c
  1791  000D46                     
  1792                           ;../20202_c_electron.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20202_c_elect
      +                          ron.X/LCD.c: 94: {;../20202_c_electron.X/LCD.c: 95:  LATD &= 0x0F;
  1793  000D46  0E0F               	movlw	15
  1794  000D48  168C               	andwf	140,f,c	;volatile
  1795                           
  1796                           ;../20202_c_electron.X/LCD.c: 96:  dato &= 0xF0;
  1797  000D4A  0EF0               	movlw	240
  1798  000D4C  1611               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1799                           
  1800                           ;../20202_c_electron.X/LCD.c: 97:  LATD|= dato;
  1801  000D4E  5011               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1802  000D50  128C               	iorwf	140,f,c	;volatile
  1803  000D52                     
  1804                           ;../20202_c_electron.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1805  000D52  848C               	bsf	140,2,c	;volatile
  1806  000D54                     
  1807                           ;../20202_c_electron.X/LCD.c: 100:         _delay(1200);
  1808  000D54  0EF0               	movlw	240
  1809  000D56                     u427:
  1810  000D56  D000               	nop2	
  1811  000D58  2EE8               	decfsz	wreg,f,c
  1812  000D5A  D7FD               	bra	u427
  1813  000D5C                     
  1814                           ;../20202_c_electron.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1815  000D5C  948C               	bcf	140,2,c	;volatile
  1816  000D5E  0012               	return		;funcret
  1817  000D60                     __end_of_ENVIA_NIBBLE:
  1818                           	callstack 0
  1819                           
  1820                           	psect	rparam
  1821  0000                     
  1822                           	psect	idloc
  1823                           
  1824                           ;Config register IDLOC0 @ 0x200000
  1825                           ;	unspecified, using default values
  1826  200000                     	org	2097152
  1827  200000  FF                 	db	255
  1828                           
  1829                           ;Config register IDLOC1 @ 0x200001
  1830                           ;	unspecified, using default values
  1831  200001                     	org	2097153
  1832  200001  FF                 	db	255
  1833                           
  1834                           ;Config register IDLOC2 @ 0x200002
  1835                           ;	unspecified, using default values
  1836  200002                     	org	2097154
  1837  200002  FF                 	db	255
  1838                           
  1839                           ;Config register IDLOC3 @ 0x200003
  1840                           ;	unspecified, using default values
  1841  200003                     	org	2097155
  1842  200003  FF                 	db	255
  1843                           
  1844                           ;Config register IDLOC4 @ 0x200004
  1845                           ;	unspecified, using default values
  1846  200004                     	org	2097156
  1847  200004  FF                 	db	255
  1848                           
  1849                           ;Config register IDLOC5 @ 0x200005
  1850                           ;	unspecified, using default values
  1851  200005                     	org	2097157
  1852  200005  FF                 	db	255
  1853                           
  1854                           ;Config register IDLOC6 @ 0x200006
  1855                           ;	unspecified, using default values
  1856  200006                     	org	2097158
  1857  200006  FF                 	db	255
  1858                           
  1859                           ;Config register IDLOC7 @ 0x200007
  1860                           ;	unspecified, using default values
  1861  200007                     	org	2097159
  1862  200007  FF                 	db	255
  1863                           
  1864                           	psect	config
  1865                           
  1866                           ;Config register CONFIG1L @ 0x300000
  1867                           ;	PLL Prescaler Selection bits
  1868                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1869                           ;	System Clock Postscaler Selection bits
  1870                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1871                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1872                           ;	USBDIV = 0x0, unprogrammed default
  1873  300000                     	org	3145728
  1874  300000  00                 	db	0
  1875                           
  1876                           ;Config register CONFIG1H @ 0x300001
  1877                           ;	Oscillator Selection bits
  1878                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1879                           ;	Fail-Safe Clock Monitor Enable bit
  1880                           ;	FCMEN = 0x0, unprogrammed default
  1881                           ;	Internal/External Oscillator Switchover bit
  1882                           ;	IESO = 0x0, unprogrammed default
  1883  300001                     	org	3145729
  1884  300001  02                 	db	2
  1885                           
  1886                           ;Config register CONFIG2L @ 0x300002
  1887                           ;	Power-up Timer Enable bit
  1888                           ;	PWRT = ON, PWRT enabled
  1889                           ;	Brown-out Reset Enable bits
  1890                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1891                           ;	Brown-out Reset Voltage bits
  1892                           ;	BORV = 0x3, unprogrammed default
  1893                           ;	USB Voltage Regulator Enable bit
  1894                           ;	VREGEN = 0x0, unprogrammed default
  1895  300002                     	org	3145730
  1896  300002  18                 	db	24
  1897                           
  1898                           ;Config register CONFIG2H @ 0x300003
  1899                           ;	Watchdog Timer Enable bit
  1900                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1901                           ;	Watchdog Timer Postscale Select bits
  1902                           ;	WDTPS = 0xF, unprogrammed default
  1903  300003                     	org	3145731
  1904  300003  1E                 	db	30
  1905                           
  1906                           ; Padding undefined space
  1907  300004                     	org	3145732
  1908  300004  FF                 	db	255
  1909                           
  1910                           ;Config register CONFIG3H @ 0x300005
  1911                           ;	CCP2 MUX bit
  1912                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1913                           ;	PORTB A/D Enable bit
  1914                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1915                           ;	Low-Power Timer 1 Oscillator Enable bit
  1916                           ;	LPT1OSC = 0x0, unprogrammed default
  1917                           ;	MCLR Pin Enable bit
  1918                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1919  300005                     	org	3145733
  1920  300005  81                 	db	129
  1921                           
  1922                           ;Config register CONFIG4L @ 0x300006
  1923                           ;	Stack Full/Underflow Reset Enable bit
  1924                           ;	STVREN = 0x1, unprogrammed default
  1925                           ;	Single-Supply ICSP Enable bit
  1926                           ;	LVP = OFF, Single-Supply ICSP disabled
  1927                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1928                           ;	ICPRT = 0x0, unprogrammed default
  1929                           ;	Extended Instruction Set Enable bit
  1930                           ;	XINST = 0x0, unprogrammed default
  1931                           ;	Background Debugger Enable bit
  1932                           ;	DEBUG = 0x1, unprogrammed default
  1933  300006                     	org	3145734
  1934  300006  81                 	db	129
  1935                           
  1936                           ; Padding undefined space
  1937  300007                     	org	3145735
  1938  300007  FF                 	db	255
  1939                           
  1940                           ;Config register CONFIG5L @ 0x300008
  1941                           ;	unspecified, using default values
  1942                           ;	Code Protection bit
  1943                           ;	CP0 = 0x1, unprogrammed default
  1944                           ;	Code Protection bit
  1945                           ;	CP1 = 0x1, unprogrammed default
  1946                           ;	Code Protection bit
  1947                           ;	CP2 = 0x1, unprogrammed default
  1948                           ;	Code Protection bit
  1949                           ;	CP3 = 0x1, unprogrammed default
  1950  300008                     	org	3145736
  1951  300008  0F                 	db	15
  1952                           
  1953                           ;Config register CONFIG5H @ 0x300009
  1954                           ;	unspecified, using default values
  1955                           ;	Boot Block Code Protection bit
  1956                           ;	CPB = 0x1, unprogrammed default
  1957                           ;	Data EEPROM Code Protection bit
  1958                           ;	CPD = 0x1, unprogrammed default
  1959  300009                     	org	3145737
  1960  300009  C0                 	db	192
  1961                           
  1962                           ;Config register CONFIG6L @ 0x30000A
  1963                           ;	unspecified, using default values
  1964                           ;	Write Protection bit
  1965                           ;	WRT0 = 0x1, unprogrammed default
  1966                           ;	Write Protection bit
  1967                           ;	WRT1 = 0x1, unprogrammed default
  1968                           ;	Write Protection bit
  1969                           ;	WRT2 = 0x1, unprogrammed default
  1970                           ;	Write Protection bit
  1971                           ;	WRT3 = 0x1, unprogrammed default
  1972  30000A                     	org	3145738
  1973  30000A  0F                 	db	15
  1974                           
  1975                           ;Config register CONFIG6H @ 0x30000B
  1976                           ;	unspecified, using default values
  1977                           ;	Configuration Register Write Protection bit
  1978                           ;	WRTC = 0x1, unprogrammed default
  1979                           ;	Boot Block Write Protection bit
  1980                           ;	WRTB = 0x1, unprogrammed default
  1981                           ;	Data EEPROM Write Protection bit
  1982                           ;	WRTD = 0x1, unprogrammed default
  1983  30000B                     	org	3145739
  1984  30000B  E0                 	db	224
  1985                           
  1986                           ;Config register CONFIG7L @ 0x30000C
  1987                           ;	unspecified, using default values
  1988                           ;	Table Read Protection bit
  1989                           ;	EBTR0 = 0x1, unprogrammed default
  1990                           ;	Table Read Protection bit
  1991                           ;	EBTR1 = 0x1, unprogrammed default
  1992                           ;	Table Read Protection bit
  1993                           ;	EBTR2 = 0x1, unprogrammed default
  1994                           ;	Table Read Protection bit
  1995                           ;	EBTR3 = 0x1, unprogrammed default
  1996  30000C                     	org	3145740
  1997  30000C  0F                 	db	15
  1998                           
  1999                           ;Config register CONFIG7H @ 0x30000D
  2000                           ;	unspecified, using default values
  2001                           ;	Boot Block Table Read Protection bit
  2002                           ;	EBTRB = 0x1, unprogrammed default
  2003  30000D                     	org	3145741
  2004  30000D  40                 	db	64
  2005                           tosu	equ	0xFFF
  2006                           tosh	equ	0xFFE
  2007                           tosl	equ	0xFFD
  2008                           stkptr	equ	0xFFC
  2009                           pclatu	equ	0xFFB
  2010                           pclath	equ	0xFFA
  2011                           pcl	equ	0xFF9
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           prodh	equ	0xFF4
  2017                           prodl	equ	0xFF3
  2018                           indf0	equ	0xFEF
  2019                           postinc0	equ	0xFEE
  2020                           postdec0	equ	0xFED
  2021                           preinc0	equ	0xFEC
  2022                           plusw0	equ	0xFEB
  2023                           fsr0h	equ	0xFEA
  2024                           fsr0l	equ	0xFE9
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           postinc1	equ	0xFE6
  2028                           postdec1	equ	0xFE5
  2029                           preinc1	equ	0xFE4
  2030                           plusw1	equ	0xFE3
  2031                           fsr1h	equ	0xFE2
  2032                           fsr1l	equ	0xFE1
  2033                           bsr	equ	0xFE0
  2034                           indf2	equ	0xFDF
  2035                           postinc2	equ	0xFDE
  2036                           postdec2	equ	0xFDD
  2037                           preinc2	equ	0xFDC
  2038                           plusw2	equ	0xFDB
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> cara_feliz(COMRAM[8]), o_tilde(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_4(CODE[2]), STR_3(CODE[7]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5277
                                             14 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                     _GENERACARACTER
                         _POS_CURSOR
                            ___lwdiv
                           _adc_init
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1875
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _GENERACARACTER                                       4     1      3     656
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _GENERACARACTER
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
     ___lwmod (ARG)
   _adc_init
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      2C       1       46.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      20        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 21:12:30 2020

                      l24 0C82                        l42 0D1A                        l51 0CEA  
                      l60 0D5E                        l37 0D84                        l54 0D8C  
                      l63 0CB6                        l48 0BD2                        l57 0B94  
                      l74 0C0E                        l67 0A96                        l69 0AD0  
                      u10 0AD0                        u11 0ACC                        u20 0CFE  
                      u21 0CFA                        u30 0D14                        u31 0D10  
           ENVIA_CHAR@aux 0013                       l131 09EA                       l125 0D42  
                     l128 0D7C                       l137 087E                       l643 0A5E  
                     l820 0A64                       l900 0CC0                       l636 0A56  
                     l653 0B34                       l830 0A76                       l822 0A66  
                     l910 0CD2                       l902 0CC4                       l646 0B2C  
                     l840 0A8C                       l832 0A78                       l824 0A68  
                     l912 0CD8                       l904 0CCC                       l920 0B36  
                     l850 0AB8                       l842 0A98                       l834 0A80  
                     l826 0A6A                       l818 0A60                       l914 0CDE  
                     l906 0CCE                       l930 0B6A                       l922 0B3A  
                     l860 0D54                       l844 0AA0                       l836 0A82  
                     l828 0A72                       l916 0CE4                       l908 0CD0  
                     l940 0B88                       l932 0B70                       l924 0B40  
                     l862 0D5C                       l846 0AA4                       l854 0ABE  
                     l838 0A8A                       l870 0C90                       l918 0D86  
                     l942 0B8E                       l934 0B76                       l926 0B4E  
                     l856 0D46                       l848 0AAE                       l880 0CA4  
                     l872 0C98                       l864 0C86                       l936 0B7C  
                     l928 0B62                       l858 0D52                       l882 0CAA  
                     l874 0C9A                       l866 0C88                       l890 0CFE  
                     l938 0B82                       l884 0CB0                       l876 0C9C  
                     l868 0C8C                       l892 0D04                       l878 0C9E  
                     l886 0D7E                       l894 0D14                       l896 0CBA  
                     l888 0CEE                       l898 0CBC                       u200 0A24  
                     u201 0A20                       u210 0A40                       u211 0A3C  
                     u220 0AE4                       u221 0AE0                       u230 0B02  
                     u231 0AFE                       u240 0B18                       u241 0B14  
                     u250 0C5C                       u251 0C58                       u307 0D2A  
                     u260 0C7A                       u261 0C76                       u317 0B46  
                     u270 0BD2                       u190 0A06                       u407 0AA8  
                     u271 0BCE                       u191 0A02                       u327 0B54  
                     u280 0C08                       u417 0AB2                       u281 0C04  
                     u337 0B64                       u290 088C                       u427 0D56  
                     u347 0C92                       u291 0888                       u357 0CC6  
                     u367 0A6C                       u377 0A7A                       u387 0A84  
                     u397 0A9A               LEER_LCD@aux 0011                       wreg 000FE8  
            ?_CURSOR_HOME 0011            ??_ENVIA_NIBBLE 0011            ENVIA_CHAR@dato 0012  
                    l1100 0A24                      l1020 0D34                      l1110 0A50  
                    l1102 0A2A                      l1022 0D38                      l1014 0D1C  
                    l1104 0A40                      l1120 0B02                      l1112 0AD2  
                    l1024 0D3C                      l1016 0D20                      l1200 08FE  
                    l1130 0C5C                      l1026 0D70                      l1106 0A48  
                    l1122 0B18                      l1114 0AE4                      l1018 0D24  
                    l1202 0904                      l1140 0BBE                      l1132 0C68  
                    l1108 0A4A                      l1124 0B20                      l1116 0AEC  
                    l1204 090A                      l1142 0BC0                      l1134 0C7A  
                    l1126 0B26                      l1118 0AF4                      l1136 0B96  
                    l1152 0BE4                      l1144 0BD4                      l1128 0C4C  
                    l1160 0922                      l1138 0BA2                      l1154 0BF6  
                    l1146 0BE0                      l1090 09EC                      l1170 0846  
                    l1162 081E                      l1156 0BF8                      l1092 09F4  
                    l1180 087C                      l1172 0850                      l1164 0822  
                    l1158 0C08                      l1094 0A06                      l1190 08D0  
                    l1182 088C                      l1174 0860                      l1166 0826  
                    l1096 0A0E                      l1192 08E0                      l1184 089E  
                    l1176 0866                      l1168 0836                      l1098 0A16  
                    l1194 08E8                      l1186 08BA                      l1178 0876  
                    l1196 08F0                      l1188 08C6                      l1198 08F8  
                    STR_1 0815                      STR_2 0801                      STR_3 080E  
                    STR_4 081A                      _LATD 000F8C                      _main 081E  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    prodl 000FF3                      start 0000             ?_CURSOR_ONOFF 0011  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0012          __end_of_LEER_LCD 0AD2  
     __size_of_BORRAR_LCD 0008            _GENERACARACTER 0BD4                     ?_main 0011  
         __end_of___lwdiv 0A60           __end_of___lwmod 0B36                     _PORTD 000F83  
     __size_of_LCD_CONFIG 0060                     _TRISD 000F95       __size_of_ENVIA_CHAR 0034  
             ?_POS_CURSOR 0014                     tablat 000FF5                     status 000FD8  
          ??_CURSOR_ONOFF 0014           __initialization 0C10              __end_of_main 0922  
  __end_of_GENERACARACTER 0C10           _ESCRIBE_MENSAJE 0B96                    ??_main 001F  
           __activetblptr 000001                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0                    _ADRESH 000FC4                    _ADRESL 000FC3  
        __end_of_adc_init 0D7E          __end_of_lcd_init 0D44                    _decena 0023  
    __end_of_ENVIA_NIBBLE 0D60                 ??___lwdiv 001A                 ??___lwmod 0015  
         ?_GENERACARACTER 0014       __size_of_POS_CURSOR 003A                    _millar 0027  
                  clear_0 0C36                    _unidad 0021              __pdataCOMRAM 0001  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8              ??_BORRAR_LCD 0014      __size_of_CURSOR_HOME 0008  
               ?_LEER_LCD 0011                __accesstop 0060   __end_of__initialization 0C3C  
            ??_LCD_CONFIG 0014             ___rparam_used 000001              ??_ENVIA_CHAR 0012  
 __end_of_ESCRIBE_MENSAJE 0BD4            __pcstackCOMRAM 0011        __end_of_BORRAR_LCD 0D8E  
        ENVIA_LCD_CMD@aux 0013      __end_of_CURSOR_ONOFF 0D1C        __end_of_LCD_CONFIG 0B96  
      __end_of_ENVIA_CHAR 0CEC                _cara_feliz 0001        __size_of_convierte 00CA  
              ??_LEER_LCD 0011          ENVIA_NIBBLE@dato 0011                 ?_adc_init 0011  
            ??_POS_CURSOR 0015                 ?_lcd_init 0011     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0014  
                 _lm35var 002B                   ___lwdiv 09EC                   ___lwmod 0AD2  
            __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0CB8         __end_of_convierte 09EC  
                 __pcinit 0C10        __end_of_POS_CURSOR 0C84                   __ramtop 0800  
                 _centena 0025                ??_adc_init 0011                   __ptext0 081E  
                 __ptext1 0D1C                   __ptext2 0B36                   __ptext3 0CEC  
                 __ptext4 0D7E                   __ptext5 0D86                   __ptext6 0922  
                 __ptext7 0AD2                   __ptext8 09EC                   __ptext9 0D70  
         GENERACARACTER@i 0017                   _o_tilde 0009                ??_lcd_init 0015  
            _ENVIA_NIBBLE 0D44      end_of_initialization 0C3C          ??_GENERACARACTER 0017  
                 postdec1 000FE5                   postinc0 000FEE      GENERACARACTER@vector 0014  
   __size_of_CURSOR_ONOFF 0030         __size_of_LEER_LCD 0072              _CURSOR_ONOFF 0CEC  
      CURSOR_ONOFF@estado 0014             __pidataCOMRAM 0D60             ??_CURSOR_HOME 0014  
     start_initialization 0C10         ENVIA_LCD_CMD@dato 0012         __size_of_adc_init 000E  
             __pbssCOMRAM 0021       __end_of_CURSOR_HOME 0D86         __size_of_lcd_init 0028  
        ___lwdiv@dividend 0016                  ?___lwdiv 0016                  ?___lwmod 0011  
       GENERACARACTER@pos 0016               __smallconst 0800                 _convierte 0922  
         convierte@numero 001D          ___lwdiv@quotient 001A                  _LEER_LCD 0A60  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0019            POS_CURSOR@fila 0015  
__size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2                ?_convierte 001D  
             _CURSOR_HOME 0D7E                 copy_data0 0C24    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___lwdiv 0074          __size_of___lwmod 0064                  _adc_init 0D70  
                _d_millar 0029           ___lwdiv@divisor 0018           ___lwdiv@counter 001C  
                __ptext10 0C4A                  __ptext11 0BD4                  __ptext12 0C84  
                __ptext13 0B96                  __ptext14 0CB8                  __ptext15 0A60  
                __ptext16 0D44                _BORRAR_LCD 0D86                  _lcd_init 0D1C  
           __size_of_main 0104                _LCD_CONFIG 0B36                _ENVIA_CHAR 0CB8  
           _ENVIA_LCD_CMD 0C84   __size_of_GENERACARACTER 003C               ??_convierte 001F  
       ??_ESCRIBE_MENSAJE 0017     ESCRIBE_MENSAJE@cadena 0014          ___lwmod@dividend 0011  
          ?_ENVIA_LCD_CMD 0011           ___lwmod@divisor 0013           ___lwmod@counter 0015  
             ?_BORRAR_LCD 0011             ?_ENVIA_NIBBLE 0011                _POS_CURSOR 0C4A  
             ?_LCD_CONFIG 0011        ESCRIBE_MENSAJE@tam 0016               ?_ENVIA_CHAR 0011  
       POS_CURSOR@columna 0014  
