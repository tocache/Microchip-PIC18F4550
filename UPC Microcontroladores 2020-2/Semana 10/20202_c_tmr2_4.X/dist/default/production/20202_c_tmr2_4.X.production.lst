

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Oct 22 15:21:23 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _PORTD	set	3971
    71  0000                     _LATD	set	3980
    72  0000                     _LATDbits	set	3980
    73  0000                     _T2CONbits	set	4042
    74  0000                     _PIR1bits	set	3998
    75  0000                     _LATEbits	set	3981
    76  0000                     _ADRESH	set	4036
    77  0000                     _PR2	set	4043
    78  0000                     _ADCON0bits	set	4034
    79  0000                     _TRISEbits	set	3990
    80  0000                     _INTCON3bits	set	4080
    81  0000                     _PIE1bits	set	3997
    82  0000                     _INTCONbits	set	4082
    83  0000                     _RCONbits	set	4048
    84  0000                     _T2CON	set	4042
    85  0000                     _ADCON0	set	4034
    86  0000                     _ADCON1	set	4033
    87  0000                     _ADCON2	set	4032
    88  0000                     _TRISD	set	3989
    89                           
    90                           	psect	smallconst
    91  000800                     __psmallconst:
    92                           	callstack 0
    93  000800  00                 	db	0
    94  000801                     STR_1:
    95  000801  48                 	db	72	;'H'
    96  000802  6F                 	db	111	;'o'
    97  000803  6C                 	db	108	;'l'
    98  000804  61                 	db	97	;'a'
    99  000805  20                 	db	32
   100  000806  6D                 	db	109	;'m'
   101  000807  75                 	db	117	;'u'
   102  000808  6E                 	db	110	;'n'
   103  000809  64                 	db	100	;'d'
   104  00080A  6F                 	db	111	;'o'
   105  00080B  21                 	db	33
   106  00080C  00                 	db	0
   107  00080D                     STR_2:
   108  00080D  50                 	db	80	;'P'
   109  00080E  52                 	db	82	;'R'
   110  00080F  32                 	db	50	;'2'
   111  000810  3A                 	db	58	;':'
   112  000811  00                 	db	0
   113  000812  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  000C3A                     __pcinit:
   119                           	callstack 0
   120  000C3A                     start_initialization:
   121                           	callstack 0
   122  000C3A                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (8 bytes)
   126  000C3A  EE00  F014         	lfsr	0,__pbssCOMRAM
   127  000C3E  0E08               	movlw	8
   128  000C40                     clear_0:
   129  000C40  6AEE               	clrf	postinc0,c
   130  000C42  06E8               	decf	wreg,f,c
   131  000C44  E1FD               	bnz	clear_0
   132  000C46                     end_of_initialization:
   133                           	callstack 0
   134  000C46                     __end_of__initialization:
   135                           	callstack 0
   136  000C46  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   137  000C48  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   138  000C4A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   139  000C4C  6EF8               	movwf	tblptru,c
   140  000C4E  0E08               	movlw	high __Lsmallconst
   141  000C50  6EF7               	movwf	tblptrh,c
   142  000C52  0100               	movlb	0
   143  000C54  EF57  F004         	goto	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMRAM
   146  000014                     __pbssCOMRAM:
   147                           	callstack 0
   148  000014                     _unidad:
   149                           	callstack 0
   150  000014                     	ds	2
   151  000016                     _decena:
   152                           	callstack 0
   153  000016                     	ds	2
   154  000018                     _centena:
   155                           	callstack 0
   156  000018                     	ds	2
   157  00001A                     _millar:
   158                           	callstack 0
   159  00001A                     	ds	2
   160                           
   161                           	psect	cstackCOMRAM
   162  000001                     __pcstackCOMRAM:
   163                           	callstack 0
   164  000001                     ??_TMR2_ISR:
   165  000001                     
   166                           ; 1 bytes @ 0x0
   167  000001                     	ds	1
   168  000002                     ??_INT1_ISR:
   169                           
   170                           ; 1 bytes @ 0x1
   171  000002                     	ds	4
   172  000006                     ?___lwmod:
   173                           	callstack 0
   174  000006                     ENVIA_NIBBLE@dato:
   175                           	callstack 0
   176  000006                     LEER_LCD@aux:
   177                           	callstack 0
   178  000006                     ___lwmod@dividend:
   179                           	callstack 0
   180                           
   181                           ; 2 bytes @ 0x5
   182  000006                     	ds	1
   183  000007                     ENVIA_CHAR@dato:
   184                           	callstack 0
   185  000007                     ENVIA_LCD_CMD@dato:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x6
   189  000007                     	ds	1
   190  000008                     ENVIA_CHAR@aux:
   191                           	callstack 0
   192  000008                     ENVIA_LCD_CMD@aux:
   193                           	callstack 0
   194  000008                     ___lwmod@divisor:
   195                           	callstack 0
   196                           
   197                           ; 2 bytes @ 0x7
   198  000008                     	ds	1
   199  000009                     ??_LCD_CONFIG:
   200  000009                     POS_CURSOR@columna:
   201                           	callstack 0
   202  000009                     CURSOR_ONOFF@estado:
   203                           	callstack 0
   204  000009                     ESCRIBE_MENSAJE@cadena:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x8
   208  000009                     	ds	1
   209  00000A                     ??_lcd_init:
   210  00000A                     POS_CURSOR@fila:
   211                           	callstack 0
   212  00000A                     ___lwmod@counter:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x9
   216  00000A                     	ds	1
   217  00000B                     ?___lwdiv:
   218                           	callstack 0
   219  00000B                     ESCRIBE_MENSAJE@tam:
   220                           	callstack 0
   221  00000B                     ___lwdiv@dividend:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0xA
   225  00000B                     	ds	1
   226  00000C                     ??_ESCRIBE_MENSAJE:
   227                           
   228                           ; 1 bytes @ 0xB
   229  00000C                     	ds	1
   230  00000D                     ___lwdiv@divisor:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0xC
   234  00000D                     	ds	1
   235  00000E                     ESCRIBE_MENSAJE@i:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0xD
   239  00000E                     	ds	1
   240  00000F                     ___lwdiv@quotient:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0xE
   244  00000F                     	ds	2
   245  000011                     ___lwdiv@counter:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x10
   249  000011                     	ds	1
   250  000012                     convierte@numero:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0x11
   254  000012                     	ds	2
   255  000014                     
   256                           ; 1 bytes @ 0x13
   257 ;;
   258 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   259 ;;
   260 ;; *************** function _main *****************
   261 ;; Defined at:
   262 ;;		line 57 in file "maincode.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         0       0       0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0       0       0
   279 ;;      Totals:         0       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        0 bytes
   281 ;; Hardware stack levels required when called:    6
   282 ;; This function calls:
   283 ;;		_ENVIA_CHAR
   284 ;;		_ESCRIBE_MENSAJE
   285 ;;		_POS_CURSOR
   286 ;;		_ad_config
   287 ;;		_convierte
   288 ;;		_int_config
   289 ;;		_lcd_init
   290 ;;		_tmr2_config
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  0008AE                     __ptext0:
   298                           	callstack 0
   299  0008AE                     _main:
   300                           	callstack 25
   301  0008AE                     
   302                           ;maincode.c: 58:     lcd_init();
   303  0008AE  ECF6  F005         	call	_lcd_init	;wreg free
   304  0008B2                     
   305                           ;maincode.c: 59:     tmr2_config();
   306  0008B2  EC50  F006         	call	_tmr2_config	;wreg free
   307  0008B6                     
   308                           ;maincode.c: 60:     int_config();
   309  0008B6  EC3A  F006         	call	_int_config	;wreg free
   310  0008BA                     
   311                           ;maincode.c: 61:     ad_config();
   312  0008BA  EC41  F006         	call	_ad_config	;wreg free
   313  0008BE                     
   314                           ;maincode.c: 63:     TRISEbits.RE0 = 0;
   315  0008BE  9096               	bcf	150,0,c	;volatile
   316  0008C0                     
   317                           ;maincode.c: 64:     POS_CURSOR(1,0);
   318  0008C0  0E00               	movlw	0
   319  0008C2  6E09               	movwf	POS_CURSOR@columna^0,c
   320  0008C4  0E01               	movlw	1
   321  0008C6  EC8D  F005         	call	_POS_CURSOR
   322  0008CA                     
   323                           ;maincode.c: 65:     ESCRIBE_MENSAJE("Hola mundo!",11);
   324  0008CA  0E01               	movlw	low STR_1
   325  0008CC  6E09               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   326  0008CE  0E08               	movlw	high STR_1
   327  0008D0  6E0A               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   328  0008D2  0E0B               	movlw	11
   329  0008D4  6E0B               	movwf	ESCRIBE_MENSAJE@tam^0,c
   330  0008D6  EC6E  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   331  0008DA                     l1178:
   332                           
   333                           ;maincode.c: 67:         ADCON0bits.GODONE = 1;
   334  0008DA  82C2               	bsf	194,1,c	;volatile
   335  0008DC                     l77:
   336  0008DC  B2C2               	btfsc	194,1,c	;volatile
   337  0008DE  EF73  F004         	goto	u321
   338  0008E2  EF75  F004         	goto	u320
   339  0008E6                     u321:
   340  0008E6  EF6E  F004         	goto	l77
   341  0008EA                     u320:
   342  0008EA                     
   343                           ;maincode.c: 69:         PR2 = ADRESH;
   344  0008EA  CFC4 FFCB          	movff	4036,4043	;volatile
   345  0008EE                     
   346                           ;maincode.c: 70:         convierte(ADRESH);
   347  0008EE  CFC4 F012          	movff	4036,convierte@numero	;volatile
   348  0008F2  6A13               	clrf	(convierte@numero+1)^0,c
   349  0008F4  EC0A  F004         	call	_convierte	;wreg free
   350                           
   351                           ;maincode.c: 71:         POS_CURSOR(2,0);
   352  0008F8  0E00               	movlw	0
   353  0008FA  6E09               	movwf	POS_CURSOR@columna^0,c
   354  0008FC  0E02               	movlw	2
   355  0008FE  EC8D  F005         	call	_POS_CURSOR
   356  000902                     
   357                           ;maincode.c: 72:         ESCRIBE_MENSAJE("PR2:",4);
   358  000902  0E0D               	movlw	low STR_2
   359  000904  6E09               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   360  000906  0E08               	movlw	high STR_2
   361  000908  6E0A               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   362  00090A  0E04               	movlw	4
   363  00090C  6E0B               	movwf	ESCRIBE_MENSAJE@tam^0,c
   364  00090E  EC6E  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   365  000912                     
   366                           ;maincode.c: 73:         ENVIA_CHAR(centena+0x30);
   367  000912  5018               	movf	_centena^0,w,c
   368  000914  0F30               	addlw	48
   369  000916  ECC4  F005         	call	_ENVIA_CHAR
   370  00091A                     
   371                           ;maincode.c: 74:         ENVIA_CHAR(decena+0x30);
   372  00091A  5016               	movf	_decena^0,w,c
   373  00091C  0F30               	addlw	48
   374  00091E  ECC4  F005         	call	_ENVIA_CHAR
   375  000922                     
   376                           ;maincode.c: 75:         ENVIA_CHAR(unidad+0x30);
   377  000922  5014               	movf	_unidad^0,w,c
   378  000924  0F30               	addlw	48
   379  000926  ECC4  F005         	call	_ENVIA_CHAR
   380  00092A  EF6D  F004         	goto	l1178
   381  00092E  EF2D  F000         	goto	start
   382  000932                     __end_of_main:
   383                           	callstack 0
   384                           
   385 ;; *************** function _tmr2_config *****************
   386 ;; Defined at:
   387 ;;		line 43 in file "maincode.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;		None
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   401 ;;      Params:         0       0       0       0       0       0       0       0       0
   402 ;;      Locals:         0       0       0       0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0
   404 ;;      Totals:         0       0       0       0       0       0       0       0       0
   405 ;;Total ram usage:        0 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    2
   408 ;; This function calls:
   409 ;;		Nothing
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  000CA0                     __ptext1:
   417                           	callstack 0
   418  000CA0                     _tmr2_config:
   419                           	callstack 28
   420  000CA0                     
   421                           ;maincode.c: 44:     T2CON = 0x45;
   422  000CA0  0E45               	movlw	69
   423  000CA2  6ECA               	movwf	202,c	;volatile
   424  000CA4  0012               	return		;funcret
   425  000CA6                     __end_of_tmr2_config:
   426                           	callstack 0
   427                           
   428 ;; *************** function _lcd_init *****************
   429 ;; Defined at:
   430 ;;		line 28 in file "maincode.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0
   446 ;;      Temps:          1       0       0       0       0       0       0       0       0
   447 ;;      Totals:         1       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        1 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    5
   451 ;; This function calls:
   452 ;;		_BORRAR_LCD
   453 ;;		_CURSOR_HOME
   454 ;;		_CURSOR_ONOFF
   455 ;;		_LCD_CONFIG
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           	psect	text2
   462  000BEC                     __ptext2:
   463                           	callstack 0
   464  000BEC                     _lcd_init:
   465                           	callstack 25
   466  000BEC                     
   467                           ;maincode.c: 29:     TRISD = 0x00;
   468  000BEC  0E00               	movlw	0
   469  000BEE  6E95               	movwf	149,c	;volatile
   470  000BF0                     
   471                           ;maincode.c: 30:     LCD_CONFIG();
   472  000BF0  EC3E  F005         	call	_LCD_CONFIG	;wreg free
   473  000BF4                     
   474                           ;maincode.c: 31:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   475  000BF4  0EEA               	movlw	234
   476  000BF6  6E0A               	movwf	??_lcd_init^0,c
   477  000BF8  0EC3               	movlw	195
   478  000BFA                     u337:
   479  000BFA  2EE8               	decfsz	wreg,f,c
   480  000BFC  D7FE               	bra	u337
   481  000BFE  2E0A               	decfsz	??_lcd_init^0,f,c
   482  000C00  D7FC               	bra	u337
   483  000C02  F000               	nop	
   484  000C04                     
   485                           ;maincode.c: 32:     BORRAR_LCD();
   486  000C04  EC4C  F006         	call	_BORRAR_LCD	;wreg free
   487  000C08                     
   488                           ;maincode.c: 33:     CURSOR_HOME();
   489  000C08  EC48  F006         	call	_CURSOR_HOME	;wreg free
   490  000C0C                     
   491                           ;maincode.c: 34:     CURSOR_ONOFF(1);
   492  000C0C  0E01               	movlw	1
   493  000C0E  ECDE  F005         	call	_CURSOR_ONOFF
   494  000C12  0012               	return		;funcret
   495  000C14                     __end_of_lcd_init:
   496                           	callstack 0
   497                           
   498 ;; *************** function _LCD_CONFIG *****************
   499 ;; Defined at:
   500 ;;		line 72 in file "LCD.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0, cstack
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   514 ;;      Params:         0       0       0       0       0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0       0       0       0       0
   516 ;;      Temps:          1       0       0       0       0       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used:    1
   520 ;; Hardware stack levels required when called:    4
   521 ;; This function calls:
   522 ;;		_ENVIA_LCD_CMD
   523 ;;		_ENVIA_NIBBLE
   524 ;; This function is called by:
   525 ;;		_lcd_init
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text3
   530  000A7C                     __ptext3:
   531                           	callstack 0
   532  000A7C                     _LCD_CONFIG:
   533                           	callstack 25
   534  000A7C                     
   535                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   536  000A7C  908C               	bcf	140,0,c	;volatile
   537                           
   538                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   539  000A7E  928C               	bcf	140,1,c	;volatile
   540  000A80                     
   541                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   542  000A80  0E30               	movlw	48
   543  000A82  EC2C  F006         	call	_ENVIA_NIBBLE
   544  000A86                     
   545                           ;LCD.c: 77:         _delay(24000);
   546  000A86  0E20               	movlw	32
   547  000A88  6E09               	movwf	??_LCD_CONFIG^0,c
   548  000A8A  0E2A               	movlw	42
   549  000A8C                     u347:
   550  000A8C  2EE8               	decfsz	wreg,f,c
   551  000A8E  D7FE               	bra	u347
   552  000A90  2E09               	decfsz	??_LCD_CONFIG^0,f,c
   553  000A92  D7FC               	bra	u347
   554  000A94                     
   555                           ;LCD.c: 78:         _delay(24000);
   556  000A94  0E20               	movlw	32
   557  000A96  6E09               	movwf	??_LCD_CONFIG^0,c
   558  000A98  0E2A               	movlw	42
   559  000A9A                     u357:
   560  000A9A  2EE8               	decfsz	wreg,f,c
   561  000A9C  D7FE               	bra	u357
   562  000A9E  2E09               	decfsz	??_LCD_CONFIG^0,f,c
   563  000AA0  D7FC               	bra	u357
   564                           
   565                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   566  000AA2  0E30               	movlw	48
   567  000AA4  EC2C  F006         	call	_ENVIA_NIBBLE
   568  000AA8                     
   569                           ;LCD.c: 83:  _delay(1200);
   570  000AA8  0EF0               	movlw	240
   571  000AAA                     u367:
   572  000AAA  D000               	nop2	
   573  000AAC  2EE8               	decfsz	wreg,f,c
   574  000AAE  D7FD               	bra	u367
   575  000AB0                     
   576                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   577  000AB0  0E30               	movlw	48
   578  000AB2  EC2C  F006         	call	_ENVIA_NIBBLE
   579  000AB6                     
   580                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   581  000AB6  0E20               	movlw	32
   582  000AB8  EC2C  F006         	call	_ENVIA_NIBBLE
   583  000ABC                     
   584                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   585  000ABC  0E01               	movlw	1
   586  000ABE  ECAA  F005         	call	_ENVIA_LCD_CMD
   587  000AC2                     
   588                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   589  000AC2  0E28               	movlw	40
   590  000AC4  ECAA  F005         	call	_ENVIA_LCD_CMD
   591  000AC8                     
   592                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   593  000AC8  0E0F               	movlw	15
   594  000ACA  ECAA  F005         	call	_ENVIA_LCD_CMD
   595  000ACE                     
   596                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   597  000ACE  0E06               	movlw	6
   598  000AD0  ECAA  F005         	call	_ENVIA_LCD_CMD
   599  000AD4                     
   600                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   601  000AD4  0E01               	movlw	1
   602  000AD6  ECAA  F005         	call	_ENVIA_LCD_CMD
   603  000ADA  0012               	return		;funcret
   604  000ADC                     __end_of_LCD_CONFIG:
   605                           	callstack 0
   606                           
   607 ;; *************** function _CURSOR_ONOFF *****************
   608 ;; Defined at:
   609 ;;		line 35 in file "LCD.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  estado          1    wreg     unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  estado          1    8[COMRAM] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, status,2, status,0, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   623 ;;      Params:         0       0       0       0       0       0       0       0       0
   624 ;;      Locals:         1       0       0       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0       0       0
   626 ;;      Totals:         1       0       0       0       0       0       0       0       0
   627 ;;Total ram usage:        1 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    4
   630 ;; This function calls:
   631 ;;		_ENVIA_LCD_CMD
   632 ;; This function is called by:
   633 ;;		_lcd_init
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text4
   638  000BBC                     __ptext4:
   639                           	callstack 0
   640  000BBC                     _CURSOR_ONOFF:
   641                           	callstack 25
   642                           
   643                           ;incstack = 0
   644                           ;CURSOR_ONOFF@estado stored from wreg
   645  000BBC  6E09               	movwf	CURSOR_ONOFF@estado^0,c
   646  000BBE                     
   647                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   648  000BBE  5009               	movf	CURSOR_ONOFF@estado^0,w,c
   649  000BC0  A4D8               	btfss	status,2,c
   650  000BC2  EFE5  F005         	goto	u21
   651  000BC6  EFE7  F005         	goto	u20
   652  000BCA                     u21:
   653  000BCA  EFEA  F005         	goto	l942
   654  000BCE                     u20:
   655  000BCE  0E0E               	movlw	14
   656  000BD0  ECAA  F005         	call	_ENVIA_LCD_CMD
   657  000BD4                     l942:
   658                           
   659                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   660  000BD4  0409               	decf	CURSOR_ONOFF@estado^0,w,c
   661  000BD6  A4D8               	btfss	status,2,c
   662  000BD8  EFF0  F005         	goto	u31
   663  000BDC  EFF2  F005         	goto	u30
   664  000BE0                     u31:
   665  000BE0  EFF5  F005         	goto	l134
   666  000BE4                     u30:
   667  000BE4  0E0C               	movlw	12
   668  000BE6  ECAA  F005         	call	_ENVIA_LCD_CMD
   669  000BEA                     l134:
   670  000BEA  0012               	return		;funcret
   671  000BEC                     __end_of_CURSOR_ONOFF:
   672                           	callstack 0
   673                           
   674 ;; *************** function _CURSOR_HOME *****************
   675 ;; Defined at:
   676 ;;		line 30 in file "LCD.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, status,2, status,0, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   690 ;;      Params:         0       0       0       0       0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    4
   697 ;; This function calls:
   698 ;;		_ENVIA_LCD_CMD
   699 ;; This function is called by:
   700 ;;		_lcd_init
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text5
   705  000C90                     __ptext5:
   706                           	callstack 0
   707  000C90                     _CURSOR_HOME:
   708                           	callstack 25
   709  000C90                     
   710                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   711  000C90  0E02               	movlw	2
   712  000C92  ECAA  F005         	call	_ENVIA_LCD_CMD
   713  000C96  0012               	return		;funcret
   714  000C98                     __end_of_CURSOR_HOME:
   715                           	callstack 0
   716                           
   717 ;; *************** function _BORRAR_LCD *****************
   718 ;; Defined at:
   719 ;;		line 67 in file "LCD.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    4
   740 ;; This function calls:
   741 ;;		_ENVIA_LCD_CMD
   742 ;; This function is called by:
   743 ;;		_lcd_init
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text6
   748  000C98                     __ptext6:
   749                           	callstack 0
   750  000C98                     _BORRAR_LCD:
   751                           	callstack 25
   752  000C98                     
   753                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   754  000C98  0E01               	movlw	1
   755  000C9A  ECAA  F005         	call	_ENVIA_LCD_CMD
   756  000C9E  0012               	return		;funcret
   757  000CA0                     __end_of_BORRAR_LCD:
   758                           	callstack 0
   759                           
   760 ;; *************** function _int_config *****************
   761 ;; Defined at:
   762 ;;		line 48 in file "maincode.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		None
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   776 ;;      Params:         0       0       0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    2
   783 ;; This function calls:
   784 ;;		Nothing
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text7
   791  000C74                     __ptext7:
   792                           	callstack 0
   793  000C74                     _int_config:
   794                           	callstack 28
   795  000C74                     
   796                           ;maincode.c: 49:     RCONbits.IPEN = 1;
   797  000C74  8ED0               	bsf	208,7,c	;volatile
   798                           
   799                           ;maincode.c: 50:     INTCONbits.GIEH = 1;
   800  000C76  8EF2               	bsf	242,7,c	;volatile
   801                           
   802                           ;maincode.c: 51:     INTCONbits.GIEL = 1;
   803  000C78  8CF2               	bsf	242,6,c	;volatile
   804                           
   805                           ;maincode.c: 52:     PIE1bits.TMR2IE = 1;
   806  000C7A  829D               	bsf	157,1,c	;volatile
   807                           
   808                           ;maincode.c: 53:     INTCON3bits.INT1IE = 1;
   809  000C7C  86F0               	bsf	240,3,c	;volatile
   810                           
   811                           ;maincode.c: 54:     INTCON3bits.INT1IP = 0;
   812  000C7E  9CF0               	bcf	240,6,c	;volatile
   813  000C80  0012               	return		;funcret
   814  000C82                     __end_of_int_config:
   815                           	callstack 0
   816                           
   817 ;; *************** function _convierte *****************
   818 ;; Defined at:
   819 ;;		line 21 in file "maincode.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;  numero          2   17[COMRAM] unsigned int 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      void 
   826 ;; Registers used:
   827 ;;		wreg, status,2, status,0, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   833 ;;      Params:         2       0       0       0       0       0       0       0       0
   834 ;;      Locals:         0       0       0       0       0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0
   836 ;;      Totals:         2       0       0       0       0       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used:    1
   839 ;; Hardware stack levels required when called:    3
   840 ;; This function calls:
   841 ;;		___lwdiv
   842 ;;		___lwmod
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text8
   849  000814                     __ptext8:
   850                           	callstack 0
   851  000814                     _convierte:
   852                           	callstack 27
   853  000814                     
   854                           ;maincode.c: 22:     millar = numero /1000;
   855  000814  C012  F00B         	movff	convierte@numero,___lwdiv@dividend
   856  000818  C013  F00C         	movff	convierte@numero+1,___lwdiv@dividend+1
   857  00081C  0E03               	movlw	3
   858  00081E  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   859  000820  0EE8               	movlw	232
   860  000822  6E0D               	movwf	___lwdiv@divisor^0,c
   861  000824  EC99  F004         	call	___lwdiv	;wreg free
   862  000828  C00B  F01A         	movff	?___lwdiv,_millar
   863  00082C  C00C  F01B         	movff	?___lwdiv+1,_millar+1
   864                           
   865                           ;maincode.c: 23:     centena = (numero % 1000) / 100;
   866  000830  0E03               	movlw	3
   867  000832  6E09               	movwf	(___lwmod@divisor+1)^0,c
   868  000834  0EE8               	movlw	232
   869  000836  6E08               	movwf	___lwmod@divisor^0,c
   870  000838  C012  F006         	movff	convierte@numero,___lwmod@dividend
   871  00083C  C013  F007         	movff	convierte@numero+1,___lwmod@dividend+1
   872  000840  EC0C  F005         	call	___lwmod	;wreg free
   873  000844  C006  F00B         	movff	?___lwmod,___lwdiv@dividend
   874  000848  C007  F00C         	movff	?___lwmod+1,___lwdiv@dividend+1
   875  00084C  0E00               	movlw	0
   876  00084E  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   877  000850  0E64               	movlw	100
   878  000852  6E0D               	movwf	___lwdiv@divisor^0,c
   879  000854  EC99  F004         	call	___lwdiv	;wreg free
   880  000858  C00B  F018         	movff	?___lwdiv,_centena
   881  00085C  C00C  F019         	movff	?___lwdiv+1,_centena+1
   882                           
   883                           ;maincode.c: 24:     decena = (numero % 100) / 10;
   884  000860  0E00               	movlw	0
   885  000862  6E09               	movwf	(___lwmod@divisor+1)^0,c
   886  000864  0E64               	movlw	100
   887  000866  6E08               	movwf	___lwmod@divisor^0,c
   888  000868  C012  F006         	movff	convierte@numero,___lwmod@dividend
   889  00086C  C013  F007         	movff	convierte@numero+1,___lwmod@dividend+1
   890  000870  EC0C  F005         	call	___lwmod	;wreg free
   891  000874  C006  F00B         	movff	?___lwmod,___lwdiv@dividend
   892  000878  C007  F00C         	movff	?___lwmod+1,___lwdiv@dividend+1
   893  00087C  0E00               	movlw	0
   894  00087E  6E0E               	movwf	(___lwdiv@divisor+1)^0,c
   895  000880  0E0A               	movlw	10
   896  000882  6E0D               	movwf	___lwdiv@divisor^0,c
   897  000884  EC99  F004         	call	___lwdiv	;wreg free
   898  000888  C00B  F016         	movff	?___lwdiv,_decena
   899  00088C  C00C  F017         	movff	?___lwdiv+1,_decena+1
   900                           
   901                           ;maincode.c: 25:     unidad = numero % 10;
   902  000890  C012  F006         	movff	convierte@numero,___lwmod@dividend
   903  000894  C013  F007         	movff	convierte@numero+1,___lwmod@dividend+1
   904  000898  0E00               	movlw	0
   905  00089A  6E09               	movwf	(___lwmod@divisor+1)^0,c
   906  00089C  0E0A               	movlw	10
   907  00089E  6E08               	movwf	___lwmod@divisor^0,c
   908  0008A0  EC0C  F005         	call	___lwmod	;wreg free
   909  0008A4  C006  F014         	movff	?___lwmod,_unidad
   910  0008A8  C007  F015         	movff	?___lwmod+1,_unidad+1
   911  0008AC  0012               	return		;funcret
   912  0008AE                     __end_of_convierte:
   913                           	callstack 0
   914                           
   915 ;; *************** function ___lwmod *****************
   916 ;; Defined at:
   917 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  dividend        2    5[COMRAM] unsigned int 
   920 ;;  divisor         2    7[COMRAM] unsigned int 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  counter         1    9[COMRAM] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  2    5[COMRAM] unsigned int 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         4       0       0       0       0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         5       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        5 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    2
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_convierte
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text9
   947  000A18                     __ptext9:
   948                           	callstack 0
   949  000A18                     ___lwmod:
   950                           	callstack 27
   951  000A18  5008               	movf	___lwmod@divisor^0,w,c
   952  000A1A  1009               	iorwf	(___lwmod@divisor+1)^0,w,c
   953  000A1C  B4D8               	btfsc	status,2,c
   954  000A1E  EF13  F005         	goto	u261
   955  000A22  EF15  F005         	goto	u260
   956  000A26                     u261:
   957  000A26  EF39  F005         	goto	l670
   958  000A2A                     u260:
   959  000A2A  0E01               	movlw	1
   960  000A2C  6E0A               	movwf	___lwmod@counter^0,c
   961  000A2E  EF1D  F005         	goto	l1136
   962  000A32                     l1134:
   963  000A32  90D8               	bcf	status,0,c
   964  000A34  3608               	rlcf	___lwmod@divisor^0,f,c
   965  000A36  3609               	rlcf	(___lwmod@divisor+1)^0,f,c
   966  000A38  2A0A               	incf	___lwmod@counter^0,f,c
   967  000A3A                     l1136:
   968  000A3A  AE09               	btfss	(___lwmod@divisor+1)^0,7,c
   969  000A3C  EF22  F005         	goto	u271
   970  000A40  EF24  F005         	goto	u270
   971  000A44                     u271:
   972  000A44  EF19  F005         	goto	l1134
   973  000A48                     u270:
   974  000A48                     l1138:
   975  000A48  5008               	movf	___lwmod@divisor^0,w,c
   976  000A4A  5C06               	subwf	___lwmod@dividend^0,w,c
   977  000A4C  5009               	movf	(___lwmod@divisor+1)^0,w,c
   978  000A4E  5807               	subwfb	(___lwmod@dividend+1)^0,w,c
   979  000A50  A0D8               	btfss	status,0,c
   980  000A52  EF2D  F005         	goto	u281
   981  000A56  EF2F  F005         	goto	u280
   982  000A5A                     u281:
   983  000A5A  EF33  F005         	goto	l1142
   984  000A5E                     u280:
   985  000A5E  5008               	movf	___lwmod@divisor^0,w,c
   986  000A60  5E06               	subwf	___lwmod@dividend^0,f,c
   987  000A62  5009               	movf	(___lwmod@divisor+1)^0,w,c
   988  000A64  5A07               	subwfb	(___lwmod@dividend+1)^0,f,c
   989  000A66                     l1142:
   990  000A66  90D8               	bcf	status,0,c
   991  000A68  3209               	rrcf	(___lwmod@divisor+1)^0,f,c
   992  000A6A  3208               	rrcf	___lwmod@divisor^0,f,c
   993  000A6C  2E0A               	decfsz	___lwmod@counter^0,f,c
   994  000A6E  EF24  F005         	goto	l1138
   995  000A72                     l670:
   996  000A72  C006  F006         	movff	___lwmod@dividend,?___lwmod
   997  000A76  C007  F007         	movff	___lwmod@dividend+1,?___lwmod+1
   998  000A7A  0012               	return		;funcret
   999  000A7C                     __end_of___lwmod:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function ___lwdiv *****************
  1003 ;; Defined at:
  1004 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  dividend        2   10[COMRAM] unsigned int 
  1007 ;;  divisor         2   12[COMRAM] unsigned int 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  quotient        2   14[COMRAM] unsigned int 
  1010 ;;  counter         1   16[COMRAM] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  2   10[COMRAM] unsigned int 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, status,0
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1020 ;;      Params:         4       0       0       0       0       0       0       0       0
  1021 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1023 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1024 ;;Total ram usage:        7 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    2
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_convierte
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text10
  1035  000932                     __ptext10:
  1036                           	callstack 0
  1037  000932                     ___lwdiv:
  1038                           	callstack 27
  1039  000932  0E00               	movlw	0
  1040  000934  6E10               	movwf	(___lwdiv@quotient+1)^0,c
  1041  000936  0E00               	movlw	0
  1042  000938  6E0F               	movwf	___lwdiv@quotient^0,c
  1043  00093A  500D               	movf	___lwdiv@divisor^0,w,c
  1044  00093C  100E               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1045  00093E  B4D8               	btfsc	status,2,c
  1046  000940  EFA4  F004         	goto	u231
  1047  000944  EFA6  F004         	goto	u230
  1048  000948                     u231:
  1049  000948  EFCE  F004         	goto	l660
  1050  00094C                     u230:
  1051  00094C  0E01               	movlw	1
  1052  00094E  6E11               	movwf	___lwdiv@counter^0,c
  1053  000950  EFAE  F004         	goto	l1116
  1054  000954                     l1114:
  1055  000954  90D8               	bcf	status,0,c
  1056  000956  360D               	rlcf	___lwdiv@divisor^0,f,c
  1057  000958  360E               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1058  00095A  2A11               	incf	___lwdiv@counter^0,f,c
  1059  00095C                     l1116:
  1060  00095C  AE0E               	btfss	(___lwdiv@divisor+1)^0,7,c
  1061  00095E  EFB3  F004         	goto	u241
  1062  000962  EFB5  F004         	goto	u240
  1063  000966                     u241:
  1064  000966  EFAA  F004         	goto	l1114
  1065  00096A                     u240:
  1066  00096A                     l1118:
  1067  00096A  90D8               	bcf	status,0,c
  1068  00096C  360F               	rlcf	___lwdiv@quotient^0,f,c
  1069  00096E  3610               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1070  000970  500D               	movf	___lwdiv@divisor^0,w,c
  1071  000972  5C0B               	subwf	___lwdiv@dividend^0,w,c
  1072  000974  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  1073  000976  580C               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1074  000978  A0D8               	btfss	status,0,c
  1075  00097A  EFC1  F004         	goto	u251
  1076  00097E  EFC3  F004         	goto	u250
  1077  000982                     u251:
  1078  000982  EFC8  F004         	goto	l1126
  1079  000986                     u250:
  1080  000986  500D               	movf	___lwdiv@divisor^0,w,c
  1081  000988  5E0B               	subwf	___lwdiv@dividend^0,f,c
  1082  00098A  500E               	movf	(___lwdiv@divisor+1)^0,w,c
  1083  00098C  5A0C               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1084  00098E  800F               	bsf	___lwdiv@quotient^0,0,c
  1085  000990                     l1126:
  1086  000990  90D8               	bcf	status,0,c
  1087  000992  320E               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1088  000994  320D               	rrcf	___lwdiv@divisor^0,f,c
  1089  000996  2E11               	decfsz	___lwdiv@counter^0,f,c
  1090  000998  EFB5  F004         	goto	l1118
  1091  00099C                     l660:
  1092  00099C  C00F  F00B         	movff	___lwdiv@quotient,?___lwdiv
  1093  0009A0  C010  F00C         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1094  0009A4  0012               	return		;funcret
  1095  0009A6                     __end_of___lwdiv:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _ad_config *****************
  1099 ;; Defined at:
  1100 ;;		line 37 in file "maincode.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    2
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text11
  1129  000C82                     __ptext11:
  1130                           	callstack 0
  1131  000C82                     _ad_config:
  1132                           	callstack 28
  1133  000C82                     
  1134                           ;maincode.c: 38:     ADCON2 = 0x24;
  1135  000C82  0E24               	movlw	36
  1136  000C84  6EC0               	movwf	192,c	;volatile
  1137                           
  1138                           ;maincode.c: 39:     ADCON1 = 0x0E;
  1139  000C86  0E0E               	movlw	14
  1140  000C88  6EC1               	movwf	193,c	;volatile
  1141                           
  1142                           ;maincode.c: 40:     ADCON0 = 0x01;
  1143  000C8A  0E01               	movlw	1
  1144  000C8C  6EC2               	movwf	194,c	;volatile
  1145  000C8E  0012               	return		;funcret
  1146  000C90                     __end_of_ad_config:
  1147                           	callstack 0
  1148                           
  1149 ;; *************** function _POS_CURSOR *****************
  1150 ;; Defined at:
  1151 ;;		line 6 in file "LCD.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;  fila            1    wreg     unsigned char 
  1154 ;;  columna         1    8[COMRAM] unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  fila            1    9[COMRAM] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1166 ;;      Params:         1       0       0       0       0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1169 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    4
  1173 ;; This function calls:
  1174 ;;		_ENVIA_LCD_CMD
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           	psect	text12
  1181  000B1A                     __ptext12:
  1182                           	callstack 0
  1183  000B1A                     _POS_CURSOR:
  1184                           	callstack 26
  1185                           
  1186                           ;incstack = 0
  1187                           ;POS_CURSOR@fila stored from wreg
  1188  000B1A  6E0A               	movwf	POS_CURSOR@fila^0,c
  1189  000B1C                     
  1190                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1191  000B1C  040A               	decf	POS_CURSOR@fila^0,w,c
  1192  000B1E  A4D8               	btfss	status,2,c
  1193  000B20  EF94  F005         	goto	u291
  1194  000B24  EF96  F005         	goto	u290
  1195  000B28                     u291:
  1196  000B28  EF9C  F005         	goto	l1152
  1197  000B2C                     u290:
  1198  000B2C                     
  1199                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1200  000B2C  5009               	movf	POS_CURSOR@columna^0,w,c
  1201  000B2E  0F80               	addlw	128
  1202  000B30  ECAA  F005         	call	_ENVIA_LCD_CMD
  1203                           
  1204                           ;LCD.c: 11:  }
  1205  000B34  EFA9  F005         	goto	l116
  1206  000B38                     l1152:
  1207  000B38  0E02               	movlw	2
  1208  000B3A  180A               	xorwf	POS_CURSOR@fila^0,w,c
  1209  000B3C  A4D8               	btfss	status,2,c
  1210  000B3E  EFA3  F005         	goto	u301
  1211  000B42  EFA5  F005         	goto	u300
  1212  000B46                     u301:
  1213  000B46  EFA9  F005         	goto	l116
  1214  000B4A                     u300:
  1215  000B4A                     
  1216                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1217  000B4A  5009               	movf	POS_CURSOR@columna^0,w,c
  1218  000B4C  0FC0               	addlw	192
  1219  000B4E  ECAA  F005         	call	_ENVIA_LCD_CMD
  1220  000B52                     l116:
  1221  000B52  0012               	return		;funcret
  1222  000B54                     __end_of_POS_CURSOR:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _ENVIA_LCD_CMD *****************
  1226 ;; Defined at:
  1227 ;;		line 104 in file "LCD.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  dato            1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  dato            1    6[COMRAM] unsigned char 
  1232 ;;  aux             1    7[COMRAM] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0
  1243 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1245 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		_ENVIA_NIBBLE
  1251 ;;		_LEER_LCD
  1252 ;; This function is called by:
  1253 ;;		_POS_CURSOR
  1254 ;;		_CURSOR_HOME
  1255 ;;		_CURSOR_ONOFF
  1256 ;;		_BORRAR_LCD
  1257 ;;		_LCD_CONFIG
  1258 ;;		_BLINK_CURSOR
  1259 ;;		_DISPLAY_ONOFF
  1260 ;;		_GENERACARACTER
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text13
  1265  000B54                     __ptext13:
  1266                           	callstack 0
  1267  000B54                     _ENVIA_LCD_CMD:
  1268                           	callstack 25
  1269                           
  1270                           ;incstack = 0
  1271                           ;ENVIA_LCD_CMD@dato stored from wreg
  1272  000B54  6E07               	movwf	ENVIA_LCD_CMD@dato^0,c
  1273  000B56                     
  1274                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1275  000B56  908C               	bcf	140,0,c	;volatile
  1276  000B58                     
  1277                           ;LCD.c: 108:  LEER_LCD();
  1278  000B58  ECD3  F004         	call	_LEER_LCD	;wreg free
  1279  000B5C                     
  1280                           ;LCD.c: 109:  TRISD = 0b00000000;
  1281  000B5C  0E00               	movlw	0
  1282  000B5E  6E95               	movwf	149,c	;volatile
  1283  000B60                     
  1284                           ;LCD.c: 111:         _delay(1200);
  1285  000B60  0EF0               	movlw	240
  1286  000B62                     u377:
  1287  000B62  D000               	nop2	
  1288  000B64  2EE8               	decfsz	wreg,f,c
  1289  000B66  D7FD               	bra	u377
  1290  000B68                     
  1291                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1292  000B68  928C               	bcf	140,1,c	;volatile
  1293  000B6A                     
  1294                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1295  000B6A  948C               	bcf	140,2,c	;volatile
  1296  000B6C                     
  1297                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1298  000B6C  908C               	bcf	140,0,c	;volatile
  1299  000B6E                     
  1300                           ;LCD.c: 115:  aux = dato & 0xF0;
  1301  000B6E  5007               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1302  000B70  0BF0               	andlw	240
  1303  000B72  6E08               	movwf	ENVIA_LCD_CMD@aux^0,c
  1304  000B74                     
  1305                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1306  000B74  5008               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1307  000B76  EC2C  F006         	call	_ENVIA_NIBBLE
  1308  000B7A                     
  1309                           ;LCD.c: 117:  aux = dato<<4;
  1310  000B7A  3807               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1311  000B7C  0BF0               	andlw	240
  1312  000B7E  6E08               	movwf	ENVIA_LCD_CMD@aux^0,c
  1313  000B80                     
  1314                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1315  000B80  5008               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1316  000B82  EC2C  F006         	call	_ENVIA_NIBBLE
  1317  000B86  0012               	return		;funcret
  1318  000B88                     __end_of_ENVIA_LCD_CMD:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _ESCRIBE_MENSAJE *****************
  1322 ;; Defined at:
  1323 ;;		line 41 in file "LCD.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  cadena          2    8[COMRAM] PTR const unsigned char 
  1326 ;;		 -> STR_2(5), STR_1(12), 
  1327 ;;  tam             1   10[COMRAM] unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  i               1   13[COMRAM] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1339 ;;      Params:         3       0       0       0       0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1341 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1342 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1343 ;;Total ram usage:        6 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    4
  1346 ;; This function calls:
  1347 ;;		_ENVIA_CHAR
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text14
  1354  000ADC                     __ptext14:
  1355                           	callstack 0
  1356  000ADC                     _ESCRIBE_MENSAJE:
  1357                           	callstack 26
  1358  000ADC                     
  1359                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1360  000ADC  0E00               	movlw	0
  1361  000ADE  6E0E               	movwf	ESCRIBE_MENSAJE@i^0,c
  1362                           
  1363                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1364  000AE0  0E00               	movlw	0
  1365  000AE2  6E0E               	movwf	ESCRIBE_MENSAJE@i^0,c
  1366  000AE4  EF83  F005         	goto	l1162
  1367  000AE8                     l1158:
  1368                           
  1369                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1370  000AE8  500E               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1371  000AEA  2409               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1372  000AEC  6E0C               	movwf	??_ESCRIBE_MENSAJE^0,c
  1373  000AEE  0E00               	movlw	0
  1374  000AF0  200A               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1375  000AF2  6E0D               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1376  000AF4  C00C  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1377  000AF8  C00D  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1378  000AFC                     	if	0	;tblptru may be non-zero
  1379  000AFC                     	endif
  1380  000AFC                     	if	0	;tblptru may be non-zero
  1381  000AFC                     	endif
  1382  000AFC  0008               	tblrd		*
  1383  000AFE  50F5               	movf	tablat,w,c
  1384  000B00  ECC4  F005         	call	_ENVIA_CHAR
  1385  000B04                     
  1386                           ;LCD.c: 47:  }
  1387  000B04  2A0E               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1388  000B06                     l1162:
  1389  000B06  500B               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1390  000B08  5C0E               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1391  000B0A  A0D8               	btfss	status,0,c
  1392  000B0C  EF8A  F005         	goto	u311
  1393  000B10  EF8C  F005         	goto	u310
  1394  000B14                     u311:
  1395  000B14  EF74  F005         	goto	l1158
  1396  000B18                     u310:
  1397  000B18  0012               	return		;funcret
  1398  000B1A                     __end_of_ESCRIBE_MENSAJE:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _ENVIA_CHAR *****************
  1402 ;; Defined at:
  1403 ;;		line 50 in file "LCD.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  dato            1    wreg     unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  dato            1    6[COMRAM] unsigned char 
  1408 ;;  aux             1    7[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    3
  1425 ;; This function calls:
  1426 ;;		_ENVIA_NIBBLE
  1427 ;;		_LEER_LCD
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;;		_ESCRIBE_MENSAJE
  1431 ;;		_GENERACARACTER
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text15
  1436  000B88                     __ptext15:
  1437                           	callstack 0
  1438  000B88                     _ENVIA_CHAR:
  1439                           	callstack 26
  1440                           
  1441                           ;incstack = 0
  1442                           ;ENVIA_CHAR@dato stored from wreg
  1443  000B88  6E07               	movwf	ENVIA_CHAR@dato^0,c
  1444  000B8A                     
  1445                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1446  000B8A  808C               	bsf	140,0,c	;volatile
  1447  000B8C                     
  1448                           ;LCD.c: 54:  LEER_LCD();
  1449  000B8C  ECD3  F004         	call	_LEER_LCD	;wreg free
  1450  000B90                     
  1451                           ;LCD.c: 55:  TRISD = 0x00;
  1452  000B90  0E00               	movlw	0
  1453  000B92  6E95               	movwf	149,c	;volatile
  1454  000B94                     
  1455                           ;LCD.c: 56:         _delay(1200);
  1456  000B94  0EF0               	movlw	240
  1457  000B96                     u387:
  1458  000B96  D000               	nop2	
  1459  000B98  2EE8               	decfsz	wreg,f,c
  1460  000B9A  D7FD               	bra	u387
  1461  000B9C                     
  1462                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1463  000B9C  928C               	bcf	140,1,c	;volatile
  1464  000B9E                     
  1465                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1466  000B9E  948C               	bcf	140,2,c	;volatile
  1467  000BA0                     
  1468                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1469  000BA0  808C               	bsf	140,0,c	;volatile
  1470  000BA2                     
  1471                           ;LCD.c: 61:  aux = dato & 0xF0;
  1472  000BA2  5007               	movf	ENVIA_CHAR@dato^0,w,c
  1473  000BA4  0BF0               	andlw	240
  1474  000BA6  6E08               	movwf	ENVIA_CHAR@aux^0,c
  1475  000BA8                     
  1476                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1477  000BA8  5008               	movf	ENVIA_CHAR@aux^0,w,c
  1478  000BAA  EC2C  F006         	call	_ENVIA_NIBBLE
  1479  000BAE                     
  1480                           ;LCD.c: 63:  aux = dato << 4;
  1481  000BAE  3807               	swapf	ENVIA_CHAR@dato^0,w,c
  1482  000BB0  0BF0               	andlw	240
  1483  000BB2  6E08               	movwf	ENVIA_CHAR@aux^0,c
  1484  000BB4                     
  1485                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1486  000BB4  5008               	movf	ENVIA_CHAR@aux^0,w,c
  1487  000BB6  EC2C  F006         	call	_ENVIA_NIBBLE
  1488  000BBA  0012               	return		;funcret
  1489  000BBC                     __end_of_ENVIA_CHAR:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _LEER_LCD *****************
  1493 ;; Defined at:
  1494 ;;		line 121 in file "LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  aux             1    5[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1511 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1512 ;;Total ram usage:        1 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    2
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_ENVIA_CHAR
  1519 ;;		_ENVIA_LCD_CMD
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text16
  1524  0009A6                     __ptext16:
  1525                           	callstack 0
  1526  0009A6                     _LEER_LCD:
  1527                           	callstack 25
  1528  0009A6                     
  1529                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1530  0009A6  0EF8               	movlw	248
  1531  0009A8  6E95               	movwf	149,c	;volatile
  1532  0009AA                     
  1533                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1534  0009AA  908C               	bcf	140,0,c	;volatile
  1535  0009AC                     
  1536                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1537  0009AC  828C               	bsf	140,1,c	;volatile
  1538  0009AE                     
  1539                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1540  0009AE  848C               	bsf	140,2,c	;volatile
  1541  0009B0                     
  1542                           ;LCD.c: 128:         _delay(1200);
  1543  0009B0  0EF0               	movlw	240
  1544  0009B2                     u397:
  1545  0009B2  D000               	nop2	
  1546  0009B4  2EE8               	decfsz	wreg,f,c
  1547  0009B6  D7FD               	bra	u397
  1548  0009B8                     
  1549                           ;LCD.c: 130:  aux = PORTD;
  1550  0009B8  CF83 F006          	movff	3971,LEER_LCD@aux	;volatile
  1551  0009BC                     
  1552                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1553  0009BC  948C               	bcf	140,2,c	;volatile
  1554  0009BE                     
  1555                           ;LCD.c: 132:         _delay(1200);
  1556  0009BE  0EF0               	movlw	240
  1557  0009C0                     u407:
  1558  0009C0  D000               	nop2	
  1559  0009C2  2EE8               	decfsz	wreg,f,c
  1560  0009C4  D7FD               	bra	u407
  1561  0009C6                     
  1562                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1563  0009C6  848C               	bsf	140,2,c	;volatile
  1564  0009C8                     
  1565                           ;LCD.c: 135:         _delay(1200);
  1566  0009C8  0EF0               	movlw	240
  1567  0009CA                     u417:
  1568  0009CA  D000               	nop2	
  1569  0009CC  2EE8               	decfsz	wreg,f,c
  1570  0009CE  D7FD               	bra	u417
  1571  0009D0                     
  1572                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1573  0009D0  948C               	bcf	140,2,c	;volatile
  1574  0009D2                     l864:
  1575                           
  1576                           ;LCD.c: 138:  aux = aux & 0x80;
  1577  0009D2  5006               	movf	LEER_LCD@aux^0,w,c
  1578  0009D4  0B80               	andlw	128
  1579  0009D6  6E06               	movwf	LEER_LCD@aux^0,c
  1580                           
  1581                           ;LCD.c: 139:  while(aux == 0x80)
  1582  0009D8  EF02  F005         	goto	l878
  1583  0009DC                     l159:
  1584                           
  1585                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1586  0009DC  848C               	bsf	140,2,c	;volatile
  1587  0009DE                     
  1588                           ;LCD.c: 142:             _delay(1200);
  1589  0009DE  0EF0               	movlw	240
  1590  0009E0                     u427:
  1591  0009E0  D000               	nop2	
  1592  0009E2  2EE8               	decfsz	wreg,f,c
  1593  0009E4  D7FD               	bra	u427
  1594  0009E6                     
  1595                           ;LCD.c: 143:             aux = PORTD;
  1596  0009E6  CF83 F006          	movff	3971,LEER_LCD@aux	;volatile
  1597  0009EA                     
  1598                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1599  0009EA  948C               	bcf	140,2,c	;volatile
  1600                           
  1601                           ;LCD.c: 145:             _delay(1200);
  1602  0009EC  0EF0               	movlw	240
  1603  0009EE                     u437:
  1604  0009EE  D000               	nop2	
  1605  0009F0  2EE8               	decfsz	wreg,f,c
  1606  0009F2  D7FD               	bra	u437
  1607  0009F4                     
  1608                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1609  0009F4  848C               	bsf	140,2,c	;volatile
  1610                           
  1611                           ;LCD.c: 147:             _delay(1200);
  1612  0009F6  0EF0               	movlw	240
  1613  0009F8                     u447:
  1614  0009F8  D000               	nop2	
  1615  0009FA  2EE8               	decfsz	wreg,f,c
  1616  0009FC  D7FD               	bra	u447
  1617  0009FE                     
  1618                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1619  0009FE  948C               	bcf	140,2,c	;volatile
  1620  000A00  EFE9  F004         	goto	l864
  1621  000A04                     l878:
  1622                           
  1623                           ;LCD.c: 139:  while(aux == 0x80)
  1624  000A04  0E80               	movlw	128
  1625  000A06  1806               	xorwf	LEER_LCD@aux^0,w,c
  1626  000A08  B4D8               	btfsc	status,2,c
  1627  000A0A  EF09  F005         	goto	u11
  1628  000A0E  EF0B  F005         	goto	u10
  1629  000A12                     u11:
  1630  000A12  EFEE  F004         	goto	l159
  1631  000A16                     u10:
  1632  000A16  0012               	return		;funcret
  1633  000A18                     __end_of_LEER_LCD:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _ENVIA_NIBBLE *****************
  1637 ;; Defined at:
  1638 ;;		line 93 in file "LCD.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  dato            1    wreg     unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  dato            1    5[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        1 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    2
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_ENVIA_CHAR
  1663 ;;		_LCD_CONFIG
  1664 ;;		_ENVIA_LCD_CMD
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text17
  1669  000C58                     __ptext17:
  1670                           	callstack 0
  1671  000C58                     _ENVIA_NIBBLE:
  1672                           	callstack 26
  1673                           
  1674                           ;incstack = 0
  1675                           ;ENVIA_NIBBLE@dato stored from wreg
  1676  000C58  6E06               	movwf	ENVIA_NIBBLE@dato^0,c
  1677  000C5A                     
  1678                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1679  000C5A  0E0F               	movlw	15
  1680  000C5C  168C               	andwf	140,f,c	;volatile
  1681                           
  1682                           ;LCD.c: 96:  dato &= 0xF0;
  1683  000C5E  0EF0               	movlw	240
  1684  000C60  1606               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1685                           
  1686                           ;LCD.c: 97:  LATD|= dato;
  1687  000C62  5006               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1688  000C64  128C               	iorwf	140,f,c	;volatile
  1689  000C66                     
  1690                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1691  000C66  848C               	bsf	140,2,c	;volatile
  1692  000C68                     
  1693                           ;LCD.c: 100:         _delay(1200);
  1694  000C68  0EF0               	movlw	240
  1695  000C6A                     u457:
  1696  000C6A  D000               	nop2	
  1697  000C6C  2EE8               	decfsz	wreg,f,c
  1698  000C6E  D7FD               	bra	u457
  1699  000C70                     
  1700                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1701  000C70  948C               	bcf	140,2,c	;volatile
  1702  000C72  0012               	return		;funcret
  1703  000C74                     __end_of_ENVIA_NIBBLE:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _INT1_ISR *****************
  1707 ;; Defined at:
  1708 ;;		line 84 in file "maincode.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         0       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        4 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		Interrupt level 1
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	intcodelo
  1737  000018                     __pintcodelo:
  1738                           	callstack 0
  1739  000018                     _INT1_ISR:
  1740                           	callstack 25
  1741                           
  1742                           ;incstack = 0
  1743  000018  801C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1744  00001A  CFD8 F003          	movff	status,??_INT1_ISR+1
  1745  00001E  CFE8 F004          	movff	wreg,??_INT1_ISR+2
  1746  000022  CFE0 F005          	movff	bsr,??_INT1_ISR+3
  1747  000026                     
  1748                           ;maincode.c: 85:     T2CONbits.TMR2ON = !T2CONbits.TMR2ON;
  1749  000026  A4CA               	btfss	202,2,c	;volatile
  1750  000028  EF18  F000         	goto	i1u16_21
  1751  00002C  EF1C  F000         	goto	i1u16_20
  1752  000030                     i1u16_21:
  1753  000030  6A02               	clrf	??_INT1_ISR^0,c
  1754  000032  2A02               	incf	??_INT1_ISR^0,f,c
  1755  000034  EF1D  F000         	goto	i1u17_28
  1756  000038                     i1u16_20:
  1757  000038  6A02               	clrf	??_INT1_ISR^0,c
  1758  00003A                     i1u17_28:
  1759  00003A  4602               	rlncf	??_INT1_ISR^0,f,c
  1760  00003C  4602               	rlncf	??_INT1_ISR^0,f,c
  1761  00003E  50CA               	movf	202,w,c	;volatile
  1762  000040  1802               	xorwf	??_INT1_ISR^0,w,c
  1763  000042  0BFB               	andlw	-5
  1764  000044  1802               	xorwf	??_INT1_ISR^0,w,c
  1765  000046  6ECA               	movwf	202,c	;volatile
  1766  000048                     
  1767                           ;maincode.c: 86:     INTCON3bits.INT1IF = 0;
  1768  000048  90F0               	bcf	240,0,c	;volatile
  1769  00004A  C005  FFE0         	movff	??_INT1_ISR+3,bsr
  1770  00004E  C004  FFE8         	movff	??_INT1_ISR+2,wreg
  1771  000052  C003  FFD8         	movff	??_INT1_ISR+1,status
  1772  000056  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1773  000058  0010               	retfie	
  1774  00005A                     __end_of_INT1_ISR:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _TMR2_ISR *****************
  1778 ;; Defined at:
  1779 ;;		line 79 in file "maincode.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        1 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		Interrupt level 2
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	intcode
  1807  000008                     __pintcode:
  1808                           	callstack 0
  1809  000008                     _TMR2_ISR:
  1810                           	callstack 25
  1811                           
  1812                           ;incstack = 0
  1813  000008  821C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1814  00000A  ED0A  F006         	call	int_func,f	;refresh shadow registers
  1815                           
  1816                           	psect	intcode_body
  1817  000C14                     __pintcode_body:
  1818                           	callstack 25
  1819  000C14                     int_func:
  1820                           	callstack 25
  1821  000C14  0006               	pop		; remove dummy address from shadow register refresh
  1822  000C16                     
  1823                           ;maincode.c: 80:     LATEbits.LE0 = !LATEbits.LE0;
  1824  000C16  A08D               	btfss	141,0,c	;volatile
  1825  000C18  EF10  F006         	goto	i2u14_41
  1826  000C1C  EF14  F006         	goto	i2u14_40
  1827  000C20                     i2u14_41:
  1828  000C20  6A01               	clrf	??_TMR2_ISR^0,c
  1829  000C22  2A01               	incf	??_TMR2_ISR^0,f,c
  1830  000C24  EF15  F006         	goto	i2u15_48
  1831  000C28                     i2u14_40:
  1832  000C28  6A01               	clrf	??_TMR2_ISR^0,c
  1833  000C2A                     i2u15_48:
  1834  000C2A  508D               	movf	141,w,c	;volatile
  1835  000C2C  1801               	xorwf	??_TMR2_ISR^0,w,c
  1836  000C2E  0BFE               	andlw	-2
  1837  000C30  1801               	xorwf	??_TMR2_ISR^0,w,c
  1838  000C32  6E8D               	movwf	141,c	;volatile
  1839  000C34                     
  1840                           ;maincode.c: 81:     PIR1bits.TMR2IF = 0;
  1841  000C34  929E               	bcf	158,1,c	;volatile
  1842  000C36  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1843  000C38  0011               	retfie		f
  1844  000C3A                     __end_of_TMR2_ISR:
  1845                           	callstack 0
  1846                           
  1847                           	psect	rparam
  1848  0000                     
  1849                           	psect	temp
  1850  00001C                     btemp:
  1851                           	callstack 0
  1852  00001C                     	ds	1
  1853  0000                     int$flags	set	btemp
  1854  0000                     wtemp8	set	btemp+1
  1855  0000                     ttemp5	set	btemp+1
  1856  0000                     ttemp6	set	btemp+4
  1857  0000                     ttemp7	set	btemp+8
  1858                           
  1859                           	psect	idloc
  1860                           
  1861                           ;Config register IDLOC0 @ 0x200000
  1862                           ;	unspecified, using default values
  1863  200000                     	org	2097152
  1864  200000  FF                 	db	255
  1865                           
  1866                           ;Config register IDLOC1 @ 0x200001
  1867                           ;	unspecified, using default values
  1868  200001                     	org	2097153
  1869  200001  FF                 	db	255
  1870                           
  1871                           ;Config register IDLOC2 @ 0x200002
  1872                           ;	unspecified, using default values
  1873  200002                     	org	2097154
  1874  200002  FF                 	db	255
  1875                           
  1876                           ;Config register IDLOC3 @ 0x200003
  1877                           ;	unspecified, using default values
  1878  200003                     	org	2097155
  1879  200003  FF                 	db	255
  1880                           
  1881                           ;Config register IDLOC4 @ 0x200004
  1882                           ;	unspecified, using default values
  1883  200004                     	org	2097156
  1884  200004  FF                 	db	255
  1885                           
  1886                           ;Config register IDLOC5 @ 0x200005
  1887                           ;	unspecified, using default values
  1888  200005                     	org	2097157
  1889  200005  FF                 	db	255
  1890                           
  1891                           ;Config register IDLOC6 @ 0x200006
  1892                           ;	unspecified, using default values
  1893  200006                     	org	2097158
  1894  200006  FF                 	db	255
  1895                           
  1896                           ;Config register IDLOC7 @ 0x200007
  1897                           ;	unspecified, using default values
  1898  200007                     	org	2097159
  1899  200007  FF                 	db	255
  1900                           
  1901                           	psect	config
  1902                           
  1903                           ;Config register CONFIG1L @ 0x300000
  1904                           ;	PLL Prescaler Selection bits
  1905                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1906                           ;	System Clock Postscaler Selection bits
  1907                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1908                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1909                           ;	USBDIV = 0x0, unprogrammed default
  1910  300000                     	org	3145728
  1911  300000  00                 	db	0
  1912                           
  1913                           ;Config register CONFIG1H @ 0x300001
  1914                           ;	Oscillator Selection bits
  1915                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1916                           ;	Fail-Safe Clock Monitor Enable bit
  1917                           ;	FCMEN = 0x0, unprogrammed default
  1918                           ;	Internal/External Oscillator Switchover bit
  1919                           ;	IESO = 0x0, unprogrammed default
  1920  300001                     	org	3145729
  1921  300001  02                 	db	2
  1922                           
  1923                           ;Config register CONFIG2L @ 0x300002
  1924                           ;	Power-up Timer Enable bit
  1925                           ;	PWRT = ON, PWRT enabled
  1926                           ;	Brown-out Reset Enable bits
  1927                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1928                           ;	Brown-out Reset Voltage bits
  1929                           ;	BORV = 0x3, unprogrammed default
  1930                           ;	USB Voltage Regulator Enable bit
  1931                           ;	VREGEN = 0x0, unprogrammed default
  1932  300002                     	org	3145730
  1933  300002  18                 	db	24
  1934                           
  1935                           ;Config register CONFIG2H @ 0x300003
  1936                           ;	Watchdog Timer Enable bit
  1937                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1938                           ;	Watchdog Timer Postscale Select bits
  1939                           ;	WDTPS = 0xF, unprogrammed default
  1940  300003                     	org	3145731
  1941  300003  1E                 	db	30
  1942                           
  1943                           ; Padding undefined space
  1944  300004                     	org	3145732
  1945  300004  FF                 	db	255
  1946                           
  1947                           ;Config register CONFIG3H @ 0x300005
  1948                           ;	CCP2 MUX bit
  1949                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1950                           ;	PORTB A/D Enable bit
  1951                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1952                           ;	Low-Power Timer 1 Oscillator Enable bit
  1953                           ;	LPT1OSC = 0x0, unprogrammed default
  1954                           ;	MCLR Pin Enable bit
  1955                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1956  300005                     	org	3145733
  1957  300005  81                 	db	129
  1958                           
  1959                           ;Config register CONFIG4L @ 0x300006
  1960                           ;	Stack Full/Underflow Reset Enable bit
  1961                           ;	STVREN = 0x1, unprogrammed default
  1962                           ;	Single-Supply ICSP Enable bit
  1963                           ;	LVP = OFF, Single-Supply ICSP disabled
  1964                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1965                           ;	ICPRT = 0x0, unprogrammed default
  1966                           ;	Extended Instruction Set Enable bit
  1967                           ;	XINST = 0x0, unprogrammed default
  1968                           ;	Background Debugger Enable bit
  1969                           ;	DEBUG = 0x1, unprogrammed default
  1970  300006                     	org	3145734
  1971  300006  81                 	db	129
  1972                           
  1973                           ; Padding undefined space
  1974  300007                     	org	3145735
  1975  300007  FF                 	db	255
  1976                           
  1977                           ;Config register CONFIG5L @ 0x300008
  1978                           ;	unspecified, using default values
  1979                           ;	Code Protection bit
  1980                           ;	CP0 = 0x1, unprogrammed default
  1981                           ;	Code Protection bit
  1982                           ;	CP1 = 0x1, unprogrammed default
  1983                           ;	Code Protection bit
  1984                           ;	CP2 = 0x1, unprogrammed default
  1985                           ;	Code Protection bit
  1986                           ;	CP3 = 0x1, unprogrammed default
  1987  300008                     	org	3145736
  1988  300008  0F                 	db	15
  1989                           
  1990                           ;Config register CONFIG5H @ 0x300009
  1991                           ;	unspecified, using default values
  1992                           ;	Boot Block Code Protection bit
  1993                           ;	CPB = 0x1, unprogrammed default
  1994                           ;	Data EEPROM Code Protection bit
  1995                           ;	CPD = 0x1, unprogrammed default
  1996  300009                     	org	3145737
  1997  300009  C0                 	db	192
  1998                           
  1999                           ;Config register CONFIG6L @ 0x30000A
  2000                           ;	unspecified, using default values
  2001                           ;	Write Protection bit
  2002                           ;	WRT0 = 0x1, unprogrammed default
  2003                           ;	Write Protection bit
  2004                           ;	WRT1 = 0x1, unprogrammed default
  2005                           ;	Write Protection bit
  2006                           ;	WRT2 = 0x1, unprogrammed default
  2007                           ;	Write Protection bit
  2008                           ;	WRT3 = 0x1, unprogrammed default
  2009  30000A                     	org	3145738
  2010  30000A  0F                 	db	15
  2011                           
  2012                           ;Config register CONFIG6H @ 0x30000B
  2013                           ;	unspecified, using default values
  2014                           ;	Configuration Register Write Protection bit
  2015                           ;	WRTC = 0x1, unprogrammed default
  2016                           ;	Boot Block Write Protection bit
  2017                           ;	WRTB = 0x1, unprogrammed default
  2018                           ;	Data EEPROM Write Protection bit
  2019                           ;	WRTD = 0x1, unprogrammed default
  2020  30000B                     	org	3145739
  2021  30000B  E0                 	db	224
  2022                           
  2023                           ;Config register CONFIG7L @ 0x30000C
  2024                           ;	unspecified, using default values
  2025                           ;	Table Read Protection bit
  2026                           ;	EBTR0 = 0x1, unprogrammed default
  2027                           ;	Table Read Protection bit
  2028                           ;	EBTR1 = 0x1, unprogrammed default
  2029                           ;	Table Read Protection bit
  2030                           ;	EBTR2 = 0x1, unprogrammed default
  2031                           ;	Table Read Protection bit
  2032                           ;	EBTR3 = 0x1, unprogrammed default
  2033  30000C                     	org	3145740
  2034  30000C  0F                 	db	15
  2035                           
  2036                           ;Config register CONFIG7H @ 0x30000D
  2037                           ;	unspecified, using default values
  2038                           ;	Boot Block Table Read Protection bit
  2039                           ;	EBTRB = 0x1, unprogrammed default
  2040  30000D                     	org	3145741
  2041  30000D  40                 	db	64
  2042                           tosu	equ	0xFFF
  2043                           tosh	equ	0xFFE
  2044                           tosl	equ	0xFFD
  2045                           stkptr	equ	0xFFC
  2046                           pclatu	equ	0xFFB
  2047                           pclath	equ	0xFFA
  2048                           pcl	equ	0xFF9
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           prodh	equ	0xFF4
  2054                           prodl	equ	0xFF3
  2055                           indf0	equ	0xFEF
  2056                           postinc0	equ	0xFEE
  2057                           postdec0	equ	0xFED
  2058                           preinc0	equ	0xFEC
  2059                           plusw0	equ	0xFEB
  2060                           fsr0h	equ	0xFEA
  2061                           fsr0l	equ	0xFE9
  2062                           wreg	equ	0xFE8
  2063                           indf1	equ	0xFE7
  2064                           postinc1	equ	0xFE6
  2065                           postdec1	equ	0xFE5
  2066                           preinc1	equ	0xFE4
  2067                           plusw1	equ	0xFE3
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           bsr	equ	0xFE0
  2071                           indf2	equ	0xFDF
  2072                           postinc2	equ	0xFDE
  2073                           postdec2	equ	0xFDD
  2074                           preinc2	equ	0xFDC
  2075                           plusw2	equ	0xFDB
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[5]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR2_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR2_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR2_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR2_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR2_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR2_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR2_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2917
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _ad_config
                          _convierte
                         _int_config
                           _lcd_init
                        _tmr2_config
 ---------------------------------------------------------------------------------
 (1) _tmr2_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              9 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              8 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              8 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _int_config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1397
                                             17 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             10 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ad_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              8 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              6 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              8 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              6 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ad_config
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _int_config
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE
   _tmr2_config

 _INT1_ISR (ROOT)

 _TMR2_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      1B       1       28.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      20        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Oct 22 15:21:23 2020

                      l62 0C12                        l71 0C80                        l65 0C8E  
                      l59 08AC                        l68 0CA4                        l77 08DC  
                      l79 08EA                        u10 0A16                        u11 0A12  
                      u20 0BCE                        u21 0BCA                        u30 0BE4  
                      u31 0BE0                        bsr 000FE0             ENVIA_CHAR@aux 0008  
                     l140 0B18                       l116 0B52                       l134 0BEA  
                     l143 0BBA                       l152 0C72                       l161 0A16  
                     l129 0C96                       l146 0C9E                       l155 0B86  
                     l149 0ADA                       l159 09DC                       l900 0B6C  
                     l660 099C                       l902 0B6E                       l670 0A72  
                     l910 0A7C                       l904 0B74                       l920 0AB0  
                     l912 0A80                       l850 09B0                       l842 09A6  
                     l906 0B7A                       l930 0ACE                       l922 0AB6  
                     l914 0A86                       l667 09A4                       l860 09C8  
                     l852 09B8                       l844 09AA                       l908 0B80  
                     l940 0BCE                       l932 0AD4                       l924 0ABC  
                     l916 0A94                       l677 0A7A                       l870 09EA  
                     l862 09D0                       l854 09BC                       l846 09AC  
                     l950 0B90                       l934 0C98                       l942 0BD4  
                     l926 0AC2                       l918 0AA8                       l880 0C5A  
                     l872 09F4                       l864 09D2                       l856 09BE  
                     l848 09AE                       l960 0BA2                       l952 0B94  
                     l936 0C90                       l944 0BE4                       l928 0AC8  
                     l882 0C66                       l874 09FE                       l866 09DE  
                     l858 09C6                       l962 0BA8                       l954 0B9C  
                     l946 0B8A                       l890 0B58                       l938 0BBE  
                     l884 0C68                       l868 09E6                       l964 0BAE  
                     l956 0B9E                       l948 0B8C                       l892 0B5C  
                     l886 0C70                       l878 0A04                       l966 0BB4  
                     l958 0BA0                       l894 0B60                       l896 0B68  
                     l888 0B56                       l898 0B6A                       u300 0B4A  
                     u301 0B46                       u310 0B18                       u230 094C  
                     u311 0B14                       u231 0948                       u240 096A  
                     u320 08EA                       u241 0966                       u321 08E6  
                     u250 0986                       u251 0982                       u260 0A2A  
                     u261 0A26                       u270 0A48                       _PR2 000FCB  
                     u407 09C0                       u271 0A44                       u280 0A5E  
                     u417 09CA                       u281 0A5A                       u337 0BFA  
                     u290 0B2C                       u427 09E0                       u291 0B28  
                     u347 0A8C                       u437 09EE                       u357 0A9A  
                     u447 09F8                       u367 0AAA                       u457 0C6A  
                     u377 0B62                       u387 0B96                       u397 09B2  
             LEER_LCD@aux 0006                       wreg 000FE8              ?_CURSOR_HOME 0001  
          ??_ENVIA_NIBBLE 0006            ENVIA_CHAR@dato 0007                      l1010 0BF0  
                    l1020 0C82                      l1012 0BF4                      l1110 093A  
                    l1014 0C04                      l1022 0CA0                      l1120 0970  
                    l1112 094C                      l1024 0C74                      l1016 0C08  
                    l1008 0BEC                      l1122 0986                      l1114 0954  
                    l1130 0A18                      l1018 0C0C                      l1124 098E  
                    l1116 095C                      l1108 0932                      l1140 0A5E  
                    l1132 0A2A                      l1150 0B2C                      l1126 0990  
                    l1118 096A                      l1142 0A66                      l1134 0A32  
                    l1160 0B04                      l1152 0B38                      l1128 0996  
                    l1144 0A6C                      l1136 0A3A                      l1162 0B06  
                    l1154 0B4A                      l1138 0A48                      l1146 0814  
                    l1170 08BA                      l1156 0ADC                      l1148 0B1C  
                    l1180 08EE                      l1172 08BE                      l1164 08AE  
                    l1158 0AE8                      l1182 0902                      l1174 08C0  
                    l1166 08B2                      l1184 0912                      l1176 08CA  
                    l1168 08B6                      l1186 091A                      l1178 08DA  
                    l1188 0922                      STR_1 0801                      STR_2 080D  
                    _LATD 000F8C                      i1l92 004A                      i2l87 0C36  
                    _main 08AE                      btemp 001C                      start 005A  
           ?_CURSOR_ONOFF 0001              ___param_bank 000000           ??_ENVIA_LCD_CMD 0007  
        __end_of_LEER_LCD 0A18       __size_of_BORRAR_LCD 0008          __end_of_INT1_ISR 005A  
                   ?_main 0001                     _T2CON 000FCA           __end_of___lwdiv 09A6  
         __end_of___lwmod 0A7C                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034          __end_of_TMR2_ISR 0C3A  
             ?_POS_CURSOR 0009                     tablat 000FF5                     ttemp5 001D  
                   ttemp6 0020                     ttemp7 0024                     status 000FD8  
                   wtemp8 001D            ??_CURSOR_ONOFF 0009           __initialization 0C3A  
            __end_of_main 0932           _ESCRIBE_MENSAJE 0ADC                    ??_main 0014  
           __activetblptr 000001              ?_tmr2_config 0001                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    _ADRESH 000FC4  
                  i1l1072 0026                    i1l1074 0048                    i2l1070 0C34  
                  i2l1068 0C16          __end_of_lcd_init 0C14                    _decena 0016  
    __end_of_ENVIA_NIBBLE 0C74                 ??___lwdiv 000F                 ??___lwmod 000A  
     __size_of_POS_CURSOR 003A                    _millar 001A                    clear_0 0C40  
                  _unidad 0014              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0009  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0C46                 ?_INT1_ISR 0001              ??_LCD_CONFIG 0009  
      __size_of_ad_config 000E             ___rparam_used 000001              ??_ENVIA_CHAR 0007  
 __end_of_ESCRIBE_MENSAJE 0B1A            __pcstackCOMRAM 0001                 ?_TMR2_ISR 0001  
      __end_of_BORRAR_LCD 0CA0          ENVIA_LCD_CMD@aux 0008      __end_of_CURSOR_ONOFF 0BEC  
      __end_of_LCD_CONFIG 0ADC        __end_of_ENVIA_CHAR 0BBC        __size_of_convierte 009A  
              ??_LEER_LCD 0006          ENVIA_NIBBLE@dato 0006                ??_INT1_ISR 0002  
              ??_TMR2_ISR 0001         __end_of_ad_config 0C90                   i1u16_20 0038  
                 i1u16_21 0030                   i1u17_28 003A                   i2u14_40 0C28  
                 i2u14_41 0C20                   i2u15_48 0C2A              ??_POS_CURSOR 000A  
               ?_lcd_init 0001      __size_of_tmr2_config 0006     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0009  
                 ___lwdiv 0932                   ___lwmod 0A18              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 0B88         __end_of_convierte 08AE                   __pcinit 0C3A  
      __end_of_POS_CURSOR 0B54                   __ramtop 0800                   _centena 0018  
              _int_config 0C74                   __ptext0 08AE                   __ptext1 0CA0  
                 __ptext2 0BEC                   __ptext3 0A7C                   __ptext4 0BBC  
                 __ptext5 0C90                   __ptext6 0C98                   __ptext7 0C74  
                 __ptext8 0814                   __ptext9 0A18                 _T2CONbits 000FCA  
              ??_lcd_init 000A            __pintcode_body 0C14              _ENVIA_NIBBLE 0C58  
    end_of_initialization 0C46                   int_func 0C14                   postinc0 000FEE  
   __size_of_CURSOR_ONOFF 0030                 _TRISEbits 000F96         __size_of_LEER_LCD 0072  
       __size_of_INT1_ISR 0042              _CURSOR_ONOFF 0BBC        CURSOR_ONOFF@estado 0009  
       __size_of_TMR2_ISR 0C32               ?_int_config 0001             ??_CURSOR_HOME 0009  
     start_initialization 0C3A         ENVIA_LCD_CMD@dato 0007               __pbssCOMRAM 0014  
               _ad_config 0C82       __end_of_CURSOR_HOME 0C98         __size_of_lcd_init 0028  
     __size_of_int_config 000E          ___lwdiv@dividend 000B                 __pintcode 0008  
                ?___lwdiv 000B                  ?___lwmod 0006               __pintcodelo 0018  
             __smallconst 0800                 _convierte 0814           convierte@numero 0012  
           ??_tmr2_config 0006                ?_ad_config 0001          ___lwdiv@quotient 000F  
                _LEER_LCD 09A6                  _INT1_ISR 0018                  _LATDbits 000F8C  
                _LATEbits 000F8D                  _PIE1bits 000F9D                  _PIR1bits 000F9E  
                _RCONbits 000FD0                  _TMR2_ISR 0008          ESCRIBE_MENSAJE@i 000E  
          POS_CURSOR@fila 000A  __size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2  
              ?_convierte 0012               _CURSOR_HOME 0C90               _INTCON3bits 000FF0  
     __end_of_tmr2_config 0CA6    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800          __size_of___lwdiv 0074  
        __size_of___lwmod 0064              ??_int_config 0006           ___lwdiv@divisor 000D  
             ??_ad_config 0006           ___lwdiv@counter 0011                  __ptext10 0932  
                __ptext11 0C82                  __ptext12 0B1A                  __ptext13 0B54  
                __ptext14 0ADC                  __ptext15 0B88                  __ptext16 09A6  
                __ptext17 0C58                _BORRAR_LCD 0C98                  _lcd_init 0BEC  
           __size_of_main 0084                _LCD_CONFIG 0A7C        __end_of_int_config 0C82  
              _ENVIA_CHAR 0B88                  int$flags 001C             _ENVIA_LCD_CMD 0B54  
             ??_convierte 0014                _INTCONbits 000FF2               _tmr2_config 0CA0  
       ??_ESCRIBE_MENSAJE 000C                  intlevel1 0000                  intlevel2 0000  
   ESCRIBE_MENSAJE@cadena 0009          ___lwmod@dividend 0006            ?_ENVIA_LCD_CMD 0001  
         ___lwmod@divisor 0008           ___lwmod@counter 000A               ?_BORRAR_LCD 0001  
           ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0B1A               ?_LCD_CONFIG 0001  
      ESCRIBE_MENSAJE@tam 000B               ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0009  
