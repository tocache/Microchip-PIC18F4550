

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 19 18:16:59 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     
    68                           	psect	idataCOMRAM
    69  000D42                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _o_acento
    73  000D42  02                 	db	2
    74  000D43  04                 	db	4
    75  000D44  0E                 	db	14
    76  000D45  11                 	db	17
    77  000D46  11                 	db	17
    78  000D47  11                 	db	17
    79  000D48  0E                 	db	14
    80  000D49  00                 	db	0
    81  0000                     _ADRESL	set	4035
    82  0000                     _ADRESH	set	4036
    83  0000                     _ADCON0bits	set	4034
    84  0000                     _ADCON0	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADCON2	set	4032
    87  0000                     _PORTD	set	3971
    88  0000                     _LATD	set	3980
    89  0000                     _TRISD	set	3989
    90  0000                     _LATDbits	set	3980
    91                           
    92                           	psect	smallconst
    93  000800                     __psmallconst:
    94                           	callstack 0
    95  000800  00                 	db	0
    96  000801                     STR_2:
    97  000801  6D                 	db	109	;'m'
    98  000802  65                 	db	101	;'e'
    99  000803  74                 	db	116	;'t'
   100  000804  72                 	db	114	;'r'
   101  000805  6F                 	db	111	;'o'
   102  000806  00                 	db	0
   103  000807                     STR_1:
   104  000807  54                 	db	84	;'T'
   105  000808  65                 	db	101	;'e'
   106  000809  72                 	db	114	;'r'
   107  00080A  6D                 	db	109	;'m'
   108  00080B  00                 	db	0
   109  00080C                     STR_3:
   110  00080C  54                 	db	84	;'T'
   111  00080D  30                 	db	48	;'0'
   112  00080E  3A                 	db	58	;':'
   113  00080F  00                 	db	0
   114  000810                     STR_4:
   115  000810  43                 	db	67	;'C'
   116  000811  00                 	db	0
   117  000812  00                 	db	0	; dummy byte at the end
   118  0000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122  000BE4                     __pcinit:
   123                           	callstack 0
   124  000BE4                     start_initialization:
   125                           	callstack 0
   126  000BE4                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Initialize objects allocated to COMRAM (8 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131  000BE4  0E42               	movlw	low __pidataCOMRAM
   132  000BE6  6EF6               	movwf	tblptrl,c
   133  000BE8  0E0D               	movlw	high __pidataCOMRAM
   134  000BEA  6EF7               	movwf	tblptrh,c
   135  000BEC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136  000BEE  6EF8               	movwf	tblptru,c
   137  000BF0  EE00  F01D         	lfsr	0,__pdataCOMRAM
   138  000BF4  EE10 F008          	lfsr	1,8
   139  000BF8                     copy_data0:
   140  000BF8  0009               	tblrd		*+
   141  000BFA  CFF5 FFEE          	movff	tablat,postinc0
   142  000BFE  50E5               	movf	postdec1,w,c
   143  000C00  50E1               	movf	fsr1l,w,c
   144  000C02  E1FA               	bnz	copy_data0
   145                           
   146                           ; Clear objects allocated to COMRAM (12 bytes)
   147  000C04  EE00  F011         	lfsr	0,__pbssCOMRAM
   148  000C08  0E0C               	movlw	12
   149  000C0A                     clear_0:
   150  000C0A  6AEE               	clrf	postinc0,c
   151  000C0C  06E8               	decf	wreg,f,c
   152  000C0E  E1FD               	bnz	clear_0
   153  000C10                     end_of_initialization:
   154                           	callstack 0
   155  000C10                     __end_of__initialization:
   156                           	callstack 0
   157  000C10  0E00               	movlw	low (__Lsmallconst shr (0+16))
   158  000C12  6EF8               	movwf	tblptru,c
   159  000C14  0E08               	movlw	high __Lsmallconst
   160  000C16  6EF7               	movwf	tblptrh,c
   161  000C18  0100               	movlb	0
   162  000C1A  EF0A  F004         	goto	_main	;jump to C main() function
   163                           
   164                           	psect	bssCOMRAM
   165  000011                     __pbssCOMRAM:
   166                           	callstack 0
   167  000011                     _lm35raw:
   168                           	callstack 0
   169  000011                     	ds	2
   170  000013                     _unidad:
   171                           	callstack 0
   172  000013                     	ds	2
   173  000015                     _decena:
   174                           	callstack 0
   175  000015                     	ds	2
   176  000017                     _centena:
   177                           	callstack 0
   178  000017                     	ds	2
   179  000019                     _millar:
   180                           	callstack 0
   181  000019                     	ds	2
   182  00001B                     _d_millar:
   183                           	callstack 0
   184  00001B                     	ds	2
   185                           
   186                           	psect	dataCOMRAM
   187  00001D                     __pdataCOMRAM:
   188                           	callstack 0
   189  00001D                     _o_acento:
   190                           	callstack 0
   191  00001D                     	ds	8
   192                           
   193                           	psect	cstackCOMRAM
   194  000001                     __pcstackCOMRAM:
   195                           	callstack 0
   196  000001                     ?___lwmod:
   197                           	callstack 0
   198  000001                     ENVIA_NIBBLE@dato:
   199                           	callstack 0
   200  000001                     LEER_LCD@aux:
   201                           	callstack 0
   202  000001                     ___lwmod@dividend:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x0
   206  000001                     	ds	1
   207  000002                     ENVIA_CHAR@dato:
   208                           	callstack 0
   209  000002                     ENVIA_LCD_CMD@dato:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x1
   213  000002                     	ds	1
   214  000003                     ENVIA_CHAR@aux:
   215                           	callstack 0
   216  000003                     ENVIA_LCD_CMD@aux:
   217                           	callstack 0
   218  000003                     ___lwmod@divisor:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x2
   222  000003                     	ds	1
   223  000004                     ??_LCD_CONFIG:
   224  000004                     POS_CURSOR@columna:
   225                           	callstack 0
   226  000004                     CURSOR_ONOFF@estado:
   227                           	callstack 0
   228  000004                     ESCRIBE_MENSAJE@cadena:
   229                           	callstack 0
   230  000004                     GENERACARACTER@vector:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x3
   234  000004                     	ds	1
   235  000005                     ??_lcd_init:
   236  000005                     POS_CURSOR@fila:
   237                           	callstack 0
   238  000005                     ___lwmod@counter:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x4
   242  000005                     	ds	1
   243  000006                     ?___lwdiv:
   244                           	callstack 0
   245  000006                     ESCRIBE_MENSAJE@tam:
   246                           	callstack 0
   247  000006                     GENERACARACTER@pos:
   248                           	callstack 0
   249  000006                     ___lwdiv@dividend:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x5
   253  000006                     	ds	1
   254  000007                     ??_ESCRIBE_MENSAJE:
   255  000007                     GENERACARACTER@i:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x6
   259  000007                     	ds	1
   260  000008                     ___lwdiv@divisor:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x7
   264  000008                     	ds	1
   265  000009                     ESCRIBE_MENSAJE@i:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0x8
   269  000009                     	ds	1
   270  00000A                     ___lwdiv@quotient:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x9
   274  00000A                     	ds	2
   275  00000C                     ___lwdiv@counter:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0xB
   279  00000C                     	ds	1
   280  00000D                     convierte@numero:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0xC
   284  00000D                     	ds	2
   285  00000F                     ??_main:
   286                           
   287                           ; 1 bytes @ 0xE
   288  00000F                     	ds	2
   289                           
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 50 in file "maincode.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   309 ;;      Params:         0       0       0       0       0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0       0       0
   311 ;;      Temps:          2       0       0       0       0       0       0       0       0
   312 ;;      Totals:         2       0       0       0       0       0       0       0       0
   313 ;;Total ram usage:        2 bytes
   314 ;; Hardware stack levels required when called:    4
   315 ;; This function calls:
   316 ;;		_ENVIA_CHAR
   317 ;;		_ESCRIBE_MENSAJE
   318 ;;		_GENERACARACTER
   319 ;;		_POS_CURSOR
   320 ;;		___lwdiv
   321 ;;		_adc_init
   322 ;;		_convierte
   323 ;;		_lcd_init
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text0
   330  000814                     __ptext0:
   331                           	callstack 0
   332  000814                     _main:
   333                           	callstack 27
   334  000814                     
   335                           ;maincode.c: 51:     lcd_init();
   336  000814  EC78  F006         	call	_lcd_init	;wreg free
   337  000818                     
   338                           ;maincode.c: 52:     adc_init();
   339  000818  EC9A  F006         	call	_adc_init	;wreg free
   340  00081C                     
   341                           ;maincode.c: 53:     GENERACARACTER(o_acento,0);
   342  00081C  0E1D               	movlw	low _o_acento
   343  00081E  6E04               	movwf	GENERACARACTER@vector^0,c
   344  000820  0E00               	movlw	high _o_acento
   345  000822  6E05               	movwf	(GENERACARACTER@vector+1)^0,c
   346  000824  0E00               	movlw	0
   347  000826  6E06               	movwf	GENERACARACTER@pos^0,c
   348  000828  ECD4  F005         	call	_GENERACARACTER	;wreg free
   349  00082C                     
   350                           ;maincode.c: 54:     POS_CURSOR(1,0);
   351  00082C  0E00               	movlw	0
   352  00082E  6E04               	movwf	POS_CURSOR@columna^0,c
   353  000830  0E01               	movlw	1
   354  000832  EC0F  F006         	call	_POS_CURSOR
   355  000836                     
   356                           ;maincode.c: 55:     ESCRIBE_MENSAJE("Term", 4);
   357  000836  0E07               	movlw	low STR_1
   358  000838  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   359  00083A  0E08               	movlw	high STR_1
   360  00083C  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   361  00083E  0E04               	movlw	4
   362  000840  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   363  000842  ECB5  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   364  000846                     
   365                           ;maincode.c: 56:     ENVIA_CHAR(0x00);
   366  000846  0E00               	movlw	0
   367  000848  EC46  F006         	call	_ENVIA_CHAR
   368  00084C                     
   369                           ;maincode.c: 57:     ESCRIBE_MENSAJE("metro", 5);
   370  00084C  0E01               	movlw	low STR_2
   371  00084E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   372  000850  0E08               	movlw	high STR_2
   373  000852  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   374  000854  0E05               	movlw	5
   375  000856  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   376  000858  ECB5  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   377  00085C                     l1166:
   378                           
   379                           ;maincode.c: 59:         ADCON0bits.GODONE = 1;
   380  00085C  82C2               	bsf	194,1,c	;volatile
   381  00085E                     l135:
   382  00085E  B2C2               	btfsc	194,1,c	;volatile
   383  000860  EF34  F004         	goto	u291
   384  000864  EF36  F004         	goto	u290
   385  000868                     u291:
   386  000868  EF2F  F004         	goto	l135
   387  00086C                     u290:
   388  00086C                     
   389                           ;maincode.c: 61:         lm35raw = (ADRESH << 8) + ADRESL;
   390  00086C  50C4               	movf	196,w,c	;volatile
   391  00086E  6E10               	movwf	(??_main+1)^0,c
   392  000870  6A0F               	clrf	??_main^0,c
   393  000872  50C3               	movf	195,w,c	;volatile
   394  000874  240F               	addwf	??_main^0,w,c
   395  000876  6E11               	movwf	_lm35raw^0,c
   396  000878  0E00               	movlw	0
   397  00087A  2010               	addwfc	(??_main+1)^0,w,c
   398  00087C  6E12               	movwf	(_lm35raw+1)^0,c
   399  00087E                     
   400                           ;maincode.c: 62:         POS_CURSOR(2,0);
   401  00087E  0E00               	movlw	0
   402  000880  6E04               	movwf	POS_CURSOR@columna^0,c
   403  000882  0E02               	movlw	2
   404  000884  EC0F  F006         	call	_POS_CURSOR
   405  000888                     
   406                           ;maincode.c: 63:         ESCRIBE_MENSAJE("T0:", 3);
   407  000888  0E0C               	movlw	low STR_3
   408  00088A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   409  00088C  0E08               	movlw	high STR_3
   410  00088E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   411  000890  0E03               	movlw	3
   412  000892  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   413  000894  ECB5  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   414  000898                     
   415                           ;maincode.c: 64:         lm35raw = lm35raw / 10;
   416  000898  C011  F006         	movff	_lm35raw,___lwdiv@dividend
   417  00089C  C012  F007         	movff	_lm35raw+1,___lwdiv@dividend+1
   418  0008A0  0E00               	movlw	0
   419  0008A2  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   420  0008A4  0E0A               	movlw	10
   421  0008A6  6E08               	movwf	___lwdiv@divisor^0,c
   422  0008A8  ECE0  F004         	call	___lwdiv	;wreg free
   423  0008AC  C006  F011         	movff	?___lwdiv,_lm35raw
   424  0008B0  C007  F012         	movff	?___lwdiv+1,_lm35raw+1
   425  0008B4                     
   426                           ;maincode.c: 65:         convierte(lm35raw);
   427  0008B4  C011  F00D         	movff	_lm35raw,convierte@numero
   428  0008B8  C012  F00E         	movff	_lm35raw+1,convierte@numero+1
   429  0008BC  EC7B  F004         	call	_convierte	;wreg free
   430  0008C0                     
   431                           ;maincode.c: 68:         ENVIA_CHAR(centena+0x30);
   432  0008C0  5017               	movf	_centena^0,w,c
   433  0008C2  0F30               	addlw	48
   434  0008C4  EC46  F006         	call	_ENVIA_CHAR
   435  0008C8                     
   436                           ;maincode.c: 69:         ENVIA_CHAR(decena+0x30);
   437  0008C8  5015               	movf	_decena^0,w,c
   438  0008CA  0F30               	addlw	48
   439  0008CC  EC46  F006         	call	_ENVIA_CHAR
   440  0008D0                     
   441                           ;maincode.c: 70:         ENVIA_CHAR(unidad+0x30);
   442  0008D0  5013               	movf	_unidad^0,w,c
   443  0008D2  0F30               	addlw	48
   444  0008D4  EC46  F006         	call	_ENVIA_CHAR
   445  0008D8                     
   446                           ;maincode.c: 71:         ENVIA_CHAR(0xDF);
   447  0008D8  0EDF               	movlw	223
   448  0008DA  EC46  F006         	call	_ENVIA_CHAR
   449  0008DE                     
   450                           ;maincode.c: 72:         ESCRIBE_MENSAJE("C", 1);
   451  0008DE  0E10               	movlw	low STR_4
   452  0008E0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   453  0008E2  0E08               	movlw	high STR_4
   454  0008E4  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   455  0008E6  0E01               	movlw	1
   456  0008E8  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   457  0008EA  ECB5  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   458  0008EE  EF2E  F004         	goto	l1166
   459  0008F2  EF00  F000         	goto	start
   460  0008F6                     __end_of_main:
   461                           	callstack 0
   462                           
   463 ;; *************** function _lcd_init *****************
   464 ;; Defined at:
   465 ;;		line 26 in file "maincode.c"
   466 ;; Parameters:    Size  Location     Type
   467 ;;		None
   468 ;; Auto vars:     Size  Location     Type
   469 ;;		None
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   479 ;;      Params:         0       0       0       0       0       0       0       0       0
   480 ;;      Locals:         0       0       0       0       0       0       0       0       0
   481 ;;      Temps:          1       0       0       0       0       0       0       0       0
   482 ;;      Totals:         1       0       0       0       0       0       0       0       0
   483 ;;Total ram usage:        1 bytes
   484 ;; Hardware stack levels used:    1
   485 ;; Hardware stack levels required when called:    3
   486 ;; This function calls:
   487 ;;		_BORRAR_LCD
   488 ;;		_CURSOR_HOME
   489 ;;		_CURSOR_ONOFF
   490 ;;		_LCD_CONFIG
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text1
   497  000CF0                     __ptext1:
   498                           	callstack 0
   499  000CF0                     _lcd_init:
   500                           	callstack 27
   501  000CF0                     
   502                           ;maincode.c: 27:     TRISD = 0x00;
   503  000CF0  0E00               	movlw	0
   504  000CF2  6E95               	movwf	149,c	;volatile
   505  000CF4                     
   506                           ;maincode.c: 28:     LCD_CONFIG();
   507  000CF4  EC85  F005         	call	_LCD_CONFIG	;wreg free
   508  000CF8                     
   509                           ;maincode.c: 29:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   510  000CF8  0EEA               	movlw	234
   511  000CFA  6E05               	movwf	??_lcd_init^0,c
   512  000CFC  0EC3               	movlw	195
   513  000CFE                     u307:
   514  000CFE  2EE8               	decfsz	wreg,f,c
   515  000D00  D7FE               	bra	u307
   516  000D02  2E05               	decfsz	??_lcd_init^0,f,c
   517  000D04  D7FC               	bra	u307
   518  000D06  F000               	nop	
   519  000D08                     
   520                           ;maincode.c: 30:     BORRAR_LCD();
   521  000D08  ECA9  F006         	call	_BORRAR_LCD	;wreg free
   522  000D0C                     
   523                           ;maincode.c: 31:     CURSOR_HOME();
   524  000D0C  ECA5  F006         	call	_CURSOR_HOME	;wreg free
   525  000D10                     
   526                           ;maincode.c: 32:     CURSOR_ONOFF(1);
   527  000D10  0E01               	movlw	1
   528  000D12  EC60  F006         	call	_CURSOR_ONOFF
   529  000D16  0012               	return		;funcret
   530  000D18                     __end_of_lcd_init:
   531                           	callstack 0
   532                           
   533 ;; *************** function _LCD_CONFIG *****************
   534 ;; Defined at:
   535 ;;		line 72 in file "../20202_c_electron.X/LCD.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   549 ;;      Params:         0       0       0       0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0       0       0
   551 ;;      Temps:          1       0       0       0       0       0       0       0       0
   552 ;;      Totals:         1       0       0       0       0       0       0       0       0
   553 ;;Total ram usage:        1 bytes
   554 ;; Hardware stack levels used:    1
   555 ;; Hardware stack levels required when called:    2
   556 ;; This function calls:
   557 ;;		_ENVIA_LCD_CMD
   558 ;;		_ENVIA_NIBBLE
   559 ;; This function is called by:
   560 ;;		_lcd_init
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           	psect	text2
   565  000B0A                     __ptext2:
   566                           	callstack 0
   567  000B0A                     _LCD_CONFIG:
   568                           	callstack 27
   569  000B0A                     
   570                           ;../20202_c_electron.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   571  000B0A  908C               	bcf	140,0,c	;volatile
   572                           
   573                           ;../20202_c_electron.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   574  000B0C  928C               	bcf	140,1,c	;volatile
   575  000B0E                     
   576                           ;../20202_c_electron.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   577  000B0E  0E30               	movlw	48
   578  000B10  EC8C  F006         	call	_ENVIA_NIBBLE
   579  000B14                     
   580                           ;../20202_c_electron.X/LCD.c: 77:         _delay(24000);
   581  000B14  0E20               	movlw	32
   582  000B16  6E04               	movwf	??_LCD_CONFIG^0,c
   583  000B18  0E2A               	movlw	42
   584  000B1A                     u317:
   585  000B1A  2EE8               	decfsz	wreg,f,c
   586  000B1C  D7FE               	bra	u317
   587  000B1E  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   588  000B20  D7FC               	bra	u317
   589  000B22                     
   590                           ;../20202_c_electron.X/LCD.c: 78:         _delay(24000);
   591  000B22  0E20               	movlw	32
   592  000B24  6E04               	movwf	??_LCD_CONFIG^0,c
   593  000B26  0E2A               	movlw	42
   594  000B28                     u327:
   595  000B28  2EE8               	decfsz	wreg,f,c
   596  000B2A  D7FE               	bra	u327
   597  000B2C  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   598  000B2E  D7FC               	bra	u327
   599                           
   600                           ;../20202_c_electron.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   601  000B30  0E30               	movlw	48
   602  000B32  EC8C  F006         	call	_ENVIA_NIBBLE
   603  000B36                     
   604                           ;../20202_c_electron.X/LCD.c: 83:  _delay(1200);
   605  000B36  0EF0               	movlw	240
   606  000B38                     u337:
   607  000B38  D000               	nop2	
   608  000B3A  2EE8               	decfsz	wreg,f,c
   609  000B3C  D7FD               	bra	u337
   610  000B3E                     
   611                           ;../20202_c_electron.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   612  000B3E  0E30               	movlw	48
   613  000B40  EC8C  F006         	call	_ENVIA_NIBBLE
   614  000B44                     
   615                           ;../20202_c_electron.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   616  000B44  0E20               	movlw	32
   617  000B46  EC8C  F006         	call	_ENVIA_NIBBLE
   618  000B4A                     
   619                           ;../20202_c_electron.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   620  000B4A  0E01               	movlw	1
   621  000B4C  EC2C  F006         	call	_ENVIA_LCD_CMD
   622  000B50                     
   623                           ;../20202_c_electron.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   624  000B50  0E28               	movlw	40
   625  000B52  EC2C  F006         	call	_ENVIA_LCD_CMD
   626  000B56                     
   627                           ;../20202_c_electron.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   628  000B56  0E0F               	movlw	15
   629  000B58  EC2C  F006         	call	_ENVIA_LCD_CMD
   630  000B5C                     
   631                           ;../20202_c_electron.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   632  000B5C  0E06               	movlw	6
   633  000B5E  EC2C  F006         	call	_ENVIA_LCD_CMD
   634  000B62                     
   635                           ;../20202_c_electron.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   636  000B62  0E01               	movlw	1
   637  000B64  EC2C  F006         	call	_ENVIA_LCD_CMD
   638  000B68  0012               	return		;funcret
   639  000B6A                     __end_of_LCD_CONFIG:
   640                           	callstack 0
   641                           
   642 ;; *************** function _CURSOR_ONOFF *****************
   643 ;; Defined at:
   644 ;;		line 35 in file "../20202_c_electron.X/LCD.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  estado          1    wreg     unsigned char 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;  estado          1    3[COMRAM] unsigned char 
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         1       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         1       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        1 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    2
   665 ;; This function calls:
   666 ;;		_ENVIA_LCD_CMD
   667 ;; This function is called by:
   668 ;;		_lcd_init
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text3
   673  000CC0                     __ptext3:
   674                           	callstack 0
   675  000CC0                     _CURSOR_ONOFF:
   676                           	callstack 27
   677                           
   678                           ;incstack = 0
   679                           ;CURSOR_ONOFF@estado stored from wreg
   680  000CC0  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   681  000CC2                     
   682                           ;../20202_c_electron.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20202_c_ele
      +                          ctron.X/LCD.c: 36: {;../20202_c_electron.X/LCD.c: 37:  if(estado == 0) ENVIA_LCD_CMD(0x0
      +                          E);
   683  000CC2  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   684  000CC4  A4D8               	btfss	status,2,c
   685  000CC6  EF67  F006         	goto	u21
   686  000CCA  EF69  F006         	goto	u20
   687  000CCE                     u21:
   688  000CCE  EF6C  F006         	goto	l890
   689  000CD2                     u20:
   690  000CD2  0E0E               	movlw	14
   691  000CD4  EC2C  F006         	call	_ENVIA_LCD_CMD
   692  000CD8                     l890:
   693                           
   694                           ;../20202_c_electron.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   695  000CD8  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   696  000CDA  A4D8               	btfss	status,2,c
   697  000CDC  EF72  F006         	goto	u31
   698  000CE0  EF74  F006         	goto	u30
   699  000CE4                     u31:
   700  000CE4  EF77  F006         	goto	l42
   701  000CE8                     u30:
   702  000CE8  0E0C               	movlw	12
   703  000CEA  EC2C  F006         	call	_ENVIA_LCD_CMD
   704  000CEE                     l42:
   705  000CEE  0012               	return		;funcret
   706  000CF0                     __end_of_CURSOR_ONOFF:
   707                           	callstack 0
   708                           
   709 ;; *************** function _CURSOR_HOME *****************
   710 ;; Defined at:
   711 ;;		line 30 in file "../20202_c_electron.X/LCD.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, status,2, status,0, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   725 ;;      Params:         0       0       0       0       0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    2
   732 ;; This function calls:
   733 ;;		_ENVIA_LCD_CMD
   734 ;; This function is called by:
   735 ;;		_lcd_init
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text4
   740  000D4A                     __ptext4:
   741                           	callstack 0
   742  000D4A                     _CURSOR_HOME:
   743                           	callstack 27
   744  000D4A                     
   745                           ;../20202_c_electron.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   746  000D4A  0E02               	movlw	2
   747  000D4C  EC2C  F006         	call	_ENVIA_LCD_CMD
   748  000D50  0012               	return		;funcret
   749  000D52                     __end_of_CURSOR_HOME:
   750                           	callstack 0
   751                           
   752 ;; *************** function _BORRAR_LCD *****************
   753 ;; Defined at:
   754 ;;		line 67 in file "../20202_c_electron.X/LCD.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         0       0       0       0       0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; Hardware stack levels required when called:    2
   775 ;; This function calls:
   776 ;;		_ENVIA_LCD_CMD
   777 ;; This function is called by:
   778 ;;		_lcd_init
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text5
   783  000D52                     __ptext5:
   784                           	callstack 0
   785  000D52                     _BORRAR_LCD:
   786                           	callstack 27
   787  000D52                     
   788                           ;../20202_c_electron.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   789  000D52  0E01               	movlw	1
   790  000D54  EC2C  F006         	call	_ENVIA_LCD_CMD
   791  000D58  0012               	return		;funcret
   792  000D5A                     __end_of_BORRAR_LCD:
   793                           	callstack 0
   794                           
   795 ;; *************** function _convierte *****************
   796 ;; Defined at:
   797 ;;		line 42 in file "maincode.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  numero          2   12[COMRAM] unsigned int 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   811 ;;      Params:         2       0       0       0       0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0       0       0
   814 ;;      Totals:         2       0       0       0       0       0       0       0       0
   815 ;;Total ram usage:        2 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		___lwdiv
   820 ;;		___lwmod
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text6
   827  0008F6                     __ptext6:
   828                           	callstack 0
   829  0008F6                     _convierte:
   830                           	callstack 29
   831  0008F6                     
   832                           ;maincode.c: 43:     d_millar = numero / 10000;
   833  0008F6  C00D  F006         	movff	convierte@numero,___lwdiv@dividend
   834  0008FA  C00E  F007         	movff	convierte@numero+1,___lwdiv@dividend+1
   835  0008FE  0E27               	movlw	39
   836  000900  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   837  000902  0E10               	movlw	16
   838  000904  6E08               	movwf	___lwdiv@divisor^0,c
   839  000906  ECE0  F004         	call	___lwdiv	;wreg free
   840  00090A  C006  F01B         	movff	?___lwdiv,_d_millar
   841  00090E  C007  F01C         	movff	?___lwdiv+1,_d_millar+1
   842                           
   843                           ;maincode.c: 44:     millar = (numero %10000) /1000;
   844  000912  0E27               	movlw	39
   845  000914  6E04               	movwf	(___lwmod@divisor+1)^0,c
   846  000916  0E10               	movlw	16
   847  000918  6E03               	movwf	___lwmod@divisor^0,c
   848  00091A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   849  00091E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   850  000922  EC53  F005         	call	___lwmod	;wreg free
   851  000926  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   852  00092A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   853  00092E  0E03               	movlw	3
   854  000930  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   855  000932  0EE8               	movlw	232
   856  000934  6E08               	movwf	___lwdiv@divisor^0,c
   857  000936  ECE0  F004         	call	___lwdiv	;wreg free
   858  00093A  C006  F019         	movff	?___lwdiv,_millar
   859  00093E  C007  F01A         	movff	?___lwdiv+1,_millar+1
   860                           
   861                           ;maincode.c: 45:     centena = (numero % 1000) / 100;
   862  000942  0E03               	movlw	3
   863  000944  6E04               	movwf	(___lwmod@divisor+1)^0,c
   864  000946  0EE8               	movlw	232
   865  000948  6E03               	movwf	___lwmod@divisor^0,c
   866  00094A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   867  00094E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   868  000952  EC53  F005         	call	___lwmod	;wreg free
   869  000956  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   870  00095A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   871  00095E  0E00               	movlw	0
   872  000960  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   873  000962  0E64               	movlw	100
   874  000964  6E08               	movwf	___lwdiv@divisor^0,c
   875  000966  ECE0  F004         	call	___lwdiv	;wreg free
   876  00096A  C006  F017         	movff	?___lwdiv,_centena
   877  00096E  C007  F018         	movff	?___lwdiv+1,_centena+1
   878                           
   879                           ;maincode.c: 46:     decena = (numero % 100) / 10;
   880  000972  0E00               	movlw	0
   881  000974  6E04               	movwf	(___lwmod@divisor+1)^0,c
   882  000976  0E64               	movlw	100
   883  000978  6E03               	movwf	___lwmod@divisor^0,c
   884  00097A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   885  00097E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   886  000982  EC53  F005         	call	___lwmod	;wreg free
   887  000986  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   888  00098A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   889  00098E  0E00               	movlw	0
   890  000990  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   891  000992  0E0A               	movlw	10
   892  000994  6E08               	movwf	___lwdiv@divisor^0,c
   893  000996  ECE0  F004         	call	___lwdiv	;wreg free
   894  00099A  C006  F015         	movff	?___lwdiv,_decena
   895  00099E  C007  F016         	movff	?___lwdiv+1,_decena+1
   896                           
   897                           ;maincode.c: 47:     unidad = numero % 10;
   898  0009A2  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   899  0009A6  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   900  0009AA  0E00               	movlw	0
   901  0009AC  6E04               	movwf	(___lwmod@divisor+1)^0,c
   902  0009AE  0E0A               	movlw	10
   903  0009B0  6E03               	movwf	___lwmod@divisor^0,c
   904  0009B2  EC53  F005         	call	___lwmod	;wreg free
   905  0009B6  C001  F013         	movff	?___lwmod,_unidad
   906  0009BA  C002  F014         	movff	?___lwmod+1,_unidad+1
   907  0009BE  0012               	return		;funcret
   908  0009C0                     __end_of_convierte:
   909                           	callstack 0
   910                           
   911 ;; *************** function ___lwmod *****************
   912 ;; Defined at:
   913 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwmod.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  dividend        2    0[COMRAM] unsigned int 
   916 ;;  divisor         2    2[COMRAM] unsigned int 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  counter         1    4[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2    0[COMRAM] unsigned int 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   928 ;;      Params:         4       0       0       0       0       0       0       0       0
   929 ;;      Locals:         1       0       0       0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0
   931 ;;      Totals:         5       0       0       0       0       0       0       0       0
   932 ;;Total ram usage:        5 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_convierte
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text7
   942  000AA6                     __ptext7:
   943                           	callstack 0
   944  000AA6                     ___lwmod:
   945                           	callstack 29
   946  000AA6  5003               	movf	___lwmod@divisor^0,w,c
   947  000AA8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   948  000AAA  B4D8               	btfsc	status,2,c
   949  000AAC  EF5A  F005         	goto	u221
   950  000AB0  EF5C  F005         	goto	u220
   951  000AB4                     u221:
   952  000AB4  EF80  F005         	goto	l644
   953  000AB8                     u220:
   954  000AB8  0E01               	movlw	1
   955  000ABA  6E05               	movwf	___lwmod@counter^0,c
   956  000ABC  EF64  F005         	goto	l1108
   957  000AC0                     l1106:
   958  000AC0  90D8               	bcf	status,0,c
   959  000AC2  3603               	rlcf	___lwmod@divisor^0,f,c
   960  000AC4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   961  000AC6  2A05               	incf	___lwmod@counter^0,f,c
   962  000AC8                     l1108:
   963  000AC8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   964  000ACA  EF69  F005         	goto	u231
   965  000ACE  EF6B  F005         	goto	u230
   966  000AD2                     u231:
   967  000AD2  EF60  F005         	goto	l1106
   968  000AD6                     u230:
   969  000AD6                     l1110:
   970  000AD6  5003               	movf	___lwmod@divisor^0,w,c
   971  000AD8  5C01               	subwf	___lwmod@dividend^0,w,c
   972  000ADA  5004               	movf	(___lwmod@divisor+1)^0,w,c
   973  000ADC  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   974  000ADE  A0D8               	btfss	status,0,c
   975  000AE0  EF74  F005         	goto	u241
   976  000AE4  EF76  F005         	goto	u240
   977  000AE8                     u241:
   978  000AE8  EF7A  F005         	goto	l1114
   979  000AEC                     u240:
   980  000AEC  5003               	movf	___lwmod@divisor^0,w,c
   981  000AEE  5E01               	subwf	___lwmod@dividend^0,f,c
   982  000AF0  5004               	movf	(___lwmod@divisor+1)^0,w,c
   983  000AF2  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   984  000AF4                     l1114:
   985  000AF4  90D8               	bcf	status,0,c
   986  000AF6  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   987  000AF8  3203               	rrcf	___lwmod@divisor^0,f,c
   988  000AFA  2E05               	decfsz	___lwmod@counter^0,f,c
   989  000AFC  EF6B  F005         	goto	l1110
   990  000B00                     l644:
   991  000B00  C001  F001         	movff	___lwmod@dividend,?___lwmod
   992  000B04  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   993  000B08  0012               	return		;funcret
   994  000B0A                     __end_of___lwmod:
   995                           	callstack 0
   996                           
   997 ;; *************** function ___lwdiv *****************
   998 ;; Defined at:
   999 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lwdiv.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  dividend        2    5[COMRAM] unsigned int 
  1002 ;;  divisor         2    7[COMRAM] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  quotient        2    9[COMRAM] unsigned int 
  1005 ;;  counter         1   11[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  2    5[COMRAM] unsigned int 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1015 ;;      Params:         4       0       0       0       0       0       0       0       0
  1016 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1018 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1019 ;;Total ram usage:        7 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; This function calls:
  1022 ;;		Nothing
  1023 ;; This function is called by:
  1024 ;;		_convierte
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           	psect	text8
  1030  0009C0                     __ptext8:
  1031                           	callstack 0
  1032  0009C0                     ___lwdiv:
  1033                           	callstack 29
  1034  0009C0  0E00               	movlw	0
  1035  0009C2  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1036  0009C4  0E00               	movlw	0
  1037  0009C6  6E0A               	movwf	___lwdiv@quotient^0,c
  1038  0009C8  5008               	movf	___lwdiv@divisor^0,w,c
  1039  0009CA  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1040  0009CC  B4D8               	btfsc	status,2,c
  1041  0009CE  EFEB  F004         	goto	u191
  1042  0009D2  EFED  F004         	goto	u190
  1043  0009D6                     u191:
  1044  0009D6  EF15  F005         	goto	l634
  1045  0009DA                     u190:
  1046  0009DA  0E01               	movlw	1
  1047  0009DC  6E0C               	movwf	___lwdiv@counter^0,c
  1048  0009DE  EFF5  F004         	goto	l1088
  1049  0009E2                     l1086:
  1050  0009E2  90D8               	bcf	status,0,c
  1051  0009E4  3608               	rlcf	___lwdiv@divisor^0,f,c
  1052  0009E6  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1053  0009E8  2A0C               	incf	___lwdiv@counter^0,f,c
  1054  0009EA                     l1088:
  1055  0009EA  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1056  0009EC  EFFA  F004         	goto	u201
  1057  0009F0  EFFC  F004         	goto	u200
  1058  0009F4                     u201:
  1059  0009F4  EFF1  F004         	goto	l1086
  1060  0009F8                     u200:
  1061  0009F8                     l1090:
  1062  0009F8  90D8               	bcf	status,0,c
  1063  0009FA  360A               	rlcf	___lwdiv@quotient^0,f,c
  1064  0009FC  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1065  0009FE  5008               	movf	___lwdiv@divisor^0,w,c
  1066  000A00  5C06               	subwf	___lwdiv@dividend^0,w,c
  1067  000A02  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1068  000A04  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1069  000A06  A0D8               	btfss	status,0,c
  1070  000A08  EF08  F005         	goto	u211
  1071  000A0C  EF0A  F005         	goto	u210
  1072  000A10                     u211:
  1073  000A10  EF0F  F005         	goto	l1098
  1074  000A14                     u210:
  1075  000A14  5008               	movf	___lwdiv@divisor^0,w,c
  1076  000A16  5E06               	subwf	___lwdiv@dividend^0,f,c
  1077  000A18  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1078  000A1A  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1079  000A1C  800A               	bsf	___lwdiv@quotient^0,0,c
  1080  000A1E                     l1098:
  1081  000A1E  90D8               	bcf	status,0,c
  1082  000A20  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1083  000A22  3208               	rrcf	___lwdiv@divisor^0,f,c
  1084  000A24  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1085  000A26  EFFC  F004         	goto	l1090
  1086  000A2A                     l634:
  1087  000A2A  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1088  000A2E  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1089  000A32  0012               	return		;funcret
  1090  000A34                     __end_of___lwdiv:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _adc_init *****************
  1094 ;; Defined at:
  1095 ;;		line 36 in file "maincode.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text9
  1123  000D34                     __ptext9:
  1124                           	callstack 0
  1125  000D34                     _adc_init:
  1126                           	callstack 30
  1127  000D34                     
  1128                           ;maincode.c: 37:     ADCON2 = 0xA4;
  1129  000D34  0EA4               	movlw	164
  1130  000D36  6EC0               	movwf	192,c	;volatile
  1131                           
  1132                           ;maincode.c: 38:     ADCON1 = 0x1B;
  1133  000D38  0E1B               	movlw	27
  1134  000D3A  6EC1               	movwf	193,c	;volatile
  1135                           
  1136                           ;maincode.c: 39:     ADCON0 = 0x01;
  1137  000D3C  0E01               	movlw	1
  1138  000D3E  6EC2               	movwf	194,c	;volatile
  1139  000D40  0012               	return		;funcret
  1140  000D42                     __end_of_adc_init:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _POS_CURSOR *****************
  1144 ;; Defined at:
  1145 ;;		line 6 in file "../20202_c_electron.X/LCD.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  fila            1    wreg     unsigned char 
  1148 ;;  columna         1    3[COMRAM] unsigned char 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  fila            1    4[COMRAM] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         1       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        2 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    2
  1167 ;; This function calls:
  1168 ;;		_ENVIA_LCD_CMD
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text10
  1175  000C1E                     __ptext10:
  1176                           	callstack 0
  1177  000C1E                     _POS_CURSOR:
  1178                           	callstack 28
  1179                           
  1180                           ;incstack = 0
  1181                           ;POS_CURSOR@fila stored from wreg
  1182  000C1E  6E05               	movwf	POS_CURSOR@fila^0,c
  1183  000C20                     
  1184                           ;../20202_c_electron.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char column
      +                          a);../20202_c_electron.X/LCD.c: 7: {;../20202_c_electron.X/LCD.c: 8:  if(fila == 1)
  1185  000C20  0405               	decf	POS_CURSOR@fila^0,w,c
  1186  000C22  A4D8               	btfss	status,2,c
  1187  000C24  EF16  F006         	goto	u251
  1188  000C28  EF18  F006         	goto	u250
  1189  000C2C                     u251:
  1190  000C2C  EF1E  F006         	goto	l1122
  1191  000C30                     u250:
  1192  000C30                     
  1193                           ;../20202_c_electron.X/LCD.c: 9:  {;../20202_c_electron.X/LCD.c: 10:   ENVIA_LCD_CMD(0x8
      +                          0+columna);
  1194  000C30  5004               	movf	POS_CURSOR@columna^0,w,c
  1195  000C32  0F80               	addlw	128
  1196  000C34  EC2C  F006         	call	_ENVIA_LCD_CMD
  1197                           
  1198                           ;../20202_c_electron.X/LCD.c: 11:  }
  1199  000C38  EF2B  F006         	goto	l24
  1200  000C3C                     l1122:
  1201  000C3C  0E02               	movlw	2
  1202  000C3E  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1203  000C40  A4D8               	btfss	status,2,c
  1204  000C42  EF25  F006         	goto	u261
  1205  000C46  EF27  F006         	goto	u260
  1206  000C4A                     u261:
  1207  000C4A  EF2B  F006         	goto	l24
  1208  000C4E                     u260:
  1209  000C4E                     
  1210                           ;../20202_c_electron.X/LCD.c: 13:  {;../20202_c_electron.X/LCD.c: 14:   ENVIA_LCD_CMD(0x
      +                          C0+columna);
  1211  000C4E  5004               	movf	POS_CURSOR@columna^0,w,c
  1212  000C50  0FC0               	addlw	192
  1213  000C52  EC2C  F006         	call	_ENVIA_LCD_CMD
  1214  000C56                     l24:
  1215  000C56  0012               	return		;funcret
  1216  000C58                     __end_of_POS_CURSOR:
  1217                           	callstack 0
  1218                           
  1219 ;; *************** function _GENERACARACTER *****************
  1220 ;; Defined at:
  1221 ;;		line 153 in file "../20202_c_electron.X/LCD.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  1224 ;;		 -> o_acento(8), 
  1225 ;;  pos             1    5[COMRAM] unsigned char 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  i               1    6[COMRAM] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1237 ;;      Params:         3       0       0       0       0       0       0       0       0
  1238 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1239 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1240 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1241 ;;Total ram usage:        4 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    2
  1244 ;; This function calls:
  1245 ;;		_ENVIA_CHAR
  1246 ;;		_ENVIA_LCD_CMD
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text11
  1253  000BA8                     __ptext11:
  1254                           	callstack 0
  1255  000BA8                     _GENERACARACTER:
  1256                           	callstack 28
  1257  000BA8                     
  1258                           ;../20202_c_electron.X/LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsig
      +                          ned char pos);../20202_c_electron.X/LCD.c: 154: {;../20202_c_electron.X/LCD.c: 155:  uns
      +                          igned char i;;../20202_c_electron.X/LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1259  000BA8  5006               	movf	GENERACARACTER@pos^0,w,c
  1260  000BAA  0D08               	mullw	8
  1261  000BAC  50F3               	movf	243,w,c
  1262  000BAE  0F40               	addlw	64
  1263  000BB0  EC2C  F006         	call	_ENVIA_LCD_CMD
  1264  000BB4                     
  1265                           ;../20202_c_electron.X/LCD.c: 157:  for(i=0;i<8;i++)
  1266  000BB4  0E00               	movlw	0
  1267  000BB6  6E07               	movwf	GENERACARACTER@i^0,c
  1268  000BB8                     l1142:
  1269                           
  1270                           ;../20202_c_electron.X/LCD.c: 158:  {;../20202_c_electron.X/LCD.c: 159:   ENVIA_CHAR(vec
      +                          tor[i]);
  1271  000BB8  5007               	movf	GENERACARACTER@i^0,w,c
  1272  000BBA  2404               	addwf	GENERACARACTER@vector^0,w,c
  1273  000BBC  6ED9               	movwf	fsr2l,c
  1274  000BBE  0E00               	movlw	0
  1275  000BC0  2005               	addwfc	(GENERACARACTER@vector+1)^0,w,c
  1276  000BC2  6EDA               	movwf	fsr2h,c
  1277  000BC4  50DF               	movf	indf2,w,c
  1278  000BC6  EC46  F006         	call	_ENVIA_CHAR
  1279  000BCA                     
  1280                           ;../20202_c_electron.X/LCD.c: 160:  }
  1281  000BCA  2A07               	incf	GENERACARACTER@i^0,f,c
  1282  000BCC  0E07               	movlw	7
  1283  000BCE  6407               	cpfsgt	GENERACARACTER@i^0,c
  1284  000BD0  EFEC  F005         	goto	u281
  1285  000BD4  EFEE  F005         	goto	u280
  1286  000BD8                     u281:
  1287  000BD8  EFDC  F005         	goto	l1142
  1288  000BDC                     u280:
  1289  000BDC                     
  1290                           ;../20202_c_electron.X/LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1291  000BDC  0E80               	movlw	128
  1292  000BDE  EC2C  F006         	call	_ENVIA_LCD_CMD
  1293  000BE2  0012               	return		;funcret
  1294  000BE4                     __end_of_GENERACARACTER:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _ENVIA_LCD_CMD *****************
  1298 ;; Defined at:
  1299 ;;		line 104 in file "../20202_c_electron.X/LCD.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  dato            1    wreg     unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  dato            1    1[COMRAM] unsigned char 
  1304 ;;  aux             1    2[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1314 ;;      Params:         0       0       0       0       0       0       0       0       0
  1315 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    1
  1321 ;; This function calls:
  1322 ;;		_ENVIA_NIBBLE
  1323 ;;		_LEER_LCD
  1324 ;; This function is called by:
  1325 ;;		_POS_CURSOR
  1326 ;;		_CURSOR_HOME
  1327 ;;		_CURSOR_ONOFF
  1328 ;;		_BORRAR_LCD
  1329 ;;		_LCD_CONFIG
  1330 ;;		_GENERACARACTER
  1331 ;;		_BLINK_CURSOR
  1332 ;;		_DISPLAY_ONOFF
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text12
  1337  000C58                     __ptext12:
  1338                           	callstack 0
  1339  000C58                     _ENVIA_LCD_CMD:
  1340                           	callstack 27
  1341                           
  1342                           ;incstack = 0
  1343                           ;ENVIA_LCD_CMD@dato stored from wreg
  1344  000C58  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1345  000C5A                     
  1346                           ;../20202_c_electron.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20202_c_ele
      +                          ctron.X/LCD.c: 105: {;../20202_c_electron.X/LCD.c: 106:  unsigned char aux;;../20202_c_e
      +                          lectron.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  1347  000C5A  908C               	bcf	140,0,c	;volatile
  1348  000C5C                     
  1349                           ;../20202_c_electron.X/LCD.c: 108:  LEER_LCD();
  1350  000C5C  EC1A  F005         	call	_LEER_LCD	;wreg free
  1351  000C60                     
  1352                           ;../20202_c_electron.X/LCD.c: 109:  TRISD = 0b00000000;
  1353  000C60  0E00               	movlw	0
  1354  000C62  6E95               	movwf	149,c	;volatile
  1355  000C64                     
  1356                           ;../20202_c_electron.X/LCD.c: 111:         _delay(1200);
  1357  000C64  0EF0               	movlw	240
  1358  000C66                     u347:
  1359  000C66  D000               	nop2	
  1360  000C68  2EE8               	decfsz	wreg,f,c
  1361  000C6A  D7FD               	bra	u347
  1362  000C6C                     
  1363                           ;../20202_c_electron.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  1364  000C6C  928C               	bcf	140,1,c	;volatile
  1365  000C6E                     
  1366                           ;../20202_c_electron.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  1367  000C6E  948C               	bcf	140,2,c	;volatile
  1368  000C70                     
  1369                           ;../20202_c_electron.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  1370  000C70  908C               	bcf	140,0,c	;volatile
  1371  000C72                     
  1372                           ;../20202_c_electron.X/LCD.c: 115:  aux = dato & 0xF0;
  1373  000C72  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1374  000C74  0BF0               	andlw	240
  1375  000C76  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1376  000C78                     
  1377                           ;../20202_c_electron.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  1378  000C78  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1379  000C7A  EC8C  F006         	call	_ENVIA_NIBBLE
  1380  000C7E                     
  1381                           ;../20202_c_electron.X/LCD.c: 117:  aux = dato<<4;
  1382  000C7E  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1383  000C80  0BF0               	andlw	240
  1384  000C82  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1385  000C84                     
  1386                           ;../20202_c_electron.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  1387  000C84  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1388  000C86  EC8C  F006         	call	_ENVIA_NIBBLE
  1389  000C8A  0012               	return		;funcret
  1390  000C8C                     __end_of_ENVIA_LCD_CMD:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _ESCRIBE_MENSAJE *****************
  1394 ;; Defined at:
  1395 ;;		line 41 in file "../20202_c_electron.X/LCD.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1398 ;;		 -> STR_4(2), STR_3(4), STR_2(6), STR_1(5), 
  1399 ;;  tam             1    5[COMRAM] unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  i               1    8[COMRAM] unsigned char 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      void 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1411 ;;      Params:         3       0       0       0       0       0       0       0       0
  1412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1413 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1414 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1415 ;;Total ram usage:        6 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    2
  1418 ;; This function calls:
  1419 ;;		_ENVIA_CHAR
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text13
  1426  000B6A                     __ptext13:
  1427                           	callstack 0
  1428  000B6A                     _ESCRIBE_MENSAJE:
  1429                           	callstack 28
  1430  000B6A                     
  1431                           ;../20202_c_electron.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char 
      +                          tam);../20202_c_electron.X/LCD.c: 42: {;../20202_c_electron.X/LCD.c: 43:  unsigned char 
      +                          i = 0;
  1432  000B6A  0E00               	movlw	0
  1433  000B6C  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1434                           
  1435                           ;../20202_c_electron.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  1436  000B6E  0E00               	movlw	0
  1437  000B70  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1438  000B72  EFCA  F005         	goto	l1132
  1439  000B76                     l1128:
  1440                           
  1441                           ;../20202_c_electron.X/LCD.c: 45:  {;../20202_c_electron.X/LCD.c: 46:   ENVIA_CHAR(caden
      +                          a[i]);
  1442  000B76  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1443  000B78  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1444  000B7A  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1445  000B7C  0E00               	movlw	0
  1446  000B7E  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1447  000B80  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1448  000B82  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1449  000B86  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1450  000B8A                     	if	0	;tblptru may be non-zero
  1451  000B8A                     	endif
  1452  000B8A                     	if	0	;tblptru may be non-zero
  1453  000B8A                     	endif
  1454  000B8A  0008               	tblrd		*
  1455  000B8C  50F5               	movf	tablat,w,c
  1456  000B8E  EC46  F006         	call	_ENVIA_CHAR
  1457  000B92                     
  1458                           ;../20202_c_electron.X/LCD.c: 47:  }
  1459  000B92  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1460  000B94                     l1132:
  1461  000B94  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1462  000B96  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1463  000B98  A0D8               	btfss	status,0,c
  1464  000B9A  EFD1  F005         	goto	u271
  1465  000B9E  EFD3  F005         	goto	u270
  1466  000BA2                     u271:
  1467  000BA2  EFBB  F005         	goto	l1128
  1468  000BA6                     u270:
  1469  000BA6  0012               	return		;funcret
  1470  000BA8                     __end_of_ESCRIBE_MENSAJE:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _ENVIA_CHAR *****************
  1474 ;; Defined at:
  1475 ;;		line 50 in file "../20202_c_electron.X/LCD.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  dato            1    wreg     unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  dato            1    1[COMRAM] unsigned char 
  1480 ;;  aux             1    2[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		_ENVIA_NIBBLE
  1499 ;;		_LEER_LCD
  1500 ;; This function is called by:
  1501 ;;		_ESCRIBE_MENSAJE
  1502 ;;		_GENERACARACTER
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text14
  1508  000C8C                     __ptext14:
  1509                           	callstack 0
  1510  000C8C                     _ENVIA_CHAR:
  1511                           	callstack 28
  1512                           
  1513                           ;incstack = 0
  1514                           ;ENVIA_CHAR@dato stored from wreg
  1515  000C8C  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1516  000C8E                     
  1517                           ;../20202_c_electron.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20202_c_electro
      +                          n.X/LCD.c: 51: {;../20202_c_electron.X/LCD.c: 52:  unsigned char aux;;../20202_c_electro
      +                          n.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  1518  000C8E  808C               	bsf	140,0,c	;volatile
  1519  000C90                     
  1520                           ;../20202_c_electron.X/LCD.c: 54:  LEER_LCD();
  1521  000C90  EC1A  F005         	call	_LEER_LCD	;wreg free
  1522  000C94                     
  1523                           ;../20202_c_electron.X/LCD.c: 55:  TRISD = 0x00;
  1524  000C94  0E00               	movlw	0
  1525  000C96  6E95               	movwf	149,c	;volatile
  1526  000C98                     
  1527                           ;../20202_c_electron.X/LCD.c: 56:         _delay(1200);
  1528  000C98  0EF0               	movlw	240
  1529  000C9A                     u357:
  1530  000C9A  D000               	nop2	
  1531  000C9C  2EE8               	decfsz	wreg,f,c
  1532  000C9E  D7FD               	bra	u357
  1533  000CA0                     
  1534                           ;../20202_c_electron.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1535  000CA0  928C               	bcf	140,1,c	;volatile
  1536  000CA2                     
  1537                           ;../20202_c_electron.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1538  000CA2  948C               	bcf	140,2,c	;volatile
  1539  000CA4                     
  1540                           ;../20202_c_electron.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1541  000CA4  808C               	bsf	140,0,c	;volatile
  1542  000CA6                     
  1543                           ;../20202_c_electron.X/LCD.c: 61:  aux = dato & 0xF0;
  1544  000CA6  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1545  000CA8  0BF0               	andlw	240
  1546  000CAA  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1547  000CAC                     
  1548                           ;../20202_c_electron.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1549  000CAC  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1550  000CAE  EC8C  F006         	call	_ENVIA_NIBBLE
  1551  000CB2                     
  1552                           ;../20202_c_electron.X/LCD.c: 63:  aux = dato << 4;
  1553  000CB2  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1554  000CB4  0BF0               	andlw	240
  1555  000CB6  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1556  000CB8                     
  1557                           ;../20202_c_electron.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1558  000CB8  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1559  000CBA  EC8C  F006         	call	_ENVIA_NIBBLE
  1560  000CBE  0012               	return		;funcret
  1561  000CC0                     __end_of_ENVIA_CHAR:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _LEER_LCD *****************
  1565 ;; Defined at:
  1566 ;;		line 121 in file "../20202_c_electron.X/LCD.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  aux             1    0[COMRAM] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1580 ;;      Params:         0       0       0       0       0       0       0       0       0
  1581 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1583 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1584 ;;Total ram usage:        1 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_ENVIA_CHAR
  1590 ;;		_ENVIA_LCD_CMD
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text15
  1595  000A34                     __ptext15:
  1596                           	callstack 0
  1597  000A34                     _LEER_LCD:
  1598                           	callstack 27
  1599  000A34                     
  1600                           ;../20202_c_electron.X/LCD.c: 123:  unsigned char aux;;../20202_c_electron.X/LCD.c: 124:
      +                            TRISD = 0xF8;
  1601  000A34  0EF8               	movlw	248
  1602  000A36  6E95               	movwf	149,c	;volatile
  1603  000A38                     
  1604                           ;../20202_c_electron.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1605  000A38  908C               	bcf	140,0,c	;volatile
  1606  000A3A                     
  1607                           ;../20202_c_electron.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1608  000A3A  828C               	bsf	140,1,c	;volatile
  1609  000A3C                     
  1610                           ;../20202_c_electron.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1611  000A3C  848C               	bsf	140,2,c	;volatile
  1612  000A3E                     
  1613                           ;../20202_c_electron.X/LCD.c: 128:         _delay(1200);
  1614  000A3E  0EF0               	movlw	240
  1615  000A40                     u367:
  1616  000A40  D000               	nop2	
  1617  000A42  2EE8               	decfsz	wreg,f,c
  1618  000A44  D7FD               	bra	u367
  1619  000A46                     
  1620                           ;../20202_c_electron.X/LCD.c: 130:  aux = PORTD;
  1621  000A46  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1622  000A4A                     
  1623                           ;../20202_c_electron.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1624  000A4A  948C               	bcf	140,2,c	;volatile
  1625  000A4C                     
  1626                           ;../20202_c_electron.X/LCD.c: 132:         _delay(1200);
  1627  000A4C  0EF0               	movlw	240
  1628  000A4E                     u377:
  1629  000A4E  D000               	nop2	
  1630  000A50  2EE8               	decfsz	wreg,f,c
  1631  000A52  D7FD               	bra	u377
  1632  000A54                     
  1633                           ;../20202_c_electron.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1634  000A54  848C               	bsf	140,2,c	;volatile
  1635  000A56                     
  1636                           ;../20202_c_electron.X/LCD.c: 135:         _delay(1200);
  1637  000A56  0EF0               	movlw	240
  1638  000A58                     u387:
  1639  000A58  D000               	nop2	
  1640  000A5A  2EE8               	decfsz	wreg,f,c
  1641  000A5C  D7FD               	bra	u387
  1642  000A5E                     
  1643                           ;../20202_c_electron.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1644  000A5E  948C               	bcf	140,2,c	;volatile
  1645  000A60                     l838:
  1646                           
  1647                           ;../20202_c_electron.X/LCD.c: 138:  aux = aux & 0x80;
  1648  000A60  5001               	movf	LEER_LCD@aux^0,w,c
  1649  000A62  0B80               	andlw	128
  1650  000A64  6E01               	movwf	LEER_LCD@aux^0,c
  1651                           
  1652                           ;../20202_c_electron.X/LCD.c: 139:  while(aux == 0x80)
  1653  000A66  EF49  F005         	goto	l852
  1654  000A6A                     l67:
  1655                           
  1656                           ;../20202_c_electron.X/LCD.c: 140:         {;../20202_c_electron.X/LCD.c: 141:          
      +                             LATDbits.LATD2 = 1;
  1657  000A6A  848C               	bsf	140,2,c	;volatile
  1658  000A6C                     
  1659                           ;../20202_c_electron.X/LCD.c: 142:             _delay(1200);
  1660  000A6C  0EF0               	movlw	240
  1661  000A6E                     u397:
  1662  000A6E  D000               	nop2	
  1663  000A70  2EE8               	decfsz	wreg,f,c
  1664  000A72  D7FD               	bra	u397
  1665  000A74                     
  1666                           ;../20202_c_electron.X/LCD.c: 143:             aux = PORTD;
  1667  000A74  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1668  000A78                     
  1669                           ;../20202_c_electron.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1670  000A78  948C               	bcf	140,2,c	;volatile
  1671                           
  1672                           ;../20202_c_electron.X/LCD.c: 145:             _delay(1200);
  1673  000A7A  0EF0               	movlw	240
  1674  000A7C                     u407:
  1675  000A7C  D000               	nop2	
  1676  000A7E  2EE8               	decfsz	wreg,f,c
  1677  000A80  D7FD               	bra	u407
  1678  000A82                     
  1679                           ;../20202_c_electron.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1680  000A82  848C               	bsf	140,2,c	;volatile
  1681                           
  1682                           ;../20202_c_electron.X/LCD.c: 147:             _delay(1200);
  1683  000A84  0EF0               	movlw	240
  1684  000A86                     u417:
  1685  000A86  D000               	nop2	
  1686  000A88  2EE8               	decfsz	wreg,f,c
  1687  000A8A  D7FD               	bra	u417
  1688  000A8C                     
  1689                           ;../20202_c_electron.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1690  000A8C  948C               	bcf	140,2,c	;volatile
  1691  000A8E  EF30  F005         	goto	l838
  1692  000A92                     l852:
  1693                           
  1694                           ;../20202_c_electron.X/LCD.c: 139:  while(aux == 0x80)
  1695  000A92  0E80               	movlw	128
  1696  000A94  1801               	xorwf	LEER_LCD@aux^0,w,c
  1697  000A96  B4D8               	btfsc	status,2,c
  1698  000A98  EF50  F005         	goto	u11
  1699  000A9C  EF52  F005         	goto	u10
  1700  000AA0                     u11:
  1701  000AA0  EF35  F005         	goto	l67
  1702  000AA4                     u10:
  1703  000AA4  0012               	return		;funcret
  1704  000AA6                     __end_of_LEER_LCD:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _ENVIA_NIBBLE *****************
  1708 ;; Defined at:
  1709 ;;		line 93 in file "../20202_c_electron.X/LCD.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  dato            1    wreg     unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  dato            1    0[COMRAM] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1726 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1727 ;;Total ram usage:        1 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_ENVIA_CHAR
  1733 ;;		_LCD_CONFIG
  1734 ;;		_ENVIA_LCD_CMD
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text16
  1739  000D18                     __ptext16:
  1740                           	callstack 0
  1741  000D18                     _ENVIA_NIBBLE:
  1742                           	callstack 28
  1743                           
  1744                           ;incstack = 0
  1745                           ;ENVIA_NIBBLE@dato stored from wreg
  1746  000D18  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1747  000D1A                     
  1748                           ;../20202_c_electron.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20202_c_elect
      +                          ron.X/LCD.c: 94: {;../20202_c_electron.X/LCD.c: 95:  LATD &= 0x0F;
  1749  000D1A  0E0F               	movlw	15
  1750  000D1C  168C               	andwf	140,f,c	;volatile
  1751                           
  1752                           ;../20202_c_electron.X/LCD.c: 96:  dato &= 0xF0;
  1753  000D1E  0EF0               	movlw	240
  1754  000D20  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1755                           
  1756                           ;../20202_c_electron.X/LCD.c: 97:  LATD|= dato;
  1757  000D22  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1758  000D24  128C               	iorwf	140,f,c	;volatile
  1759  000D26                     
  1760                           ;../20202_c_electron.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1761  000D26  848C               	bsf	140,2,c	;volatile
  1762  000D28                     
  1763                           ;../20202_c_electron.X/LCD.c: 100:         _delay(1200);
  1764  000D28  0EF0               	movlw	240
  1765  000D2A                     u427:
  1766  000D2A  D000               	nop2	
  1767  000D2C  2EE8               	decfsz	wreg,f,c
  1768  000D2E  D7FD               	bra	u427
  1769  000D30                     
  1770                           ;../20202_c_electron.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1771  000D30  948C               	bcf	140,2,c	;volatile
  1772  000D32  0012               	return		;funcret
  1773  000D34                     __end_of_ENVIA_NIBBLE:
  1774                           	callstack 0
  1775                           
  1776                           	psect	rparam
  1777  0000                     
  1778                           	psect	idloc
  1779                           
  1780                           ;Config register IDLOC0 @ 0x200000
  1781                           ;	unspecified, using default values
  1782  200000                     	org	2097152
  1783  200000  FF                 	db	255
  1784                           
  1785                           ;Config register IDLOC1 @ 0x200001
  1786                           ;	unspecified, using default values
  1787  200001                     	org	2097153
  1788  200001  FF                 	db	255
  1789                           
  1790                           ;Config register IDLOC2 @ 0x200002
  1791                           ;	unspecified, using default values
  1792  200002                     	org	2097154
  1793  200002  FF                 	db	255
  1794                           
  1795                           ;Config register IDLOC3 @ 0x200003
  1796                           ;	unspecified, using default values
  1797  200003                     	org	2097155
  1798  200003  FF                 	db	255
  1799                           
  1800                           ;Config register IDLOC4 @ 0x200004
  1801                           ;	unspecified, using default values
  1802  200004                     	org	2097156
  1803  200004  FF                 	db	255
  1804                           
  1805                           ;Config register IDLOC5 @ 0x200005
  1806                           ;	unspecified, using default values
  1807  200005                     	org	2097157
  1808  200005  FF                 	db	255
  1809                           
  1810                           ;Config register IDLOC6 @ 0x200006
  1811                           ;	unspecified, using default values
  1812  200006                     	org	2097158
  1813  200006  FF                 	db	255
  1814                           
  1815                           ;Config register IDLOC7 @ 0x200007
  1816                           ;	unspecified, using default values
  1817  200007                     	org	2097159
  1818  200007  FF                 	db	255
  1819                           
  1820                           	psect	config
  1821                           
  1822                           ;Config register CONFIG1L @ 0x300000
  1823                           ;	PLL Prescaler Selection bits
  1824                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1825                           ;	System Clock Postscaler Selection bits
  1826                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1827                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1828                           ;	USBDIV = 0x0, unprogrammed default
  1829  300000                     	org	3145728
  1830  300000  00                 	db	0
  1831                           
  1832                           ;Config register CONFIG1H @ 0x300001
  1833                           ;	Oscillator Selection bits
  1834                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1835                           ;	Fail-Safe Clock Monitor Enable bit
  1836                           ;	FCMEN = 0x0, unprogrammed default
  1837                           ;	Internal/External Oscillator Switchover bit
  1838                           ;	IESO = 0x0, unprogrammed default
  1839  300001                     	org	3145729
  1840  300001  02                 	db	2
  1841                           
  1842                           ;Config register CONFIG2L @ 0x300002
  1843                           ;	Power-up Timer Enable bit
  1844                           ;	PWRT = ON, PWRT enabled
  1845                           ;	Brown-out Reset Enable bits
  1846                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1847                           ;	Brown-out Reset Voltage bits
  1848                           ;	BORV = 0x3, unprogrammed default
  1849                           ;	USB Voltage Regulator Enable bit
  1850                           ;	VREGEN = 0x0, unprogrammed default
  1851  300002                     	org	3145730
  1852  300002  18                 	db	24
  1853                           
  1854                           ;Config register CONFIG2H @ 0x300003
  1855                           ;	Watchdog Timer Enable bit
  1856                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1857                           ;	Watchdog Timer Postscale Select bits
  1858                           ;	WDTPS = 0xF, unprogrammed default
  1859  300003                     	org	3145731
  1860  300003  1E                 	db	30
  1861                           
  1862                           ; Padding undefined space
  1863  300004                     	org	3145732
  1864  300004  FF                 	db	255
  1865                           
  1866                           ;Config register CONFIG3H @ 0x300005
  1867                           ;	CCP2 MUX bit
  1868                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1869                           ;	PORTB A/D Enable bit
  1870                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1871                           ;	Low-Power Timer 1 Oscillator Enable bit
  1872                           ;	LPT1OSC = 0x0, unprogrammed default
  1873                           ;	MCLR Pin Enable bit
  1874                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1875  300005                     	org	3145733
  1876  300005  81                 	db	129
  1877                           
  1878                           ;Config register CONFIG4L @ 0x300006
  1879                           ;	Stack Full/Underflow Reset Enable bit
  1880                           ;	STVREN = 0x1, unprogrammed default
  1881                           ;	Single-Supply ICSP Enable bit
  1882                           ;	LVP = OFF, Single-Supply ICSP disabled
  1883                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1884                           ;	ICPRT = 0x0, unprogrammed default
  1885                           ;	Extended Instruction Set Enable bit
  1886                           ;	XINST = 0x0, unprogrammed default
  1887                           ;	Background Debugger Enable bit
  1888                           ;	DEBUG = 0x1, unprogrammed default
  1889  300006                     	org	3145734
  1890  300006  81                 	db	129
  1891                           
  1892                           ; Padding undefined space
  1893  300007                     	org	3145735
  1894  300007  FF                 	db	255
  1895                           
  1896                           ;Config register CONFIG5L @ 0x300008
  1897                           ;	unspecified, using default values
  1898                           ;	Code Protection bit
  1899                           ;	CP0 = 0x1, unprogrammed default
  1900                           ;	Code Protection bit
  1901                           ;	CP1 = 0x1, unprogrammed default
  1902                           ;	Code Protection bit
  1903                           ;	CP2 = 0x1, unprogrammed default
  1904                           ;	Code Protection bit
  1905                           ;	CP3 = 0x1, unprogrammed default
  1906  300008                     	org	3145736
  1907  300008  0F                 	db	15
  1908                           
  1909                           ;Config register CONFIG5H @ 0x300009
  1910                           ;	unspecified, using default values
  1911                           ;	Boot Block Code Protection bit
  1912                           ;	CPB = 0x1, unprogrammed default
  1913                           ;	Data EEPROM Code Protection bit
  1914                           ;	CPD = 0x1, unprogrammed default
  1915  300009                     	org	3145737
  1916  300009  C0                 	db	192
  1917                           
  1918                           ;Config register CONFIG6L @ 0x30000A
  1919                           ;	unspecified, using default values
  1920                           ;	Write Protection bit
  1921                           ;	WRT0 = 0x1, unprogrammed default
  1922                           ;	Write Protection bit
  1923                           ;	WRT1 = 0x1, unprogrammed default
  1924                           ;	Write Protection bit
  1925                           ;	WRT2 = 0x1, unprogrammed default
  1926                           ;	Write Protection bit
  1927                           ;	WRT3 = 0x1, unprogrammed default
  1928  30000A                     	org	3145738
  1929  30000A  0F                 	db	15
  1930                           
  1931                           ;Config register CONFIG6H @ 0x30000B
  1932                           ;	unspecified, using default values
  1933                           ;	Configuration Register Write Protection bit
  1934                           ;	WRTC = 0x1, unprogrammed default
  1935                           ;	Boot Block Write Protection bit
  1936                           ;	WRTB = 0x1, unprogrammed default
  1937                           ;	Data EEPROM Write Protection bit
  1938                           ;	WRTD = 0x1, unprogrammed default
  1939  30000B                     	org	3145739
  1940  30000B  E0                 	db	224
  1941                           
  1942                           ;Config register CONFIG7L @ 0x30000C
  1943                           ;	unspecified, using default values
  1944                           ;	Table Read Protection bit
  1945                           ;	EBTR0 = 0x1, unprogrammed default
  1946                           ;	Table Read Protection bit
  1947                           ;	EBTR1 = 0x1, unprogrammed default
  1948                           ;	Table Read Protection bit
  1949                           ;	EBTR2 = 0x1, unprogrammed default
  1950                           ;	Table Read Protection bit
  1951                           ;	EBTR3 = 0x1, unprogrammed default
  1952  30000C                     	org	3145740
  1953  30000C  0F                 	db	15
  1954                           
  1955                           ;Config register CONFIG7H @ 0x30000D
  1956                           ;	unspecified, using default values
  1957                           ;	Boot Block Table Read Protection bit
  1958                           ;	EBTRB = 0x1, unprogrammed default
  1959  30000D                     	org	3145741
  1960  30000D  40                 	db	64
  1961                           tosu	equ	0xFFF
  1962                           tosh	equ	0xFFE
  1963                           tosl	equ	0xFFD
  1964                           stkptr	equ	0xFFC
  1965                           pclatu	equ	0xFFB
  1966                           pclath	equ	0xFFA
  1967                           pcl	equ	0xFF9
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           indf0	equ	0xFEF
  1975                           postinc0	equ	0xFEE
  1976                           postdec0	equ	0xFED
  1977                           preinc0	equ	0xFEC
  1978                           plusw0	equ	0xFEB
  1979                           fsr0h	equ	0xFEA
  1980                           fsr0l	equ	0xFE9
  1981                           wreg	equ	0xFE8
  1982                           indf1	equ	0xFE7
  1983                           postinc1	equ	0xFE6
  1984                           postdec1	equ	0xFE5
  1985                           preinc1	equ	0xFE4
  1986                           plusw1	equ	0xFE3
  1987                           fsr1h	equ	0xFE2
  1988                           fsr1l	equ	0xFE1
  1989                           bsr	equ	0xFE0
  1990                           indf2	equ	0xFDF
  1991                           postinc2	equ	0xFDE
  1992                           postdec2	equ	0xFDD
  1993                           preinc2	equ	0xFDC
  1994                           plusw2	equ	0xFDB
  1995                           fsr2h	equ	0xFDA
  1996                           fsr2l	equ	0xFD9
  1997                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        8
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      36
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> o_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[6]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5125
                                             14 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                     _GENERACARACTER
                         _POS_CURSOR
                            ___lwdiv
                           _adc_init
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1875
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     922
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _GENERACARACTER                                       4     1      3     504
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _GENERACARACTER
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___lwdiv
     ___lwmod (ARG)
   _adc_init
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      24       1       37.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      20        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 19 18:16:59 2020

                      l24 0C56                        l42 0CEE                        l51 0CBE  
                      l60 0D32                        l37 0D50                        l54 0D58  
                      l63 0C8A                        l48 0BA6                        l57 0B68  
                      l74 0BE2                        l67 0A6A                        l69 0AA4  
                      u10 0AA4                        u11 0AA0                        u20 0CD2  
                      u21 0CCE                        u30 0CE8                        u31 0CE4  
           ENVIA_CHAR@aux 0003                       l123 0D16                       l126 0D40  
                     l135 085E                       l129 09BE                       l641 0A32  
                     l634 0A2A                       l651 0B08                       l820 0A3A  
                     l900 0C98                       l644 0B00                       l830 0A4C  
                     l822 0A3C                       l910 0CAC                       l902 0CA0  
                     l840 0A6C                       l832 0A54                       l824 0A3E  
                     l816 0A34                       l912 0CB2                       l904 0CA2  
                     l920 0B0E                       l842 0A74                       l834 0A56  
                     l826 0A46                       l818 0A38                       l914 0CB8  
                     l906 0CA4                       l930 0B44                       l922 0B14  
                     l860 0D30                       l844 0A78                       l852 0A92  
                     l836 0A5E                       l828 0A4A                       l908 0CA6  
                     l916 0D52                       l940 0B62                       l932 0B4A  
                     l924 0B22                       l854 0D1A                       l846 0A82  
                     l838 0A60                       l870 0C6C                       l862 0C5A  
                     l934 0B50                       l926 0B36                       l918 0B0A  
                     l856 0D26                       l848 0A8C                       l880 0C7E  
                     l872 0C6E                       l864 0C5C                       l936 0B56  
                     l928 0B3E                       l858 0D28                       l882 0C84  
                     l874 0C70                       l866 0C60                       l890 0CD8  
                     l938 0B5C                       l876 0C72                       l868 0C64  
                     l884 0D4A                       l892 0CE8                       l894 0C8E  
                     l878 0C78                       l886 0CC2                       l896 0C90  
                     l888 0CD2                       l898 0C94                       u200 09F8  
                     u201 09F4                       u210 0A14                       u211 0A10  
                     u220 0AB8                       u221 0AB4                       u230 0AD6  
                     u231 0AD2                       u240 0AEC                       u241 0AE8  
                     u250 0C30                       u251 0C2C                       u307 0CFE  
                     u260 0C4E                       u261 0C4A                       u317 0B1A  
                     u270 0BA6                       u190 09DA                       u407 0A7C  
                     u271 0BA2                       u191 09D6                       u327 0B28  
                     u280 0BDC                       u417 0A86                       u281 0BD8  
                     u337 0B38                       u290 086C                       u427 0D2A  
                     u347 0C66                       u291 0868                       u357 0C9A  
                     u367 0A40                       u377 0A4E                       u387 0A58  
                     u397 0A6E               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001            ENVIA_CHAR@dato 0002  
                    l1100 0A24                      l1020 0D0C                      l1012 0CF0  
                    l1110 0AD6                      l1102 0AA6                      l1022 0D10  
                    l1014 0CF4                      l1120 0C30                      l1024 0D34  
                    l1112 0AEC                      l1104 0AB8                      l1016 0CF8  
                    l1130 0B92                      l1122 0C3C                      l1114 0AF4  
                    l1106 0AC0                      l1018 0D08                      l1132 0B94  
                    l1124 0C4E                      l1116 0AFA                      l1108 0AC8  
                    l1126 0B6A                      l1142 0BB8                      l1134 0BA8  
                    l1118 0C20                      l1150 08F6                      l1128 0B76  
                    l1144 0BCA                      l1136 0BB4                      l1080 09C0  
                    l1160 0836                      l1152 0814                      l1146 0BCC  
                    l1090 09F8                      l1082 09C8                      l1170 087E  
                    l1162 0846                      l1154 0818                      l1148 0BDC  
                    l1092 09FE                      l1084 09DA                      l1180 08C8  
                    l1172 0888                      l1164 084C                      l1156 081C  
                    l1094 0A14                      l1086 09E2                      l1182 08D0  
                    l1174 0898                      l1166 085C                      l1158 082C  
                    l1096 0A1C                      l1088 09EA                      l1184 08D8  
                    l1176 08B4                      l1168 086C                      l1098 0A1E  
                    l1186 08DE                      l1178 08C0                      STR_1 0807  
                    STR_2 0801                      STR_3 080C                      STR_4 0810  
                    _LATD 000F8C                      _main 0814                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      prodl 000FF3  
                    start 0000             ?_CURSOR_ONOFF 0001              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0AA6       __size_of_BORRAR_LCD 0008  
          _GENERACARACTER 0BA8                     ?_main 0001           __end_of___lwdiv 0A34  
         __end_of___lwmod 0B0A                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 0BE4              __end_of_main 08F6    __end_of_GENERACARACTER 0BE4  
         _ESCRIBE_MENSAJE 0B6A                    ??_main 000F             __activetblptr 000001  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADCON2 000FC0  
                  _ADRESH 000FC4                    _ADRESL 000FC3          __end_of_adc_init 0D42  
        __end_of_lcd_init 0D18                    _decena 0015      __end_of_ENVIA_NIBBLE 0D34  
               ??___lwdiv 000A                 ??___lwmod 0005           ?_GENERACARACTER 0004  
     __size_of_POS_CURSOR 003A                    _millar 0019                    clear_0 0C0A  
                  _unidad 0013              __pdataCOMRAM 001D              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001  
              __accesstop 0060   __end_of__initialization 0C10              ??_LCD_CONFIG 0004  
           ___rparam_used 000001              ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0BA8  
          __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 0D5A          ENVIA_LCD_CMD@aux 0003  
    __end_of_CURSOR_ONOFF 0CF0        __end_of_LCD_CONFIG 0B6A        __end_of_ENVIA_CHAR 0CC0  
      __size_of_convierte 00CA                ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001  
               ?_adc_init 0001              ??_POS_CURSOR 0005                 ?_lcd_init 0001  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004                   _lm35raw 0011                   ___lwdiv 09C0  
                 ___lwmod 0AA6              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0C8C  
       __end_of_convierte 09C0                   __pcinit 0BE4        __end_of_POS_CURSOR 0C58  
                 __ramtop 0800                   _centena 0017                ??_adc_init 0001  
                 __ptext0 0814                   __ptext1 0CF0                   __ptext2 0B0A  
                 __ptext3 0CC0                   __ptext4 0D4A                   __ptext5 0D52  
                 __ptext6 08F6                   __ptext7 0AA6                   __ptext8 09C0  
                 __ptext9 0D34           GENERACARACTER@i 0007                ??_lcd_init 0005  
            _ENVIA_NIBBLE 0D18      end_of_initialization 0C10          ??_GENERACARACTER 0007  
                 postdec1 000FE5                   postinc0 000FEE      GENERACARACTER@vector 0004  
   __size_of_CURSOR_ONOFF 0030         __size_of_LEER_LCD 0072              _CURSOR_ONOFF 0CC0  
      CURSOR_ONOFF@estado 0004             __pidataCOMRAM 0D42             ??_CURSOR_HOME 0004  
     start_initialization 0BE4         ENVIA_LCD_CMD@dato 0002         __size_of_adc_init 000E  
             __pbssCOMRAM 0011       __end_of_CURSOR_HOME 0D52         __size_of_lcd_init 0028  
        ___lwdiv@dividend 0006                  ?___lwdiv 0006                  ?___lwmod 0001  
       GENERACARACTER@pos 0006               __smallconst 0800                 _convierte 08F6  
         convierte@numero 000D          ___lwdiv@quotient 000A                  _LEER_LCD 0A34  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2                ?_convierte 000D  
             _CURSOR_HOME 0D4A                 copy_data0 0BF8    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___lwdiv 0074          __size_of___lwmod 0064                  _adc_init 0D34  
                _d_millar 001B           ___lwdiv@divisor 0008           ___lwdiv@counter 000C  
                __ptext10 0C1E                  __ptext11 0BA8                  __ptext12 0C58  
                __ptext13 0B6A                  __ptext14 0C8C                  __ptext15 0A34  
                __ptext16 0D18                _BORRAR_LCD 0D52                  _lcd_init 0CF0  
                _o_acento 001D             __size_of_main 00E2                _LCD_CONFIG 0B0A  
              _ENVIA_CHAR 0C8C             _ENVIA_LCD_CMD 0C58   __size_of_GENERACARACTER 003C  
             ??_convierte 000F         ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004  
        ___lwmod@dividend 0001            ?_ENVIA_LCD_CMD 0001           ___lwmod@divisor 0003  
         ___lwmod@counter 0005               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 0C1E               ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006  
             ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
