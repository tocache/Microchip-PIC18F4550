

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Nov 12 15:28:41 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  007C59                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _automatico
    69  007C59  81                 	db	129
    70  007C5A  42                 	db	66
    71  007C5B  24                 	db	36
    72  007C5C  18                 	db	24
    73  007C5D  24                 	db	36
    74  007C5E  42                 	db	66
    75                           
    76                           ;initializer for _upc
    77  007C5F  55                 	db	85
    78  007C60  50                 	db	80
    79  007C61  43                 	db	67
    80  007C62  20                 	db	32
    81  007C63  45                 	db	69
    82  007C64  6C                 	db	108
    83  007C65  65                 	db	101
    84  007C66  63                 	db	99
    85  007C67  74                 	db	116
    86  007C68  72                 	db	114
    87  007C69  6F                 	db	111
    88  007C6A  6E                 	db	110
    89  007C6B  69                 	db	105
    90  007C6C  63                 	db	99
    91  007C6D  61                 	db	97
    92  007C6E  20                 	db	32
    93  007C6F  4D                 	db	77
    94  007C70  65                 	db	101
    95  007C71  63                 	db	99
    96  007C72  61                 	db	97
    97  007C73  74                 	db	116
    98  007C74  72                 	db	114
    99  007C75  6F                 	db	111
   100  007C76  6E                 	db	110
   101  007C77  69                 	db	105
   102  007C78  63                 	db	99
   103  007C79  61                 	db	97
   104  007C7A  00                 	db	0
   105                           
   106                           ;initializer for _menu1
   107  007C7B  42                 	db	66
   108  007C7C  69                 	db	105
   109  007C7D  65                 	db	101
   110  007C7E  6E                 	db	110
   111  007C7F  76                 	db	118
   112  007C80  65                 	db	101
   113  007C81  6E                 	db	110
   114  007C82  69                 	db	105
   115  007C83  64                 	db	100
   116  007C84  6F                 	db	111
   117  007C85  73                 	db	115
   118  007C86  20                 	db	32
   119  007C87  61                 	db	97
   120  007C88  6C                 	db	108
   121  007C89  20                 	db	32
   122  007C8A  65                 	db	101
   123  007C8B  6A                 	db	106
   124  007C8C  65                 	db	101
   125  007C8D  6D                 	db	109
   126  007C8E  70                 	db	112
   127  007C8F  6C                 	db	108
   128  007C90  6F                 	db	111
   129  007C91  20                 	db	32
   130  007C92  00                 	db	0
   131                           
   132                           ;initializer for _menu2
   133  007C93  43                 	db	67
   134  007C94  61                 	db	97
   135  007C95  64                 	db	100
   136  007C96  65                 	db	101
   137  007C97  6E                 	db	110
   138  007C98  61                 	db	97
   139  007C99  3A                 	db	58
   140  007C9A  20                 	db	32
   141  007C9B  00                 	db	0
   142                           
   143                           	psect	idataBANK0
   144  007BA8                     __pidataBANK0:
   145                           	callstack 0
   146                           
   147                           ;initializer for _menu3
   148  007BA8  43                 	db	67
   149  007BA9  61                 	db	97
   150  007BAA  6E                 	db	110
   151  007BAB  74                 	db	116
   152  007BAC  69                 	db	105
   153  007BAD  64                 	db	100
   154  007BAE  61                 	db	97
   155  007BAF  64                 	db	100
   156  007BB0  20                 	db	32
   157  007BB1  64                 	db	100
   158  007BB2  65                 	db	101
   159  007BB3  20                 	db	32
   160  007BB4  63                 	db	99
   161  007BB5  61                 	db	97
   162  007BB6  72                 	db	114
   163  007BB7  61                 	db	97
   164  007BB8  63                 	db	99
   165  007BB9  74                 	db	116
   166  007BBA  65                 	db	101
   167  007BBB  72                 	db	114
   168  007BBC  65                 	db	101
   169  007BBD  73                 	db	115
   170  007BBE  3A                 	db	58
   171  007BBF  00                 	db	0
   172                           
   173                           	psect	nvCOMRAM
   174  00005D                     __pnvCOMRAM:
   175                           	callstack 0
   176  00005D                     _cantidad:
   177                           	callstack 0
   178  00005D                     	ds	1
   179  0000                     _LATEbits	set	3981
   180  0000                     _TXREG	set	4013
   181  0000                     _TXSTAbits	set	4012
   182  0000                     _RCSTAbits	set	4011
   183  0000                     _TRISCbits	set	3988
   184  0000                     _SPBRG	set	4015
   185  0000                     _SPBRGH	set	4016
   186  0000                     _ADCON1	set	4033
   187  0000                     _TRISE	set	3990
   188                           
   189                           ; #config settings
   190                           
   191                           	psect	cinit
   192  007C9C                     __pcinit:
   193                           	callstack 0
   194  007C9C                     start_initialization:
   195                           	callstack 0
   196  007C9C                     __initialization:
   197                           	callstack 0
   198                           
   199                           ; Initialize objects allocated to BANK0 (24 bytes)
   200                           ; load TBLPTR registers with __pidataBANK0
   201  007C9C  0EA8               	movlw	low __pidataBANK0
   202  007C9E  6EF6               	movwf	tblptrl,c
   203  007CA0  0E7B               	movlw	high __pidataBANK0
   204  007CA2  6EF7               	movwf	tblptrh,c
   205  007CA4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   206  007CA6  6EF8               	movwf	tblptru,c
   207  007CA8  EE00  F060         	lfsr	0,__pdataBANK0
   208  007CAC  EE10 F018          	lfsr	1,24
   209  007CB0                     copy_data0:
   210  007CB0  0009               	tblrd		*+
   211  007CB2  CFF5 FFEE          	movff	tablat,postinc0
   212  007CB6  50E5               	movf	postdec1,w,c
   213  007CB8  50E1               	movf	fsr1l,w,c
   214  007CBA  E1FA               	bnz	copy_data0
   215                           
   216                           ; Initialize objects allocated to COMRAM (67 bytes)
   217                           ; load TBLPTR registers with __pidataCOMRAM
   218  007CBC  0E59               	movlw	low __pidataCOMRAM
   219  007CBE  6EF6               	movwf	tblptrl,c
   220  007CC0  0E7C               	movlw	high __pidataCOMRAM
   221  007CC2  6EF7               	movwf	tblptrh,c
   222  007CC4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   223  007CC6  6EF8               	movwf	tblptru,c
   224  007CC8  EE00  F001         	lfsr	0,__pdataCOMRAM
   225  007CCC  EE10 F043          	lfsr	1,67
   226  007CD0                     copy_data1:
   227  007CD0  0009               	tblrd		*+
   228  007CD2  CFF5 FFEE          	movff	tablat,postinc0
   229  007CD6  50E5               	movf	postdec1,w,c
   230  007CD8  50E1               	movf	fsr1l,w,c
   231  007CDA  E1FA               	bnz	copy_data1
   232                           
   233                           ; Clear objects allocated to COMRAM (6 bytes)
   234  007CDC  6A5C               	clrf	(__pbssCOMRAM+5)& (0+255),c
   235  007CDE  6A5B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   236  007CE0  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   237  007CE2  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   238  007CE4  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   239  007CE6  6A57               	clrf	__pbssCOMRAM& (0+255),c
   240  007CE8                     end_of_initialization:
   241                           	callstack 0
   242  007CE8                     __end_of__initialization:
   243                           	callstack 0
   244  007CE8  0100               	movlb	0
   245  007CEA  EF96  F03F         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248  000057                     __pbssCOMRAM:
   249                           	callstack 0
   250  000057                     _unidad:
   251                           	callstack 0
   252  000057                     	ds	2
   253  000059                     _decena:
   254                           	callstack 0
   255  000059                     	ds	2
   256  00005B                     _centena:
   257                           	callstack 0
   258  00005B                     	ds	2
   259                           
   260                           	psect	dataCOMRAM
   261  000001                     __pdataCOMRAM:
   262                           	callstack 0
   263  000001                     _automatico:
   264                           	callstack 0
   265  000001                     	ds	6
   266  000007                     _upc:
   267                           	callstack 0
   268  000007                     	ds	28
   269  000023                     _menu1:
   270                           	callstack 0
   271  000023                     	ds	24
   272  00003B                     _menu2:
   273                           	callstack 0
   274  00003B                     	ds	9
   275                           
   276                           	psect	dataBANK0
   277  000060                     __pdataBANK0:
   278                           	callstack 0
   279  000060                     _menu3:
   280                           	callstack 0
   281  000060                     	ds	24
   282                           
   283                           	psect	cstackCOMRAM
   284  000044                     __pcstackCOMRAM:
   285                           	callstack 0
   286  000044                     ??_out595:
   287  000044                     ?_strlen:
   288                           	callstack 0
   289  000044                     ?___awmod:
   290                           	callstack 0
   291  000044                     EUSART_enviachar@letra:
   292                           	callstack 0
   293  000044                     EUSART_enviacadena@vector:
   294                           	callstack 0
   295  000044                     ___awmod@dividend:
   296                           	callstack 0
   297  000044                     strlen@s:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301  000044                     	ds	2
   302  000046                     EUSART_enviacadena@pos:
   303                           	callstack 0
   304  000046                     out595@datoin:
   305                           	callstack 0
   306  000046                     ___awmod@divisor:
   307                           	callstack 0
   308  000046                     strlen@a:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x2
   312  000046                     	ds	1
   313  000047                     EUSART_enviacadena@x:
   314                           	callstack 0
   315  000047                     out595@i:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x3
   319  000047                     	ds	1
   320  000048                     ___awmod@counter:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x4
   324  000048                     	ds	1
   325  000049                     ___awmod@sign:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x5
   329  000049                     	ds	1
   330  00004A                     ?___awdiv:
   331                           	callstack 0
   332  00004A                     ___awdiv@dividend:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x6
   336  00004A                     	ds	2
   337  00004C                     ___awdiv@divisor:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x8
   341  00004C                     	ds	2
   342  00004E                     ___awdiv@counter:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0xA
   346  00004E                     	ds	1
   347  00004F                     ___awdiv@sign:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xB
   351  00004F                     	ds	1
   352  000050                     ___awdiv@quotient:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xC
   356  000050                     	ds	2
   357  000052                     convierte@numero:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0xE
   361  000052                     	ds	1
   362  000053                     ??_main:
   363                           
   364                           ; 1 bytes @ 0xF
   365  000053                     	ds	2
   366  000055                     main@v_var:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x11
   370  000055                     	ds	2
   371                           
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 89 in file "maincode.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  v_var           2   17[COMRAM] unsigned int 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         2       0       0       0       0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0
   394 ;;      Totals:         4       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        4 bytes
   396 ;; Hardware stack levels required when called:    2
   397 ;; This function calls:
   398 ;;		_EUSART_config
   399 ;;		_EUSART_enviacadena
   400 ;;		_EUSART_enviachar
   401 ;;		_EUSART_siguientelinea
   402 ;;		_convierte
   403 ;;		_init_config
   404 ;;		_out595
   405 ;;		_strlen
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text0
   412  007F2C                     __ptext0:
   413                           	callstack 0
   414  007F2C                     _main:
   415                           	callstack 29
   416  007F2C                     
   417                           ;maincode.c: 90:     init_config();
   418  007F2C  ECBB  F03D         	call	_init_config	;wreg free
   419                           
   420                           ;maincode.c: 91:     EUSART_config();
   421  007F30  ECC0  F03D         	call	_EUSART_config	;wreg free
   422  007F34                     l1086:
   423                           
   424                           ;maincode.c: 93:         cantidad = strlen(upc);
   425  007F34  0E07               	movlw	low _upc
   426  007F36  6E44               	movwf	strlen@s^0,c
   427  007F38  0E00               	movlw	high _upc
   428  007F3A  6E45               	movwf	(strlen@s+1)^0,c
   429  007F3C  ECF3  F03D         	call	_strlen	;wreg free
   430  007F40  5044               	movf	?_strlen^0,w,c
   431  007F42  6E5D               	movwf	_cantidad^0,c
   432  007F44                     
   433                           ;maincode.c: 94:         EUSART_enviacadena(menu1, 23);
   434  007F44  0E23               	movlw	low _menu1
   435  007F46  6E44               	movwf	EUSART_enviacadena@vector^0,c
   436  007F48  0E00               	movlw	high _menu1
   437  007F4A  6E45               	movwf	(EUSART_enviacadena@vector+1)^0,c
   438  007F4C  0E17               	movlw	23
   439  007F4E  6E46               	movwf	EUSART_enviacadena@pos^0,c
   440  007F50  EC0E  F03E         	call	_EUSART_enviacadena	;wreg free
   441                           
   442                           ;maincode.c: 95:         EUSART_siguientelinea();
   443  007F54  ECE0  F03D         	call	_EUSART_siguientelinea	;wreg free
   444  007F58                     
   445                           ;maincode.c: 96:         EUSART_enviacadena(menu2, 8);
   446  007F58  0E3B               	movlw	low _menu2
   447  007F5A  6E44               	movwf	EUSART_enviacadena@vector^0,c
   448  007F5C  0E00               	movlw	high _menu2
   449  007F5E  6E45               	movwf	(EUSART_enviacadena@vector+1)^0,c
   450  007F60  0E08               	movlw	8
   451  007F62  6E46               	movwf	EUSART_enviacadena@pos^0,c
   452  007F64  EC0E  F03E         	call	_EUSART_enviacadena	;wreg free
   453  007F68                     
   454                           ;maincode.c: 97:         EUSART_enviacadena(upc, cantidad);
   455  007F68  0E07               	movlw	low _upc
   456  007F6A  6E44               	movwf	EUSART_enviacadena@vector^0,c
   457  007F6C  0E00               	movlw	high _upc
   458  007F6E  6E45               	movwf	(EUSART_enviacadena@vector+1)^0,c
   459  007F70  C05D  F046         	movff	_cantidad,EUSART_enviacadena@pos
   460  007F74  EC0E  F03E         	call	_EUSART_enviacadena	;wreg free
   461                           
   462                           ;maincode.c: 98:         EUSART_siguientelinea();
   463  007F78  ECE0  F03D         	call	_EUSART_siguientelinea	;wreg free
   464  007F7C                     
   465                           ;maincode.c: 99:         EUSART_enviacadena(menu3, 23);
   466  007F7C  0E60               	movlw	low _menu3
   467  007F7E  6E44               	movwf	EUSART_enviacadena@vector^0,c
   468  007F80  0E00               	movlw	high _menu3
   469  007F82  6E45               	movwf	(EUSART_enviacadena@vector+1)^0,c
   470  007F84  0E17               	movlw	23
   471  007F86  6E46               	movwf	EUSART_enviacadena@pos^0,c
   472  007F88  EC0E  F03E         	call	_EUSART_enviacadena	;wreg free
   473  007F8C                     
   474                           ;maincode.c: 100:         convierte(cantidad);
   475  007F8C  505D               	movf	_cantidad^0,w,c
   476  007F8E  ECA9  F03E         	call	_convierte
   477  007F92                     
   478                           ;maincode.c: 101:         EUSART_enviachar(centena+0x30);
   479  007F92  505B               	movf	_centena^0,w,c
   480  007F94  0F30               	addlw	48
   481  007F96  ECC9  F03D         	call	_EUSART_enviachar
   482  007F9A                     
   483                           ;maincode.c: 102:         EUSART_enviachar(decena+0x30);
   484  007F9A  5059               	movf	_decena^0,w,c
   485  007F9C  0F30               	addlw	48
   486  007F9E  ECC9  F03D         	call	_EUSART_enviachar
   487  007FA2                     
   488                           ;maincode.c: 103:         EUSART_enviachar(unidad+0x30);
   489  007FA2  5057               	movf	_unidad^0,w,c
   490  007FA4  0F30               	addlw	48
   491  007FA6  ECC9  F03D         	call	_EUSART_enviachar
   492  007FAA                     
   493                           ;maincode.c: 104:         EUSART_siguientelinea();
   494  007FAA  ECE0  F03D         	call	_EUSART_siguientelinea	;wreg free
   495  007FAE                     
   496                           ;maincode.c: 105:         for(unsigned int v_var=0;v_var<6;v_var++){
   497  007FAE  0E00               	movlw	0
   498  007FB0  6E56               	movwf	(main@v_var+1)^0,c
   499  007FB2  0E00               	movlw	0
   500  007FB4  6E55               	movwf	main@v_var^0,c
   501  007FB6                     l1112:
   502                           
   503                           ;maincode.c: 106:             out595(automatico[v_var]);
   504  007FB6  0E01               	movlw	low _automatico
   505  007FB8  2455               	addwf	main@v_var^0,w,c
   506  007FBA  6ED9               	movwf	fsr2l,c
   507  007FBC  0E00               	movlw	high _automatico
   508  007FBE  2056               	addwfc	(main@v_var+1)^0,w,c
   509  007FC0  6EDA               	movwf	fsr2h,c
   510  007FC2  50DF               	movf	indf2,w,c
   511  007FC4  EC77  F03E         	call	_out595
   512  007FC8                     
   513                           ;maincode.c: 107:             _delay((unsigned long)((200)*(48000000UL/4000.0)));
   514  007FC8  0E0D               	movlw	13
   515  007FCA  6E54               	movwf	(??_main+1)^0,c
   516  007FCC  0E2D               	movlw	45
   517  007FCE  6E53               	movwf	??_main^0,c
   518  007FD0  0ED8               	movlw	216
   519  007FD2                     u457:
   520  007FD2  2EE8               	decfsz	wreg,f,c
   521  007FD4  D7FE               	bra	u457
   522  007FD6  2E53               	decfsz	??_main^0,f,c
   523  007FD8  D7FC               	bra	u457
   524  007FDA  2E54               	decfsz	(??_main+1)^0,f,c
   525  007FDC  D7FA               	bra	u457
   526  007FDE                     
   527                           ;maincode.c: 108:         }
   528  007FDE  4A55               	infsnz	main@v_var^0,f,c
   529  007FE0  2A56               	incf	(main@v_var+1)^0,f,c
   530  007FE2  5056               	movf	(main@v_var+1)^0,w,c
   531  007FE4  E109               	bnz	u440
   532  007FE6  0E06               	movlw	6
   533  007FE8  5C55               	subwf	main@v_var^0,w,c
   534  007FEA  A0D8               	btfss	status,0,c
   535  007FEC  EFFA  F03F         	goto	u441
   536  007FF0  EFFC  F03F         	goto	u440
   537  007FF4                     u441:
   538  007FF4  EFDB  F03F         	goto	l1112
   539  007FF8                     u440:
   540  007FF8  EF9A  F03F         	goto	l1086
   541  007FFC  EF00  F000         	goto	start
   542  008000                     __end_of_main:
   543                           	callstack 0
   544                           
   545 ;; *************** function _strlen *****************
   546 ;; Defined at:
   547 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
   548 ;; Parameters:    Size  Location     Type
   549 ;;  s               2    0[COMRAM] PTR const unsigned char 
   550 ;;		 -> upc(28), 
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  a               2    2[COMRAM] PTR const unsigned char 
   553 ;;		 -> upc(28), 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  2    0[COMRAM] unsigned int 
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         2       0       0       0       0       0       0       0       0
   564 ;;      Locals:         2       0       0       0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0
   566 ;;      Totals:         4       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        4 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text1
   577  007BE6                     __ptext1:
   578                           	callstack 0
   579  007BE6                     _strlen:
   580                           	callstack 30
   581  007BE6  C044  F046         	movff	strlen@s,strlen@a
   582  007BEA  C045  F047         	movff	strlen@s+1,strlen@a+1
   583  007BEE  EFFB  F03D         	goto	l1078
   584  007BF2                     l1076:
   585  007BF2  4A44               	infsnz	strlen@s^0,f,c
   586  007BF4  2A45               	incf	(strlen@s+1)^0,f,c
   587  007BF6                     l1078:
   588  007BF6  C044  FFD9         	movff	strlen@s,fsr2l
   589  007BFA  C045  FFDA         	movff	strlen@s+1,fsr2h
   590  007BFE  50DF               	movf	indf2,w,c
   591  007C00  A4D8               	btfss	status,2,c
   592  007C02  EF05  F03E         	goto	u431
   593  007C06  EF07  F03E         	goto	u430
   594  007C0A                     u431:
   595  007C0A  EFF9  F03D         	goto	l1076
   596  007C0E                     u430:
   597  007C0E  5046               	movf	strlen@a^0,w,c
   598  007C10  5C44               	subwf	strlen@s^0,w,c
   599  007C12  6E44               	movwf	?_strlen^0,c
   600  007C14  5047               	movf	(strlen@a+1)^0,w,c
   601  007C16  5845               	subwfb	(strlen@s+1)^0,w,c
   602  007C18  6E45               	movwf	(?_strlen+1)^0,c
   603  007C1A  0012               	return		;funcret
   604  007C1C                     __end_of_strlen:
   605                           	callstack 0
   606                           
   607 ;; *************** function _out595 *****************
   608 ;; Defined at:
   609 ;;		line 69 in file "maincode.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  datoin          1    wreg     unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  datoin          1    2[COMRAM] unsigned char 
   614 ;;  i               2    3[COMRAM] int 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   624 ;;      Params:         0       0       0       0       0       0       0       0       0
   625 ;;      Locals:         3       0       0       0       0       0       0       0       0
   626 ;;      Temps:          2       0       0       0       0       0       0       0       0
   627 ;;      Totals:         5       0       0       0       0       0       0       0       0
   628 ;;Total ram usage:        5 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text2
   638  007CEE                     __ptext2:
   639                           	callstack 0
   640  007CEE                     _out595:
   641                           	callstack 30
   642                           
   643                           ;incstack = 0
   644                           ;out595@datoin stored from wreg
   645  007CEE  6E46               	movwf	out595@datoin^0,c
   646  007CF0                     
   647                           ;maincode.c: 71:     LATEbits.LE0 = 0;
   648  007CF0  908D               	bcf	141,0,c	;volatile
   649  007CF2                     
   650                           ;maincode.c: 72:     LATEbits.LE1 = 0;
   651  007CF2  928D               	bcf	141,1,c	;volatile
   652  007CF4                     
   653                           ;maincode.c: 73:     LATEbits.LE2 = 0;
   654  007CF4  948D               	bcf	141,2,c	;volatile
   655                           
   656                           ;maincode.c: 74:     for (i=7; i>=0; i--) {
   657  007CF6  0E00               	movlw	0
   658  007CF8  6E48               	movwf	(out595@i+1)^0,c
   659  007CFA  0E07               	movlw	7
   660  007CFC  6E47               	movwf	out595@i^0,c
   661  007CFE                     l76:
   662                           
   663                           ;maincode.c: 75:         LATEbits.LE0 = 0;
   664  007CFE  908D               	bcf	141,0,c	;volatile
   665  007D00                     
   666                           ;maincode.c: 76:         if (datoin &(1<<i)) {
   667  007D00  C047  F044         	movff	out595@i,??_out595
   668  007D04  0E01               	movlw	1
   669  007D06  6E45               	movwf	(??_out595+1)^0,c
   670  007D08  2A44               	incf	??_out595^0,f,c
   671  007D0A  EF89  F03E         	goto	u404
   672  007D0E                     u405:
   673  007D0E  90D8               	bcf	status,0,c
   674  007D10  3645               	rlcf	(??_out595+1)^0,f,c
   675  007D12                     u404:
   676  007D12  2E44               	decfsz	??_out595^0,f,c
   677  007D14  EF87  F03E         	goto	u405
   678  007D18  5045               	movf	(??_out595+1)^0,w,c
   679  007D1A  1446               	andwf	out595@datoin^0,w,c
   680  007D1C  0900               	iorlw	0
   681  007D1E  B4D8               	btfsc	status,2,c
   682  007D20  EF94  F03E         	goto	u411
   683  007D24  EF96  F03E         	goto	u410
   684  007D28                     u411:
   685  007D28  EF99  F03E         	goto	l78
   686  007D2C                     u410:
   687  007D2C                     
   688                           ;maincode.c: 77:             LATEbits.LE1 = 1;
   689  007D2C  828D               	bsf	141,1,c	;volatile
   690                           
   691                           ;maincode.c: 78:         }
   692  007D2E  EF9A  F03E         	goto	l79
   693  007D32                     l78:
   694                           
   695                           ;maincode.c: 80:             LATEbits.LE1 = 0;
   696  007D32  928D               	bcf	141,1,c	;volatile
   697  007D34                     l79:
   698                           
   699                           ;maincode.c: 82:         LATEbits.LE0 = 1;
   700  007D34  808D               	bsf	141,0,c	;volatile
   701                           
   702                           ;maincode.c: 83:         LATEbits.LE1 = 0;
   703  007D36  928D               	bcf	141,1,c	;volatile
   704  007D38                     
   705                           ;maincode.c: 84:     }
   706  007D38  0647               	decf	out595@i^0,f,c
   707  007D3A  A0D8               	btfss	status,0,c
   708  007D3C  0648               	decf	(out595@i+1)^0,f,c
   709  007D3E  BE48               	btfsc	(out595@i+1)^0,7,c
   710  007D40  EFA6  F03E         	goto	u420
   711  007D44  EFA4  F03E         	goto	u421
   712  007D48                     u421:
   713  007D48  EF7F  F03E         	goto	l76
   714  007D4C                     u420:
   715  007D4C                     
   716                           ;maincode.c: 85:     LATEbits.LE2 = 1;
   717  007D4C  848D               	bsf	141,2,c	;volatile
   718                           
   719                           ;maincode.c: 86:     LATEbits.LE0 = 0;
   720  007D4E  908D               	bcf	141,0,c	;volatile
   721  007D50  0012               	return		;funcret
   722  007D52                     __end_of_out595:
   723                           	callstack 0
   724                           
   725 ;; *************** function _init_config *****************
   726 ;; Defined at:
   727 ;;		line 26 in file "maincode.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text3
   755  007B76                     __ptext3:
   756                           	callstack 0
   757  007B76                     _init_config:
   758                           	callstack 30
   759  007B76                     
   760                           ;maincode.c: 27:     TRISE = 0x00;
   761  007B76  0E00               	movlw	0
   762  007B78  6E96               	movwf	150,c	;volatile
   763                           
   764                           ;maincode.c: 28:     ADCON1 = 0x0F;
   765  007B7A  0E0F               	movlw	15
   766  007B7C  6EC1               	movwf	193,c	;volatile
   767  007B7E  0012               	return		;funcret
   768  007B80                     __end_of_init_config:
   769                           	callstack 0
   770                           
   771 ;; *************** function _convierte *****************
   772 ;; Defined at:
   773 ;;		line 44 in file "maincode.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  numero          1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  numero          1   14[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0
   790 ;;      Totals:         1       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        1 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		___awdiv
   796 ;;		___awmod
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text4
   803  007D52                     __ptext4:
   804                           	callstack 0
   805  007D52                     _convierte:
   806                           	callstack 29
   807                           
   808                           ;incstack = 0
   809                           ;convierte@numero stored from wreg
   810  007D52  6E52               	movwf	convierte@numero^0,c
   811  007D54                     
   812                           ;maincode.c: 45:     centena = numero / 100;
   813  007D54  C052  F04A         	movff	convierte@numero,___awdiv@dividend
   814  007D58  6A4B               	clrf	(___awdiv@dividend+1)^0,c
   815  007D5A  0E00               	movlw	0
   816  007D5C  6E4D               	movwf	(___awdiv@divisor+1)^0,c
   817  007D5E  0E64               	movlw	100
   818  007D60  6E4C               	movwf	___awdiv@divisor^0,c
   819  007D62  EC34  F03F         	call	___awdiv	;wreg free
   820  007D66  C04A  F05B         	movff	?___awdiv,_centena
   821  007D6A  C04B  F05C         	movff	?___awdiv+1,_centena+1
   822                           
   823                           ;maincode.c: 46:     decena = (numero % 100) / 10;
   824  007D6E  0E00               	movlw	0
   825  007D70  6E47               	movwf	(___awmod@divisor+1)^0,c
   826  007D72  0E64               	movlw	100
   827  007D74  6E46               	movwf	___awmod@divisor^0,c
   828  007D76  C052  F044         	movff	convierte@numero,___awmod@dividend
   829  007D7A  6A45               	clrf	(___awmod@dividend+1)^0,c
   830  007D7C  ECDC  F03E         	call	___awmod	;wreg free
   831  007D80  C044  F04A         	movff	?___awmod,___awdiv@dividend
   832  007D84  C045  F04B         	movff	?___awmod+1,___awdiv@dividend+1
   833  007D88  0E00               	movlw	0
   834  007D8A  6E4D               	movwf	(___awdiv@divisor+1)^0,c
   835  007D8C  0E0A               	movlw	10
   836  007D8E  6E4C               	movwf	___awdiv@divisor^0,c
   837  007D90  EC34  F03F         	call	___awdiv	;wreg free
   838  007D94  C04A  F059         	movff	?___awdiv,_decena
   839  007D98  C04B  F05A         	movff	?___awdiv+1,_decena+1
   840                           
   841                           ;maincode.c: 47:     unidad = numero % 10;
   842  007D9C  C052  F044         	movff	convierte@numero,___awmod@dividend
   843  007DA0  6A45               	clrf	(___awmod@dividend+1)^0,c
   844  007DA2  0E00               	movlw	0
   845  007DA4  6E47               	movwf	(___awmod@divisor+1)^0,c
   846  007DA6  0E0A               	movlw	10
   847  007DA8  6E46               	movwf	___awmod@divisor^0,c
   848  007DAA  ECDC  F03E         	call	___awmod	;wreg free
   849  007DAE  C044  F057         	movff	?___awmod,_unidad
   850  007DB2  C045  F058         	movff	?___awmod+1,_unidad+1
   851  007DB6  0012               	return		;funcret
   852  007DB8                     __end_of_convierte:
   853                           	callstack 0
   854                           
   855 ;; *************** function ___awmod *****************
   856 ;; Defined at:
   857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;  dividend        2    0[COMRAM] int 
   860 ;;  divisor         2    2[COMRAM] int 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  sign            1    5[COMRAM] unsigned char 
   863 ;;  counter         1    4[COMRAM] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  2    0[COMRAM] int 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   873 ;;      Params:         4       0       0       0       0       0       0       0       0
   874 ;;      Locals:         2       0       0       0       0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0
   876 ;;      Totals:         6       0       0       0       0       0       0       0       0
   877 ;;Total ram usage:        6 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_convierte
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text5
   887  007DB8                     __ptext5:
   888                           	callstack 0
   889  007DB8                     ___awmod:
   890                           	callstack 29
   891  007DB8  0E00               	movlw	0
   892  007DBA  6E49               	movwf	___awmod@sign^0,c
   893  007DBC  BE45               	btfsc	(___awmod@dividend+1)^0,7,c
   894  007DBE  EFE5  F03E         	goto	u290
   895  007DC2  EFE3  F03E         	goto	u291
   896  007DC6                     u291:
   897  007DC6  EFEB  F03E         	goto	l998
   898  007DCA                     u290:
   899  007DCA  6C44               	negf	___awmod@dividend^0,c
   900  007DCC  1E45               	comf	(___awmod@dividend+1)^0,f,c
   901  007DCE  B0D8               	btfsc	status,0,c
   902  007DD0  2A45               	incf	(___awmod@dividend+1)^0,f,c
   903  007DD2  0E01               	movlw	1
   904  007DD4  6E49               	movwf	___awmod@sign^0,c
   905  007DD6                     l998:
   906  007DD6  BE47               	btfsc	(___awmod@divisor+1)^0,7,c
   907  007DD8  EFF2  F03E         	goto	u300
   908  007DDC  EFF0  F03E         	goto	u301
   909  007DE0                     u301:
   910  007DE0  EFF6  F03E         	goto	l1002
   911  007DE4                     u300:
   912  007DE4  6C46               	negf	___awmod@divisor^0,c
   913  007DE6  1E47               	comf	(___awmod@divisor+1)^0,f,c
   914  007DE8  B0D8               	btfsc	status,0,c
   915  007DEA  2A47               	incf	(___awmod@divisor+1)^0,f,c
   916  007DEC                     l1002:
   917  007DEC  5046               	movf	___awmod@divisor^0,w,c
   918  007DEE  1047               	iorwf	(___awmod@divisor+1)^0,w,c
   919  007DF0  B4D8               	btfsc	status,2,c
   920  007DF2  EFFD  F03E         	goto	u311
   921  007DF6  EFFF  F03E         	goto	u310
   922  007DFA                     u311:
   923  007DFA  EF23  F03F         	goto	l1018
   924  007DFE                     u310:
   925  007DFE  0E01               	movlw	1
   926  007E00  6E48               	movwf	___awmod@counter^0,c
   927  007E02  EF07  F03F         	goto	l1008
   928  007E06                     l1006:
   929  007E06  90D8               	bcf	status,0,c
   930  007E08  3646               	rlcf	___awmod@divisor^0,f,c
   931  007E0A  3647               	rlcf	(___awmod@divisor+1)^0,f,c
   932  007E0C  2A48               	incf	___awmod@counter^0,f,c
   933  007E0E                     l1008:
   934  007E0E  AE47               	btfss	(___awmod@divisor+1)^0,7,c
   935  007E10  EF0C  F03F         	goto	u321
   936  007E14  EF0E  F03F         	goto	u320
   937  007E18                     u321:
   938  007E18  EF03  F03F         	goto	l1006
   939  007E1C                     u320:
   940  007E1C                     l1010:
   941  007E1C  5046               	movf	___awmod@divisor^0,w,c
   942  007E1E  5C44               	subwf	___awmod@dividend^0,w,c
   943  007E20  5047               	movf	(___awmod@divisor+1)^0,w,c
   944  007E22  5845               	subwfb	(___awmod@dividend+1)^0,w,c
   945  007E24  A0D8               	btfss	status,0,c
   946  007E26  EF17  F03F         	goto	u331
   947  007E2A  EF19  F03F         	goto	u330
   948  007E2E                     u331:
   949  007E2E  EF1D  F03F         	goto	l1014
   950  007E32                     u330:
   951  007E32  5046               	movf	___awmod@divisor^0,w,c
   952  007E34  5E44               	subwf	___awmod@dividend^0,f,c
   953  007E36  5047               	movf	(___awmod@divisor+1)^0,w,c
   954  007E38  5A45               	subwfb	(___awmod@dividend+1)^0,f,c
   955  007E3A                     l1014:
   956  007E3A  90D8               	bcf	status,0,c
   957  007E3C  3247               	rrcf	(___awmod@divisor+1)^0,f,c
   958  007E3E  3246               	rrcf	___awmod@divisor^0,f,c
   959  007E40  2E48               	decfsz	___awmod@counter^0,f,c
   960  007E42  EF0E  F03F         	goto	l1010
   961  007E46                     l1018:
   962  007E46  5049               	movf	___awmod@sign^0,w,c
   963  007E48  B4D8               	btfsc	status,2,c
   964  007E4A  EF29  F03F         	goto	u341
   965  007E4E  EF2B  F03F         	goto	u340
   966  007E52                     u341:
   967  007E52  EF2F  F03F         	goto	l1022
   968  007E56                     u340:
   969  007E56  6C44               	negf	___awmod@dividend^0,c
   970  007E58  1E45               	comf	(___awmod@dividend+1)^0,f,c
   971  007E5A  B0D8               	btfsc	status,0,c
   972  007E5C  2A45               	incf	(___awmod@dividend+1)^0,f,c
   973  007E5E                     l1022:
   974  007E5E  C044  F044         	movff	___awmod@dividend,?___awmod
   975  007E62  C045  F045         	movff	___awmod@dividend+1,?___awmod+1
   976  007E66  0012               	return		;funcret
   977  007E68                     __end_of___awmod:
   978                           	callstack 0
   979                           
   980 ;; *************** function ___awdiv *****************
   981 ;; Defined at:
   982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  dividend        2    6[COMRAM] int 
   985 ;;  divisor         2    8[COMRAM] int 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  quotient        2   12[COMRAM] int 
   988 ;;  sign            1   11[COMRAM] unsigned char 
   989 ;;  counter         1   10[COMRAM] unsigned char 
   990 ;; Return value:  Size  Location     Type
   991 ;;                  2    6[COMRAM] int 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         4       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        8 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_convierte
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text6
  1013  007E68                     __ptext6:
  1014                           	callstack 0
  1015  007E68                     ___awdiv:
  1016                           	callstack 29
  1017  007E68  0E00               	movlw	0
  1018  007E6A  6E4F               	movwf	___awdiv@sign^0,c
  1019  007E6C  BE4D               	btfsc	(___awdiv@divisor+1)^0,7,c
  1020  007E6E  EF3D  F03F         	goto	u230
  1021  007E72  EF3B  F03F         	goto	u231
  1022  007E76                     u231:
  1023  007E76  EF43  F03F         	goto	l954
  1024  007E7A                     u230:
  1025  007E7A  6C4C               	negf	___awdiv@divisor^0,c
  1026  007E7C  1E4D               	comf	(___awdiv@divisor+1)^0,f,c
  1027  007E7E  B0D8               	btfsc	status,0,c
  1028  007E80  2A4D               	incf	(___awdiv@divisor+1)^0,f,c
  1029  007E82  0E01               	movlw	1
  1030  007E84  6E4F               	movwf	___awdiv@sign^0,c
  1031  007E86                     l954:
  1032  007E86  BE4B               	btfsc	(___awdiv@dividend+1)^0,7,c
  1033  007E88  EF4A  F03F         	goto	u240
  1034  007E8C  EF48  F03F         	goto	u241
  1035  007E90                     u241:
  1036  007E90  EF50  F03F         	goto	l960
  1037  007E94                     u240:
  1038  007E94  6C4A               	negf	___awdiv@dividend^0,c
  1039  007E96  1E4B               	comf	(___awdiv@dividend+1)^0,f,c
  1040  007E98  B0D8               	btfsc	status,0,c
  1041  007E9A  2A4B               	incf	(___awdiv@dividend+1)^0,f,c
  1042  007E9C  0E01               	movlw	1
  1043  007E9E  1A4F               	xorwf	___awdiv@sign^0,f,c
  1044  007EA0                     l960:
  1045  007EA0  0E00               	movlw	0
  1046  007EA2  6E51               	movwf	(___awdiv@quotient+1)^0,c
  1047  007EA4  0E00               	movlw	0
  1048  007EA6  6E50               	movwf	___awdiv@quotient^0,c
  1049  007EA8  504C               	movf	___awdiv@divisor^0,w,c
  1050  007EAA  104D               	iorwf	(___awdiv@divisor+1)^0,w,c
  1051  007EAC  B4D8               	btfsc	status,2,c
  1052  007EAE  EF5B  F03F         	goto	u251
  1053  007EB2  EF5D  F03F         	goto	u250
  1054  007EB6                     u251:
  1055  007EB6  EF85  F03F         	goto	l982
  1056  007EBA                     u250:
  1057  007EBA  0E01               	movlw	1
  1058  007EBC  6E4E               	movwf	___awdiv@counter^0,c
  1059  007EBE  EF65  F03F         	goto	l968
  1060  007EC2                     l966:
  1061  007EC2  90D8               	bcf	status,0,c
  1062  007EC4  364C               	rlcf	___awdiv@divisor^0,f,c
  1063  007EC6  364D               	rlcf	(___awdiv@divisor+1)^0,f,c
  1064  007EC8  2A4E               	incf	___awdiv@counter^0,f,c
  1065  007ECA                     l968:
  1066  007ECA  AE4D               	btfss	(___awdiv@divisor+1)^0,7,c
  1067  007ECC  EF6A  F03F         	goto	u261
  1068  007ED0  EF6C  F03F         	goto	u260
  1069  007ED4                     u261:
  1070  007ED4  EF61  F03F         	goto	l966
  1071  007ED8                     u260:
  1072  007ED8                     l970:
  1073  007ED8  90D8               	bcf	status,0,c
  1074  007EDA  3650               	rlcf	___awdiv@quotient^0,f,c
  1075  007EDC  3651               	rlcf	(___awdiv@quotient+1)^0,f,c
  1076  007EDE  504C               	movf	___awdiv@divisor^0,w,c
  1077  007EE0  5C4A               	subwf	___awdiv@dividend^0,w,c
  1078  007EE2  504D               	movf	(___awdiv@divisor+1)^0,w,c
  1079  007EE4  584B               	subwfb	(___awdiv@dividend+1)^0,w,c
  1080  007EE6  A0D8               	btfss	status,0,c
  1081  007EE8  EF78  F03F         	goto	u271
  1082  007EEC  EF7A  F03F         	goto	u270
  1083  007EF0                     u271:
  1084  007EF0  EF7F  F03F         	goto	l978
  1085  007EF4                     u270:
  1086  007EF4  504C               	movf	___awdiv@divisor^0,w,c
  1087  007EF6  5E4A               	subwf	___awdiv@dividend^0,f,c
  1088  007EF8  504D               	movf	(___awdiv@divisor+1)^0,w,c
  1089  007EFA  5A4B               	subwfb	(___awdiv@dividend+1)^0,f,c
  1090  007EFC  8050               	bsf	___awdiv@quotient^0,0,c
  1091  007EFE                     l978:
  1092  007EFE  90D8               	bcf	status,0,c
  1093  007F00  324D               	rrcf	(___awdiv@divisor+1)^0,f,c
  1094  007F02  324C               	rrcf	___awdiv@divisor^0,f,c
  1095  007F04  2E4E               	decfsz	___awdiv@counter^0,f,c
  1096  007F06  EF6C  F03F         	goto	l970
  1097  007F0A                     l982:
  1098  007F0A  504F               	movf	___awdiv@sign^0,w,c
  1099  007F0C  B4D8               	btfsc	status,2,c
  1100  007F0E  EF8B  F03F         	goto	u281
  1101  007F12  EF8D  F03F         	goto	u280
  1102  007F16                     u281:
  1103  007F16  EF91  F03F         	goto	l986
  1104  007F1A                     u280:
  1105  007F1A  6C50               	negf	___awdiv@quotient^0,c
  1106  007F1C  1E51               	comf	(___awdiv@quotient+1)^0,f,c
  1107  007F1E  B0D8               	btfsc	status,0,c
  1108  007F20  2A51               	incf	(___awdiv@quotient+1)^0,f,c
  1109  007F22                     l986:
  1110  007F22  C050  F04A         	movff	___awdiv@quotient,?___awdiv
  1111  007F26  C051  F04B         	movff	___awdiv@quotient+1,?___awdiv+1
  1112  007F2A  0012               	return		;funcret
  1113  007F2C                     __end_of___awdiv:
  1114                           	callstack 0
  1115                           
  1116 ;; *************** function _EUSART_siguientelinea *****************
  1117 ;; Defined at:
  1118 ;;		line 50 in file "maincode.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        0 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text7
  1146  007BC0                     __ptext7:
  1147                           	callstack 0
  1148  007BC0                     _EUSART_siguientelinea:
  1149                           	callstack 30
  1150  007BC0                     
  1151                           ;maincode.c: 51:     TXREG = 0x0A;
  1152  007BC0  0E0A               	movlw	10
  1153  007BC2  6EAD               	movwf	173,c	;volatile
  1154  007BC4                     l52:
  1155  007BC4  A2AC               	btfss	172,1,c	;volatile
  1156  007BC6  EFE7  F03D         	goto	u351
  1157  007BCA  EFE9  F03D         	goto	u350
  1158  007BCE                     u351:
  1159  007BCE  EFE2  F03D         	goto	l52
  1160  007BD2                     u350:
  1161  007BD2                     
  1162                           ;maincode.c: 53:     TXREG = 0x0D;
  1163  007BD2  0E0D               	movlw	13
  1164  007BD4  6EAD               	movwf	173,c	;volatile
  1165  007BD6                     l55:
  1166  007BD6  A2AC               	btfss	172,1,c	;volatile
  1167  007BD8  EFF0  F03D         	goto	u361
  1168  007BDC  EFF2  F03D         	goto	u360
  1169  007BE0                     u361:
  1170  007BE0  EFEB  F03D         	goto	l55
  1171  007BE4                     u360:
  1172  007BE4  0012               	return		;funcret
  1173  007BE6                     __end_of_EUSART_siguientelinea:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _EUSART_enviachar *****************
  1177 ;; Defined at:
  1178 ;;		line 64 in file "maincode.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  letra           1    wreg     unsigned char 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  letra           1    0[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         0       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:        1 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text8
  1206  007B92                     __ptext8:
  1207                           	callstack 0
  1208  007B92                     _EUSART_enviachar:
  1209                           	callstack 30
  1210                           
  1211                           ;incstack = 0
  1212                           ;EUSART_enviachar@letra stored from wreg
  1213  007B92  6E44               	movwf	EUSART_enviachar@letra^0,c
  1214  007B94                     
  1215                           ;maincode.c: 65:     TXREG = letra;
  1216  007B94  C044  FFAD         	movff	EUSART_enviachar@letra,4013	;volatile
  1217  007B98                     l70:
  1218  007B98  A2AC               	btfss	172,1,c	;volatile
  1219  007B9A  EFD1  F03D         	goto	u391
  1220  007B9E  EFD3  F03D         	goto	u390
  1221  007BA2                     u391:
  1222  007BA2  EFCC  F03D         	goto	l70
  1223  007BA6                     u390:
  1224  007BA6  0012               	return		;funcret
  1225  007BA8                     __end_of_EUSART_enviachar:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _EUSART_enviacadena *****************
  1229 ;; Defined at:
  1230 ;;		line 57 in file "maincode.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  vector          2    0[COMRAM] PTR const unsigned char 
  1233 ;;		 -> menu3(24), menu2(9), menu1(24), upc(28), 
  1234 ;;  pos             1    2[COMRAM] unsigned char 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  x               1    3[COMRAM] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1246 ;;      Params:         3       0       0       0       0       0       0       0       0
  1247 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1249 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1250 ;;Total ram usage:        4 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text9
  1260  007C1C                     __ptext9:
  1261                           	callstack 0
  1262  007C1C                     _EUSART_enviacadena:
  1263                           	callstack 30
  1264  007C1C                     
  1265                           ;maincode.c: 58:     for (unsigned char x=0;x<pos;x++){
  1266  007C1C  0E00               	movlw	0
  1267  007C1E  6E47               	movwf	EUSART_enviacadena@x^0,c
  1268  007C20  EF22  F03E         	goto	l1050
  1269  007C24                     l1046:
  1270                           
  1271                           ;maincode.c: 59:         TXREG = vector[x];
  1272  007C24  5047               	movf	EUSART_enviacadena@x^0,w,c
  1273  007C26  2444               	addwf	EUSART_enviacadena@vector^0,w,c
  1274  007C28  6ED9               	movwf	fsr2l,c
  1275  007C2A  0E00               	movlw	0
  1276  007C2C  2045               	addwfc	(EUSART_enviacadena@vector+1)^0,w,c
  1277  007C2E  6EDA               	movwf	fsr2h,c
  1278  007C30  50DF               	movf	indf2,w,c
  1279  007C32  6EAD               	movwf	173,c	;volatile
  1280  007C34                     l63:
  1281  007C34  A2AC               	btfss	172,1,c	;volatile
  1282  007C36  EF1F  F03E         	goto	u371
  1283  007C3A  EF21  F03E         	goto	u370
  1284  007C3E                     u371:
  1285  007C3E  EF1A  F03E         	goto	l63
  1286  007C42                     u370:
  1287  007C42                     
  1288                           ;maincode.c: 61:     }
  1289  007C42  2A47               	incf	EUSART_enviacadena@x^0,f,c
  1290  007C44                     l1050:
  1291  007C44  5046               	movf	EUSART_enviacadena@pos^0,w,c
  1292  007C46  5C47               	subwf	EUSART_enviacadena@x^0,w,c
  1293  007C48  A0D8               	btfss	status,0,c
  1294  007C4A  EF29  F03E         	goto	u381
  1295  007C4E  EF2B  F03E         	goto	u380
  1296  007C52                     u381:
  1297  007C52  EF12  F03E         	goto	l1046
  1298  007C56                     u380:
  1299  007C56  0012               	return		;funcret
  1300  007C58                     __end_of_EUSART_enviacadena:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function _EUSART_config *****************
  1304 ;; Defined at:
  1305 ;;		line 31 in file "maincode.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text10
  1333  007B80                     __ptext10:
  1334                           	callstack 0
  1335  007B80                     _EUSART_config:
  1336                           	callstack 30
  1337  007B80                     
  1338                           ;maincode.c: 32:     SPBRGH = 0;
  1339  007B80  0E00               	movlw	0
  1340  007B82  6EB0               	movwf	176,c	;volatile
  1341                           
  1342                           ;maincode.c: 33:     SPBRG = 77;
  1343  007B84  0E4D               	movlw	77
  1344  007B86  6EAF               	movwf	175,c	;volatile
  1345  007B88                     
  1346                           ;maincode.c: 34:     TRISCbits.RC6 = 0;
  1347  007B88  9C94               	bcf	148,6,c	;volatile
  1348  007B8A                     
  1349                           ;maincode.c: 35:     RCSTAbits.SPEN = 1;
  1350  007B8A  8EAB               	bsf	171,7,c	;volatile
  1351  007B8C                     
  1352                           ;maincode.c: 36:     TXSTAbits.TXEN = 1;
  1353  007B8C  8AAC               	bsf	172,5,c	;volatile
  1354  007B8E                     
  1355                           ;maincode.c: 37:     RCSTAbits.CREN = 1;
  1356  007B8E  88AB               	bsf	171,4,c	;volatile
  1357  007B90  0012               	return		;funcret
  1358  007B92                     __end_of_EUSART_config:
  1359                           	callstack 0
  1360  0000                     
  1361                           	psect	rparam
  1362  0000                     
  1363                           	psect	idloc
  1364                           
  1365                           ;Config register IDLOC0 @ 0x200000
  1366                           ;	unspecified, using default values
  1367  200000                     	org	2097152
  1368  200000  FF                 	db	255
  1369                           
  1370                           ;Config register IDLOC1 @ 0x200001
  1371                           ;	unspecified, using default values
  1372  200001                     	org	2097153
  1373  200001  FF                 	db	255
  1374                           
  1375                           ;Config register IDLOC2 @ 0x200002
  1376                           ;	unspecified, using default values
  1377  200002                     	org	2097154
  1378  200002  FF                 	db	255
  1379                           
  1380                           ;Config register IDLOC3 @ 0x200003
  1381                           ;	unspecified, using default values
  1382  200003                     	org	2097155
  1383  200003  FF                 	db	255
  1384                           
  1385                           ;Config register IDLOC4 @ 0x200004
  1386                           ;	unspecified, using default values
  1387  200004                     	org	2097156
  1388  200004  FF                 	db	255
  1389                           
  1390                           ;Config register IDLOC5 @ 0x200005
  1391                           ;	unspecified, using default values
  1392  200005                     	org	2097157
  1393  200005  FF                 	db	255
  1394                           
  1395                           ;Config register IDLOC6 @ 0x200006
  1396                           ;	unspecified, using default values
  1397  200006                     	org	2097158
  1398  200006  FF                 	db	255
  1399                           
  1400                           ;Config register IDLOC7 @ 0x200007
  1401                           ;	unspecified, using default values
  1402  200007                     	org	2097159
  1403  200007  FF                 	db	255
  1404                           
  1405                           	psect	config
  1406                           
  1407                           ;Config register CONFIG1L @ 0x300000
  1408                           ;	PLL Prescaler Selection bits
  1409                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1410                           ;	System Clock Postscaler Selection bits
  1411                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1412                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1413                           ;	USBDIV = 0x0, unprogrammed default
  1414  300000                     	org	3145728
  1415  300000  00                 	db	0
  1416                           
  1417                           ;Config register CONFIG1H @ 0x300001
  1418                           ;	Oscillator Selection bits
  1419                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1420                           ;	Fail-Safe Clock Monitor Enable bit
  1421                           ;	FCMEN = 0x0, unprogrammed default
  1422                           ;	Internal/External Oscillator Switchover bit
  1423                           ;	IESO = 0x0, unprogrammed default
  1424  300001                     	org	3145729
  1425  300001  02                 	db	2
  1426                           
  1427                           ;Config register CONFIG2L @ 0x300002
  1428                           ;	Power-up Timer Enable bit
  1429                           ;	PWRT = ON, PWRT enabled
  1430                           ;	Brown-out Reset Enable bits
  1431                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1432                           ;	Brown-out Reset Voltage bits
  1433                           ;	BORV = 0x3, unprogrammed default
  1434                           ;	USB Voltage Regulator Enable bit
  1435                           ;	VREGEN = 0x0, unprogrammed default
  1436  300002                     	org	3145730
  1437  300002  18                 	db	24
  1438                           
  1439                           ;Config register CONFIG2H @ 0x300003
  1440                           ;	Watchdog Timer Enable bit
  1441                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1442                           ;	Watchdog Timer Postscale Select bits
  1443                           ;	WDTPS = 0xF, unprogrammed default
  1444  300003                     	org	3145731
  1445  300003  1E                 	db	30
  1446                           
  1447                           ; Padding undefined space
  1448  300004                     	org	3145732
  1449  300004  FF                 	db	255
  1450                           
  1451                           ;Config register CONFIG3H @ 0x300005
  1452                           ;	CCP2 MUX bit
  1453                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1454                           ;	PORTB A/D Enable bit
  1455                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1456                           ;	Low-Power Timer 1 Oscillator Enable bit
  1457                           ;	LPT1OSC = 0x0, unprogrammed default
  1458                           ;	MCLR Pin Enable bit
  1459                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1460  300005                     	org	3145733
  1461  300005  81                 	db	129
  1462                           
  1463                           ;Config register CONFIG4L @ 0x300006
  1464                           ;	Stack Full/Underflow Reset Enable bit
  1465                           ;	STVREN = 0x1, unprogrammed default
  1466                           ;	Single-Supply ICSP Enable bit
  1467                           ;	LVP = OFF, Single-Supply ICSP disabled
  1468                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1469                           ;	ICPRT = 0x0, unprogrammed default
  1470                           ;	Extended Instruction Set Enable bit
  1471                           ;	XINST = 0x0, unprogrammed default
  1472                           ;	Background Debugger Enable bit
  1473                           ;	DEBUG = 0x1, unprogrammed default
  1474  300006                     	org	3145734
  1475  300006  81                 	db	129
  1476                           
  1477                           ; Padding undefined space
  1478  300007                     	org	3145735
  1479  300007  FF                 	db	255
  1480                           
  1481                           ;Config register CONFIG5L @ 0x300008
  1482                           ;	unspecified, using default values
  1483                           ;	Code Protection bit
  1484                           ;	CP0 = 0x1, unprogrammed default
  1485                           ;	Code Protection bit
  1486                           ;	CP1 = 0x1, unprogrammed default
  1487                           ;	Code Protection bit
  1488                           ;	CP2 = 0x1, unprogrammed default
  1489                           ;	Code Protection bit
  1490                           ;	CP3 = 0x1, unprogrammed default
  1491  300008                     	org	3145736
  1492  300008  0F                 	db	15
  1493                           
  1494                           ;Config register CONFIG5H @ 0x300009
  1495                           ;	unspecified, using default values
  1496                           ;	Boot Block Code Protection bit
  1497                           ;	CPB = 0x1, unprogrammed default
  1498                           ;	Data EEPROM Code Protection bit
  1499                           ;	CPD = 0x1, unprogrammed default
  1500  300009                     	org	3145737
  1501  300009  C0                 	db	192
  1502                           
  1503                           ;Config register CONFIG6L @ 0x30000A
  1504                           ;	unspecified, using default values
  1505                           ;	Write Protection bit
  1506                           ;	WRT0 = 0x1, unprogrammed default
  1507                           ;	Write Protection bit
  1508                           ;	WRT1 = 0x1, unprogrammed default
  1509                           ;	Write Protection bit
  1510                           ;	WRT2 = 0x1, unprogrammed default
  1511                           ;	Write Protection bit
  1512                           ;	WRT3 = 0x1, unprogrammed default
  1513  30000A                     	org	3145738
  1514  30000A  0F                 	db	15
  1515                           
  1516                           ;Config register CONFIG6H @ 0x30000B
  1517                           ;	unspecified, using default values
  1518                           ;	Configuration Register Write Protection bit
  1519                           ;	WRTC = 0x1, unprogrammed default
  1520                           ;	Boot Block Write Protection bit
  1521                           ;	WRTB = 0x1, unprogrammed default
  1522                           ;	Data EEPROM Write Protection bit
  1523                           ;	WRTD = 0x1, unprogrammed default
  1524  30000B                     	org	3145739
  1525  30000B  E0                 	db	224
  1526                           
  1527                           ;Config register CONFIG7L @ 0x30000C
  1528                           ;	unspecified, using default values
  1529                           ;	Table Read Protection bit
  1530                           ;	EBTR0 = 0x1, unprogrammed default
  1531                           ;	Table Read Protection bit
  1532                           ;	EBTR1 = 0x1, unprogrammed default
  1533                           ;	Table Read Protection bit
  1534                           ;	EBTR2 = 0x1, unprogrammed default
  1535                           ;	Table Read Protection bit
  1536                           ;	EBTR3 = 0x1, unprogrammed default
  1537  30000C                     	org	3145740
  1538  30000C  0F                 	db	15
  1539                           
  1540                           ;Config register CONFIG7H @ 0x30000D
  1541                           ;	unspecified, using default values
  1542                           ;	Boot Block Table Read Protection bit
  1543                           ;	EBTRB = 0x1, unprogrammed default
  1544  30000D                     	org	3145741
  1545  30000D  40                 	db	64
  1546                           tosu	equ	0xFFF
  1547                           tosh	equ	0xFFE
  1548                           tosl	equ	0xFFD
  1549                           stkptr	equ	0xFFC
  1550                           pclatu	equ	0xFFB
  1551                           pclath	equ	0xFFA
  1552                           pcl	equ	0xFF9
  1553                           tblptru	equ	0xFF8
  1554                           tblptrh	equ	0xFF7
  1555                           tblptrl	equ	0xFF6
  1556                           tablat	equ	0xFF5
  1557                           prodh	equ	0xFF4
  1558                           prodl	equ	0xFF3
  1559                           indf0	equ	0xFEF
  1560                           postinc0	equ	0xFEE
  1561                           postdec0	equ	0xFED
  1562                           preinc0	equ	0xFEC
  1563                           plusw0	equ	0xFEB
  1564                           fsr0h	equ	0xFEA
  1565                           fsr0l	equ	0xFE9
  1566                           wreg	equ	0xFE8
  1567                           indf1	equ	0xFE7
  1568                           postinc1	equ	0xFE6
  1569                           postdec1	equ	0xFE5
  1570                           preinc1	equ	0xFE4
  1571                           plusw1	equ	0xFE3
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           bsr	equ	0xFE0
  1575                           indf2	equ	0xFDF
  1576                           postinc2	equ	0xFDE
  1577                           postdec2	equ	0xFDD
  1578                           preinc2	equ	0xFDC
  1579                           plusw2	equ	0xFDB
  1580                           fsr2h	equ	0xFDA
  1581                           fsr2l	equ	0xFD9
  1582                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        91
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      93
    BANK0           160      0      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 28
		 -> upc(COMRAM[28]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 28
		 -> upc(COMRAM[28]), 

    EUSART_enviacadena@vector	PTR const unsigned char  size(2) Largest target is 28
		 -> menu3(BANK0[24]), menu2(COMRAM[9]), menu1(COMRAM[24]), upc(COMRAM[28]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _convierte->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2315
                                             15 COMRAM     4     4      0
                      _EUSART_config
                 _EUSART_enviacadena
                   _EUSART_enviachar
              _EUSART_siguientelinea
                          _convierte
                        _init_config
                             _out595
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _out595                                               5     5      0      91
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _EUSART_siguientelinea                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_enviachar                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_enviacadena                                   4     1      3     698
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EUSART_config                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_config
   _EUSART_enviacadena
   _EUSART_enviachar
   _EUSART_siguientelinea
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _init_config
   _out595
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     13      5D       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      20        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Nov 12 15:28:41 2020

        __size_of_EUSART_config 0012                              l40 7B90                              l52 7BC4  
                            l37 7B7E                              l70 7B98                              l63 7C34  
                            l55 7BD6                              l80 7D50                              l73 7BA6  
                            l49 7DB6                              l58 7BE4                              l67 7C56  
                            l76 7CFE                              l77 7D4C                              l78 7D32  
                            l79 7D34                    ___awdiv@sign 004F                             l324 7F2A  
                           l337 7E66                             l770 7C1A                             l950 7E7A  
                           l960 7EA0                             l952 7E82                             l970 7ED8  
                           l962 7EA8                             l954 7E86                             l946 7E68  
                           l980 7F04                             l972 7EDE                             l964 7EBA  
                           l956 7E94                             l948 7E6C                             l974 7EF4  
                           l966 7EC2                             l982 7F0A                             l958 7E9C  
                           l990 7DB8                             l984 7F1A                             l976 7EFC  
                           l968 7ECA                             l992 7DBC                             l986 7F22  
                           l978 7EFE                             l994 7DCA                             l996 7DD2  
                           l998 7DD6                             u300 7DE4                             u301 7DE0  
                           u230 7E7A                             u310 7DFE                             u231 7E76  
                           u311 7DFA                             u240 7E94                             u320 7E1C  
                           u241 7E90                             u321 7E18                             u250 7EBA  
                           u330 7E32                             u410 7D2C                             u251 7EB6  
                           u331 7E2E                             u411 7D28                             u260 7ED8  
                           u340 7E56                             u420 7D4C                             u404 7D12  
                           u261 7ED4                             u341 7E52                             u421 7D48  
                           u405 7D0E                             u350 7BD2                             u270 7EF4  
                           u430 7C0E                             u351 7BCE                             u271 7EF0  
                           u431 7C0A                             u360 7BE4                             u280 7F1A  
                           u440 7FF8                             u361 7BE0                             u281 7F16  
                           u441 7FF4                             u370 7C42                             u290 7DCA  
                           u371 7C3E                             u291 7DC6                             u380 7C56  
                           u381 7C52                             u390 7BA6                             u391 7BA2  
                           u457 7FD2                             _upc 0007                    ___awmod@sign 0049  
                           wreg 000FE8                            l1000 7DE4                            l1010 7E1C  
                          l1002 7DEC                            l1020 7E56                            l1012 7E32  
                          l1004 7DFE                            l1100 7F9A                            l1030 7B88  
                          l1022 7E5E                            l1014 7E3A                            l1006 7E06  
                          l1102 7FA2                            l1032 7B8A                            l1040 7BC0  
                          l1016 7E40                            l1008 7E0E                            l1112 7FB6  
                          l1104 7FAA                            l1034 7B8C                            l1050 7C44  
                          l1042 7BD2                            l1018 7E46                            l1026 7B76  
                          l1114 7FC8                            l1106 7FAE                            l1036 7B8E  
                          l1028 7B80                            l1044 7C1C                            l1052 7B94  
                          l1060 7CF4                            l1116 7FDE                            l1046 7C24  
                          l1038 7D54                            l1070 7D38                            l1054 7CF0  
                          l1118 7FE2                            l1048 7C42                            l1072 7D3E  
                          l1056 7CF0                            l1080 7C0E                            l1066 7D00  
                          l1058 7CF2                            l1074 7BE6                            l1090 7F58  
                          l1068 7D2C                            l1076 7BF2                            l1092 7F68  
                          l1084 7F2C                            l1078 7BF6                            l1094 7F7C  
                          l1086 7F34                            l1096 7F8C                            l1088 7F44  
                          l1098 7F92         ??_EUSART_siguientelinea 0044                            _main 7F2C  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            start 0000                    ___param_bank 000000  
                         ?_main 0044                 __end_of___awdiv 7F2C                 __end_of___awmod 7E68  
      __end_of_EUSART_enviachar 7BA8                 ___awdiv@divisor 004C                    ?_init_config 0044  
               ___awdiv@counter 004E                           _SPBRG 000FAF                           _TRISE 000F96  
                         _TXREG 000FAD                   _EUSART_config 7B80                           _menu1 0023  
                         _menu2 003B                           _menu3 0060                           tablat 000FF5  
    __end_of_EUSART_enviacadena 7C58                           status 000FD8                 __initialization 7C9C  
                  __end_of_main 8000                          ??_main 0053                   __activetblptr 000000  
                ?_EUSART_config 0044                          _ADCON1 000FC1                ___awdiv@dividend 004A  
                        _SPBRGH 000FB0                       ??___awdiv 004E                          _decena 0059  
                     ??___awmod 0048                          _out595 7CEE                ___awdiv@quotient 0050  
               ___awmod@divisor 0046                 ___awmod@counter 0048                          _unidad 0057  
                        _strlen 7BE6                    __pdataCOMRAM 0001                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                      __accesstop 0060  
       __end_of__initialization 7CE8                   ___rparam_used 000001                  __pcstackCOMRAM 0044  
                  __pidataBANK0 7BA8                 ??_EUSART_config 0044            __size_of_init_config 000A  
            __size_of_convierte 0066                      __pnvCOMRAM 005D  __size_of_EUSART_siguientelinea 0026  
 __end_of_EUSART_siguientelinea 7BE6                         ?_out595 0044                         ?_strlen 0044  
             ?_EUSART_enviachar 0044              ??_EUSART_enviachar 0044                         __Hparam 0000  
                       __Lparam 0000                      _automatico 0001                         ___awdiv 7E68  
                       ___awmod 7DB8              _EUSART_enviacadena 7C1C               __end_of_convierte 7DB8  
                       __pcinit 7C9C                 __size_of_out595 0064                         __ramtop 0800  
                       _centena 005B                    out595@datoin 0046                         __ptext0 7F2C  
                       __ptext1 7BE6                         __ptext2 7CEE                         __ptext3 7B76  
                       __ptext4 7D52                         __ptext5 7DB8                         __ptext6 7E68  
                       __ptext7 7BC0                         __ptext8 7B92                         __ptext9 7C1C  
               __size_of_strlen 0036             ?_EUSART_enviacadena 0044                ___awmod@dividend 0044  
          end_of_initialization 7CE8                         out595@i 0047            ??_EUSART_enviacadena 0047  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postinc0 000FEE  
                       strlen@a 0046                         strlen@s 0044                       _TRISCbits 000F94  
                     _TXSTAbits 000FAC                   __pidataCOMRAM 7C59                  __end_of_out595 7D52  
                __end_of_strlen 7C1C             start_initialization 7C9C                     __pdataBANK0 0060  
                      ??_out595 0044                        ??_strlen 0046                   ??_init_config 0044  
                   __pbssCOMRAM 0057           __end_of_EUSART_config 7B92       __size_of_EUSART_enviachar 0016  
         _EUSART_siguientelinea 7BC0                        ?___awdiv 004A                        ?___awmod 0044  
                     _convierte 7D52                 convierte@numero 0052             __end_of_init_config 7B80  
                      _LATEbits 000F8D           EUSART_enviacadena@pos 0046           EUSART_enviachar@letra 0044  
                    ?_convierte 0044                       main@v_var 0055        EUSART_enviacadena@vector 0044  
                     copy_data0 7CB0                       copy_data1 7CD0          ?_EUSART_siguientelinea 0044  
   __size_of_EUSART_enviacadena 003C                        __Hrparam 0000                        __Lrparam 0000  
              __size_of___awdiv 00C4                __size_of___awmod 00B0                     _init_config 7B76  
                      _cantidad 005D                        __ptext10 7B80                _EUSART_enviachar 7B92  
                 __size_of_main 00D4                     ??_convierte 0052             EUSART_enviacadena@x 0047  
