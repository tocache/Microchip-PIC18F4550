

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 14 21:05:11 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     _PORTBbits	set	3969
    60  0000                     _PORTD	set	3971
    61  0000                     _LATD	set	3980
    62  0000                     _TRISD	set	3989
    63  0000                     _LATDbits	set	3980
    64                           
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	callstack 0
    68  000800  00                 	db	0
    69  000801                     STR_1:
    70  000801  45                 	db	69	;'E'
    71  000802  73                 	db	115	;'s'
    72  000803  74                 	db	116	;'t'
    73  000804  61                 	db	97	;'a'
    74  000805  64                 	db	100	;'d'
    75  000806  6F                 	db	111	;'o'
    76  000807  20                 	db	32
    77  000808  64                 	db	100	;'d'
    78  000809  65                 	db	101	;'e'
    79  00080A  20                 	db	32
    80  00080B  52                 	db	82	;'R'
    81  00080C  42                 	db	66	;'B'
    82  00080D  37                 	db	55	;'7'
    83  00080E  00                 	db	0
    84  00080F                     STR_3:
    85  00080F  20                 	db	32
    86  000810  41                 	db	65	;'A'
    87  000811  70                 	db	112	;'p'
    88  000812  61                 	db	97	;'a'
    89  000813  67                 	db	103	;'g'
    90  000814  61                 	db	97	;'a'
    91  000815  64                 	db	100	;'d'
    92  000816  6F                 	db	111	;'o'
    93  000817  20                 	db	32
    94  000818  20                 	db	32
    95  000819  00                 	db	0
    96  00081A                     STR_2:
    97  00081A  20                 	db	32
    98  00081B  45                 	db	69	;'E'
    99  00081C  6E                 	db	110	;'n'
   100  00081D  63                 	db	99	;'c'
   101  00081E  65                 	db	101	;'e'
   102  00081F  6E                 	db	110	;'n'
   103  000820  64                 	db	100	;'d'
   104  000821  69                 	db	105	;'i'
   105  000822  64                 	db	100	;'d'
   106  000823  6F                 	db	111	;'o'
   107  000824  00                 	db	0
   108  000825  00                 	db	0	; dummy byte at the end
   109  0000                     
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113  000AB8                     __pcinit:
   114                           	callstack 0
   115  000AB8                     start_initialization:
   116                           	callstack 0
   117  000AB8                     __initialization:
   118                           	callstack 0
   119  000AB8                     end_of_initialization:
   120                           	callstack 0
   121  000AB8                     __end_of__initialization:
   122                           	callstack 0
   123  000AB8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   124  000ABA  6EF8               	movwf	tblptru,c
   125  000ABC  0E08               	movlw	high __Lsmallconst
   126  000ABE  6EF7               	movwf	tblptrh,c
   127  000AC0  0100               	movlb	0
   128  000AC2  EF4C  F004         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	cstackCOMRAM
   131  000001                     __pcstackCOMRAM:
   132                           	callstack 0
   133  000001                     ENVIA_NIBBLE@dato:
   134                           	callstack 0
   135  000001                     LEER_LCD@aux:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	1
   140  000002                     ENVIA_CHAR@dato:
   141                           	callstack 0
   142  000002                     ENVIA_LCD_CMD@dato:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x1
   146  000002                     	ds	1
   147  000003                     ENVIA_CHAR@aux:
   148                           	callstack 0
   149  000003                     ENVIA_LCD_CMD@aux:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x2
   153  000003                     	ds	1
   154  000004                     ??_LCD_CONFIG:
   155  000004                     POS_CURSOR@columna:
   156                           	callstack 0
   157  000004                     CURSOR_ONOFF@estado:
   158                           	callstack 0
   159  000004                     ESCRIBE_MENSAJE@cadena:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x3
   163  000004                     	ds	1
   164  000005                     ??_lcd_init:
   165  000005                     POS_CURSOR@fila:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x4
   169  000005                     	ds	1
   170  000006                     ESCRIBE_MENSAJE@tam:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x5
   174  000006                     	ds	1
   175  000007                     ??_ESCRIBE_MENSAJE:
   176                           
   177                           ; 1 bytes @ 0x6
   178  000007                     	ds	2
   179  000009                     ESCRIBE_MENSAJE@i:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x8
   183  000009                     	ds	1
   184  00000A                     
   185                           ; 1 bytes @ 0x9
   186 ;;
   187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   188 ;;
   189 ;; *************** function _main *****************
   190 ;; Defined at:
   191 ;;		line 29 in file "maincode2.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;		None
   194 ;; Auto vars:     Size  Location     Type
   195 ;;		None
   196 ;; Return value:  Size  Location     Type
   197 ;;                  1    wreg      void 
   198 ;; Registers used:
   199 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   200 ;; Tracked objects:
   201 ;;		On entry : 0/0
   202 ;;		On exit  : 0/0
   203 ;;		Unchanged: 0/0
   204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   205 ;;      Params:         0       0       0       0       0       0       0       0       0
   206 ;;      Locals:         0       0       0       0       0       0       0       0       0
   207 ;;      Temps:          0       0       0       0       0       0       0       0       0
   208 ;;      Totals:         0       0       0       0       0       0       0       0       0
   209 ;;Total ram usage:        0 bytes
   210 ;; Hardware stack levels required when called:    4
   211 ;; This function calls:
   212 ;;		_ESCRIBE_MENSAJE
   213 ;;		_POS_CURSOR
   214 ;;		_lcd_init
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text0
   221  000898                     __ptext0:
   222                           	callstack 0
   223  000898                     _main:
   224                           	callstack 27
   225  000898                     
   226                           ;maincode2.c: 30:     lcd_init();
   227  000898  EC3A  F005         	call	_lcd_init	;wreg free
   228  00089C                     l100:
   229                           
   230                           ;maincode2.c: 32:         POS_CURSOR(1,0);
   231  00089C  0E00               	movlw	0
   232  00089E  6E04               	movwf	POS_CURSOR@columna^0,c
   233  0008A0  0E01               	movlw	1
   234  0008A2  ECD1  F004         	call	_POS_CURSOR
   235  0008A6                     
   236                           ;maincode2.c: 33:         ESCRIBE_MENSAJE("Estado de RB7",13);
   237  0008A6  0E01               	movlw	low STR_1
   238  0008A8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   239  0008AA  0E08               	movlw	high STR_1
   240  0008AC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   241  0008AE  0E0D               	movlw	13
   242  0008B0  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   243  0008B2  ECB2  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   244  0008B6                     
   245                           ;maincode2.c: 34:         if (PORTBbits.RB7 == 1){
   246  0008B6  AE81               	btfss	129,7,c	;volatile
   247  0008B8  EF60  F004         	goto	u161
   248  0008BC  EF62  F004         	goto	u160
   249  0008C0                     u161:
   250  0008C0  EF71  F004         	goto	l1007
   251  0008C4                     u160:
   252  0008C4                     
   253                           ;maincode2.c: 35:             POS_CURSOR(2,0);
   254  0008C4  0E00               	movlw	0
   255  0008C6  6E04               	movwf	POS_CURSOR@columna^0,c
   256  0008C8  0E02               	movlw	2
   257  0008CA  ECD1  F004         	call	_POS_CURSOR
   258  0008CE                     
   259                           ;maincode2.c: 36:             ESCRIBE_MENSAJE(" Encendido",10);
   260  0008CE  0E1A               	movlw	low STR_2
   261  0008D0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   262  0008D2  0E08               	movlw	high STR_2
   263  0008D4  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   264  0008D6  0E0A               	movlw	10
   265  0008D8  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   266  0008DA  ECB2  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   267                           
   268                           ;maincode2.c: 37:         }
   269  0008DE  EF4E  F004         	goto	l100
   270  0008E2                     l1007:
   271                           
   272                           ;maincode2.c: 39:             POS_CURSOR(2,0);
   273  0008E2  0E00               	movlw	0
   274  0008E4  6E04               	movwf	POS_CURSOR@columna^0,c
   275  0008E6  0E02               	movlw	2
   276  0008E8  ECD1  F004         	call	_POS_CURSOR
   277  0008EC                     
   278                           ;maincode2.c: 40:             ESCRIBE_MENSAJE(" Apagado  ",10);
   279  0008EC  0E0F               	movlw	low STR_3
   280  0008EE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   281  0008F0  0E08               	movlw	high STR_3
   282  0008F2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   283  0008F4  0E0A               	movlw	10
   284  0008F6  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   285  0008F8  ECB2  F004         	call	_ESCRIBE_MENSAJE	;wreg free
   286  0008FC  EF4E  F004         	goto	l100
   287  000900  EF00  F000         	goto	start
   288  000904                     __end_of_main:
   289                           	callstack 0
   290                           
   291 ;; *************** function _lcd_init *****************
   292 ;; Defined at:
   293 ;;		line 20 in file "maincode2.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2, status,0, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   307 ;;      Params:         0       0       0       0       0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0       0       0
   309 ;;      Temps:          1       0       0       0       0       0       0       0       0
   310 ;;      Totals:         1       0       0       0       0       0       0       0       0
   311 ;;Total ram usage:        1 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    3
   314 ;; This function calls:
   315 ;;		_BORRAR_LCD
   316 ;;		_CURSOR_HOME
   317 ;;		_CURSOR_ONOFF
   318 ;;		_LCD_CONFIG
   319 ;; This function is called by:
   320 ;;		_main
   321 ;; This function uses a non-reentrant model
   322 ;;
   323                           
   324                           	psect	text1
   325  000A74                     __ptext1:
   326                           	callstack 0
   327  000A74                     _lcd_init:
   328                           	callstack 27
   329  000A74                     
   330                           ;maincode2.c: 21:     TRISD = 0x00;
   331  000A74  0E00               	movlw	0
   332  000A76  6E95               	movwf	149,c	;volatile
   333  000A78                     
   334                           ;maincode2.c: 22:     LCD_CONFIG();
   335  000A78  EC82  F004         	call	_LCD_CONFIG	;wreg free
   336  000A7C                     
   337                           ;maincode2.c: 23:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   338  000A7C  0EEA               	movlw	234
   339  000A7E  6E05               	movwf	??_lcd_init^0,c
   340  000A80  0EC3               	movlw	195
   341  000A82                     u177:
   342  000A82  2EE8               	decfsz	wreg,f,c
   343  000A84  D7FE               	bra	u177
   344  000A86  2E05               	decfsz	??_lcd_init^0,f,c
   345  000A88  D7FC               	bra	u177
   346  000A8A  F000               	nop	
   347  000A8C                     
   348                           ;maincode2.c: 24:     BORRAR_LCD();
   349  000A8C  EC67  F005         	call	_BORRAR_LCD	;wreg free
   350  000A90                     
   351                           ;maincode2.c: 25:     CURSOR_HOME();
   352  000A90  EC63  F005         	call	_CURSOR_HOME	;wreg free
   353  000A94                     
   354                           ;maincode2.c: 26:     CURSOR_ONOFF(1);
   355  000A94  0E01               	movlw	1
   356  000A96  EC22  F005         	call	_CURSOR_ONOFF
   357  000A9A  0012               	return		;funcret
   358  000A9C                     __end_of_lcd_init:
   359                           	callstack 0
   360                           
   361 ;; *************** function _LCD_CONFIG *****************
   362 ;; Defined at:
   363 ;;		line 72 in file "../20202_c_lcdhola2.X/LCD.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		wreg, status,2, status,0, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   377 ;;      Params:         0       0       0       0       0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0       0       0       0       0
   379 ;;      Temps:          1       0       0       0       0       0       0       0       0
   380 ;;      Totals:         1       0       0       0       0       0       0       0       0
   381 ;;Total ram usage:        1 bytes
   382 ;; Hardware stack levels used:    1
   383 ;; Hardware stack levels required when called:    2
   384 ;; This function calls:
   385 ;;		_ENVIA_LCD_CMD
   386 ;;		_ENVIA_NIBBLE
   387 ;; This function is called by:
   388 ;;		_lcd_init
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text2
   393  000904                     __ptext2:
   394                           	callstack 0
   395  000904                     _LCD_CONFIG:
   396                           	callstack 27
   397  000904                     
   398                           ;../20202_c_lcdhola2.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   399  000904  908C               	bcf	140,0,c	;volatile
   400                           
   401                           ;../20202_c_lcdhola2.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   402  000906  928C               	bcf	140,1,c	;volatile
   403  000908                     
   404                           ;../20202_c_lcdhola2.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   405  000908  0E30               	movlw	48
   406  00090A  EC4E  F005         	call	_ENVIA_NIBBLE
   407  00090E                     
   408                           ;../20202_c_lcdhola2.X/LCD.c: 77:         _delay(24000);
   409  00090E  0E20               	movlw	32
   410  000910  6E04               	movwf	??_LCD_CONFIG^0,c
   411  000912  0E2A               	movlw	42
   412  000914                     u187:
   413  000914  2EE8               	decfsz	wreg,f,c
   414  000916  D7FE               	bra	u187
   415  000918  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   416  00091A  D7FC               	bra	u187
   417  00091C                     
   418                           ;../20202_c_lcdhola2.X/LCD.c: 78:         _delay(24000);
   419  00091C  0E20               	movlw	32
   420  00091E  6E04               	movwf	??_LCD_CONFIG^0,c
   421  000920  0E2A               	movlw	42
   422  000922                     u197:
   423  000922  2EE8               	decfsz	wreg,f,c
   424  000924  D7FE               	bra	u197
   425  000926  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   426  000928  D7FC               	bra	u197
   427                           
   428                           ;../20202_c_lcdhola2.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   429  00092A  0E30               	movlw	48
   430  00092C  EC4E  F005         	call	_ENVIA_NIBBLE
   431  000930                     
   432                           ;../20202_c_lcdhola2.X/LCD.c: 83:  _delay(1200);
   433  000930  0EF0               	movlw	240
   434  000932                     u207:
   435  000932  D000               	nop2	
   436  000934  2EE8               	decfsz	wreg,f,c
   437  000936  D7FD               	bra	u207
   438  000938                     
   439                           ;../20202_c_lcdhola2.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   440  000938  0E30               	movlw	48
   441  00093A  EC4E  F005         	call	_ENVIA_NIBBLE
   442  00093E                     
   443                           ;../20202_c_lcdhola2.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   444  00093E  0E20               	movlw	32
   445  000940  EC4E  F005         	call	_ENVIA_NIBBLE
   446  000944                     
   447                           ;../20202_c_lcdhola2.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   448  000944  0E01               	movlw	1
   449  000946  ECEE  F004         	call	_ENVIA_LCD_CMD
   450  00094A                     
   451                           ;../20202_c_lcdhola2.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   452  00094A  0E28               	movlw	40
   453  00094C  ECEE  F004         	call	_ENVIA_LCD_CMD
   454  000950                     
   455                           ;../20202_c_lcdhola2.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   456  000950  0E0F               	movlw	15
   457  000952  ECEE  F004         	call	_ENVIA_LCD_CMD
   458  000956                     
   459                           ;../20202_c_lcdhola2.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   460  000956  0E06               	movlw	6
   461  000958  ECEE  F004         	call	_ENVIA_LCD_CMD
   462  00095C                     
   463                           ;../20202_c_lcdhola2.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   464  00095C  0E01               	movlw	1
   465  00095E  ECEE  F004         	call	_ENVIA_LCD_CMD
   466  000962  0012               	return		;funcret
   467  000964                     __end_of_LCD_CONFIG:
   468                           	callstack 0
   469                           
   470 ;; *************** function _CURSOR_ONOFF *****************
   471 ;; Defined at:
   472 ;;		line 35 in file "../20202_c_lcdhola2.X/LCD.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  estado          1    wreg     unsigned char 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;  estado          1    3[COMRAM] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   486 ;;      Params:         0       0       0       0       0       0       0       0       0
   487 ;;      Locals:         1       0       0       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0
   489 ;;      Totals:         1       0       0       0       0       0       0       0       0
   490 ;;Total ram usage:        1 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    2
   493 ;; This function calls:
   494 ;;		_ENVIA_LCD_CMD
   495 ;; This function is called by:
   496 ;;		_lcd_init
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text3
   501  000A44                     __ptext3:
   502                           	callstack 0
   503  000A44                     _CURSOR_ONOFF:
   504                           	callstack 27
   505                           
   506                           ;incstack = 0
   507                           ;CURSOR_ONOFF@estado stored from wreg
   508  000A44  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   509  000A46                     
   510                           ;../20202_c_lcdhola2.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20202_c_lcd
      +                          hola2.X/LCD.c: 36: {;../20202_c_lcdhola2.X/LCD.c: 37:  if(estado == 0) ENVIA_LCD_CMD(0x0
      +                          E);
   511  000A46  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   512  000A48  A4D8               	btfss	status,2,c
   513  000A4A  EF29  F005         	goto	u21
   514  000A4E  EF2B  F005         	goto	u20
   515  000A52                     u21:
   516  000A52  EF2E  F005         	goto	l855
   517  000A56                     u20:
   518  000A56  0E0E               	movlw	14
   519  000A58  ECEE  F004         	call	_ENVIA_LCD_CMD
   520  000A5C                     l855:
   521                           
   522                           ;../20202_c_lcdhola2.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   523  000A5C  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   524  000A5E  A4D8               	btfss	status,2,c
   525  000A60  EF34  F005         	goto	u31
   526  000A64  EF36  F005         	goto	u30
   527  000A68                     u31:
   528  000A68  EF39  F005         	goto	l42
   529  000A6C                     u30:
   530  000A6C  0E0C               	movlw	12
   531  000A6E  ECEE  F004         	call	_ENVIA_LCD_CMD
   532  000A72                     l42:
   533  000A72  0012               	return		;funcret
   534  000A74                     __end_of_CURSOR_ONOFF:
   535                           	callstack 0
   536                           
   537 ;; *************** function _CURSOR_HOME *****************
   538 ;; Defined at:
   539 ;;		line 30 in file "../20202_c_lcdhola2.X/LCD.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   553 ;;      Params:         0       0       0       0       0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    2
   560 ;; This function calls:
   561 ;;		_ENVIA_LCD_CMD
   562 ;; This function is called by:
   563 ;;		_lcd_init
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text4
   568  000AC6                     __ptext4:
   569                           	callstack 0
   570  000AC6                     _CURSOR_HOME:
   571                           	callstack 27
   572  000AC6                     
   573                           ;../20202_c_lcdhola2.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   574  000AC6  0E02               	movlw	2
   575  000AC8  ECEE  F004         	call	_ENVIA_LCD_CMD
   576  000ACC  0012               	return		;funcret
   577  000ACE                     __end_of_CURSOR_HOME:
   578                           	callstack 0
   579                           
   580 ;; *************** function _BORRAR_LCD *****************
   581 ;; Defined at:
   582 ;;		line 67 in file "../20202_c_lcdhola2.X/LCD.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    2
   603 ;; This function calls:
   604 ;;		_ENVIA_LCD_CMD
   605 ;; This function is called by:
   606 ;;		_lcd_init
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text5
   611  000ACE                     __ptext5:
   612                           	callstack 0
   613  000ACE                     _BORRAR_LCD:
   614                           	callstack 27
   615  000ACE                     
   616                           ;../20202_c_lcdhola2.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   617  000ACE  0E01               	movlw	1
   618  000AD0  ECEE  F004         	call	_ENVIA_LCD_CMD
   619  000AD4  0012               	return		;funcret
   620  000AD6                     __end_of_BORRAR_LCD:
   621                           	callstack 0
   622                           
   623 ;; *************** function _POS_CURSOR *****************
   624 ;; Defined at:
   625 ;;		line 6 in file "../20202_c_lcdhola2.X/LCD.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  fila            1    wreg     unsigned char 
   628 ;;  columna         1    3[COMRAM] unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  fila            1    4[COMRAM] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         1       0       0       0       0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		_ENVIA_LCD_CMD
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text6
   655  0009A2                     __ptext6:
   656                           	callstack 0
   657  0009A2                     _POS_CURSOR:
   658                           	callstack 28
   659                           
   660                           ;incstack = 0
   661                           ;POS_CURSOR@fila stored from wreg
   662  0009A2  6E05               	movwf	POS_CURSOR@fila^0,c
   663  0009A4                     
   664                           ;../20202_c_lcdhola2.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char column
      +                          a);../20202_c_lcdhola2.X/LCD.c: 7: {;../20202_c_lcdhola2.X/LCD.c: 8:  if(fila == 1)
   665  0009A4  0405               	decf	POS_CURSOR@fila^0,w,c
   666  0009A6  A4D8               	btfss	status,2,c
   667  0009A8  EFD8  F004         	goto	u131
   668  0009AC  EFDA  F004         	goto	u130
   669  0009B0                     u131:
   670  0009B0  EFE0  F004         	goto	l985
   671  0009B4                     u130:
   672  0009B4                     
   673                           ;../20202_c_lcdhola2.X/LCD.c: 9:  {;../20202_c_lcdhola2.X/LCD.c: 10:   ENVIA_LCD_CMD(0x8
      +                          0+columna);
   674  0009B4  5004               	movf	POS_CURSOR@columna^0,w,c
   675  0009B6  0F80               	addlw	128
   676  0009B8  ECEE  F004         	call	_ENVIA_LCD_CMD
   677                           
   678                           ;../20202_c_lcdhola2.X/LCD.c: 11:  }
   679  0009BC  EFED  F004         	goto	l24
   680  0009C0                     l985:
   681  0009C0  0E02               	movlw	2
   682  0009C2  1805               	xorwf	POS_CURSOR@fila^0,w,c
   683  0009C4  A4D8               	btfss	status,2,c
   684  0009C6  EFE7  F004         	goto	u141
   685  0009CA  EFE9  F004         	goto	u140
   686  0009CE                     u141:
   687  0009CE  EFED  F004         	goto	l24
   688  0009D2                     u140:
   689  0009D2                     
   690                           ;../20202_c_lcdhola2.X/LCD.c: 13:  {;../20202_c_lcdhola2.X/LCD.c: 14:   ENVIA_LCD_CMD(0x
      +                          C0+columna);
   691  0009D2  5004               	movf	POS_CURSOR@columna^0,w,c
   692  0009D4  0FC0               	addlw	192
   693  0009D6  ECEE  F004         	call	_ENVIA_LCD_CMD
   694  0009DA                     l24:
   695  0009DA  0012               	return		;funcret
   696  0009DC                     __end_of_POS_CURSOR:
   697                           	callstack 0
   698                           
   699 ;; *************** function _ENVIA_LCD_CMD *****************
   700 ;; Defined at:
   701 ;;		line 104 in file "../20202_c_lcdhola2.X/LCD.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  dato            1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  dato            1    1[COMRAM] unsigned char 
   706 ;;  aux             1    2[COMRAM] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   716 ;;      Params:         0       0       0       0       0       0       0       0       0
   717 ;;      Locals:         2       0       0       0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0       0       0
   719 ;;      Totals:         2       0       0       0       0       0       0       0       0
   720 ;;Total ram usage:        2 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		_ENVIA_NIBBLE
   725 ;;		_LEER_LCD
   726 ;; This function is called by:
   727 ;;		_POS_CURSOR
   728 ;;		_CURSOR_HOME
   729 ;;		_CURSOR_ONOFF
   730 ;;		_BORRAR_LCD
   731 ;;		_LCD_CONFIG
   732 ;;		_BLINK_CURSOR
   733 ;;		_DISPLAY_ONOFF
   734 ;;		_GENERACARACTER
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738                           	psect	text7
   739  0009DC                     __ptext7:
   740                           	callstack 0
   741  0009DC                     _ENVIA_LCD_CMD:
   742                           	callstack 27
   743                           
   744                           ;incstack = 0
   745                           ;ENVIA_LCD_CMD@dato stored from wreg
   746  0009DC  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
   747  0009DE                     
   748                           ;../20202_c_lcdhola2.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20202_c_lcd
      +                          hola2.X/LCD.c: 105: {;../20202_c_lcdhola2.X/LCD.c: 106:  unsigned char aux;;../20202_c_l
      +                          cdhola2.X/LCD.c: 107:  LATDbits.LATD0 = 0;
   749  0009DE  908C               	bcf	140,0,c	;volatile
   750  0009E0                     
   751                           ;../20202_c_lcdhola2.X/LCD.c: 108:  LEER_LCD();
   752  0009E0  EC13  F004         	call	_LEER_LCD	;wreg free
   753  0009E4                     
   754                           ;../20202_c_lcdhola2.X/LCD.c: 109:  TRISD = 0b00000000;
   755  0009E4  0E00               	movlw	0
   756  0009E6  6E95               	movwf	149,c	;volatile
   757  0009E8                     
   758                           ;../20202_c_lcdhola2.X/LCD.c: 111:         _delay(1200);
   759  0009E8  0EF0               	movlw	240
   760  0009EA                     u217:
   761  0009EA  D000               	nop2	
   762  0009EC  2EE8               	decfsz	wreg,f,c
   763  0009EE  D7FD               	bra	u217
   764  0009F0                     
   765                           ;../20202_c_lcdhola2.X/LCD.c: 112:         LATDbits.LATD1 = 0;
   766  0009F0  928C               	bcf	140,1,c	;volatile
   767  0009F2                     
   768                           ;../20202_c_lcdhola2.X/LCD.c: 113:  LATDbits.LATD2 = 0;
   769  0009F2  948C               	bcf	140,2,c	;volatile
   770  0009F4                     
   771                           ;../20202_c_lcdhola2.X/LCD.c: 114:  LATDbits.LATD0 = 0;
   772  0009F4  908C               	bcf	140,0,c	;volatile
   773  0009F6                     
   774                           ;../20202_c_lcdhola2.X/LCD.c: 115:  aux = dato & 0xF0;
   775  0009F6  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
   776  0009F8  0BF0               	andlw	240
   777  0009FA  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   778  0009FC                     
   779                           ;../20202_c_lcdhola2.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
   780  0009FC  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   781  0009FE  EC4E  F005         	call	_ENVIA_NIBBLE
   782  000A02                     
   783                           ;../20202_c_lcdhola2.X/LCD.c: 117:  aux = dato<<4;
   784  000A02  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   785  000A04  0BF0               	andlw	240
   786  000A06  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
   787  000A08                     
   788                           ;../20202_c_lcdhola2.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
   789  000A08  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
   790  000A0A  EC4E  F005         	call	_ENVIA_NIBBLE
   791  000A0E  0012               	return		;funcret
   792  000A10                     __end_of_ENVIA_LCD_CMD:
   793                           	callstack 0
   794                           
   795 ;; *************** function _ESCRIBE_MENSAJE *****************
   796 ;; Defined at:
   797 ;;		line 41 in file "../20202_c_lcdhola2.X/LCD.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   800 ;;		 -> STR_3(11), STR_2(11), STR_1(14), 
   801 ;;  tam             1    5[COMRAM] unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  i               1    8[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   813 ;;      Params:         3       0       0       0       0       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0       0       0       0       0
   815 ;;      Temps:          2       0       0       0       0       0       0       0       0
   816 ;;      Totals:         6       0       0       0       0       0       0       0       0
   817 ;;Total ram usage:        6 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		_ENVIA_CHAR
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text8
   828  000964                     __ptext8:
   829                           	callstack 0
   830  000964                     _ESCRIBE_MENSAJE:
   831                           	callstack 28
   832  000964                     
   833                           ;../20202_c_lcdhola2.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char 
      +                          tam);../20202_c_lcdhola2.X/LCD.c: 42: {;../20202_c_lcdhola2.X/LCD.c: 43:  unsigned char 
      +                          i = 0;
   834  000964  0E00               	movlw	0
   835  000966  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   836                           
   837                           ;../20202_c_lcdhola2.X/LCD.c: 44:  for(i = 0; i<tam; i++)
   838  000968  0E00               	movlw	0
   839  00096A  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
   840  00096C  EFC7  F004         	goto	l995
   841  000970                     l991:
   842                           
   843                           ;../20202_c_lcdhola2.X/LCD.c: 45:  {;../20202_c_lcdhola2.X/LCD.c: 46:   ENVIA_CHAR(caden
      +                          a[i]);
   844  000970  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
   845  000972  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
   846  000974  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
   847  000976  0E00               	movlw	0
   848  000978  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
   849  00097A  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
   850  00097C  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   851  000980  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   852  000984                     	if	0	;tblptru may be non-zero
   853  000984                     	endif
   854  000984                     	if	0	;tblptru may be non-zero
   855  000984                     	endif
   856  000984  0008               	tblrd		*
   857  000986  50F5               	movf	tablat,w,c
   858  000988  EC08  F005         	call	_ENVIA_CHAR
   859  00098C                     
   860                           ;../20202_c_lcdhola2.X/LCD.c: 47:  }
   861  00098C  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
   862  00098E                     l995:
   863  00098E  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
   864  000990  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
   865  000992  A0D8               	btfss	status,0,c
   866  000994  EFCE  F004         	goto	u151
   867  000998  EFD0  F004         	goto	u150
   868  00099C                     u151:
   869  00099C  EFB8  F004         	goto	l991
   870  0009A0                     u150:
   871  0009A0  0012               	return		;funcret
   872  0009A2                     __end_of_ESCRIBE_MENSAJE:
   873                           	callstack 0
   874                           
   875 ;; *************** function _ENVIA_CHAR *****************
   876 ;; Defined at:
   877 ;;		line 50 in file "../20202_c_lcdhola2.X/LCD.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  dato            1    wreg     unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  dato            1    1[COMRAM] unsigned char 
   882 ;;  aux             1    2[COMRAM] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   892 ;;      Params:         0       0       0       0       0       0       0       0       0
   893 ;;      Locals:         2       0       0       0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    1
   899 ;; This function calls:
   900 ;;		_ENVIA_NIBBLE
   901 ;;		_LEER_LCD
   902 ;; This function is called by:
   903 ;;		_ESCRIBE_MENSAJE
   904 ;;		_GENERACARACTER
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text9
   909  000A10                     __ptext9:
   910                           	callstack 0
   911  000A10                     _ENVIA_CHAR:
   912                           	callstack 28
   913                           
   914                           ;incstack = 0
   915                           ;ENVIA_CHAR@dato stored from wreg
   916  000A10  6E02               	movwf	ENVIA_CHAR@dato^0,c
   917  000A12                     
   918                           ;../20202_c_lcdhola2.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20202_c_lcdhola
      +                          2.X/LCD.c: 51: {;../20202_c_lcdhola2.X/LCD.c: 52:  unsigned char aux;;../20202_c_lcdhola
      +                          2.X/LCD.c: 53:  LATDbits.LATD0 = 1;
   919  000A12  808C               	bsf	140,0,c	;volatile
   920  000A14                     
   921                           ;../20202_c_lcdhola2.X/LCD.c: 54:  LEER_LCD();
   922  000A14  EC13  F004         	call	_LEER_LCD	;wreg free
   923  000A18                     
   924                           ;../20202_c_lcdhola2.X/LCD.c: 55:  TRISD = 0x00;
   925  000A18  0E00               	movlw	0
   926  000A1A  6E95               	movwf	149,c	;volatile
   927  000A1C                     
   928                           ;../20202_c_lcdhola2.X/LCD.c: 56:         _delay(1200);
   929  000A1C  0EF0               	movlw	240
   930  000A1E                     u227:
   931  000A1E  D000               	nop2	
   932  000A20  2EE8               	decfsz	wreg,f,c
   933  000A22  D7FD               	bra	u227
   934  000A24                     
   935                           ;../20202_c_lcdhola2.X/LCD.c: 58:  LATDbits.LATD1 = 0;
   936  000A24  928C               	bcf	140,1,c	;volatile
   937  000A26                     
   938                           ;../20202_c_lcdhola2.X/LCD.c: 59:  LATDbits.LATD2 = 0;
   939  000A26  948C               	bcf	140,2,c	;volatile
   940  000A28                     
   941                           ;../20202_c_lcdhola2.X/LCD.c: 60:  LATDbits.LATD0 = 1;
   942  000A28  808C               	bsf	140,0,c	;volatile
   943  000A2A                     
   944                           ;../20202_c_lcdhola2.X/LCD.c: 61:  aux = dato & 0xF0;
   945  000A2A  5002               	movf	ENVIA_CHAR@dato^0,w,c
   946  000A2C  0BF0               	andlw	240
   947  000A2E  6E03               	movwf	ENVIA_CHAR@aux^0,c
   948  000A30                     
   949                           ;../20202_c_lcdhola2.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
   950  000A30  5003               	movf	ENVIA_CHAR@aux^0,w,c
   951  000A32  EC4E  F005         	call	_ENVIA_NIBBLE
   952  000A36                     
   953                           ;../20202_c_lcdhola2.X/LCD.c: 63:  aux = dato << 4;
   954  000A36  3802               	swapf	ENVIA_CHAR@dato^0,w,c
   955  000A38  0BF0               	andlw	240
   956  000A3A  6E03               	movwf	ENVIA_CHAR@aux^0,c
   957  000A3C                     
   958                           ;../20202_c_lcdhola2.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
   959  000A3C  5003               	movf	ENVIA_CHAR@aux^0,w,c
   960  000A3E  EC4E  F005         	call	_ENVIA_NIBBLE
   961  000A42  0012               	return		;funcret
   962  000A44                     __end_of_ENVIA_CHAR:
   963                           	callstack 0
   964                           
   965 ;; *************** function _LEER_LCD *****************
   966 ;; Defined at:
   967 ;;		line 121 in file "../20202_c_lcdhola2.X/LCD.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  aux             1    0[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   981 ;;      Params:         0       0       0       0       0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0
   984 ;;      Totals:         1       0       0       0       0       0       0       0       0
   985 ;;Total ram usage:        1 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_ENVIA_CHAR
   991 ;;		_ENVIA_LCD_CMD
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text10
   996  000826                     __ptext10:
   997                           	callstack 0
   998  000826                     _LEER_LCD:
   999                           	callstack 27
  1000  000826                     
  1001                           ;../20202_c_lcdhola2.X/LCD.c: 123:  unsigned char aux;;../20202_c_lcdhola2.X/LCD.c: 124:
      +                            TRISD = 0xF8;
  1002  000826  0EF8               	movlw	248
  1003  000828  6E95               	movwf	149,c	;volatile
  1004  00082A                     
  1005                           ;../20202_c_lcdhola2.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1006  00082A  908C               	bcf	140,0,c	;volatile
  1007  00082C                     
  1008                           ;../20202_c_lcdhola2.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1009  00082C  828C               	bsf	140,1,c	;volatile
  1010  00082E                     
  1011                           ;../20202_c_lcdhola2.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1012  00082E  848C               	bsf	140,2,c	;volatile
  1013  000830                     
  1014                           ;../20202_c_lcdhola2.X/LCD.c: 128:         _delay(1200);
  1015  000830  0EF0               	movlw	240
  1016  000832                     u237:
  1017  000832  D000               	nop2	
  1018  000834  2EE8               	decfsz	wreg,f,c
  1019  000836  D7FD               	bra	u237
  1020  000838                     
  1021                           ;../20202_c_lcdhola2.X/LCD.c: 130:  aux = PORTD;
  1022  000838  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1023  00083C                     
  1024                           ;../20202_c_lcdhola2.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1025  00083C  948C               	bcf	140,2,c	;volatile
  1026  00083E                     
  1027                           ;../20202_c_lcdhola2.X/LCD.c: 132:         _delay(1200);
  1028  00083E  0EF0               	movlw	240
  1029  000840                     u247:
  1030  000840  D000               	nop2	
  1031  000842  2EE8               	decfsz	wreg,f,c
  1032  000844  D7FD               	bra	u247
  1033  000846                     
  1034                           ;../20202_c_lcdhola2.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1035  000846  848C               	bsf	140,2,c	;volatile
  1036  000848                     
  1037                           ;../20202_c_lcdhola2.X/LCD.c: 135:         _delay(1200);
  1038  000848  0EF0               	movlw	240
  1039  00084A                     u257:
  1040  00084A  D000               	nop2	
  1041  00084C  2EE8               	decfsz	wreg,f,c
  1042  00084E  D7FD               	bra	u257
  1043  000850                     
  1044                           ;../20202_c_lcdhola2.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1045  000850  948C               	bcf	140,2,c	;volatile
  1046  000852                     l803:
  1047                           
  1048                           ;../20202_c_lcdhola2.X/LCD.c: 138:  aux = aux & 0x80;
  1049  000852  5001               	movf	LEER_LCD@aux^0,w,c
  1050  000854  0B80               	andlw	128
  1051  000856  6E01               	movwf	LEER_LCD@aux^0,c
  1052                           
  1053                           ;../20202_c_lcdhola2.X/LCD.c: 139:  while(aux == 0x80)
  1054  000858  EF42  F004         	goto	l817
  1055  00085C                     l67:
  1056                           
  1057                           ;../20202_c_lcdhola2.X/LCD.c: 140:         {;../20202_c_lcdhola2.X/LCD.c: 141:          
      +                             LATDbits.LATD2 = 1;
  1058  00085C  848C               	bsf	140,2,c	;volatile
  1059  00085E                     
  1060                           ;../20202_c_lcdhola2.X/LCD.c: 142:             _delay(1200);
  1061  00085E  0EF0               	movlw	240
  1062  000860                     u267:
  1063  000860  D000               	nop2	
  1064  000862  2EE8               	decfsz	wreg,f,c
  1065  000864  D7FD               	bra	u267
  1066  000866                     
  1067                           ;../20202_c_lcdhola2.X/LCD.c: 143:             aux = PORTD;
  1068  000866  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1069  00086A                     
  1070                           ;../20202_c_lcdhola2.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1071  00086A  948C               	bcf	140,2,c	;volatile
  1072                           
  1073                           ;../20202_c_lcdhola2.X/LCD.c: 145:             _delay(1200);
  1074  00086C  0EF0               	movlw	240
  1075  00086E                     u277:
  1076  00086E  D000               	nop2	
  1077  000870  2EE8               	decfsz	wreg,f,c
  1078  000872  D7FD               	bra	u277
  1079  000874                     
  1080                           ;../20202_c_lcdhola2.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1081  000874  848C               	bsf	140,2,c	;volatile
  1082                           
  1083                           ;../20202_c_lcdhola2.X/LCD.c: 147:             _delay(1200);
  1084  000876  0EF0               	movlw	240
  1085  000878                     u287:
  1086  000878  D000               	nop2	
  1087  00087A  2EE8               	decfsz	wreg,f,c
  1088  00087C  D7FD               	bra	u287
  1089  00087E                     
  1090                           ;../20202_c_lcdhola2.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1091  00087E  948C               	bcf	140,2,c	;volatile
  1092  000880  EF29  F004         	goto	l803
  1093  000884                     l817:
  1094                           
  1095                           ;../20202_c_lcdhola2.X/LCD.c: 139:  while(aux == 0x80)
  1096  000884  0E80               	movlw	128
  1097  000886  1801               	xorwf	LEER_LCD@aux^0,w,c
  1098  000888  B4D8               	btfsc	status,2,c
  1099  00088A  EF49  F004         	goto	u11
  1100  00088E  EF4B  F004         	goto	u10
  1101  000892                     u11:
  1102  000892  EF2E  F004         	goto	l67
  1103  000896                     u10:
  1104  000896  0012               	return		;funcret
  1105  000898                     __end_of_LEER_LCD:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _ENVIA_NIBBLE *****************
  1109 ;; Defined at:
  1110 ;;		line 93 in file "../20202_c_lcdhola2.X/LCD.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  dato            1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  dato            1    0[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_ENVIA_CHAR
  1134 ;;		_LCD_CONFIG
  1135 ;;		_ENVIA_LCD_CMD
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text11
  1140  000A9C                     __ptext11:
  1141                           	callstack 0
  1142  000A9C                     _ENVIA_NIBBLE:
  1143                           	callstack 28
  1144                           
  1145                           ;incstack = 0
  1146                           ;ENVIA_NIBBLE@dato stored from wreg
  1147  000A9C  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1148  000A9E                     
  1149                           ;../20202_c_lcdhola2.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20202_c_lcdho
      +                          la2.X/LCD.c: 94: {;../20202_c_lcdhola2.X/LCD.c: 95:  LATD &= 0x0F;
  1150  000A9E  0E0F               	movlw	15
  1151  000AA0  168C               	andwf	140,f,c	;volatile
  1152                           
  1153                           ;../20202_c_lcdhola2.X/LCD.c: 96:  dato &= 0xF0;
  1154  000AA2  0EF0               	movlw	240
  1155  000AA4  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1156                           
  1157                           ;../20202_c_lcdhola2.X/LCD.c: 97:  LATD|= dato;
  1158  000AA6  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1159  000AA8  128C               	iorwf	140,f,c	;volatile
  1160  000AAA                     
  1161                           ;../20202_c_lcdhola2.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1162  000AAA  848C               	bsf	140,2,c	;volatile
  1163  000AAC                     
  1164                           ;../20202_c_lcdhola2.X/LCD.c: 100:         _delay(1200);
  1165  000AAC  0EF0               	movlw	240
  1166  000AAE                     u297:
  1167  000AAE  D000               	nop2	
  1168  000AB0  2EE8               	decfsz	wreg,f,c
  1169  000AB2  D7FD               	bra	u297
  1170  000AB4                     
  1171                           ;../20202_c_lcdhola2.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1172  000AB4  948C               	bcf	140,2,c	;volatile
  1173  000AB6  0012               	return		;funcret
  1174  000AB8                     __end_of_ENVIA_NIBBLE:
  1175                           	callstack 0
  1176                           
  1177                           	psect	rparam
  1178  0000                     
  1179                           	psect	idloc
  1180                           
  1181                           ;Config register IDLOC0 @ 0x200000
  1182                           ;	unspecified, using default values
  1183  200000                     	org	2097152
  1184  200000  FF                 	db	255
  1185                           
  1186                           ;Config register IDLOC1 @ 0x200001
  1187                           ;	unspecified, using default values
  1188  200001                     	org	2097153
  1189  200001  FF                 	db	255
  1190                           
  1191                           ;Config register IDLOC2 @ 0x200002
  1192                           ;	unspecified, using default values
  1193  200002                     	org	2097154
  1194  200002  FF                 	db	255
  1195                           
  1196                           ;Config register IDLOC3 @ 0x200003
  1197                           ;	unspecified, using default values
  1198  200003                     	org	2097155
  1199  200003  FF                 	db	255
  1200                           
  1201                           ;Config register IDLOC4 @ 0x200004
  1202                           ;	unspecified, using default values
  1203  200004                     	org	2097156
  1204  200004  FF                 	db	255
  1205                           
  1206                           ;Config register IDLOC5 @ 0x200005
  1207                           ;	unspecified, using default values
  1208  200005                     	org	2097157
  1209  200005  FF                 	db	255
  1210                           
  1211                           ;Config register IDLOC6 @ 0x200006
  1212                           ;	unspecified, using default values
  1213  200006                     	org	2097158
  1214  200006  FF                 	db	255
  1215                           
  1216                           ;Config register IDLOC7 @ 0x200007
  1217                           ;	unspecified, using default values
  1218  200007                     	org	2097159
  1219  200007  FF                 	db	255
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1L @ 0x300000
  1224                           ;	PLL Prescaler Selection bits
  1225                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1226                           ;	System Clock Postscaler Selection bits
  1227                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1228                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1229                           ;	USBDIV = 0x0, unprogrammed default
  1230  300000                     	org	3145728
  1231  300000  00                 	db	0
  1232                           
  1233                           ;Config register CONFIG1H @ 0x300001
  1234                           ;	Oscillator Selection bits
  1235                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1236                           ;	Fail-Safe Clock Monitor Enable bit
  1237                           ;	FCMEN = 0x0, unprogrammed default
  1238                           ;	Internal/External Oscillator Switchover bit
  1239                           ;	IESO = 0x0, unprogrammed default
  1240  300001                     	org	3145729
  1241  300001  02                 	db	2
  1242                           
  1243                           ;Config register CONFIG2L @ 0x300002
  1244                           ;	Power-up Timer Enable bit
  1245                           ;	PWRT = ON, PWRT enabled
  1246                           ;	Brown-out Reset Enable bits
  1247                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1248                           ;	Brown-out Reset Voltage bits
  1249                           ;	BORV = 0x3, unprogrammed default
  1250                           ;	USB Voltage Regulator Enable bit
  1251                           ;	VREGEN = 0x0, unprogrammed default
  1252  300002                     	org	3145730
  1253  300002  18                 	db	24
  1254                           
  1255                           ;Config register CONFIG2H @ 0x300003
  1256                           ;	Watchdog Timer Enable bit
  1257                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1258                           ;	Watchdog Timer Postscale Select bits
  1259                           ;	WDTPS = 0xF, unprogrammed default
  1260  300003                     	org	3145731
  1261  300003  1E                 	db	30
  1262                           
  1263                           ; Padding undefined space
  1264  300004                     	org	3145732
  1265  300004  FF                 	db	255
  1266                           
  1267                           ;Config register CONFIG3H @ 0x300005
  1268                           ;	CCP2 MUX bit
  1269                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1270                           ;	PORTB A/D Enable bit
  1271                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1272                           ;	Low-Power Timer 1 Oscillator Enable bit
  1273                           ;	LPT1OSC = 0x0, unprogrammed default
  1274                           ;	MCLR Pin Enable bit
  1275                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1276  300005                     	org	3145733
  1277  300005  81                 	db	129
  1278                           
  1279                           ;Config register CONFIG4L @ 0x300006
  1280                           ;	Stack Full/Underflow Reset Enable bit
  1281                           ;	STVREN = 0x1, unprogrammed default
  1282                           ;	Single-Supply ICSP Enable bit
  1283                           ;	LVP = OFF, Single-Supply ICSP disabled
  1284                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1285                           ;	ICPRT = 0x0, unprogrammed default
  1286                           ;	Extended Instruction Set Enable bit
  1287                           ;	XINST = 0x0, unprogrammed default
  1288                           ;	Background Debugger Enable bit
  1289                           ;	DEBUG = 0x1, unprogrammed default
  1290  300006                     	org	3145734
  1291  300006  81                 	db	129
  1292                           
  1293                           ; Padding undefined space
  1294  300007                     	org	3145735
  1295  300007  FF                 	db	255
  1296                           
  1297                           ;Config register CONFIG5L @ 0x300008
  1298                           ;	unspecified, using default values
  1299                           ;	Code Protection bit
  1300                           ;	CP0 = 0x1, unprogrammed default
  1301                           ;	Code Protection bit
  1302                           ;	CP1 = 0x1, unprogrammed default
  1303                           ;	Code Protection bit
  1304                           ;	CP2 = 0x1, unprogrammed default
  1305                           ;	Code Protection bit
  1306                           ;	CP3 = 0x1, unprogrammed default
  1307  300008                     	org	3145736
  1308  300008  0F                 	db	15
  1309                           
  1310                           ;Config register CONFIG5H @ 0x300009
  1311                           ;	unspecified, using default values
  1312                           ;	Boot Block Code Protection bit
  1313                           ;	CPB = 0x1, unprogrammed default
  1314                           ;	Data EEPROM Code Protection bit
  1315                           ;	CPD = 0x1, unprogrammed default
  1316  300009                     	org	3145737
  1317  300009  C0                 	db	192
  1318                           
  1319                           ;Config register CONFIG6L @ 0x30000A
  1320                           ;	unspecified, using default values
  1321                           ;	Write Protection bit
  1322                           ;	WRT0 = 0x1, unprogrammed default
  1323                           ;	Write Protection bit
  1324                           ;	WRT1 = 0x1, unprogrammed default
  1325                           ;	Write Protection bit
  1326                           ;	WRT2 = 0x1, unprogrammed default
  1327                           ;	Write Protection bit
  1328                           ;	WRT3 = 0x1, unprogrammed default
  1329  30000A                     	org	3145738
  1330  30000A  0F                 	db	15
  1331                           
  1332                           ;Config register CONFIG6H @ 0x30000B
  1333                           ;	unspecified, using default values
  1334                           ;	Configuration Register Write Protection bit
  1335                           ;	WRTC = 0x1, unprogrammed default
  1336                           ;	Boot Block Write Protection bit
  1337                           ;	WRTB = 0x1, unprogrammed default
  1338                           ;	Data EEPROM Write Protection bit
  1339                           ;	WRTD = 0x1, unprogrammed default
  1340  30000B                     	org	3145739
  1341  30000B  E0                 	db	224
  1342                           
  1343                           ;Config register CONFIG7L @ 0x30000C
  1344                           ;	unspecified, using default values
  1345                           ;	Table Read Protection bit
  1346                           ;	EBTR0 = 0x1, unprogrammed default
  1347                           ;	Table Read Protection bit
  1348                           ;	EBTR1 = 0x1, unprogrammed default
  1349                           ;	Table Read Protection bit
  1350                           ;	EBTR2 = 0x1, unprogrammed default
  1351                           ;	Table Read Protection bit
  1352                           ;	EBTR3 = 0x1, unprogrammed default
  1353  30000C                     	org	3145740
  1354  30000C  0F                 	db	15
  1355                           
  1356                           ;Config register CONFIG7H @ 0x30000D
  1357                           ;	unspecified, using default values
  1358                           ;	Boot Block Table Read Protection bit
  1359                           ;	EBTRB = 0x1, unprogrammed default
  1360  30000D                     	org	3145741
  1361  30000D  40                 	db	64
  1362                           tosu	equ	0xFFF
  1363                           tosh	equ	0xFFE
  1364                           tosl	equ	0xFFD
  1365                           stkptr	equ	0xFFC
  1366                           pclatu	equ	0xFFB
  1367                           pclath	equ	0xFFA
  1368                           pcl	equ	0xFF9
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           prodh	equ	0xFF4
  1374                           prodl	equ	0xFF3
  1375                           indf0	equ	0xFEF
  1376                           postinc0	equ	0xFEE
  1377                           postdec0	equ	0xFED
  1378                           preinc0	equ	0xFEC
  1379                           plusw0	equ	0xFEB
  1380                           fsr0h	equ	0xFEA
  1381                           fsr0l	equ	0xFE9
  1382                           wreg	equ	0xFE8
  1383                           indf1	equ	0xFE7
  1384                           postinc1	equ	0xFE6
  1385                           postdec1	equ	0xFE5
  1386                           preinc1	equ	0xFE4
  1387                           plusw1	equ	0xFE3
  1388                           fsr1h	equ	0xFE2
  1389                           fsr1l	equ	0xFE1
  1390                           bsr	equ	0xFE0
  1391                           indf2	equ	0xFDF
  1392                           postinc2	equ	0xFDE
  1393                           postdec2	equ	0xFDD
  1394                           preinc2	equ	0xFDC
  1395                           plusw2	equ	0xFDB
  1396                           fsr2h	equ	0xFDA
  1397                           fsr2l	equ	0xFD9
  1398                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1628
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     436
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 14 21:05:11 2020

                      l24 09DA                        l42 0A72                        l51 0A42  
                      l60 0AB6                        l37 0ACC                        l54 0AD4  
                      l63 0A0E                        l48 09A0                        l57 0962  
                      l67 085C                        l69 0896                        l95 0A9A  
                      u10 0896                        u11 0892                        u20 0A56  
                      u21 0A52                        u30 0A6C                        u31 0A68  
           ENVIA_CHAR@aux 0003                       l100 089C                       l801 0850  
                     l811 0874                       l803 0852                       l821 0AAA  
                     l813 087E                       l805 085E                       l901 0950  
                     l823 0AAC                       l807 0866                       l831 09E4  
                     l903 0956                       l825 0AB4                       l809 086A  
                     l817 0884                       l841 09F6                       l833 09E8  
                     l905 095C                       l819 0A9E                       l843 09FC  
                     l835 09F0                       l827 09DE                       l851 0A46  
                     l931 0A90                       l923 0A74                       l781 0826  
                     l861 0A14                       l845 0A02                       l837 09F2  
                     l829 09E0                       l853 0A56                       l933 0A94  
                     l925 0A78                       l791 0838                       l783 082A  
                     l871 0A28                       l863 0A18                       l847 0A08  
                     l839 09F4                       l855 0A5C                       l927 0A7C  
                     l793 083C                       l785 082C                       l873 0A2A  
                     l865 0A1C                       l881 0ACE                       l849 0AC6  
                     l857 0A6C                       l929 0A8C                       l795 083E  
                     l787 082E                       l875 0A30                       l867 0A24  
                     l859 0A12                       l891 0930                       l883 0904  
                     l797 0846                       l789 0830                       l877 0A36  
                     l869 0A26                       l981 09A4                       l893 0938  
                     l885 0908                       l799 0848                       l879 0A3C  
                     l991 0970                       l983 09B4                       l895 093E  
                     l887 090E                       l993 098C                       l985 09C0  
                     l897 0944                       l889 091C                       l995 098E  
                     l987 09D2                       l899 094A                       l989 0964  
                     l997 0898                       l999 08A6                       u130 09B4  
                     u131 09B0                       u140 09D2                       u141 09CE  
                     u150 09A0                       u151 099C                       u207 0932  
                     u160 08C4                       u217 09EA                       u161 08C0  
                     u227 0A1E                       u237 0832                       u247 0840  
                     u257 084A                       u177 0A82                       u267 0860  
                     u187 0914                       u277 086E                       u197 0922  
                     u287 0878                       u297 0AAE               LEER_LCD@aux 0001  
                     wreg 000FE8              ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001  
          ENVIA_CHAR@dato 0002                      l1001 08B6                      l1003 08C4  
                    l1005 08CE                      l1007 08E2                      l1009 08EC  
                    STR_1 0801                      STR_2 081A                      STR_3 080F  
                    _LATD 000F8C                      _main 0898                      start 0000  
           ?_CURSOR_ONOFF 0001              ___param_bank 000000           ??_ENVIA_LCD_CMD 0002  
        __end_of_LEER_LCD 0898       __size_of_BORRAR_LCD 0008                     ?_main 0001  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 0AB8  
            __end_of_main 0904           _ESCRIBE_MENSAJE 0964                    ??_main 000A  
           __activetblptr 000001          __end_of_lcd_init 0A9C      __end_of_ENVIA_NIBBLE 0AB8  
     __size_of_POS_CURSOR 003A              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0AB8              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 09A2            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0AD6          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0A74  
      __end_of_LCD_CONFIG 0964        __end_of_ENVIA_CHAR 0A44                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001              ??_POS_CURSOR 0005                 ?_lcd_init 0001  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0A10  
                 __pcinit 0AB8        __end_of_POS_CURSOR 09DC                   __ramtop 0800  
                 __ptext0 0898                   __ptext1 0A74                   __ptext2 0904  
                 __ptext3 0A44                   __ptext4 0AC6                   __ptext5 0ACE  
                 __ptext6 09A2                   __ptext7 09DC                   __ptext8 0964  
                 __ptext9 0A10                ??_lcd_init 0005              _ENVIA_NIBBLE 0A9C  
    end_of_initialization 0AB8     __size_of_CURSOR_ONOFF 0030                 _PORTBbits 000F81  
       __size_of_LEER_LCD 0072              _CURSOR_ONOFF 0A44        CURSOR_ONOFF@estado 0004  
           ??_CURSOR_HOME 0004       start_initialization 0AB8         ENVIA_LCD_CMD@dato 0002  
     __end_of_CURSOR_HOME 0ACE         __size_of_lcd_init 0028               __smallconst 0800  
                _LEER_LCD 0826                  _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0009  
          POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 003E               _CURSOR_HOME 0AC6  
  __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 0800                  __ptext10 0826                  __ptext11 0A9C  
              _BORRAR_LCD 0ACE                  _lcd_init 0A74             __size_of_main 006C  
              _LCD_CONFIG 0904                _ENVIA_CHAR 0A10             _ENVIA_LCD_CMD 09DC  
       ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004            ?_ENVIA_LCD_CMD 0001  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001                _POS_CURSOR 09A2  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
