Microchip MPLAB XC8 Compiler V2.30

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.30\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\20202_c_i2c_3.X.production.sym \
  --cmf=dist/default/production\20202_c_i2c_3.X.production.cmf -z -Q18F4550 \
  -oC:\Users\klnla\AppData\Local\Temp\sabox2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/20202_c_i2c_3.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=060h-07FFh -pstack=STACK \
  -ACODE=00h-07FFFh -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh -ACONFIG=0300000h-030000Dh \
  -AIDLOC=0200000h-0200007h -AEEDATA=0F00000h-0F000FFh -peeprom_data=EEDATA \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\klnla\AppData\Local\Temp\sabox8.o \
  dist/default/production\20202_c_i2c_3.X.production.o 

Object code version is 3.11

Machine type is 18F4550



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\klnla\AppData\Local\Temp\sabox8.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                init                                  0        0        4        0       0
dist/default/production\20202_c_i2c_3.X.production.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                smallconst                          800      800       30      400       0
                text14                              DB4      DB4       1C      418       0
                text13                              B76      B76       72      418       0
                text12                              D28      D28       34      418       0
                text11                              C48      C48       3E      418       0
                text10                              CF4      CF4       34      418       0
                text9                               C86      C86       3A      418       0
                text8                               DFC      DFC        8      418       0
                text7                               DF4      DF4        8      418       0
                text6                               D5C      D5C       30      418       0
                text5                               BE8      BE8       60      418       0
                text4                               D8C      D8C       28      418       0
                text3                               ABA      ABA       BC      418       0
                text2                               830      830      156      418       0
                text1                               DE4      DE4       10      418       0
                text0                               986      986      134      418       0
                cstackCOMRAM                         15       15        A        1       1
                dataCOMRAM                            1        1       14        1       1
                bssCOMRAM                            1F       1F        3        1       1
                cinit                               CC0      CC0       34      418       0
                idataCOMRAM                         DD0      DD0       14      418       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text14                              DB4      DB4       1C         0
                text13                              B76      B76       72         0
                text12                              D28      D28       34         0
                text11                              C48      C48       3E         0
                text10                              CF4      CF4       34         0
                text9                               C86      C86       3A         0
                text8                               DFC      DFC        8         0
                text7                               DF4      DF4        8         0
                text6                               D5C      D5C       30         0
                text5                               BE8      BE8       60         0
                text4                               D8C      D8C       28         0
                text3                               ABA      ABA       BC         0
                text2                               830      830      156         0
                text1                               DE4      DE4       10         0
                text0                               986      986      134         0
                cinit                               CC0      CC0       34         0
                idataCOMRAM                         DD0      DD0       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       30         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         15       15        A         1
                dataCOMRAM                            1        1       14         1
                bssCOMRAM                            1F       1F        3         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   CONFIG         
                config                           300000   300000        E         4

        CLASS   IDLOC          
                idloc                            200000   200000        8         5

        CLASS   EEDATA         

        CLASS   FARRAM         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                dataCOMRAM                     000001  000021  000022         1       1  COMRAM  
                smallconst                     000800  000030  000830       400       0  SMALLCON
                text2                          000830  0005D4  000E04       418       0  CODE    


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000022-0007FF              7DE
        CODE             000004-0007FF              7FC
                         000E04-007FFF             71FC
        COMRAM           000022-00005F               3E
        CONST            000004-0007FF              7FC
                         000E04-007FFF             71FC
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000E04-007FFF             71FC
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000E04-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

CURSOR_ONOFF@estado       cstackCOMRAM 000018
ENVIA_CHAR@aux            cstackCOMRAM 000017
ENVIA_CHAR@dato           cstackCOMRAM 000016
ENVIA_LCD_CMD@aux         cstackCOMRAM 000017
ENVIA_LCD_CMD@dato        cstackCOMRAM 000016
ENVIA_NIBBLE@dato         cstackCOMRAM 000015
ESCRIBE_MENSAJE@cadena    cstackCOMRAM 000018
ESCRIBE_MENSAJE@i         cstackCOMRAM 00001D
ESCRIBE_MENSAJE@tam       cstackCOMRAM 00001A
LEER_LCD@aux              cstackCOMRAM 000015
POS_CURSOR@columna        cstackCOMRAM 000018
POS_CURSOR@fila           cstackCOMRAM 000019
_BORRAR_LCD               text8        000DFC
_CURSOR_HOME              text7        000DF4
_CURSOR_ONOFF             text6        000D5C
_ENVIA_CHAR               text12       000D28
_ENVIA_LCD_CMD            text10       000CF4
_ENVIA_NIBBLE             text14       000DB4
_ESCRIBE_MENSAJE          text11       000C48
_LATD                     (abs)        000F8C
_LATDbits                 (abs)        000F8C
_LCD_CONFIG               text5        000BE8
_LEER_LCD                 text13       000B76
_PORTBbits                (abs)        000F81
_PORTD                    (abs)        000F83
_POS_CURSOR               text9        000C86
_SSPADD                   (abs)        000FC8
_SSPBUF                   (abs)        000FC9
_SSPCON1bits              (abs)        000FC6
_SSPCON2bits              (abs)        000FC5
_SSPSTATbits              (abs)        000FC7
_TRISD                    (abs)        000F95
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbank6                  bank6        000000
__Hbank7                  bank7        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__HbssCOMRAM              bssCOMRAM    000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000004
__Hintcode                intcode      000000
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    000000
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      000000
__Hram                    ram          000000
__Hramtop                 ramtop       000800
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000000
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   000830
__Hspace_0                (abs)        000E04
__Hspace_1                (abs)        000022
__Hspace_2                (abs)        000000
__Hspace_4                (abs)        60000E
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         000000
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext12                 text12       000000
__Htext13                 text13       000000
__Htext14                 text14       000000
__Htext2                  text2        000000
__Htext3                  text3        000000
__Htext4                  text4        000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbank6                  bank6        000000
__Lbank7                  bank7        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__LbssCOMRAM              bssCOMRAM    000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       000000
__Lconst                  const        000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        000000
__Lifardata               ifardata     000000
__Linit                   init         000000
__Lintcode                intcode      000000
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    000000
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      000000
__Lram                    ram          000000
__Lramtop                 ramtop       000800
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000800
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lspace_4                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         000000
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext12                 text12       000000
__Ltext13                 text13       000000
__Ltext14                 text14       000000
__Ltext2                  text2        000000
__Ltext3                  text3        000000
__Ltext4                  text4        000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        000E04
__S1                      (abs)        000022
__S2                      (abs)        000000
__S4                      (abs)        000000
__S5                      (abs)        000000
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000060
__activetblptr            (abs)        000001
__end_of_BORRAR_LCD       text8        000E04
__end_of_CURSOR_HOME      text7        000DFC
__end_of_CURSOR_ONOFF     text6        000D8C
__end_of_ENVIA_CHAR       text12       000D5C
__end_of_ENVIA_LCD_CMD    text10       000D28
__end_of_ENVIA_NIBBLE     text14       000DD0
__end_of_ESCRIBE_MENSAJE  text11       000C86
__end_of_LCD_CONFIG       text5        000C48
__end_of_LEER_LCD         text13       000BE8
__end_of_POS_CURSOR       text9        000CC0
__end_of__initialization  cinit        000CE6
__end_of_lcd_init         text4        000DB4
__end_of_m24c01_read      text3        000B76
__end_of_m24c01_write     text2        000986
__end_of_main             text0        000ABA
__end_of_mssp_config      text1        000DF4
__initialization          cinit        000CC0
__mediumconst             mediumconst  000000
__pbssCOMRAM              bssCOMRAM    00001F
__pcinit                  cinit        000CC0
__pcstackCOMRAM           cstackCOMRAM 000015
__pdataCOMRAM             dataCOMRAM   000001
__pidataCOMRAM            idataCOMRAM  000DD0
__psmallconst             smallconst   000800
__ptext0                  text0        000986
__ptext1                  text1        000DE4
__ptext10                 text10       000CF4
__ptext11                 text11       000C48
__ptext12                 text12       000D28
__ptext13                 text13       000B76
__ptext14                 text14       000DB4
__ptext2                  text2        000830
__ptext3                  text3        000ABA
__ptext4                  text4        000D8C
__ptext5                  text5        000BE8
__ptext6                  text6        000D5C
__ptext7                  text7        000DF4
__ptext8                  text8        000DFC
__ptext9                  text9        000C86
__ramtop                  ramtop       000800
__size_of_BORRAR_LCD      (abs)        000000
__size_of_CURSOR_HOME     (abs)        000000
__size_of_CURSOR_ONOFF    (abs)        000000
__size_of_ENVIA_CHAR      (abs)        000000
__size_of_ENVIA_LCD_CMD   (abs)        000000
__size_of_ENVIA_NIBBLE    (abs)        000000
__size_of_ESCRIBE_MENSAJE (abs)        000000
__size_of_LCD_CONFIG      (abs)        000000
__size_of_LEER_LCD        (abs)        000000
__size_of_POS_CURSOR      (abs)        000000
__size_of_lcd_init        (abs)        000000
__size_of_m24c01_read     (abs)        000000
__size_of_m24c01_write    (abs)        000000
__size_of_main            (abs)        000000
__size_of_mssp_config     (abs)        000000
__smallconst              smallconst   000800
_button1_stat             bssCOMRAM    000021
_button2_stat             bssCOMRAM    000020
_dato                     bssCOMRAM    00001F
_frase                    dataCOMRAM   000001
_lcd_init                 text4        000D8C
_m24c01_read              text3        000ABA
_m24c01_write             text2        000830
_main                     text0        000986
_mssp_config              text1        000DE4
end_of_initialization     cinit        000CE6
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
m24c01_read@direccion     cstackCOMRAM 000015
m24c01_read@leido         cstackCOMRAM 000016
m24c01_write@x            cstackCOMRAM 000016
m24c01_write@x_412        cstackCOMRAM 000017
main@y                    cstackCOMRAM 00001E
stackhi                   (abs)        0007FF
stacklo                   (abs)        000060
start                     init         000000
start_initialization      cinit        000CC0


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 101 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  y               1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_CHAR
		_ESCRIBE_MENSAJE
		_POS_CURSOR
		_lcd_init
		_m24c01_read
		_m24c01_write
		_mssp_config
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _mssp_config *****************
 Defined at:
		line 30 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _m24c01_write *****************
 Defined at:
		line 39 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  x               1    2[COMRAM] unsigned char 
  x               1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _m24c01_read *****************
 Defined at:
		line 74 in file "maincode.c"
 Parameters:    Size  Location     Type
  direccion       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  direccion       1    0[COMRAM] unsigned char 
  leido           1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _lcd_init *****************
 Defined at:
		line 21 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_BORRAR_LCD
		_CURSOR_HOME
		_CURSOR_ONOFF
		_LCD_CONFIG
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_CONFIG *****************
 Defined at:
		line 72 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_LCD_CMD
		_ENVIA_NIBBLE
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _CURSOR_ONOFF *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  estado          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  estado          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _CURSOR_HOME *****************
 Defined at:
		line 30 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _BORRAR_LCD *****************
 Defined at:
		line 67 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_lcd_init
 This function uses a non-reentrant model


 *************** function _POS_CURSOR *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  columna         1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_LCD_CMD *****************
 Defined at:
		line 104 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    1[COMRAM] unsigned char 
  aux             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_POS_CURSOR
		_CURSOR_HOME
		_CURSOR_ONOFF
		_BORRAR_LCD
		_LCD_CONFIG
		_BLINK_CURSOR
		_DISPLAY_ONOFF
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _ESCRIBE_MENSAJE *****************
 Defined at:
		line 41 in file "LCD.c"
 Parameters:    Size  Location     Type
  cadena          2    3[COMRAM] PTR const unsigned char 
		 -> STR_4(21), STR_3(8), STR_2(8), STR_1(17), 
  tam             1    5[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_CHAR
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_CHAR *****************
 Defined at:
		line 50 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    1[COMRAM] unsigned char 
  aux             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_ESCRIBE_MENSAJE
		_main
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _LEER_LCD *****************
 Defined at:
		line 121 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  aux             1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model


 *************** function _ENVIA_NIBBLE *****************
 Defined at:
		line 93 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_LCD_CONFIG
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	0CC0	0000	38

shared estimated size: 38

maincode.c
		_mssp_config   		CODE           	0DE4	0000	16
		_main          		CODE           	0986	0000	308
		_m24c01_read   		CODE           	0ABA	0000	188
		_m24c01_write  		CODE           	0830	0000	342
		_lcd_init      		CODE           	0D8C	0000	40

maincode.c estimated size: 894

LCD.c
		_ENVIA_NIBBLE  		CODE           	0DB4	0000	28
		_ENVIA_CHAR    		CODE           	0D28	0000	52
		_CURSOR_HOME   		CODE           	0DF4	0000	8
		_CURSOR_ONOFF  		CODE           	0D5C	0000	48
		_POS_CURSOR    		CODE           	0C86	0000	58
		_ESCRIBE_MENSAJE		CODE           	0C48	0000	62
		_ENVIA_LCD_CMD 		CODE           	0CF4	0000	52
		_LCD_CONFIG    		CODE           	0BE8	0000	96
		_BORRAR_LCD    		CODE           	0DFC	0000	8
		_LEER_LCD      		CODE           	0B76	0000	114

LCD.c estimated size: 526

