

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Oct 28 21:42:10 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  000DD0                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _frase
    71  000DD0  49                 	db	73
    72  000DD1  6E                 	db	110
    73  000DD2  67                 	db	103
    74  000DD3  65                 	db	101
    75  000DD4  6E                 	db	110
    76  000DD5  69                 	db	105
    77  000DD6  65                 	db	101
    78  000DD7  72                 	db	114
    79  000DD8  6F                 	db	111
    80  000DD9  20                 	db	32
    81  000DDA  4D                 	db	77
    82  000DDB  65                 	db	101
    83  000DDC  63                 	db	99
    84  000DDD  61                 	db	97
    85  000DDE  2D                 	db	45
    86  000DDF  45                 	db	69
    87  000DE0  6C                 	db	108
    88  000DE1  65                 	db	101
    89  000DE2  63                 	db	99
    90  000DE3  00                 	db	0
    91  0000                     _PORTBbits	set	3969
    92  0000                     _SSPSTATbits	set	4039
    93  0000                     _SSPBUF	set	4041
    94  0000                     _SSPCON2bits	set	4037
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPCON1bits	set	4038
    97  0000                     _PORTD	set	3971
    98  0000                     _LATD	set	3980
    99  0000                     _TRISD	set	3989
   100  0000                     _LATDbits	set	3980
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	callstack 0
   105  000800  00                 	db	0
   106  000801                     STR_4:
   107  000801  20                 	db	32
   108  000802  20                 	db	32
   109  000803  20                 	db	32
   110  000804  20                 	db	32
   111  000805  20                 	db	32
   112  000806  20                 	db	32
   113  000807  20                 	db	32
   114  000808  20                 	db	32
   115  000809  20                 	db	32
   116  00080A  20                 	db	32
   117  00080B  20                 	db	32
   118  00080C  20                 	db	32
   119  00080D  20                 	db	32
   120  00080E  20                 	db	32
   121  00080F  20                 	db	32
   122  000810  20                 	db	32
   123  000811  20                 	db	32
   124  000812  20                 	db	32
   125  000813  20                 	db	32
   126  000814  20                 	db	32
   127  000815  00                 	db	0
   128  000816                     STR_1:
   129  000816  53                 	db	83	;'S'
   130  000817  65                 	db	101	;'e'
   131  000818  6D                 	db	109	;'m'
   132  000819  61                 	db	97	;'a'
   133  00081A  6E                 	db	110	;'n'
   134  00081B  61                 	db	97	;'a'
   135  00081C  20                 	db	32
   136  00081D  31                 	db	49	;'1'
   137  00081E  31                 	db	49	;'1'
   138  00081F  20                 	db	32
   139  000820  45                 	db	69	;'E'
   140  000821  45                 	db	69	;'E'
   141  000822  50                 	db	80	;'P'
   142  000823  52                 	db	82	;'R'
   143  000824  4F                 	db	79	;'O'
   144  000825  4D                 	db	77	;'M'
   145  000826  00                 	db	0
   146  000827                     STR_2:
   147  000827  57                 	db	87	;'W'
   148  000828  72                 	db	114	;'r'
   149  000829  69                 	db	105	;'i'
   150  00082A  74                 	db	116	;'t'
   151  00082B  69                 	db	105	;'i'
   152  00082C  6E                 	db	110	;'n'
   153  00082D  67                 	db	103	;'g'
   154  00082E  00                 	db	0
   155  00082F  00                 	db	0	; dummy byte at the end
   156  0000                     
   157                           ; #config settings
   158                           
   159                           	psect	cinit
   160  000CC0                     __pcinit:
   161                           	callstack 0
   162  000CC0                     start_initialization:
   163                           	callstack 0
   164  000CC0                     __initialization:
   165                           	callstack 0
   166                           
   167                           ; Initialize objects allocated to COMRAM (20 bytes)
   168                           ; load TBLPTR registers with __pidataCOMRAM
   169  000CC0  0ED0               	movlw	low __pidataCOMRAM
   170  000CC2  6EF6               	movwf	tblptrl,c
   171  000CC4  0E0D               	movlw	high __pidataCOMRAM
   172  000CC6  6EF7               	movwf	tblptrh,c
   173  000CC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   174  000CCA  6EF8               	movwf	tblptru,c
   175  000CCC  EE00  F001         	lfsr	0,__pdataCOMRAM
   176  000CD0  EE10 F014          	lfsr	1,20
   177  000CD4                     copy_data0:
   178  000CD4  0009               	tblrd		*+
   179  000CD6  CFF5 FFEE          	movff	tablat,postinc0
   180  000CDA  50E5               	movf	postdec1,w,c
   181  000CDC  50E1               	movf	fsr1l,w,c
   182  000CDE  E1FA               	bnz	copy_data0
   183                           
   184                           ; Clear objects allocated to COMRAM (3 bytes)
   185  000CE0  6A21               	clrf	(__pbssCOMRAM+2)& (0+255),c
   186  000CE2  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   187  000CE4  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   188  000CE6                     end_of_initialization:
   189                           	callstack 0
   190  000CE6                     __end_of__initialization:
   191                           	callstack 0
   192  000CE6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   193  000CE8  6EF8               	movwf	tblptru,c
   194  000CEA  0E08               	movlw	high __Lsmallconst
   195  000CEC  6EF7               	movwf	tblptrh,c
   196  000CEE  0100               	movlb	0
   197  000CF0  EFC3  F004         	goto	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMRAM
   200  00001F                     __pbssCOMRAM:
   201                           	callstack 0
   202  00001F                     _dato:
   203                           	callstack 0
   204  00001F                     	ds	1
   205  000020                     _button2_stat:
   206                           	callstack 0
   207  000020                     	ds	1
   208  000021                     _button1_stat:
   209                           	callstack 0
   210  000021                     	ds	1
   211                           
   212                           	psect	dataCOMRAM
   213  000001                     __pdataCOMRAM:
   214                           	callstack 0
   215  000001                     _frase:
   216                           	callstack 0
   217  000001                     	ds	20
   218                           
   219                           	psect	cstackCOMRAM
   220  000015                     __pcstackCOMRAM:
   221                           	callstack 0
   222  000015                     ??_m24c01_write:
   223  000015                     ENVIA_NIBBLE@dato:
   224                           	callstack 0
   225  000015                     LEER_LCD@aux:
   226                           	callstack 0
   227  000015                     m24c01_read@direccion:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x0
   231  000015                     	ds	1
   232  000016                     ENVIA_CHAR@dato:
   233                           	callstack 0
   234  000016                     ENVIA_LCD_CMD@dato:
   235                           	callstack 0
   236  000016                     m24c01_write@x:
   237                           	callstack 0
   238  000016                     m24c01_read@leido:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x1
   242  000016                     	ds	1
   243  000017                     ENVIA_CHAR@aux:
   244                           	callstack 0
   245  000017                     ENVIA_LCD_CMD@aux:
   246                           	callstack 0
   247  000017                     m24c01_write@x_412:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x2
   251  000017                     	ds	1
   252  000018                     ??_LCD_CONFIG:
   253  000018                     POS_CURSOR@columna:
   254                           	callstack 0
   255  000018                     CURSOR_ONOFF@estado:
   256                           	callstack 0
   257  000018                     ESCRIBE_MENSAJE@cadena:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x3
   261  000018                     	ds	1
   262  000019                     ??_lcd_init:
   263  000019                     POS_CURSOR@fila:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x4
   267  000019                     	ds	1
   268  00001A                     ESCRIBE_MENSAJE@tam:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x5
   272  00001A                     	ds	1
   273  00001B                     ??_ESCRIBE_MENSAJE:
   274                           
   275                           ; 1 bytes @ 0x6
   276  00001B                     	ds	2
   277  00001D                     ESCRIBE_MENSAJE@i:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x8
   281  00001D                     	ds	1
   282  00001E                     main@y:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x9
   286  00001E                     	ds	1
   287                           
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 101 in file "maincode.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  y               1    9[COMRAM] unsigned char 
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   307 ;;      Params:         0       0       0       0       0       0       0       0       0
   308 ;;      Locals:         1       0       0       0       0       0       0       0       0
   309 ;;      Temps:          0       0       0       0       0       0       0       0       0
   310 ;;      Totals:         1       0       0       0       0       0       0       0       0
   311 ;;Total ram usage:        1 bytes
   312 ;; Hardware stack levels required when called:    4
   313 ;; This function calls:
   314 ;;		_ENVIA_CHAR
   315 ;;		_ESCRIBE_MENSAJE
   316 ;;		_POS_CURSOR
   317 ;;		_lcd_init
   318 ;;		_m24c01_read
   319 ;;		_m24c01_write
   320 ;;		_mssp_config
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text0
   327  000986                     __ptext0:
   328                           	callstack 0
   329  000986                     _main:
   330                           	callstack 27
   331  000986                     
   332                           ;maincode.c: 102:     lcd_init();
   333  000986  ECC6  F006         	call	_lcd_init	;wreg free
   334  00098A                     
   335                           ;maincode.c: 103:     mssp_config();
   336  00098A  ECF2  F006         	call	_mssp_config	;wreg free
   337  00098E                     
   338                           ;maincode.c: 104:     POS_CURSOR(1,0);
   339  00098E  0E00               	movlw	0
   340  000990  6E18               	movwf	POS_CURSOR@columna^0,c
   341  000992  0E01               	movlw	1
   342  000994  EC43  F006         	call	_POS_CURSOR
   343  000998                     
   344                           ;maincode.c: 105:     ESCRIBE_MENSAJE("Semana 11 EEPROM",16);
   345  000998  0E16               	movlw	low STR_1
   346  00099A  6E18               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   347  00099C  0E08               	movlw	high STR_1
   348  00099E  6E19               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   349  0009A0  0E10               	movlw	16
   350  0009A2  6E1A               	movwf	ESCRIBE_MENSAJE@tam^0,c
   351  0009A4  EC24  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   352  0009A8                     l1221:
   353                           
   354                           ;maincode.c: 107:         if(PORTBbits.RB6 == 1 && button1_stat == 0){
   355  0009A8  AC81               	btfss	129,6,c	;volatile
   356  0009AA  EFD9  F004         	goto	u531
   357  0009AE  EFDB  F004         	goto	u530
   358  0009B2                     u531:
   359  0009B2  EFF4  F004         	goto	l1233
   360  0009B6                     u530:
   361  0009B6  5021               	movf	_button1_stat^0,w,c
   362  0009B8  A4D8               	btfss	status,2,c
   363  0009BA  EFE1  F004         	goto	u541
   364  0009BE  EFE3  F004         	goto	u540
   365  0009C2                     u541:
   366  0009C2  EFF4  F004         	goto	l1233
   367  0009C6                     u540:
   368  0009C6                     
   369                           ;maincode.c: 108:             m24c01_write();
   370  0009C6  EC18  F004         	call	_m24c01_write	;wreg free
   371  0009CA                     
   372                           ;maincode.c: 109:             POS_CURSOR(2,0);
   373  0009CA  0E00               	movlw	0
   374  0009CC  6E18               	movwf	POS_CURSOR@columna^0,c
   375  0009CE  0E02               	movlw	2
   376  0009D0  EC43  F006         	call	_POS_CURSOR
   377  0009D4                     
   378                           ;maincode.c: 110:             ESCRIBE_MENSAJE("Writing",7);
   379  0009D4  0E27               	movlw	low STR_2
   380  0009D6  6E18               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   381  0009D8  0E08               	movlw	high STR_2
   382  0009DA  6E19               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   383  0009DC  0E07               	movlw	7
   384  0009DE  6E1A               	movwf	ESCRIBE_MENSAJE@tam^0,c
   385  0009E0  EC24  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   386  0009E4                     
   387                           ;maincode.c: 111:             button1_stat = 1;
   388  0009E4  0E01               	movlw	1
   389  0009E6  6E21               	movwf	_button1_stat^0,c
   390  0009E8                     l1233:
   391                           
   392                           ;maincode.c: 113:         if(PORTBbits.RB6 ==0 && button1_stat ==1){
   393  0009E8  BC81               	btfsc	129,6,c	;volatile
   394  0009EA  EFF9  F004         	goto	u551
   395  0009EE  EFFB  F004         	goto	u550
   396  0009F2                     u551:
   397  0009F2  EF12  F005         	goto	l1243
   398  0009F6                     u550:
   399  0009F6  0421               	decf	_button1_stat^0,w,c
   400  0009F8  A4D8               	btfss	status,2,c
   401  0009FA  EF01  F005         	goto	u561
   402  0009FE  EF03  F005         	goto	u560
   403  000A02                     u561:
   404  000A02  EF12  F005         	goto	l1243
   405  000A06                     u560:
   406  000A06                     
   407                           ;maincode.c: 114:             button1_stat = 0;
   408  000A06  0E00               	movlw	0
   409  000A08  6E21               	movwf	_button1_stat^0,c
   410  000A0A                     
   411                           ;maincode.c: 115:             POS_CURSOR(2,0);
   412  000A0A  0E00               	movlw	0
   413  000A0C  6E18               	movwf	POS_CURSOR@columna^0,c
   414  000A0E  0E02               	movlw	2
   415  000A10  EC43  F006         	call	_POS_CURSOR
   416  000A14                     
   417                           ;maincode.c: 116:             ESCRIBE_MENSAJE("       ",7);
   418  000A14  0E0E               	movlw	low (STR_4+13)
   419  000A16  6E18               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   420  000A18  0E08               	movlw	high (STR_4+13)
   421  000A1A  6E19               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   422  000A1C  0E07               	movlw	7
   423  000A1E  6E1A               	movwf	ESCRIBE_MENSAJE@tam^0,c
   424  000A20  EC24  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   425  000A24                     l1243:
   426                           
   427                           ;maincode.c: 118:         if(PORTBbits.RB7 == 1 && button2_stat == 0){
   428  000A24  AE81               	btfss	129,7,c	;volatile
   429  000A26  EF17  F005         	goto	u571
   430  000A2A  EF19  F005         	goto	u570
   431  000A2E                     u571:
   432  000A2E  EF3B  F005         	goto	l1263
   433  000A32                     u570:
   434  000A32  5020               	movf	_button2_stat^0,w,c
   435  000A34  A4D8               	btfss	status,2,c
   436  000A36  EF1F  F005         	goto	u581
   437  000A3A  EF21  F005         	goto	u580
   438  000A3E                     u581:
   439  000A3E  EF3B  F005         	goto	l1263
   440  000A42                     u580:
   441  000A42                     
   442                           ;maincode.c: 120:             POS_CURSOR(2,0);
   443  000A42  0E00               	movlw	0
   444  000A44  6E18               	movwf	POS_CURSOR@columna^0,c
   445  000A46  0E02               	movlw	2
   446  000A48  EC43  F006         	call	_POS_CURSOR
   447  000A4C                     
   448                           ;maincode.c: 121:             for(unsigned char y=0;y<20;y++){
   449  000A4C  0E00               	movlw	0
   450  000A4E  6E1E               	movwf	main@y^0,c
   451  000A50                     l1255:
   452                           
   453                           ;maincode.c: 122:                 dato = m24c01_read(50+y);
   454  000A50  501E               	movf	main@y^0,w,c
   455  000A52  0F32               	addlw	50
   456  000A54  EC5D  F005         	call	_m24c01_read
   457  000A58  6E1F               	movwf	_dato^0,c
   458                           
   459                           ;maincode.c: 123:                 ENVIA_CHAR(dato);
   460  000A5A  501F               	movf	_dato^0,w,c
   461  000A5C  EC94  F006         	call	_ENVIA_CHAR
   462  000A60                     
   463                           ;maincode.c: 124:             }
   464  000A60  2A1E               	incf	main@y^0,f,c
   465  000A62  0E13               	movlw	19
   466  000A64  641E               	cpfsgt	main@y^0,c
   467  000A66  EF37  F005         	goto	u591
   468  000A6A  EF39  F005         	goto	u590
   469  000A6E                     u591:
   470  000A6E  EF28  F005         	goto	l1255
   471  000A72                     u590:
   472  000A72                     
   473                           ;maincode.c: 125:             button2_stat = 1;
   474  000A72  0E01               	movlw	1
   475  000A74  6E20               	movwf	_button2_stat^0,c
   476  000A76                     l1263:
   477                           
   478                           ;maincode.c: 127:         if(PORTBbits.RB7 ==0 && button2_stat ==1){
   479  000A76  BE81               	btfsc	129,7,c	;volatile
   480  000A78  EF40  F005         	goto	u601
   481  000A7C  EF42  F005         	goto	u600
   482  000A80                     u601:
   483  000A80  EFD4  F004         	goto	l1221
   484  000A84                     u600:
   485  000A84  0420               	decf	_button2_stat^0,w,c
   486  000A86  A4D8               	btfss	status,2,c
   487  000A88  EF48  F005         	goto	u611
   488  000A8C  EF4A  F005         	goto	u610
   489  000A90                     u611:
   490  000A90  EFD4  F004         	goto	l1221
   491  000A94                     u610:
   492  000A94                     
   493                           ;maincode.c: 128:             button2_stat = 0;
   494  000A94  0E00               	movlw	0
   495  000A96  6E20               	movwf	_button2_stat^0,c
   496  000A98                     
   497                           ;maincode.c: 129:             POS_CURSOR(2,0);
   498  000A98  0E00               	movlw	0
   499  000A9A  6E18               	movwf	POS_CURSOR@columna^0,c
   500  000A9C  0E02               	movlw	2
   501  000A9E  EC43  F006         	call	_POS_CURSOR
   502  000AA2                     
   503                           ;maincode.c: 130:             ESCRIBE_MENSAJE("                    ",20);
   504  000AA2  0E01               	movlw	low STR_4
   505  000AA4  6E18               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   506  000AA6  0E08               	movlw	high STR_4
   507  000AA8  6E19               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   508  000AAA  0E14               	movlw	20
   509  000AAC  6E1A               	movwf	ESCRIBE_MENSAJE@tam^0,c
   510  000AAE  EC24  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   511  000AB2  EFD4  F004         	goto	l1221
   512  000AB6  EF00  F000         	goto	start
   513  000ABA                     __end_of_main:
   514                           	callstack 0
   515                           
   516 ;; *************** function _mssp_config *****************
   517 ;; Defined at:
   518 ;;		line 30 in file "maincode.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   532 ;;      Params:         0       0       0       0       0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0       0       0       0       0
   534 ;;      Temps:          0       0       0       0       0       0       0       0       0
   535 ;;      Totals:         0       0       0       0       0       0       0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text1
   546  000DE4                     __ptext1:
   547                           	callstack 0
   548  000DE4                     _mssp_config:
   549                           	callstack 30
   550  000DE4                     
   551                           ;maincode.c: 31:     SSPCON1bits.SSPEN = 1;
   552  000DE4  8AC6               	bsf	198,5,c	;volatile
   553                           
   554                           ;maincode.c: 32:     SSPCON1bits.SSPM3 = 1;
   555  000DE6  86C6               	bsf	198,3,c	;volatile
   556                           
   557                           ;maincode.c: 33:     SSPCON1bits.SSPM2 = 0;
   558  000DE8  94C6               	bcf	198,2,c	;volatile
   559                           
   560                           ;maincode.c: 34:     SSPCON1bits.SSPM1 = 0;
   561  000DEA  92C6               	bcf	198,1,c	;volatile
   562                           
   563                           ;maincode.c: 35:     SSPCON1bits.SSPM0 = 0;
   564  000DEC  90C6               	bcf	198,0,c	;volatile
   565  000DEE                     
   566                           ;maincode.c: 36:     SSPADD = 119;
   567  000DEE  0E77               	movlw	119
   568  000DF0  6EC8               	movwf	200,c	;volatile
   569  000DF2  0012               	return		;funcret
   570  000DF4                     __end_of_mssp_config:
   571                           	callstack 0
   572                           
   573 ;; *************** function _m24c01_write *****************
   574 ;; Defined at:
   575 ;;		line 39 in file "maincode.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  x               1    2[COMRAM] unsigned char 
   580 ;;  x               1    1[COMRAM] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   590 ;;      Params:         0       0       0       0       0       0       0       0       0
   591 ;;      Locals:         2       0       0       0       0       0       0       0       0
   592 ;;      Temps:          1       0       0       0       0       0       0       0       0
   593 ;;      Totals:         3       0       0       0       0       0       0       0       0
   594 ;;Total ram usage:        3 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text2
   604  000830                     __ptext2:
   605                           	callstack 0
   606  000830                     _m24c01_write:
   607                           	callstack 30
   608  000830                     
   609                           ;maincode.c: 40:     SSPCON2bits.SEN = 1;
   610  000830  80C5               	bsf	197,0,c	;volatile
   611  000832                     l121:
   612  000832  B0C5               	btfsc	197,0,c	;volatile
   613  000834  EF1E  F004         	goto	u71
   614  000838  EF20  F004         	goto	u70
   615  00083C                     u71:
   616  00083C  EF19  F004         	goto	l121
   617  000840                     u70:
   618  000840                     
   619                           ;maincode.c: 42:     SSPBUF = 0xA0;
   620  000840  0EA0               	movlw	160
   621  000842  6EC9               	movwf	201,c	;volatile
   622  000844                     l124:
   623  000844  B0C7               	btfsc	199,0,c	;volatile
   624  000846  EF27  F004         	goto	u81
   625  00084A  EF29  F004         	goto	u80
   626  00084E                     u81:
   627  00084E  EF22  F004         	goto	l124
   628  000852                     u80:
   629  000852                     l127:
   630  000852  B4C7               	btfsc	199,2,c	;volatile
   631  000854  EF2E  F004         	goto	u91
   632  000858  EF30  F004         	goto	u90
   633  00085C                     u91:
   634  00085C  EF29  F004         	goto	l127
   635  000860                     u90:
   636  000860                     
   637                           ;maincode.c: 45:     SSPBUF = 50;
   638  000860  0E32               	movlw	50
   639  000862  6EC9               	movwf	201,c	;volatile
   640  000864                     l130:
   641  000864  B0C7               	btfsc	199,0,c	;volatile
   642  000866  EF37  F004         	goto	u101
   643  00086A  EF39  F004         	goto	u100
   644  00086E                     u101:
   645  00086E  EF32  F004         	goto	l130
   646  000872                     u100:
   647  000872                     l133:
   648  000872  B4C7               	btfsc	199,2,c	;volatile
   649  000874  EF3E  F004         	goto	u111
   650  000878  EF40  F004         	goto	u110
   651  00087C                     u111:
   652  00087C  EF39  F004         	goto	l133
   653  000880                     u110:
   654  000880                     
   655                           ;maincode.c: 48:     for (unsigned char x=0;x<14;x++){
   656  000880  0E00               	movlw	0
   657  000882  6E16               	movwf	m24c01_write@x^0,c
   658  000884                     l1069:
   659                           
   660                           ;maincode.c: 49:         SSPBUF = frase[x];
   661  000884  0E01               	movlw	low _frase
   662  000886  2416               	addwf	m24c01_write@x^0,w,c
   663  000888  6ED9               	movwf	fsr2l,c
   664  00088A  6ADA               	clrf	fsr2h,c
   665  00088C  0E00               	movlw	high _frase
   666  00088E  22DA               	addwfc	fsr2h,f,c
   667  000890  50DF               	movf	indf2,w,c
   668  000892  6EC9               	movwf	201,c	;volatile
   669  000894                     l138:
   670  000894  B0C7               	btfsc	199,0,c	;volatile
   671  000896  EF4F  F004         	goto	u121
   672  00089A  EF51  F004         	goto	u120
   673  00089E                     u121:
   674  00089E  EF4A  F004         	goto	l138
   675  0008A2                     u120:
   676  0008A2                     l141:
   677  0008A2  B4C7               	btfsc	199,2,c	;volatile
   678  0008A4  EF56  F004         	goto	u131
   679  0008A8  EF58  F004         	goto	u130
   680  0008AC                     u131:
   681  0008AC  EF51  F004         	goto	l141
   682  0008B0                     u130:
   683  0008B0                     
   684                           ;maincode.c: 52:     }
   685  0008B0  2A16               	incf	m24c01_write@x^0,f,c
   686  0008B2  0E0D               	movlw	13
   687  0008B4  6416               	cpfsgt	m24c01_write@x^0,c
   688  0008B6  EF5F  F004         	goto	u141
   689  0008BA  EF61  F004         	goto	u140
   690  0008BE                     u141:
   691  0008BE  EF42  F004         	goto	l1069
   692  0008C2                     u140:
   693  0008C2                     
   694                           ;maincode.c: 53:     SSPCON2bits.PEN = 1;
   695  0008C2  84C5               	bsf	197,2,c	;volatile
   696  0008C4                     l144:
   697  0008C4  B4C5               	btfsc	197,2,c	;volatile
   698  0008C6  EF67  F004         	goto	u151
   699  0008CA  EF69  F004         	goto	u150
   700  0008CE                     u151:
   701  0008CE  EF62  F004         	goto	l144
   702  0008D2                     u150:
   703  0008D2                     
   704                           ;maincode.c: 55:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   705  0008D2  0EEA               	movlw	234
   706  0008D4  6E15               	movwf	??_m24c01_write^0,c
   707  0008D6  0EC3               	movlw	195
   708  0008D8                     u627:
   709  0008D8  2EE8               	decfsz	wreg,f,c
   710  0008DA  D7FE               	bra	u627
   711  0008DC  2E15               	decfsz	??_m24c01_write^0,f,c
   712  0008DE  D7FC               	bra	u627
   713  0008E0  F000               	nop	
   714  0008E2                     
   715                           ;maincode.c: 57:     SSPCON2bits.SEN = 1;
   716  0008E2  80C5               	bsf	197,0,c	;volatile
   717  0008E4                     l147:
   718  0008E4  B0C5               	btfsc	197,0,c	;volatile
   719  0008E6  EF77  F004         	goto	u161
   720  0008EA  EF79  F004         	goto	u160
   721  0008EE                     u161:
   722  0008EE  EF72  F004         	goto	l147
   723  0008F2                     u160:
   724  0008F2                     
   725                           ;maincode.c: 59:     SSPBUF = 0xA0;
   726  0008F2  0EA0               	movlw	160
   727  0008F4  6EC9               	movwf	201,c	;volatile
   728  0008F6                     l150:
   729  0008F6  B0C7               	btfsc	199,0,c	;volatile
   730  0008F8  EF80  F004         	goto	u171
   731  0008FC  EF82  F004         	goto	u170
   732  000900                     u171:
   733  000900  EF7B  F004         	goto	l150
   734  000904                     u170:
   735  000904                     l153:
   736  000904  B4C7               	btfsc	199,2,c	;volatile
   737  000906  EF87  F004         	goto	u181
   738  00090A  EF89  F004         	goto	u180
   739  00090E                     u181:
   740  00090E  EF82  F004         	goto	l153
   741  000912                     u180:
   742  000912                     
   743                           ;maincode.c: 62:     SSPBUF = 64;
   744  000912  0E40               	movlw	64
   745  000914  6EC9               	movwf	201,c	;volatile
   746  000916                     l156:
   747  000916  B0C7               	btfsc	199,0,c	;volatile
   748  000918  EF90  F004         	goto	u191
   749  00091C  EF92  F004         	goto	u190
   750  000920                     u191:
   751  000920  EF8B  F004         	goto	l156
   752  000924                     u190:
   753  000924                     l159:
   754  000924  B4C7               	btfsc	199,2,c	;volatile
   755  000926  EF97  F004         	goto	u201
   756  00092A  EF99  F004         	goto	u200
   757  00092E                     u201:
   758  00092E  EF92  F004         	goto	l159
   759  000932                     u200:
   760  000932                     
   761                           ;maincode.c: 65:     for (unsigned char x=14;x<20;x++){
   762  000932  0E0E               	movlw	14
   763  000934  6E17               	movwf	m24c01_write@x_412^0,c
   764  000936                     l1089:
   765                           
   766                           ;maincode.c: 66:         SSPBUF = frase[x];
   767  000936  0E01               	movlw	low _frase
   768  000938  2417               	addwf	m24c01_write@x_412^0,w,c
   769  00093A  6ED9               	movwf	fsr2l,c
   770  00093C  6ADA               	clrf	fsr2h,c
   771  00093E  0E00               	movlw	high _frase
   772  000940  22DA               	addwfc	fsr2h,f,c
   773  000942  50DF               	movf	indf2,w,c
   774  000944  6EC9               	movwf	201,c	;volatile
   775  000946                     l164:
   776  000946  B0C7               	btfsc	199,0,c	;volatile
   777  000948  EFA8  F004         	goto	u211
   778  00094C  EFAA  F004         	goto	u210
   779  000950                     u211:
   780  000950  EFA3  F004         	goto	l164
   781  000954                     u210:
   782  000954                     l167:
   783  000954  B4C7               	btfsc	199,2,c	;volatile
   784  000956  EFAF  F004         	goto	u221
   785  00095A  EFB1  F004         	goto	u220
   786  00095E                     u221:
   787  00095E  EFAA  F004         	goto	l167
   788  000962                     u220:
   789  000962                     
   790                           ;maincode.c: 69:     }
   791  000962  2A17               	incf	m24c01_write@x_412^0,f,c
   792  000964  0E13               	movlw	19
   793  000966  6417               	cpfsgt	m24c01_write@x_412^0,c
   794  000968  EFB8  F004         	goto	u231
   795  00096C  EFBA  F004         	goto	u230
   796  000970                     u231:
   797  000970  EF9B  F004         	goto	l1089
   798  000974                     u230:
   799  000974                     
   800                           ;maincode.c: 70:     SSPCON2bits.PEN = 1;
   801  000974  84C5               	bsf	197,2,c	;volatile
   802  000976                     l170:
   803  000976  B4C5               	btfsc	197,2,c	;volatile
   804  000978  EFC0  F004         	goto	u241
   805  00097C  EFC2  F004         	goto	u240
   806  000980                     u241:
   807  000980  EFBB  F004         	goto	l170
   808  000984                     u240:
   809  000984  0012               	return		;funcret
   810  000986                     __end_of_m24c01_write:
   811                           	callstack 0
   812                           
   813 ;; *************** function _m24c01_read *****************
   814 ;; Defined at:
   815 ;;		line 74 in file "maincode.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  direccion       1    wreg     unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  direccion       1    0[COMRAM] unsigned char 
   820 ;;  leido           1    1[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      unsigned char 
   823 ;; Registers used:
   824 ;;		wreg, status,2
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         2       0       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844  000ABA                     __ptext3:
   845                           	callstack 0
   846  000ABA                     _m24c01_read:
   847                           	callstack 30
   848                           
   849                           ;incstack = 0
   850                           ;m24c01_read@direccion stored from wreg
   851  000ABA  6E15               	movwf	m24c01_read@direccion^0,c
   852  000ABC                     
   853                           ;maincode.c: 76:     SSPCON2bits.SEN = 1;
   854  000ABC  80C5               	bsf	197,0,c	;volatile
   855  000ABE                     l176:
   856  000ABE  B0C5               	btfsc	197,0,c	;volatile
   857  000AC0  EF64  F005         	goto	u251
   858  000AC4  EF66  F005         	goto	u250
   859  000AC8                     u251:
   860  000AC8  EF5F  F005         	goto	l176
   861  000ACC                     u250:
   862  000ACC                     
   863                           ;maincode.c: 78:     SSPBUF = 0xA0;
   864  000ACC  0EA0               	movlw	160
   865  000ACE  6EC9               	movwf	201,c	;volatile
   866  000AD0                     l179:
   867  000AD0  B0C7               	btfsc	199,0,c	;volatile
   868  000AD2  EF6D  F005         	goto	u261
   869  000AD6  EF6F  F005         	goto	u260
   870  000ADA                     u261:
   871  000ADA  EF68  F005         	goto	l179
   872  000ADE                     u260:
   873  000ADE                     l182:
   874  000ADE  B4C7               	btfsc	199,2,c	;volatile
   875  000AE0  EF74  F005         	goto	u271
   876  000AE4  EF76  F005         	goto	u270
   877  000AE8                     u271:
   878  000AE8  EF6F  F005         	goto	l182
   879  000AEC                     u270:
   880  000AEC                     
   881                           ;maincode.c: 81:     SSPBUF = direccion;
   882  000AEC  C015  FFC9         	movff	m24c01_read@direccion,4041	;volatile
   883  000AF0                     l185:
   884  000AF0  B0C7               	btfsc	199,0,c	;volatile
   885  000AF2  EF7D  F005         	goto	u281
   886  000AF6  EF7F  F005         	goto	u280
   887  000AFA                     u281:
   888  000AFA  EF78  F005         	goto	l185
   889  000AFE                     u280:
   890  000AFE                     l188:
   891  000AFE  B4C7               	btfsc	199,2,c	;volatile
   892  000B00  EF84  F005         	goto	u291
   893  000B04  EF86  F005         	goto	u290
   894  000B08                     u291:
   895  000B08  EF7F  F005         	goto	l188
   896  000B0C                     u290:
   897  000B0C                     
   898                           ;maincode.c: 84:     SSPCON2bits.RSEN = 1;
   899  000B0C  82C5               	bsf	197,1,c	;volatile
   900  000B0E                     l191:
   901  000B0E  B2C5               	btfsc	197,1,c	;volatile
   902  000B10  EF8C  F005         	goto	u301
   903  000B14  EF8E  F005         	goto	u300
   904  000B18                     u301:
   905  000B18  EF87  F005         	goto	l191
   906  000B1C                     u300:
   907  000B1C                     
   908                           ;maincode.c: 86:     SSPBUF = 0xA1;
   909  000B1C  0EA1               	movlw	161
   910  000B1E  6EC9               	movwf	201,c	;volatile
   911  000B20                     l194:
   912  000B20  B0C7               	btfsc	199,0,c	;volatile
   913  000B22  EF95  F005         	goto	u311
   914  000B26  EF97  F005         	goto	u310
   915  000B2A                     u311:
   916  000B2A  EF90  F005         	goto	l194
   917  000B2E                     u310:
   918  000B2E                     l197:
   919  000B2E  B4C7               	btfsc	199,2,c	;volatile
   920  000B30  EF9C  F005         	goto	u321
   921  000B34  EF9E  F005         	goto	u320
   922  000B38                     u321:
   923  000B38  EF97  F005         	goto	l197
   924  000B3C                     u320:
   925  000B3C                     
   926                           ;maincode.c: 89:     SSPCON2bits.RCEN = 1;
   927  000B3C  86C5               	bsf	197,3,c	;volatile
   928  000B3E                     l200:
   929  000B3E  A0C7               	btfss	199,0,c	;volatile
   930  000B40  EFA4  F005         	goto	u331
   931  000B44  EFA6  F005         	goto	u330
   932  000B48                     u331:
   933  000B48  EF9F  F005         	goto	l200
   934  000B4C                     u330:
   935  000B4C                     
   936                           ;maincode.c: 91:     leido = SSPBUF;
   937  000B4C  CFC9 F016          	movff	4041,m24c01_read@leido	;volatile
   938                           
   939                           ;maincode.c: 92:     SSPCON2bits.ACKDT = 1;
   940  000B50  8AC5               	bsf	197,5,c	;volatile
   941                           
   942                           ;maincode.c: 93:     SSPCON2bits.ACKEN = 1;
   943  000B52  88C5               	bsf	197,4,c	;volatile
   944  000B54                     l203:
   945  000B54  B8C5               	btfsc	197,4,c	;volatile
   946  000B56  EFAF  F005         	goto	u341
   947  000B5A  EFB1  F005         	goto	u340
   948  000B5E                     u341:
   949  000B5E  EFAA  F005         	goto	l203
   950  000B62                     u340:
   951  000B62                     
   952                           ;maincode.c: 95:     SSPCON2bits.PEN = 1;
   953  000B62  84C5               	bsf	197,2,c	;volatile
   954  000B64                     l206:
   955  000B64  B4C5               	btfsc	197,2,c	;volatile
   956  000B66  EFB7  F005         	goto	u351
   957  000B6A  EFB9  F005         	goto	u350
   958  000B6E                     u351:
   959  000B6E  EFB2  F005         	goto	l206
   960  000B72                     u350:
   961  000B72                     
   962                           ;maincode.c: 97:     return(leido);
   963  000B72  5016               	movf	m24c01_read@leido^0,w,c
   964  000B74  0012               	return		;funcret
   965  000B76                     __end_of_m24c01_read:
   966                           	callstack 0
   967                           
   968 ;; *************** function _lcd_init *****************
   969 ;; Defined at:
   970 ;;		line 21 in file "maincode.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         0       0       0       0       0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0
   986 ;;      Temps:          1       0       0       0       0       0       0       0       0
   987 ;;      Totals:         1       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		_BORRAR_LCD
   993 ;;		_CURSOR_HOME
   994 ;;		_CURSOR_ONOFF
   995 ;;		_LCD_CONFIG
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text4
  1002  000D8C                     __ptext4:
  1003                           	callstack 0
  1004  000D8C                     _lcd_init:
  1005                           	callstack 27
  1006  000D8C                     
  1007                           ;maincode.c: 22:     TRISD = 0x00;
  1008  000D8C  0E00               	movlw	0
  1009  000D8E  6E95               	movwf	149,c	;volatile
  1010  000D90                     
  1011                           ;maincode.c: 23:     LCD_CONFIG();
  1012  000D90  ECF4  F005         	call	_LCD_CONFIG	;wreg free
  1013  000D94                     
  1014                           ;maincode.c: 24:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
  1015  000D94  0EEA               	movlw	234
  1016  000D96  6E19               	movwf	??_lcd_init^0,c
  1017  000D98  0EC3               	movlw	195
  1018  000D9A                     u637:
  1019  000D9A  2EE8               	decfsz	wreg,f,c
  1020  000D9C  D7FE               	bra	u637
  1021  000D9E  2E19               	decfsz	??_lcd_init^0,f,c
  1022  000DA0  D7FC               	bra	u637
  1023  000DA2  F000               	nop	
  1024  000DA4                     
  1025                           ;maincode.c: 25:     BORRAR_LCD();
  1026  000DA4  ECFE  F006         	call	_BORRAR_LCD	;wreg free
  1027  000DA8                     
  1028                           ;maincode.c: 26:     CURSOR_HOME();
  1029  000DA8  ECFA  F006         	call	_CURSOR_HOME	;wreg free
  1030  000DAC                     
  1031                           ;maincode.c: 27:     CURSOR_ONOFF(1);
  1032  000DAC  0E01               	movlw	1
  1033  000DAE  ECAE  F006         	call	_CURSOR_ONOFF
  1034  000DB2  0012               	return		;funcret
  1035  000DB4                     __end_of_lcd_init:
  1036                           	callstack 0
  1037                           
  1038 ;; *************** function _LCD_CONFIG *****************
  1039 ;; Defined at:
  1040 ;;		line 72 in file "LCD.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1057 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:        1 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    2
  1061 ;; This function calls:
  1062 ;;		_ENVIA_LCD_CMD
  1063 ;;		_ENVIA_NIBBLE
  1064 ;; This function is called by:
  1065 ;;		_lcd_init
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text5
  1070  000BE8                     __ptext5:
  1071                           	callstack 0
  1072  000BE8                     _LCD_CONFIG:
  1073                           	callstack 27
  1074  000BE8                     
  1075                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1076  000BE8  908C               	bcf	140,0,c	;volatile
  1077                           
  1078                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1079  000BEA  928C               	bcf	140,1,c	;volatile
  1080  000BEC                     
  1081                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1082  000BEC  0E30               	movlw	48
  1083  000BEE  ECDA  F006         	call	_ENVIA_NIBBLE
  1084  000BF2                     
  1085                           ;LCD.c: 77:         _delay(24000);
  1086  000BF2  0E20               	movlw	32
  1087  000BF4  6E18               	movwf	??_LCD_CONFIG^0,c
  1088  000BF6  0E2A               	movlw	42
  1089  000BF8                     u647:
  1090  000BF8  2EE8               	decfsz	wreg,f,c
  1091  000BFA  D7FE               	bra	u647
  1092  000BFC  2E18               	decfsz	??_LCD_CONFIG^0,f,c
  1093  000BFE  D7FC               	bra	u647
  1094  000C00                     
  1095                           ;LCD.c: 78:         _delay(24000);
  1096  000C00  0E20               	movlw	32
  1097  000C02  6E18               	movwf	??_LCD_CONFIG^0,c
  1098  000C04  0E2A               	movlw	42
  1099  000C06                     u657:
  1100  000C06  2EE8               	decfsz	wreg,f,c
  1101  000C08  D7FE               	bra	u657
  1102  000C0A  2E18               	decfsz	??_LCD_CONFIG^0,f,c
  1103  000C0C  D7FC               	bra	u657
  1104                           
  1105                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1106  000C0E  0E30               	movlw	48
  1107  000C10  ECDA  F006         	call	_ENVIA_NIBBLE
  1108  000C14                     
  1109                           ;LCD.c: 83:  _delay(1200);
  1110  000C14  0EF0               	movlw	240
  1111  000C16                     u667:
  1112  000C16  D000               	nop2	
  1113  000C18  2EE8               	decfsz	wreg,f,c
  1114  000C1A  D7FD               	bra	u667
  1115  000C1C                     
  1116                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1117  000C1C  0E30               	movlw	48
  1118  000C1E  ECDA  F006         	call	_ENVIA_NIBBLE
  1119  000C22                     
  1120                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1121  000C22  0E20               	movlw	32
  1122  000C24  ECDA  F006         	call	_ENVIA_NIBBLE
  1123  000C28                     
  1124                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1125  000C28  0E01               	movlw	1
  1126  000C2A  EC7A  F006         	call	_ENVIA_LCD_CMD
  1127  000C2E                     
  1128                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1129  000C2E  0E28               	movlw	40
  1130  000C30  EC7A  F006         	call	_ENVIA_LCD_CMD
  1131  000C34                     
  1132                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1133  000C34  0E0F               	movlw	15
  1134  000C36  EC7A  F006         	call	_ENVIA_LCD_CMD
  1135  000C3A                     
  1136                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1137  000C3A  0E06               	movlw	6
  1138  000C3C  EC7A  F006         	call	_ENVIA_LCD_CMD
  1139  000C40                     
  1140                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1141  000C40  0E01               	movlw	1
  1142  000C42  EC7A  F006         	call	_ENVIA_LCD_CMD
  1143  000C46  0012               	return		;funcret
  1144  000C48                     __end_of_LCD_CONFIG:
  1145                           	callstack 0
  1146                           
  1147 ;; *************** function _CURSOR_ONOFF *****************
  1148 ;; Defined at:
  1149 ;;		line 35 in file "LCD.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  estado          1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  estado          1    3[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1163 ;;      Params:         0       0       0       0       0       0       0       0       0
  1164 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1166 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1167 ;;Total ram usage:        1 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		_ENVIA_LCD_CMD
  1172 ;; This function is called by:
  1173 ;;		_lcd_init
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text6
  1178  000D5C                     __ptext6:
  1179                           	callstack 0
  1180  000D5C                     _CURSOR_ONOFF:
  1181                           	callstack 27
  1182                           
  1183                           ;incstack = 0
  1184                           ;CURSOR_ONOFF@estado stored from wreg
  1185  000D5C  6E18               	movwf	CURSOR_ONOFF@estado^0,c
  1186  000D5E                     
  1187                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1188  000D5E  5018               	movf	CURSOR_ONOFF@estado^0,w,c
  1189  000D60  A4D8               	btfss	status,2,c
  1190  000D62  EFB5  F006         	goto	u21
  1191  000D66  EFB7  F006         	goto	u20
  1192  000D6A                     u21:
  1193  000D6A  EFBA  F006         	goto	l973
  1194  000D6E                     u20:
  1195  000D6E  0E0E               	movlw	14
  1196  000D70  EC7A  F006         	call	_ENVIA_LCD_CMD
  1197  000D74                     l973:
  1198                           
  1199                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1200  000D74  0418               	decf	CURSOR_ONOFF@estado^0,w,c
  1201  000D76  A4D8               	btfss	status,2,c
  1202  000D78  EFC0  F006         	goto	u31
  1203  000D7C  EFC2  F006         	goto	u30
  1204  000D80                     u31:
  1205  000D80  EFC5  F006         	goto	l42
  1206  000D84                     u30:
  1207  000D84  0E0C               	movlw	12
  1208  000D86  EC7A  F006         	call	_ENVIA_LCD_CMD
  1209  000D8A                     l42:
  1210  000D8A  0012               	return		;funcret
  1211  000D8C                     __end_of_CURSOR_ONOFF:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _CURSOR_HOME *****************
  1215 ;; Defined at:
  1216 ;;		line 30 in file "LCD.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1234 ;;Total ram usage:        0 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    2
  1237 ;; This function calls:
  1238 ;;		_ENVIA_LCD_CMD
  1239 ;; This function is called by:
  1240 ;;		_lcd_init
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text7
  1245  000DF4                     __ptext7:
  1246                           	callstack 0
  1247  000DF4                     _CURSOR_HOME:
  1248                           	callstack 27
  1249  000DF4                     
  1250                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1251  000DF4  0E02               	movlw	2
  1252  000DF6  EC7A  F006         	call	_ENVIA_LCD_CMD
  1253  000DFA  0012               	return		;funcret
  1254  000DFC                     __end_of_CURSOR_HOME:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _BORRAR_LCD *****************
  1258 ;; Defined at:
  1259 ;;		line 67 in file "LCD.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1273 ;;      Params:         0       0       0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    2
  1280 ;; This function calls:
  1281 ;;		_ENVIA_LCD_CMD
  1282 ;; This function is called by:
  1283 ;;		_lcd_init
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text8
  1288  000DFC                     __ptext8:
  1289                           	callstack 0
  1290  000DFC                     _BORRAR_LCD:
  1291                           	callstack 27
  1292  000DFC                     
  1293                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1294  000DFC  0E01               	movlw	1
  1295  000DFE  EC7A  F006         	call	_ENVIA_LCD_CMD
  1296  000E02  0012               	return		;funcret
  1297  000E04                     __end_of_BORRAR_LCD:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _POS_CURSOR *****************
  1301 ;; Defined at:
  1302 ;;		line 6 in file "LCD.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  fila            1    wreg     unsigned char 
  1305 ;;  columna         1    3[COMRAM] unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  fila            1    4[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1317 ;;      Params:         1       0       0       0       0       0       0       0       0
  1318 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1320 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1321 ;;Total ram usage:        2 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    2
  1324 ;; This function calls:
  1325 ;;		_ENVIA_LCD_CMD
  1326 ;; This function is called by:
  1327 ;;		_main
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text9
  1332  000C86                     __ptext9:
  1333                           	callstack 0
  1334  000C86                     _POS_CURSOR:
  1335                           	callstack 28
  1336                           
  1337                           ;incstack = 0
  1338                           ;POS_CURSOR@fila stored from wreg
  1339  000C86  6E19               	movwf	POS_CURSOR@fila^0,c
  1340  000C88                     
  1341                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1342  000C88  0419               	decf	POS_CURSOR@fila^0,w,c
  1343  000C8A  A4D8               	btfss	status,2,c
  1344  000C8C  EF4A  F006         	goto	u501
  1345  000C90  EF4C  F006         	goto	u500
  1346  000C94                     u501:
  1347  000C94  EF52  F006         	goto	l1201
  1348  000C98                     u500:
  1349  000C98                     
  1350                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1351  000C98  5018               	movf	POS_CURSOR@columna^0,w,c
  1352  000C9A  0F80               	addlw	128
  1353  000C9C  EC7A  F006         	call	_ENVIA_LCD_CMD
  1354                           
  1355                           ;LCD.c: 11:  }
  1356  000CA0  EF5F  F006         	goto	l24
  1357  000CA4                     l1201:
  1358  000CA4  0E02               	movlw	2
  1359  000CA6  1819               	xorwf	POS_CURSOR@fila^0,w,c
  1360  000CA8  A4D8               	btfss	status,2,c
  1361  000CAA  EF59  F006         	goto	u511
  1362  000CAE  EF5B  F006         	goto	u510
  1363  000CB2                     u511:
  1364  000CB2  EF5F  F006         	goto	l24
  1365  000CB6                     u510:
  1366  000CB6                     
  1367                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1368  000CB6  5018               	movf	POS_CURSOR@columna^0,w,c
  1369  000CB8  0FC0               	addlw	192
  1370  000CBA  EC7A  F006         	call	_ENVIA_LCD_CMD
  1371  000CBE                     l24:
  1372  000CBE  0012               	return		;funcret
  1373  000CC0                     __end_of_POS_CURSOR:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _ENVIA_LCD_CMD *****************
  1377 ;; Defined at:
  1378 ;;		line 104 in file "LCD.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  dato            1    wreg     unsigned char 
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  dato            1    1[COMRAM] unsigned char 
  1383 ;;  aux             1    2[COMRAM] unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1396 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    1
  1400 ;; This function calls:
  1401 ;;		_ENVIA_NIBBLE
  1402 ;;		_LEER_LCD
  1403 ;; This function is called by:
  1404 ;;		_POS_CURSOR
  1405 ;;		_CURSOR_HOME
  1406 ;;		_CURSOR_ONOFF
  1407 ;;		_BORRAR_LCD
  1408 ;;		_LCD_CONFIG
  1409 ;;		_BLINK_CURSOR
  1410 ;;		_DISPLAY_ONOFF
  1411 ;;		_GENERACARACTER
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text10
  1416  000CF4                     __ptext10:
  1417                           	callstack 0
  1418  000CF4                     _ENVIA_LCD_CMD:
  1419                           	callstack 27
  1420                           
  1421                           ;incstack = 0
  1422                           ;ENVIA_LCD_CMD@dato stored from wreg
  1423  000CF4  6E16               	movwf	ENVIA_LCD_CMD@dato^0,c
  1424  000CF6                     
  1425                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1426  000CF6  908C               	bcf	140,0,c	;volatile
  1427  000CF8                     
  1428                           ;LCD.c: 108:  LEER_LCD();
  1429  000CF8  ECBB  F005         	call	_LEER_LCD	;wreg free
  1430  000CFC                     
  1431                           ;LCD.c: 109:  TRISD = 0b00000000;
  1432  000CFC  0E00               	movlw	0
  1433  000CFE  6E95               	movwf	149,c	;volatile
  1434  000D00                     
  1435                           ;LCD.c: 111:         _delay(1200);
  1436  000D00  0EF0               	movlw	240
  1437  000D02                     u677:
  1438  000D02  D000               	nop2	
  1439  000D04  2EE8               	decfsz	wreg,f,c
  1440  000D06  D7FD               	bra	u677
  1441  000D08                     
  1442                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1443  000D08  928C               	bcf	140,1,c	;volatile
  1444  000D0A                     
  1445                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1446  000D0A  948C               	bcf	140,2,c	;volatile
  1447  000D0C                     
  1448                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1449  000D0C  908C               	bcf	140,0,c	;volatile
  1450  000D0E                     
  1451                           ;LCD.c: 115:  aux = dato & 0xF0;
  1452  000D0E  5016               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1453  000D10  0BF0               	andlw	240
  1454  000D12  6E17               	movwf	ENVIA_LCD_CMD@aux^0,c
  1455  000D14                     
  1456                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1457  000D14  5017               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1458  000D16  ECDA  F006         	call	_ENVIA_NIBBLE
  1459  000D1A                     
  1460                           ;LCD.c: 117:  aux = dato<<4;
  1461  000D1A  3816               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1462  000D1C  0BF0               	andlw	240
  1463  000D1E  6E17               	movwf	ENVIA_LCD_CMD@aux^0,c
  1464  000D20                     
  1465                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1466  000D20  5017               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1467  000D22  ECDA  F006         	call	_ENVIA_NIBBLE
  1468  000D26  0012               	return		;funcret
  1469  000D28                     __end_of_ENVIA_LCD_CMD:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _ESCRIBE_MENSAJE *****************
  1473 ;; Defined at:
  1474 ;;		line 41 in file "LCD.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1477 ;;		 -> STR_4(21), STR_3(8), STR_2(8), STR_1(17), 
  1478 ;;  tam             1    5[COMRAM] unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  i               1    8[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         3       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        6 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    2
  1497 ;; This function calls:
  1498 ;;		_ENVIA_CHAR
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text11
  1505  000C48                     __ptext11:
  1506                           	callstack 0
  1507  000C48                     _ESCRIBE_MENSAJE:
  1508                           	callstack 28
  1509  000C48                     
  1510                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1511  000C48  0E00               	movlw	0
  1512  000C4A  6E1D               	movwf	ESCRIBE_MENSAJE@i^0,c
  1513                           
  1514                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1515  000C4C  0E00               	movlw	0
  1516  000C4E  6E1D               	movwf	ESCRIBE_MENSAJE@i^0,c
  1517  000C50  EF39  F006         	goto	l1211
  1518  000C54                     l1207:
  1519                           
  1520                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1521  000C54  501D               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1522  000C56  2418               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1523  000C58  6E1B               	movwf	??_ESCRIBE_MENSAJE^0,c
  1524  000C5A  0E00               	movlw	0
  1525  000C5C  2019               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1526  000C5E  6E1C               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1527  000C60  C01B  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1528  000C64  C01C  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1529  000C68                     	if	0	;tblptru may be non-zero
  1530  000C68                     	endif
  1531  000C68                     	if	0	;tblptru may be non-zero
  1532  000C68                     	endif
  1533  000C68  0008               	tblrd		*
  1534  000C6A  50F5               	movf	tablat,w,c
  1535  000C6C  EC94  F006         	call	_ENVIA_CHAR
  1536  000C70                     
  1537                           ;LCD.c: 47:  }
  1538  000C70  2A1D               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1539  000C72                     l1211:
  1540  000C72  501A               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1541  000C74  5C1D               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1542  000C76  A0D8               	btfss	status,0,c
  1543  000C78  EF40  F006         	goto	u521
  1544  000C7C  EF42  F006         	goto	u520
  1545  000C80                     u521:
  1546  000C80  EF2A  F006         	goto	l1207
  1547  000C84                     u520:
  1548  000C84  0012               	return		;funcret
  1549  000C86                     __end_of_ESCRIBE_MENSAJE:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _ENVIA_CHAR *****************
  1553 ;; Defined at:
  1554 ;;		line 50 in file "LCD.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  dato            1    wreg     unsigned char 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  dato            1    1[COMRAM] unsigned char 
  1559 ;;  aux             1    2[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1569 ;;      Params:         0       0       0       0       0       0       0       0       0
  1570 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1572 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    1
  1576 ;; This function calls:
  1577 ;;		_ENVIA_NIBBLE
  1578 ;;		_LEER_LCD
  1579 ;; This function is called by:
  1580 ;;		_ESCRIBE_MENSAJE
  1581 ;;		_main
  1582 ;;		_GENERACARACTER
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text12
  1587  000D28                     __ptext12:
  1588                           	callstack 0
  1589  000D28                     _ENVIA_CHAR:
  1590                           	callstack 28
  1591                           
  1592                           ;incstack = 0
  1593                           ;ENVIA_CHAR@dato stored from wreg
  1594  000D28  6E16               	movwf	ENVIA_CHAR@dato^0,c
  1595  000D2A                     
  1596                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1597  000D2A  808C               	bsf	140,0,c	;volatile
  1598  000D2C                     
  1599                           ;LCD.c: 54:  LEER_LCD();
  1600  000D2C  ECBB  F005         	call	_LEER_LCD	;wreg free
  1601  000D30                     
  1602                           ;LCD.c: 55:  TRISD = 0x00;
  1603  000D30  0E00               	movlw	0
  1604  000D32  6E95               	movwf	149,c	;volatile
  1605  000D34                     
  1606                           ;LCD.c: 56:         _delay(1200);
  1607  000D34  0EF0               	movlw	240
  1608  000D36                     u687:
  1609  000D36  D000               	nop2	
  1610  000D38  2EE8               	decfsz	wreg,f,c
  1611  000D3A  D7FD               	bra	u687
  1612  000D3C                     
  1613                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1614  000D3C  928C               	bcf	140,1,c	;volatile
  1615  000D3E                     
  1616                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1617  000D3E  948C               	bcf	140,2,c	;volatile
  1618  000D40                     
  1619                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1620  000D40  808C               	bsf	140,0,c	;volatile
  1621  000D42                     
  1622                           ;LCD.c: 61:  aux = dato & 0xF0;
  1623  000D42  5016               	movf	ENVIA_CHAR@dato^0,w,c
  1624  000D44  0BF0               	andlw	240
  1625  000D46  6E17               	movwf	ENVIA_CHAR@aux^0,c
  1626  000D48                     
  1627                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1628  000D48  5017               	movf	ENVIA_CHAR@aux^0,w,c
  1629  000D4A  ECDA  F006         	call	_ENVIA_NIBBLE
  1630  000D4E                     
  1631                           ;LCD.c: 63:  aux = dato << 4;
  1632  000D4E  3816               	swapf	ENVIA_CHAR@dato^0,w,c
  1633  000D50  0BF0               	andlw	240
  1634  000D52  6E17               	movwf	ENVIA_CHAR@aux^0,c
  1635  000D54                     
  1636                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1637  000D54  5017               	movf	ENVIA_CHAR@aux^0,w,c
  1638  000D56  ECDA  F006         	call	_ENVIA_NIBBLE
  1639  000D5A  0012               	return		;funcret
  1640  000D5C                     __end_of_ENVIA_CHAR:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _LEER_LCD *****************
  1644 ;; Defined at:
  1645 ;;		line 121 in file "LCD.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  aux             1    0[COMRAM] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0
  1660 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1662 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1663 ;;Total ram usage:        1 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_ENVIA_CHAR
  1669 ;;		_ENVIA_LCD_CMD
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           
  1673                           	psect	text13
  1674  000B76                     __ptext13:
  1675                           	callstack 0
  1676  000B76                     _LEER_LCD:
  1677                           	callstack 27
  1678  000B76                     
  1679                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1680  000B76  0EF8               	movlw	248
  1681  000B78  6E95               	movwf	149,c	;volatile
  1682  000B7A                     
  1683                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1684  000B7A  908C               	bcf	140,0,c	;volatile
  1685  000B7C                     
  1686                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1687  000B7C  828C               	bsf	140,1,c	;volatile
  1688  000B7E                     
  1689                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1690  000B7E  848C               	bsf	140,2,c	;volatile
  1691  000B80                     
  1692                           ;LCD.c: 128:         _delay(1200);
  1693  000B80  0EF0               	movlw	240
  1694  000B82                     u697:
  1695  000B82  D000               	nop2	
  1696  000B84  2EE8               	decfsz	wreg,f,c
  1697  000B86  D7FD               	bra	u697
  1698  000B88                     
  1699                           ;LCD.c: 130:  aux = PORTD;
  1700  000B88  CF83 F015          	movff	3971,LEER_LCD@aux	;volatile
  1701  000B8C                     
  1702                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1703  000B8C  948C               	bcf	140,2,c	;volatile
  1704  000B8E                     
  1705                           ;LCD.c: 132:         _delay(1200);
  1706  000B8E  0EF0               	movlw	240
  1707  000B90                     u707:
  1708  000B90  D000               	nop2	
  1709  000B92  2EE8               	decfsz	wreg,f,c
  1710  000B94  D7FD               	bra	u707
  1711  000B96                     
  1712                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1713  000B96  848C               	bsf	140,2,c	;volatile
  1714  000B98                     
  1715                           ;LCD.c: 135:         _delay(1200);
  1716  000B98  0EF0               	movlw	240
  1717  000B9A                     u717:
  1718  000B9A  D000               	nop2	
  1719  000B9C  2EE8               	decfsz	wreg,f,c
  1720  000B9E  D7FD               	bra	u717
  1721  000BA0                     
  1722                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1723  000BA0  948C               	bcf	140,2,c	;volatile
  1724  000BA2                     l921:
  1725                           
  1726                           ;LCD.c: 138:  aux = aux & 0x80;
  1727  000BA2  5015               	movf	LEER_LCD@aux^0,w,c
  1728  000BA4  0B80               	andlw	128
  1729  000BA6  6E15               	movwf	LEER_LCD@aux^0,c
  1730                           
  1731                           ;LCD.c: 139:  while(aux == 0x80)
  1732  000BA8  EFEA  F005         	goto	l935
  1733  000BAC                     l67:
  1734                           
  1735                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1736  000BAC  848C               	bsf	140,2,c	;volatile
  1737  000BAE                     
  1738                           ;LCD.c: 142:             _delay(1200);
  1739  000BAE  0EF0               	movlw	240
  1740  000BB0                     u727:
  1741  000BB0  D000               	nop2	
  1742  000BB2  2EE8               	decfsz	wreg,f,c
  1743  000BB4  D7FD               	bra	u727
  1744  000BB6                     
  1745                           ;LCD.c: 143:             aux = PORTD;
  1746  000BB6  CF83 F015          	movff	3971,LEER_LCD@aux	;volatile
  1747  000BBA                     
  1748                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1749  000BBA  948C               	bcf	140,2,c	;volatile
  1750                           
  1751                           ;LCD.c: 145:             _delay(1200);
  1752  000BBC  0EF0               	movlw	240
  1753  000BBE                     u737:
  1754  000BBE  D000               	nop2	
  1755  000BC0  2EE8               	decfsz	wreg,f,c
  1756  000BC2  D7FD               	bra	u737
  1757  000BC4                     
  1758                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1759  000BC4  848C               	bsf	140,2,c	;volatile
  1760                           
  1761                           ;LCD.c: 147:             _delay(1200);
  1762  000BC6  0EF0               	movlw	240
  1763  000BC8                     u747:
  1764  000BC8  D000               	nop2	
  1765  000BCA  2EE8               	decfsz	wreg,f,c
  1766  000BCC  D7FD               	bra	u747
  1767  000BCE                     
  1768                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1769  000BCE  948C               	bcf	140,2,c	;volatile
  1770  000BD0  EFD1  F005         	goto	l921
  1771  000BD4                     l935:
  1772                           
  1773                           ;LCD.c: 139:  while(aux == 0x80)
  1774  000BD4  0E80               	movlw	128
  1775  000BD6  1815               	xorwf	LEER_LCD@aux^0,w,c
  1776  000BD8  B4D8               	btfsc	status,2,c
  1777  000BDA  EFF1  F005         	goto	u11
  1778  000BDE  EFF3  F005         	goto	u10
  1779  000BE2                     u11:
  1780  000BE2  EFD6  F005         	goto	l67
  1781  000BE6                     u10:
  1782  000BE6  0012               	return		;funcret
  1783  000BE8                     __end_of_LEER_LCD:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _ENVIA_NIBBLE *****************
  1787 ;; Defined at:
  1788 ;;		line 93 in file "LCD.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  dato            1    wreg     unsigned char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  dato            1    0[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1802 ;;      Params:         0       0       0       0       0       0       0       0       0
  1803 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1805 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1806 ;;Total ram usage:        1 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_ENVIA_CHAR
  1812 ;;		_LCD_CONFIG
  1813 ;;		_ENVIA_LCD_CMD
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text14
  1818  000DB4                     __ptext14:
  1819                           	callstack 0
  1820  000DB4                     _ENVIA_NIBBLE:
  1821                           	callstack 28
  1822                           
  1823                           ;incstack = 0
  1824                           ;ENVIA_NIBBLE@dato stored from wreg
  1825  000DB4  6E15               	movwf	ENVIA_NIBBLE@dato^0,c
  1826  000DB6                     
  1827                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1828  000DB6  0E0F               	movlw	15
  1829  000DB8  168C               	andwf	140,f,c	;volatile
  1830                           
  1831                           ;LCD.c: 96:  dato &= 0xF0;
  1832  000DBA  0EF0               	movlw	240
  1833  000DBC  1615               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1834                           
  1835                           ;LCD.c: 97:  LATD|= dato;
  1836  000DBE  5015               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1837  000DC0  128C               	iorwf	140,f,c	;volatile
  1838  000DC2                     
  1839                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1840  000DC2  848C               	bsf	140,2,c	;volatile
  1841  000DC4                     
  1842                           ;LCD.c: 100:         _delay(1200);
  1843  000DC4  0EF0               	movlw	240
  1844  000DC6                     u757:
  1845  000DC6  D000               	nop2	
  1846  000DC8  2EE8               	decfsz	wreg,f,c
  1847  000DCA  D7FD               	bra	u757
  1848  000DCC                     
  1849                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1850  000DCC  948C               	bcf	140,2,c	;volatile
  1851  000DCE  0012               	return		;funcret
  1852  000DD0                     __end_of_ENVIA_NIBBLE:
  1853                           	callstack 0
  1854                           
  1855                           	psect	rparam
  1856  0000                     
  1857                           	psect	idloc
  1858                           
  1859                           ;Config register IDLOC0 @ 0x200000
  1860                           ;	unspecified, using default values
  1861  200000                     	org	2097152
  1862  200000  FF                 	db	255
  1863                           
  1864                           ;Config register IDLOC1 @ 0x200001
  1865                           ;	unspecified, using default values
  1866  200001                     	org	2097153
  1867  200001  FF                 	db	255
  1868                           
  1869                           ;Config register IDLOC2 @ 0x200002
  1870                           ;	unspecified, using default values
  1871  200002                     	org	2097154
  1872  200002  FF                 	db	255
  1873                           
  1874                           ;Config register IDLOC3 @ 0x200003
  1875                           ;	unspecified, using default values
  1876  200003                     	org	2097155
  1877  200003  FF                 	db	255
  1878                           
  1879                           ;Config register IDLOC4 @ 0x200004
  1880                           ;	unspecified, using default values
  1881  200004                     	org	2097156
  1882  200004  FF                 	db	255
  1883                           
  1884                           ;Config register IDLOC5 @ 0x200005
  1885                           ;	unspecified, using default values
  1886  200005                     	org	2097157
  1887  200005  FF                 	db	255
  1888                           
  1889                           ;Config register IDLOC6 @ 0x200006
  1890                           ;	unspecified, using default values
  1891  200006                     	org	2097158
  1892  200006  FF                 	db	255
  1893                           
  1894                           ;Config register IDLOC7 @ 0x200007
  1895                           ;	unspecified, using default values
  1896  200007                     	org	2097159
  1897  200007  FF                 	db	255
  1898                           
  1899                           	psect	config
  1900                           
  1901                           ;Config register CONFIG1L @ 0x300000
  1902                           ;	PLL Prescaler Selection bits
  1903                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1904                           ;	System Clock Postscaler Selection bits
  1905                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1906                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1907                           ;	USBDIV = 0x0, unprogrammed default
  1908  300000                     	org	3145728
  1909  300000  00                 	db	0
  1910                           
  1911                           ;Config register CONFIG1H @ 0x300001
  1912                           ;	Oscillator Selection bits
  1913                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1914                           ;	Fail-Safe Clock Monitor Enable bit
  1915                           ;	FCMEN = 0x0, unprogrammed default
  1916                           ;	Internal/External Oscillator Switchover bit
  1917                           ;	IESO = 0x0, unprogrammed default
  1918  300001                     	org	3145729
  1919  300001  02                 	db	2
  1920                           
  1921                           ;Config register CONFIG2L @ 0x300002
  1922                           ;	Power-up Timer Enable bit
  1923                           ;	PWRT = ON, PWRT enabled
  1924                           ;	Brown-out Reset Enable bits
  1925                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1926                           ;	Brown-out Reset Voltage bits
  1927                           ;	BORV = 0x3, unprogrammed default
  1928                           ;	USB Voltage Regulator Enable bit
  1929                           ;	VREGEN = 0x0, unprogrammed default
  1930  300002                     	org	3145730
  1931  300002  18                 	db	24
  1932                           
  1933                           ;Config register CONFIG2H @ 0x300003
  1934                           ;	Watchdog Timer Enable bit
  1935                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1936                           ;	Watchdog Timer Postscale Select bits
  1937                           ;	WDTPS = 0xF, unprogrammed default
  1938  300003                     	org	3145731
  1939  300003  1E                 	db	30
  1940                           
  1941                           ; Padding undefined space
  1942  300004                     	org	3145732
  1943  300004  FF                 	db	255
  1944                           
  1945                           ;Config register CONFIG3H @ 0x300005
  1946                           ;	CCP2 MUX bit
  1947                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1948                           ;	PORTB A/D Enable bit
  1949                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1950                           ;	Low-Power Timer 1 Oscillator Enable bit
  1951                           ;	LPT1OSC = 0x0, unprogrammed default
  1952                           ;	MCLR Pin Enable bit
  1953                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1954  300005                     	org	3145733
  1955  300005  81                 	db	129
  1956                           
  1957                           ;Config register CONFIG4L @ 0x300006
  1958                           ;	Stack Full/Underflow Reset Enable bit
  1959                           ;	STVREN = 0x1, unprogrammed default
  1960                           ;	Single-Supply ICSP Enable bit
  1961                           ;	LVP = OFF, Single-Supply ICSP disabled
  1962                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1963                           ;	ICPRT = 0x0, unprogrammed default
  1964                           ;	Extended Instruction Set Enable bit
  1965                           ;	XINST = 0x0, unprogrammed default
  1966                           ;	Background Debugger Enable bit
  1967                           ;	DEBUG = 0x1, unprogrammed default
  1968  300006                     	org	3145734
  1969  300006  81                 	db	129
  1970                           
  1971                           ; Padding undefined space
  1972  300007                     	org	3145735
  1973  300007  FF                 	db	255
  1974                           
  1975                           ;Config register CONFIG5L @ 0x300008
  1976                           ;	unspecified, using default values
  1977                           ;	Code Protection bit
  1978                           ;	CP0 = 0x1, unprogrammed default
  1979                           ;	Code Protection bit
  1980                           ;	CP1 = 0x1, unprogrammed default
  1981                           ;	Code Protection bit
  1982                           ;	CP2 = 0x1, unprogrammed default
  1983                           ;	Code Protection bit
  1984                           ;	CP3 = 0x1, unprogrammed default
  1985  300008                     	org	3145736
  1986  300008  0F                 	db	15
  1987                           
  1988                           ;Config register CONFIG5H @ 0x300009
  1989                           ;	unspecified, using default values
  1990                           ;	Boot Block Code Protection bit
  1991                           ;	CPB = 0x1, unprogrammed default
  1992                           ;	Data EEPROM Code Protection bit
  1993                           ;	CPD = 0x1, unprogrammed default
  1994  300009                     	org	3145737
  1995  300009  C0                 	db	192
  1996                           
  1997                           ;Config register CONFIG6L @ 0x30000A
  1998                           ;	unspecified, using default values
  1999                           ;	Write Protection bit
  2000                           ;	WRT0 = 0x1, unprogrammed default
  2001                           ;	Write Protection bit
  2002                           ;	WRT1 = 0x1, unprogrammed default
  2003                           ;	Write Protection bit
  2004                           ;	WRT2 = 0x1, unprogrammed default
  2005                           ;	Write Protection bit
  2006                           ;	WRT3 = 0x1, unprogrammed default
  2007  30000A                     	org	3145738
  2008  30000A  0F                 	db	15
  2009                           
  2010                           ;Config register CONFIG6H @ 0x30000B
  2011                           ;	unspecified, using default values
  2012                           ;	Configuration Register Write Protection bit
  2013                           ;	WRTC = 0x1, unprogrammed default
  2014                           ;	Boot Block Write Protection bit
  2015                           ;	WRTB = 0x1, unprogrammed default
  2016                           ;	Data EEPROM Write Protection bit
  2017                           ;	WRTD = 0x1, unprogrammed default
  2018  30000B                     	org	3145739
  2019  30000B  E0                 	db	224
  2020                           
  2021                           ;Config register CONFIG7L @ 0x30000C
  2022                           ;	unspecified, using default values
  2023                           ;	Table Read Protection bit
  2024                           ;	EBTR0 = 0x1, unprogrammed default
  2025                           ;	Table Read Protection bit
  2026                           ;	EBTR1 = 0x1, unprogrammed default
  2027                           ;	Table Read Protection bit
  2028                           ;	EBTR2 = 0x1, unprogrammed default
  2029                           ;	Table Read Protection bit
  2030                           ;	EBTR3 = 0x1, unprogrammed default
  2031  30000C                     	org	3145740
  2032  30000C  0F                 	db	15
  2033                           
  2034                           ;Config register CONFIG7H @ 0x30000D
  2035                           ;	unspecified, using default values
  2036                           ;	Boot Block Table Read Protection bit
  2037                           ;	EBTRB = 0x1, unprogrammed default
  2038  30000D                     	org	3145741
  2039  30000D  40                 	db	64
  2040                           tosu	equ	0xFFF
  2041                           tosh	equ	0xFFE
  2042                           tosl	equ	0xFFD
  2043                           stkptr	equ	0xFFC
  2044                           pclatu	equ	0xFFB
  2045                           pclath	equ	0xFFA
  2046                           pcl	equ	0xFF9
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           prodh	equ	0xFF4
  2052                           prodl	equ	0xFF3
  2053                           indf0	equ	0xFEF
  2054                           postinc0	equ	0xFEE
  2055                           postdec0	equ	0xFED
  2056                           preinc0	equ	0xFEC
  2057                           plusw0	equ	0xFEB
  2058                           fsr0h	equ	0xFEA
  2059                           fsr0l	equ	0xFE9
  2060                           wreg	equ	0xFE8
  2061                           indf1	equ	0xFE7
  2062                           postinc1	equ	0xFE6
  2063                           postdec1	equ	0xFE5
  2064                           preinc1	equ	0xFE4
  2065                           plusw1	equ	0xFE3
  2066                           fsr1h	equ	0xFE2
  2067                           fsr1l	equ	0xFE1
  2068                           bsr	equ	0xFE0
  2069                           indf2	equ	0xFDF
  2070                           postinc2	equ	0xFDE
  2071                           postdec2	equ	0xFDD
  2072                           preinc2	equ	0xFDC
  2073                           plusw2	equ	0xFDB
  2074                           fsr2h	equ	0xFDA
  2075                           fsr2l	equ	0xFD9
  2076                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        20
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      33
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[21]), STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2240
                                              9 COMRAM     1     1      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                           _lcd_init
                        _m24c01_read
                       _m24c01_write
                        _mssp_config
 ---------------------------------------------------------------------------------
 (1) _mssp_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _m24c01_write                                         3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _m24c01_read                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     588
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE
   _m24c01_read
   _m24c01_write
   _mssp_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      21       1       34.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      20        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Oct 28 21:42:10 2020

             _SSPSTATbits 000FC7                        l24 0CBE                        l42 0D8A  
                      l51 0D5A                        l60 0DCE                        l37 0DFA  
                      l54 0E02                        l63 0D26                        l48 0C84  
                      l57 0C46                        l67 0BAC                        l69 0BE6  
                      u10 0BE6                        u11 0BE2                        u20 0D6E  
                      u21 0D6A                        u30 0D84                        u31 0D80  
                      u70 0840                        u71 083C                        u80 0852  
                      u81 084E                        u90 0860                        u91 085C  
           ENVIA_CHAR@aux 0017                       l200 0B3E                       l121 0832  
                     l202 0B4C                       l130 0864                       l115 0DB2  
                     l203 0B54                       l124 0844                       l205 0B62  
                     l141 08A2                       l133 0872                       l206 0B64  
                     l150 08F6                       l118 0DF2                       l127 0852  
                     l208 0B72                       l144 08C4                       l209 0B74  
                     l153 0904                       l137 08C2                       l170 0976  
                     l138 0894                       l163 0974                       l147 08E4  
                     l164 0946                       l156 0916                       l173 0984  
                     l190 0B0C                       l182 0ADE                       l191 0B0E  
                     l167 0954                       l159 0924                       l176 0ABE  
                     l185 0AF0                       l194 0B20                       l179 0AD0  
                     l188 0AFE                       l197 0B2E                       l199 0B3C  
                     l901 0B7A                       l911 0B8C                       l903 0B7C  
                     l921 0BA2                       l913 0B8E                       l905 0B7E  
                     l931 0BCE                       l923 0BAE                       l915 0B96  
                     l907 0B80                       l941 0DC4                       l925 0BB6  
                     l917 0B98                       l909 0B88                       l943 0DCC  
                     l927 0BBA                       l935 0BD4                       l919 0BA0  
                     l951 0D00                       l937 0DB6                       l929 0BC4  
                     l961 0D14                       l953 0D08                       l945 0CF6  
                     l939 0DC2                       l963 0D1A                       l955 0D0A  
                     l947 0CF8                       l971 0D6E                       l981 0D30  
                     l965 0D20                       l957 0D0C                       l949 0CFC  
                     l973 0D74                       l991 0D42                       l983 0D34  
                     l959 0D0E                       l967 0DF4                       l975 0D84  
                     l993 0D48                       l985 0D3C                       l977 0D2A  
                     l969 0D5E                       l899 0B76                       l995 0D4E  
                     l987 0D3E                       l979 0D2C                       l997 0D54  
                     l989 0D40                       l999 0DFC                       u100 0872  
                     u101 086E                       u110 0880                       u111 087C  
                     u200 0932                       u120 08A2                       u201 092E  
                     u121 089E                       u210 0954                       u130 08B0  
                     u211 0950                       u131 08AC                       u300 0B1C  
                     u220 0962                       u140 08C2                       u301 0B18  
                     u221 095E                       u141 08BE                       u310 0B2E  
                     u230 0974                       u150 08D2                       u311 0B2A  
                     u231 0970                       u151 08CE                       u320 0B3C  
                     u240 0984                       u160 08F2                       u321 0B38  
                     u241 0980                       u161 08EE                       u330 0B4C  
                     u250 0ACC                       u170 0904                       u331 0B48  
                     u251 0AC8                       u171 0900                       u500 0C98  
                     u340 0B62                       u260 0ADE                       u180 0912  
                     u501 0C94                       u341 0B5E                       u261 0ADA  
                     u181 090E                       u510 0CB6                       u350 0B72  
                     u270 0AEC                       u190 0924                       u511 0CB2  
                     u351 0B6E                       u271 0AE8                       u191 0920  
                     u520 0C84                       u280 0AFE                       u600 0A84  
                     u521 0C80                       u281 0AFA                       u601 0A80  
                     u290 0B0C                       u610 0A94                       u530 09B6  
                     u291 0B08                       u611 0A90                       u531 09B2  
                     u540 09C6                       u541 09C2                       u550 09F6  
                     u551 09F2                       u560 0A06                       u561 0A02  
                     u570 0A32                       u707 0B90                       u627 08D8  
                     u571 0A2E                       u580 0A42                       u717 0B9A  
                     u637 0D9A                       u581 0A3E                       u590 0A72  
                     u727 0BB0                       u647 0BF8                       u591 0A6E  
                     u737 0BBE                       u657 0C06                       u747 0BC8  
                     u667 0C16                       u757 0DC6                       u677 0D02  
                     u687 0D36                       u697 0B82               LEER_LCD@aux 0015  
                     wreg 000FE8              ?_CURSOR_HOME 0015            ??_ENVIA_NIBBLE 0015  
          ENVIA_CHAR@dato 0016                      l1001 0BE8                      l1011 0C1C  
                    l1003 0BEC                      l1021 0C3A                      l1013 0C22  
                    l1005 0BF2                      l1101 0AEC                      l1023 0C40  
                    l1015 0C28                      l1007 0C00                      l1103 0B1C  
                    l1201 0CA4                      l1017 0C2E                      l1009 0C14  
                    l1041 0D8C                      l1211 0C72                      l1203 0CB6  
                    l1019 0C34                      l1051 0DAC                      l1043 0D90  
                    l1205 0C48                      l1045 0D94                      l1061 0860  
                    l1053 0DE4                      l1221 09A8                      l1213 0986  
                    l1207 0C54                      l1047 0DA4                      l1071 08B0  
                    l1063 0880                      l1055 0DEE                      l1231 09E4  
                    l1223 09B6                      l1215 098A                      l1209 0C70  
                    l1049 0DA8                      l1081 0912                      l1073 08B2  
                    l1057 0830                      l1241 0A14                      l1225 09C6  
                    l1233 09E8                      l1217 098E                      l1091 0962  
                    l1083 0932                      l1075 08D2                      l1059 0840  
                    l1235 09F6                      l1243 0A24                      l1227 09CA  
                    l1219 0998                      l1093 0964                      l1077 08E2  
                    l1069 0884                      l1261 0A72                      l1245 0A32  
                    l1237 0A06                      l1229 09D4                      l1095 0ABC  
                    l1079 08F2                      l1271 0AA2                      l1255 0A50  
                    l1247 0A42                      l1263 0A76                      l1239 0A0A  
                    l1097 0ABC                      l1089 0936                      l1265 0A84  
                    l1257 0A60                      l1249 0A4C                      l1099 0ACC  
                    l1267 0A94                      l1259 0A62                      l1197 0C88  
                    l1269 0A98                      l1199 0C98     __size_of_m24c01_write 0156  
                    STR_1 0816                      STR_2 0827                      STR_3 080E  
                    STR_4 0801               _m24c01_read 0ABA                      _LATD 000F8C  
                    _dato 001F                      _main 0986                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      start 0000  
           ?_CURSOR_ONOFF 0015              ___param_bank 000000           ??_ENVIA_LCD_CMD 0016  
        __end_of_LEER_LCD 0BE8       __size_of_BORRAR_LCD 0008                     ?_main 0015  
            _m24c01_write 0830                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034                     _frase 0001  
             ?_POS_CURSOR 0018                     main@y 001E                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0018           __initialization 0CC0  
            __end_of_main 0ABA           _ESCRIBE_MENSAJE 0C48                    ??_main 001E  
           __activetblptr 000001                    _SSPADD 000FC8                    _SSPBUF 000FC9  
        __end_of_lcd_init 0DB4      __end_of_ENVIA_NIBBLE 0DD0       __size_of_POS_CURSOR 003A  
       m24c01_write@x_412 0017              __pdataCOMRAM 0001              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ?_mssp_config 0015              ??_BORRAR_LCD 0018      __size_of_CURSOR_HOME 0008  
               ?_LEER_LCD 0015                __accesstop 0060   __end_of__initialization 0CE6  
            ??_LCD_CONFIG 0018             ___rparam_used 000001              ??_ENVIA_CHAR 0016  
 __end_of_ESCRIBE_MENSAJE 0C86            __pcstackCOMRAM 0015        __end_of_BORRAR_LCD 0E04  
        ENVIA_LCD_CMD@aux 0017      __end_of_CURSOR_ONOFF 0D8C        __end_of_LCD_CONFIG 0C48  
      __end_of_ENVIA_CHAR 0D5C              ?_m24c01_read 0015                ??_LEER_LCD 0015  
        ENVIA_NIBBLE@dato 0015              ??_POS_CURSOR 0019                 ?_lcd_init 0015  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0018              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0D28  
                 __pcinit 0CC0        __end_of_POS_CURSOR 0CC0                   __ramtop 0800  
                 __ptext0 0986                   __ptext1 0DE4                   __ptext2 0830  
                 __ptext3 0ABA                   __ptext4 0D8C                   __ptext5 0BE8  
                 __ptext6 0D5C                   __ptext7 0DF4                   __ptext8 0DFC  
                 __ptext9 0C86                ??_lcd_init 0019              _ENVIA_NIBBLE 0DB4  
    end_of_initialization 0CE6      __size_of_mssp_config 0010                   postdec1 000FE5  
                 postinc0 000FEE     __size_of_CURSOR_ONOFF 0030                 _PORTBbits 000F81  
    __size_of_m24c01_read 00BC      m24c01_read@direccion 0015         __size_of_LEER_LCD 0072  
            _CURSOR_ONOFF 0D5C        CURSOR_ONOFF@estado 0018             __pidataCOMRAM 0DD0  
           ??_CURSOR_HOME 0018       start_initialization 0CC0         ENVIA_LCD_CMD@dato 0016  
           ?_m24c01_write 0015               __pbssCOMRAM 001F              _button1_stat 0021  
            _button2_stat 0020             m24c01_write@x 0016       __end_of_CURSOR_HOME 0DFC  
       __size_of_lcd_init 0028            ??_m24c01_write 0015               __smallconst 0800  
                _LEER_LCD 0B76                  _LATDbits 000F8C          ESCRIBE_MENSAJE@i 001D  
          POS_CURSOR@fila 0019  __size_of_ESCRIBE_MENSAJE 003E               _CURSOR_HOME 0DF4  
           ??_mssp_config 0015                 copy_data0 0CD4    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
                __ptext10 0CF4                  __ptext11 0C48                  __ptext12 0D28  
                __ptext13 0B76                  __ptext14 0DB4                _BORRAR_LCD 0DFC  
           ??_m24c01_read 0015                  _lcd_init 0D8C       __end_of_mssp_config 0DF4  
           __size_of_main 0134                _LCD_CONFIG 0BE8      __end_of_m24c01_write 0986  
              _ENVIA_CHAR 0D28             _ENVIA_LCD_CMD 0CF4         ??_ESCRIBE_MENSAJE 001B  
   ESCRIBE_MENSAJE@cadena 0018       __end_of_m24c01_read 0B76            ?_ENVIA_LCD_CMD 0015  
             _mssp_config 0DE4               _SSPCON1bits 000FC6               _SSPCON2bits 000FC5  
        m24c01_read@leido 0016               ?_BORRAR_LCD 0015             ?_ENVIA_NIBBLE 0015  
              _POS_CURSOR 0C86               ?_LCD_CONFIG 0015        ESCRIBE_MENSAJE@tam 001A  
             ?_ENVIA_CHAR 0015         POS_CURSOR@columna 0018  
