

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 10 21:10:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28                           	psect	pa_nodes0,global,class=CODE,delta=1
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	smallconst
    66  000800                     __psmallconst:
    67                           	callstack 0
    68  000800  00                 	db	0
    69  000801                     _mensaje1:
    70                           	callstack 0
    71  000801  45                 	db	69
    72  000802  6A                 	db	106
    73  000803  65                 	db	101
    74  000804  72                 	db	114
    75  000805  63                 	db	99
    76  000806  69                 	db	105
    77  000807  63                 	db	99
    78  000808  69                 	db	105
    79  000809  6F                 	db	111
    80  00080A  20                 	db	32
    81  00080B  43                 	db	67
    82  00080C  6F                 	db	111
    83  00080D  6E                 	db	110
    84  00080E  74                 	db	116
    85  00080F  72                 	db	114
    86  000810  6F                 	db	111
    87  000811  6C                 	db	108
    88  000812  20                 	db	32
    89  000813  52                 	db	82
    90  000814  65                 	db	101
    91  000815  6D                 	db	109
    92  000816  6F                 	db	111
    93  000817  74                 	db	116
    94  000818  6F                 	db	111
    95  000819  00                 	db	0
    96  00081A                     __end_of_mensaje1:
    97                           	callstack 0
    98  00081A                     _boton1:
    99                           	callstack 0
   100  00081A  42                 	db	66
   101  00081B  6F                 	db	111
   102  00081C  74                 	db	116
   103  00081D  6F                 	db	111
   104  00081E  6E                 	db	110
   105  00081F  20                 	db	32
   106  000820  49                 	db	73
   107  000821  4E                 	db	78
   108  000822  54                 	db	84
   109  000823  30                 	db	48
   110  000824  20                 	db	32
   111  000825  70                 	db	112
   112  000826  72                 	db	114
   113  000827  65                 	db	101
   114  000828  73                 	db	115
   115  000829  69                 	db	105
   116  00082A  6F                 	db	111
   117  00082B  6E                 	db	110
   118  00082C  61                 	db	97
   119  00082D  64                 	db	100
   120  00082E  6F                 	db	111
   121  00082F  00                 	db	0
   122  000830                     __end_of_boton1:
   123                           	callstack 0
   124  0000                     _RCREG	set	4014
   125  0000                     _LATDbits	set	3980
   126  0000                     _PIR1bits	set	3998
   127  0000                     _TXREG	set	4013
   128  0000                     _TXSTAbits	set	4012
   129  0000                     _RCSTAbits	set	4011
   130  0000                     _SPBRG	set	4015
   131  0000                     _TRISDbits	set	3989
   132  0000                     _IPR1bits	set	3999
   133  0000                     _PIE1bits	set	3997
   134  0000                     _INTCONbits	set	4082
   135  0000                     _RCONbits	set	4048
   136  000830                     STR_1:
   137  000830  54                 	db	84	;'T'
   138  000831  65                 	db	101	;'e'
   139  000832  63                 	db	99	;'c'
   140  000833  6C                 	db	108	;'l'
   141  000834  61                 	db	97	;'a'
   142  000835  20                 	db	32
   143  000836  31                 	db	49	;'1'
   144  000837  20                 	db	32
   145  000838  70                 	db	112	;'p'
   146  000839  72                 	db	114	;'r'
   147  00083A  65                 	db	101	;'e'
   148  00083B  73                 	db	115	;'s'
   149  00083C  69                 	db	105	;'i'
   150  00083D  6F                 	db	111	;'o'
   151  00083E  6E                 	db	110	;'n'
   152  00083F  61                 	db	97	;'a'
   153  000840  64                 	db	100	;'d'
   154  000841  61                 	db	97	;'a'
   155  000842  00                 	db	0
   156  000843                     STR_2:
   157  000843  54                 	db	84	;'T'
   158  000844  65                 	db	101	;'e'
   159  000845  63                 	db	99	;'c'
   160  000846  6C                 	db	108	;'l'
   161  000847  61                 	db	97	;'a'
   162  000848  20                 	db	32
   163  000849  32                 	db	50	;'2'
   164  00084A  20                 	db	32
   165  00084B  70                 	db	112	;'p'
   166  00084C  72                 	db	114	;'r'
   167  00084D  65                 	db	101	;'e'
   168  00084E  73                 	db	115	;'s'
   169  00084F  69                 	db	105	;'i'
   170  000850  6F                 	db	111	;'o'
   171  000851  6E                 	db	110	;'n'
   172  000852  61                 	db	97	;'a'
   173  000853  64                 	db	100	;'d'
   174  000854  61                 	db	97	;'a'
   175  000855  00                 	db	0
   176  000856                     STR_3:
   177  000856  54                 	db	84	;'T'
   178  000857  65                 	db	101	;'e'
   179  000858  63                 	db	99	;'c'
   180  000859  6C                 	db	108	;'l'
   181  00085A  61                 	db	97	;'a'
   182  00085B  20                 	db	32
   183  00085C  33                 	db	51	;'3'
   184  00085D  20                 	db	32
   185  00085E  70                 	db	112	;'p'
   186  00085F  72                 	db	114	;'r'
   187  000860  65                 	db	101	;'e'
   188  000861  73                 	db	115	;'s'
   189  000862  69                 	db	105	;'i'
   190  000863  6F                 	db	111	;'o'
   191  000864  6E                 	db	110	;'n'
   192  000865  61                 	db	97	;'a'
   193  000866  64                 	db	100	;'d'
   194  000867  61                 	db	97	;'a'
   195  000868  00                 	db	0
   196  000869                     STR_4:
   197  000869  54                 	db	84	;'T'
   198  00086A  65                 	db	101	;'e'
   199  00086B  63                 	db	99	;'c'
   200  00086C  6C                 	db	108	;'l'
   201  00086D  61                 	db	97	;'a'
   202  00086E  20                 	db	32
   203  00086F  34                 	db	52	;'4'
   204  000870  20                 	db	32
   205  000871  70                 	db	112	;'p'
   206  000872  72                 	db	114	;'r'
   207  000873  65                 	db	101	;'e'
   208  000874  73                 	db	115	;'s'
   209  000875  69                 	db	105	;'i'
   210  000876  6F                 	db	111	;'o'
   211  000877  6E                 	db	110	;'n'
   212  000878  61                 	db	97	;'a'
   213  000879  64                 	db	100	;'d'
   214  00087A  61                 	db	97	;'a'
   215  00087B  00                 	db	0
   216  00087C                     STR_5:
   217  00087C  54                 	db	84	;'T'
   218  00087D  65                 	db	101	;'e'
   219  00087E  63                 	db	99	;'c'
   220  00087F  6C                 	db	108	;'l'
   221  000880  61                 	db	97	;'a'
   222  000881  20                 	db	32
   223  000882  35                 	db	53	;'5'
   224  000883  20                 	db	32
   225  000884  70                 	db	112	;'p'
   226  000885  72                 	db	114	;'r'
   227  000886  65                 	db	101	;'e'
   228  000887  73                 	db	115	;'s'
   229  000888  69                 	db	105	;'i'
   230  000889  6F                 	db	111	;'o'
   231  00088A  6E                 	db	110	;'n'
   232  00088B  61                 	db	97	;'a'
   233  00088C  64                 	db	100	;'d'
   234  00088D  61                 	db	97	;'a'
   235  00088E  00                 	db	0
   236  00088F                     STR_6:
   237  00088F  54                 	db	84	;'T'
   238  000890  65                 	db	101	;'e'
   239  000891  63                 	db	99	;'c'
   240  000892  6C                 	db	108	;'l'
   241  000893  61                 	db	97	;'a'
   242  000894  20                 	db	32
   243  000895  36                 	db	54	;'6'
   244  000896  20                 	db	32
   245  000897  70                 	db	112	;'p'
   246  000898  72                 	db	114	;'r'
   247  000899  65                 	db	101	;'e'
   248  00089A  73                 	db	115	;'s'
   249  00089B  69                 	db	105	;'i'
   250  00089C  6F                 	db	111	;'o'
   251  00089D  6E                 	db	110	;'n'
   252  00089E  61                 	db	97	;'a'
   253  00089F  64                 	db	100	;'d'
   254  0008A0  61                 	db	97	;'a'
   255  0008A1  00                 	db	0
   256  0008A2                     STR_7:
   257  0008A2  54                 	db	84	;'T'
   258  0008A3  65                 	db	101	;'e'
   259  0008A4  63                 	db	99	;'c'
   260  0008A5  6C                 	db	108	;'l'
   261  0008A6  61                 	db	97	;'a'
   262  0008A7  20                 	db	32
   263  0008A8  65                 	db	101	;'e'
   264  0008A9  72                 	db	114	;'r'
   265  0008AA  72                 	db	114	;'r'
   266  0008AB  6F                 	db	111	;'o'
   267  0008AC  6E                 	db	110	;'n'
   268  0008AD  65                 	db	101	;'e'
   269  0008AE  61                 	db	97	;'a'
   270  0008AF  00                 	db	0
   271  0008B0  00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           ; #config settings
   274                           
   275                           	psect	cinit
   276  000A68                     __pcinit:
   277                           	callstack 0
   278  000A68                     start_initialization:
   279                           	callstack 0
   280  000A68                     __initialization:
   281                           	callstack 0
   282  000A68                     end_of_initialization:
   283                           	callstack 0
   284  000A68                     __end_of__initialization:
   285                           	callstack 0
   286  000A68  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   287  000A6A  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   288  000A6C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   289  000A6E  6EF8               	movwf	tblptru,c
   290  000A70  0100               	movlb	0
   291  000A72  EF99  F004         	goto	_main	;jump to C main() function
   292                           
   293                           	psect	cstackCOMRAM
   294  000001                     __pcstackCOMRAM:
   295                           	callstack 0
   296  000001                     ?i2_strlen:
   297                           	callstack 0
   298  000001                     i2strlen@s:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x0
   302  000001                     	ds	2
   303  000003                     i2strlen@a:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x2
   307  000003                     	ds	1
   308  000004                     i2SERIAL_ESCRIBE_MENSAJE@cadena:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x3
   312  000004                     	ds	1
   313  000005                     ??i2_SERIAL_ESCRIBE_MENSAJE:
   314                           
   315                           ; 1 bytes @ 0x4
   316  000005                     	ds	1
   317  000006                     i2SERIAL_ESCRIBE_MENSAJE@tam:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x5
   321  000006                     	ds	1
   322  000007                     i2SERIAL_ESCRIBE_MENSAJE@x:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x6
   326  000007                     	ds	1
   327  000008                     ??_INT0_ISR:
   328                           
   329                           ; 1 bytes @ 0x7
   330  000008                     	ds	6
   331  00000E                     ?i1_strlen:
   332                           	callstack 0
   333  00000E                     i1strlen@s:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xD
   337  00000E                     	ds	2
   338  000010                     i1strlen@a:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xF
   342  000010                     	ds	1
   343  000011                     i1SERIAL_ESCRIBE_MENSAJE@cadena:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x10
   347  000011                     	ds	1
   348  000012                     ??i1_SERIAL_ESCRIBE_MENSAJE:
   349                           
   350                           ; 1 bytes @ 0x11
   351  000012                     	ds	1
   352  000013                     i1SERIAL_ESCRIBE_MENSAJE@tam:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356  000013                     	ds	1
   357  000014                     i1SERIAL_ESCRIBE_MENSAJE@x:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x13
   361  000014                     	ds	1
   362  000015                     ??_EUSART_RX_ISR:
   363                           
   364                           ; 1 bytes @ 0x14
   365  000015                     	ds	9
   366  00001E                     ?_strlen:
   367                           	callstack 0
   368  00001E                     strlen@s:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x1D
   372  00001E                     	ds	2
   373  000020                     strlen@a:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x1F
   377  000020                     	ds	1
   378  000021                     SERIAL_ESCRIBE_MENSAJE@cadena:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x20
   382  000021                     	ds	1
   383  000022                     ??_SERIAL_ESCRIBE_MENSAJE:
   384                           
   385                           ; 1 bytes @ 0x21
   386  000022                     	ds	1
   387  000023                     SERIAL_ESCRIBE_MENSAJE@tam:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x22
   391  000023                     	ds	1
   392  000024                     SERIAL_ESCRIBE_MENSAJE@x:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x23
   396  000024                     	ds	1
   397  000025                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x24
   400  000025                     	ds	2
   401                           
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 44 in file "maincode6.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;		None
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   421 ;;      Params:         0       0       0       0       0       0       0       0       0
   422 ;;      Locals:         0       0       0       0       0       0       0       0       0
   423 ;;      Temps:          2       0       0       0       0       0       0       0       0
   424 ;;      Totals:         2       0       0       0       0       0       0       0       0
   425 ;;Total ram usage:        2 bytes
   426 ;; Hardware stack levels required when called: 8
   427 ;; This function calls:
   428 ;;		_EUSART_conf
   429 ;;		_INIT_conf
   430 ;;		_SERIAL_ESCRIBE_MENSAJE
   431 ;;		_SERIAL_NEXTLINE
   432 ;; This function is called by:
   433 ;;		Startup code after reset
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text0
   438  000932                     __ptext0:
   439                           	callstack 0
   440  000932                     _main:
   441                           	callstack 23
   442                           
   443                           ;maincode6.c: 45:     _delay((unsigned long)((500)*(48000000UL/4000.0)));
   444                           
   445                           ;incstack = 0
   446  000932  0E1F               	movlw	31
   447  000934  6E26               	movwf	(??_main+1)^0,c
   448  000936  0E71               	movlw	113
   449  000938  6E25               	movwf	??_main^0,c
   450  00093A  0E1E               	movlw	30
   451  00093C                     u257:
   452  00093C  2EE8               	decfsz	wreg,f,c
   453  00093E  D7FE               	bra	u257
   454  000940  2E25               	decfsz	??_main^0,f,c
   455  000942  D7FC               	bra	u257
   456  000944  2E26               	decfsz	(??_main+1)^0,f,c
   457  000946  D7FA               	bra	u257
   458  000948  D000               	nop2	
   459                           
   460                           ;maincode6.c: 46:     INIT_conf();
   461  00094A  EC19  F005         	call	_INIT_conf	;wreg free
   462                           
   463                           ;maincode6.c: 47:     EUSART_conf();
   464  00094E  EC3B  F005         	call	_EUSART_conf	;wreg free
   465                           
   466                           ;maincode6.c: 48:     SERIAL_ESCRIBE_MENSAJE(mensaje1);
   467  000952  0E01               	movlw	low _mensaje1
   468  000954  6E21               	movwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   469  000956  ECB0  F004         	call	_SERIAL_ESCRIBE_MENSAJE	;wreg free
   470                           
   471                           ;maincode6.c: 49:     SERIAL_NEXTLINE();
   472  00095A  EC10  F005         	call	_SERIAL_NEXTLINE	;wreg free
   473  00095E                     l61:
   474  00095E  D7FF               	goto	l61
   475  000960                     __end_of_main:
   476                           	callstack 0
   477                           
   478 ;; *************** function _SERIAL_NEXTLINE *****************
   479 ;; Defined at:
   480 ;;		line 37 in file "maincode6.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   494 ;;      Params:         0       0       0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; Hardware stack levels required when called: 6
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text1
   509  000A20                     __ptext1:
   510                           	callstack 0
   511  000A20                     _SERIAL_NEXTLINE:
   512                           	callstack 24
   513                           
   514                           ;maincode6.c: 38:     TXREG = 0x0A;
   515                           
   516                           ;incstack = 0
   517  000A20  0E0A               	movlw	10
   518  000A22  6EAD               	movwf	173,c	;volatile
   519  000A24                     l50:
   520  000A24  A2AC               	btfss	172,1,c	;volatile
   521  000A26  D7FE               	goto	l50
   522                           
   523                           ;maincode6.c: 40:     TXREG = 0x0D;
   524  000A28  0E0D               	movlw	13
   525  000A2A  6EAD               	movwf	173,c	;volatile
   526  000A2C                     l53:
   527  000A2C  B2AC               	btfsc	172,1,c	;volatile
   528  000A2E  0012               	return		;funcret
   529  000A30  D7FD               	goto	l53
   530  000A32                     __end_of_SERIAL_NEXTLINE:
   531                           	callstack 0
   532                           
   533 ;; *************** function _SERIAL_ESCRIBE_MENSAJE *****************
   534 ;; Defined at:
   535 ;;		line 27 in file "maincode6.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  cadena          1   32[COMRAM] PTR const unsigned char 
   538 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
   539 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
   540 ;;		 -> mensaje1(25), 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  x               1   35[COMRAM] unsigned char 
   543 ;;  tam             1   34[COMRAM] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   553 ;;      Params:         1       0       0       0       0       0       0       0       0
   554 ;;      Locals:         2       0       0       0       0       0       0       0       0
   555 ;;      Temps:          1       0       0       0       0       0       0       0       0
   556 ;;      Totals:         4       0       0       0       0       0       0       0       0
   557 ;;Total ram usage:        4 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 7
   560 ;; This function calls:
   561 ;;		_strlen
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text2
   568  000960                     __ptext2:
   569                           	callstack 0
   570  000960                     _SERIAL_ESCRIBE_MENSAJE:
   571                           	callstack 23
   572                           
   573                           ;maincode6.c: 29:     tam = strlen(cadena);
   574                           
   575                           ;incstack = 0
   576  000960  C021  F01E         	movff	SERIAL_ESCRIBE_MENSAJE@cadena,strlen@s
   577  000964  ECF0  F004         	call	_strlen	;wreg free
   578  000968  501E               	movf	?_strlen^0,w,c
   579  00096A  6E23               	movwf	SERIAL_ESCRIBE_MENSAJE@tam^0,c
   580                           
   581                           ;maincode6.c: 31:     for(x=0;x<tam;x++){
   582  00096C  6A24               	clrf	SERIAL_ESCRIBE_MENSAJE@x^0,c
   583  00096E  D00A               	goto	l959
   584  000970                     l955:
   585                           
   586                           ;maincode6.c: 32:         TXREG = cadena[x];
   587  000970  5021               	movf	SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
   588  000972  2424               	addwf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   589  000974  6E22               	movwf	??_SERIAL_ESCRIBE_MENSAJE^0,c
   590  000976  C022  FFF6         	movff	??_SERIAL_ESCRIBE_MENSAJE,tblptrl
   591  00097A                     	if	1	;There is more than 1 active tblptr byte
   592  00097A  EC93  F004         	call	PL2	;call to abstracted procedure
   593  00097E                     l43:
   594  00097E  A2AC               	btfss	172,1,c	;volatile
   595  000980  D7FE               	goto	l43
   596                           
   597                           ;maincode6.c: 34:     }
   598  000982  2A24               	incf	SERIAL_ESCRIBE_MENSAJE@x^0,f,c
   599  000984                     l959:
   600  000984  5023               	movf	SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
   601  000986  5C24               	subwf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   602  000988  E3F3               	bnc	l955
   603  00098A  0012               	return		;funcret
   604  00098C                     __end_of_SERIAL_ESCRIBE_MENSAJE:
   605                           	callstack 0
   606                           
   607 ;; *************** function _strlen *****************
   608 ;; Defined at:
   609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  s               1   29[COMRAM] PTR const unsigned char 
   612 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
   613 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
   614 ;;		 -> mensaje1(25), 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  a               1   31[COMRAM] PTR const unsigned char 
   617 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
   618 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
   619 ;;		 -> mensaje1(25), 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  2   29[COMRAM] unsigned int 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   629 ;;      Params:         2       0       0       0       0       0       0       0       0
   630 ;;      Locals:         1       0       0       0       0       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0       0       0       0       0
   632 ;;      Totals:         3       0       0       0       0       0       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 6
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_SERIAL_ESCRIBE_MENSAJE
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text3
   644  0009E0                     __ptext3:
   645                           	callstack 0
   646  0009E0                     _strlen:
   647                           	callstack 23
   648                           
   649                           ;incstack = 0
   650  0009E0  C01E  F020         	movff	strlen@s,strlen@a
   651  0009E4  D001               	goto	l921
   652  0009E6                     l919:
   653  0009E6  2A1E               	incf	strlen@s^0,f,c
   654  0009E8                     l921:
   655  0009E8  C01E  FFF6         	movff	strlen@s,tblptrl
   656  0009EC                     	if	1	;There is more than 1 active tblptr byte
   657  0009EC  ECEB  F004         	call	PL4	;call to abstracted procedure
   658  0009F0  E1FA               	bnz	l919
   659  0009F2  5020               	movf	strlen@a^0,w,c
   660  0009F4  5C1E               	subwf	strlen@s^0,w,c
   661  0009F6  6E1E               	movwf	?_strlen^0,c
   662  0009F8  6A1F               	clrf	(?_strlen+1)^0,c
   663  0009FA  BE1E               	btfsc	?_strlen^0,7,c
   664  0009FC  061F               	decf	(?_strlen+1)^0,f,c
   665  0009FE  0012               	return		;funcret
   666  000A00                     __end_of_strlen:
   667                           	callstack 0
   668                           
   669 ;; *************** function _INIT_conf *****************
   670 ;; Defined at:
   671 ;;		line 9 in file "maincode6.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  2   34[None  ] int 
   678 ;; Registers used:
   679 ;;		None
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         0       0       0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 6
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text4
   700  000A32                     __ptext4:
   701                           	callstack 0
   702  000A32                     _INIT_conf:
   703                           	callstack 24
   704                           
   705                           ;maincode6.c: 10:     RCONbits.IPEN = 1;
   706                           
   707                           ;incstack = 0
   708  000A32  8ED0               	bsf	208,7,c	;volatile
   709                           
   710                           ;maincode6.c: 11:     INTCONbits.GIEH = 1;
   711  000A34  8EF2               	bsf	242,7,c	;volatile
   712                           
   713                           ;maincode6.c: 12:     INTCONbits.GIEL = 1;
   714  000A36  8CF2               	bsf	242,6,c	;volatile
   715                           
   716                           ;maincode6.c: 13:     INTCONbits.INT0IE = 1;
   717  000A38  88F2               	bsf	242,4,c	;volatile
   718                           
   719                           ;maincode6.c: 14:     PIE1bits.RCIE = 1;
   720  000A3A  8A9D               	bsf	157,5,c	;volatile
   721                           
   722                           ;maincode6.c: 15:     IPR1bits.RCIP = 0;
   723  000A3C  9A9F               	bcf	159,5,c	;volatile
   724                           
   725                           ;maincode6.c: 16:     TRISDbits.RD0 = 0;
   726  000A3E  9095               	bcf	149,0,c	;volatile
   727                           
   728                           ;maincode6.c: 17:     TRISDbits.RD1 = 0;
   729  000A40  9295               	bcf	149,1,c	;volatile
   730  000A42  0012               	return		;funcret
   731  000A44                     __end_of_INIT_conf:
   732                           	callstack 0
   733                           
   734 ;; *************** function _EUSART_conf *****************
   735 ;; Defined at:
   736 ;;		line 20 in file "maincode6.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2   37[None  ] int 
   743 ;; Registers used:
   744 ;;		wreg, status,2
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:         0       0       0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0
   753 ;;      Totals:         0       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:        0 bytes
   755 ;; Hardware stack levels used: 1
   756 ;; Hardware stack levels required when called: 6
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text5
   765  000A76                     __ptext5:
   766                           	callstack 0
   767  000A76                     _EUSART_conf:
   768                           	callstack 24
   769                           
   770                           ;maincode6.c: 21:     SPBRG = 77;
   771                           
   772                           ;incstack = 0
   773  000A76  0E4D               	movlw	77
   774  000A78  6EAF               	movwf	175,c	;volatile
   775                           
   776                           ;maincode6.c: 22:     RCSTAbits.SPEN = 1;
   777  000A7A  8EAB               	bsf	171,7,c	;volatile
   778                           
   779                           ;maincode6.c: 23:     TXSTAbits.TXEN = 1;
   780  000A7C  8AAC               	bsf	172,5,c	;volatile
   781                           
   782                           ;maincode6.c: 24:     RCSTAbits.CREN = 1;
   783  000A7E  88AB               	bsf	171,4,c	;volatile
   784  000A80  0C4D               	retlw	77	;funcret
   785  000A82                     __end_of_EUSART_conf:
   786                           	callstack 0
   787                           
   788 ;; *************** function _EUSART_RX_ISR *****************
   789 ;; Defined at:
   790 ;;		line 60 in file "maincode6.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;		None
   793 ;; Auto vars:     Size  Location     Type
   794 ;;		None
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   804 ;;      Params:         0       0       0       0       0       0       0       0       0
   805 ;;      Locals:         0       0       0       0       0       0       0       0       0
   806 ;;      Temps:          9       0       0       0       0       0       0       0       0
   807 ;;      Totals:         9       0       0       0       0       0       0       0       0
   808 ;;Total ram usage:        9 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 5
   811 ;; This function calls:
   812 ;;		i1_SERIAL_ESCRIBE_MENSAJE
   813 ;;		i1_SERIAL_NEXTLINE
   814 ;; This function is called by:
   815 ;;		Interrupt level 1
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	intcodelo
   820  000018                     __pintcodelo:
   821                           	callstack 0
   822  000018                     _EUSART_RX_ISR:
   823                           	callstack 23
   824                           
   825                           ;incstack = 0
   826  000018  8027               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   827  00001A  CFD8 F017          	movff	status,??_EUSART_RX_ISR+2
   828  00001E  CFE8 F018          	movff	wreg,??_EUSART_RX_ISR+3
   829  000022  CFE0 F019          	movff	bsr,??_EUSART_RX_ISR+4
   830  000026  CFF6 F01A          	movff	tblptrl,??_EUSART_RX_ISR+5
   831  00002A  CFF7 F01B          	movff	tblptrh,??_EUSART_RX_ISR+6
   832  00002E  CFF8 F01C          	movff	tblptru,??_EUSART_RX_ISR+7
   833  000032  CFF5 F01D          	movff	tablat,??_EUSART_RX_ISR+8
   834                           
   835                           ;maincode6.c: 61:     PIR1bits.RCIF = 0;
   836  000036  9A9E               	bcf	158,5,c	;volatile
   837                           
   838                           ;maincode6.c: 62:     switch(RCREG){
   839  000038  D02D               	goto	i1l1037
   840  00003A                     i1l75:
   841                           
   842                           ;maincode6.c: 64:             LATDbits.LD0 = 1;
   843  00003A  808C               	bsf	140,0,c	;volatile
   844                           
   845                           ;maincode6.c: 65:             SERIAL_ESCRIBE_MENSAJE("Tecla 1 presionada");
   846  00003C  0E30               	movlw	low STR_1
   847  00003E  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   848  000040  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   849  000044                     i1l1011:
   850                           
   851                           ;maincode6.c: 66:             SERIAL_NEXTLINE();
   852  000044  EC22  F005         	call	i1_SERIAL_NEXTLINE	;wreg free
   853                           
   854                           ;maincode6.c: 67:             break;
   855  000048  D038               	goto	i1l83
   856  00004A                     i1l77:
   857                           
   858                           ;maincode6.c: 69:             LATDbits.LD0 = 0;
   859  00004A  908C               	bcf	140,0,c	;volatile
   860                           
   861                           ;maincode6.c: 70:             SERIAL_ESCRIBE_MENSAJE("Tecla 2 presionada");
   862  00004C  0E43               	movlw	low STR_2
   863  00004E  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   864  000050  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   865  000054  D7F7               	goto	i1l1011
   866  000056                     i1l78:
   867                           
   868                           ;maincode6.c: 74:             LATDbits.LD1 = 1;
   869  000056  828C               	bsf	140,1,c	;volatile
   870                           
   871                           ;maincode6.c: 75:             SERIAL_ESCRIBE_MENSAJE("Tecla 3 presionada");
   872  000058  0E56               	movlw	low STR_3
   873  00005A  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   874  00005C  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   875  000060  D7F1               	goto	i1l1011
   876  000062                     i1l79:
   877                           
   878                           ;maincode6.c: 79:             LATDbits.LD1 = 0;
   879  000062  928C               	bcf	140,1,c	;volatile
   880                           
   881                           ;maincode6.c: 80:             SERIAL_ESCRIBE_MENSAJE("Tecla 4 presionada");
   882  000064  0E69               	movlw	low STR_4
   883  000066  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   884  000068  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   885  00006C  D7EB               	goto	i1l1011
   886  00006E                     i1l80:
   887                           
   888                           ;maincode6.c: 84:             LATDbits.LD0 = 1;
   889  00006E  808C               	bsf	140,0,c	;volatile
   890                           
   891                           ;maincode6.c: 85:             LATDbits.LD1 = 1;
   892  000070  828C               	bsf	140,1,c	;volatile
   893                           
   894                           ;maincode6.c: 86:             SERIAL_ESCRIBE_MENSAJE("Tecla 5 presionada");
   895  000072  0E7C               	movlw	low STR_5
   896  000074  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   897  000076  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   898  00007A  D7E4               	goto	i1l1011
   899  00007C                     i1l81:
   900                           
   901                           ;maincode6.c: 90:             LATDbits.LD0 = 0;
   902  00007C  908C               	bcf	140,0,c	;volatile
   903                           
   904                           ;maincode6.c: 91:             LATDbits.LD1 = 0;
   905  00007E  928C               	bcf	140,1,c	;volatile
   906                           
   907                           ;maincode6.c: 92:             SERIAL_ESCRIBE_MENSAJE("Tecla 6 presionada");
   908  000080  0E8F               	movlw	low STR_6
   909  000082  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   910  000084  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   911  000088  D7DD               	goto	i1l1011
   912  00008A                     i1l1033:
   913                           
   914                           ;maincode6.c: 96:             SERIAL_ESCRIBE_MENSAJE("Tecla erronea");
   915  00008A  0EA2               	movlw	low STR_7
   916  00008C  6E11               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   917  00008E  EC7E  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   918  000092  D7D8               	goto	i1l1011
   919  000094                     i1l1037:
   920  000094  50AE               	movf	174,w,c	;volatile
   921  000096  6E15               	movwf	??_EUSART_RX_ISR^0,c
   922  000098  6A16               	clrf	(??_EUSART_RX_ISR+1)^0,c
   923                           
   924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   925                           ; Switch size 1, requested type "space"
   926                           ; Number of cases is 1, Range of values is 0 to 0
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte            4     3 (average)
   930                           ;	Chosen strategy is simple_byte
   931  00009A  5016               	movf	(??_EUSART_RX_ISR+1)^0,w,c
   932  00009C  E1F6               	bnz	i1l1033
   933                           
   934                           ; Switch size 1, requested type "space"
   935                           ; Number of cases is 6, Range of values is 49 to 54
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte           19    10 (average)
   939                           ;	Chosen strategy is simple_byte
   940  00009E  5015               	movf	??_EUSART_RX_ISR^0,w,c
   941  0000A0  0A31               	xorlw	49	; case 49
   942  0000A2  E0CB               	bz	i1l75
   943  0000A4  0A03               	xorlw	3	; case 50
   944  0000A6  E0D1               	bz	i1l77
   945  0000A8  0A01               	xorlw	1	; case 51
   946  0000AA  E0D5               	bz	i1l78
   947  0000AC  0A07               	xorlw	7	; case 52
   948  0000AE  E0D9               	bz	i1l79
   949  0000B0  0A01               	xorlw	1	; case 53
   950  0000B2  E0DD               	bz	i1l80
   951  0000B4  0A03               	xorlw	3	; case 54
   952  0000B6  E0E2               	bz	i1l81
   953  0000B8  D7E8               	goto	i1l1033
   954  0000BA                     i1l83:
   955  0000BA  C01D  FFF5         	movff	??_EUSART_RX_ISR+8,tablat
   956  0000BE  C01C  FFF8         	movff	??_EUSART_RX_ISR+7,tblptru
   957  0000C2  C01B  FFF7         	movff	??_EUSART_RX_ISR+6,tblptrh
   958  0000C6  C01A  FFF6         	movff	??_EUSART_RX_ISR+5,tblptrl
   959  0000CA  C019  FFE0         	movff	??_EUSART_RX_ISR+4,bsr
   960  0000CE  C018  FFE8         	movff	??_EUSART_RX_ISR+3,wreg
   961  0000D2  C017  FFD8         	movff	??_EUSART_RX_ISR+2,status
   962  0000D6  9027               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   963  0000D8  0010               	retfie	
   964  0000DA                     __end_of_EUSART_RX_ISR:
   965                           	callstack 0
   966                           
   967 ;; *************** function i1_SERIAL_NEXTLINE *****************
   968 ;; Defined at:
   969 ;;		line 37 in file "maincode6.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   983 ;;      Params:         0       0       0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 3
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_EUSART_RX_ISR
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text7
   998  000A44                     __ptext7:
   999                           	callstack 0
  1000  000A44                     i1_SERIAL_NEXTLINE:
  1001                           	callstack 24
  1002                           
  1003                           ;maincode6.c: 38:     TXREG = 0x0A;
  1004                           
  1005                           ;incstack = 0
  1006  000A44  0E0A               	movlw	10
  1007  000A46  6EAD               	movwf	173,c	;volatile
  1008  000A48                     i1l50:
  1009  000A48  A2AC               	btfss	172,1,c	;volatile
  1010  000A4A  D7FE               	goto	i1l50
  1011                           
  1012                           ;maincode6.c: 40:     TXREG = 0x0D;
  1013  000A4C  0E0D               	movlw	13
  1014  000A4E  6EAD               	movwf	173,c	;volatile
  1015  000A50                     i1l53:
  1016  000A50  B2AC               	btfsc	172,1,c	;volatile
  1017  000A52  0012               	return		;funcret
  1018  000A54  D7FD               	goto	i1l53
  1019  000A56                     __end_ofi1_SERIAL_NEXTLINE:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function i1_SERIAL_ESCRIBE_MENSAJE *****************
  1023 ;; Defined at:
  1024 ;;		line 27 in file "maincode6.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  cadena          1   16[COMRAM] PTR const unsigned char 
  1027 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1028 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1029 ;;		 -> mensaje1(25), 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  x               1   19[COMRAM] unsigned char 
  1032 ;;  tam             1   18[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         1       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        4 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 4
  1049 ;; This function calls:
  1050 ;;		i1_strlen
  1051 ;; This function is called by:
  1052 ;;		_EUSART_RX_ISR
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text8
  1057  0008FC                     __ptext8:
  1058                           	callstack 0
  1059  0008FC                     i1_SERIAL_ESCRIBE_MENSAJE:
  1060                           	callstack 23
  1061                           
  1062                           ;maincode6.c: 29:     tam = strlen(cadena);
  1063                           
  1064                           ;incstack = 0
  1065  0008FC  C011  F00E         	movff	i1SERIAL_ESCRIBE_MENSAJE@cadena,i1strlen@s
  1066  000900  ECDC  F004         	call	i1_strlen	;wreg free
  1067  000904  500E               	movf	?i1_strlen^0,w,c
  1068  000906  6E13               	movwf	i1SERIAL_ESCRIBE_MENSAJE@tam^0,c
  1069                           
  1070                           ;maincode6.c: 31:     for(x=0;x<tam;x++){
  1071  000908  6A14               	clrf	i1SERIAL_ESCRIBE_MENSAJE@x^0,c
  1072  00090A  D009               	goto	i1l973
  1073  00090C                     i1l969:
  1074                           
  1075                           ;maincode6.c: 32:         TXREG = cadena[x];
  1076  00090C  5011               	movf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  1077  00090E  2414               	addwf	i1SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1078  000910  6E12               	movwf	??i1_SERIAL_ESCRIBE_MENSAJE^0,c
  1079  000912  C012  FFF6         	movff	??i1_SERIAL_ESCRIBE_MENSAJE,tblptrl
  1080  000916                     	if	1	;There is more than 1 active tblptr byte
  1081  000916  D807               	call	PL2	;call to abstracted procedure
  1082  000918                     i1l43:
  1083  000918  A2AC               	btfss	172,1,c	;volatile
  1084  00091A  D7FE               	goto	i1l43
  1085                           
  1086                           ;maincode6.c: 34:     }
  1087  00091C  2A14               	incf	i1SERIAL_ESCRIBE_MENSAJE@x^0,f,c
  1088  00091E                     i1l973:
  1089  00091E  5013               	movf	i1SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  1090  000920  5C14               	subwf	i1SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1091  000922  E3F4               	bnc	i1l969
  1092  000924  0012               	return		;funcret
  1093  000926                     __end_ofi1_SERIAL_ESCRIBE_MENSAJE:
  1094                           	callstack 0
  1095  000926                     PL2:
  1096                           	callstack 23
  1097  000926  0E08               	movlw	high __smallconst
  1098  000928  6EF7               	movwf	tblptrh,c
  1099  00092A                     	endif
  1100  00092A                     	if	0	;tblptru may be non-zero
  1101  00092A                     	endif
  1102  00092A                     	if	0	;tblptru may be non-zero
  1103  00092A                     	endif
  1104  00092A  0008               	tblrd		*
  1105  00092C  CFF5 FFAD          	movff	tablat,4013	;volatile
  1106  000930  0012               	return	
  1107  000932                     __end_ofPL2:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function i1_strlen *****************
  1111 ;; Defined at:
  1112 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  s               1   13[COMRAM] PTR const unsigned char 
  1115 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1116 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1117 ;;		 -> mensaje1(25), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  a               1   15[COMRAM] PTR const unsigned char 
  1120 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1121 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1122 ;;		 -> mensaje1(25), 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  2   13[COMRAM] unsigned int 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1132 ;;      Params:         2       0       0       0       0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1135 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 3
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		i1_SERIAL_ESCRIBE_MENSAJE
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text9
  1147  0009B8                     __ptext9:
  1148                           	callstack 0
  1149  0009B8                     i1_strlen:
  1150                           	callstack 23
  1151                           
  1152                           ;incstack = 0
  1153  0009B8  C00E  F010         	movff	i1strlen@s,i1strlen@a
  1154  0009BC  D001               	goto	i1l931
  1155  0009BE                     i1l929:
  1156  0009BE  2A0E               	incf	i1strlen@s^0,f,c
  1157  0009C0                     i1l931:
  1158  0009C0  C00E  FFF6         	movff	i1strlen@s,tblptrl
  1159  0009C4                     	if	1	;There is more than 1 active tblptr byte
  1160  0009C4  D808               	call	PL4	;call to abstracted procedure
  1161  0009C6  E1FB               	bnz	i1l929
  1162  0009C8  5010               	movf	i1strlen@a^0,w,c
  1163  0009CA  5C0E               	subwf	i1strlen@s^0,w,c
  1164  0009CC  6E0E               	movwf	?i1_strlen^0,c
  1165  0009CE  6A0F               	clrf	(?i1_strlen+1)^0,c
  1166  0009D0  BE0E               	btfsc	?i1_strlen^0,7,c
  1167  0009D2  060F               	decf	(?i1_strlen+1)^0,f,c
  1168  0009D4  0012               	return		;funcret
  1169  0009D6                     __end_ofi1_strlen:
  1170                           	callstack 0
  1171  0009D6                     PL4:
  1172                           	callstack 23
  1173  0009D6  0E08               	movlw	high __smallconst
  1174  0009D8  6EF7               	movwf	tblptrh,c
  1175  0009DA                     	endif
  1176  0009DA                     	if	0	;tblptru may be non-zero
  1177  0009DA                     	endif
  1178  0009DA                     	if	0	;tblptru may be non-zero
  1179  0009DA                     	endif
  1180  0009DA  0008               	tblrd		*
  1181  0009DC  50F5               	movf	tablat,w,c
  1182  0009DE  0012               	return	
  1183  0009E0                     __end_ofPL4:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _INT0_ISR *****************
  1187 ;; Defined at:
  1188 ;;		line 53 in file "maincode6.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        6 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 2
  1209 ;; This function calls:
  1210 ;;		i2_SERIAL_ESCRIBE_MENSAJE
  1211 ;;		i2_SERIAL_NEXTLINE
  1212 ;; This function is called by:
  1213 ;;		Interrupt level 2
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	intcode
  1218  000008                     __pintcode:
  1219                           	callstack 0
  1220  000008                     _INT0_ISR:
  1221                           	callstack 23
  1222                           
  1223                           ;incstack = 0
  1224  000008  8227               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1225  00000A  ED59  F004         	call	int_func,f	;refresh shadow registers
  1226                           
  1227                           	psect	intcode_body
  1228  0008B2                     __pintcode_body:
  1229                           	callstack 23
  1230  0008B2                     int_func:
  1231                           	callstack 23
  1232  0008B2  0006               	pop		; remove dummy address from shadow register refresh
  1233  0008B4  CFF6 F00A          	movff	tblptrl,??_INT0_ISR+2
  1234  0008B8  CFF7 F00B          	movff	tblptrh,??_INT0_ISR+3
  1235  0008BC  CFF8 F00C          	movff	tblptru,??_INT0_ISR+4
  1236  0008C0  CFF5 F00D          	movff	tablat,??_INT0_ISR+5
  1237                           
  1238                           ;maincode6.c: 54:     INTCONbits.INT0IF = 0;
  1239  0008C4  92F2               	bcf	242,1,c	;volatile
  1240                           
  1241                           ;maincode6.c: 55:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1242  0008C6  0E04               	movlw	4
  1243  0008C8  6E09               	movwf	(??_INT0_ISR+1)^0,c
  1244  0008CA  0E0C               	movlw	12
  1245  0008CC  6E08               	movwf	??_INT0_ISR^0,c
  1246  0008CE  0E34               	movlw	52
  1247  0008D0                     i2u26_47:
  1248  0008D0  2EE8               	decfsz	wreg,f,c
  1249  0008D2  D7FE               	bra	i2u26_47
  1250  0008D4  2E08               	decfsz	??_INT0_ISR^0,f,c
  1251  0008D6  D7FC               	bra	i2u26_47
  1252  0008D8  2E09               	decfsz	(??_INT0_ISR+1)^0,f,c
  1253  0008DA  D7FA               	bra	i2u26_47
  1254                           
  1255                           ;maincode6.c: 56:     SERIAL_ESCRIBE_MENSAJE(boton1);
  1256  0008DC  0E1A               	movlw	low _boton1
  1257  0008DE  6E04               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
  1258  0008E0  ECC6  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
  1259                           
  1260                           ;maincode6.c: 57:     SERIAL_NEXTLINE();
  1261  0008E4  EC2B  F005         	call	i2_SERIAL_NEXTLINE	;wreg free
  1262  0008E8  C00D  FFF5         	movff	??_INT0_ISR+5,tablat
  1263  0008EC  C00C  FFF8         	movff	??_INT0_ISR+4,tblptru
  1264  0008F0  C00B  FFF7         	movff	??_INT0_ISR+3,tblptrh
  1265  0008F4  C00A  FFF6         	movff	??_INT0_ISR+2,tblptrl
  1266  0008F8  9227               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1267  0008FA  0011               	retfie		f
  1268  0008FC                     __end_of_INT0_ISR:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function i2_SERIAL_NEXTLINE *****************
  1272 ;; Defined at:
  1273 ;;		line 37 in file "maincode6.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1287 ;;      Params:         0       0       0       0       0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_INT0_ISR
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text11
  1301  000A56                     __ptext11:
  1302                           	callstack 0
  1303  000A56                     i2_SERIAL_NEXTLINE:
  1304                           	callstack 24
  1305                           
  1306                           ;maincode6.c: 38:     TXREG = 0x0A;
  1307                           
  1308                           ;incstack = 0
  1309  000A56  0E0A               	movlw	10
  1310  000A58  6EAD               	movwf	173,c	;volatile
  1311  000A5A                     i2l50:
  1312  000A5A  A2AC               	btfss	172,1,c	;volatile
  1313  000A5C  D7FE               	goto	i2l50
  1314                           
  1315                           ;maincode6.c: 40:     TXREG = 0x0D;
  1316  000A5E  0E0D               	movlw	13
  1317  000A60  6EAD               	movwf	173,c	;volatile
  1318  000A62                     i2l53:
  1319  000A62  B2AC               	btfsc	172,1,c	;volatile
  1320  000A64  0012               	return		;funcret
  1321  000A66  D7FD               	goto	i2l53
  1322  000A68                     __end_ofi2_SERIAL_NEXTLINE:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function i2_SERIAL_ESCRIBE_MENSAJE *****************
  1326 ;; Defined at:
  1327 ;;		line 27 in file "maincode6.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1330 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1331 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1332 ;;		 -> mensaje1(25), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  x               1    6[COMRAM] unsigned char 
  1335 ;;  tam             1    5[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1345 ;;      Params:         1       0       0       0       0       0       0       0       0
  1346 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1348 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1349 ;;Total ram usage:        4 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 1
  1352 ;; This function calls:
  1353 ;;		i2_strlen
  1354 ;; This function is called by:
  1355 ;;		_INT0_ISR
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text12
  1360  00098C                     __ptext12:
  1361                           	callstack 0
  1362  00098C                     i2_SERIAL_ESCRIBE_MENSAJE:
  1363                           	callstack 23
  1364                           
  1365                           ;maincode6.c: 29:     tam = strlen(cadena);
  1366                           
  1367                           ;incstack = 0
  1368  00098C  C004  F001         	movff	i2SERIAL_ESCRIBE_MENSAJE@cadena,i2strlen@s
  1369  000990  EC00  F005         	call	i2_strlen	;wreg free
  1370  000994  5001               	movf	?i2_strlen^0,w,c
  1371  000996  6E06               	movwf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,c
  1372                           
  1373                           ;maincode6.c: 31:     for(x=0;x<tam;x++){
  1374  000998  6A07               	clrf	i2SERIAL_ESCRIBE_MENSAJE@x^0,c
  1375  00099A  D00A               	goto	i2l987
  1376  00099C                     i2l983:
  1377                           
  1378                           ;maincode6.c: 32:         TXREG = cadena[x];
  1379  00099C  5004               	movf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  1380  00099E  2407               	addwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1381  0009A0  6E05               	movwf	??i2_SERIAL_ESCRIBE_MENSAJE^0,c
  1382  0009A2  C005  FFF6         	movff	??i2_SERIAL_ESCRIBE_MENSAJE,tblptrl
  1383  0009A6                     	if	1	;There is more than 1 active tblptr byte
  1384  0009A6  EC93  F004         	call	PL2	;call to abstracted procedure
  1385  0009AA                     i2l43:
  1386  0009AA  A2AC               	btfss	172,1,c	;volatile
  1387  0009AC  D7FE               	goto	i2l43
  1388                           
  1389                           ;maincode6.c: 34:     }
  1390  0009AE  2A07               	incf	i2SERIAL_ESCRIBE_MENSAJE@x^0,f,c
  1391  0009B0                     i2l987:
  1392  0009B0  5006               	movf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  1393  0009B2  5C07               	subwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1394  0009B4  E3F3               	bnc	i2l983
  1395  0009B6  0012               	return		;funcret
  1396  0009B8                     __end_ofi2_SERIAL_ESCRIBE_MENSAJE:
  1397                           	callstack 0
  1398                           
  1399 ;; *************** function i2_strlen *****************
  1400 ;; Defined at:
  1401 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1404 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1405 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1406 ;;		 -> mensaje1(25), 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1409 ;;		 -> STR_7(14), STR_6(19), STR_5(19), STR_4(19), 
  1410 ;;		 -> STR_3(19), STR_2(19), STR_1(19), boton1(22), 
  1411 ;;		 -> mensaje1(25), 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  2    0[COMRAM] unsigned int 
  1414 ;; Registers used:
  1415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1421 ;;      Params:         2       0       0       0       0       0       0       0       0
  1422 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1424 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels used: 1
  1427 ;; This function calls:
  1428 ;;		Nothing
  1429 ;; This function is called by:
  1430 ;;		i2_SERIAL_ESCRIBE_MENSAJE
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text13
  1435  000A00                     __ptext13:
  1436                           	callstack 0
  1437  000A00                     i2_strlen:
  1438                           	callstack 23
  1439                           
  1440                           ;incstack = 0
  1441  000A00  C001  F003         	movff	i2strlen@s,i2strlen@a
  1442  000A04  D001               	goto	i2l941
  1443  000A06                     i2l939:
  1444  000A06  2A01               	incf	i2strlen@s^0,f,c
  1445  000A08                     i2l941:
  1446  000A08  C001  FFF6         	movff	i2strlen@s,tblptrl
  1447  000A0C                     	if	1	;There is more than 1 active tblptr byte
  1448  000A0C  ECEB  F004         	call	PL4	;call to abstracted procedure
  1449  000A10  E1FA               	bnz	i2l939
  1450  000A12  5003               	movf	i2strlen@a^0,w,c
  1451  000A14  5C01               	subwf	i2strlen@s^0,w,c
  1452  000A16  6E01               	movwf	?i2_strlen^0,c
  1453  000A18  6A02               	clrf	(?i2_strlen+1)^0,c
  1454  000A1A  BE01               	btfsc	?i2_strlen^0,7,c
  1455  000A1C  0602               	decf	(?i2_strlen+1)^0,f,c
  1456  000A1E  0012               	return		;funcret
  1457  000A20                     __end_ofi2_strlen:
  1458                           	callstack 0
  1459                           
  1460                           	psect	rparam
  1461  0000                     
  1462                           	psect	temp
  1463  000027                     btemp:
  1464                           	callstack 0
  1465  000027                     	ds	1
  1466  0000                     int$flags	set	btemp
  1467  0000                     wtemp8	set	btemp+1
  1468  0000                     ttemp5	set	btemp+1
  1469  0000                     ttemp6	set	btemp+4
  1470  0000                     ttemp7	set	btemp+8
  1471                           
  1472                           	psect	idloc
  1473                           
  1474                           ;Config register IDLOC0 @ 0x200000
  1475                           ;	unspecified, using default values
  1476  200000                     	org	2097152
  1477  200000  FF                 	db	255
  1478                           
  1479                           ;Config register IDLOC1 @ 0x200001
  1480                           ;	unspecified, using default values
  1481  200001                     	org	2097153
  1482  200001  FF                 	db	255
  1483                           
  1484                           ;Config register IDLOC2 @ 0x200002
  1485                           ;	unspecified, using default values
  1486  200002                     	org	2097154
  1487  200002  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC3 @ 0x200003
  1490                           ;	unspecified, using default values
  1491  200003                     	org	2097155
  1492  200003  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC4 @ 0x200004
  1495                           ;	unspecified, using default values
  1496  200004                     	org	2097156
  1497  200004  FF                 	db	255
  1498                           
  1499                           ;Config register IDLOC5 @ 0x200005
  1500                           ;	unspecified, using default values
  1501  200005                     	org	2097157
  1502  200005  FF                 	db	255
  1503                           
  1504                           ;Config register IDLOC6 @ 0x200006
  1505                           ;	unspecified, using default values
  1506  200006                     	org	2097158
  1507  200006  FF                 	db	255
  1508                           
  1509                           ;Config register IDLOC7 @ 0x200007
  1510                           ;	unspecified, using default values
  1511  200007                     	org	2097159
  1512  200007  FF                 	db	255
  1513                           
  1514                           	psect	config
  1515                           
  1516                           ;Config register CONFIG1L @ 0x300000
  1517                           ;	PLL Prescaler Selection bits
  1518                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1519                           ;	System Clock Postscaler Selection bits
  1520                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1521                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1522                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1523  300000                     	org	3145728
  1524  300000  00                 	db	0
  1525                           
  1526                           ;Config register CONFIG1H @ 0x300001
  1527                           ;	Oscillator Selection bits
  1528                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1529                           ;	Fail-Safe Clock Monitor Enable bit
  1530                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1531                           ;	Internal/External Oscillator Switchover bit
  1532                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1533  300001                     	org	3145729
  1534  300001  02                 	db	2
  1535                           
  1536                           ;Config register CONFIG2L @ 0x300002
  1537                           ;	Power-up Timer Enable bit
  1538                           ;	PWRT = ON, PWRT enabled
  1539                           ;	Brown-out Reset Enable bits
  1540                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1541                           ;	Brown-out Reset Voltage bits
  1542                           ;	BORV = 3, Minimum setting 2.05V
  1543                           ;	USB Voltage Regulator Enable bit
  1544                           ;	VREGEN = OFF, USB voltage regulator disabled
  1545  300002                     	org	3145730
  1546  300002  18                 	db	24
  1547                           
  1548                           ;Config register CONFIG2H @ 0x300003
  1549                           ;	Watchdog Timer Enable bit
  1550                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1551                           ;	Watchdog Timer Postscale Select bits
  1552                           ;	WDTPS = 32768, 1:32768
  1553  300003                     	org	3145731
  1554  300003  1E                 	db	30
  1555                           
  1556                           ; Padding undefined space
  1557  300004                     	org	3145732
  1558  300004  FF                 	db	255
  1559                           
  1560                           ;Config register CONFIG3H @ 0x300005
  1561                           ;	CCP2 MUX bit
  1562                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1563                           ;	PORTB A/D Enable bit
  1564                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1565                           ;	Low-Power Timer 1 Oscillator Enable bit
  1566                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1567                           ;	MCLR Pin Enable bit
  1568                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1569  300005                     	org	3145733
  1570  300005  81                 	db	129
  1571                           
  1572                           ;Config register CONFIG4L @ 0x300006
  1573                           ;	Stack Full/Underflow Reset Enable bit
  1574                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1575                           ;	Single-Supply ICSP Enable bit
  1576                           ;	LVP = OFF, Single-Supply ICSP disabled
  1577                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1578                           ;	ICPRT = OFF, ICPORT disabled
  1579                           ;	Extended Instruction Set Enable bit
  1580                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1581                           ;	Background Debugger Enable bit
  1582                           ;	DEBUG = 0x1, unprogrammed default
  1583  300006                     	org	3145734
  1584  300006  81                 	db	129
  1585                           
  1586                           ; Padding undefined space
  1587  300007                     	org	3145735
  1588  300007  FF                 	db	255
  1589                           
  1590                           ;Config register CONFIG5L @ 0x300008
  1591                           ;	Code Protection bit
  1592                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1593                           ;	Code Protection bit
  1594                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1595                           ;	Code Protection bit
  1596                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1597                           ;	Code Protection bit
  1598                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1599  300008                     	org	3145736
  1600  300008  0F                 	db	15
  1601                           
  1602                           ;Config register CONFIG5H @ 0x300009
  1603                           ;	Boot Block Code Protection bit
  1604                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1605                           ;	Data EEPROM Code Protection bit
  1606                           ;	CPD = OFF, Data EEPROM is not code-protected
  1607  300009                     	org	3145737
  1608  300009  C0                 	db	192
  1609                           
  1610                           ;Config register CONFIG6L @ 0x30000A
  1611                           ;	Write Protection bit
  1612                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1613                           ;	Write Protection bit
  1614                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1615                           ;	Write Protection bit
  1616                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1617                           ;	Write Protection bit
  1618                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1619  30000A                     	org	3145738
  1620  30000A  0F                 	db	15
  1621                           
  1622                           ;Config register CONFIG6H @ 0x30000B
  1623                           ;	Configuration Register Write Protection bit
  1624                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1625                           ;	Boot Block Write Protection bit
  1626                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1627                           ;	Data EEPROM Write Protection bit
  1628                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1629  30000B                     	org	3145739
  1630  30000B  E0                 	db	224
  1631                           
  1632                           ;Config register CONFIG7L @ 0x30000C
  1633                           ;	Table Read Protection bit
  1634                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1635                           ;	Table Read Protection bit
  1636                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1637                           ;	Table Read Protection bit
  1638                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1639                           ;	Table Read Protection bit
  1640                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1641  30000C                     	org	3145740
  1642  30000C  0F                 	db	15
  1643                           
  1644                           ;Config register CONFIG7H @ 0x30000D
  1645                           ;	Boot Block Table Read Protection bit
  1646                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1647  30000D                     	org	3145741
  1648  30000D  40                 	db	64
  1649                           tosu	equ	0xFFF
  1650                           tosh	equ	0xFFE
  1651                           tosl	equ	0xFFD
  1652                           stkptr	equ	0xFFC
  1653                           pclatu	equ	0xFFB
  1654                           pclath	equ	0xFFA
  1655                           pcl	equ	0xFF9
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           indf0	equ	0xFEF
  1663                           postinc0	equ	0xFEE
  1664                           postdec0	equ	0xFED
  1665                           preinc0	equ	0xFEC
  1666                           plusw0	equ	0xFEB
  1667                           fsr0h	equ	0xFEA
  1668                           fsr0l	equ	0xFE9
  1669                           wreg	equ	0xFE8
  1670                           indf1	equ	0xFE7
  1671                           postinc1	equ	0xFE6
  1672                           postdec1	equ	0xFE5
  1673                           preinc1	equ	0xFE4
  1674                           plusw1	equ	0xFE3
  1675                           fsr1h	equ	0xFE2
  1676                           fsr1l	equ	0xFE1
  1677                           bsr	equ	0xFE0
  1678                           indf2	equ	0xFDF
  1679                           postinc2	equ	0xFDE
  1680                           postdec2	equ	0xFDD
  1681                           preinc2	equ	0xFDC
  1682                           plusw2	equ	0xFDB
  1683                           fsr2h	equ	0xFDA
  1684                           fsr2l	equ	0xFD9
  1685                           status	equ	0xFD8

Data Sizes:
    Strings     128
    Constant    47
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_7(CODE[14]), STR_6(CODE[19]), STR_5(CODE[19]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[19]), boton1(CODE[22]), 
		 -> mensaje1(CODE[25]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_7(CODE[14]), STR_6(CODE[19]), STR_5(CODE[19]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[19]), boton1(CODE[22]), 
		 -> mensaje1(CODE[25]), 

    SERIAL_ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_7(CODE[14]), STR_6(CODE[19]), STR_5(CODE[19]), STR_4(CODE[19]), 
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[19]), boton1(CODE[22]), 
		 -> mensaje1(CODE[25]), 


Critical Paths under _main in COMRAM

    _main->_SERIAL_ESCRIBE_MENSAJE
    _SERIAL_ESCRIBE_MENSAJE->_strlen

Critical Paths under _EUSART_RX_ISR in COMRAM

    _EUSART_RX_ISR->i1_SERIAL_ESCRIBE_MENSAJE
    i1_SERIAL_ESCRIBE_MENSAJE->i1_strlen

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_SERIAL_ESCRIBE_MENSAJE
    i2_SERIAL_ESCRIBE_MENSAJE->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_RX_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_RX_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_RX_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_RX_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_RX_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_RX_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_RX_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_RX_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     757
                                             36 COMRAM     2     2      0
                        _EUSART_conf
                          _INIT_conf
             _SERIAL_ESCRIBE_MENSAJE
                    _SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (1) _SERIAL_NEXTLINE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_ESCRIBE_MENSAJE                               4     3      1     757
                                             32 COMRAM     4     3      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                             29 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _INIT_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_ISR                                        9     9      0     413
                                             20 COMRAM     9     9      0
           i1_SERIAL_ESCRIBE_MENSAJE
                  i1_SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (4) i1_SERIAL_NEXTLINE                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_SERIAL_ESCRIBE_MENSAJE                             4     3      1     413
                                             16 COMRAM     4     3      1
                           i1_strlen
 ---------------------------------------------------------------------------------
 (5) i1_strlen                                             3     1      2     116
                                             13 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             6     6      0     257
                                              7 COMRAM     6     6      0
           i2_SERIAL_ESCRIBE_MENSAJE
                  i2_SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (7) i2_SERIAL_NEXTLINE                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_SERIAL_ESCRIBE_MENSAJE                             4     3      1     257
                                              3 COMRAM     4     3      1
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_conf
   _INIT_conf
   _SERIAL_ESCRIBE_MENSAJE
     _strlen
   _SERIAL_NEXTLINE

 _EUSART_RX_ISR (ROOT)
   i1_SERIAL_ESCRIBE_MENSAJE
     i1_strlen
   i1_SERIAL_NEXTLINE

 _INT0_ISR (ROOT)
   i2_SERIAL_ESCRIBE_MENSAJE
     i2_strlen
   i2_SERIAL_NEXTLINE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     26      26       1       40.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 10 21:10:18 2021

                               PL2 0926                                 PL4 09D6  
                               l50 0A24                                 l43 097E  
                               l53 0A2C                                 l61 095E  
     SERIAL_ESCRIBE_MENSAJE@cadena 0021                                 bsr 000FE0  
                              l921 09E8                                l919 09E6  
                              l955 0970                                l959 0984  
                              u257 093C                                wreg 000FE8  
                 ?_SERIAL_NEXTLINE 0001                       ?_EUSART_conf 0001  
                             STR_1 0830                               STR_2 0843  
                             STR_3 0856                               STR_4 0869  
                             STR_5 087C                               STR_6 088F  
                             STR_7 08A2                               i1l50 0A48  
                             i1l43 0918                               i1l53 0A50  
                             i1l80 006E                               i1l81 007C  
                             i2l50 0A5A                               i2l43 09AA  
                             i1l83 00BA                               i1l75 003A  
                             i2l53 0A62                               i1l77 004A  
                             i1l78 0056                               i1l79 0062  
         i2_SERIAL_ESCRIBE_MENSAJE 098C                               _main 0932  
                             btemp 0027                               start 00DA  
                     ___param_bank 000000                 __size_of_INIT_conf 0012  
                 __end_of_INT0_ISR 08FC                      _EUSART_RX_ISR 0018  
                            ?_main 0001                              i1l931 09C0  
                            i1l929 09BE                              i1l973 091E  
                            i1l969 090C                              i2l941 0A08  
                            i2l939 0A06                              i2l983 099C  
                            i2l987 09B0                              _RCREG 000FAE  
                            _SPBRG 000FAF                              _TXREG 000FAD  
                            tablat 000FF5                              ttemp5 0028  
                            ttemp6 002B                              ttemp7 002F  
                            status 000FD8                              wtemp8 0028  
                 __end_ofi1_strlen 09D6                   __end_ofi2_strlen 0A20  
                  __initialization 0A68                       __end_of_main 0960  
                   ?_EUSART_RX_ISR 0001                             ??_main 0025  
                    __activetblptr 000002                  __end_of_INIT_conf 0A44  
                           i1l1011 0044                             i1l1033 008A  
                           i1l1037 0094            SERIAL_ESCRIBE_MENSAJE@x 0024  
                           _boton1 081A                   __end_of_mensaje1 081A  
                           isa$std 000001                             _strlen 09E0  
                     __mediumconst 0000   __end_ofi1_SERIAL_ESCRIBE_MENSAJE 0926  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8          i1SERIAL_ESCRIBE_MENSAJE@x 0014  
                       __accesstop 0060            __end_of__initialization 0A68  
             __size_of_EUSART_conf 000C                          ?_INT0_ISR 0001  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                  ??_EUSART_RX_ISR 0015                         __end_ofPL2 0932  
                       __end_ofPL4 09E0         ??i2_SERIAL_ESCRIBE_MENSAJE 0005  
                        ?i1_strlen 000E                          ?i2_strlen 0001  
   i2SERIAL_ESCRIBE_MENSAJE@cadena 0004                         ??_INT0_ISR 0008  
                          ?_strlen 001E                            i2u26_47 08D0  
                       ??i1_strlen 0010                         ??i2_strlen 0003  
                i1_SERIAL_NEXTLINE 0A44           i1_SERIAL_ESCRIBE_MENSAJE 08FC  
               ?i1_SERIAL_NEXTLINE 0001     i1SERIAL_ESCRIBE_MENSAJE@cadena 0011  
         __size_of_SERIAL_NEXTLINE 0012                ??i1_SERIAL_NEXTLINE 000E  
                          __Hparam 0000                            __Lparam 0000  
                     __psmallconst 0800                            __pcinit 0A68  
                          __ramtop 0800                            __ptext0 0932  
                          __ptext1 0A20                            __ptext2 0960  
                          __ptext3 09E0                            __ptext4 0A32  
                          __ptext5 0A76                            __ptext7 0A44  
                          __ptext8 08FC                            __ptext9 09B8  
                  __size_of_strlen 0020           ??_SERIAL_ESCRIBE_MENSAJE 0022  
        SERIAL_ESCRIBE_MENSAJE@tam 0023          __end_ofi1_SERIAL_NEXTLINE 0A56  
                   __pintcode_body 08B2               end_of_initialization 0A68  
                        _INIT_conf 0A32                      __Lmediumconst 0000  
                          int_func 08B2                  i2_SERIAL_NEXTLINE 0A56  
               ?i2_SERIAL_NEXTLINE 0001                          _RCSTAbits 000FAB  
              ??i2_SERIAL_NEXTLINE 0001                            strlen@a 0020  
                          strlen@s 001E                          _TRISDbits 000F95  
        __end_ofi2_SERIAL_NEXTLINE 0A68                         ?_INIT_conf 0001  
                        _TXSTAbits 000FAC        i1SERIAL_ESCRIBE_MENSAJE@tam 0013  
                __size_of_INT0_ISR 08F4                  ??_SERIAL_NEXTLINE 001E  
                   __end_of_boton1 0830                     __end_of_strlen 0A00  
              start_initialization 0A68         __size_ofi1_SERIAL_NEXTLINE 0012  
  __size_of_SERIAL_ESCRIBE_MENSAJE 002C                      ??_EUSART_conf 001E  
        i2SERIAL_ESCRIBE_MENSAJE@x 0007                          i1strlen@a 0010  
                        i1strlen@s 000E                  __size_ofi1_strlen 001E  
                __size_ofi2_strlen 0020                          i2strlen@a 0003  
                        i2strlen@s 0001              __end_of_EUSART_RX_ISR 00DA  
                         ??_strlen 0020         ??i1_SERIAL_ESCRIBE_MENSAJE 0012  
       __size_ofi2_SERIAL_NEXTLINE 0012                        ??_INIT_conf 001E  
              __end_of_EUSART_conf 0A82  __size_ofi2_SERIAL_ESCRIBE_MENSAJE 002C  
        ?i2_SERIAL_ESCRIBE_MENSAJE 0004             _SERIAL_ESCRIBE_MENSAJE 0960  
                        __pintcode 0008                        __pintcodelo 0018  
                      __smallconst 0800                           _INT0_ISR 0008  
                         _LATDbits 000F8C                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
                         _RCONbits 000FD0                           i1_strlen 09B8  
                         i2_strlen 0A00                        _EUSART_conf 0A76  
                  _SERIAL_NEXTLINE 0A20                           __Hrparam 0000  
                         __Lrparam 0000                           __ptext11 0A56  
                         __ptext12 098C                           __ptext13 0A00  
                    __size_of_main 002E                           _mensaje1 0801  
                         isa$xinst 000000                           int$flags 0027  
      i2SERIAL_ESCRIBE_MENSAJE@tam 0006                         _INTCONbits 000FF2  
          __end_of_SERIAL_NEXTLINE 0A32   __end_ofi2_SERIAL_ESCRIBE_MENSAJE 09B8  
                         intlevel1 0000                           intlevel2 0000  
          ?_SERIAL_ESCRIBE_MENSAJE 0021     __end_of_SERIAL_ESCRIBE_MENSAJE 098C  
           __size_of_EUSART_RX_ISR 00C2  __size_ofi1_SERIAL_ESCRIBE_MENSAJE 002A  
        ?i1_SERIAL_ESCRIBE_MENSAJE 0011  
