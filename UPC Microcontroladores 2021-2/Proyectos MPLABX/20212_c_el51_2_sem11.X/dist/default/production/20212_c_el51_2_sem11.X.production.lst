

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 27 21:07:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     _PORTD	set	3971
    68  0000                     _LATD	set	3980
    69  0000                     _LATDbits	set	3980
    70  0000                     _ADRESL	set	4035
    71  0000                     _ADRESH	set	4036
    72  0000                     _ADCON0	set	4034
    73  0000                     _CCP1CON	set	4029
    74  0000                     _T2CON	set	4042
    75  0000                     _CCPR1L	set	4030
    76  0000                     _PR2	set	4043
    77  0000                     _ADCON0bits	set	4034
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON2	set	4032
    80  0000                     _TRISCbits	set	3988
    81  0000                     _TRISD	set	3989
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  4C                 	db	76	;'L'
    89  000802  61                 	db	97	;'a'
    90  000803  62                 	db	98	;'b'
    91  000804  2D                 	db	45
    92  000805  31                 	db	49	;'1'
    93  000806  31                 	db	49	;'1'
    94  000807  20                 	db	32
    95  000808  4D                 	db	77	;'M'
    96  000809  69                 	db	105	;'i'
    97  00080A  63                 	db	99	;'c'
    98  00080B  72                 	db	114	;'r'
    99  00080C  6F                 	db	111	;'o'
   100  00080D  20                 	db	32
   101  00080E  55                 	db	85	;'U'
   102  00080F  50                 	db	80	;'P'
   103  000810  43                 	db	67	;'C'
   104  000811  00                 	db	0
   105  000812                     STR_2:
   106  000812  41                 	db	65	;'A'
   107  000813  4E                 	db	78	;'N'
   108  000814  31                 	db	49	;'1'
   109  000815  3A                 	db	58	;':'
   110  000816  00                 	db	0
   111  000817  00                 	db	0	; dummy byte at the end
   112  0000                     
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116  0013EA                     __pcinit:
   117                           	callstack 0
   118  0013EA                     start_initialization:
   119                           	callstack 0
   120  0013EA                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to COMRAM (12 bytes)
   124  0013EA  EE00  F02D         	lfsr	0,__pbssCOMRAM
   125  0013EE  0E0C               	movlw	12
   126  0013F0                     clear_0:
   127  0013F0  6AEE               	clrf	postinc0,c
   128  0013F2  06E8               	decf	wreg,f,c
   129  0013F4  E1FD               	bnz	clear_0
   130  0013F6                     end_of_initialization:
   131                           	callstack 0
   132  0013F6                     __end_of__initialization:
   133                           	callstack 0
   134  0013F6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   135  0013F8  6EF8               	movwf	tblptru,c
   136  0013FA  0E08               	movlw	high __Lsmallconst
   137  0013FC  6EF7               	movwf	tblptrh,c
   138  0013FE  0100               	movlb	0
   139  001400  EFFB  F006         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142  00002D                     __pbssCOMRAM:
   143                           	callstack 0
   144  00002D                     _escalamiento:
   145                           	callstack 0
   146  00002D                     	ds	4
   147  000031                     _unidad:
   148                           	callstack 0
   149  000031                     	ds	2
   150  000033                     _decena:
   151                           	callstack 0
   152  000033                     	ds	2
   153  000035                     _centena:
   154                           	callstack 0
   155  000035                     	ds	2
   156  000037                     _millar:
   157                           	callstack 0
   158  000037                     	ds	2
   159                           
   160                           	psect	cstackCOMRAM
   161  000001                     __pcstackCOMRAM:
   162                           	callstack 0
   163  000001                     ?___lwmod:
   164                           	callstack 0
   165  000001                     ?___fltol:
   166                           	callstack 0
   167  000001                     ?___xxtofl:
   168                           	callstack 0
   169  000001                     ENVIA_NIBBLE@dato:
   170                           	callstack 0
   171  000001                     LEER_LCD@aux:
   172                           	callstack 0
   173  000001                     ___lwmod@dividend:
   174                           	callstack 0
   175  000001                     ___fltol@f1:
   176                           	callstack 0
   177  000001                     ___xxtofl@val:
   178                           	callstack 0
   179                           
   180                           ; 4 bytes @ 0x0
   181  000001                     	ds	1
   182  000002                     ENVIA_CHAR@dato:
   183                           	callstack 0
   184  000002                     ENVIA_LCD_CMD@dato:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x1
   188  000002                     	ds	1
   189  000003                     ENVIA_CHAR@aux:
   190                           	callstack 0
   191  000003                     ENVIA_LCD_CMD@aux:
   192                           	callstack 0
   193  000003                     ___lwmod@divisor:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x2
   197  000003                     	ds	1
   198  000004                     ??_LCD_CONFIG:
   199  000004                     POS_CURSOR@columna:
   200                           	callstack 0
   201  000004                     CURSOR_ONOFF@estado:
   202                           	callstack 0
   203  000004                     ESCRIBE_MENSAJE@cadena:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x3
   207  000004                     	ds	1
   208  000005                     ??_lcd_init:
   209  000005                     ??___fltol:
   210  000005                     ??___xxtofl:
   211  000005                     POS_CURSOR@fila:
   212                           	callstack 0
   213  000005                     ___lwmod@counter:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x4
   217  000005                     	ds	1
   218  000006                     ?___lwdiv:
   219                           	callstack 0
   220  000006                     ESCRIBE_MENSAJE@tam:
   221                           	callstack 0
   222  000006                     ___lwdiv@dividend:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x5
   226  000006                     	ds	1
   227  000007                     ??_ESCRIBE_MENSAJE:
   228                           
   229                           ; 1 bytes @ 0x6
   230  000007                     	ds	1
   231  000008                     ___lwdiv@divisor:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x7
   235  000008                     	ds	1
   236  000009                     ESCRIBE_MENSAJE@i:
   237                           	callstack 0
   238  000009                     ___fltol@sign1:
   239                           	callstack 0
   240  000009                     ___xxtofl@sign:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x8
   244  000009                     	ds	1
   245  00000A                     ___fltol@exp1:
   246                           	callstack 0
   247  00000A                     ___xxtofl@exp:
   248                           	callstack 0
   249  00000A                     ___lwdiv@quotient:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x9
   253  00000A                     	ds	1
   254  00000B                     ___xxtofl@arg:
   255                           	callstack 0
   256                           
   257                           ; 4 bytes @ 0xA
   258  00000B                     	ds	1
   259  00000C                     ___lwdiv@counter:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0xB
   263  00000C                     	ds	1
   264  00000D                     convierte@numero:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xC
   268  00000D                     	ds	2
   269  00000F                     ?___flmul:
   270                           	callstack 0
   271  00000F                     ___flmul@b:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0xE
   275  00000F                     	ds	4
   276  000013                     ___flmul@a:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0x12
   280  000013                     	ds	4
   281  000017                     ??___flmul:
   282                           
   283                           ; 1 bytes @ 0x16
   284  000017                     	ds	4
   285  00001B                     ___flmul@sign:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x1A
   289  00001B                     	ds	1
   290  00001C                     ___flmul@grs:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0x1B
   294  00001C                     	ds	4
   295  000020                     ___flmul@aexp:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x1F
   299  000020                     	ds	1
   300  000021                     ___flmul@bexp:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x20
   304  000021                     	ds	1
   305  000022                     ___flmul@prod:
   306                           	callstack 0
   307                           
   308                           ; 4 bytes @ 0x21
   309  000022                     	ds	4
   310  000026                     ___flmul@temp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x25
   314  000026                     	ds	2
   315  000028                     ??_main:
   316                           
   317                           ; 1 bytes @ 0x27
   318  000028                     	ds	3
   319  00002B                     main@res_ad_ch1:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x2A
   323  00002B                     	ds	2
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 42 in file "maincode.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;  res_ad_ch1      2   42[COMRAM] unsigned int 
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   344 ;;      Params:         0       0       0       0       0       0       0       0       0
   345 ;;      Locals:         2       0       0       0       0       0       0       0       0
   346 ;;      Temps:          3       0       0       0       0       0       0       0       0
   347 ;;      Totals:         5       0       0       0       0       0       0       0       0
   348 ;;Total ram usage:        5 bytes
   349 ;; Hardware stack levels required when called: 4
   350 ;; This function calls:
   351 ;;		_ENVIA_CHAR
   352 ;;		_ESCRIBE_MENSAJE
   353 ;;		_POS_CURSOR
   354 ;;		___flmul
   355 ;;		___fltol
   356 ;;		___xxtofl
   357 ;;		_convierte
   358 ;;		_init_conf
   359 ;;		_lcd_init
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  000DF6                     __ptext0:
   367                           	callstack 0
   368  000DF6                     _main:
   369                           	callstack 27
   370  000DF6                     
   371                           ;maincode.c: 44:     init_conf();
   372  000DF6  ECD8  F009         	call	_init_conf	;wreg free
   373  000DFA                     
   374                           ;maincode.c: 45:     lcd_init();
   375  000DFA  EC31  F009         	call	_lcd_init	;wreg free
   376  000DFE                     
   377                           ;maincode.c: 46:     POS_CURSOR(1,0);
   378  000DFE  0E00               	movlw	0
   379  000E00  6E04               	movwf	POS_CURSOR@columna^0,c
   380  000E02  0E01               	movlw	1
   381  000E04  EC6F  F009         	call	_POS_CURSOR
   382  000E08                     
   383                           ;maincode.c: 47:     ESCRIBE_MENSAJE("Lab-11 Micro UPC", 16);
   384  000E08  0E01               	movlw	low STR_1
   385  000E0A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   386  000E0C  0E08               	movlw	high STR_1
   387  000E0E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   388  000E10  0E10               	movlw	16
   389  000E12  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   390  000E14  EC50  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   391  000E18                     l1592:
   392                           
   393                           ;maincode.c: 49:         ADCON0 = 0x07;
   394  000E18  0E07               	movlw	7
   395  000E1A  6EC2               	movwf	194,c	;volatile
   396  000E1C                     l65:
   397  000E1C  B2C2               	btfsc	194,1,c	;volatile
   398  000E1E  EF13  F007         	goto	u1011
   399  000E22  EF15  F007         	goto	u1010
   400  000E26                     u1011:
   401  000E26  EF0E  F007         	goto	l65
   402  000E2A                     u1010:
   403  000E2A                     
   404                           ;maincode.c: 51:         escalamiento = ADRESH * 0.61;
   405  000E2A  50C4               	movf	196,w,c	;volatile
   406  000E2C  6E01               	movwf	___xxtofl@val^0,c
   407  000E2E  6A02               	clrf	(___xxtofl@val+1)^0,c
   408  000E30  6A03               	clrf	(___xxtofl@val+2)^0,c
   409  000E32  6A04               	clrf	(___xxtofl@val+3)^0,c
   410  000E34  0E01               	movlw	1
   411  000E36  EC21  F006         	call	___xxtofl
   412  000E3A  C001  F00F         	movff	?___xxtofl,___flmul@b
   413  000E3E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   414  000E42  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   415  000E46  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   416  000E4A  0EF6               	movlw	246
   417  000E4C  6E13               	movwf	___flmul@a^0,c
   418  000E4E  0E28               	movlw	40
   419  000E50  6E14               	movwf	(___flmul@a+1)^0,c
   420  000E52  0E1C               	movlw	28
   421  000E54  6E15               	movwf	(___flmul@a+2)^0,c
   422  000E56  0E3F               	movlw	63
   423  000E58  6E16               	movwf	(___flmul@a+3)^0,c
   424  000E5A  EC0C  F004         	call	___flmul	;wreg free
   425  000E5E  C00F  F02D         	movff	?___flmul,_escalamiento
   426  000E62  C010  F02E         	movff	?___flmul+1,_escalamiento+1
   427  000E66  C011  F02F         	movff	?___flmul+2,_escalamiento+2
   428  000E6A  C012  F030         	movff	?___flmul+3,_escalamiento+3
   429  000E6E                     
   430                           ;maincode.c: 52:         CCPR1L = escalamiento;
   431  000E6E  C02D  F001         	movff	_escalamiento,___fltol@f1
   432  000E72  C02E  F002         	movff	_escalamiento+1,___fltol@f1+1
   433  000E76  C02F  F003         	movff	_escalamiento+2,___fltol@f1+2
   434  000E7A  C030  F004         	movff	_escalamiento+3,___fltol@f1+3
   435  000E7E  EC82  F007         	call	___fltol	;wreg free
   436  000E82  5001               	movf	?___fltol^0,w,c
   437  000E84  6EBE               	movwf	190,c	;volatile
   438  000E86                     
   439                           ;maincode.c: 53:         res_ad_ch1 = (((ADRESH << 8) + ADRESL) >> 6) & 0x03FF;
   440  000E86  50C3               	movf	195,w,c	;volatile
   441  000E88  CFC4 F028          	movff	4036,??_main	;volatile
   442  000E8C  6A29               	clrf	(??_main+1)^0,c
   443  000E8E  C028  F029         	movff	??_main,??_main+1
   444  000E92  6A28               	clrf	??_main^0,c
   445  000E94  2628               	addwf	??_main^0,f,c
   446  000E96  0E00               	movlw	0
   447  000E98  2229               	addwfc	(??_main+1)^0,f,c
   448  000E9A  0E06               	movlw	6
   449  000E9C  6E2A               	movwf	(??_main+2)^0,c
   450  000E9E                     u1025:
   451  000E9E  3429               	rlcf	(??_main+1)^0,w,c
   452  000EA0  3229               	rrcf	(??_main+1)^0,f,c
   453  000EA2  3228               	rrcf	??_main^0,f,c
   454  000EA4  2E2A               	decfsz	(??_main+2)^0,f,c
   455  000EA6  EF4F  F007         	goto	u1025
   456  000EAA  0EFF               	movlw	255
   457  000EAC  1428               	andwf	??_main^0,w,c
   458  000EAE  6E2B               	movwf	main@res_ad_ch1^0,c
   459  000EB0  0E03               	movlw	3
   460  000EB2  1429               	andwf	(??_main+1)^0,w,c
   461  000EB4  6E2C               	movwf	(main@res_ad_ch1+1)^0,c
   462  000EB6                     
   463                           ;maincode.c: 54:         convierte(res_ad_ch1);
   464  000EB6  C02B  F00D         	movff	main@res_ad_ch1,convierte@numero
   465  000EBA  C02C  F00E         	movff	main@res_ad_ch1+1,convierte@numero+1
   466  000EBE  EC05  F008         	call	_convierte	;wreg free
   467  000EC2                     
   468                           ;maincode.c: 55:         POS_CURSOR(2,0);
   469  000EC2  0E00               	movlw	0
   470  000EC4  6E04               	movwf	POS_CURSOR@columna^0,c
   471  000EC6  0E02               	movlw	2
   472  000EC8  EC6F  F009         	call	_POS_CURSOR
   473  000ECC                     
   474                           ;maincode.c: 56:         ESCRIBE_MENSAJE("AN1:", 4);
   475  000ECC  0E12               	movlw	low STR_2
   476  000ECE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   477  000ED0  0E08               	movlw	high STR_2
   478  000ED2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   479  000ED4  0E04               	movlw	4
   480  000ED6  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   481  000ED8  EC50  F009         	call	_ESCRIBE_MENSAJE	;wreg free
   482  000EDC                     
   483                           ;maincode.c: 57:         ENVIA_CHAR(millar+0x30);
   484  000EDC  5037               	movf	_millar^0,w,c
   485  000EDE  0F30               	addlw	48
   486  000EE0  ECA6  F009         	call	_ENVIA_CHAR
   487  000EE4                     
   488                           ;maincode.c: 58:         ENVIA_CHAR(centena+0x30);
   489  000EE4  5035               	movf	_centena^0,w,c
   490  000EE6  0F30               	addlw	48
   491  000EE8  ECA6  F009         	call	_ENVIA_CHAR
   492  000EEC                     
   493                           ;maincode.c: 59:         ENVIA_CHAR(decena+0x30);
   494  000EEC  5033               	movf	_decena^0,w,c
   495  000EEE  0F30               	addlw	48
   496  000EF0  ECA6  F009         	call	_ENVIA_CHAR
   497  000EF4                     
   498                           ;maincode.c: 60:         ENVIA_CHAR(unidad+0x30);
   499  000EF4  5031               	movf	_unidad^0,w,c
   500  000EF6  0F30               	addlw	48
   501  000EF8  ECA6  F009         	call	_ENVIA_CHAR
   502  000EFC  EF0C  F007         	goto	l1592
   503  000F00  EF00  F000         	goto	start
   504  000F04                     __end_of_main:
   505                           	callstack 0
   506                           
   507 ;; *************** function _lcd_init *****************
   508 ;; Defined at:
   509 ;;		line 13 in file "maincode.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0       0       0       0       0
   526 ;;      Totals:         2       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        2 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 3
   530 ;; This function calls:
   531 ;;		_BORRAR_LCD
   532 ;;		_CURSOR_HOME
   533 ;;		_CURSOR_ONOFF
   534 ;;		_LCD_CONFIG
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541  001262                     __ptext1:
   542                           	callstack 0
   543  001262                     _lcd_init:
   544                           	callstack 27
   545  001262                     
   546                           ;maincode.c: 14:     TRISD = 0x00;
   547  001262  0E00               	movlw	0
   548  001264  6E95               	movwf	149,c	;volatile
   549  001266                     
   550                           ;maincode.c: 15:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
   551  001266  0E04               	movlw	4
   552  001268  6E06               	movwf	(??_lcd_init+1)^0,c
   553  00126A  0E0C               	movlw	12
   554  00126C  6E05               	movwf	??_lcd_init^0,c
   555  00126E  0E34               	movlw	52
   556  001270                     u1037:
   557  001270  2EE8               	decfsz	wreg,f,c
   558  001272  D7FE               	bra	u1037
   559  001274  2E05               	decfsz	??_lcd_init^0,f,c
   560  001276  D7FC               	bra	u1037
   561  001278  2E06               	decfsz	(??_lcd_init+1)^0,f,c
   562  00127A  D7FA               	bra	u1037
   563  00127C                     
   564                           ;maincode.c: 16:     LCD_CONFIG();
   565  00127C  EC01  F009         	call	_LCD_CONFIG	;wreg free
   566  001280                     
   567                           ;maincode.c: 17:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   568  001280  0EEA               	movlw	234
   569  001282  6E05               	movwf	??_lcd_init^0,c
   570  001284  0EC3               	movlw	195
   571  001286                     u1047:
   572  001286  2EE8               	decfsz	wreg,f,c
   573  001288  D7FE               	bra	u1047
   574  00128A  2E05               	decfsz	??_lcd_init^0,f,c
   575  00128C  D7FC               	bra	u1047
   576  00128E  F000               	nop	
   577  001290                     
   578                           ;maincode.c: 18:     BORRAR_LCD();
   579  001290  EC06  F00A         	call	_BORRAR_LCD	;wreg free
   580  001294                     
   581                           ;maincode.c: 19:     CURSOR_HOME();
   582  001294  EC02  F00A         	call	_CURSOR_HOME	;wreg free
   583  001298                     
   584                           ;maincode.c: 20:     CURSOR_ONOFF(1);
   585  001298  0E01               	movlw	1
   586  00129A  ECC0  F009         	call	_CURSOR_ONOFF
   587  00129E  0012               	return		;funcret
   588  0012A0                     __end_of_lcd_init:
   589                           	callstack 0
   590                           
   591 ;; *************** function _LCD_CONFIG *****************
   592 ;; Defined at:
   593 ;;		line 72 in file "LCD.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   607 ;;      Params:         0       0       0       0       0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0       0       0       0       0
   609 ;;      Temps:          1       0       0       0       0       0       0       0       0
   610 ;;      Totals:         1       0       0       0       0       0       0       0       0
   611 ;;Total ram usage:        1 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 2
   614 ;; This function calls:
   615 ;;		_ENVIA_LCD_CMD
   616 ;;		_ENVIA_NIBBLE
   617 ;; This function is called by:
   618 ;;		_lcd_init
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           	psect	text2
   623  001202                     __ptext2:
   624                           	callstack 0
   625  001202                     _LCD_CONFIG:
   626                           	callstack 27
   627  001202                     
   628                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   629  001202  908C               	bcf	140,0,c	;volatile
   630                           
   631                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   632  001204  928C               	bcf	140,1,c	;volatile
   633  001206                     
   634                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   635  001206  0E30               	movlw	48
   636  001208  ECE7  F009         	call	_ENVIA_NIBBLE
   637  00120C                     
   638                           ;LCD.c: 77:         _delay(24000);
   639  00120C  0E20               	movlw	32
   640  00120E  6E04               	movwf	??_LCD_CONFIG^0,c
   641  001210  0E2A               	movlw	42
   642  001212                     u1057:
   643  001212  2EE8               	decfsz	wreg,f,c
   644  001214  D7FE               	bra	u1057
   645  001216  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   646  001218  D7FC               	bra	u1057
   647  00121A                     
   648                           ;LCD.c: 78:         _delay(24000);
   649  00121A  0E20               	movlw	32
   650  00121C  6E04               	movwf	??_LCD_CONFIG^0,c
   651  00121E  0E2A               	movlw	42
   652  001220                     u1067:
   653  001220  2EE8               	decfsz	wreg,f,c
   654  001222  D7FE               	bra	u1067
   655  001224  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   656  001226  D7FC               	bra	u1067
   657                           
   658                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   659  001228  0E30               	movlw	48
   660  00122A  ECE7  F009         	call	_ENVIA_NIBBLE
   661  00122E                     
   662                           ;LCD.c: 83:  _delay(1200);
   663  00122E  0EF0               	movlw	240
   664  001230                     u1077:
   665  001230  D000               	nop2	
   666  001232  2EE8               	decfsz	wreg,f,c
   667  001234  D7FD               	bra	u1077
   668  001236                     
   669                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   670  001236  0E30               	movlw	48
   671  001238  ECE7  F009         	call	_ENVIA_NIBBLE
   672  00123C                     
   673                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   674  00123C  0E20               	movlw	32
   675  00123E  ECE7  F009         	call	_ENVIA_NIBBLE
   676  001242                     
   677                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   678  001242  0E01               	movlw	1
   679  001244  EC8C  F009         	call	_ENVIA_LCD_CMD
   680  001248                     
   681                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   682  001248  0E28               	movlw	40
   683  00124A  EC8C  F009         	call	_ENVIA_LCD_CMD
   684  00124E                     
   685                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   686  00124E  0E0F               	movlw	15
   687  001250  EC8C  F009         	call	_ENVIA_LCD_CMD
   688  001254                     
   689                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   690  001254  0E06               	movlw	6
   691  001256  EC8C  F009         	call	_ENVIA_LCD_CMD
   692  00125A                     
   693                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   694  00125A  0E01               	movlw	1
   695  00125C  EC8C  F009         	call	_ENVIA_LCD_CMD
   696  001260  0012               	return		;funcret
   697  001262                     __end_of_LCD_CONFIG:
   698                           	callstack 0
   699                           
   700 ;; *************** function _CURSOR_ONOFF *****************
   701 ;; Defined at:
   702 ;;		line 35 in file "LCD.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  estado          1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  estado          1    3[COMRAM] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   716 ;;      Params:         0       0       0       0       0       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0       0       0
   719 ;;      Totals:         1       0       0       0       0       0       0       0       0
   720 ;;Total ram usage:        1 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 2
   723 ;; This function calls:
   724 ;;		_ENVIA_LCD_CMD
   725 ;; This function is called by:
   726 ;;		_lcd_init
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text3
   731  001380                     __ptext3:
   732                           	callstack 0
   733  001380                     _CURSOR_ONOFF:
   734                           	callstack 27
   735                           
   736                           ;incstack = 0
   737                           ;CURSOR_ONOFF@estado stored from wreg
   738  001380  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   739  001382                     
   740                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   741  001382  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   742  001384  A4D8               	btfss	status,2,c
   743  001386  EFC7  F009         	goto	u21
   744  00138A  EFC9  F009         	goto	u20
   745  00138E                     u21:
   746  00138E  EFCC  F009         	goto	l920
   747  001392                     u20:
   748  001392  0E0E               	movlw	14
   749  001394  EC8C  F009         	call	_ENVIA_LCD_CMD
   750  001398                     l920:
   751                           
   752                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   753  001398  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   754  00139A  A4D8               	btfss	status,2,c
   755  00139C  EFD2  F009         	goto	u31
   756  0013A0  EFD4  F009         	goto	u30
   757  0013A4                     u31:
   758  0013A4  EFD7  F009         	goto	l112
   759  0013A8                     u30:
   760  0013A8  0E0C               	movlw	12
   761  0013AA  EC8C  F009         	call	_ENVIA_LCD_CMD
   762  0013AE                     l112:
   763  0013AE  0012               	return		;funcret
   764  0013B0                     __end_of_CURSOR_ONOFF:
   765                           	callstack 0
   766                           
   767 ;; *************** function _CURSOR_HOME *****************
   768 ;; Defined at:
   769 ;;		line 30 in file "LCD.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   783 ;;      Params:         0       0       0       0       0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0       0       0       0       0
   786 ;;      Totals:         0       0       0       0       0       0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 2
   790 ;; This function calls:
   791 ;;		_ENVIA_LCD_CMD
   792 ;; This function is called by:
   793 ;;		_lcd_init
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           	psect	text4
   798  001404                     __ptext4:
   799                           	callstack 0
   800  001404                     _CURSOR_HOME:
   801                           	callstack 27
   802  001404                     
   803                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   804  001404  0E02               	movlw	2
   805  001406  EC8C  F009         	call	_ENVIA_LCD_CMD
   806  00140A  0012               	return		;funcret
   807  00140C                     __end_of_CURSOR_HOME:
   808                           	callstack 0
   809                           
   810 ;; *************** function _BORRAR_LCD *****************
   811 ;; Defined at:
   812 ;;		line 67 in file "LCD.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   826 ;;      Params:         0       0       0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used: 1
   832 ;; Hardware stack levels required when called: 2
   833 ;; This function calls:
   834 ;;		_ENVIA_LCD_CMD
   835 ;; This function is called by:
   836 ;;		_lcd_init
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text5
   841  00140C                     __ptext5:
   842                           	callstack 0
   843  00140C                     _BORRAR_LCD:
   844                           	callstack 27
   845  00140C                     
   846                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   847  00140C  0E01               	movlw	1
   848  00140E  EC8C  F009         	call	_ENVIA_LCD_CMD
   849  001412  0012               	return		;funcret
   850  001414                     __end_of_BORRAR_LCD:
   851                           	callstack 0
   852                           
   853 ;; *************** function _init_conf *****************
   854 ;; Defined at:
   855 ;;		line 23 in file "maincode.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         0       0       0       0       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text6
   883  0013B0                     __ptext6:
   884                           	callstack 0
   885  0013B0                     _init_conf:
   886                           	callstack 30
   887  0013B0                     
   888                           ;maincode.c: 24:     TRISCbits.RC2 = 0;
   889  0013B0  9494               	bcf	148,2,c	;volatile
   890  0013B2                     
   891                           ;maincode.c: 26:     ADCON2 = 0x24;
   892  0013B2  0E24               	movlw	36
   893  0013B4  6EC0               	movwf	192,c	;volatile
   894                           
   895                           ;maincode.c: 27:     ADCON1 = 0x0D;
   896  0013B6  0E0D               	movlw	13
   897  0013B8  6EC1               	movwf	193,c	;volatile
   898  0013BA                     
   899                           ;maincode.c: 28:     ADCON0bits.ADON = 1;
   900  0013BA  80C2               	bsf	194,0,c	;volatile
   901                           
   902                           ;maincode.c: 29:     PR2 = 155;
   903  0013BC  0E9B               	movlw	155
   904  0013BE  6ECB               	movwf	203,c	;volatile
   905                           
   906                           ;maincode.c: 30:     CCPR1L = 77;
   907  0013C0  0E4D               	movlw	77
   908  0013C2  6EBE               	movwf	190,c	;volatile
   909                           
   910                           ;maincode.c: 31:     T2CON = 0x07;
   911  0013C4  0E07               	movlw	7
   912  0013C6  6ECA               	movwf	202,c	;volatile
   913                           
   914                           ;maincode.c: 32:     CCP1CON = 0x0C;
   915  0013C8  0E0C               	movlw	12
   916  0013CA  6EBD               	movwf	189,c	;volatile
   917  0013CC  0012               	return		;funcret
   918  0013CE                     __end_of_init_conf:
   919                           	callstack 0
   920                           
   921 ;; *************** function _convierte *****************
   922 ;; Defined at:
   923 ;;		line 35 in file "maincode.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  numero          2   12[COMRAM] unsigned int 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:         2       0       0       0       0       0       0       0       0
   938 ;;      Locals:         0       0       0       0       0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0
   940 ;;      Totals:         2       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 1
   944 ;; This function calls:
   945 ;;		___lwdiv
   946 ;;		___lwmod
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text7
   953  00100A                     __ptext7:
   954                           	callstack 0
   955  00100A                     _convierte:
   956                           	callstack 29
   957  00100A                     
   958                           ;maincode.c: 36:     millar = (numero %10000) /1000;
   959  00100A  0E27               	movlw	39
   960  00100C  6E04               	movwf	(___lwmod@divisor+1)^0,c
   961  00100E  0E10               	movlw	16
   962  001010  6E03               	movwf	___lwmod@divisor^0,c
   963  001012  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   964  001016  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   965  00101A  ECCF  F008         	call	___lwmod	;wreg free
   966  00101E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   967  001022  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   968  001026  0E03               	movlw	3
   969  001028  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   970  00102A  0EE8               	movlw	232
   971  00102C  6E08               	movwf	___lwdiv@divisor^0,c
   972  00102E  EC5C  F008         	call	___lwdiv	;wreg free
   973  001032  C006  F037         	movff	?___lwdiv,_millar
   974  001036  C007  F038         	movff	?___lwdiv+1,_millar+1
   975                           
   976                           ;maincode.c: 37:     centena = (numero % 1000) / 100;
   977  00103A  0E03               	movlw	3
   978  00103C  6E04               	movwf	(___lwmod@divisor+1)^0,c
   979  00103E  0EE8               	movlw	232
   980  001040  6E03               	movwf	___lwmod@divisor^0,c
   981  001042  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   982  001046  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   983  00104A  ECCF  F008         	call	___lwmod	;wreg free
   984  00104E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   985  001052  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   986  001056  0E00               	movlw	0
   987  001058  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   988  00105A  0E64               	movlw	100
   989  00105C  6E08               	movwf	___lwdiv@divisor^0,c
   990  00105E  EC5C  F008         	call	___lwdiv	;wreg free
   991  001062  C006  F035         	movff	?___lwdiv,_centena
   992  001066  C007  F036         	movff	?___lwdiv+1,_centena+1
   993                           
   994                           ;maincode.c: 38:     decena = (numero % 100) / 10;
   995  00106A  0E00               	movlw	0
   996  00106C  6E04               	movwf	(___lwmod@divisor+1)^0,c
   997  00106E  0E64               	movlw	100
   998  001070  6E03               	movwf	___lwmod@divisor^0,c
   999  001072  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1000  001076  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1001  00107A  ECCF  F008         	call	___lwmod	;wreg free
  1002  00107E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1003  001082  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1004  001086  0E00               	movlw	0
  1005  001088  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1006  00108A  0E0A               	movlw	10
  1007  00108C  6E08               	movwf	___lwdiv@divisor^0,c
  1008  00108E  EC5C  F008         	call	___lwdiv	;wreg free
  1009  001092  C006  F033         	movff	?___lwdiv,_decena
  1010  001096  C007  F034         	movff	?___lwdiv+1,_decena+1
  1011                           
  1012                           ;maincode.c: 39:     unidad = numero % 10;
  1013  00109A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1014  00109E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1015  0010A2  0E00               	movlw	0
  1016  0010A4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1017  0010A6  0E0A               	movlw	10
  1018  0010A8  6E03               	movwf	___lwmod@divisor^0,c
  1019  0010AA  ECCF  F008         	call	___lwmod	;wreg free
  1020  0010AE  C001  F031         	movff	?___lwmod,_unidad
  1021  0010B2  C002  F032         	movff	?___lwmod+1,_unidad+1
  1022  0010B6  0012               	return		;funcret
  1023  0010B8                     __end_of_convierte:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function ___lwmod *****************
  1027 ;; Defined at:
  1028 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  dividend        2    0[COMRAM] unsigned int 
  1031 ;;  divisor         2    2[COMRAM] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  counter         1    4[COMRAM] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2    0[COMRAM] unsigned int 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         4       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1046 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:        5 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; This function calls:
  1050 ;;		Nothing
  1051 ;; This function is called by:
  1052 ;;		_convierte
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text8
  1057  00119E                     __ptext8:
  1058                           	callstack 0
  1059  00119E                     ___lwmod:
  1060                           	callstack 29
  1061  00119E  5003               	movf	___lwmod@divisor^0,w,c
  1062  0011A0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1063  0011A2  B4D8               	btfsc	status,2,c
  1064  0011A4  EFD6  F008         	goto	u591
  1065  0011A8  EFD8  F008         	goto	u590
  1066  0011AC                     u591:
  1067  0011AC  EFFC  F008         	goto	l648
  1068  0011B0                     u590:
  1069  0011B0  0E01               	movlw	1
  1070  0011B2  6E05               	movwf	___lwmod@counter^0,c
  1071  0011B4  EFE0  F008         	goto	l1334
  1072  0011B8                     l1332:
  1073  0011B8  90D8               	bcf	status,0,c
  1074  0011BA  3603               	rlcf	___lwmod@divisor^0,f,c
  1075  0011BC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1076  0011BE  2A05               	incf	___lwmod@counter^0,f,c
  1077  0011C0                     l1334:
  1078  0011C0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1079  0011C2  EFE5  F008         	goto	u601
  1080  0011C6  EFE7  F008         	goto	u600
  1081  0011CA                     u601:
  1082  0011CA  EFDC  F008         	goto	l1332
  1083  0011CE                     u600:
  1084  0011CE                     l1336:
  1085  0011CE  5003               	movf	___lwmod@divisor^0,w,c
  1086  0011D0  5C01               	subwf	___lwmod@dividend^0,w,c
  1087  0011D2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1088  0011D4  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1089  0011D6  A0D8               	btfss	status,0,c
  1090  0011D8  EFF0  F008         	goto	u611
  1091  0011DC  EFF2  F008         	goto	u610
  1092  0011E0                     u611:
  1093  0011E0  EFF6  F008         	goto	l1340
  1094  0011E4                     u610:
  1095  0011E4  5003               	movf	___lwmod@divisor^0,w,c
  1096  0011E6  5E01               	subwf	___lwmod@dividend^0,f,c
  1097  0011E8  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1098  0011EA  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1099  0011EC                     l1340:
  1100  0011EC  90D8               	bcf	status,0,c
  1101  0011EE  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1102  0011F0  3203               	rrcf	___lwmod@divisor^0,f,c
  1103  0011F2  2E05               	decfsz	___lwmod@counter^0,f,c
  1104  0011F4  EFE7  F008         	goto	l1336
  1105  0011F8                     l648:
  1106  0011F8  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1107  0011FC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1108  001200  0012               	return		;funcret
  1109  001202                     __end_of___lwmod:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function ___lwdiv *****************
  1113 ;; Defined at:
  1114 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  dividend        2    5[COMRAM] unsigned int 
  1117 ;;  divisor         2    7[COMRAM] unsigned int 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;  quotient        2    9[COMRAM] unsigned int 
  1120 ;;  counter         1   11[COMRAM] unsigned char 
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  2    5[COMRAM] unsigned int 
  1123 ;; Registers used:
  1124 ;;		wreg, status,2, status,0
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1130 ;;      Params:         4       0       0       0       0       0       0       0       0
  1131 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1133 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1134 ;;Total ram usage:        7 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_convierte
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text9
  1144  0010B8                     __ptext9:
  1145                           	callstack 0
  1146  0010B8                     ___lwdiv:
  1147                           	callstack 29
  1148  0010B8  0E00               	movlw	0
  1149  0010BA  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1150  0010BC  0E00               	movlw	0
  1151  0010BE  6E0A               	movwf	___lwdiv@quotient^0,c
  1152  0010C0  5008               	movf	___lwdiv@divisor^0,w,c
  1153  0010C2  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1154  0010C4  B4D8               	btfsc	status,2,c
  1155  0010C6  EF67  F008         	goto	u561
  1156  0010CA  EF69  F008         	goto	u560
  1157  0010CE                     u561:
  1158  0010CE  EF91  F008         	goto	l638
  1159  0010D2                     u560:
  1160  0010D2  0E01               	movlw	1
  1161  0010D4  6E0C               	movwf	___lwdiv@counter^0,c
  1162  0010D6  EF71  F008         	goto	l1314
  1163  0010DA                     l1312:
  1164  0010DA  90D8               	bcf	status,0,c
  1165  0010DC  3608               	rlcf	___lwdiv@divisor^0,f,c
  1166  0010DE  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1167  0010E0  2A0C               	incf	___lwdiv@counter^0,f,c
  1168  0010E2                     l1314:
  1169  0010E2  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1170  0010E4  EF76  F008         	goto	u571
  1171  0010E8  EF78  F008         	goto	u570
  1172  0010EC                     u571:
  1173  0010EC  EF6D  F008         	goto	l1312
  1174  0010F0                     u570:
  1175  0010F0                     l1316:
  1176  0010F0  90D8               	bcf	status,0,c
  1177  0010F2  360A               	rlcf	___lwdiv@quotient^0,f,c
  1178  0010F4  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1179  0010F6  5008               	movf	___lwdiv@divisor^0,w,c
  1180  0010F8  5C06               	subwf	___lwdiv@dividend^0,w,c
  1181  0010FA  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1182  0010FC  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1183  0010FE  A0D8               	btfss	status,0,c
  1184  001100  EF84  F008         	goto	u581
  1185  001104  EF86  F008         	goto	u580
  1186  001108                     u581:
  1187  001108  EF8B  F008         	goto	l1324
  1188  00110C                     u580:
  1189  00110C  5008               	movf	___lwdiv@divisor^0,w,c
  1190  00110E  5E06               	subwf	___lwdiv@dividend^0,f,c
  1191  001110  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1192  001112  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1193  001114  800A               	bsf	___lwdiv@quotient^0,0,c
  1194  001116                     l1324:
  1195  001116  90D8               	bcf	status,0,c
  1196  001118  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1197  00111A  3208               	rrcf	___lwdiv@divisor^0,f,c
  1198  00111C  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1199  00111E  EF78  F008         	goto	l1316
  1200  001122                     l638:
  1201  001122  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1202  001126  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1203  00112A  0012               	return		;funcret
  1204  00112C                     __end_of___lwdiv:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function ___xxtofl *****************
  1208 ;; Defined at:
  1209 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  sign            1    wreg     unsigned char 
  1212 ;;  val             4    0[COMRAM] long 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  sign            1    8[COMRAM] unsigned char 
  1215 ;;  arg             4   10[COMRAM] unsigned long 
  1216 ;;  exp             1    9[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  4    0[COMRAM] unsigned char 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         4       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1229 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:       14 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text10
  1240  000C42                     __ptext10:
  1241                           	callstack 0
  1242  000C42                     ___xxtofl:
  1243                           	callstack 30
  1244                           
  1245                           ;incstack = 0
  1246                           ;___xxtofl@sign stored from wreg
  1247  000C42  6E09               	movwf	___xxtofl@sign^0,c
  1248  000C44  5009               	movf	___xxtofl@sign^0,w,c
  1249  000C46  B4D8               	btfsc	status,2,c
  1250  000C48  EF28  F006         	goto	u911
  1251  000C4C  EF2A  F006         	goto	u910
  1252  000C50                     u911:
  1253  000C50  EF4C  F006         	goto	l802
  1254  000C54                     u910:
  1255  000C54  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1256  000C56  EF31  F006         	goto	u920
  1257  000C5A  EF2F  F006         	goto	u921
  1258  000C5E                     u921:
  1259  000C5E  EF4C  F006         	goto	l802
  1260  000C62                     u920:
  1261  000C62  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1262  000C66  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1263  000C6A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1264  000C6E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1265  000C72  1E05               	comf	??___xxtofl^0,f,c
  1266  000C74  1E06               	comf	(??___xxtofl+1)^0,f,c
  1267  000C76  1E07               	comf	(??___xxtofl+2)^0,f,c
  1268  000C78  1E08               	comf	(??___xxtofl+3)^0,f,c
  1269  000C7A  2A05               	incf	??___xxtofl^0,f,c
  1270  000C7C  0E00               	movlw	0
  1271  000C7E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1272  000C80  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1273  000C82  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1274  000C84  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1275  000C88  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1276  000C8C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1277  000C90  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1278  000C94  EF54  F006         	goto	l1542
  1279  000C98                     l802:
  1280  000C98  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1281  000C9C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1282  000CA0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1283  000CA4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1284  000CA8                     l1542:
  1285  000CA8  5001               	movf	___xxtofl@val^0,w,c
  1286  000CAA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1287  000CAC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1288  000CAE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1289  000CB0  A4D8               	btfss	status,2,c
  1290  000CB2  EF5D  F006         	goto	u931
  1291  000CB6  EF5F  F006         	goto	u930
  1292  000CBA                     u931:
  1293  000CBA  EF69  F006         	goto	l1548
  1294  000CBE                     u930:
  1295  000CBE  0E00               	movlw	0
  1296  000CC0  6E01               	movwf	?___xxtofl^0,c
  1297  000CC2  0E00               	movlw	0
  1298  000CC4  6E02               	movwf	(?___xxtofl+1)^0,c
  1299  000CC6  0E00               	movlw	0
  1300  000CC8  6E03               	movwf	(?___xxtofl+2)^0,c
  1301  000CCA  0E00               	movlw	0
  1302  000CCC  6E04               	movwf	(?___xxtofl+3)^0,c
  1303  000CCE  EFFA  F006         	goto	l805
  1304  000CD2                     l1548:
  1305  000CD2  0E96               	movlw	150
  1306  000CD4  6E0A               	movwf	___xxtofl@exp^0,c
  1307  000CD6  EF73  F006         	goto	l1552
  1308  000CDA                     l1550:
  1309  000CDA  2A0A               	incf	___xxtofl@exp^0,f,c
  1310  000CDC  90D8               	bcf	status,0,c
  1311  000CDE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1312  000CE0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1313  000CE2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1314  000CE4  320B               	rrcf	___xxtofl@arg^0,f,c
  1315  000CE6                     l1552:
  1316  000CE6  0E00               	movlw	0
  1317  000CE8  140B               	andwf	___xxtofl@arg^0,w,c
  1318  000CEA  6E05               	movwf	??___xxtofl^0,c
  1319  000CEC  0E00               	movlw	0
  1320  000CEE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1321  000CF0  6E06               	movwf	(??___xxtofl+1)^0,c
  1322  000CF2  0E00               	movlw	0
  1323  000CF4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1324  000CF6  6E07               	movwf	(??___xxtofl+2)^0,c
  1325  000CF8  0EFE               	movlw	254
  1326  000CFA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1327  000CFC  6E08               	movwf	(??___xxtofl+3)^0,c
  1328  000CFE  5005               	movf	??___xxtofl^0,w,c
  1329  000D00  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1330  000D02  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1331  000D04  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1332  000D06  A4D8               	btfss	status,2,c
  1333  000D08  EF88  F006         	goto	u941
  1334  000D0C  EF8A  F006         	goto	u940
  1335  000D10                     u941:
  1336  000D10  EF6D  F006         	goto	l1550
  1337  000D14                     u940:
  1338  000D14  EF98  F006         	goto	l809
  1339  000D18                     l1554:
  1340  000D18  2A0A               	incf	___xxtofl@exp^0,f,c
  1341  000D1A  0E01               	movlw	1
  1342  000D1C  260B               	addwf	___xxtofl@arg^0,f,c
  1343  000D1E  0E00               	movlw	0
  1344  000D20  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1345  000D22  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1346  000D24  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1347  000D26  90D8               	bcf	status,0,c
  1348  000D28  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1349  000D2A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1350  000D2C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1351  000D2E  320B               	rrcf	___xxtofl@arg^0,f,c
  1352  000D30                     l809:
  1353  000D30  0E00               	movlw	0
  1354  000D32  140B               	andwf	___xxtofl@arg^0,w,c
  1355  000D34  6E05               	movwf	??___xxtofl^0,c
  1356  000D36  0E00               	movlw	0
  1357  000D38  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1358  000D3A  6E06               	movwf	(??___xxtofl+1)^0,c
  1359  000D3C  0E00               	movlw	0
  1360  000D3E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1361  000D40  6E07               	movwf	(??___xxtofl+2)^0,c
  1362  000D42  0EFF               	movlw	255
  1363  000D44  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1364  000D46  6E08               	movwf	(??___xxtofl+3)^0,c
  1365  000D48  5005               	movf	??___xxtofl^0,w,c
  1366  000D4A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1367  000D4C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1368  000D4E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1369  000D50  A4D8               	btfss	status,2,c
  1370  000D52  EFAD  F006         	goto	u951
  1371  000D56  EFAF  F006         	goto	u950
  1372  000D5A                     u951:
  1373  000D5A  EF8C  F006         	goto	l1554
  1374  000D5E                     u950:
  1375  000D5E  EFB7  F006         	goto	l1562
  1376  000D62                     l1560:
  1377  000D62  060A               	decf	___xxtofl@exp^0,f,c
  1378  000D64  90D8               	bcf	status,0,c
  1379  000D66  360B               	rlcf	___xxtofl@arg^0,f,c
  1380  000D68  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1381  000D6A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1382  000D6C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1383  000D6E                     l1562:
  1384  000D6E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1385  000D70  EFBC  F006         	goto	u961
  1386  000D74  EFBE  F006         	goto	u960
  1387  000D78                     u961:
  1388  000D78  EFC6  F006         	goto	l816
  1389  000D7C                     u960:
  1390  000D7C  0E02               	movlw	2
  1391  000D7E  600A               	cpfslt	___xxtofl@exp^0,c
  1392  000D80  EFC4  F006         	goto	u971
  1393  000D84  EFC6  F006         	goto	u970
  1394  000D88                     u971:
  1395  000D88  EFB1  F006         	goto	l1560
  1396  000D8C                     u970:
  1397  000D8C                     l816:
  1398  000D8C  B00A               	btfsc	___xxtofl@exp^0,0,c
  1399  000D8E  EFCB  F006         	goto	u981
  1400  000D92  EFCD  F006         	goto	u980
  1401  000D96                     u981:
  1402  000D96  EFCE  F006         	goto	l1568
  1403  000D9A                     u980:
  1404  000D9A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1405  000D9C                     l1568:
  1406  000D9C  90D8               	bcf	status,0,c
  1407  000D9E  320A               	rrcf	___xxtofl@exp^0,f,c
  1408  000DA0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1409  000DA4  6A06               	clrf	(??___xxtofl+1)^0,c
  1410  000DA6  6A07               	clrf	(??___xxtofl+2)^0,c
  1411  000DA8  6A08               	clrf	(??___xxtofl+3)^0,c
  1412  000DAA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1413  000DAE  6A07               	clrf	(??___xxtofl+2)^0,c
  1414  000DB0  6A06               	clrf	(??___xxtofl+1)^0,c
  1415  000DB2  6A05               	clrf	??___xxtofl^0,c
  1416  000DB4  5005               	movf	??___xxtofl^0,w,c
  1417  000DB6  120B               	iorwf	___xxtofl@arg^0,f,c
  1418  000DB8  5006               	movf	(??___xxtofl+1)^0,w,c
  1419  000DBA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1420  000DBC  5007               	movf	(??___xxtofl+2)^0,w,c
  1421  000DBE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1422  000DC0  5008               	movf	(??___xxtofl+3)^0,w,c
  1423  000DC2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1424  000DC4  5009               	movf	___xxtofl@sign^0,w,c
  1425  000DC6  B4D8               	btfsc	status,2,c
  1426  000DC8  EFE8  F006         	goto	u991
  1427  000DCC  EFEA  F006         	goto	u990
  1428  000DD0                     u991:
  1429  000DD0  EFF2  F006         	goto	l1578
  1430  000DD4                     u990:
  1431  000DD4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1432  000DD6  EFF1  F006         	goto	u1000
  1433  000DDA  EFEF  F006         	goto	u1001
  1434  000DDE                     u1001:
  1435  000DDE  EFF2  F006         	goto	l1578
  1436  000DE2                     u1000:
  1437  000DE2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1438  000DE4                     l1578:
  1439  000DE4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1440  000DE8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1441  000DEC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1442  000DF0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1443  000DF4                     l805:
  1444  000DF4  0012               	return		;funcret
  1445  000DF6                     __end_of___xxtofl:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function ___fltol *****************
  1449 ;; Defined at:
  1450 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  f1              4    0[COMRAM] unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  exp1            1    9[COMRAM] unsigned char 
  1455 ;;  sign1           1    8[COMRAM] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  4    0[COMRAM] long 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1465 ;;      Params:         4       0       0       0       0       0       0       0       0
  1466 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1467 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1468 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1469 ;;Total ram usage:       10 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text11
  1479  000F04                     __ptext11:
  1480                           	callstack 0
  1481  000F04                     ___fltol:
  1482                           	callstack 30
  1483  000F04  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1484  000F06  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1485  000F08  6E0A               	movwf	___fltol@exp1^0,c
  1486  000F0A  500A               	movf	___fltol@exp1^0,w,c
  1487  000F0C  A4D8               	btfss	status,2,c
  1488  000F0E  EF8B  F007         	goto	u841
  1489  000F12  EF8D  F007         	goto	u840
  1490  000F16                     u841:
  1491  000F16  EF97  F007         	goto	l1498
  1492  000F1A                     u840:
  1493  000F1A                     l1494:
  1494  000F1A  0E00               	movlw	0
  1495  000F1C  6E01               	movwf	?___fltol^0,c
  1496  000F1E  0E00               	movlw	0
  1497  000F20  6E02               	movwf	(?___fltol+1)^0,c
  1498  000F22  0E00               	movlw	0
  1499  000F24  6E03               	movwf	(?___fltol+2)^0,c
  1500  000F26  0E00               	movlw	0
  1501  000F28  6E04               	movwf	(?___fltol+3)^0,c
  1502  000F2A  EF04  F008         	goto	l444
  1503  000F2E                     l1498:
  1504  000F2E  C001  F005         	movff	___fltol@f1,??___fltol
  1505  000F32  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1506  000F36  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1507  000F3A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1508  000F3E  0E20               	movlw	32
  1509  000F40  EFA7  F007         	goto	u850
  1510  000F44                     u855:
  1511  000F44  90D8               	bcf	status,0,c
  1512  000F46  3208               	rrcf	(??___fltol+3)^0,f,c
  1513  000F48  3207               	rrcf	(??___fltol+2)^0,f,c
  1514  000F4A  3206               	rrcf	(??___fltol+1)^0,f,c
  1515  000F4C  3205               	rrcf	??___fltol^0,f,c
  1516  000F4E                     u850:
  1517  000F4E  2EE8               	decfsz	wreg,f,c
  1518  000F50  EFA2  F007         	goto	u855
  1519  000F54  5005               	movf	??___fltol^0,w,c
  1520  000F56  6E09               	movwf	___fltol@sign1^0,c
  1521  000F58  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1522  000F5A  0EFF               	movlw	255
  1523  000F5C  1601               	andwf	___fltol@f1^0,f,c
  1524  000F5E  0EFF               	movlw	255
  1525  000F60  1602               	andwf	(___fltol@f1+1)^0,f,c
  1526  000F62  0EFF               	movlw	255
  1527  000F64  1603               	andwf	(___fltol@f1+2)^0,f,c
  1528  000F66  0E00               	movlw	0
  1529  000F68  1604               	andwf	(___fltol@f1+3)^0,f,c
  1530  000F6A  0E96               	movlw	150
  1531  000F6C  5E0A               	subwf	___fltol@exp1^0,f,c
  1532  000F6E  BE0A               	btfsc	___fltol@exp1^0,7,c
  1533  000F70  EFBE  F007         	goto	u860
  1534  000F74  EFBC  F007         	goto	u861
  1535  000F78                     u861:
  1536  000F78  EFD4  F007         	goto	l1518
  1537  000F7C                     u860:
  1538  000F7C  500A               	movf	___fltol@exp1^0,w,c
  1539  000F7E  0A80               	xorlw	128
  1540  000F80  0F97               	addlw	151
  1541  000F82  B0D8               	btfsc	status,0,c
  1542  000F84  EFC6  F007         	goto	u871
  1543  000F88  EFC8  F007         	goto	u870
  1544  000F8C                     u871:
  1545  000F8C  EFCA  F007         	goto	l1514
  1546  000F90                     u870:
  1547  000F90  EF8D  F007         	goto	l1494
  1548  000F94                     l1514:
  1549  000F94  90D8               	bcf	status,0,c
  1550  000F96  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1551  000F98  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1552  000F9A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1553  000F9C  3201               	rrcf	___fltol@f1^0,f,c
  1554  000F9E  3E0A               	incfsz	___fltol@exp1^0,f,c
  1555  000FA0  EFCA  F007         	goto	l1514
  1556  000FA4  EFEC  F007         	goto	l1528
  1557  000FA8                     l1518:
  1558  000FA8  0E1F               	movlw	31
  1559  000FAA  640A               	cpfsgt	___fltol@exp1^0,c
  1560  000FAC  EFDA  F007         	goto	u881
  1561  000FB0  EFDC  F007         	goto	u880
  1562  000FB4                     u881:
  1563  000FB4  EFE4  F007         	goto	l1526
  1564  000FB8                     u880:
  1565  000FB8  EF8D  F007         	goto	l1494
  1566  000FBC                     l1524:
  1567  000FBC  90D8               	bcf	status,0,c
  1568  000FBE  3601               	rlcf	___fltol@f1^0,f,c
  1569  000FC0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1570  000FC2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1571  000FC4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1572  000FC6  060A               	decf	___fltol@exp1^0,f,c
  1573  000FC8                     l1526:
  1574  000FC8  500A               	movf	___fltol@exp1^0,w,c
  1575  000FCA  A4D8               	btfss	status,2,c
  1576  000FCC  EFEA  F007         	goto	u891
  1577  000FD0  EFEC  F007         	goto	u890
  1578  000FD4                     u891:
  1579  000FD4  EFDE  F007         	goto	l1524
  1580  000FD8                     u890:
  1581  000FD8                     l1528:
  1582  000FD8  5009               	movf	___fltol@sign1^0,w,c
  1583  000FDA  B4D8               	btfsc	status,2,c
  1584  000FDC  EFF2  F007         	goto	u901
  1585  000FE0  EFF4  F007         	goto	u900
  1586  000FE4                     u901:
  1587  000FE4  EFFC  F007         	goto	l1532
  1588  000FE8                     u900:
  1589  000FE8  1E04               	comf	(___fltol@f1+3)^0,f,c
  1590  000FEA  1E03               	comf	(___fltol@f1+2)^0,f,c
  1591  000FEC  1E02               	comf	(___fltol@f1+1)^0,f,c
  1592  000FEE  6C01               	negf	___fltol@f1^0,c
  1593  000FF0  0E00               	movlw	0
  1594  000FF2  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1595  000FF4  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1596  000FF6  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1597  000FF8                     l1532:
  1598  000FF8  C001  F001         	movff	___fltol@f1,?___fltol
  1599  000FFC  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1600  001000  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1601  001004  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1602  001008                     l444:
  1603  001008  0012               	return		;funcret
  1604  00100A                     __end_of___fltol:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function ___flmul *****************
  1608 ;; Defined at:
  1609 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  b               4   14[COMRAM] long 
  1612 ;;  a               4   18[COMRAM] long 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  prod            4   33[COMRAM] struct .
  1615 ;;  grs             4   27[COMRAM] unsigned long 
  1616 ;;  temp            2   37[COMRAM] struct .
  1617 ;;  bexp            1   32[COMRAM] unsigned char 
  1618 ;;  aexp            1   31[COMRAM] unsigned char 
  1619 ;;  sign            1   26[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  4   14[COMRAM] unsigned char 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, prodl, prodh
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         8       0       0       0       0       0       0       0       0
  1630 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1632 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:       25 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text12
  1643  000818                     __ptext12:
  1644                           	callstack 0
  1645  000818                     ___flmul:
  1646                           	callstack 30
  1647  000818  5012               	movf	(___flmul@b+3)^0,w,c
  1648  00081A  0B80               	andlw	128
  1649  00081C  6E1B               	movwf	___flmul@sign^0,c
  1650  00081E  5012               	movf	(___flmul@b+3)^0,w,c
  1651  000820  2412               	addwf	(___flmul@b+3)^0,w,c
  1652  000822  6E21               	movwf	___flmul@bexp^0,c
  1653  000824  AE11               	btfss	(___flmul@b+2)^0,7,c
  1654  000826  EF17  F004         	goto	u651
  1655  00082A  EF19  F004         	goto	u650
  1656  00082E                     u651:
  1657  00082E  EF1A  F004         	goto	l1368
  1658  000832                     u650:
  1659  000832  8021               	bsf	___flmul@bexp^0,0,c
  1660  000834                     l1368:
  1661  000834  5021               	movf	___flmul@bexp^0,w,c
  1662  000836  B4D8               	btfsc	status,2,c
  1663  000838  EF20  F004         	goto	u661
  1664  00083C  EF22  F004         	goto	u660
  1665  000840                     u661:
  1666  000840  EF35  F004         	goto	l1376
  1667  000844                     u660:
  1668  000844  2821               	incf	___flmul@bexp^0,w,c
  1669  000846  A4D8               	btfss	status,2,c
  1670  000848  EF28  F004         	goto	u671
  1671  00084C  EF2A  F004         	goto	u670
  1672  000850                     u671:
  1673  000850  EF32  F004         	goto	l1374
  1674  000854                     u670:
  1675  000854  0E00               	movlw	0
  1676  000856  6E0F               	movwf	___flmul@b^0,c
  1677  000858  0E00               	movlw	0
  1678  00085A  6E10               	movwf	(___flmul@b+1)^0,c
  1679  00085C  0E00               	movlw	0
  1680  00085E  6E11               	movwf	(___flmul@b+2)^0,c
  1681  000860  0E00               	movlw	0
  1682  000862  6E12               	movwf	(___flmul@b+3)^0,c
  1683  000864                     l1374:
  1684  000864  8E11               	bsf	(___flmul@b+2)^0,7,c
  1685  000866  EF3D  F004         	goto	l1378
  1686  00086A                     l1376:
  1687  00086A  0E00               	movlw	0
  1688  00086C  6E0F               	movwf	___flmul@b^0,c
  1689  00086E  0E00               	movlw	0
  1690  000870  6E10               	movwf	(___flmul@b+1)^0,c
  1691  000872  0E00               	movlw	0
  1692  000874  6E11               	movwf	(___flmul@b+2)^0,c
  1693  000876  0E00               	movlw	0
  1694  000878  6E12               	movwf	(___flmul@b+3)^0,c
  1695  00087A                     l1378:
  1696  00087A  5016               	movf	(___flmul@a+3)^0,w,c
  1697  00087C  0B80               	andlw	128
  1698  00087E  1A1B               	xorwf	___flmul@sign^0,f,c
  1699  000880  5016               	movf	(___flmul@a+3)^0,w,c
  1700  000882  2416               	addwf	(___flmul@a+3)^0,w,c
  1701  000884  6E20               	movwf	___flmul@aexp^0,c
  1702  000886  AE15               	btfss	(___flmul@a+2)^0,7,c
  1703  000888  EF48  F004         	goto	u681
  1704  00088C  EF4A  F004         	goto	u680
  1705  000890                     u681:
  1706  000890  EF4B  F004         	goto	l1386
  1707  000894                     u680:
  1708  000894  8020               	bsf	___flmul@aexp^0,0,c
  1709  000896                     l1386:
  1710  000896  5020               	movf	___flmul@aexp^0,w,c
  1711  000898  B4D8               	btfsc	status,2,c
  1712  00089A  EF51  F004         	goto	u691
  1713  00089E  EF53  F004         	goto	u690
  1714  0008A2                     u691:
  1715  0008A2  EF66  F004         	goto	l1394
  1716  0008A6                     u690:
  1717  0008A6  2820               	incf	___flmul@aexp^0,w,c
  1718  0008A8  A4D8               	btfss	status,2,c
  1719  0008AA  EF59  F004         	goto	u701
  1720  0008AE  EF5B  F004         	goto	u700
  1721  0008B2                     u701:
  1722  0008B2  EF63  F004         	goto	l1392
  1723  0008B6                     u700:
  1724  0008B6  0E00               	movlw	0
  1725  0008B8  6E13               	movwf	___flmul@a^0,c
  1726  0008BA  0E00               	movlw	0
  1727  0008BC  6E14               	movwf	(___flmul@a+1)^0,c
  1728  0008BE  0E00               	movlw	0
  1729  0008C0  6E15               	movwf	(___flmul@a+2)^0,c
  1730  0008C2  0E00               	movlw	0
  1731  0008C4  6E16               	movwf	(___flmul@a+3)^0,c
  1732  0008C6                     l1392:
  1733  0008C6  8E15               	bsf	(___flmul@a+2)^0,7,c
  1734  0008C8  EF6E  F004         	goto	l761
  1735  0008CC                     l1394:
  1736  0008CC  0E00               	movlw	0
  1737  0008CE  6E13               	movwf	___flmul@a^0,c
  1738  0008D0  0E00               	movlw	0
  1739  0008D2  6E14               	movwf	(___flmul@a+1)^0,c
  1740  0008D4  0E00               	movlw	0
  1741  0008D6  6E15               	movwf	(___flmul@a+2)^0,c
  1742  0008D8  0E00               	movlw	0
  1743  0008DA  6E16               	movwf	(___flmul@a+3)^0,c
  1744  0008DC                     l761:
  1745  0008DC  5020               	movf	___flmul@aexp^0,w,c
  1746  0008DE  B4D8               	btfsc	status,2,c
  1747  0008E0  EF74  F004         	goto	u711
  1748  0008E4  EF76  F004         	goto	u710
  1749  0008E8                     u711:
  1750  0008E8  EF7E  F004         	goto	l1398
  1751  0008EC                     u710:
  1752  0008EC  5021               	movf	___flmul@bexp^0,w,c
  1753  0008EE  A4D8               	btfss	status,2,c
  1754  0008F0  EF7C  F004         	goto	u721
  1755  0008F4  EF7E  F004         	goto	u720
  1756  0008F8                     u721:
  1757  0008F8  EF88  F004         	goto	l1402
  1758  0008FC                     u720:
  1759  0008FC                     l1398:
  1760  0008FC  0E00               	movlw	0
  1761  0008FE  6E0F               	movwf	?___flmul^0,c
  1762  000900  0E00               	movlw	0
  1763  000902  6E10               	movwf	(?___flmul+1)^0,c
  1764  000904  0E00               	movlw	0
  1765  000906  6E11               	movwf	(?___flmul+2)^0,c
  1766  000908  0E00               	movlw	0
  1767  00090A  6E12               	movwf	(?___flmul+3)^0,c
  1768  00090C  EF20  F006         	goto	l765
  1769  000910                     l1402:
  1770  000910  5015               	movf	(___flmul@a+2)^0,w,c
  1771  000912  020F               	mulwf	___flmul@b^0,c
  1772  000914  CFF3 F026          	movff	prodl,___flmul@temp
  1773  000918  CFF4 F027          	movff	prodh,___flmul@temp+1
  1774  00091C  5026               	movf	___flmul@temp^0,w,c
  1775  00091E  6E1C               	movwf	___flmul@grs^0,c
  1776  000920  6A1D               	clrf	(___flmul@grs+1)^0,c
  1777  000922  6A1E               	clrf	(___flmul@grs+2)^0,c
  1778  000924  6A1F               	clrf	(___flmul@grs+3)^0,c
  1779  000926  5027               	movf	(___flmul@temp+1)^0,w,c
  1780  000928  6E22               	movwf	___flmul@prod^0,c
  1781  00092A  6A23               	clrf	(___flmul@prod+1)^0,c
  1782  00092C  6A24               	clrf	(___flmul@prod+2)^0,c
  1783  00092E  6A25               	clrf	(___flmul@prod+3)^0,c
  1784  000930  5014               	movf	(___flmul@a+1)^0,w,c
  1785  000932  0210               	mulwf	(___flmul@b+1)^0,c
  1786  000934  CFF3 F026          	movff	prodl,___flmul@temp
  1787  000938  CFF4 F027          	movff	prodh,___flmul@temp+1
  1788  00093C  5026               	movf	___flmul@temp^0,w,c
  1789  00093E  261C               	addwf	___flmul@grs^0,f,c
  1790  000940  0E00               	movlw	0
  1791  000942  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1792  000944  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1793  000946  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1794  000948  5027               	movf	(___flmul@temp+1)^0,w,c
  1795  00094A  2622               	addwf	___flmul@prod^0,f,c
  1796  00094C  0E00               	movlw	0
  1797  00094E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1798  000950  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1799  000952  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1800  000954  5013               	movf	___flmul@a^0,w,c
  1801  000956  0211               	mulwf	(___flmul@b+2)^0,c
  1802  000958  CFF3 F026          	movff	prodl,___flmul@temp
  1803  00095C  CFF4 F027          	movff	prodh,___flmul@temp+1
  1804  000960  5026               	movf	___flmul@temp^0,w,c
  1805  000962  261C               	addwf	___flmul@grs^0,f,c
  1806  000964  0E00               	movlw	0
  1807  000966  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1808  000968  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1809  00096A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1810  00096C  5027               	movf	(___flmul@temp+1)^0,w,c
  1811  00096E  2622               	addwf	___flmul@prod^0,f,c
  1812  000970  0E00               	movlw	0
  1813  000972  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1814  000974  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1815  000976  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1816  000978  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1817  00097C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1818  000980  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1819  000984  6A1C               	clrf	___flmul@grs^0,c
  1820  000986  5013               	movf	___flmul@a^0,w,c
  1821  000988  0210               	mulwf	(___flmul@b+1)^0,c
  1822  00098A  CFF3 F026          	movff	prodl,___flmul@temp
  1823  00098E  CFF4 F027          	movff	prodh,___flmul@temp+1
  1824  000992  5026               	movf	___flmul@temp^0,w,c
  1825  000994  261C               	addwf	___flmul@grs^0,f,c
  1826  000996  5027               	movf	(___flmul@temp+1)^0,w,c
  1827  000998  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1828  00099A  0E00               	movlw	0
  1829  00099C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1830  00099E  0E00               	movlw	0
  1831  0009A0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1832  0009A2  5014               	movf	(___flmul@a+1)^0,w,c
  1833  0009A4  020F               	mulwf	___flmul@b^0,c
  1834  0009A6  CFF3 F026          	movff	prodl,___flmul@temp
  1835  0009AA  CFF4 F027          	movff	prodh,___flmul@temp+1
  1836  0009AE  5026               	movf	___flmul@temp^0,w,c
  1837  0009B0  261C               	addwf	___flmul@grs^0,f,c
  1838  0009B2  5027               	movf	(___flmul@temp+1)^0,w,c
  1839  0009B4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1840  0009B6  0E00               	movlw	0
  1841  0009B8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1842  0009BA  0E00               	movlw	0
  1843  0009BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1844  0009BE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1845  0009C2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1846  0009C6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1847  0009CA  6A1C               	clrf	___flmul@grs^0,c
  1848  0009CC  5013               	movf	___flmul@a^0,w,c
  1849  0009CE  020F               	mulwf	___flmul@b^0,c
  1850  0009D0  CFF3 F026          	movff	prodl,___flmul@temp
  1851  0009D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  1852  0009D8  5026               	movf	___flmul@temp^0,w,c
  1853  0009DA  261C               	addwf	___flmul@grs^0,f,c
  1854  0009DC  5027               	movf	(___flmul@temp+1)^0,w,c
  1855  0009DE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1856  0009E0  0E00               	movlw	0
  1857  0009E2  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1858  0009E4  0E00               	movlw	0
  1859  0009E6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1860  0009E8  5015               	movf	(___flmul@a+2)^0,w,c
  1861  0009EA  0210               	mulwf	(___flmul@b+1)^0,c
  1862  0009EC  CFF3 F026          	movff	prodl,___flmul@temp
  1863  0009F0  CFF4 F027          	movff	prodh,___flmul@temp+1
  1864  0009F4  5026               	movf	___flmul@temp^0,w,c
  1865  0009F6  2622               	addwf	___flmul@prod^0,f,c
  1866  0009F8  5027               	movf	(___flmul@temp+1)^0,w,c
  1867  0009FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1868  0009FC  0E00               	movlw	0
  1869  0009FE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1870  000A00  0E00               	movlw	0
  1871  000A02  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1872  000A04  5014               	movf	(___flmul@a+1)^0,w,c
  1873  000A06  0211               	mulwf	(___flmul@b+2)^0,c
  1874  000A08  CFF3 F026          	movff	prodl,___flmul@temp
  1875  000A0C  CFF4 F027          	movff	prodh,___flmul@temp+1
  1876  000A10  5026               	movf	___flmul@temp^0,w,c
  1877  000A12  2622               	addwf	___flmul@prod^0,f,c
  1878  000A14  5027               	movf	(___flmul@temp+1)^0,w,c
  1879  000A16  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1880  000A18  0E00               	movlw	0
  1881  000A1A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1882  000A1C  0E00               	movlw	0
  1883  000A1E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1884  000A20  5015               	movf	(___flmul@a+2)^0,w,c
  1885  000A22  0211               	mulwf	(___flmul@b+2)^0,c
  1886  000A24  CFF3 F026          	movff	prodl,___flmul@temp
  1887  000A28  CFF4 F027          	movff	prodh,___flmul@temp+1
  1888  000A2C  5026               	movf	___flmul@temp^0,w,c
  1889  000A2E  6E17               	movwf	??___flmul^0,c
  1890  000A30  5027               	movf	(___flmul@temp+1)^0,w,c
  1891  000A32  6E18               	movwf	(??___flmul+1)^0,c
  1892  000A34  6A19               	clrf	(??___flmul+2)^0,c
  1893  000A36  6A1A               	clrf	(??___flmul+3)^0,c
  1894  000A38  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1895  000A3C  C018  F019         	movff	??___flmul+1,??___flmul+2
  1896  000A40  C017  F018         	movff	??___flmul,??___flmul+1
  1897  000A44  6A17               	clrf	??___flmul^0,c
  1898  000A46  5017               	movf	??___flmul^0,w,c
  1899  000A48  2622               	addwf	___flmul@prod^0,f,c
  1900  000A4A  5018               	movf	(??___flmul+1)^0,w,c
  1901  000A4C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1902  000A4E  5019               	movf	(??___flmul+2)^0,w,c
  1903  000A50  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1904  000A52  501A               	movf	(??___flmul+3)^0,w,c
  1905  000A54  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1906  000A56  C01C  F017         	movff	___flmul@grs,??___flmul
  1907  000A5A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1908  000A5E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1909  000A62  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1910  000A66  0E19               	movlw	25
  1911  000A68  EF3B  F005         	goto	u730
  1912  000A6C                     u735:
  1913  000A6C  90D8               	bcf	status,0,c
  1914  000A6E  321A               	rrcf	(??___flmul+3)^0,f,c
  1915  000A70  3219               	rrcf	(??___flmul+2)^0,f,c
  1916  000A72  3218               	rrcf	(??___flmul+1)^0,f,c
  1917  000A74  3217               	rrcf	??___flmul^0,f,c
  1918  000A76                     u730:
  1919  000A76  2EE8               	decfsz	wreg,f,c
  1920  000A78  EF36  F005         	goto	u735
  1921  000A7C  5017               	movf	??___flmul^0,w,c
  1922  000A7E  2622               	addwf	___flmul@prod^0,f,c
  1923  000A80  5018               	movf	(??___flmul+1)^0,w,c
  1924  000A82  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1925  000A84  5019               	movf	(??___flmul+2)^0,w,c
  1926  000A86  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1927  000A88  501A               	movf	(??___flmul+3)^0,w,c
  1928  000A8A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1929  000A8C  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1930  000A90  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1931  000A94  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1932  000A98  6A1C               	clrf	___flmul@grs^0,c
  1933  000A9A  5020               	movf	___flmul@aexp^0,w,c
  1934  000A9C  C021  F017         	movff	___flmul@bexp,??___flmul
  1935  000AA0  6A18               	clrf	(??___flmul+1)^0,c
  1936  000AA2  2617               	addwf	??___flmul^0,f,c
  1937  000AA4  0E00               	movlw	0
  1938  000AA6  2218               	addwfc	(??___flmul+1)^0,f,c
  1939  000AA8  0E82               	movlw	130
  1940  000AAA  2417               	addwf	??___flmul^0,w,c
  1941  000AAC  6E26               	movwf	___flmul@temp^0,c
  1942  000AAE  0EFF               	movlw	255
  1943  000AB0  2018               	addwfc	(??___flmul+1)^0,w,c
  1944  000AB2  6E27               	movwf	(___flmul@temp+1)^0,c
  1945  000AB4  EF71  F005         	goto	l1450
  1946  000AB8                     l1444:
  1947  000AB8  90D8               	bcf	status,0,c
  1948  000ABA  3622               	rlcf	___flmul@prod^0,f,c
  1949  000ABC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1950  000ABE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1951  000AC0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1952  000AC2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1953  000AC4  EF66  F005         	goto	u741
  1954  000AC8  EF68  F005         	goto	u740
  1955  000ACC                     u741:
  1956  000ACC  EF69  F005         	goto	l768
  1957  000AD0                     u740:
  1958  000AD0  8022               	bsf	___flmul@prod^0,0,c
  1959  000AD2                     l768:
  1960  000AD2  90D8               	bcf	status,0,c
  1961  000AD4  361C               	rlcf	___flmul@grs^0,f,c
  1962  000AD6  361D               	rlcf	(___flmul@grs+1)^0,f,c
  1963  000AD8  361E               	rlcf	(___flmul@grs+2)^0,f,c
  1964  000ADA  361F               	rlcf	(___flmul@grs+3)^0,f,c
  1965  000ADC  0626               	decf	___flmul@temp^0,f,c
  1966  000ADE  A0D8               	btfss	status,0,c
  1967  000AE0  0627               	decf	(___flmul@temp+1)^0,f,c
  1968  000AE2                     l1450:
  1969  000AE2  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1970  000AE4  EF76  F005         	goto	u751
  1971  000AE8  EF78  F005         	goto	u750
  1972  000AEC                     u751:
  1973  000AEC  EF5C  F005         	goto	l1444
  1974  000AF0                     u750:
  1975  000AF0  0E00               	movlw	0
  1976  000AF2  6E20               	movwf	___flmul@aexp^0,c
  1977  000AF4  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1978  000AF6  EF7F  F005         	goto	u761
  1979  000AFA  EF81  F005         	goto	u760
  1980  000AFE                     u761:
  1981  000AFE  EFA5  F005         	goto	l770
  1982  000B02                     u760:
  1983  000B02  0EFF               	movlw	255
  1984  000B04  141C               	andwf	___flmul@grs^0,w,c
  1985  000B06  6E17               	movwf	??___flmul^0,c
  1986  000B08  0EFF               	movlw	255
  1987  000B0A  141D               	andwf	(___flmul@grs+1)^0,w,c
  1988  000B0C  6E18               	movwf	(??___flmul+1)^0,c
  1989  000B0E  0EFF               	movlw	255
  1990  000B10  141E               	andwf	(___flmul@grs+2)^0,w,c
  1991  000B12  6E19               	movwf	(??___flmul+2)^0,c
  1992  000B14  0E7F               	movlw	127
  1993  000B16  141F               	andwf	(___flmul@grs+3)^0,w,c
  1994  000B18  6E1A               	movwf	(??___flmul+3)^0,c
  1995  000B1A  5017               	movf	??___flmul^0,w,c
  1996  000B1C  1018               	iorwf	(??___flmul+1)^0,w,c
  1997  000B1E  1019               	iorwf	(??___flmul+2)^0,w,c
  1998  000B20  101A               	iorwf	(??___flmul+3)^0,w,c
  1999  000B22  B4D8               	btfsc	status,2,c
  2000  000B24  EF96  F005         	goto	u771
  2001  000B28  EF98  F005         	goto	u770
  2002  000B2C                     u771:
  2003  000B2C  EF9C  F005         	goto	l771
  2004  000B30                     u770:
  2005  000B30                     l1458:
  2006  000B30  0E01               	movlw	1
  2007  000B32  6E20               	movwf	___flmul@aexp^0,c
  2008  000B34  EFA5  F005         	goto	l770
  2009  000B38                     l771:
  2010  000B38  A022               	btfss	___flmul@prod^0,0,c
  2011  000B3A  EFA1  F005         	goto	u781
  2012  000B3E  EFA3  F005         	goto	u780
  2013  000B42                     u781:
  2014  000B42  EFA5  F005         	goto	l770
  2015  000B46                     u780:
  2016  000B46  EF98  F005         	goto	l1458
  2017  000B4A                     l770:
  2018  000B4A  5020               	movf	___flmul@aexp^0,w,c
  2019  000B4C  B4D8               	btfsc	status,2,c
  2020  000B4E  EFAB  F005         	goto	u791
  2021  000B52  EFAD  F005         	goto	u790
  2022  000B56                     u791:
  2023  000B56  EFD1  F005         	goto	l1470
  2024  000B5A                     u790:
  2025  000B5A  0E01               	movlw	1
  2026  000B5C  2622               	addwf	___flmul@prod^0,f,c
  2027  000B5E  0E00               	movlw	0
  2028  000B60  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2029  000B62  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2030  000B64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2031  000B66  A025               	btfss	(___flmul@prod+3)^0,0,c
  2032  000B68  EFB8  F005         	goto	u801
  2033  000B6C  EFBA  F005         	goto	u800
  2034  000B70                     u801:
  2035  000B70  EFD1  F005         	goto	l1470
  2036  000B74                     u800:
  2037  000B74  C022  F017         	movff	___flmul@prod,??___flmul
  2038  000B78  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2039  000B7C  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2040  000B80  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2041  000B84  341A               	rlcf	(??___flmul+3)^0,w,c
  2042  000B86  321A               	rrcf	(??___flmul+3)^0,f,c
  2043  000B88  3219               	rrcf	(??___flmul+2)^0,f,c
  2044  000B8A  3218               	rrcf	(??___flmul+1)^0,f,c
  2045  000B8C  3217               	rrcf	??___flmul^0,f,c
  2046  000B8E  C017  F022         	movff	??___flmul,___flmul@prod
  2047  000B92  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2048  000B96  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2049  000B9A  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2050  000B9E  4A26               	infsnz	___flmul@temp^0,f,c
  2051  000BA0  2A27               	incf	(___flmul@temp+1)^0,f,c
  2052  000BA2                     l1470:
  2053  000BA2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2054  000BA4  EFDC  F005         	goto	u811
  2055  000BA8  5027               	movf	(___flmul@temp+1)^0,w,c
  2056  000BAA  E108               	bnz	u810
  2057  000BAC  2826               	incf	___flmul@temp^0,w,c
  2058  000BAE  A0D8               	btfss	status,0,c
  2059  000BB0  EFDC  F005         	goto	u811
  2060  000BB4  EFDE  F005         	goto	u810
  2061  000BB8                     u811:
  2062  000BB8  EFE8  F005         	goto	l1474
  2063  000BBC                     u810:
  2064  000BBC  0E00               	movlw	0
  2065  000BBE  6E22               	movwf	___flmul@prod^0,c
  2066  000BC0  0E00               	movlw	0
  2067  000BC2  6E23               	movwf	(___flmul@prod+1)^0,c
  2068  000BC4  0E80               	movlw	128
  2069  000BC6  6E24               	movwf	(___flmul@prod+2)^0,c
  2070  000BC8  0E7F               	movlw	127
  2071  000BCA  6E25               	movwf	(___flmul@prod+3)^0,c
  2072  000BCC  EF16  F006         	goto	l1486
  2073  000BD0                     l1474:
  2074  000BD0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2075  000BD2  EFF5  F005         	goto	u820
  2076  000BD6  5027               	movf	(___flmul@temp+1)^0,w,c
  2077  000BD8  E106               	bnz	u821
  2078  000BDA  0426               	decf	___flmul@temp^0,w,c
  2079  000BDC  B0D8               	btfsc	status,0,c
  2080  000BDE  EFF3  F005         	goto	u821
  2081  000BE2  EFF5  F005         	goto	u820
  2082  000BE6                     u821:
  2083  000BE6  EF01  F006         	goto	l778
  2084  000BEA                     u820:
  2085  000BEA  0E00               	movlw	0
  2086  000BEC  6E22               	movwf	___flmul@prod^0,c
  2087  000BEE  0E00               	movlw	0
  2088  000BF0  6E23               	movwf	(___flmul@prod+1)^0,c
  2089  000BF2  0E00               	movlw	0
  2090  000BF4  6E24               	movwf	(___flmul@prod+2)^0,c
  2091  000BF6  0E00               	movlw	0
  2092  000BF8  6E25               	movwf	(___flmul@prod+3)^0,c
  2093  000BFA  0E00               	movlw	0
  2094  000BFC  6E1B               	movwf	___flmul@sign^0,c
  2095  000BFE  EF16  F006         	goto	l1486
  2096  000C02                     l778:
  2097  000C02  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2098  000C06  0EFF               	movlw	255
  2099  000C08  1622               	andwf	___flmul@prod^0,f,c
  2100  000C0A  0EFF               	movlw	255
  2101  000C0C  1623               	andwf	(___flmul@prod+1)^0,f,c
  2102  000C0E  0E7F               	movlw	127
  2103  000C10  1624               	andwf	(___flmul@prod+2)^0,f,c
  2104  000C12  0E00               	movlw	0
  2105  000C14  1625               	andwf	(___flmul@prod+3)^0,f,c
  2106  000C16  A021               	btfss	___flmul@bexp^0,0,c
  2107  000C18  EF10  F006         	goto	u831
  2108  000C1C  EF12  F006         	goto	u830
  2109  000C20                     u831:
  2110  000C20  EF13  F006         	goto	l1484
  2111  000C24                     u830:
  2112  000C24  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2113  000C26                     l1484:
  2114  000C26  90D8               	bcf	status,0,c
  2115  000C28  3021               	rrcf	___flmul@bexp^0,w,c
  2116  000C2A  6E25               	movwf	(___flmul@prod+3)^0,c
  2117  000C2C                     l1486:
  2118  000C2C  501B               	movf	___flmul@sign^0,w,c
  2119  000C2E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2120  000C30  C022  F00F         	movff	___flmul@prod,?___flmul
  2121  000C34  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2122  000C38  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2123  000C3C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2124  000C40                     l765:
  2125  000C40  0012               	return		;funcret
  2126  000C42                     __end_of___flmul:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _POS_CURSOR *****************
  2130 ;; Defined at:
  2131 ;;		line 6 in file "LCD.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  fila            1    wreg     unsigned char 
  2134 ;;  columna         1    3[COMRAM] unsigned char 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  fila            1    4[COMRAM] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2146 ;;      Params:         1       0       0       0       0       0       0       0       0
  2147 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2149 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2150 ;;Total ram usage:        2 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 2
  2153 ;; This function calls:
  2154 ;;		_ENVIA_LCD_CMD
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text13
  2161  0012DE                     __ptext13:
  2162                           	callstack 0
  2163  0012DE                     _POS_CURSOR:
  2164                           	callstack 28
  2165                           
  2166                           ;incstack = 0
  2167                           ;POS_CURSOR@fila stored from wreg
  2168  0012DE  6E05               	movwf	POS_CURSOR@fila^0,c
  2169  0012E0                     
  2170                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2171  0012E0  0405               	decf	POS_CURSOR@fila^0,w,c
  2172  0012E2  A4D8               	btfss	status,2,c
  2173  0012E4  EF76  F009         	goto	u621
  2174  0012E8  EF78  F009         	goto	u620
  2175  0012EC                     u621:
  2176  0012EC  EF7E  F009         	goto	l1350
  2177  0012F0                     u620:
  2178  0012F0                     
  2179                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2180  0012F0  5004               	movf	POS_CURSOR@columna^0,w,c
  2181  0012F2  0F80               	addlw	128
  2182  0012F4  EC8C  F009         	call	_ENVIA_LCD_CMD
  2183                           
  2184                           ;LCD.c: 11:  }
  2185  0012F8  EF8B  F009         	goto	l94
  2186  0012FC                     l1350:
  2187  0012FC  0E02               	movlw	2
  2188  0012FE  1805               	xorwf	POS_CURSOR@fila^0,w,c
  2189  001300  A4D8               	btfss	status,2,c
  2190  001302  EF85  F009         	goto	u631
  2191  001306  EF87  F009         	goto	u630
  2192  00130A                     u631:
  2193  00130A  EF8B  F009         	goto	l94
  2194  00130E                     u630:
  2195  00130E                     
  2196                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2197  00130E  5004               	movf	POS_CURSOR@columna^0,w,c
  2198  001310  0FC0               	addlw	192
  2199  001312  EC8C  F009         	call	_ENVIA_LCD_CMD
  2200  001316                     l94:
  2201  001316  0012               	return		;funcret
  2202  001318                     __end_of_POS_CURSOR:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _ENVIA_LCD_CMD *****************
  2206 ;; Defined at:
  2207 ;;		line 104 in file "LCD.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  dato            1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  dato            1    1[COMRAM] unsigned char 
  2212 ;;  aux             1    2[COMRAM] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2222 ;;      Params:         0       0       0       0       0       0       0       0       0
  2223 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2225 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2226 ;;Total ram usage:        2 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 1
  2229 ;; This function calls:
  2230 ;;		_ENVIA_NIBBLE
  2231 ;;		_LEER_LCD
  2232 ;; This function is called by:
  2233 ;;		_POS_CURSOR
  2234 ;;		_CURSOR_HOME
  2235 ;;		_CURSOR_ONOFF
  2236 ;;		_BORRAR_LCD
  2237 ;;		_LCD_CONFIG
  2238 ;;		_BLINK_CURSOR
  2239 ;;		_DISPLAY_ONOFF
  2240 ;;		_GENERACARACTER
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text14
  2245  001318                     __ptext14:
  2246                           	callstack 0
  2247  001318                     _ENVIA_LCD_CMD:
  2248                           	callstack 27
  2249                           
  2250                           ;incstack = 0
  2251                           ;ENVIA_LCD_CMD@dato stored from wreg
  2252  001318  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2253  00131A                     
  2254                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2255  00131A  908C               	bcf	140,0,c	;volatile
  2256  00131C                     
  2257                           ;LCD.c: 108:  LEER_LCD();
  2258  00131C  EC96  F008         	call	_LEER_LCD	;wreg free
  2259  001320                     
  2260                           ;LCD.c: 109:  TRISD = 0b00000000;
  2261  001320  0E00               	movlw	0
  2262  001322  6E95               	movwf	149,c	;volatile
  2263  001324                     
  2264                           ;LCD.c: 111:         _delay(1200);
  2265  001324  0EF0               	movlw	240
  2266  001326                     u1087:
  2267  001326  D000               	nop2	
  2268  001328  2EE8               	decfsz	wreg,f,c
  2269  00132A  D7FD               	bra	u1087
  2270  00132C                     
  2271                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2272  00132C  928C               	bcf	140,1,c	;volatile
  2273  00132E                     
  2274                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2275  00132E  948C               	bcf	140,2,c	;volatile
  2276  001330                     
  2277                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2278  001330  908C               	bcf	140,0,c	;volatile
  2279  001332                     
  2280                           ;LCD.c: 115:  aux = dato & 0xF0;
  2281  001332  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2282  001334  0BF0               	andlw	240
  2283  001336  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2284  001338                     
  2285                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2286  001338  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2287  00133A  ECE7  F009         	call	_ENVIA_NIBBLE
  2288  00133E                     
  2289                           ;LCD.c: 117:  aux = dato<<4;
  2290  00133E  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2291  001340  0BF0               	andlw	240
  2292  001342  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2293  001344                     
  2294                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2295  001344  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2296  001346  ECE7  F009         	call	_ENVIA_NIBBLE
  2297  00134A  0012               	return		;funcret
  2298  00134C                     __end_of_ENVIA_LCD_CMD:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _ESCRIBE_MENSAJE *****************
  2302 ;; Defined at:
  2303 ;;		line 41 in file "LCD.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2306 ;;		 -> STR_2(5), STR_1(17), 
  2307 ;;  tam             1    5[COMRAM] unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  i               1    8[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2319 ;;      Params:         3       0       0       0       0       0       0       0       0
  2320 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2321 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2322 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2323 ;;Total ram usage:        6 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 2
  2326 ;; This function calls:
  2327 ;;		_ENVIA_CHAR
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text15
  2334  0012A0                     __ptext15:
  2335                           	callstack 0
  2336  0012A0                     _ESCRIBE_MENSAJE:
  2337                           	callstack 28
  2338  0012A0                     
  2339                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2340  0012A0  0E00               	movlw	0
  2341  0012A2  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2342                           
  2343                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2344  0012A4  0E00               	movlw	0
  2345  0012A6  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  2346  0012A8  EF65  F009         	goto	l1360
  2347  0012AC                     l1356:
  2348                           
  2349                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2350  0012AC  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2351  0012AE  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2352  0012B0  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  2353  0012B2  0E00               	movlw	0
  2354  0012B4  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2355  0012B6  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2356  0012B8  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2357  0012BC  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2358  0012C0                     	if	0	;tblptru may be non-zero
  2359  0012C0                     	endif
  2360  0012C0                     	if	0	;tblptru may be non-zero
  2361  0012C0                     	endif
  2362  0012C0  0008               	tblrd		*
  2363  0012C2  50F5               	movf	tablat,w,c
  2364  0012C4  ECA6  F009         	call	_ENVIA_CHAR
  2365  0012C8                     
  2366                           ;LCD.c: 47:  }
  2367  0012C8  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2368  0012CA                     l1360:
  2369  0012CA  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2370  0012CC  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2371  0012CE  A0D8               	btfss	status,0,c
  2372  0012D0  EF6C  F009         	goto	u641
  2373  0012D4  EF6E  F009         	goto	u640
  2374  0012D8                     u641:
  2375  0012D8  EF56  F009         	goto	l1356
  2376  0012DC                     u640:
  2377  0012DC  0012               	return		;funcret
  2378  0012DE                     __end_of_ESCRIBE_MENSAJE:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _ENVIA_CHAR *****************
  2382 ;; Defined at:
  2383 ;;		line 50 in file "LCD.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  dato            1    wreg     unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  dato            1    1[COMRAM] unsigned char 
  2388 ;;  aux             1    2[COMRAM] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0
  2399 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2402 ;;Total ram usage:        2 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 1
  2405 ;; This function calls:
  2406 ;;		_ENVIA_NIBBLE
  2407 ;;		_LEER_LCD
  2408 ;; This function is called by:
  2409 ;;		_main
  2410 ;;		_ESCRIBE_MENSAJE
  2411 ;;		_GENERACARACTER
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text16
  2416  00134C                     __ptext16:
  2417                           	callstack 0
  2418  00134C                     _ENVIA_CHAR:
  2419                           	callstack 28
  2420                           
  2421                           ;incstack = 0
  2422                           ;ENVIA_CHAR@dato stored from wreg
  2423  00134C  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2424  00134E                     
  2425                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2426  00134E  808C               	bsf	140,0,c	;volatile
  2427  001350                     
  2428                           ;LCD.c: 54:  LEER_LCD();
  2429  001350  EC96  F008         	call	_LEER_LCD	;wreg free
  2430  001354                     
  2431                           ;LCD.c: 55:  TRISD = 0x00;
  2432  001354  0E00               	movlw	0
  2433  001356  6E95               	movwf	149,c	;volatile
  2434  001358                     
  2435                           ;LCD.c: 56:         _delay(1200);
  2436  001358  0EF0               	movlw	240
  2437  00135A                     u1097:
  2438  00135A  D000               	nop2	
  2439  00135C  2EE8               	decfsz	wreg,f,c
  2440  00135E  D7FD               	bra	u1097
  2441  001360                     
  2442                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2443  001360  928C               	bcf	140,1,c	;volatile
  2444  001362                     
  2445                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2446  001362  948C               	bcf	140,2,c	;volatile
  2447  001364                     
  2448                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2449  001364  808C               	bsf	140,0,c	;volatile
  2450  001366                     
  2451                           ;LCD.c: 61:  aux = dato & 0xF0;
  2452  001366  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2453  001368  0BF0               	andlw	240
  2454  00136A  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2455  00136C                     
  2456                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2457  00136C  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2458  00136E  ECE7  F009         	call	_ENVIA_NIBBLE
  2459  001372                     
  2460                           ;LCD.c: 63:  aux = dato << 4;
  2461  001372  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2462  001374  0BF0               	andlw	240
  2463  001376  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2464  001378                     
  2465                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2466  001378  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2467  00137A  ECE7  F009         	call	_ENVIA_NIBBLE
  2468  00137E  0012               	return		;funcret
  2469  001380                     __end_of_ENVIA_CHAR:
  2470                           	callstack 0
  2471                           
  2472 ;; *************** function _LEER_LCD *****************
  2473 ;; Defined at:
  2474 ;;		line 121 in file "LCD.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  aux             1    0[COMRAM] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0
  2489 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2491 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		_ENVIA_CHAR
  2498 ;;		_ENVIA_LCD_CMD
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           	psect	text17
  2503  00112C                     __ptext17:
  2504                           	callstack 0
  2505  00112C                     _LEER_LCD:
  2506                           	callstack 27
  2507  00112C                     
  2508                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2509  00112C  0EF8               	movlw	248
  2510  00112E  6E95               	movwf	149,c	;volatile
  2511  001130                     
  2512                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2513  001130  908C               	bcf	140,0,c	;volatile
  2514  001132                     
  2515                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2516  001132  828C               	bsf	140,1,c	;volatile
  2517  001134                     
  2518                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2519  001134  848C               	bsf	140,2,c	;volatile
  2520  001136                     
  2521                           ;LCD.c: 128:         _delay(1200);
  2522  001136  0EF0               	movlw	240
  2523  001138                     u1107:
  2524  001138  D000               	nop2	
  2525  00113A  2EE8               	decfsz	wreg,f,c
  2526  00113C  D7FD               	bra	u1107
  2527  00113E                     
  2528                           ;LCD.c: 130:  aux = PORTD;
  2529  00113E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2530  001142                     
  2531                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2532  001142  948C               	bcf	140,2,c	;volatile
  2533  001144                     
  2534                           ;LCD.c: 132:         _delay(1200);
  2535  001144  0EF0               	movlw	240
  2536  001146                     u1117:
  2537  001146  D000               	nop2	
  2538  001148  2EE8               	decfsz	wreg,f,c
  2539  00114A  D7FD               	bra	u1117
  2540  00114C                     
  2541                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2542  00114C  848C               	bsf	140,2,c	;volatile
  2543  00114E                     
  2544                           ;LCD.c: 135:         _delay(1200);
  2545  00114E  0EF0               	movlw	240
  2546  001150                     u1127:
  2547  001150  D000               	nop2	
  2548  001152  2EE8               	decfsz	wreg,f,c
  2549  001154  D7FD               	bra	u1127
  2550  001156                     
  2551                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2552  001156  948C               	bcf	140,2,c	;volatile
  2553  001158                     l842:
  2554                           
  2555                           ;LCD.c: 138:  aux = aux & 0x80;
  2556  001158  5001               	movf	LEER_LCD@aux^0,w,c
  2557  00115A  0B80               	andlw	128
  2558  00115C  6E01               	movwf	LEER_LCD@aux^0,c
  2559                           
  2560                           ;LCD.c: 139:  while(aux == 0x80)
  2561  00115E  EFC5  F008         	goto	l856
  2562  001162                     l137:
  2563                           
  2564                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2565  001162  848C               	bsf	140,2,c	;volatile
  2566  001164                     
  2567                           ;LCD.c: 142:             _delay(1200);
  2568  001164  0EF0               	movlw	240
  2569  001166                     u1137:
  2570  001166  D000               	nop2	
  2571  001168  2EE8               	decfsz	wreg,f,c
  2572  00116A  D7FD               	bra	u1137
  2573  00116C                     
  2574                           ;LCD.c: 143:             aux = PORTD;
  2575  00116C  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2576  001170                     
  2577                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2578  001170  948C               	bcf	140,2,c	;volatile
  2579                           
  2580                           ;LCD.c: 145:             _delay(1200);
  2581  001172  0EF0               	movlw	240
  2582  001174                     u1147:
  2583  001174  D000               	nop2	
  2584  001176  2EE8               	decfsz	wreg,f,c
  2585  001178  D7FD               	bra	u1147
  2586  00117A                     
  2587                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2588  00117A  848C               	bsf	140,2,c	;volatile
  2589                           
  2590                           ;LCD.c: 147:             _delay(1200);
  2591  00117C  0EF0               	movlw	240
  2592  00117E                     u1157:
  2593  00117E  D000               	nop2	
  2594  001180  2EE8               	decfsz	wreg,f,c
  2595  001182  D7FD               	bra	u1157
  2596  001184                     
  2597                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2598  001184  948C               	bcf	140,2,c	;volatile
  2599  001186  EFAC  F008         	goto	l842
  2600  00118A                     l856:
  2601                           
  2602                           ;LCD.c: 139:  while(aux == 0x80)
  2603  00118A  0E80               	movlw	128
  2604  00118C  1801               	xorwf	LEER_LCD@aux^0,w,c
  2605  00118E  B4D8               	btfsc	status,2,c
  2606  001190  EFCC  F008         	goto	u11
  2607  001194  EFCE  F008         	goto	u10
  2608  001198                     u11:
  2609  001198  EFB1  F008         	goto	l137
  2610  00119C                     u10:
  2611  00119C  0012               	return		;funcret
  2612  00119E                     __end_of_LEER_LCD:
  2613                           	callstack 0
  2614                           
  2615 ;; *************** function _ENVIA_NIBBLE *****************
  2616 ;; Defined at:
  2617 ;;		line 93 in file "LCD.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  dato            1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  dato            1    0[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      void 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        1 bytes
  2636 ;; Hardware stack levels used: 1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_ENVIA_CHAR
  2641 ;;		_LCD_CONFIG
  2642 ;;		_ENVIA_LCD_CMD
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text18
  2647  0013CE                     __ptext18:
  2648                           	callstack 0
  2649  0013CE                     _ENVIA_NIBBLE:
  2650                           	callstack 28
  2651                           
  2652                           ;incstack = 0
  2653                           ;ENVIA_NIBBLE@dato stored from wreg
  2654  0013CE  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2655  0013D0                     
  2656                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2657  0013D0  0E0F               	movlw	15
  2658  0013D2  168C               	andwf	140,f,c	;volatile
  2659                           
  2660                           ;LCD.c: 96:  dato &= 0xF0;
  2661  0013D4  0EF0               	movlw	240
  2662  0013D6  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2663                           
  2664                           ;LCD.c: 97:  LATD|= dato;
  2665  0013D8  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2666  0013DA  128C               	iorwf	140,f,c	;volatile
  2667  0013DC                     
  2668                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2669  0013DC  848C               	bsf	140,2,c	;volatile
  2670  0013DE                     
  2671                           ;LCD.c: 100:         _delay(1200);
  2672  0013DE  0EF0               	movlw	240
  2673  0013E0                     u1167:
  2674  0013E0  D000               	nop2	
  2675  0013E2  2EE8               	decfsz	wreg,f,c
  2676  0013E4  D7FD               	bra	u1167
  2677  0013E6                     
  2678                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2679  0013E6  948C               	bcf	140,2,c	;volatile
  2680  0013E8  0012               	return		;funcret
  2681  0013EA                     __end_of_ENVIA_NIBBLE:
  2682                           	callstack 0
  2683                           
  2684                           	psect	rparam
  2685  0000                     
  2686                           	psect	idloc
  2687                           
  2688                           ;Config register IDLOC0 @ 0x200000
  2689                           ;	unspecified, using default values
  2690  200000                     	org	2097152
  2691  200000  FF                 	db	255
  2692                           
  2693                           ;Config register IDLOC1 @ 0x200001
  2694                           ;	unspecified, using default values
  2695  200001                     	org	2097153
  2696  200001  FF                 	db	255
  2697                           
  2698                           ;Config register IDLOC2 @ 0x200002
  2699                           ;	unspecified, using default values
  2700  200002                     	org	2097154
  2701  200002  FF                 	db	255
  2702                           
  2703                           ;Config register IDLOC3 @ 0x200003
  2704                           ;	unspecified, using default values
  2705  200003                     	org	2097155
  2706  200003  FF                 	db	255
  2707                           
  2708                           ;Config register IDLOC4 @ 0x200004
  2709                           ;	unspecified, using default values
  2710  200004                     	org	2097156
  2711  200004  FF                 	db	255
  2712                           
  2713                           ;Config register IDLOC5 @ 0x200005
  2714                           ;	unspecified, using default values
  2715  200005                     	org	2097157
  2716  200005  FF                 	db	255
  2717                           
  2718                           ;Config register IDLOC6 @ 0x200006
  2719                           ;	unspecified, using default values
  2720  200006                     	org	2097158
  2721  200006  FF                 	db	255
  2722                           
  2723                           ;Config register IDLOC7 @ 0x200007
  2724                           ;	unspecified, using default values
  2725  200007                     	org	2097159
  2726  200007  FF                 	db	255
  2727                           
  2728                           	psect	config
  2729                           
  2730                           ;Config register CONFIG1L @ 0x300000
  2731                           ;	PLL Prescaler Selection bits
  2732                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2733                           ;	System Clock Postscaler Selection bits
  2734                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2735                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2736                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2737  300000                     	org	3145728
  2738  300000  00                 	db	0
  2739                           
  2740                           ;Config register CONFIG1H @ 0x300001
  2741                           ;	Oscillator Selection bits
  2742                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2743                           ;	Fail-Safe Clock Monitor Enable bit
  2744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2745                           ;	Internal/External Oscillator Switchover bit
  2746                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2747  300001                     	org	3145729
  2748  300001  02                 	db	2
  2749                           
  2750                           ;Config register CONFIG2L @ 0x300002
  2751                           ;	Power-up Timer Enable bit
  2752                           ;	PWRT = ON, PWRT enabled
  2753                           ;	Brown-out Reset Enable bits
  2754                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2755                           ;	Brown-out Reset Voltage bits
  2756                           ;	BORV = 3, Minimum setting 2.05V
  2757                           ;	USB Voltage Regulator Enable bit
  2758                           ;	VREGEN = OFF, USB voltage regulator disabled
  2759  300002                     	org	3145730
  2760  300002  18                 	db	24
  2761                           
  2762                           ;Config register CONFIG2H @ 0x300003
  2763                           ;	Watchdog Timer Enable bit
  2764                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2765                           ;	Watchdog Timer Postscale Select bits
  2766                           ;	WDTPS = 32768, 1:32768
  2767  300003                     	org	3145731
  2768  300003  1E                 	db	30
  2769                           
  2770                           ; Padding undefined space
  2771  300004                     	org	3145732
  2772  300004  FF                 	db	255
  2773                           
  2774                           ;Config register CONFIG3H @ 0x300005
  2775                           ;	CCP2 MUX bit
  2776                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2777                           ;	PORTB A/D Enable bit
  2778                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2779                           ;	Low-Power Timer 1 Oscillator Enable bit
  2780                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2781                           ;	MCLR Pin Enable bit
  2782                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2783  300005                     	org	3145733
  2784  300005  81                 	db	129
  2785                           
  2786                           ;Config register CONFIG4L @ 0x300006
  2787                           ;	Stack Full/Underflow Reset Enable bit
  2788                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2789                           ;	Single-Supply ICSP Enable bit
  2790                           ;	LVP = OFF, Single-Supply ICSP disabled
  2791                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2792                           ;	ICPRT = OFF, ICPORT disabled
  2793                           ;	Extended Instruction Set Enable bit
  2794                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2795                           ;	Background Debugger Enable bit
  2796                           ;	DEBUG = 0x1, unprogrammed default
  2797  300006                     	org	3145734
  2798  300006  81                 	db	129
  2799                           
  2800                           ; Padding undefined space
  2801  300007                     	org	3145735
  2802  300007  FF                 	db	255
  2803                           
  2804                           ;Config register CONFIG5L @ 0x300008
  2805                           ;	Code Protection bit
  2806                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2807                           ;	Code Protection bit
  2808                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2809                           ;	Code Protection bit
  2810                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2811                           ;	Code Protection bit
  2812                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2813  300008                     	org	3145736
  2814  300008  0F                 	db	15
  2815                           
  2816                           ;Config register CONFIG5H @ 0x300009
  2817                           ;	Boot Block Code Protection bit
  2818                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2819                           ;	Data EEPROM Code Protection bit
  2820                           ;	CPD = OFF, Data EEPROM is not code-protected
  2821  300009                     	org	3145737
  2822  300009  C0                 	db	192
  2823                           
  2824                           ;Config register CONFIG6L @ 0x30000A
  2825                           ;	Write Protection bit
  2826                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2827                           ;	Write Protection bit
  2828                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2829                           ;	Write Protection bit
  2830                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2831                           ;	Write Protection bit
  2832                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2833  30000A                     	org	3145738
  2834  30000A  0F                 	db	15
  2835                           
  2836                           ;Config register CONFIG6H @ 0x30000B
  2837                           ;	Configuration Register Write Protection bit
  2838                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2839                           ;	Boot Block Write Protection bit
  2840                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2841                           ;	Data EEPROM Write Protection bit
  2842                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2843  30000B                     	org	3145739
  2844  30000B  E0                 	db	224
  2845                           
  2846                           ;Config register CONFIG7L @ 0x30000C
  2847                           ;	Table Read Protection bit
  2848                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2849                           ;	Table Read Protection bit
  2850                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2851                           ;	Table Read Protection bit
  2852                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2853                           ;	Table Read Protection bit
  2854                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2855  30000C                     	org	3145740
  2856  30000C  0F                 	db	15
  2857                           
  2858                           ;Config register CONFIG7H @ 0x30000D
  2859                           ;	Boot Block Table Read Protection bit
  2860                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2861  30000D                     	org	3145741
  2862  30000D  40                 	db	64
  2863                           tosu	equ	0xFFF
  2864                           tosh	equ	0xFFE
  2865                           tosl	equ	0xFFD
  2866                           stkptr	equ	0xFFC
  2867                           pclatu	equ	0xFFB
  2868                           pclath	equ	0xFFA
  2869                           pcl	equ	0xFF9
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodh	equ	0xFF4
  2875                           prodl	equ	0xFF3
  2876                           indf0	equ	0xFEF
  2877                           postinc0	equ	0xFEE
  2878                           postdec0	equ	0xFED
  2879                           preinc0	equ	0xFEC
  2880                           plusw0	equ	0xFEB
  2881                           fsr0h	equ	0xFEA
  2882                           fsr0l	equ	0xFE9
  2883                           wreg	equ	0xFE8
  2884                           indf1	equ	0xFE7
  2885                           postinc1	equ	0xFE6
  2886                           postdec1	equ	0xFE5
  2887                           preinc1	equ	0xFE4
  2888                           plusw1	equ	0xFE3
  2889                           fsr1h	equ	0xFE2
  2890                           fsr1l	equ	0xFE1
  2891                           bsr	equ	0xFE0
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           preinc2	equ	0xFDC
  2896                           plusw2	equ	0xFDB
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5540
                                             39 COMRAM     5     5      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _convierte
                          _init_conf
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _init_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1549
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _init_conf
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      38       1       58.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      38      20        0.0%
DATA                 0      0      38       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 27 21:07:04 2021

                      l53 129E                        l56 13CC                        l65 0E1C  
                      l59 10B6                        l94 1316                        u10 119C  
                      u11 1198                        u20 1392                        u21 138E  
                      u30 13A8                        u31 13A4             ENVIA_CHAR@aux 0003  
                     l112 13AE                       l121 137E                       l130 13E8  
                     l107 140A                       l124 1412                       l133 134A  
                     l118 12DC                       l127 1260                       l137 1162  
                     l139 119C                       l444 1008                       l802 0C98  
                     l820 112C                       l900 123C                       l805 0DF4  
                     l645 112A                       l830 113E                       l822 1130  
                     l638 1122                       l910 125A                       l902 1242  
                     l655 1200                       l840 1156                       l832 1142  
                     l824 1132                       l816 0D8C                       l648 11F8  
                     l912 140C                       l920 1398                       l904 1248  
                     l761 08DC                       l809 0D30                       l850 117A  
                     l842 1158                       l834 1144                       l826 1134  
                     l930 1358                       l770 0B4A                       l914 1404  
                     l922 13A8                       l906 124E                       l771 0B38  
                     l860 13DC                       l852 1184                       l844 1164  
                     l836 114C                       l828 1136                       l940 136C  
                     l932 1360                       l924 134E                       l916 1382  
                     l908 1254                       l765 0C40                       l862 13DE  
                     l846 116C                       l838 114E                       l942 1372  
                     l934 1362                       l926 1350                       l870 1320  
                     l918 1392                       l864 13E6                       l848 1170  
                     l856 118A                       l944 1378                       l936 1364  
                     l928 1354                       l880 1332                       l872 1324  
                     l768 0AD2                       l858 13D0                       l938 1366  
                     l882 1338                       l874 132C                       l866 131A  
                     l778 0C02                       l890 1206                       l884 133E  
                     l876 132E                       l868 131C                       l892 120C  
                     l886 1344                       l878 1330                       l894 121A  
                     l990 1280                       l896 122E                       l888 1202  
                     l992 1290                       l984 1262                       l898 1236  
                     l994 1294                       l986 1266                       l996 1298  
                     l988 127C                       l998 13B0                       _PR2 000FCB  
                     u600 11CE                       u601 11CA                       u610 11E4  
                     u611 11E0                       u620 12F0                       u700 08B6  
                     u621 12EC                       u701 08B2                       u630 130E  
                     u710 08EC                       u631 130A                       u711 08E8  
                     u640 12DC                       u800 0B74                       u720 08FC  
                     u560 10D2                       u641 12D8                       u801 0B70  
                     u721 08F8                       u561 10CE                       u810 0BBC  
                     u730 0A76                       u650 0832                       u570 10F0  
                     u811 0BB8                       u651 082E                       u571 10EC  
                     u820 0BEA                       u740 0AD0                       u660 0844  
                     u900 0FE8                       u580 110C                       u821 0BE6  
                     u741 0ACC                       u661 0840                       u901 0FE4  
                     u581 1108                       u830 0C24                       u750 0AF0  
                     u670 0854                       u910 0C54                       u590 11B0  
                     u831 0C20                       u751 0AEC                       u735 0A6C  
                     u671 0850                       u911 0C50                       u591 11AC  
                     u760 0B02                       u680 0894                       u840 0F1A  
                     u920 0C62                       u761 0AFE                       u681 0890  
                     u841 0F16                       u921 0C5E                       u770 0B30  
                     u690 08A6                       u850 0F4E                       u930 0CBE  
                     u771 0B2C                       u691 08A2                       u931 0CBA  
                     u780 0B46                       u860 0F7C                       u940 0D14  
                     u781 0B42                       u861 0F78                       u941 0D10  
                     u790 0B5A                       u870 0F90                       u950 0D5E  
                     u791 0B56                       u871 0F8C                       u855 0F44  
                     u951 0D5A                       u880 0FB8                       u960 0D7C  
                     u881 0FB4                       u961 0D78                       u890 0FD8  
                     u970 0D8C                       u891 0FD4                       u971 0D88  
                     u980 0D9A                       u981 0D96                       u990 0DD4  
                     u991 0DD0               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001              ___flmul@aexp 0020              ___flmul@bexp 0021  
            ___flmul@sign 001B              ___flmul@temp 0026              ___flmul@prod 0022  
          ??_ENVIA_NIBBLE 0001              ___fltol@exp1 000A            ENVIA_CHAR@dato 0002  
                    l1000 13B2                      l1002 13BA                      l1310 10D2  
                    l1320 110C                      l1312 10DA                      l1410 0948  
                    l1402 0910                      l1322 1114                      l1314 10E2  
                    l1306 10B8                      l1330 11B0                      l1420 0992  
                    l1412 0960                      l1404 091C                      l1500 0F58  
                    l1324 1116                      l1316 10F0                      l1308 10C0  
                    l1340 11EC                      l1332 11B8                      l1350 12FC  
                    l1430 09E8                      l1422 09A2                      l1414 096C  
                    l1406 0926                      l1502 0F5A                      l1326 111C  
                    l1318 10F6                      l1342 11F2                      l1334 11C0  
                    l1360 12CA                      l1352 130E                      l1440 0A8C  
                    l1432 0A04                      l1424 09AE                      l1416 0978  
                    l1408 093C                      l1504 0F6A                      l1336 11CE  
                    l1328 119E                      l1344 100A                      l1600 0EB6  
                    l1354 12A0                      l1346 12E0                      l1450 0AE2  
                    l1442 0A9A                      l1434 0A10                      l1426 09BE  
                    l1418 0986                      l1370 0844                      l1362 0818  
                    l1530 0FE8                      l1514 0F94                      l1506 0F6E  
                    l1338 11E4                      l1610 0EEC                      l1602 0EC2  
                    l1356 12AC                      l1348 12F0                      l1452 0AF0  
                    l1444 0AB8                      l1436 0A2C                      l1428 09D8  
                    l1380 0880                      l1372 0854                      l1364 0824  
                    l1532 0FF8                      l1524 0FBC                      l1516 0F9E  
                    l1508 0F7C                      l1540 0C62                      l1612 0EF4  
                    l1604 0ECC                      l1358 12C8                      l1462 0B5A  
                    l1470 0BA2                      l1454 0AF4                      l1446 0AC2  
                    l1438 0A56                      l1390 08B6                      l1382 0886  
                    l1374 0864                      l1366 0832                      l1526 0FC8  
                    l1518 0FA8                      l1550 0CDA                      l1542 0CA8  
                    l1606 0EDC                      l1480 0C16                      l1472 0BBC  
                    l1464 0B66                      l1456 0B02                      l1448 0AD0  
                    l1392 08C6                      l1384 0894                      l1376 086A  
                    l1368 0834                      l1528 0FD8                      l1560 0D62  
                    l1552 0CE6                      l1544 0CBE                      l1536 0C44  
                    l1608 0EE4                      l1482 0C24                      l1474 0BD0  
                    l1466 0B74                      l1458 0B30                      l1394 08CC  
                    l1386 0896                      l1378 087A                      l1570 0DA0  
                    l1562 0D6E                      l1554 0D18                      l1538 0C54  
                    l1484 0C26                      l1476 0BEA                      l1468 0B9E  
                    l1396 08EC                      l1388 08A6                      l1492 0F04  
                    l1572 0DC4                      l1564 0D7C                      l1556 0D1A  
                    l1548 0CD2                      l1478 0C06                      l1486 0C2C  
                    l1398 08FC                      l1494 0F1A                      l1574 0DD4  
                    l1566 0D9A                      l1558 0D26                      l1590 0E08  
                    l1582 0DF6                      l1488 0C30                      l1576 0DE2  
                    l1568 0D9C                      l1592 0E18                      l1584 0DF6  
                    l1498 0F2E                      l1578 0DE4                      l1594 0E2A  
                    l1586 0DFA                      l1596 0E6E                      l1588 0DFE  
                    l1598 0E86                      STR_1 0801                      STR_2 0812  
                    u1000 0DE2                      u1001 0DDE                      u1010 0E2A  
                    u1011 0E26                      u1025 0E9E                      u1107 1138  
                    u1117 1146                      u1037 1270                      u1127 1150  
                    u1047 1286                      u1137 1166                      u1057 1212  
                    u1147 1174                      u1067 1220                      u1157 117E  
                    u1077 1230                      u1167 13E0                      u1087 1326  
                    _LATD 000F8C                      u1097 135A                      _main 0DF6  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           ?_CURSOR_ONOFF 0001              ___param_bank 000000           ??_ENVIA_LCD_CMD 0002  
        __end_of_LEER_LCD 119E       __size_of_BORRAR_LCD 0008             ___fltol@sign1 0009  
                   ?_main 0001           __end_of___flmul 0C42           __end_of___fltol 100A  
                   _T2CON 000FCA           __end_of___lwdiv 112C           __end_of___lwmod 1202  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 13EA  
            __end_of_main 0F04           _ESCRIBE_MENSAJE 12A0                    ??_main 0028  
           __activetblptr 000001                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0                    _ADRESH 000FC4                    _ADRESL 000FC3  
                  _CCPR1L 000FBE          __end_of___xxtofl 0DF6          __end_of_lcd_init 12A0  
                  _decena 0033      __end_of_ENVIA_NIBBLE 13EA                 ??___flmul 0017  
               ??___fltol 0005                 ??___lwdiv 000A                 ??___lwmod 0005  
     __size_of_POS_CURSOR 003A                    _millar 0037                    clear_0 13F0  
                  isa$std 000001                    _unidad 0031              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008              ___xxtofl@arg 000B  
            ___xxtofl@exp 000A              ___xxtofl@val 0001                 ?_LEER_LCD 0001  
              __accesstop 0060   __end_of__initialization 13F6              ??_LCD_CONFIG 0004  
           ___rparam_used 000001              ??_ENVIA_CHAR 0002                ___fltol@f1 0001  
 __end_of_ESCRIBE_MENSAJE 12DE            __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 1414  
        ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 13B0        __end_of_LCD_CONFIG 1262  
      __end_of_ENVIA_CHAR 1380        __size_of_convierte 00AE                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001        __size_of_init_conf 001E                   _CCP1CON 000FBD  
               ?___xxtofl 0001              ??_POS_CURSOR 0005                 ?_lcd_init 0001  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004                   ___flmul 0818                   ___fltol 0F04  
                 ___lwdiv 10B8                   ___lwmod 119E              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 134C         __end_of_convierte 10B8            main@res_ad_ch1 002B  
                 __pcinit 13EA        __end_of_POS_CURSOR 1318                   __ramtop 0800  
                 _centena 0035                   __ptext0 0DF6                   __ptext1 1262  
                 __ptext2 1202                   __ptext3 1380                   __ptext4 1404  
                 __ptext5 140C                   __ptext6 13B0                   __ptext7 100A  
                 __ptext8 119E                   __ptext9 10B8         __end_of_init_conf 13CE  
              ??___xxtofl 0005                ??_lcd_init 0005              _ENVIA_NIBBLE 13CE  
    end_of_initialization 13F6                   postinc0 000FEE     __size_of_CURSOR_ONOFF 0030  
            _escalamiento 002D             ___xxtofl@sign 0009                 _TRISCbits 000F94  
             ___flmul@grs 001C         __size_of_LEER_LCD 0072              _CURSOR_ONOFF 1380  
      CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004       start_initialization 13EA  
       ENVIA_LCD_CMD@dato 0002                 ___flmul@a 0013                 ___flmul@b 000F  
             __pbssCOMRAM 002D         __size_of___xxtofl 01B4       __end_of_CURSOR_HOME 140C  
       __size_of_lcd_init 003E          ___lwdiv@dividend 0006                  ?___flmul 000F  
                ?___fltol 0001                  ?___lwdiv 0006                  ?___lwmod 0001  
             __smallconst 0800                 _convierte 100A           convierte@numero 000D  
        ___lwdiv@quotient 000A                 _init_conf 13B0                  _LEER_LCD 112C  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2                ?_convierte 000D  
             _CURSOR_HOME 1404                ?_init_conf 0001    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___flmul 042A          __size_of___fltol 0106          __size_of___lwdiv 0074  
        __size_of___lwmod 0064                  ___xxtofl 0C42           ___lwdiv@divisor 0008  
         ___lwdiv@counter 000C                  __ptext10 0C42                  __ptext11 0F04  
                __ptext12 0818                  __ptext13 12DE                  __ptext14 1318  
                __ptext15 12A0                  __ptext16 134C                  __ptext17 112C  
                __ptext18 13CE                _BORRAR_LCD 140C                  _lcd_init 1262  
           __size_of_main 010E                _LCD_CONFIG 1202                _ENVIA_CHAR 134C  
                isa$xinst 000000             _ENVIA_LCD_CMD 1318               ??_convierte 000F  
       ??_ESCRIBE_MENSAJE 0007               ??_init_conf 0001     ESCRIBE_MENSAJE@cadena 0004  
        ___lwmod@dividend 0001            ?_ENVIA_LCD_CMD 0001           ___lwmod@divisor 0003  
         ___lwmod@counter 0005               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 12DE               ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006  
             ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
