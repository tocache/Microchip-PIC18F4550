

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 12 12:31:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30                           	psect	pa_nodes0,global,class=CODE,delta=1
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _ADRESL	set	4035
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADCON0bits	set	4034
    69  0000                     _LATCbits	set	3979
    70  0000                     _ADCON0	set	4034
    71  0000                     _ADCON1	set	4033
    72  0000                     _ADCON2	set	4032
    73  0000                     _TRISCbits	set	3988
    74  0000                     _PORTD	set	3971
    75  0000                     _LATD	set	3980
    76  0000                     _TRISD	set	3989
    77  0000                     _LATDbits	set	3980
    78                           
    79                           	psect	smallconst
    80  000800                     __psmallconst:
    81                           	callstack 0
    82  000800  00                 	db	0
    83  000801                     STR_1:
    84  000801  20                 	db	32
    85  000802  20                 	db	32
    86  000803  20                 	db	32
    87  000804  45                 	db	69	;'E'
    88  000805  6A                 	db	106	;'j'
    89  000806  65                 	db	101	;'e'
    90  000807  6D                 	db	109	;'m'
    91  000808  70                 	db	112	;'p'
    92  000809  6C                 	db	108	;'l'
    93  00080A  6F                 	db	111	;'o'
    94  00080B  20                 	db	32
    95  00080C  33                 	db	51	;'3'
    96  00080D  00                 	db	0
    97  00080E                     STR_2:
    98  00080E  41                 	db	65	;'A'
    99  00080F  44                 	db	68	;'D'
   100  000810  43                 	db	67	;'C'
   101  000811  2D                 	db	45
   102  000812  30                 	db	48	;'0'
   103  000813  3A                 	db	58	;':'
   104  000814  00                 	db	0
   105  000815  00                 	db	0	; dummy byte at the end
   106  0000                     
   107                           ; #config settings
   108                           
   109                           	psect	cinit
   110  000BCE                     __pcinit:
   111                           	callstack 0
   112  000BCE                     start_initialization:
   113                           	callstack 0
   114  000BCE                     __initialization:
   115                           	callstack 0
   116                           
   117                           ; Clear objects allocated to COMRAM (10 bytes)
   118  000BCE  EE00  F011         	lfsr	0,__pbssCOMRAM
   119  000BD2  0E0A               	movlw	10
   120  000BD4                     clear_0:
   121  000BD4  6AEE               	clrf	postinc0,c
   122  000BD6  06E8               	decf	wreg,f,c
   123  000BD8  E1FD               	bnz	clear_0
   124  000BDA                     end_of_initialization:
   125                           	callstack 0
   126  000BDA                     __end_of__initialization:
   127                           	callstack 0
   128  000BDA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   129  000BDC  6EF8               	movwf	tblptru,c
   130  000BDE  0E08               	movlw	high __Lsmallconst
   131  000BE0  6EF7               	movwf	tblptrh,c
   132  000BE2  0100               	movlb	0
   133  000BE4  EF9C  F004         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  000011                     __pbssCOMRAM:
   137                           	callstack 0
   138  000011                     _unidad:
   139                           	callstack 0
   140  000011                     	ds	2
   141  000013                     _decena:
   142                           	callstack 0
   143  000013                     	ds	2
   144  000015                     _centena:
   145                           	callstack 0
   146  000015                     	ds	2
   147  000017                     _millar:
   148                           	callstack 0
   149  000017                     	ds	2
   150  000019                     _res_ad:
   151                           	callstack 0
   152  000019                     	ds	2
   153                           
   154                           	psect	cstackCOMRAM
   155  000001                     __pcstackCOMRAM:
   156                           	callstack 0
   157  000001                     ??_parpadeo_RC0:
   158  000001                     ?___lwmod:
   159                           	callstack 0
   160  000001                     ENVIA_NIBBLE@dato:
   161                           	callstack 0
   162  000001                     LEER_LCD@aux:
   163                           	callstack 0
   164  000001                     ___lwmod@dividend:
   165                           	callstack 0
   166                           
   167                           ; 2 bytes @ 0x0
   168  000001                     	ds	1
   169  000002                     ENVIA_CHAR@dato:
   170                           	callstack 0
   171  000002                     ENVIA_LCD_CMD@dato:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x1
   175  000002                     	ds	1
   176  000003                     ENVIA_CHAR@aux:
   177                           	callstack 0
   178  000003                     ENVIA_LCD_CMD@aux:
   179                           	callstack 0
   180  000003                     ___lwmod@divisor:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x2
   184  000003                     	ds	1
   185  000004                     ??_LCD_CONFIG:
   186  000004                     POS_CURSOR@columna:
   187                           	callstack 0
   188  000004                     CURSOR_ONOFF@estado:
   189                           	callstack 0
   190  000004                     ESCRIBE_MENSAJE@cadena:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x3
   194  000004                     	ds	1
   195  000005                     ??_lcd_init:
   196  000005                     POS_CURSOR@fila:
   197                           	callstack 0
   198  000005                     ESCRIBE_MENSAJE@tam:
   199                           	callstack 0
   200  000005                     ___lwmod@counter:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0x4
   204  000005                     	ds	1
   205  000006                     ??_ESCRIBE_MENSAJE:
   206  000006                     ?___lwdiv:
   207                           	callstack 0
   208  000006                     ___lwdiv@dividend:
   209                           	callstack 0
   210                           
   211                           ; 2 bytes @ 0x5
   212  000006                     	ds	1
   213  000007                     ESCRIBE_MENSAJE@i:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	1
   218  000008                     ___lwdiv@divisor:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x7
   222  000008                     	ds	2
   223  00000A                     ___lwdiv@quotient:
   224                           	callstack 0
   225                           
   226                           ; 2 bytes @ 0x9
   227  00000A                     	ds	2
   228  00000C                     ___lwdiv@counter:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0xB
   232  00000C                     	ds	1
   233  00000D                     digbyte@data_in:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0xC
   237  00000D                     	ds	2
   238  00000F                     ??_main:
   239                           
   240                           ; 1 bytes @ 0xE
   241  00000F                     	ds	2
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 49 in file "maincode.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  1    wreg      void 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         0       0       0       0       0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0
   264 ;;      Temps:          2       0       0       0       0       0       0       0       0
   265 ;;      Totals:         2       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels required when called: 4
   268 ;; This function calls:
   269 ;;		_ENVIA_CHAR
   270 ;;		_ESCRIBE_MENSAJE
   271 ;;		_POS_CURSOR
   272 ;;		_configuro
   273 ;;		_digbyte
   274 ;;		_lcd_init
   275 ;;		_parpadeo_RC0
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text0
   282  000938                     __ptext0:
   283                           	callstack 0
   284  000938                     _main:
   285                           	callstack 27
   286                           
   287                           ;maincode.c: 50:     configuro();
   288                           
   289                           ;incstack = 0
   290  000938  EC00  F006         	call	_configuro	;wreg free
   291                           
   292                           ;maincode.c: 51:     lcd_init();
   293  00093C  ECA7  F005         	call	_lcd_init	;wreg free
   294                           
   295                           ;maincode.c: 52:     ESCRIBE_MENSAJE("   Ejemplo 3",12);
   296  000940  0E01               	movlw	low STR_1
   297  000942  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   298  000944  0E0C               	movlw	12
   299  000946  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   300  000948  ECB9  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   301  00094C                     l1117:
   302                           
   303                           ;maincode.c: 54:         parpadeo_RC0();
   304  00094C  EC0B  F004         	call	_parpadeo_RC0	;wreg free
   305                           
   306                           ;maincode.c: 55:         ADCON0bits.GODONE = 1;
   307  000950  82C2               	bsf	194,1,c	;volatile
   308  000952                     l136:
   309  000952  B2C2               	btfsc	194,1,c	;volatile
   310  000954  D7FE               	goto	l136
   311                           
   312                           ;maincode.c: 57:         res_ad = (ADRESH << 8) + ADRESL;
   313  000956  50C4               	movf	196,w,c	;volatile
   314  000958  6E10               	movwf	(??_main+1)^0,c
   315  00095A  6A0F               	clrf	??_main^0,c
   316  00095C  50C3               	movf	195,w,c	;volatile
   317  00095E  240F               	addwf	??_main^0,w,c
   318  000960  6E19               	movwf	_res_ad^0,c
   319  000962  0E00               	movlw	0
   320  000964  2010               	addwfc	(??_main+1)^0,w,c
   321  000966  6E1A               	movwf	(_res_ad+1)^0,c
   322                           
   323                           ;maincode.c: 58:         digbyte(res_ad);
   324  000968  C019  F00D         	movff	_res_ad,digbyte@data_in
   325  00096C  C01A  F00E         	movff	_res_ad+1,digbyte@data_in+1
   326  000970  EC59  F004         	call	_digbyte	;wreg free
   327                           
   328                           ;maincode.c: 59:         POS_CURSOR(2,0);
   329  000974  6A04               	clrf	POS_CURSOR@columna^0,c
   330  000976  0E02               	movlw	2
   331  000978  ECCA  F005         	call	_POS_CURSOR
   332                           
   333                           ;maincode.c: 60:         ESCRIBE_MENSAJE("ADC-0:",6);
   334  00097C  0E0E               	movlw	low STR_2
   335  00097E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   336  000980  0E06               	movlw	6
   337  000982  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   338  000984  ECB9  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   339                           
   340                           ;maincode.c: 61:         ENVIA_CHAR(millar+0x30);
   341  000988  5017               	movf	_millar^0,w,c
   342  00098A  0F30               	addlw	48
   343  00098C  EC8F  F005         	call	_ENVIA_CHAR
   344                           
   345                           ;maincode.c: 62:         ENVIA_CHAR(centena+0x30);
   346  000990  5015               	movf	_centena^0,w,c
   347  000992  0F30               	addlw	48
   348  000994  EC8F  F005         	call	_ENVIA_CHAR
   349                           
   350                           ;maincode.c: 63:         ENVIA_CHAR(decena+0x30);
   351  000998  5013               	movf	_decena^0,w,c
   352  00099A  0F30               	addlw	48
   353  00099C  EC8F  F005         	call	_ENVIA_CHAR
   354                           
   355                           ;maincode.c: 64:         ENVIA_CHAR(unidad+0x30);
   356  0009A0  5011               	movf	_unidad^0,w,c
   357  0009A2  0F30               	addlw	48
   358  0009A4  EC8F  F005         	call	_ENVIA_CHAR
   359  0009A8  D7D1               	goto	l1117
   360  0009AA                     __end_of_main:
   361                           	callstack 0
   362                           
   363 ;; *************** function _parpadeo_RC0 *****************
   364 ;; Defined at:
   365 ;;		line 27 in file "maincode.c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;		None
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      void 
   372 ;; Registers used:
   373 ;;		wreg
   374 ;; Tracked objects:
   375 ;;		On entry : 0/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   379 ;;      Params:         0       0       0       0       0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0       0       0       0       0
   381 ;;      Temps:          2       0       0       0       0       0       0       0       0
   382 ;;      Totals:         2       0       0       0       0       0       0       0       0
   383 ;;Total ram usage:        2 bytes
   384 ;; Hardware stack levels used: 1
   385 ;; This function calls:
   386 ;;		Nothing
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text1
   393  000816                     __ptext1:
   394                           	callstack 0
   395  000816                     _parpadeo_RC0:
   396                           	callstack 30
   397                           
   398                           ;maincode.c: 28:     LATCbits.LC0 = 1;
   399                           
   400                           ;incstack = 0
   401  000816  808B               	bsf	139,0,c	;volatile
   402                           
   403                           ;maincode.c: 29:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   404  000818  0E07               	movlw	7
   405  00081A  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   406  00081C  0E17               	movlw	23
   407  00081E  6E01               	movwf	??_parpadeo_RC0^0,c
   408  000820  0E6A               	movlw	106
   409  000822                     u247:
   410  000822  2EE8               	decfsz	wreg,f,c
   411  000824  D7FE               	bra	u247
   412  000826  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   413  000828  D7FC               	bra	u247
   414  00082A  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   415  00082C  D7FA               	bra	u247
   416  00082E  D000               	nop2	
   417                           
   418                           ;maincode.c: 30:     LATCbits.LC0 = 0;
   419  000830  908B               	bcf	139,0,c	;volatile
   420                           
   421                           ;maincode.c: 31:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   422  000832  0E07               	movlw	7
   423  000834  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   424  000836  0E17               	movlw	23
   425  000838  6E01               	movwf	??_parpadeo_RC0^0,c
   426  00083A  0E6A               	movlw	106
   427  00083C                     u257:
   428  00083C  2EE8               	decfsz	wreg,f,c
   429  00083E  D7FE               	bra	u257
   430  000840  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   431  000842  D7FC               	bra	u257
   432  000844  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   433  000846  D7FA               	bra	u257
   434  000848  D000               	nop2	
   435                           
   436                           ;maincode.c: 32:     LATCbits.LC0 = 1;
   437  00084A  808B               	bsf	139,0,c	;volatile
   438                           
   439                           ;maincode.c: 33:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   440  00084C  0E07               	movlw	7
   441  00084E  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   442  000850  0E17               	movlw	23
   443  000852  6E01               	movwf	??_parpadeo_RC0^0,c
   444  000854  0E6A               	movlw	106
   445  000856                     u267:
   446  000856  2EE8               	decfsz	wreg,f,c
   447  000858  D7FE               	bra	u267
   448  00085A  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   449  00085C  D7FC               	bra	u267
   450  00085E  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   451  000860  D7FA               	bra	u267
   452  000862  D000               	nop2	
   453                           
   454                           ;maincode.c: 34:     LATCbits.LC0 = 0;
   455  000864  908B               	bcf	139,0,c	;volatile
   456                           
   457                           ;maincode.c: 35:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   458  000866  0E07               	movlw	7
   459  000868  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   460  00086A  0E17               	movlw	23
   461  00086C  6E01               	movwf	??_parpadeo_RC0^0,c
   462  00086E  0E6A               	movlw	106
   463  000870                     u277:
   464  000870  2EE8               	decfsz	wreg,f,c
   465  000872  D7FE               	bra	u277
   466  000874  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   467  000876  D7FC               	bra	u277
   468  000878  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   469  00087A  D7FA               	bra	u277
   470  00087C  D000               	nop2	
   471                           
   472                           ;maincode.c: 36:     LATCbits.LC0 = 1;
   473  00087E  808B               	bsf	139,0,c	;volatile
   474                           
   475                           ;maincode.c: 37:     _delay((unsigned long)((100)*(48000000UL/4000.0)));
   476  000880  0E07               	movlw	7
   477  000882  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   478  000884  0E17               	movlw	23
   479  000886  6E01               	movwf	??_parpadeo_RC0^0,c
   480  000888  0E6A               	movlw	106
   481  00088A                     u287:
   482  00088A  2EE8               	decfsz	wreg,f,c
   483  00088C  D7FE               	bra	u287
   484  00088E  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   485  000890  D7FC               	bra	u287
   486  000892  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   487  000894  D7FA               	bra	u287
   488  000896  D000               	nop2	
   489                           
   490                           ;maincode.c: 38:     LATCbits.LC0 = 0;
   491  000898  908B               	bcf	139,0,c	;volatile
   492                           
   493                           ;maincode.c: 39:     _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   494  00089A  0E3D               	movlw	61
   495  00089C  6E02               	movwf	(??_parpadeo_RC0+1)^0,c
   496  00089E  0EE1               	movlw	225
   497  0008A0  6E01               	movwf	??_parpadeo_RC0^0,c
   498  0008A2  0E40               	movlw	64
   499  0008A4                     u297:
   500  0008A4  2EE8               	decfsz	wreg,f,c
   501  0008A6  D7FE               	bra	u297
   502  0008A8  2E01               	decfsz	??_parpadeo_RC0^0,f,c
   503  0008AA  D7FC               	bra	u297
   504  0008AC  2E02               	decfsz	(??_parpadeo_RC0+1)^0,f,c
   505  0008AE  D7FA               	bra	u297
   506  0008B0  0012               	return		;funcret
   507  0008B2                     __end_of_parpadeo_RC0:
   508                           	callstack 0
   509                           
   510 ;; *************** function _lcd_init *****************
   511 ;; Defined at:
   512 ;;		line 18 in file "maincode.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   526 ;;      Params:         0       0       0       0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0
   528 ;;      Temps:          1       0       0       0       0       0       0       0       0
   529 ;;      Totals:         1       0       0       0       0       0       0       0       0
   530 ;;Total ram usage:        1 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 3
   533 ;; This function calls:
   534 ;;		_BORRAR_LCD
   535 ;;		_CURSOR_HOME
   536 ;;		_CURSOR_ONOFF
   537 ;;		_LCD_CONFIG
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  000B4E                     __ptext2:
   545                           	callstack 0
   546  000B4E                     _lcd_init:
   547                           	callstack 27
   548                           
   549                           ;maincode.c: 19:     TRISD = 0x00;
   550                           
   551                           ;incstack = 0
   552  000B4E  6A95               	clrf	149,c	;volatile
   553                           
   554                           ;maincode.c: 20:     LCD_CONFIG();
   555  000B50  ECD5  F004         	call	_LCD_CONFIG	;wreg free
   556                           
   557                           ;maincode.c: 21:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   558  000B54  0EEA               	movlw	234
   559  000B56  6E05               	movwf	??_lcd_init^0,c
   560  000B58  0EC3               	movlw	195
   561  000B5A                     u307:
   562  000B5A  2EE8               	decfsz	wreg,f,c
   563  000B5C  D7FE               	bra	u307
   564  000B5E  2E05               	decfsz	??_lcd_init^0,f,c
   565  000B60  D7FC               	bra	u307
   566  000B62  F000               	nop	
   567                           
   568                           ;maincode.c: 22:     BORRAR_LCD();
   569  000B64  EC0B  F006         	call	_BORRAR_LCD	;wreg free
   570                           
   571                           ;maincode.c: 23:     CURSOR_HOME();
   572  000B68  EC08  F006         	call	_CURSOR_HOME	;wreg free
   573                           
   574                           ;maincode.c: 24:     CURSOR_ONOFF(1);
   575  000B6C  0E01               	movlw	1
   576  000B6E  EFF4  F005         	goto	_CURSOR_ONOFF
   577  000B72                     __end_of_lcd_init:
   578                           	callstack 0
   579                           
   580 ;; *************** function _LCD_CONFIG *****************
   581 ;; Defined at:
   582 ;;		line 72 in file "LCD.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          1       0       0       0       0       0       0       0       0
   599 ;;      Totals:         1       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        1 bytes
   601 ;; Hardware stack levels used: 1
   602 ;; Hardware stack levels required when called: 2
   603 ;; This function calls:
   604 ;;		_ENVIA_LCD_CMD
   605 ;;		_ENVIA_NIBBLE
   606 ;; This function is called by:
   607 ;;		_lcd_init
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text3
   612  0009AA                     __ptext3:
   613                           	callstack 0
   614  0009AA                     _LCD_CONFIG:
   615                           	callstack 27
   616                           
   617                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   618                           
   619                           ;incstack = 0
   620  0009AA  908C               	bcf	140,0,c	;volatile
   621                           
   622                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   623  0009AC  928C               	bcf	140,1,c	;volatile
   624                           
   625                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   626  0009AE  0E30               	movlw	48
   627  0009B0  ECD9  F005         	call	_ENVIA_NIBBLE
   628                           
   629                           ;LCD.c: 77:         _delay(24000);
   630  0009B4  0E20               	movlw	32
   631  0009B6  6E04               	movwf	??_LCD_CONFIG^0,c
   632  0009B8  0E2A               	movlw	42
   633  0009BA                     u317:
   634  0009BA  2EE8               	decfsz	wreg,f,c
   635  0009BC  D7FE               	bra	u317
   636  0009BE  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   637  0009C0  D7FC               	bra	u317
   638                           
   639                           ;LCD.c: 78:         _delay(24000);
   640  0009C2  0E20               	movlw	32
   641  0009C4  6E04               	movwf	??_LCD_CONFIG^0,c
   642  0009C6  0E2A               	movlw	42
   643  0009C8                     u327:
   644  0009C8  2EE8               	decfsz	wreg,f,c
   645  0009CA  D7FE               	bra	u327
   646  0009CC  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   647  0009CE  D7FC               	bra	u327
   648                           
   649                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   650  0009D0  0E30               	movlw	48
   651  0009D2  ECD9  F005         	call	_ENVIA_NIBBLE
   652                           
   653                           ;LCD.c: 83:  _delay(1200);
   654  0009D6  0EF0               	movlw	240
   655  0009D8                     u337:
   656  0009D8  D000               	nop2	
   657  0009DA  2EE8               	decfsz	wreg,f,c
   658  0009DC  D7FD               	bra	u337
   659                           
   660                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   661  0009DE  0E30               	movlw	48
   662  0009E0  ECD9  F005         	call	_ENVIA_NIBBLE
   663                           
   664                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   665  0009E4  0E20               	movlw	32
   666  0009E6  ECD9  F005         	call	_ENVIA_NIBBLE
   667                           
   668                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   669  0009EA  0E01               	movlw	1
   670  0009EC  EC77  F005         	call	_ENVIA_LCD_CMD
   671                           
   672                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   673  0009F0  0E28               	movlw	40
   674  0009F2  EC77  F005         	call	_ENVIA_LCD_CMD
   675                           
   676                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   677  0009F6  0E0F               	movlw	15
   678  0009F8  EC77  F005         	call	_ENVIA_LCD_CMD
   679                           
   680                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   681  0009FC  0E06               	movlw	6
   682  0009FE  EC77  F005         	call	_ENVIA_LCD_CMD
   683                           
   684                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   685  000A02  0E01               	movlw	1
   686  000A04  EF77  F005         	goto	_ENVIA_LCD_CMD
   687  000A08                     __end_of_LCD_CONFIG:
   688                           	callstack 0
   689                           
   690 ;; *************** function _CURSOR_ONOFF *****************
   691 ;; Defined at:
   692 ;;		line 35 in file "LCD.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  estado          1    wreg     unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  estado          1    3[COMRAM] unsigned char 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   706 ;;      Params:         0       0       0       0       0       0       0       0       0
   707 ;;      Locals:         1       0       0       0       0       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0
   709 ;;      Totals:         1       0       0       0       0       0       0       0       0
   710 ;;Total ram usage:        1 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 2
   713 ;; This function calls:
   714 ;;		_ENVIA_LCD_CMD
   715 ;; This function is called by:
   716 ;;		_lcd_init
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text4
   721  000BE8                     __ptext4:
   722                           	callstack 0
   723  000BE8                     _CURSOR_ONOFF:
   724                           	callstack 27
   725                           
   726                           ;incstack = 0
   727                           ;CURSOR_ONOFF@estado stored from wreg
   728  000BE8  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   729                           
   730                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   731  000BEA  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   732  000BEC  E103               	bnz	l891
   733  000BEE  0E0E               	movlw	14
   734  000BF0  EC77  F005         	call	_ENVIA_LCD_CMD
   735  000BF4                     l891:
   736                           
   737                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   738  000BF4  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   739  000BF6  A4D8               	btfss	status,2,c
   740  000BF8  0012               	return	
   741  000BFA  0E0C               	movlw	12
   742  000BFC  EF77  F005         	goto	_ENVIA_LCD_CMD
   743  000C00                     __end_of_CURSOR_ONOFF:
   744                           	callstack 0
   745                           
   746 ;; *************** function _CURSOR_HOME *****************
   747 ;; Defined at:
   748 ;;		line 30 in file "LCD.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   762 ;;      Params:         0       0       0       0       0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 2
   769 ;; This function calls:
   770 ;;		_ENVIA_LCD_CMD
   771 ;; This function is called by:
   772 ;;		_lcd_init
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text5
   777  000C10                     __ptext5:
   778                           	callstack 0
   779  000C10                     _CURSOR_HOME:
   780                           	callstack 27
   781                           
   782                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   783                           
   784                           ;incstack = 0
   785  000C10  0E02               	movlw	2
   786  000C12  EF77  F005         	goto	_ENVIA_LCD_CMD
   787  000C16                     __end_of_CURSOR_HOME:
   788                           	callstack 0
   789                           
   790 ;; *************** function _BORRAR_LCD *****************
   791 ;; Defined at:
   792 ;;		line 67 in file "LCD.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   806 ;;      Params:         0       0       0       0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		_ENVIA_LCD_CMD
   815 ;; This function is called by:
   816 ;;		_lcd_init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text6
   821  000C16                     __ptext6:
   822                           	callstack 0
   823  000C16                     _BORRAR_LCD:
   824                           	callstack 27
   825                           
   826                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   827                           
   828                           ;incstack = 0
   829  000C16  0E01               	movlw	1
   830  000C18  EF77  F005         	goto	_ENVIA_LCD_CMD
   831  000C1C                     __end_of_BORRAR_LCD:
   832                           	callstack 0
   833                           
   834 ;; *************** function _digbyte *****************
   835 ;; Defined at:
   836 ;;		line 42 in file "maincode.c"
   837 ;; Parameters:    Size  Location     Type
   838 ;;  data_in         2   12[COMRAM] unsigned int 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;		None
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   850 ;;      Params:         2       0       0       0       0       0       0       0       0
   851 ;;      Locals:         0       0       0       0       0       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0       0       0       0       0
   853 ;;      Totals:         2       0       0       0       0       0       0       0       0
   854 ;;Total ram usage:        2 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 1
   857 ;; This function calls:
   858 ;;		___lwdiv
   859 ;;		___lwmod
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text7
   866  0008B2                     __ptext7:
   867                           	callstack 0
   868  0008B2                     _digbyte:
   869                           	callstack 29
   870                           
   871                           ;maincode.c: 43:     millar = data_in / 1000;
   872                           
   873                           ;incstack = 0
   874  0008B2  C00D  F006         	movff	digbyte@data_in,___lwdiv@dividend
   875  0008B6  C00E  F007         	movff	digbyte@data_in+1,___lwdiv@dividend+1
   876  0008BA  0E03               	movlw	3
   877  0008BC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   878  0008BE  0EE8               	movlw	232
   879  0008C0  6E08               	movwf	___lwdiv@divisor^0,c
   880  0008C2  EC33  F005         	call	___lwdiv	;wreg free
   881  0008C6  C006  F017         	movff	?___lwdiv,_millar
   882  0008CA  C007  F018         	movff	?___lwdiv+1,_millar+1
   883                           
   884                           ;maincode.c: 44:     centena = (data_in % 1000) /100;
   885  0008CE  0E03               	movlw	3
   886  0008D0  6E04               	movwf	(___lwmod@divisor+1)^0,c
   887  0008D2  0EE8               	movlw	232
   888  0008D4  6E03               	movwf	___lwmod@divisor^0,c
   889  0008D6  D825               	call	PL2	;call to abstracted procedure
   890  0008D8  EC58  F005         	call	___lwmod	;wreg free
   891  0008DC  D827               	call	PL4	;call to abstracted procedure
   892  0008DE  0E64               	movlw	100
   893  0008E0  6E08               	movwf	___lwdiv@divisor^0,c
   894  0008E2  EC33  F005         	call	___lwdiv	;wreg free
   895  0008E6  C006  F015         	movff	?___lwdiv,_centena
   896  0008EA  C007  F016         	movff	?___lwdiv+1,_centena+1
   897                           
   898                           ;maincode.c: 45:     decena = (data_in % 100) / 10;
   899  0008EE  6A04               	clrf	(___lwmod@divisor+1)^0,c
   900  0008F0  0E64               	movlw	100
   901  0008F2  6E03               	movwf	___lwmod@divisor^0,c
   902  0008F4  D816               	call	PL2	;call to abstracted procedure
   903  0008F6  EC58  F005         	call	___lwmod	;wreg free
   904  0008FA  D818               	call	PL4	;call to abstracted procedure
   905  0008FC  0E0A               	movlw	10
   906  0008FE  6E08               	movwf	___lwdiv@divisor^0,c
   907  000900  EC33  F005         	call	___lwdiv	;wreg free
   908  000904  C006  F013         	movff	?___lwdiv,_decena
   909  000908  C007  F014         	movff	?___lwdiv+1,_decena+1
   910                           
   911                           ;maincode.c: 46:     unidad = data_in % 10;
   912  00090C  D80A               	call	PL2	;call to abstracted procedure
   913  00090E  6A04               	clrf	(___lwmod@divisor+1)^0,c
   914  000910  0E0A               	movlw	10
   915  000912  6E03               	movwf	___lwmod@divisor^0,c
   916  000914  EC58  F005         	call	___lwmod	;wreg free
   917  000918  C001  F011         	movff	?___lwmod,_unidad
   918  00091C  C002  F012         	movff	?___lwmod+1,_unidad+1
   919  000920  0012               	return		;funcret
   920  000922                     __end_of_digbyte:
   921                           	callstack 0
   922  000922                     PL2:
   923                           	callstack 29
   924  000922  C00D  F001         	movff	digbyte@data_in,___lwmod@dividend
   925  000926  C00E  F002         	movff	digbyte@data_in+1,___lwmod@dividend+1
   926  00092A  0012               	return	
   927  00092C                     __end_ofPL2:
   928                           	callstack 0
   929  00092C                     PL4:
   930                           	callstack 29
   931  00092C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   932  000930  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   933  000934  6A09               	clrf	(___lwdiv@divisor+1)^0,c
   934  000936  0012               	return	
   935  000938                     __end_ofPL4:
   936                           	callstack 0
   937                           
   938 ;; *************** function ___lwmod *****************
   939 ;; Defined at:
   940 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  dividend        2    0[COMRAM] unsigned int 
   943 ;;  divisor         2    2[COMRAM] unsigned int 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  counter         1    4[COMRAM] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2    0[COMRAM] unsigned int 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         4       0       0       0       0       0       0       0       0
   956 ;;      Locals:         1       0       0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0
   958 ;;      Totals:         5       0       0       0       0       0       0       0       0
   959 ;;Total ram usage:        5 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_digbyte
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text8
   969  000AB0                     __ptext8:
   970                           	callstack 0
   971  000AB0                     ___lwmod:
   972                           	callstack 29
   973                           
   974                           ;incstack = 0
   975  000AB0  5003               	movf	___lwmod@divisor^0,w,c
   976  000AB2  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   977  000AB4  E017               	bz	l645
   978  000AB6  0E01               	movlw	1
   979  000AB8  6E05               	movwf	___lwmod@counter^0,c
   980  000ABA  D004               	goto	l1083
   981  000ABC                     l1081:
   982  000ABC  90D8               	bcf	status,0,c
   983  000ABE  3603               	rlcf	___lwmod@divisor^0,f,c
   984  000AC0  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   985  000AC2  2A05               	incf	___lwmod@counter^0,f,c
   986  000AC4                     l1083:
   987  000AC4  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   988  000AC6  D7FA               	goto	l1081
   989  000AC8                     u180:
   990  000AC8  5003               	movf	___lwmod@divisor^0,w,c
   991  000ACA  5C01               	subwf	___lwmod@dividend^0,w,c
   992  000ACC  5004               	movf	(___lwmod@divisor+1)^0,w,c
   993  000ACE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   994  000AD0  E304               	bnc	l1089
   995  000AD2  5003               	movf	___lwmod@divisor^0,w,c
   996  000AD4  5E01               	subwf	___lwmod@dividend^0,f,c
   997  000AD6  5004               	movf	(___lwmod@divisor+1)^0,w,c
   998  000AD8  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   999  000ADA                     l1089:
  1000  000ADA  90D8               	bcf	status,0,c
  1001  000ADC  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1002  000ADE  3203               	rrcf	___lwmod@divisor^0,f,c
  1003  000AE0  2E05               	decfsz	___lwmod@counter^0,f,c
  1004  000AE2  D7F2               	goto	u180
  1005  000AE4                     l645:
  1006  000AE4  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1007  000AE8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1008  000AEC  0012               	return		;funcret
  1009  000AEE                     __end_of___lwmod:
  1010                           	callstack 0
  1011                           
  1012 ;; *************** function ___lwdiv *****************
  1013 ;; Defined at:
  1014 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  dividend        2    5[COMRAM] unsigned int 
  1017 ;;  divisor         2    7[COMRAM] unsigned int 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  quotient        2    9[COMRAM] unsigned int 
  1020 ;;  counter         1   11[COMRAM] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  2    5[COMRAM] unsigned int 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1030 ;;      Params:         4       0       0       0       0       0       0       0       0
  1031 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1033 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1034 ;;Total ram usage:        7 bytes
  1035 ;; Hardware stack levels used: 1
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_digbyte
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text9
  1044  000A66                     __ptext9:
  1045                           	callstack 0
  1046  000A66                     ___lwdiv:
  1047                           	callstack 29
  1048                           
  1049                           ;incstack = 0
  1050  000A66  6A0A               	clrf	___lwdiv@quotient^0,c
  1051  000A68  6A0B               	clrf	(___lwdiv@quotient+1)^0,c
  1052  000A6A  5008               	movf	___lwdiv@divisor^0,w,c
  1053  000A6C  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1054  000A6E  E01B               	bz	l635
  1055  000A70  0E01               	movlw	1
  1056  000A72  6E0C               	movwf	___lwdiv@counter^0,c
  1057  000A74  D004               	goto	l1063
  1058  000A76                     l1061:
  1059  000A76  90D8               	bcf	status,0,c
  1060  000A78  3608               	rlcf	___lwdiv@divisor^0,f,c
  1061  000A7A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1062  000A7C  2A0C               	incf	___lwdiv@counter^0,f,c
  1063  000A7E                     l1063:
  1064  000A7E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1065  000A80  D7FA               	goto	l1061
  1066  000A82                     u150:
  1067  000A82  90D8               	bcf	status,0,c
  1068  000A84  360A               	rlcf	___lwdiv@quotient^0,f,c
  1069  000A86  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1070  000A88  5008               	movf	___lwdiv@divisor^0,w,c
  1071  000A8A  5C06               	subwf	___lwdiv@dividend^0,w,c
  1072  000A8C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1073  000A8E  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1074  000A90  E305               	bnc	l1073
  1075  000A92  5008               	movf	___lwdiv@divisor^0,w,c
  1076  000A94  5E06               	subwf	___lwdiv@dividend^0,f,c
  1077  000A96  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1078  000A98  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1079  000A9A  800A               	bsf	___lwdiv@quotient^0,0,c
  1080  000A9C                     l1073:
  1081  000A9C  90D8               	bcf	status,0,c
  1082  000A9E  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1083  000AA0  3208               	rrcf	___lwdiv@divisor^0,f,c
  1084  000AA2  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1085  000AA4  D7EE               	goto	u150
  1086  000AA6                     l635:
  1087  000AA6  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1088  000AAA  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1089  000AAE  0012               	return		;funcret
  1090  000AB0                     __end_of___lwdiv:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _configuro *****************
  1094 ;; Defined at:
  1095 ;;		line 11 in file "maincode.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text10
  1123  000C00                     __ptext10:
  1124                           	callstack 0
  1125  000C00                     _configuro:
  1126                           	callstack 30
  1127                           
  1128                           ;maincode.c: 12:     TRISCbits.RC0 = 0;
  1129                           
  1130                           ;incstack = 0
  1131  000C00  9094               	bcf	148,0,c	;volatile
  1132                           
  1133                           ;maincode.c: 13:     ADCON2 = 0xA4;
  1134  000C02  0EA4               	movlw	164
  1135  000C04  6EC0               	movwf	192,c	;volatile
  1136                           
  1137                           ;maincode.c: 14:     ADCON1 = 0x0E;
  1138  000C06  0E0E               	movlw	14
  1139  000C08  6EC1               	movwf	193,c	;volatile
  1140                           
  1141                           ;maincode.c: 15:     ADCON0 = 0x01;
  1142  000C0A  0E01               	movlw	1
  1143  000C0C  6EC2               	movwf	194,c	;volatile
  1144  000C0E  0C01               	retlw	1	;funcret
  1145  000C10                     __end_of_configuro:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _POS_CURSOR *****************
  1149 ;; Defined at:
  1150 ;;		line 6 in file "LCD.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  fila            1    wreg     unsigned char 
  1153 ;;  columna         1    3[COMRAM] unsigned char 
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;  fila            1    4[COMRAM] unsigned char 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:         1       0       0       0       0       0       0       0       0
  1166 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1168 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:        2 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 2
  1172 ;; This function calls:
  1173 ;;		_ENVIA_LCD_CMD
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text11
  1180  000B94                     __ptext11:
  1181                           	callstack 0
  1182  000B94                     _POS_CURSOR:
  1183                           	callstack 28
  1184                           
  1185                           ;incstack = 0
  1186                           ;POS_CURSOR@fila stored from wreg
  1187  000B94  6E05               	movwf	POS_CURSOR@fila^0,c
  1188                           
  1189                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1190  000B96  0405               	decf	POS_CURSOR@fila^0,w,c
  1191  000B98  E104               	bnz	l1097
  1192                           
  1193                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1194  000B9A  5004               	movf	POS_CURSOR@columna^0,w,c
  1195  000B9C  0F80               	addlw	128
  1196  000B9E  EF77  F005         	goto	_ENVIA_LCD_CMD
  1197  000BA2                     l1097:
  1198  000BA2  0E02               	movlw	2
  1199  000BA4  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1200  000BA6  A4D8               	btfss	status,2,c
  1201  000BA8  0012               	return	
  1202                           
  1203                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1204  000BAA  5004               	movf	POS_CURSOR@columna^0,w,c
  1205  000BAC  0FC0               	addlw	192
  1206  000BAE  EF77  F005         	goto	_ENVIA_LCD_CMD
  1207  000BB2                     __end_of_POS_CURSOR:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _ENVIA_LCD_CMD *****************
  1211 ;; Defined at:
  1212 ;;		line 104 in file "LCD.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;  dato            1    wreg     unsigned char 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  dato            1    1[COMRAM] unsigned char 
  1217 ;;  aux             1    2[COMRAM] unsigned char 
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1227 ;;      Params:         0       0       0       0       0       0       0       0       0
  1228 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1230 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1231 ;;Total ram usage:        2 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 1
  1234 ;; This function calls:
  1235 ;;		_ENVIA_NIBBLE
  1236 ;;		_LEER_LCD
  1237 ;; This function is called by:
  1238 ;;		_POS_CURSOR
  1239 ;;		_CURSOR_HOME
  1240 ;;		_CURSOR_ONOFF
  1241 ;;		_BORRAR_LCD
  1242 ;;		_LCD_CONFIG
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text12
  1247  000AEE                     __ptext12:
  1248                           	callstack 0
  1249  000AEE                     _ENVIA_LCD_CMD:
  1250                           	callstack 27
  1251                           
  1252                           ;incstack = 0
  1253                           ;ENVIA_LCD_CMD@dato stored from wreg
  1254  000AEE  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1255                           
  1256                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1257  000AF0  908C               	bcf	140,0,c	;volatile
  1258                           
  1259                           ;LCD.c: 108:  LEER_LCD();
  1260  000AF2  EC04  F005         	call	_LEER_LCD	;wreg free
  1261                           
  1262                           ;LCD.c: 109:  TRISD = 0b00000000;
  1263  000AF6  6A95               	clrf	149,c	;volatile
  1264                           
  1265                           ;LCD.c: 111:         _delay(1200);
  1266  000AF8  0EF0               	movlw	240
  1267  000AFA                     u347:
  1268  000AFA  D000               	nop2	
  1269  000AFC  2EE8               	decfsz	wreg,f,c
  1270  000AFE  D7FD               	bra	u347
  1271                           
  1272                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1273  000B00  928C               	bcf	140,1,c	;volatile
  1274                           
  1275                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1276  000B02  948C               	bcf	140,2,c	;volatile
  1277                           
  1278                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1279  000B04  908C               	bcf	140,0,c	;volatile
  1280                           
  1281                           ;LCD.c: 115:  aux = dato & 0xF0;
  1282  000B06  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1283                           
  1284                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1285  000B08  D806               	call	PL8	;call to abstracted procedure
  1286  000B0A  ECD9  F005         	call	_ENVIA_NIBBLE
  1287                           
  1288                           ;LCD.c: 117:  aux = dato<<4;
  1289  000B0E  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1290                           
  1291                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1292  000B10  D802               	call	PL8	;call to abstracted procedure
  1293  000B12  EFD9  F005         	goto	_ENVIA_NIBBLE
  1294  000B16                     __end_of_ENVIA_LCD_CMD:
  1295                           	callstack 0
  1296  000B16                     PL8:
  1297                           	callstack 27
  1298  000B16  0BF0               	andlw	240
  1299  000B18  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1300  000B1A  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1301  000B1C  0012               	return	
  1302  000B1E                     __end_ofPL8:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _ESCRIBE_MENSAJE *****************
  1306 ;; Defined at:
  1307 ;;		line 41 in file "LCD.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1310 ;;		 -> STR_2(7), STR_1(13), 
  1311 ;;  tam             1    4[COMRAM] unsigned char 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  i               1    6[COMRAM] unsigned char 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1323 ;;      Params:         2       0       0       0       0       0       0       0       0
  1324 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1326 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1327 ;;Total ram usage:        4 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 2
  1330 ;; This function calls:
  1331 ;;		_ENVIA_CHAR
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text13
  1338  000B72                     __ptext13:
  1339                           	callstack 0
  1340  000B72                     _ESCRIBE_MENSAJE:
  1341                           	callstack 28
  1342                           
  1343                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1344                           
  1345                           ;incstack = 0
  1346  000B72  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  1347                           
  1348                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1349  000B74  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  1350  000B76  D00A               	goto	l1107
  1351  000B78                     l1103:
  1352                           
  1353                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1354  000B78  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
  1355  000B7A  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
  1356  000B7C  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
  1357  000B7E  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1358  000B82                     	if	0	;There is only one active tblptr byte
  1359  000B82                     	endif
  1360  000B82                     	if	0	;tblptru may be non-zero
  1361  000B82                     	endif
  1362  000B82                     	if	0	;tblptru may be non-zero
  1363  000B82                     	endif
  1364  000B82  0008               	tblrd		*
  1365  000B84  50F5               	movf	tablat,w,c
  1366  000B86  EC8F  F005         	call	_ENVIA_CHAR
  1367                           
  1368                           ;LCD.c: 47:  }
  1369  000B8A  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1370  000B8C                     l1107:
  1371  000B8C  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1372  000B8E  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1373  000B90  E3F3               	bnc	l1103
  1374  000B92  0012               	return		;funcret
  1375  000B94                     __end_of_ESCRIBE_MENSAJE:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _ENVIA_CHAR *****************
  1379 ;; Defined at:
  1380 ;;		line 50 in file "LCD.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  dato            1    wreg     unsigned char 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  dato            1    1[COMRAM] unsigned char 
  1385 ;;  aux             1    2[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 1
  1402 ;; This function calls:
  1403 ;;		_ENVIA_NIBBLE
  1404 ;;		_LEER_LCD
  1405 ;; This function is called by:
  1406 ;;		_ESCRIBE_MENSAJE
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text14
  1412  000B1E                     __ptext14:
  1413                           	callstack 0
  1414  000B1E                     _ENVIA_CHAR:
  1415                           	callstack 28
  1416                           
  1417                           ;incstack = 0
  1418                           ;ENVIA_CHAR@dato stored from wreg
  1419  000B1E  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1420                           
  1421                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1422  000B20  808C               	bsf	140,0,c	;volatile
  1423                           
  1424                           ;LCD.c: 54:  LEER_LCD();
  1425  000B22  EC04  F005         	call	_LEER_LCD	;wreg free
  1426                           
  1427                           ;LCD.c: 55:  TRISD = 0x00;
  1428  000B26  6A95               	clrf	149,c	;volatile
  1429                           
  1430                           ;LCD.c: 56:         _delay(1200);
  1431  000B28  0EF0               	movlw	240
  1432  000B2A                     u357:
  1433  000B2A  D000               	nop2	
  1434  000B2C  2EE8               	decfsz	wreg,f,c
  1435  000B2E  D7FD               	bra	u357
  1436                           
  1437                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1438  000B30  928C               	bcf	140,1,c	;volatile
  1439                           
  1440                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1441  000B32  948C               	bcf	140,2,c	;volatile
  1442                           
  1443                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1444  000B34  808C               	bsf	140,0,c	;volatile
  1445                           
  1446                           ;LCD.c: 61:  aux = dato & 0xF0;
  1447  000B36  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1448                           
  1449                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1450  000B38  D806               	call	PL10	;call to abstracted procedure
  1451  000B3A  ECD9  F005         	call	_ENVIA_NIBBLE
  1452                           
  1453                           ;LCD.c: 63:  aux = dato << 4;
  1454  000B3E  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1455                           
  1456                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1457  000B40  D802               	call	PL10	;call to abstracted procedure
  1458  000B42  EFD9  F005         	goto	_ENVIA_NIBBLE
  1459  000B46                     __end_of_ENVIA_CHAR:
  1460                           	callstack 0
  1461  000B46                     PL10:
  1462                           	callstack 28
  1463  000B46  0BF0               	andlw	240
  1464  000B48  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1465  000B4A  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1466  000B4C  0012               	return	
  1467  000B4E                     __end_ofPL10:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _LEER_LCD *****************
  1471 ;; Defined at:
  1472 ;;		line 121 in file "LCD.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  aux             1    0[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1489 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1490 ;;Total ram usage:        1 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_ENVIA_CHAR
  1496 ;;		_ENVIA_LCD_CMD
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text15
  1501  000A08                     __ptext15:
  1502                           	callstack 0
  1503  000A08                     _LEER_LCD:
  1504                           	callstack 27
  1505                           
  1506                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1507                           
  1508                           ;incstack = 0
  1509  000A08  0EF8               	movlw	248
  1510  000A0A  6E95               	movwf	149,c	;volatile
  1511                           
  1512                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1513  000A0C  908C               	bcf	140,0,c	;volatile
  1514                           
  1515                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1516  000A0E  828C               	bsf	140,1,c	;volatile
  1517                           
  1518                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1519  000A10  848C               	bsf	140,2,c	;volatile
  1520                           
  1521                           ;LCD.c: 128:         _delay(1200);
  1522  000A12  0EF0               	movlw	240
  1523  000A14                     u367:
  1524  000A14  D000               	nop2	
  1525  000A16  2EE8               	decfsz	wreg,f,c
  1526  000A18  D7FD               	bra	u367
  1527                           
  1528                           ;LCD.c: 130:  aux = PORTD;
  1529                           
  1530                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1531  000A1A  D821               	call	PL6	;call to abstracted procedure
  1532                           
  1533                           ;LCD.c: 132:         _delay(1200);
  1534  000A1C  0EF0               	movlw	240
  1535  000A1E                     u377:
  1536  000A1E  D000               	nop2	
  1537  000A20  2EE8               	decfsz	wreg,f,c
  1538  000A22  D7FD               	bra	u377
  1539                           
  1540                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1541  000A24  848C               	bsf	140,2,c	;volatile
  1542                           
  1543                           ;LCD.c: 135:         _delay(1200);
  1544  000A26  0EF0               	movlw	240
  1545  000A28                     u387:
  1546  000A28  D000               	nop2	
  1547  000A2A  2EE8               	decfsz	wreg,f,c
  1548  000A2C  D7FD               	bra	u387
  1549  000A2E                     l837:
  1550                           
  1551                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1552  000A2E  948C               	bcf	140,2,c	;volatile
  1553                           
  1554                           ;LCD.c: 138:  aux = aux & 0x80;
  1555  000A30  0E80               	movlw	128
  1556  000A32  1601               	andwf	LEER_LCD@aux^0,f,c
  1557                           
  1558                           ;LCD.c: 139:  while(aux == 0x80)
  1559  000A34  D010               	goto	l853
  1560  000A36                     l67:
  1561                           
  1562                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1563  000A36  848C               	bsf	140,2,c	;volatile
  1564                           
  1565                           ;LCD.c: 142:             _delay(1200);
  1566  000A38  0EF0               	movlw	240
  1567  000A3A                     u397:
  1568  000A3A  D000               	nop2	
  1569  000A3C  2EE8               	decfsz	wreg,f,c
  1570  000A3E  D7FD               	bra	u397
  1571                           
  1572                           ;LCD.c: 143:             aux = PORTD;
  1573                           
  1574                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1575  000A40  D80E               	call	PL6	;call to abstracted procedure
  1576                           
  1577                           ;LCD.c: 145:             _delay(1200);
  1578  000A42  0EF0               	movlw	240
  1579  000A44                     u407:
  1580  000A44  D000               	nop2	
  1581  000A46  2EE8               	decfsz	wreg,f,c
  1582  000A48  D7FD               	bra	u407
  1583                           
  1584                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1585  000A4A  848C               	bsf	140,2,c	;volatile
  1586                           
  1587                           ;LCD.c: 147:             _delay(1200);
  1588  000A4C  0EF0               	movlw	240
  1589  000A4E                     u417:
  1590  000A4E  D000               	nop2	
  1591  000A50  2EE8               	decfsz	wreg,f,c
  1592  000A52  D7FD               	bra	u417
  1593  000A54  D7EC               	goto	l837
  1594  000A56                     l853:
  1595                           
  1596                           ;LCD.c: 139:  while(aux == 0x80)
  1597  000A56  0E80               	movlw	128
  1598  000A58  1801               	xorwf	LEER_LCD@aux^0,w,c
  1599  000A5A  E0ED               	bz	l67
  1600  000A5C  0012               	return		;funcret
  1601  000A5E                     __end_of_LEER_LCD:
  1602                           	callstack 0
  1603  000A5E                     PL6:
  1604                           	callstack 27
  1605  000A5E  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1606  000A62  948C               	bcf	140,2,c	;volatile
  1607  000A64  0012               	return	
  1608  000A66                     __end_ofPL6:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _ENVIA_NIBBLE *****************
  1612 ;; Defined at:
  1613 ;;		line 93 in file "LCD.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  dato            1    wreg     unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  dato            1    0[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1630 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; This function calls:
  1634 ;;		Nothing
  1635 ;; This function is called by:
  1636 ;;		_ENVIA_CHAR
  1637 ;;		_LCD_CONFIG
  1638 ;;		_ENVIA_LCD_CMD
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text16
  1643  000BB2                     __ptext16:
  1644                           	callstack 0
  1645  000BB2                     _ENVIA_NIBBLE:
  1646                           	callstack 28
  1647                           
  1648                           ;incstack = 0
  1649                           ;ENVIA_NIBBLE@dato stored from wreg
  1650  000BB2  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1651                           
  1652                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1653  000BB4  0E0F               	movlw	15
  1654  000BB6  168C               	andwf	140,f,c	;volatile
  1655                           
  1656                           ;LCD.c: 96:  dato &= 0xF0;
  1657  000BB8  0EF0               	movlw	240
  1658  000BBA  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1659                           
  1660                           ;LCD.c: 97:  LATD|= dato;
  1661  000BBC  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1662  000BBE  128C               	iorwf	140,f,c	;volatile
  1663                           
  1664                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1665  000BC0  848C               	bsf	140,2,c	;volatile
  1666                           
  1667                           ;LCD.c: 100:         _delay(1200);
  1668  000BC2  0EF0               	movlw	240
  1669  000BC4                     u427:
  1670  000BC4  D000               	nop2	
  1671  000BC6  2EE8               	decfsz	wreg,f,c
  1672  000BC8  D7FD               	bra	u427
  1673                           
  1674                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1675  000BCA  948C               	bcf	140,2,c	;volatile
  1676  000BCC  0012               	return		;funcret
  1677  000BCE                     __end_of_ENVIA_NIBBLE:
  1678                           	callstack 0
  1679                           
  1680                           	psect	rparam
  1681  0000                     
  1682                           	psect	idloc
  1683                           
  1684                           ;Config register IDLOC0 @ 0x200000
  1685                           ;	unspecified, using default values
  1686  200000                     	org	2097152
  1687  200000  FF                 	db	255
  1688                           
  1689                           ;Config register IDLOC1 @ 0x200001
  1690                           ;	unspecified, using default values
  1691  200001                     	org	2097153
  1692  200001  FF                 	db	255
  1693                           
  1694                           ;Config register IDLOC2 @ 0x200002
  1695                           ;	unspecified, using default values
  1696  200002                     	org	2097154
  1697  200002  FF                 	db	255
  1698                           
  1699                           ;Config register IDLOC3 @ 0x200003
  1700                           ;	unspecified, using default values
  1701  200003                     	org	2097155
  1702  200003  FF                 	db	255
  1703                           
  1704                           ;Config register IDLOC4 @ 0x200004
  1705                           ;	unspecified, using default values
  1706  200004                     	org	2097156
  1707  200004  FF                 	db	255
  1708                           
  1709                           ;Config register IDLOC5 @ 0x200005
  1710                           ;	unspecified, using default values
  1711  200005                     	org	2097157
  1712  200005  FF                 	db	255
  1713                           
  1714                           ;Config register IDLOC6 @ 0x200006
  1715                           ;	unspecified, using default values
  1716  200006                     	org	2097158
  1717  200006  FF                 	db	255
  1718                           
  1719                           ;Config register IDLOC7 @ 0x200007
  1720                           ;	unspecified, using default values
  1721  200007                     	org	2097159
  1722  200007  FF                 	db	255
  1723                           
  1724                           	psect	config
  1725                           
  1726                           ;Config register CONFIG1L @ 0x300000
  1727                           ;	PLL Prescaler Selection bits
  1728                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1729                           ;	System Clock Postscaler Selection bits
  1730                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1731                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1732                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1733  300000                     	org	3145728
  1734  300000  00                 	db	0
  1735                           
  1736                           ;Config register CONFIG1H @ 0x300001
  1737                           ;	Oscillator Selection bits
  1738                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1739                           ;	Fail-Safe Clock Monitor Enable bit
  1740                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1741                           ;	Internal/External Oscillator Switchover bit
  1742                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1743  300001                     	org	3145729
  1744  300001  02                 	db	2
  1745                           
  1746                           ;Config register CONFIG2L @ 0x300002
  1747                           ;	Power-up Timer Enable bit
  1748                           ;	PWRT = ON, PWRT enabled
  1749                           ;	Brown-out Reset Enable bits
  1750                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1751                           ;	Brown-out Reset Voltage bits
  1752                           ;	BORV = 3, Minimum setting 2.05V
  1753                           ;	USB Voltage Regulator Enable bit
  1754                           ;	VREGEN = OFF, USB voltage regulator disabled
  1755  300002                     	org	3145730
  1756  300002  18                 	db	24
  1757                           
  1758                           ;Config register CONFIG2H @ 0x300003
  1759                           ;	Watchdog Timer Enable bit
  1760                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1761                           ;	Watchdog Timer Postscale Select bits
  1762                           ;	WDTPS = 32768, 1:32768
  1763  300003                     	org	3145731
  1764  300003  1E                 	db	30
  1765                           
  1766                           ; Padding undefined space
  1767  300004                     	org	3145732
  1768  300004  FF                 	db	255
  1769                           
  1770                           ;Config register CONFIG3H @ 0x300005
  1771                           ;	CCP2 MUX bit
  1772                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1773                           ;	PORTB A/D Enable bit
  1774                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1775                           ;	Low-Power Timer 1 Oscillator Enable bit
  1776                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1777                           ;	MCLR Pin Enable bit
  1778                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1779  300005                     	org	3145733
  1780  300005  81                 	db	129
  1781                           
  1782                           ;Config register CONFIG4L @ 0x300006
  1783                           ;	Stack Full/Underflow Reset Enable bit
  1784                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1785                           ;	Single-Supply ICSP Enable bit
  1786                           ;	LVP = OFF, Single-Supply ICSP disabled
  1787                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1788                           ;	ICPRT = OFF, ICPORT disabled
  1789                           ;	Extended Instruction Set Enable bit
  1790                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1791                           ;	Background Debugger Enable bit
  1792                           ;	DEBUG = 0x1, unprogrammed default
  1793  300006                     	org	3145734
  1794  300006  81                 	db	129
  1795                           
  1796                           ; Padding undefined space
  1797  300007                     	org	3145735
  1798  300007  FF                 	db	255
  1799                           
  1800                           ;Config register CONFIG5L @ 0x300008
  1801                           ;	Code Protection bit
  1802                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1803                           ;	Code Protection bit
  1804                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1805                           ;	Code Protection bit
  1806                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1807                           ;	Code Protection bit
  1808                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1809  300008                     	org	3145736
  1810  300008  0F                 	db	15
  1811                           
  1812                           ;Config register CONFIG5H @ 0x300009
  1813                           ;	Boot Block Code Protection bit
  1814                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1815                           ;	Data EEPROM Code Protection bit
  1816                           ;	CPD = OFF, Data EEPROM is not code-protected
  1817  300009                     	org	3145737
  1818  300009  C0                 	db	192
  1819                           
  1820                           ;Config register CONFIG6L @ 0x30000A
  1821                           ;	Write Protection bit
  1822                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1823                           ;	Write Protection bit
  1824                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1825                           ;	Write Protection bit
  1826                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1827                           ;	Write Protection bit
  1828                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1829  30000A                     	org	3145738
  1830  30000A  0F                 	db	15
  1831                           
  1832                           ;Config register CONFIG6H @ 0x30000B
  1833                           ;	Configuration Register Write Protection bit
  1834                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1835                           ;	Boot Block Write Protection bit
  1836                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1837                           ;	Data EEPROM Write Protection bit
  1838                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1839  30000B                     	org	3145739
  1840  30000B  E0                 	db	224
  1841                           
  1842                           ;Config register CONFIG7L @ 0x30000C
  1843                           ;	Table Read Protection bit
  1844                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1845                           ;	Table Read Protection bit
  1846                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1847                           ;	Table Read Protection bit
  1848                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1849                           ;	Table Read Protection bit
  1850                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1851  30000C                     	org	3145740
  1852  30000C  0F                 	db	15
  1853                           
  1854                           ;Config register CONFIG7H @ 0x30000D
  1855                           ;	Boot Block Table Read Protection bit
  1856                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1857  30000D                     	org	3145741
  1858  30000D  40                 	db	64
  1859                           tosu	equ	0xFFF
  1860                           tosh	equ	0xFFE
  1861                           tosl	equ	0xFFD
  1862                           stkptr	equ	0xFFC
  1863                           pclatu	equ	0xFFB
  1864                           pclath	equ	0xFFA
  1865                           pcl	equ	0xFF9
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           prodh	equ	0xFF4
  1871                           prodl	equ	0xFF3
  1872                           indf0	equ	0xFEF
  1873                           postinc0	equ	0xFEE
  1874                           postdec0	equ	0xFED
  1875                           preinc0	equ	0xFEC
  1876                           plusw0	equ	0xFEB
  1877                           fsr0h	equ	0xFEA
  1878                           fsr0l	equ	0xFE9
  1879                           wreg	equ	0xFE8
  1880                           indf1	equ	0xFE7
  1881                           postinc1	equ	0xFE6
  1882                           postdec1	equ	0xFE5
  1883                           preinc1	equ	0xFE4
  1884                           plusw1	equ	0xFE3
  1885                           fsr1h	equ	0xFE2
  1886                           fsr1l	equ	0xFE1
  1887                           bsr	equ	0xFE0
  1888                           indf2	equ	0xFDF
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           preinc2	equ	0xFDC
  1892                           plusw2	equ	0xFDB
  1893                           fsr2h	equ	0xFDA
  1894                           fsr2l	equ	0xFD9
  1895                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[7]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_digbyte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _digbyte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2631
                                             14 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                            _digbyte
                           _lcd_init
                       _parpadeo_RC0
 ---------------------------------------------------------------------------------
 (1) _parpadeo_RC0                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     405
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     105
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     120
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0      90
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0      90
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _digbyte                                              2     0      2    1397
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     254
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0      90
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     485
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0      90
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _digbyte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _parpadeo_RC0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      1A       1       27.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 12 12:31:18 2021

                      PL2 0922                        PL4 092C                        PL6 0A5E  
                      PL8 0B16                        l67 0A36                       PL10 0B46  
           ENVIA_CHAR@aux 0003                       l136 0952                       l635 0AA6  
                     l645 0AE4                       l853 0A56                       l837 0A2E  
                     l891 0BF4                       u150 0A82                       u307 0B5A  
                     u180 0AC8                       u317 09BA                       u407 0A44  
                     u327 09C8                       u247 0822                       u417 0A4E  
                     u337 09D8                       u257 083C                       u427 0BC4  
                     u347 0AFA                       u267 0856                       u357 0B2A  
                     u277 0870                       u367 0A14                       u287 088A  
                     u377 0A1E                       u297 08A4                       u387 0A28  
                     u397 0A3A               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001            ENVIA_CHAR@dato 0002  
                    l1103 0B78                      l1107 0B8C                      l1061 0A76  
                    l1117 094C                      l1063 0A7E                      l1073 0A9C  
                    l1081 0ABC                      l1083 0AC4                      l1097 0BA2  
                    l1089 0ADA                      STR_1 0801                      STR_2 080E  
                    _LATD 000F8C                      _main 0938                      start 0000  
           ?_CURSOR_ONOFF 0001              ___param_bank 000000           ??_ENVIA_LCD_CMD 0002  
        __end_of_LEER_LCD 0A5E       __size_of_BORRAR_LCD 0006                     ?_main 0001  
         __end_of___lwdiv 0AB0           __end_of___lwmod 0AEE                     _PORTD 000F83  
     __size_of_LCD_CONFIG 005E                     _TRISD 000F95       __size_of_ENVIA_CHAR 0028  
         __end_of_digbyte 0922               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 0BCE  
            __end_of_main 09AA           _ESCRIBE_MENSAJE 0B72                    ??_main 000F  
           __activetblptr 000001                    _ADCON0 000FC2                    _ADCON1 000FC1  
                  _ADCON2 000FC0                    _ADRESH 000FC4                    _ADRESL 000FC3  
        __end_of_lcd_init 0B72                    _decena 0013      __end_of_ENVIA_NIBBLE 0BCE  
               ??___lwdiv 000A                 ??___lwmod 0005       __size_of_POS_CURSOR 001E  
                  _millar 0017                    clear_0 0BD4                    _res_ad 0019  
                  isa$std 000001                 ??_digbyte 000F                    _unidad 0011  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8              ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0006  
               ?_LEER_LCD 0001                __accesstop 0060   __end_of__initialization 0BDA  
           ?_parpadeo_RC0 0001              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0B94            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0C1C                __end_ofPL2 092C                __end_ofPL4 0938  
              __end_ofPL6 0A66                __end_ofPL8 0B1E          ENVIA_LCD_CMD@aux 0003  
    __end_of_CURSOR_ONOFF 0C00        __end_of_LCD_CONFIG 0A08        __end_of_ENVIA_CHAR 0B46  
      __size_of_configuro 0010            ??_parpadeo_RC0 0001                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001              ??_POS_CURSOR 0005                 ?_lcd_init 0001  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004            digbyte@data_in 000D         __end_of_configuro 0C10  
                 ___lwdiv 0A66                   ___lwmod 0AB0              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 0B16                   __pcinit 0BCE        __end_of_POS_CURSOR 0BB2  
                 __ramtop 0800                   _centena 0015                   _digbyte 08B2  
                 __ptext0 0938                   __ptext1 0816                   __ptext2 0B4E  
                 __ptext3 09AA                   __ptext4 0BE8                   __ptext5 0C10  
                 __ptext6 0C16                   __ptext7 08B2                   __ptext8 0AB0  
                 __ptext9 0A66                ??_lcd_init 0005              _ENVIA_NIBBLE 0BB2  
    end_of_initialization 0BDA                   postinc0 000FEE     __size_of_CURSOR_ONOFF 0018  
    __end_of_parpadeo_RC0 08B2                 _TRISCbits 000F94         __size_of_LEER_LCD 0056  
            _CURSOR_ONOFF 0BE8        CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004  
             __end_ofPL10 0B4E       start_initialization 0BCE         ENVIA_LCD_CMD@dato 0002  
             __pbssCOMRAM 0011       __end_of_CURSOR_HOME 0C16         __size_of_lcd_init 0024  
        ___lwdiv@dividend 0006     __size_of_parpadeo_RC0 009C                  ?___lwdiv 0006  
                ?___lwmod 0001                  ?_digbyte 000D                 _configuro 0C00  
             __smallconst 0800          ___lwdiv@quotient 000A                  _LEER_LCD 0A08  
                _LATCbits 000F8B                  _LATDbits 000F8C              _parpadeo_RC0 0816  
        ESCRIBE_MENSAJE@i 0007            POS_CURSOR@fila 0005                ?_configuro 0001  
__size_of_ESCRIBE_MENSAJE 0022                _ADCON0bits 000FC2               _CURSOR_HOME 0C10  
  __size_of_ENVIA_LCD_CMD 0028                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 0800          __size_of___lwdiv 004A          __size_of___lwmod 003E  
        __size_of_digbyte 0070           ___lwdiv@divisor 0008           ___lwdiv@counter 000C  
                __ptext10 0C00                  __ptext11 0B94                  __ptext12 0AEE  
                __ptext13 0B72                  __ptext14 0B1E                  __ptext15 0A08  
                __ptext16 0BB2                _BORRAR_LCD 0C16                  _lcd_init 0B4E  
           __size_of_main 0072                _LCD_CONFIG 09AA                _ENVIA_CHAR 0B1E  
                isa$xinst 000000             _ENVIA_LCD_CMD 0AEE               ??_configuro 0001  
       ??_ESCRIBE_MENSAJE 0006     ESCRIBE_MENSAJE@cadena 0004          ___lwmod@dividend 0001  
          ?_ENVIA_LCD_CMD 0001           ___lwmod@divisor 0003           ___lwmod@counter 0005  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0B94  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0005               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
