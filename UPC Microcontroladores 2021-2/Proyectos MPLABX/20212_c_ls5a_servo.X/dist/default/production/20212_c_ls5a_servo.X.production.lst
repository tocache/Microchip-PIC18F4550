

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 25 20:37:53 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _LATEbits	set	3981
    61  0000                     _PORTB	set	3969
    62  0000                     _TRISEbits	set	3990
    63  0000                     _ADCON1	set	4033
    64  0000                     _PORTD	set	3971
    65  0000                     _LATD	set	3980
    66  0000                     _TRISD	set	3989
    67  0000                     _LATDbits	set	3980
    68                           
    69                           	psect	smallconst
    70  000800                     __psmallconst:
    71                           	callstack 0
    72  000800  00                 	db	0
    73  000801                     STR_1:
    74  000801  20                 	db	32
    75  000802  53                 	db	83	;'S'
    76  000803  65                 	db	101	;'e'
    77  000804  72                 	db	114	;'r'
    78  000805  76                 	db	118	;'v'
    79  000806  6F                 	db	111	;'o'
    80  000807  6D                 	db	109	;'m'
    81  000808  65                 	db	101	;'e'
    82  000809  63                 	db	99	;'c'
    83  00080A  61                 	db	97	;'a'
    84  00080B  6E                 	db	110	;'n'
    85  00080C  69                 	db	105	;'i'
    86  00080D  73                 	db	115	;'s'
    87  00080E  6D                 	db	109	;'m'
    88  00080F  6F                 	db	111	;'o'
    89  000810  00                 	db	0
    90  000811                     STR_2:
    91  000811  41                 	db	65	;'A'
    92  000812  6E                 	db	110	;'n'
    93  000813  67                 	db	103	;'g'
    94  000814  75                 	db	117	;'u'
    95  000815  6C                 	db	108	;'l'
    96  000816  6F                 	db	111	;'o'
    97  000817  3A                 	db	58	;':'
    98  000818  20                 	db	32
    99  000819  30                 	db	48	;'0'
   100  00081A  30                 	db	48	;'0'
   101  00081B  30                 	db	48	;'0'
   102  00081C  00                 	db	0
   103  00081D                     STR_5:
   104  00081D  41                 	db	65	;'A'
   105  00081E  6E                 	db	110	;'n'
   106  00081F  67                 	db	103	;'g'
   107  000820  75                 	db	117	;'u'
   108  000821  6C                 	db	108	;'l'
   109  000822  6F                 	db	111	;'o'
   110  000823  3A                 	db	58	;':'
   111  000824  20                 	db	32
   112  000825  31                 	db	49	;'1'
   113  000826  38                 	db	56	;'8'
   114  000827  30                 	db	48	;'0'
   115  000828  00                 	db	0
   116  000829                     STR_4:
   117  000829  41                 	db	65	;'A'
   118  00082A  6E                 	db	110	;'n'
   119  00082B  67                 	db	103	;'g'
   120  00082C  75                 	db	117	;'u'
   121  00082D  6C                 	db	108	;'l'
   122  00082E  6F                 	db	111	;'o'
   123  00082F  3A                 	db	58	;':'
   124  000830  20                 	db	32
   125  000831  31                 	db	49	;'1'
   126  000832  33                 	db	51	;'3'
   127  000833  35                 	db	53	;'5'
   128  000834  00                 	db	0
   129  000835                     STR_3:
   130  000835  41                 	db	65	;'A'
   131  000836  6E                 	db	110	;'n'
   132  000837  67                 	db	103	;'g'
   133  000838  75                 	db	117	;'u'
   134  000839  6C                 	db	108	;'l'
   135  00083A  6F                 	db	111	;'o'
   136  00083B  3A                 	db	58	;':'
   137  00083C  20                 	db	32
   138  00083D  30                 	db	48	;'0'
   139  00083E  34                 	db	52	;'4'
   140  00083F  35                 	db	53	;'5'
   141  000840  00                 	db	0
   142  000841  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147  000C0A                     __pcinit:
   148                           	callstack 0
   149  000C0A                     start_initialization:
   150                           	callstack 0
   151  000C0A                     __initialization:
   152                           	callstack 0
   153  000C0A                     end_of_initialization:
   154                           	callstack 0
   155  000C0A                     __end_of__initialization:
   156                           	callstack 0
   157  000C0A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   158  000C0C  6EF8               	movwf	tblptru,c
   159  000C0E  0100               	movlb	0
   160  000C10  EF21  F004         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	callstack 0
   165  000001                     ENVIA_NIBBLE@dato:
   166                           	callstack 0
   167  000001                     LEER_LCD@aux:
   168                           	callstack 0
   169                           
   170                           ; 1 bytes @ 0x0
   171  000001                     	ds	1
   172  000002                     ENVIA_CHAR@dato:
   173                           	callstack 0
   174  000002                     ENVIA_LCD_CMD@dato:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x1
   178  000002                     	ds	1
   179  000003                     ENVIA_CHAR@aux:
   180                           	callstack 0
   181  000003                     ENVIA_LCD_CMD@aux:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x2
   185  000003                     	ds	1
   186  000004                     ??_LCD_CONFIG:
   187  000004                     POS_CURSOR@columna:
   188                           	callstack 0
   189  000004                     CURSOR_ONOFF@estado:
   190                           	callstack 0
   191  000004                     ESCRIBE_MENSAJE@cadena:
   192                           	callstack 0
   193                           
   194                           ; 2 bytes @ 0x3
   195  000004                     	ds	1
   196  000005                     ??_lcd_config:
   197  000005                     POS_CURSOR@fila:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x4
   201  000005                     	ds	1
   202  000006                     ESCRIBE_MENSAJE@tam:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x5
   206  000006                     	ds	1
   207  000007                     ??_ESCRIBE_MENSAJE:
   208                           
   209                           ; 1 bytes @ 0x6
   210  000007                     	ds	2
   211  000009                     ESCRIBE_MENSAJE@i:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x8
   215  000009                     	ds	1
   216  00000A                     ??_main:
   217                           
   218                           ; 1 bytes @ 0x9
   219  00000A                     	ds	2
   220  00000C                     main@entrada:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0xB
   224  00000C                     	ds	1
   225                           
   226 ;;
   227 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   228 ;;
   229 ;; *************** function _main *****************
   230 ;; Defined at:
   231 ;;		line 20 in file "maincode3.c"
   232 ;; Parameters:    Size  Location     Type
   233 ;;		None
   234 ;; Auto vars:     Size  Location     Type
   235 ;;  entrada         1   11[COMRAM] unsigned char 
   236 ;; Return value:  Size  Location     Type
   237 ;;                  1    wreg      void 
   238 ;; Registers used:
   239 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   240 ;; Tracked objects:
   241 ;;		On entry : 0/0
   242 ;;		On exit  : 0/0
   243 ;;		Unchanged: 0/0
   244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   245 ;;      Params:         0       0       0       0       0       0       0       0       0
   246 ;;      Locals:         1       0       0       0       0       0       0       0       0
   247 ;;      Temps:          2       0       0       0       0       0       0       0       0
   248 ;;      Totals:         3       0       0       0       0       0       0       0       0
   249 ;;Total ram usage:        3 bytes
   250 ;; Hardware stack levels required when called: 4
   251 ;; This function calls:
   252 ;;		_ENVIA_CHAR
   253 ;;		_ESCRIBE_MENSAJE
   254 ;;		_POS_CURSOR
   255 ;;		_configuro
   256 ;;		_lcd_config
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  000842                     __ptext0:
   264                           	callstack 0
   265  000842                     _main:
   266                           	callstack 27
   267  000842                     
   268                           ;maincode3.c: 22:     configuro();
   269  000842  EC12  F006         	call	_configuro	;wreg free
   270  000846                     
   271                           ;maincode3.c: 23:     lcd_config();
   272  000846  ECE3  F005         	call	_lcd_config	;wreg free
   273  00084A                     
   274                           ;maincode3.c: 24:     POS_CURSOR(1,0);
   275  00084A  0E00               	movlw	0
   276  00084C  6E04               	movwf	POS_CURSOR@columna^0,c
   277  00084E  0E01               	movlw	1
   278  000850  EC7A  F005         	call	_POS_CURSOR
   279  000854                     
   280                           ;maincode3.c: 25:     ESCRIBE_MENSAJE(" Servomecanismo",15);
   281  000854  0E01               	movlw	low STR_1
   282  000856  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   283  000858  0E08               	movlw	high STR_1
   284  00085A  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   285  00085C  0E0F               	movlw	15
   286  00085E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   287  000860  EC5B  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   288  000864                     l1093:
   289                           
   290                           ;maincode3.c: 27:         entrada = PORTB & 0x03;
   291  000864  5081               	movf	129,w,c	;volatile
   292  000866  0B03               	andlw	3
   293  000868  6E0C               	movwf	main@entrada^0,c
   294                           
   295                           ;maincode3.c: 28:         switch(entrada){
   296  00086A  EFD3  F004         	goto	l1153
   297  00086E                     l1095:
   298                           
   299                           ;maincode3.c: 30:                 POS_CURSOR(2,0);
   300  00086E  0E00               	movlw	0
   301  000870  6E04               	movwf	POS_CURSOR@columna^0,c
   302  000872  0E02               	movlw	2
   303  000874  EC7A  F005         	call	_POS_CURSOR
   304  000878                     
   305                           ;maincode3.c: 31:                 ESCRIBE_MENSAJE("Angulo: 000",11);
   306  000878  0E11               	movlw	low STR_2
   307  00087A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   308  00087C  0E08               	movlw	high STR_2
   309  00087E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   310  000880  0E0B               	movlw	11
   311  000882  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   312  000884  EC5B  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   313  000888                     
   314                           ;maincode3.c: 32:                 ENVIA_CHAR(0xDF);
   315  000888  0EDF               	movlw	223
   316  00088A  ECB1  F005         	call	_ENVIA_CHAR
   317  00088E                     
   318                           ;maincode3.c: 33:                 LATEbits.LE0 = 1;
   319  00088E  808D               	bsf	141,0,c	;volatile
   320  000890                     
   321                           ;maincode3.c: 34:                 _delay((unsigned long)((1000)*(48000000UL/4000000.0)))
      +                          ;
   322  000890  0E10               	movlw	16
   323  000892  6E0A               	movwf	??_main^0,c
   324  000894  0E94               	movlw	148
   325  000896                     u157:
   326  000896  2EE8               	decfsz	wreg,f,c
   327  000898  D7FE               	bra	u157
   328  00089A  2E0A               	decfsz	??_main^0,f,c
   329  00089C  D7FC               	bra	u157
   330  00089E  D000               	nop2	
   331  0008A0                     
   332                           ;maincode3.c: 35:                 LATEbits.LE0 = 0;
   333  0008A0  908D               	bcf	141,0,c	;volatile
   334  0008A2                     
   335                           ;maincode3.c: 36:                 _delay((unsigned long)((19000)*(48000000UL/4000000.0))
      +                          );
   336  0008A2  0E02               	movlw	2
   337  0008A4  6E0B               	movwf	(??_main+1)^0,c
   338  0008A6  0E29               	movlw	41
   339  0008A8  6E0A               	movwf	??_main^0,c
   340  0008AA  0E17               	movlw	23
   341  0008AC                     u167:
   342  0008AC  2EE8               	decfsz	wreg,f,c
   343  0008AE  D7FE               	bra	u167
   344  0008B0  2E0A               	decfsz	??_main^0,f,c
   345  0008B2  D7FC               	bra	u167
   346  0008B4  2E0B               	decfsz	(??_main+1)^0,f,c
   347  0008B6  D7FA               	bra	u167
   348  0008B8  F000               	nop	
   349                           
   350                           ;maincode3.c: 37:                 break;
   351  0008BA  EF32  F004         	goto	l1093
   352  0008BE                     l1109:
   353                           
   354                           ;maincode3.c: 39:                 POS_CURSOR(2,0);
   355  0008BE  0E00               	movlw	0
   356  0008C0  6E04               	movwf	POS_CURSOR@columna^0,c
   357  0008C2  0E02               	movlw	2
   358  0008C4  EC7A  F005         	call	_POS_CURSOR
   359  0008C8                     
   360                           ;maincode3.c: 40:                 ESCRIBE_MENSAJE("Angulo: 045",11);
   361  0008C8  0E35               	movlw	low STR_3
   362  0008CA  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   363  0008CC  0E08               	movlw	high STR_3
   364  0008CE  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   365  0008D0  0E0B               	movlw	11
   366  0008D2  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   367  0008D4  EC5B  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   368  0008D8                     
   369                           ;maincode3.c: 41:                 ENVIA_CHAR(0xDF);
   370  0008D8  0EDF               	movlw	223
   371  0008DA  ECB1  F005         	call	_ENVIA_CHAR
   372  0008DE                     
   373                           ;maincode3.c: 42:                 LATEbits.LE0 = 1;
   374  0008DE  808D               	bsf	141,0,c	;volatile
   375  0008E0                     
   376                           ;maincode3.c: 43:                 _delay((unsigned long)((1250)*(48000000UL/4000000.0)))
      +                          ;
   377  0008E0  0E14               	movlw	20
   378  0008E2  6E0A               	movwf	??_main^0,c
   379  0008E4  0E7A               	movlw	122
   380  0008E6                     u177:
   381  0008E6  2EE8               	decfsz	wreg,f,c
   382  0008E8  D7FE               	bra	u177
   383  0008EA  2E0A               	decfsz	??_main^0,f,c
   384  0008EC  D7FC               	bra	u177
   385  0008EE                     
   386                           ;maincode3.c: 44:                 LATEbits.LE0 = 0;
   387  0008EE  908D               	bcf	141,0,c	;volatile
   388  0008F0                     
   389                           ;maincode3.c: 45:                 _delay((unsigned long)((18750)*(48000000UL/4000000.0))
      +                          );
   390  0008F0  0E02               	movlw	2
   391  0008F2  6E0B               	movwf	(??_main+1)^0,c
   392  0008F4  0E25               	movlw	37
   393  0008F6  6E0A               	movwf	??_main^0,c
   394  0008F8  0E32               	movlw	50
   395  0008FA                     u187:
   396  0008FA  2EE8               	decfsz	wreg,f,c
   397  0008FC  D7FE               	bra	u187
   398  0008FE  2E0A               	decfsz	??_main^0,f,c
   399  000900  D7FC               	bra	u187
   400  000902  2E0B               	decfsz	(??_main+1)^0,f,c
   401  000904  D7FA               	bra	u187
   402                           
   403                           ;maincode3.c: 46:                 break;
   404  000906  EF32  F004         	goto	l1093
   405  00090A                     l1123:
   406                           
   407                           ;maincode3.c: 48:                 POS_CURSOR(2,0);
   408  00090A  0E00               	movlw	0
   409  00090C  6E04               	movwf	POS_CURSOR@columna^0,c
   410  00090E  0E02               	movlw	2
   411  000910  EC7A  F005         	call	_POS_CURSOR
   412  000914                     
   413                           ;maincode3.c: 49:                 ESCRIBE_MENSAJE("Angulo: 135",11);
   414  000914  0E29               	movlw	low STR_4
   415  000916  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   416  000918  0E08               	movlw	high STR_4
   417  00091A  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   418  00091C  0E0B               	movlw	11
   419  00091E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   420  000920  EC5B  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   421  000924                     
   422                           ;maincode3.c: 50:                 ENVIA_CHAR(0xDF);
   423  000924  0EDF               	movlw	223
   424  000926  ECB1  F005         	call	_ENVIA_CHAR
   425  00092A                     
   426                           ;maincode3.c: 51:                 LATEbits.LE0 = 1;
   427  00092A  808D               	bsf	141,0,c	;volatile
   428  00092C                     
   429                           ;maincode3.c: 52:                 _delay((unsigned long)((1750)*(48000000UL/4000000.0)))
      +                          ;
   430  00092C  0E1C               	movlw	28
   431  00092E  6E0A               	movwf	??_main^0,c
   432  000930  0E44               	movlw	68
   433  000932                     u197:
   434  000932  2EE8               	decfsz	wreg,f,c
   435  000934  D7FE               	bra	u197
   436  000936  2E0A               	decfsz	??_main^0,f,c
   437  000938  D7FC               	bra	u197
   438  00093A  D000               	nop2	
   439  00093C                     
   440                           ;maincode3.c: 53:                 LATEbits.LE0 = 0;
   441  00093C  908D               	bcf	141,0,c	;volatile
   442  00093E                     
   443                           ;maincode3.c: 54:                 _delay((unsigned long)((18250)*(48000000UL/4000000.0))
      +                          );
   444  00093E  0E02               	movlw	2
   445  000940  6E0B               	movwf	(??_main+1)^0,c
   446  000942  0E1D               	movlw	29
   447  000944  6E0A               	movwf	??_main^0,c
   448  000946  0E67               	movlw	103
   449  000948                     u207:
   450  000948  2EE8               	decfsz	wreg,f,c
   451  00094A  D7FE               	bra	u207
   452  00094C  2E0A               	decfsz	??_main^0,f,c
   453  00094E  D7FC               	bra	u207
   454  000950  2E0B               	decfsz	(??_main+1)^0,f,c
   455  000952  D7FA               	bra	u207
   456  000954  F000               	nop	
   457                           
   458                           ;maincode3.c: 55:                 break;
   459  000956  EF32  F004         	goto	l1093
   460  00095A                     l1137:
   461                           
   462                           ;maincode3.c: 57:                 POS_CURSOR(2,0);
   463  00095A  0E00               	movlw	0
   464  00095C  6E04               	movwf	POS_CURSOR@columna^0,c
   465  00095E  0E02               	movlw	2
   466  000960  EC7A  F005         	call	_POS_CURSOR
   467  000964                     
   468                           ;maincode3.c: 58:                 ESCRIBE_MENSAJE("Angulo: 180",11);
   469  000964  0E1D               	movlw	low STR_5
   470  000966  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   471  000968  0E08               	movlw	high STR_5
   472  00096A  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   473  00096C  0E0B               	movlw	11
   474  00096E  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   475  000970  EC5B  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   476  000974                     
   477                           ;maincode3.c: 59:                 ENVIA_CHAR(0xDF);
   478  000974  0EDF               	movlw	223
   479  000976  ECB1  F005         	call	_ENVIA_CHAR
   480  00097A                     
   481                           ;maincode3.c: 60:                 LATEbits.LE0 = 1;
   482  00097A  808D               	bsf	141,0,c	;volatile
   483  00097C                     
   484                           ;maincode3.c: 61:                 _delay((unsigned long)((2000)*(48000000UL/4000000.0)))
      +                          ;
   485  00097C  0E20               	movlw	32
   486  00097E  6E0A               	movwf	??_main^0,c
   487  000980  0E2A               	movlw	42
   488  000982                     u217:
   489  000982  2EE8               	decfsz	wreg,f,c
   490  000984  D7FE               	bra	u217
   491  000986  2E0A               	decfsz	??_main^0,f,c
   492  000988  D7FC               	bra	u217
   493  00098A                     
   494                           ;maincode3.c: 62:                 LATEbits.LE0 = 0;
   495  00098A  908D               	bcf	141,0,c	;volatile
   496  00098C                     
   497                           ;maincode3.c: 63:                 _delay((unsigned long)((18000)*(48000000UL/4000000.0))
      +                          );
   498  00098C  0E02               	movlw	2
   499  00098E  6E0B               	movwf	(??_main+1)^0,c
   500  000990  0E19               	movlw	25
   501  000992  6E0A               	movwf	??_main^0,c
   502  000994  0E82               	movlw	130
   503  000996                     u227:
   504  000996  2EE8               	decfsz	wreg,f,c
   505  000998  D7FE               	bra	u227
   506  00099A  2E0A               	decfsz	??_main^0,f,c
   507  00099C  D7FC               	bra	u227
   508  00099E  2E0B               	decfsz	(??_main+1)^0,f,c
   509  0009A0  D7FA               	bra	u227
   510                           
   511                           ;maincode3.c: 64:                 break;
   512  0009A2  EF32  F004         	goto	l1093
   513  0009A6                     l1153:
   514  0009A6  500C               	movf	main@entrada^0,w,c
   515  0009A8  6E0A               	movwf	??_main^0,c
   516  0009AA  6A0B               	clrf	(??_main+1)^0,c
   517                           
   518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   519                           ; Switch size 1, requested type "simple"
   520                           ; Number of cases is 1, Range of values is 0 to 0
   521                           ; switch strategies available:
   522                           ; Name         Instructions Cycles
   523                           ; simple_byte            4     3 (average)
   524                           ;	Chosen strategy is simple_byte
   525  0009AC  500B               	movf	(??_main+1)^0,w,c
   526  0009AE  0A00               	xorlw	0	; case 0
   527  0009B0  B4D8               	btfsc	status,2,c
   528  0009B2  EFDD  F004         	goto	l1163
   529  0009B6  EF32  F004         	goto	l1093
   530  0009BA                     l1163:
   531                           
   532                           ; Switch size 1, requested type "simple"
   533                           ; Number of cases is 4, Range of values is 0 to 3
   534                           ; switch strategies available:
   535                           ; Name         Instructions Cycles
   536                           ; simple_byte           13     7 (average)
   537                           ;	Chosen strategy is simple_byte
   538  0009BA  500A               	movf	??_main^0,w,c
   539  0009BC  0A00               	xorlw	0	; case 0
   540  0009BE  B4D8               	btfsc	status,2,c
   541  0009C0  EF37  F004         	goto	l1095
   542  0009C4  0A01               	xorlw	1	; case 1
   543  0009C6  B4D8               	btfsc	status,2,c
   544  0009C8  EF5F  F004         	goto	l1109
   545  0009CC  0A03               	xorlw	3	; case 2
   546  0009CE  B4D8               	btfsc	status,2,c
   547  0009D0  EF85  F004         	goto	l1123
   548  0009D4  0A01               	xorlw	1	; case 3
   549  0009D6  B4D8               	btfsc	status,2,c
   550  0009D8  EFAD  F004         	goto	l1137
   551  0009DC  EF32  F004         	goto	l1093
   552  0009E0  EF00  F000         	goto	start
   553  0009E4                     __end_of_main:
   554                           	callstack 0
   555                           
   556 ;; *************** function _lcd_config *****************
   557 ;; Defined at:
   558 ;;		line 11 in file "maincode3.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, status,2, status,0, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   572 ;;      Params:         0       0       0       0       0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0       0       0       0       0
   574 ;;      Temps:          1       0       0       0       0       0       0       0       0
   575 ;;      Totals:         1       0       0       0       0       0       0       0       0
   576 ;;Total ram usage:        1 bytes
   577 ;; Hardware stack levels used: 1
   578 ;; Hardware stack levels required when called: 3
   579 ;; This function calls:
   580 ;;		_BORRAR_LCD
   581 ;;		_CURSOR_HOME
   582 ;;		_CURSOR_ONOFF
   583 ;;		_LCD_CONFIG
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text1
   590  000BC6                     __ptext1:
   591                           	callstack 0
   592  000BC6                     _lcd_config:
   593                           	callstack 27
   594  000BC6                     
   595                           ;maincode3.c: 12:     TRISD = 0x00;
   596  000BC6  0E00               	movlw	0
   597  000BC8  6E95               	movwf	149,c	;volatile
   598  000BCA                     
   599                           ;maincode3.c: 13:     LCD_CONFIG();
   600  000BCA  EC2B  F005         	call	_LCD_CONFIG	;wreg free
   601  000BCE                     
   602                           ;maincode3.c: 14:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   603  000BCE  0EEA               	movlw	234
   604  000BD0  6E05               	movwf	??_lcd_config^0,c
   605  000BD2  0EC3               	movlw	195
   606  000BD4                     u237:
   607  000BD4  2EE8               	decfsz	wreg,f,c
   608  000BD6  D7FE               	bra	u237
   609  000BD8  2E05               	decfsz	??_lcd_config^0,f,c
   610  000BDA  D7FC               	bra	u237
   611  000BDC  F000               	nop	
   612  000BDE                     
   613                           ;maincode3.c: 15:     BORRAR_LCD();
   614  000BDE  EC0E  F006         	call	_BORRAR_LCD	;wreg free
   615  000BE2                     
   616                           ;maincode3.c: 16:     CURSOR_HOME();
   617  000BE2  EC0A  F006         	call	_CURSOR_HOME	;wreg free
   618  000BE6                     
   619                           ;maincode3.c: 17:     CURSOR_ONOFF(1);
   620  000BE6  0E01               	movlw	1
   621  000BE8  ECCB  F005         	call	_CURSOR_ONOFF
   622  000BEC  0012               	return		;funcret
   623  000BEE                     __end_of_lcd_config:
   624                           	callstack 0
   625                           
   626 ;; *************** function _LCD_CONFIG *****************
   627 ;; Defined at:
   628 ;;		line 72 in file "../20212_c_el51_servo_ex.X/LCD.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         0       0       0       0       0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0       0       0       0       0
   645 ;;      Totals:         1       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; Hardware stack levels required when called: 2
   649 ;; This function calls:
   650 ;;		_ENVIA_LCD_CMD
   651 ;;		_ENVIA_NIBBLE
   652 ;; This function is called by:
   653 ;;		_lcd_config
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658  000A56                     __ptext2:
   659                           	callstack 0
   660  000A56                     _LCD_CONFIG:
   661                           	callstack 27
   662  000A56                     
   663                           ;../20212_c_el51_servo_ex.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   664  000A56  908C               	bcf	140,0,c	;volatile
   665                           
   666                           ;../20212_c_el51_servo_ex.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   667  000A58  928C               	bcf	140,1,c	;volatile
   668  000A5A                     
   669                           ;../20212_c_el51_servo_ex.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   670  000A5A  0E30               	movlw	48
   671  000A5C  ECF7  F005         	call	_ENVIA_NIBBLE
   672  000A60                     
   673                           ;../20212_c_el51_servo_ex.X/LCD.c: 77:         _delay(24000);
   674  000A60  0E20               	movlw	32
   675  000A62  6E04               	movwf	??_LCD_CONFIG^0,c
   676  000A64  0E2A               	movlw	42
   677  000A66                     u247:
   678  000A66  2EE8               	decfsz	wreg,f,c
   679  000A68  D7FE               	bra	u247
   680  000A6A  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   681  000A6C  D7FC               	bra	u247
   682  000A6E                     
   683                           ;../20212_c_el51_servo_ex.X/LCD.c: 78:         _delay(24000);
   684  000A6E  0E20               	movlw	32
   685  000A70  6E04               	movwf	??_LCD_CONFIG^0,c
   686  000A72  0E2A               	movlw	42
   687  000A74                     u257:
   688  000A74  2EE8               	decfsz	wreg,f,c
   689  000A76  D7FE               	bra	u257
   690  000A78  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   691  000A7A  D7FC               	bra	u257
   692                           
   693                           ;../20212_c_el51_servo_ex.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   694  000A7C  0E30               	movlw	48
   695  000A7E  ECF7  F005         	call	_ENVIA_NIBBLE
   696  000A82                     
   697                           ;../20212_c_el51_servo_ex.X/LCD.c: 83:  _delay(1200);
   698  000A82  0EF0               	movlw	240
   699  000A84                     u267:
   700  000A84  D000               	nop2	
   701  000A86  2EE8               	decfsz	wreg,f,c
   702  000A88  D7FD               	bra	u267
   703  000A8A                     
   704                           ;../20212_c_el51_servo_ex.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   705  000A8A  0E30               	movlw	48
   706  000A8C  ECF7  F005         	call	_ENVIA_NIBBLE
   707  000A90                     
   708                           ;../20212_c_el51_servo_ex.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   709  000A90  0E20               	movlw	32
   710  000A92  ECF7  F005         	call	_ENVIA_NIBBLE
   711  000A96                     
   712                           ;../20212_c_el51_servo_ex.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   713  000A96  0E01               	movlw	1
   714  000A98  EC97  F005         	call	_ENVIA_LCD_CMD
   715  000A9C                     
   716                           ;../20212_c_el51_servo_ex.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   717  000A9C  0E28               	movlw	40
   718  000A9E  EC97  F005         	call	_ENVIA_LCD_CMD
   719  000AA2                     
   720                           ;../20212_c_el51_servo_ex.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   721  000AA2  0E0F               	movlw	15
   722  000AA4  EC97  F005         	call	_ENVIA_LCD_CMD
   723  000AA8                     
   724                           ;../20212_c_el51_servo_ex.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   725  000AA8  0E06               	movlw	6
   726  000AAA  EC97  F005         	call	_ENVIA_LCD_CMD
   727  000AAE                     
   728                           ;../20212_c_el51_servo_ex.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   729  000AAE  0E01               	movlw	1
   730  000AB0  EC97  F005         	call	_ENVIA_LCD_CMD
   731  000AB4  0012               	return		;funcret
   732  000AB6                     __end_of_LCD_CONFIG:
   733                           	callstack 0
   734                           
   735 ;; *************** function _CURSOR_ONOFF *****************
   736 ;; Defined at:
   737 ;;		line 35 in file "../20212_c_el51_servo_ex.X/LCD.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  estado          1    wreg     unsigned char 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  estado          1    3[COMRAM] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         0       0       0       0       0       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         1       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 2
   758 ;; This function calls:
   759 ;;		_ENVIA_LCD_CMD
   760 ;; This function is called by:
   761 ;;		_lcd_config
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text3
   766  000B96                     __ptext3:
   767                           	callstack 0
   768  000B96                     _CURSOR_ONOFF:
   769                           	callstack 27
   770                           
   771                           ;incstack = 0
   772                           ;CURSOR_ONOFF@estado stored from wreg
   773  000B96  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   774  000B98                     
   775                           ;../20212_c_el51_servo_ex.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20212_
      +                          c_el51_servo_ex.X/LCD.c: 36: {;../20212_c_el51_servo_ex.X/LCD.c: 37:  if(estado == 0) EN
      +                          VIA_LCD_CMD(0x0E);
   776  000B98  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   777  000B9A  A4D8               	btfss	status,2,c
   778  000B9C  EFD2  F005         	goto	u21
   779  000BA0  EFD4  F005         	goto	u20
   780  000BA4                     u21:
   781  000BA4  EFD7  F005         	goto	l871
   782  000BA8                     u20:
   783  000BA8  0E0E               	movlw	14
   784  000BAA  EC97  F005         	call	_ENVIA_LCD_CMD
   785  000BAE                     l871:
   786                           
   787                           ;../20212_c_el51_servo_ex.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   788  000BAE  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   789  000BB0  A4D8               	btfss	status,2,c
   790  000BB2  EFDD  F005         	goto	u31
   791  000BB6  EFDF  F005         	goto	u30
   792  000BBA                     u31:
   793  000BBA  EFE2  F005         	goto	l42
   794  000BBE                     u30:
   795  000BBE  0E0C               	movlw	12
   796  000BC0  EC97  F005         	call	_ENVIA_LCD_CMD
   797  000BC4                     l42:
   798  000BC4  0012               	return		;funcret
   799  000BC6                     __end_of_CURSOR_ONOFF:
   800                           	callstack 0
   801                           
   802 ;; *************** function _CURSOR_HOME *****************
   803 ;; Defined at:
   804 ;;		line 30 in file "../20212_c_el51_servo_ex.X/LCD.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   818 ;;      Params:         0       0       0       0       0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 2
   825 ;; This function calls:
   826 ;;		_ENVIA_LCD_CMD
   827 ;; This function is called by:
   828 ;;		_lcd_config
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           	psect	text4
   833  000C14                     __ptext4:
   834                           	callstack 0
   835  000C14                     _CURSOR_HOME:
   836                           	callstack 27
   837  000C14                     
   838                           ;../20212_c_el51_servo_ex.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   839  000C14  0E02               	movlw	2
   840  000C16  EC97  F005         	call	_ENVIA_LCD_CMD
   841  000C1A  0012               	return		;funcret
   842  000C1C                     __end_of_CURSOR_HOME:
   843                           	callstack 0
   844                           
   845 ;; *************** function _BORRAR_LCD *****************
   846 ;; Defined at:
   847 ;;		line 67 in file "../20212_c_el51_servo_ex.X/LCD.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 2
   868 ;; This function calls:
   869 ;;		_ENVIA_LCD_CMD
   870 ;; This function is called by:
   871 ;;		_lcd_config
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text5
   876  000C1C                     __ptext5:
   877                           	callstack 0
   878  000C1C                     _BORRAR_LCD:
   879                           	callstack 27
   880  000C1C                     
   881                           ;../20212_c_el51_servo_ex.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   882  000C1C  0E01               	movlw	1
   883  000C1E  EC97  F005         	call	_ENVIA_LCD_CMD
   884  000C22  0012               	return		;funcret
   885  000C24                     __end_of_BORRAR_LCD:
   886                           	callstack 0
   887                           
   888 ;; *************** function _configuro *****************
   889 ;; Defined at:
   890 ;;		line 6 in file "maincode3.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, status,2
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   904 ;;      Params:         0       0       0       0       0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0
   906 ;;      Temps:          0       0       0       0       0       0       0       0       0
   907 ;;      Totals:         0       0       0       0       0       0       0       0       0
   908 ;;Total ram usage:        0 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_main
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text6
   918  000C24                     __ptext6:
   919                           	callstack 0
   920  000C24                     _configuro:
   921                           	callstack 30
   922  000C24                     
   923                           ;maincode3.c: 7:     ADCON1 = 0x0F;
   924  000C24  0E0F               	movlw	15
   925  000C26  6EC1               	movwf	193,c	;volatile
   926  000C28                     
   927                           ;maincode3.c: 8:     TRISEbits.RE0 = 0;
   928  000C28  9096               	bcf	150,0,c	;volatile
   929  000C2A  0012               	return		;funcret
   930  000C2C                     __end_of_configuro:
   931                           	callstack 0
   932                           
   933 ;; *************** function _POS_CURSOR *****************
   934 ;; Defined at:
   935 ;;		line 6 in file "../20212_c_el51_servo_ex.X/LCD.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  fila            1    wreg     unsigned char 
   938 ;;  columna         1    3[COMRAM] unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  fila            1    4[COMRAM] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         1       0       0       0       0       0       0       0       0
   951 ;;      Locals:         1       0       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         2       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; Hardware stack levels required when called: 2
   957 ;; This function calls:
   958 ;;		_ENVIA_LCD_CMD
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text7
   965  000AF4                     __ptext7:
   966                           	callstack 0
   967  000AF4                     _POS_CURSOR:
   968                           	callstack 28
   969                           
   970                           ;incstack = 0
   971                           ;POS_CURSOR@fila stored from wreg
   972  000AF4  6E05               	movwf	POS_CURSOR@fila^0,c
   973  000AF6                     
   974                           ;../20212_c_el51_servo_ex.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char c
      +                          olumna);../20212_c_el51_servo_ex.X/LCD.c: 7: {;../20212_c_el51_servo_ex.X/LCD.c: 8:  if(
      +                          fila == 1)
   975  000AF6  0405               	decf	POS_CURSOR@fila^0,w,c
   976  000AF8  A4D8               	btfss	status,2,c
   977  000AFA  EF81  F005         	goto	u121
   978  000AFE  EF83  F005         	goto	u120
   979  000B02                     u121:
   980  000B02  EF89  F005         	goto	l1071
   981  000B06                     u120:
   982  000B06                     
   983                           ;../20212_c_el51_servo_ex.X/LCD.c: 9:  {;../20212_c_el51_servo_ex.X/LCD.c: 10:   ENVIA_L
      +                          CD_CMD(0x80+columna);
   984  000B06  5004               	movf	POS_CURSOR@columna^0,w,c
   985  000B08  0F80               	addlw	128
   986  000B0A  EC97  F005         	call	_ENVIA_LCD_CMD
   987                           
   988                           ;../20212_c_el51_servo_ex.X/LCD.c: 11:  }
   989  000B0E  EF96  F005         	goto	l24
   990  000B12                     l1071:
   991  000B12  0E02               	movlw	2
   992  000B14  1805               	xorwf	POS_CURSOR@fila^0,w,c
   993  000B16  A4D8               	btfss	status,2,c
   994  000B18  EF90  F005         	goto	u131
   995  000B1C  EF92  F005         	goto	u130
   996  000B20                     u131:
   997  000B20  EF96  F005         	goto	l24
   998  000B24                     u130:
   999  000B24                     
  1000                           ;../20212_c_el51_servo_ex.X/LCD.c: 13:  {;../20212_c_el51_servo_ex.X/LCD.c: 14:   ENVIA_
      +                          LCD_CMD(0xC0+columna);
  1001  000B24  5004               	movf	POS_CURSOR@columna^0,w,c
  1002  000B26  0FC0               	addlw	192
  1003  000B28  EC97  F005         	call	_ENVIA_LCD_CMD
  1004  000B2C                     l24:
  1005  000B2C  0012               	return		;funcret
  1006  000B2E                     __end_of_POS_CURSOR:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _ENVIA_LCD_CMD *****************
  1010 ;; Defined at:
  1011 ;;		line 104 in file "../20212_c_el51_servo_ex.X/LCD.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  dato            1    wreg     unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  dato            1    1[COMRAM] unsigned char 
  1016 ;;  aux             1    2[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0
  1027 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1029 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1030 ;;Total ram usage:        2 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 1
  1033 ;; This function calls:
  1034 ;;		_ENVIA_NIBBLE
  1035 ;;		_LEER_LCD
  1036 ;; This function is called by:
  1037 ;;		_POS_CURSOR
  1038 ;;		_CURSOR_HOME
  1039 ;;		_CURSOR_ONOFF
  1040 ;;		_BORRAR_LCD
  1041 ;;		_LCD_CONFIG
  1042 ;;		_BLINK_CURSOR
  1043 ;;		_DISPLAY_ONOFF
  1044 ;;		_GENERACARACTER
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text8
  1049  000B2E                     __ptext8:
  1050                           	callstack 0
  1051  000B2E                     _ENVIA_LCD_CMD:
  1052                           	callstack 27
  1053                           
  1054                           ;incstack = 0
  1055                           ;ENVIA_LCD_CMD@dato stored from wreg
  1056  000B2E  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1057  000B30                     
  1058                           ;../20212_c_el51_servo_ex.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20212_
      +                          c_el51_servo_ex.X/LCD.c: 105: {;../20212_c_el51_servo_ex.X/LCD.c: 106:  unsigned char au
      +                          x;;../20212_c_el51_servo_ex.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  1059  000B30  908C               	bcf	140,0,c	;volatile
  1060  000B32                     
  1061                           ;../20212_c_el51_servo_ex.X/LCD.c: 108:  LEER_LCD();
  1062  000B32  ECF2  F004         	call	_LEER_LCD	;wreg free
  1063  000B36                     
  1064                           ;../20212_c_el51_servo_ex.X/LCD.c: 109:  TRISD = 0b00000000;
  1065  000B36  0E00               	movlw	0
  1066  000B38  6E95               	movwf	149,c	;volatile
  1067  000B3A                     
  1068                           ;../20212_c_el51_servo_ex.X/LCD.c: 111:         _delay(1200);
  1069  000B3A  0EF0               	movlw	240
  1070  000B3C                     u277:
  1071  000B3C  D000               	nop2	
  1072  000B3E  2EE8               	decfsz	wreg,f,c
  1073  000B40  D7FD               	bra	u277
  1074  000B42                     
  1075                           ;../20212_c_el51_servo_ex.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  1076  000B42  928C               	bcf	140,1,c	;volatile
  1077  000B44                     
  1078                           ;../20212_c_el51_servo_ex.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  1079  000B44  948C               	bcf	140,2,c	;volatile
  1080  000B46                     
  1081                           ;../20212_c_el51_servo_ex.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  1082  000B46  908C               	bcf	140,0,c	;volatile
  1083  000B48                     
  1084                           ;../20212_c_el51_servo_ex.X/LCD.c: 115:  aux = dato & 0xF0;
  1085  000B48  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1086  000B4A  0BF0               	andlw	240
  1087  000B4C  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1088  000B4E                     
  1089                           ;../20212_c_el51_servo_ex.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  1090  000B4E  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1091  000B50  ECF7  F005         	call	_ENVIA_NIBBLE
  1092  000B54                     
  1093                           ;../20212_c_el51_servo_ex.X/LCD.c: 117:  aux = dato<<4;
  1094  000B54  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1095  000B56  0BF0               	andlw	240
  1096  000B58  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1097  000B5A                     
  1098                           ;../20212_c_el51_servo_ex.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  1099  000B5A  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1100  000B5C  ECF7  F005         	call	_ENVIA_NIBBLE
  1101  000B60  0012               	return		;funcret
  1102  000B62                     __end_of_ENVIA_LCD_CMD:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _ESCRIBE_MENSAJE *****************
  1106 ;; Defined at:
  1107 ;;		line 41 in file "../20212_c_el51_servo_ex.X/LCD.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1110 ;;		 -> STR_5(12), STR_4(12), STR_3(12), STR_2(12), 
  1111 ;;		 -> STR_1(16), 
  1112 ;;  tam             1    5[COMRAM] unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  i               1    8[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         3       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        6 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 2
  1131 ;; This function calls:
  1132 ;;		_ENVIA_CHAR
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text9
  1139  000AB6                     __ptext9:
  1140                           	callstack 0
  1141  000AB6                     _ESCRIBE_MENSAJE:
  1142                           	callstack 28
  1143  000AB6                     
  1144                           ;../20212_c_el51_servo_ex.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned 
      +                          char tam);../20212_c_el51_servo_ex.X/LCD.c: 42: {;../20212_c_el51_servo_ex.X/LCD.c: 43: 
      +                           unsigned char i = 0;
  1145  000AB6  0E00               	movlw	0
  1146  000AB8  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1147                           
  1148                           ;../20212_c_el51_servo_ex.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  1149  000ABA  0E00               	movlw	0
  1150  000ABC  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1151  000ABE  EF70  F005         	goto	l1081
  1152  000AC2                     l1077:
  1153                           
  1154                           ;../20212_c_el51_servo_ex.X/LCD.c: 45:  {;../20212_c_el51_servo_ex.X/LCD.c: 46:   ENVIA_
      +                          CHAR(cadena[i]);
  1155  000AC2  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1156  000AC4  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1157  000AC6  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1158  000AC8  0E00               	movlw	0
  1159  000ACA  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1160  000ACC  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1161  000ACE  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1162  000AD2  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1163  000AD6                     	if	0	;tblptru may be non-zero
  1164  000AD6                     	endif
  1165  000AD6                     	if	0	;tblptru may be non-zero
  1166  000AD6                     	endif
  1167  000AD6  0008               	tblrd		*
  1168  000AD8  50F5               	movf	tablat,w,c
  1169  000ADA  ECB1  F005         	call	_ENVIA_CHAR
  1170  000ADE                     
  1171                           ;../20212_c_el51_servo_ex.X/LCD.c: 47:  }
  1172  000ADE  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1173  000AE0                     l1081:
  1174  000AE0  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1175  000AE2  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1176  000AE4  A0D8               	btfss	status,0,c
  1177  000AE6  EF77  F005         	goto	u141
  1178  000AEA  EF79  F005         	goto	u140
  1179  000AEE                     u141:
  1180  000AEE  EF61  F005         	goto	l1077
  1181  000AF2                     u140:
  1182  000AF2  0012               	return		;funcret
  1183  000AF4                     __end_of_ESCRIBE_MENSAJE:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _ENVIA_CHAR *****************
  1187 ;; Defined at:
  1188 ;;		line 50 in file "../20212_c_el51_servo_ex.X/LCD.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  dato            1    wreg     unsigned char 
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  dato            1    1[COMRAM] unsigned char 
  1193 ;;  aux             1    2[COMRAM] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0
  1204 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1206 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 1
  1210 ;; This function calls:
  1211 ;;		_ENVIA_NIBBLE
  1212 ;;		_LEER_LCD
  1213 ;; This function is called by:
  1214 ;;		_ESCRIBE_MENSAJE
  1215 ;;		_main
  1216 ;;		_GENERACARACTER
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text10
  1221  000B62                     __ptext10:
  1222                           	callstack 0
  1223  000B62                     _ENVIA_CHAR:
  1224                           	callstack 28
  1225                           
  1226                           ;incstack = 0
  1227                           ;ENVIA_CHAR@dato stored from wreg
  1228  000B62  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1229  000B64                     
  1230                           ;../20212_c_el51_servo_ex.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20212_c_el
      +                          51_servo_ex.X/LCD.c: 51: {;../20212_c_el51_servo_ex.X/LCD.c: 52:  unsigned char aux;;../
      +                          20212_c_el51_servo_ex.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  1231  000B64  808C               	bsf	140,0,c	;volatile
  1232  000B66                     
  1233                           ;../20212_c_el51_servo_ex.X/LCD.c: 54:  LEER_LCD();
  1234  000B66  ECF2  F004         	call	_LEER_LCD	;wreg free
  1235  000B6A                     
  1236                           ;../20212_c_el51_servo_ex.X/LCD.c: 55:  TRISD = 0x00;
  1237  000B6A  0E00               	movlw	0
  1238  000B6C  6E95               	movwf	149,c	;volatile
  1239  000B6E                     
  1240                           ;../20212_c_el51_servo_ex.X/LCD.c: 56:         _delay(1200);
  1241  000B6E  0EF0               	movlw	240
  1242  000B70                     u287:
  1243  000B70  D000               	nop2	
  1244  000B72  2EE8               	decfsz	wreg,f,c
  1245  000B74  D7FD               	bra	u287
  1246  000B76                     
  1247                           ;../20212_c_el51_servo_ex.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1248  000B76  928C               	bcf	140,1,c	;volatile
  1249  000B78                     
  1250                           ;../20212_c_el51_servo_ex.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1251  000B78  948C               	bcf	140,2,c	;volatile
  1252  000B7A                     
  1253                           ;../20212_c_el51_servo_ex.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1254  000B7A  808C               	bsf	140,0,c	;volatile
  1255  000B7C                     
  1256                           ;../20212_c_el51_servo_ex.X/LCD.c: 61:  aux = dato & 0xF0;
  1257  000B7C  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1258  000B7E  0BF0               	andlw	240
  1259  000B80  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1260  000B82                     
  1261                           ;../20212_c_el51_servo_ex.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1262  000B82  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1263  000B84  ECF7  F005         	call	_ENVIA_NIBBLE
  1264  000B88                     
  1265                           ;../20212_c_el51_servo_ex.X/LCD.c: 63:  aux = dato << 4;
  1266  000B88  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1267  000B8A  0BF0               	andlw	240
  1268  000B8C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1269  000B8E                     
  1270                           ;../20212_c_el51_servo_ex.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1271  000B8E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1272  000B90  ECF7  F005         	call	_ENVIA_NIBBLE
  1273  000B94  0012               	return		;funcret
  1274  000B96                     __end_of_ENVIA_CHAR:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _LEER_LCD *****************
  1278 ;; Defined at:
  1279 ;;		line 121 in file "../20212_c_el51_servo_ex.X/LCD.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  aux             1    0[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        1 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_ENVIA_CHAR
  1303 ;;		_ENVIA_LCD_CMD
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text11
  1308  0009E4                     __ptext11:
  1309                           	callstack 0
  1310  0009E4                     _LEER_LCD:
  1311                           	callstack 27
  1312  0009E4                     
  1313                           ;../20212_c_el51_servo_ex.X/LCD.c: 123:  unsigned char aux;;../20212_c_el51_servo_ex.X/L
      +                          CD.c: 124:  TRISD = 0xF8;
  1314  0009E4  0EF8               	movlw	248
  1315  0009E6  6E95               	movwf	149,c	;volatile
  1316  0009E8                     
  1317                           ;../20212_c_el51_servo_ex.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1318  0009E8  908C               	bcf	140,0,c	;volatile
  1319  0009EA                     
  1320                           ;../20212_c_el51_servo_ex.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1321  0009EA  828C               	bsf	140,1,c	;volatile
  1322  0009EC                     
  1323                           ;../20212_c_el51_servo_ex.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1324  0009EC  848C               	bsf	140,2,c	;volatile
  1325  0009EE                     
  1326                           ;../20212_c_el51_servo_ex.X/LCD.c: 128:         _delay(1200);
  1327  0009EE  0EF0               	movlw	240
  1328  0009F0                     u297:
  1329  0009F0  D000               	nop2	
  1330  0009F2  2EE8               	decfsz	wreg,f,c
  1331  0009F4  D7FD               	bra	u297
  1332  0009F6                     
  1333                           ;../20212_c_el51_servo_ex.X/LCD.c: 130:  aux = PORTD;
  1334  0009F6  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1335  0009FA                     
  1336                           ;../20212_c_el51_servo_ex.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1337  0009FA  948C               	bcf	140,2,c	;volatile
  1338  0009FC                     
  1339                           ;../20212_c_el51_servo_ex.X/LCD.c: 132:         _delay(1200);
  1340  0009FC  0EF0               	movlw	240
  1341  0009FE                     u307:
  1342  0009FE  D000               	nop2	
  1343  000A00  2EE8               	decfsz	wreg,f,c
  1344  000A02  D7FD               	bra	u307
  1345  000A04                     
  1346                           ;../20212_c_el51_servo_ex.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1347  000A04  848C               	bsf	140,2,c	;volatile
  1348  000A06                     
  1349                           ;../20212_c_el51_servo_ex.X/LCD.c: 135:         _delay(1200);
  1350  000A06  0EF0               	movlw	240
  1351  000A08                     u317:
  1352  000A08  D000               	nop2	
  1353  000A0A  2EE8               	decfsz	wreg,f,c
  1354  000A0C  D7FD               	bra	u317
  1355  000A0E                     
  1356                           ;../20212_c_el51_servo_ex.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1357  000A0E  948C               	bcf	140,2,c	;volatile
  1358  000A10                     l819:
  1359                           
  1360                           ;../20212_c_el51_servo_ex.X/LCD.c: 138:  aux = aux & 0x80;
  1361  000A10  5001               	movf	LEER_LCD@aux^0,w,c
  1362  000A12  0B80               	andlw	128
  1363  000A14  6E01               	movwf	LEER_LCD@aux^0,c
  1364                           
  1365                           ;../20212_c_el51_servo_ex.X/LCD.c: 139:  while(aux == 0x80)
  1366  000A16  EF21  F005         	goto	l833
  1367  000A1A                     l67:
  1368                           
  1369                           ;../20212_c_el51_servo_ex.X/LCD.c: 140:         {;../20212_c_el51_servo_ex.X/LCD.c: 141:
      +                                       LATDbits.LATD2 = 1;
  1370  000A1A  848C               	bsf	140,2,c	;volatile
  1371  000A1C                     
  1372                           ;../20212_c_el51_servo_ex.X/LCD.c: 142:             _delay(1200);
  1373  000A1C  0EF0               	movlw	240
  1374  000A1E                     u327:
  1375  000A1E  D000               	nop2	
  1376  000A20  2EE8               	decfsz	wreg,f,c
  1377  000A22  D7FD               	bra	u327
  1378  000A24                     
  1379                           ;../20212_c_el51_servo_ex.X/LCD.c: 143:             aux = PORTD;
  1380  000A24  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1381  000A28                     
  1382                           ;../20212_c_el51_servo_ex.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1383  000A28  948C               	bcf	140,2,c	;volatile
  1384                           
  1385                           ;../20212_c_el51_servo_ex.X/LCD.c: 145:             _delay(1200);
  1386  000A2A  0EF0               	movlw	240
  1387  000A2C                     u337:
  1388  000A2C  D000               	nop2	
  1389  000A2E  2EE8               	decfsz	wreg,f,c
  1390  000A30  D7FD               	bra	u337
  1391  000A32                     
  1392                           ;../20212_c_el51_servo_ex.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1393  000A32  848C               	bsf	140,2,c	;volatile
  1394                           
  1395                           ;../20212_c_el51_servo_ex.X/LCD.c: 147:             _delay(1200);
  1396  000A34  0EF0               	movlw	240
  1397  000A36                     u347:
  1398  000A36  D000               	nop2	
  1399  000A38  2EE8               	decfsz	wreg,f,c
  1400  000A3A  D7FD               	bra	u347
  1401  000A3C                     
  1402                           ;../20212_c_el51_servo_ex.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1403  000A3C  948C               	bcf	140,2,c	;volatile
  1404  000A3E  EF08  F005         	goto	l819
  1405  000A42                     l833:
  1406                           
  1407                           ;../20212_c_el51_servo_ex.X/LCD.c: 139:  while(aux == 0x80)
  1408  000A42  0E80               	movlw	128
  1409  000A44  1801               	xorwf	LEER_LCD@aux^0,w,c
  1410  000A46  B4D8               	btfsc	status,2,c
  1411  000A48  EF28  F005         	goto	u11
  1412  000A4C  EF2A  F005         	goto	u10
  1413  000A50                     u11:
  1414  000A50  EF0D  F005         	goto	l67
  1415  000A54                     u10:
  1416  000A54  0012               	return		;funcret
  1417  000A56                     __end_of_LEER_LCD:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _ENVIA_NIBBLE *****************
  1421 ;; Defined at:
  1422 ;;		line 93 in file "../20212_c_el51_servo_ex.X/LCD.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  dato            1    wreg     unsigned char 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;  dato            1    0[COMRAM] unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0
  1437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1440 ;;Total ram usage:        1 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_ENVIA_CHAR
  1446 ;;		_LCD_CONFIG
  1447 ;;		_ENVIA_LCD_CMD
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text12
  1452  000BEE                     __ptext12:
  1453                           	callstack 0
  1454  000BEE                     _ENVIA_NIBBLE:
  1455                           	callstack 28
  1456                           
  1457                           ;incstack = 0
  1458                           ;ENVIA_NIBBLE@dato stored from wreg
  1459  000BEE  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1460  000BF0                     
  1461                           ;../20212_c_el51_servo_ex.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20212_c_
      +                          el51_servo_ex.X/LCD.c: 94: {;../20212_c_el51_servo_ex.X/LCD.c: 95:  LATD &= 0x0F;
  1462  000BF0  0E0F               	movlw	15
  1463  000BF2  168C               	andwf	140,f,c	;volatile
  1464                           
  1465                           ;../20212_c_el51_servo_ex.X/LCD.c: 96:  dato &= 0xF0;
  1466  000BF4  0EF0               	movlw	240
  1467  000BF6  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1468                           
  1469                           ;../20212_c_el51_servo_ex.X/LCD.c: 97:  LATD|= dato;
  1470  000BF8  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1471  000BFA  128C               	iorwf	140,f,c	;volatile
  1472  000BFC                     
  1473                           ;../20212_c_el51_servo_ex.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1474  000BFC  848C               	bsf	140,2,c	;volatile
  1475  000BFE                     
  1476                           ;../20212_c_el51_servo_ex.X/LCD.c: 100:         _delay(1200);
  1477  000BFE  0EF0               	movlw	240
  1478  000C00                     u357:
  1479  000C00  D000               	nop2	
  1480  000C02  2EE8               	decfsz	wreg,f,c
  1481  000C04  D7FD               	bra	u357
  1482  000C06                     
  1483                           ;../20212_c_el51_servo_ex.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1484  000C06  948C               	bcf	140,2,c	;volatile
  1485  000C08  0012               	return		;funcret
  1486  000C0A                     __end_of_ENVIA_NIBBLE:
  1487                           	callstack 0
  1488                           
  1489                           	psect	rparam
  1490  0000                     
  1491                           	psect	idloc
  1492                           
  1493                           ;Config register IDLOC0 @ 0x200000
  1494                           ;	unspecified, using default values
  1495  200000                     	org	2097152
  1496  200000  FF                 	db	255
  1497                           
  1498                           ;Config register IDLOC1 @ 0x200001
  1499                           ;	unspecified, using default values
  1500  200001                     	org	2097153
  1501  200001  FF                 	db	255
  1502                           
  1503                           ;Config register IDLOC2 @ 0x200002
  1504                           ;	unspecified, using default values
  1505  200002                     	org	2097154
  1506  200002  FF                 	db	255
  1507                           
  1508                           ;Config register IDLOC3 @ 0x200003
  1509                           ;	unspecified, using default values
  1510  200003                     	org	2097155
  1511  200003  FF                 	db	255
  1512                           
  1513                           ;Config register IDLOC4 @ 0x200004
  1514                           ;	unspecified, using default values
  1515  200004                     	org	2097156
  1516  200004  FF                 	db	255
  1517                           
  1518                           ;Config register IDLOC5 @ 0x200005
  1519                           ;	unspecified, using default values
  1520  200005                     	org	2097157
  1521  200005  FF                 	db	255
  1522                           
  1523                           ;Config register IDLOC6 @ 0x200006
  1524                           ;	unspecified, using default values
  1525  200006                     	org	2097158
  1526  200006  FF                 	db	255
  1527                           
  1528                           ;Config register IDLOC7 @ 0x200007
  1529                           ;	unspecified, using default values
  1530  200007                     	org	2097159
  1531  200007  FF                 	db	255
  1532                           
  1533                           	psect	config
  1534                           
  1535                           ;Config register CONFIG1L @ 0x300000
  1536                           ;	PLL Prescaler Selection bits
  1537                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1538                           ;	System Clock Postscaler Selection bits
  1539                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1540                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1541                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1542  300000                     	org	3145728
  1543  300000  00                 	db	0
  1544                           
  1545                           ;Config register CONFIG1H @ 0x300001
  1546                           ;	Oscillator Selection bits
  1547                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1548                           ;	Fail-Safe Clock Monitor Enable bit
  1549                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1550                           ;	Internal/External Oscillator Switchover bit
  1551                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1552  300001                     	org	3145729
  1553  300001  02                 	db	2
  1554                           
  1555                           ;Config register CONFIG2L @ 0x300002
  1556                           ;	Power-up Timer Enable bit
  1557                           ;	PWRT = ON, PWRT enabled
  1558                           ;	Brown-out Reset Enable bits
  1559                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1560                           ;	Brown-out Reset Voltage bits
  1561                           ;	BORV = 3, Minimum setting 2.05V
  1562                           ;	USB Voltage Regulator Enable bit
  1563                           ;	VREGEN = OFF, USB voltage regulator disabled
  1564  300002                     	org	3145730
  1565  300002  18                 	db	24
  1566                           
  1567                           ;Config register CONFIG2H @ 0x300003
  1568                           ;	Watchdog Timer Enable bit
  1569                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1570                           ;	Watchdog Timer Postscale Select bits
  1571                           ;	WDTPS = 32768, 1:32768
  1572  300003                     	org	3145731
  1573  300003  1E                 	db	30
  1574                           
  1575                           ; Padding undefined space
  1576  300004                     	org	3145732
  1577  300004  FF                 	db	255
  1578                           
  1579                           ;Config register CONFIG3H @ 0x300005
  1580                           ;	CCP2 MUX bit
  1581                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1582                           ;	PORTB A/D Enable bit
  1583                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1584                           ;	Low-Power Timer 1 Oscillator Enable bit
  1585                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1586                           ;	MCLR Pin Enable bit
  1587                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1588  300005                     	org	3145733
  1589  300005  81                 	db	129
  1590                           
  1591                           ;Config register CONFIG4L @ 0x300006
  1592                           ;	Stack Full/Underflow Reset Enable bit
  1593                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1594                           ;	Single-Supply ICSP Enable bit
  1595                           ;	LVP = OFF, Single-Supply ICSP disabled
  1596                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1597                           ;	ICPRT = OFF, ICPORT disabled
  1598                           ;	Extended Instruction Set Enable bit
  1599                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1600                           ;	Background Debugger Enable bit
  1601                           ;	DEBUG = 0x1, unprogrammed default
  1602  300006                     	org	3145734
  1603  300006  81                 	db	129
  1604                           
  1605                           ; Padding undefined space
  1606  300007                     	org	3145735
  1607  300007  FF                 	db	255
  1608                           
  1609                           ;Config register CONFIG5L @ 0x300008
  1610                           ;	Code Protection bit
  1611                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1612                           ;	Code Protection bit
  1613                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1614                           ;	Code Protection bit
  1615                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1616                           ;	Code Protection bit
  1617                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1618  300008                     	org	3145736
  1619  300008  0F                 	db	15
  1620                           
  1621                           ;Config register CONFIG5H @ 0x300009
  1622                           ;	Boot Block Code Protection bit
  1623                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1624                           ;	Data EEPROM Code Protection bit
  1625                           ;	CPD = OFF, Data EEPROM is not code-protected
  1626  300009                     	org	3145737
  1627  300009  C0                 	db	192
  1628                           
  1629                           ;Config register CONFIG6L @ 0x30000A
  1630                           ;	Write Protection bit
  1631                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1632                           ;	Write Protection bit
  1633                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1634                           ;	Write Protection bit
  1635                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1636                           ;	Write Protection bit
  1637                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1638  30000A                     	org	3145738
  1639  30000A  0F                 	db	15
  1640                           
  1641                           ;Config register CONFIG6H @ 0x30000B
  1642                           ;	Configuration Register Write Protection bit
  1643                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1644                           ;	Boot Block Write Protection bit
  1645                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1646                           ;	Data EEPROM Write Protection bit
  1647                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1648  30000B                     	org	3145739
  1649  30000B  E0                 	db	224
  1650                           
  1651                           ;Config register CONFIG7L @ 0x30000C
  1652                           ;	Table Read Protection bit
  1653                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1654                           ;	Table Read Protection bit
  1655                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1656                           ;	Table Read Protection bit
  1657                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1658                           ;	Table Read Protection bit
  1659                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1660  30000C                     	org	3145740
  1661  30000C  0F                 	db	15
  1662                           
  1663                           ;Config register CONFIG7H @ 0x30000D
  1664                           ;	Boot Block Table Read Protection bit
  1665                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1666  30000D                     	org	3145741
  1667  30000D  40                 	db	64
  1668                           tosu	equ	0xFFF
  1669                           tosh	equ	0xFFE
  1670                           tosl	equ	0xFFD
  1671                           stkptr	equ	0xFFC
  1672                           pclatu	equ	0xFFB
  1673                           pclath	equ	0xFFA
  1674                           pcl	equ	0xFF9
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           prodh	equ	0xFF4
  1680                           prodl	equ	0xFF3
  1681                           indf0	equ	0xFEF
  1682                           postinc0	equ	0xFEE
  1683                           postdec0	equ	0xFED
  1684                           preinc0	equ	0xFEC
  1685                           plusw0	equ	0xFEB
  1686                           fsr0h	equ	0xFEA
  1687                           fsr0l	equ	0xFE9
  1688                           wreg	equ	0xFE8
  1689                           indf1	equ	0xFE7
  1690                           postinc1	equ	0xFE6
  1691                           postdec1	equ	0xFE5
  1692                           preinc1	equ	0xFE4
  1693                           plusw1	equ	0xFE3
  1694                           fsr1h	equ	0xFE2
  1695                           fsr1l	equ	0xFE1
  1696                           bsr	equ	0xFE0
  1697                           indf2	equ	0xFDF
  1698                           postinc2	equ	0xFDE
  1699                           postdec2	equ	0xFDD
  1700                           preinc2	equ	0xFDC
  1701                           plusw2	equ	0xFDB
  1702                           fsr2h	equ	0xFDA
  1703                           fsr2l	equ	0xFD9
  1704                           status	equ	0xFD8

Data Sizes:
    Strings     64
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[12]), STR_4(CODE[12]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_config->_CURSOR_ONOFF
    _lcd_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2228
                                              9 COMRAM     3     3      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     588
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     971
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_config
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      C       C       1       12.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 25 20:37:53 2021

                      l24 0B2C                        l42 0BC4                        l51 0B94  
                      l60 0C08                        l37 0C1A                        l54 0C22  
                      l63 0B60                        l48 0AF2                        l57 0AB4  
                      l67 0A1A                        l69 0A54                        u10 0A54  
                      u11 0A50                        u20 0BA8                        u21 0BA4  
                      u30 0BBE                        u31 0BBA             ENVIA_CHAR@aux 0003  
                     l103 0C2A                       l106 0BEC                       l801 09EA  
                     l811 09FC                       l803 09EC                       l821 0A1C  
                     l813 0A04                       l805 09EE                       l901 0A5A  
                     l823 0A24                       l815 0A06                       l807 09F6  
                     l911 0A90                       l903 0A60                       l841 0C06  
                     l825 0A28                       l833 0A42                       l817 0A0E  
                     l809 09FA                       l921 0AAE                       l913 0A96  
                     l905 0A6E                       l835 0BF0                       l827 0A32  
                     l819 0A10                       l851 0B42                       l843 0B30  
                     l915 0A9C                       l907 0A82                       l837 0BFC  
                     l829 0A3C                       l861 0B54                       l853 0B44  
                     l845 0B32                       l941 0C28                       l917 0AA2  
                     l909 0A8A                       l839 0BFE                       l863 0B5A  
                     l855 0B46                       l847 0B36                       l871 0BAE  
                     l919 0AA8                       l951 0BE2                       l943 0BC6  
                     l881 0B6E                       l857 0B48                       l849 0B3A  
                     l865 0C14                       l873 0BBE                       l953 0BE6  
                     l945 0BCA                       l891 0B82                       l883 0B76  
                     l875 0B64                       l859 0B4E                       l939 0C24  
                     l867 0B98                       l947 0BCE                       l797 09E4  
                     l893 0B88                       l885 0B78                       l877 0B66  
                     l869 0BA8                       l949 0BDE                       l799 09E8  
                     l895 0B8E                       l887 0B7A                       l879 0B6A  
                     l889 0B7C                       l897 0C1C                       l899 0A56  
                     u120 0B06                       u121 0B02                       u130 0B24  
                     u131 0B20                       u140 0AF2                       u141 0AEE  
                     u207 0948                       u217 0982                       u307 09FE  
                     u227 0996                       u317 0A08                       u237 0BD4  
                     u157 0896                       u327 0A1E                       u247 0A66  
                     u167 08AC                       u337 0A2C                       u257 0A74  
                     u177 08E6                       u347 0A36                       u267 0A84  
                     u187 08FA                       u357 0C00                       u277 0B3C  
                     u197 0932                       u287 0B70                       u297 09F0  
             LEER_LCD@aux 0001                       wreg 000FE8              ?_CURSOR_HOME 0001  
          ??_ENVIA_NIBBLE 0001            ENVIA_CHAR@dato 0002                      l1101 088E  
                    l1111 08C8                      l1103 0890                      l1121 08F0  
                    l1113 08D8                      l1105 08A0                      l1131 092C  
                    l1123 090A                      l1115 08DE                      l1107 08A2  
                    l1141 0974                      l1133 093C                      l1125 0914  
                    l1117 08E0                      l1109 08BE                      l1071 0B12  
                    l1143 097A                      l1135 093E                      l1127 0924  
                    l1119 08EE                      l1081 0AE0                      l1073 0B24  
                    l1145 097C                      l1137 095A                      l1129 092A  
                    l1153 09A6                      l1075 0AB6                      l1067 0AF6  
                    l1163 09BA                      l1147 098A                      l1139 0964  
                    l1091 0854                      l1083 0842                      l1077 0AC2  
                    l1069 0B06                      l1149 098C                      l1093 0864  
                    l1085 0842                      l1079 0ADE                      l1095 086E  
                    l1087 0846                      l1097 0878                      l1089 084A  
                    l1099 0888                      STR_1 0801                      STR_2 0811  
                    STR_3 0835                      STR_4 0829                      STR_5 081D  
                    _LATD 000F8C               main@entrada 000C                      _main 0842  
                    start 0000             ?_CURSOR_ONOFF 0001              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0A56       __size_of_BORRAR_LCD 0008  
                   ?_main 0001                     _PORTB 000F81                     _PORTD 000F83  
     __size_of_LCD_CONFIG 0060                     _TRISD 000F95       __size_of_ENVIA_CHAR 0034  
             ?_POS_CURSOR 0004                     tablat 000FF5                     status 000FD8  
          ??_CURSOR_ONOFF 0004           __initialization 0C0A              __end_of_main 09E4  
         _ESCRIBE_MENSAJE 0AB6                    ??_main 000A             __activetblptr 000002  
                  _ADCON1 000FC1      __end_of_ENVIA_NIBBLE 0C0A       __size_of_POS_CURSOR 003A  
                  isa$std 000001              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0C0A              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0AF4            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0C24          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0BC6  
      __end_of_LCD_CONFIG 0AB6        __end_of_ENVIA_CHAR 0B96        __size_of_configuro 0008  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001                _lcd_config 0BC6  
            ??_POS_CURSOR 0005     __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000  
                 __Lparam 0000          ?_ESCRIBE_MENSAJE 0004         __end_of_configuro 0C2C  
            __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0B62                   __pcinit 0C0A  
      __end_of_POS_CURSOR 0B2E                   __ramtop 0800                   __ptext0 0842  
                 __ptext1 0BC6                   __ptext2 0A56                   __ptext3 0B96  
                 __ptext4 0C14                   __ptext5 0C1C                   __ptext6 0C24  
                 __ptext7 0AF4                   __ptext8 0B2E                   __ptext9 0AB6  
            _ENVIA_NIBBLE 0BEE      end_of_initialization 0C0A             __Lmediumconst 0000  
   __size_of_CURSOR_ONOFF 0030               ?_lcd_config 0001                 _TRISEbits 000F96  
       __size_of_LEER_LCD 0072              _CURSOR_ONOFF 0B96        CURSOR_ONOFF@estado 0004  
           ??_CURSOR_HOME 0004       start_initialization 0C0A         ENVIA_LCD_CMD@dato 0002  
     __size_of_lcd_config 0028       __end_of_CURSOR_HOME 0C1C                 _configuro 0C24  
             __smallconst 0800                  _LEER_LCD 09E4                  _LATDbits 000F8C  
                _LATEbits 000F8D          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
              ?_configuro 0001  __size_of_ESCRIBE_MENSAJE 003E              ??_lcd_config 0005  
             _CURSOR_HOME 0C14    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
                __Lrparam 0000        __end_of_lcd_config 0BEE                  __ptext10 0B62  
                __ptext11 09E4                  __ptext12 0BEE                _BORRAR_LCD 0C1C  
           __size_of_main 01A2                _LCD_CONFIG 0A56                _ENVIA_CHAR 0B62  
                isa$xinst 000000             _ENVIA_LCD_CMD 0B2E               ??_configuro 0001  
       ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004            ?_ENVIA_LCD_CMD 0001  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0AF4  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
