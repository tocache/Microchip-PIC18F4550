

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 13 21:36:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     _ADRESL	set	4035
    68  0000                     _ADRESH	set	4036
    69  0000                     _ADCON0bits	set	4034
    70  0000                     _ADCON0	set	4034
    71  0000                     _ADCON1	set	4033
    72  0000                     _ADCON2	set	4032
    73  0000                     _PORTD	set	3971
    74  0000                     _LATD	set	3980
    75  0000                     _TRISD	set	3989
    76  0000                     _LATDbits	set	3980
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	callstack 0
    81  000800  00                 	db	0
    82  000801                     STR_1:
    83  000801  43                 	db	67	;'C'
    84  000802  6F                 	db	111	;'o'
    85  000803  6E                 	db	110	;'n'
    86  000804  76                 	db	118	;'v'
    87  000805  65                 	db	101	;'e'
    88  000806  72                 	db	114	;'r'
    89  000807  73                 	db	115	;'s'
    90  000808  69                 	db	105	;'i'
    91  000809  6F                 	db	111	;'o'
    92  00080A  6E                 	db	110	;'n'
    93  00080B  20                 	db	32
    94  00080C  41                 	db	65	;'A'
    95  00080D  2F                 	db	47
    96  00080E  44                 	db	68	;'D'
    97  00080F  00                 	db	0
    98  000810                     STR_3:
    99  000810  20                 	db	32
   100  000811  50                 	db	80	;'P'
   101  000812  6F                 	db	111	;'o'
   102  000813  74                 	db	116	;'t'
   103  000814  3A                 	db	58	;':'
   104  000815  00                 	db	0
   105  000816                     STR_2:
   106  000816  41                 	db	65	;'A'
   107  000817  30                 	db	48	;'0'
   108  000818  3A                 	db	58	;':'
   109  000819  00                 	db	0
   110  00081A                     STR_4:
   111  00081A  4B                 	db	75	;'K'
   112  00081B  00                 	db	0
   113  00081C  00                 	db	0	; dummy byte at the end
   114  0000                     
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118  00116E                     __pcinit:
   119                           	callstack 0
   120  00116E                     start_initialization:
   121                           	callstack 0
   122  00116E                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (14 bytes)
   126  00116E  EE00  F02A         	lfsr	0,__pbssCOMRAM
   127  001172  0E0E               	movlw	14
   128  001174                     clear_0:
   129  001174  6AEE               	clrf	postinc0,c
   130  001176  06E8               	decf	wreg,f,c
   131  001178  E1FD               	bnz	clear_0
   132  00117A                     end_of_initialization:
   133                           	callstack 0
   134  00117A                     __end_of__initialization:
   135                           	callstack 0
   136  00117A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   137  00117C  6EF8               	movwf	tblptru,c
   138  00117E  0E08               	movlw	high __Lsmallconst
   139  001180  6EF7               	movwf	tblptrh,c
   140  001182  0100               	movlb	0
   141  001184  EF45  F006         	goto	_main	;jump to C main() function
   142                           
   143                           	psect	bssCOMRAM
   144  00002A                     __pbssCOMRAM:
   145                           	callstack 0
   146  00002A                     _pot:
   147                           	callstack 0
   148  00002A                     	ds	4
   149  00002E                     _dig_unidad:
   150                           	callstack 0
   151  00002E                     	ds	2
   152  000030                     _dig_decena:
   153                           	callstack 0
   154  000030                     	ds	2
   155  000032                     _dig_centena:
   156                           	callstack 0
   157  000032                     	ds	2
   158  000034                     _dig_millar:
   159                           	callstack 0
   160  000034                     	ds	2
   161  000036                     _res_ad:
   162                           	callstack 0
   163  000036                     	ds	2
   164                           
   165                           	psect	cstackCOMRAM
   166  000001                     __pcstackCOMRAM:
   167                           	callstack 0
   168  000001                     ?___lwmod:
   169                           	callstack 0
   170  000001                     ?___fltol:
   171                           	callstack 0
   172  000001                     ?___xxtofl:
   173                           	callstack 0
   174  000001                     ENVIA_NIBBLE@dato:
   175                           	callstack 0
   176  000001                     LEER_LCD@aux:
   177                           	callstack 0
   178  000001                     ___lwmod@dividend:
   179                           	callstack 0
   180  000001                     ___fltol@f1:
   181                           	callstack 0
   182  000001                     ___xxtofl@val:
   183                           	callstack 0
   184                           
   185                           ; 4 bytes @ 0x0
   186  000001                     	ds	1
   187  000002                     ENVIA_CHAR@dato:
   188                           	callstack 0
   189  000002                     ENVIA_LCD_CMD@dato:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x1
   193  000002                     	ds	1
   194  000003                     ENVIA_CHAR@aux:
   195                           	callstack 0
   196  000003                     ENVIA_LCD_CMD@aux:
   197                           	callstack 0
   198  000003                     ___lwmod@divisor:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x2
   202  000003                     	ds	1
   203  000004                     ??_LCD_CONFIG:
   204  000004                     POS_CURSOR@columna:
   205                           	callstack 0
   206  000004                     CURSOR_ONOFF@estado:
   207                           	callstack 0
   208  000004                     ESCRIBE_MENSAJE@cadena:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x3
   212  000004                     	ds	1
   213  000005                     ??_lcd_init:
   214  000005                     ??___fltol:
   215  000005                     ??___xxtofl:
   216  000005                     POS_CURSOR@fila:
   217                           	callstack 0
   218  000005                     ESCRIBE_MENSAJE@tam:
   219                           	callstack 0
   220  000005                     ___lwmod@counter:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x4
   224  000005                     	ds	1
   225  000006                     ??_ESCRIBE_MENSAJE:
   226  000006                     ?___lwdiv:
   227                           	callstack 0
   228  000006                     ___lwdiv@dividend:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x5
   232  000006                     	ds	1
   233  000007                     ESCRIBE_MENSAJE@i:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x6
   237  000007                     	ds	1
   238  000008                     ___lwdiv@divisor:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x7
   242  000008                     	ds	1
   243  000009                     ___fltol@sign1:
   244                           	callstack 0
   245  000009                     ___xxtofl@sign:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x8
   249  000009                     	ds	1
   250  00000A                     ___fltol@exp1:
   251                           	callstack 0
   252  00000A                     ___xxtofl@exp:
   253                           	callstack 0
   254  00000A                     ___lwdiv@quotient:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x9
   258  00000A                     	ds	1
   259  00000B                     ___xxtofl@arg:
   260                           	callstack 0
   261                           
   262                           ; 4 bytes @ 0xA
   263  00000B                     	ds	1
   264  00000C                     ___lwdiv@counter:
   265                           	callstack 0
   266                           
   267                           ; 1 bytes @ 0xB
   268  00000C                     	ds	1
   269  00000D                     digbyte@dato_in:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xC
   273  00000D                     	ds	2
   274  00000F                     ?___flmul:
   275                           	callstack 0
   276  00000F                     ___flmul@b:
   277                           	callstack 0
   278                           
   279                           ; 4 bytes @ 0xE
   280  00000F                     	ds	4
   281  000013                     ___flmul@a:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x12
   285  000013                     	ds	4
   286  000017                     ??___flmul:
   287                           
   288                           ; 1 bytes @ 0x16
   289  000017                     	ds	4
   290  00001B                     ___flmul@sign:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x1A
   294  00001B                     	ds	1
   295  00001C                     ___flmul@aexp:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x1B
   299  00001C                     	ds	1
   300  00001D                     ___flmul@grs:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x1C
   304  00001D                     	ds	4
   305  000021                     ___flmul@bexp:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x20
   309  000021                     	ds	1
   310  000022                     ___flmul@prod:
   311                           	callstack 0
   312                           
   313                           ; 4 bytes @ 0x21
   314  000022                     	ds	4
   315  000026                     ___flmul@temp:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x25
   319  000026                     	ds	2
   320  000028                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x27
   323  000028                     	ds	2
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 36 in file "maincode3.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   344 ;;      Params:         0       0       0       0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0
   346 ;;      Temps:          2       0       0       0       0       0       0       0       0
   347 ;;      Totals:         2       0       0       0       0       0       0       0       0
   348 ;;Total ram usage:        2 bytes
   349 ;; Hardware stack levels required when called: 4
   350 ;; This function calls:
   351 ;;		_ENVIA_CHAR
   352 ;;		_ESCRIBE_MENSAJE
   353 ;;		_POS_CURSOR
   354 ;;		___flmul
   355 ;;		___fltol
   356 ;;		___xxtofl
   357 ;;		_configuracion
   358 ;;		_digbyte
   359 ;;		_lcd_init
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366  000C8A                     __ptext0:
   367                           	callstack 0
   368  000C8A                     _main:
   369                           	callstack 27
   370                           
   371                           ;maincode3.c: 37:     configuracion();
   372                           
   373                           ;incstack = 0
   374  000C8A  ECC4  F008         	call	_configuracion	;wreg free
   375                           
   376                           ;maincode3.c: 38:     lcd_init();
   377  000C8E  EC61  F008         	call	_lcd_init	;wreg free
   378  000C92                     l1550:
   379                           
   380                           ;maincode3.c: 40:         ADCON0bits.GODONE = 1;
   381  000C92  82C2               	bsf	194,1,c	;volatile
   382  000C94                     l131:
   383  000C94  B2C2               	btfsc	194,1,c	;volatile
   384  000C96  D7FE               	goto	l131
   385                           
   386                           ;maincode3.c: 42:         res_ad = (ADRESH << 8) + ADRESL;
   387  000C98  50C4               	movf	196,w,c	;volatile
   388  000C9A  6E29               	movwf	(??_main+1)^0,c
   389  000C9C  6A28               	clrf	??_main^0,c
   390  000C9E  50C3               	movf	195,w,c	;volatile
   391  000CA0  2428               	addwf	??_main^0,w,c
   392  000CA2  6E36               	movwf	_res_ad^0,c
   393  000CA4  0E00               	movlw	0
   394  000CA6  2029               	addwfc	(??_main+1)^0,w,c
   395  000CA8  6E37               	movwf	(_res_ad+1)^0,c
   396                           
   397                           ;maincode3.c: 43:         pot = res_ad * 0.010;
   398  000CAA  C036  F001         	movff	_res_ad,___xxtofl@val
   399  000CAE  C037  F002         	movff	_res_ad+1,___xxtofl@val+1
   400  000CB2  6A03               	clrf	(___xxtofl@val+2)^0,c
   401  000CB4  6A04               	clrf	(___xxtofl@val+3)^0,c
   402  000CB6  0E00               	movlw	0
   403  000CB8  ECA5  F005         	call	___xxtofl
   404  000CBC  C001  F00F         	movff	?___xxtofl,___flmul@b
   405  000CC0  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   406  000CC4  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   407  000CC8  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   408  000CCC  0E0A               	movlw	10
   409  000CCE  6E13               	movwf	___flmul@a^0,c
   410  000CD0  0ED7               	movlw	215
   411  000CD2  6E14               	movwf	(___flmul@a+1)^0,c
   412  000CD4  0E23               	movlw	35
   413  000CD6  6E15               	movwf	(___flmul@a+2)^0,c
   414  000CD8  0E3C               	movlw	60
   415  000CDA  6E16               	movwf	(___flmul@a+3)^0,c
   416  000CDC  EC0F  F004         	call	___flmul	;wreg free
   417  000CE0  C00F  F02A         	movff	?___flmul,_pot
   418  000CE4  C010  F02B         	movff	?___flmul+1,_pot+1
   419  000CE8  C011  F02C         	movff	?___flmul+2,_pot+2
   420  000CEC  C012  F02D         	movff	?___flmul+3,_pot+3
   421                           
   422                           ;maincode3.c: 44:         digbyte(res_ad);
   423  000CF0  C036  F00D         	movff	_res_ad,digbyte@dato_in
   424  000CF4  C037  F00E         	movff	_res_ad+1,digbyte@dato_in+1
   425  000CF8  EC35  F007         	call	_digbyte	;wreg free
   426                           
   427                           ;maincode3.c: 45:         POS_CURSOR(1,0);
   428  000CFC  0E00               	movlw	0
   429  000CFE  6E04               	movwf	POS_CURSOR@columna^0,c
   430  000D00  0E01               	movlw	1
   431  000D02  EC89  F008         	call	_POS_CURSOR
   432                           
   433                           ;maincode3.c: 46:         ESCRIBE_MENSAJE("Conversion A/D",14);
   434  000D06  0E01               	movlw	low STR_1
   435  000D08  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   436  000D0A  0E0E               	movlw	14
   437  000D0C  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   438  000D0E  EC75  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   439                           
   440                           ;maincode3.c: 47:         _delay((unsigned long)((150)*(48000000UL/4000.0)));
   441  000D12  0E0A               	movlw	10
   442  000D14  6E29               	movwf	(??_main+1)^0,c
   443  000D16  0E22               	movlw	34
   444  000D18  6E28               	movwf	??_main^0,c
   445  000D1A  0EA1               	movlw	161
   446  000D1C                     u947:
   447  000D1C  2EE8               	decfsz	wreg,f,c
   448  000D1E  D7FE               	bra	u947
   449  000D20  2E28               	decfsz	??_main^0,f,c
   450  000D22  D7FC               	bra	u947
   451  000D24  2E29               	decfsz	(??_main+1)^0,f,c
   452  000D26  D7FA               	bra	u947
   453  000D28  F000               	nop	
   454                           
   455                           ;maincode3.c: 48:         POS_CURSOR(2,0);
   456  000D2A  0E00               	movlw	0
   457  000D2C  6E04               	movwf	POS_CURSOR@columna^0,c
   458  000D2E  0E02               	movlw	2
   459  000D30  EC89  F008         	call	_POS_CURSOR
   460                           
   461                           ;maincode3.c: 49:         ESCRIBE_MENSAJE("A0:",3);
   462  000D34  0E16               	movlw	low STR_2
   463  000D36  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   464  000D38  0E03               	movlw	3
   465  000D3A  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   466  000D3C  EC75  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   467                           
   468                           ;maincode3.c: 50:         ENVIA_CHAR(dig_millar+0x30);
   469  000D40  5034               	movf	_dig_millar^0,w,c
   470  000D42  0F30               	addlw	48
   471  000D44  EC47  F008         	call	_ENVIA_CHAR
   472                           
   473                           ;maincode3.c: 51:         ENVIA_CHAR(dig_centena+0x30);
   474  000D48  5032               	movf	_dig_centena^0,w,c
   475  000D4A  0F30               	addlw	48
   476  000D4C  EC47  F008         	call	_ENVIA_CHAR
   477                           
   478                           ;maincode3.c: 52:         ENVIA_CHAR(dig_decena+0x30);
   479  000D50  5030               	movf	_dig_decena^0,w,c
   480  000D52  0F30               	addlw	48
   481  000D54  EC47  F008         	call	_ENVIA_CHAR
   482                           
   483                           ;maincode3.c: 53:         ENVIA_CHAR(dig_unidad+0x30);
   484  000D58  502E               	movf	_dig_unidad^0,w,c
   485  000D5A  0F30               	addlw	48
   486  000D5C  EC47  F008         	call	_ENVIA_CHAR
   487                           
   488                           ;maincode3.c: 54:         ESCRIBE_MENSAJE(" Pot:",5);
   489  000D60  0E10               	movlw	low STR_3
   490  000D62  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   491  000D64  0E05               	movlw	5
   492  000D66  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   493  000D68  EC75  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   494                           
   495                           ;maincode3.c: 55:         digbyte(pot);
   496  000D6C  C02A  F001         	movff	_pot,___fltol@f1
   497  000D70  C02B  F002         	movff	_pot+1,___fltol@f1+1
   498  000D74  C02C  F003         	movff	_pot+2,___fltol@f1+2
   499  000D78  C02D  F004         	movff	_pot+3,___fltol@f1+3
   500  000D7C  ECD8  F006         	call	___fltol	;wreg free
   501  000D80  C001  F00D         	movff	?___fltol,digbyte@dato_in
   502  000D84  C002  F00E         	movff	?___fltol+1,digbyte@dato_in+1
   503  000D88  EC35  F007         	call	_digbyte	;wreg free
   504                           
   505                           ;maincode3.c: 56:         ENVIA_CHAR(dig_decena+0x30);
   506  000D8C  5030               	movf	_dig_decena^0,w,c
   507  000D8E  0F30               	addlw	48
   508  000D90  EC47  F008         	call	_ENVIA_CHAR
   509                           
   510                           ;maincode3.c: 57:         ENVIA_CHAR(dig_unidad+0x30);
   511  000D94  502E               	movf	_dig_unidad^0,w,c
   512  000D96  0F30               	addlw	48
   513  000D98  EC47  F008         	call	_ENVIA_CHAR
   514                           
   515                           ;maincode3.c: 58:         ESCRIBE_MENSAJE("K",1);
   516  000D9C  0E1A               	movlw	low STR_4
   517  000D9E  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   518  000DA0  0E01               	movlw	1
   519  000DA2  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   520  000DA4  EC75  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   521                           
   522                           ;maincode3.c: 59:         ENVIA_CHAR(0xF4);
   523  000DA8  0EF4               	movlw	244
   524  000DAA  EC47  F008         	call	_ENVIA_CHAR
   525  000DAE  D771               	goto	l1550
   526  000DB0                     __end_of_main:
   527                           	callstack 0
   528                           
   529 ;; *************** function _lcd_init *****************
   530 ;; Defined at:
   531 ;;		line 20 in file "maincode3.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   545 ;;      Params:         0       0       0       0       0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0       0       0       0       0
   547 ;;      Temps:          1       0       0       0       0       0       0       0       0
   548 ;;      Totals:         1       0       0       0       0       0       0       0       0
   549 ;;Total ram usage:        1 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 3
   552 ;; This function calls:
   553 ;;		_BORRAR_LCD
   554 ;;		_CURSOR_HOME
   555 ;;		_CURSOR_ONOFF
   556 ;;		_LCD_CONFIG
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text1
   563  0010C2                     __ptext1:
   564                           	callstack 0
   565  0010C2                     _lcd_init:
   566                           	callstack 27
   567                           
   568                           ;maincode3.c: 21:     TRISD = 0x00;
   569                           
   570                           ;incstack = 0
   571  0010C2  0E00               	movlw	0
   572  0010C4  6E95               	movwf	149,c	;volatile
   573                           
   574                           ;maincode3.c: 22:     LCD_CONFIG();
   575  0010C6  ECB3  F007         	call	_LCD_CONFIG	;wreg free
   576                           
   577                           ;maincode3.c: 23:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   578  0010CA  0EEA               	movlw	234
   579  0010CC  6E05               	movwf	??_lcd_init^0,c
   580  0010CE  0EC3               	movlw	195
   581  0010D0                     u957:
   582  0010D0  2EE8               	decfsz	wreg,f,c
   583  0010D2  D7FE               	bra	u957
   584  0010D4  2E05               	decfsz	??_lcd_init^0,f,c
   585  0010D6  D7FC               	bra	u957
   586  0010D8  F000               	nop	
   587                           
   588                           ;maincode3.c: 24:     BORRAR_LCD();
   589  0010DA  ECCF  F008         	call	_BORRAR_LCD	;wreg free
   590                           
   591                           ;maincode3.c: 25:     CURSOR_HOME();
   592  0010DE  ECCB  F008         	call	_CURSOR_HOME	;wreg free
   593                           
   594                           ;maincode3.c: 26:     CURSOR_ONOFF(1);
   595  0010E2  0E01               	movlw	1
   596  0010E4  EC9B  F008         	call	_CURSOR_ONOFF
   597  0010E8  0012               	return		;funcret
   598  0010EA                     __end_of_lcd_init:
   599                           	callstack 0
   600                           
   601 ;; *************** function _LCD_CONFIG *****************
   602 ;; Defined at:
   603 ;;		line 72 in file "../20212_c_el51_1.X/LCD.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          1       0       0       0       0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 2
   624 ;; This function calls:
   625 ;;		_ENVIA_LCD_CMD
   626 ;;		_ENVIA_NIBBLE
   627 ;; This function is called by:
   628 ;;		_lcd_init
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text2
   633  000F66                     __ptext2:
   634                           	callstack 0
   635  000F66                     _LCD_CONFIG:
   636                           	callstack 27
   637                           
   638                           ;../20212_c_el51_1.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   639                           
   640                           ;incstack = 0
   641  000F66  908C               	bcf	140,0,c	;volatile
   642                           
   643                           ;../20212_c_el51_1.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   644  000F68  928C               	bcf	140,1,c	;volatile
   645                           
   646                           ;../20212_c_el51_1.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   647  000F6A  0E30               	movlw	48
   648  000F6C  ECA9  F008         	call	_ENVIA_NIBBLE
   649                           
   650                           ;../20212_c_el51_1.X/LCD.c: 77:         _delay(24000);
   651  000F70  0E20               	movlw	32
   652  000F72  6E04               	movwf	??_LCD_CONFIG^0,c
   653  000F74  0E2A               	movlw	42
   654  000F76                     u967:
   655  000F76  2EE8               	decfsz	wreg,f,c
   656  000F78  D7FE               	bra	u967
   657  000F7A  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   658  000F7C  D7FC               	bra	u967
   659                           
   660                           ;../20212_c_el51_1.X/LCD.c: 78:         _delay(24000);
   661  000F7E  0E20               	movlw	32
   662  000F80  6E04               	movwf	??_LCD_CONFIG^0,c
   663  000F82  0E2A               	movlw	42
   664  000F84                     u977:
   665  000F84  2EE8               	decfsz	wreg,f,c
   666  000F86  D7FE               	bra	u977
   667  000F88  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   668  000F8A  D7FC               	bra	u977
   669                           
   670                           ;../20212_c_el51_1.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   671  000F8C  0E30               	movlw	48
   672  000F8E  ECA9  F008         	call	_ENVIA_NIBBLE
   673                           
   674                           ;../20212_c_el51_1.X/LCD.c: 83:  _delay(1200);
   675  000F92  0EF0               	movlw	240
   676  000F94                     u987:
   677  000F94  D000               	nop2	
   678  000F96  2EE8               	decfsz	wreg,f,c
   679  000F98  D7FD               	bra	u987
   680                           
   681                           ;../20212_c_el51_1.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   682  000F9A  0E30               	movlw	48
   683  000F9C  ECA9  F008         	call	_ENVIA_NIBBLE
   684                           
   685                           ;../20212_c_el51_1.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   686  000FA0  0E20               	movlw	32
   687  000FA2  ECA9  F008         	call	_ENVIA_NIBBLE
   688                           
   689                           ;../20212_c_el51_1.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   690  000FA6  0E01               	movlw	1
   691  000FA8  EC2D  F008         	call	_ENVIA_LCD_CMD
   692                           
   693                           ;../20212_c_el51_1.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   694  000FAC  0E28               	movlw	40
   695  000FAE  EC2D  F008         	call	_ENVIA_LCD_CMD
   696                           
   697                           ;../20212_c_el51_1.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   698  000FB2  0E0F               	movlw	15
   699  000FB4  EC2D  F008         	call	_ENVIA_LCD_CMD
   700                           
   701                           ;../20212_c_el51_1.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   702  000FB8  0E06               	movlw	6
   703  000FBA  EC2D  F008         	call	_ENVIA_LCD_CMD
   704                           
   705                           ;../20212_c_el51_1.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   706  000FBE  0E01               	movlw	1
   707  000FC0  EC2D  F008         	call	_ENVIA_LCD_CMD
   708  000FC4  0012               	return		;funcret
   709  000FC6                     __end_of_LCD_CONFIG:
   710                           	callstack 0
   711                           
   712 ;; *************** function _CURSOR_ONOFF *****************
   713 ;; Defined at:
   714 ;;		line 35 in file "../20212_c_el51_1.X/LCD.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  estado          1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  estado          1    3[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, status,0, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   728 ;;      Params:         0       0       0       0       0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 2
   735 ;; This function calls:
   736 ;;		_ENVIA_LCD_CMD
   737 ;; This function is called by:
   738 ;;		_lcd_init
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  001136                     __ptext3:
   744                           	callstack 0
   745  001136                     _CURSOR_ONOFF:
   746                           	callstack 27
   747                           
   748                           ;incstack = 0
   749                           ;CURSOR_ONOFF@estado stored from wreg
   750  001136  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   751                           
   752                           ;../20212_c_el51_1.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20212_c_el51_
      +                          1.X/LCD.c: 36: {;../20212_c_el51_1.X/LCD.c: 37:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
   753  001138  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   754  00113A  A4D8               	btfss	status,2,c
   755  00113C  D003               	goto	l886
   756  00113E  0E0E               	movlw	14
   757  001140  EC2D  F008         	call	_ENVIA_LCD_CMD
   758  001144                     l886:
   759                           
   760                           ;../20212_c_el51_1.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   761  001144  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   762  001146  A4D8               	btfss	status,2,c
   763  001148  0012               	return	
   764  00114A  0E0C               	movlw	12
   765  00114C  EC2D  F008         	call	_ENVIA_LCD_CMD
   766  001150  0012               	return		;funcret
   767  001152                     __end_of_CURSOR_ONOFF:
   768                           	callstack 0
   769                           
   770 ;; *************** function _CURSOR_HOME *****************
   771 ;; Defined at:
   772 ;;		line 30 in file "../20212_c_el51_1.X/LCD.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 2
   793 ;; This function calls:
   794 ;;		_ENVIA_LCD_CMD
   795 ;; This function is called by:
   796 ;;		_lcd_init
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text4
   801  001196                     __ptext4:
   802                           	callstack 0
   803  001196                     _CURSOR_HOME:
   804                           	callstack 27
   805                           
   806                           ;../20212_c_el51_1.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   807                           
   808                           ;incstack = 0
   809  001196  0E02               	movlw	2
   810  001198  EC2D  F008         	call	_ENVIA_LCD_CMD
   811  00119C  0012               	return		;funcret
   812  00119E                     __end_of_CURSOR_HOME:
   813                           	callstack 0
   814                           
   815 ;; *************** function _BORRAR_LCD *****************
   816 ;; Defined at:
   817 ;;		line 67 in file "../20212_c_el51_1.X/LCD.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2, status,0, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   831 ;;      Params:         0       0       0       0       0       0       0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 2
   838 ;; This function calls:
   839 ;;		_ENVIA_LCD_CMD
   840 ;; This function is called by:
   841 ;;		_lcd_init
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text5
   846  00119E                     __ptext5:
   847                           	callstack 0
   848  00119E                     _BORRAR_LCD:
   849                           	callstack 27
   850                           
   851                           ;../20212_c_el51_1.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   852                           
   853                           ;incstack = 0
   854  00119E  0E01               	movlw	1
   855  0011A0  EC2D  F008         	call	_ENVIA_LCD_CMD
   856  0011A4  0012               	return		;funcret
   857  0011A6                     __end_of_BORRAR_LCD:
   858                           	callstack 0
   859                           
   860 ;; *************** function _digbyte *****************
   861 ;; Defined at:
   862 ;;		line 29 in file "maincode3.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  dato_in         2   12[COMRAM] unsigned int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   876 ;;      Params:         2       0       0       0       0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0       0       0
   879 ;;      Totals:         2       0       0       0       0       0       0       0       0
   880 ;;Total ram usage:        2 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 1
   883 ;; This function calls:
   884 ;;		___lwdiv
   885 ;;		___lwmod
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text6
   892  000E6A                     __ptext6:
   893                           	callstack 0
   894  000E6A                     _digbyte:
   895                           	callstack 29
   896                           
   897                           ;maincode3.c: 30:     dig_millar = dato_in / 1000;
   898                           
   899                           ;incstack = 0
   900  000E6A  C00D  F006         	movff	digbyte@dato_in,___lwdiv@dividend
   901  000E6E  C00E  F007         	movff	digbyte@dato_in+1,___lwdiv@dividend+1
   902  000E72  0E03               	movlw	3
   903  000E74  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   904  000E76  0EE8               	movlw	232
   905  000E78  6E08               	movwf	___lwdiv@divisor^0,c
   906  000E7A  ECE3  F007         	call	___lwdiv	;wreg free
   907  000E7E  C006  F034         	movff	?___lwdiv,_dig_millar
   908  000E82  C007  F035         	movff	?___lwdiv+1,_dig_millar+1
   909                           
   910                           ;maincode3.c: 31:     dig_centena = (dato_in % 1000) / 100;
   911  000E86  0E03               	movlw	3
   912  000E88  6E04               	movwf	(___lwmod@divisor+1)^0,c
   913  000E8A  0EE8               	movlw	232
   914  000E8C  6E03               	movwf	___lwmod@divisor^0,c
   915  000E8E  C00D  F001         	movff	digbyte@dato_in,___lwmod@dividend
   916  000E92  C00E  F002         	movff	digbyte@dato_in+1,___lwmod@dividend+1
   917  000E96  EC0C  F008         	call	___lwmod	;wreg free
   918  000E9A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   919  000E9E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   920  000EA2  0E00               	movlw	0
   921  000EA4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   922  000EA6  0E64               	movlw	100
   923  000EA8  6E08               	movwf	___lwdiv@divisor^0,c
   924  000EAA  ECE3  F007         	call	___lwdiv	;wreg free
   925  000EAE  C006  F032         	movff	?___lwdiv,_dig_centena
   926  000EB2  C007  F033         	movff	?___lwdiv+1,_dig_centena+1
   927                           
   928                           ;maincode3.c: 32:     dig_decena = (dato_in % 100) / 10;
   929  000EB6  0E00               	movlw	0
   930  000EB8  6E04               	movwf	(___lwmod@divisor+1)^0,c
   931  000EBA  0E64               	movlw	100
   932  000EBC  6E03               	movwf	___lwmod@divisor^0,c
   933  000EBE  C00D  F001         	movff	digbyte@dato_in,___lwmod@dividend
   934  000EC2  C00E  F002         	movff	digbyte@dato_in+1,___lwmod@dividend+1
   935  000EC6  EC0C  F008         	call	___lwmod	;wreg free
   936  000ECA  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   937  000ECE  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   938  000ED2  0E00               	movlw	0
   939  000ED4  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   940  000ED6  0E0A               	movlw	10
   941  000ED8  6E08               	movwf	___lwdiv@divisor^0,c
   942  000EDA  ECE3  F007         	call	___lwdiv	;wreg free
   943  000EDE  C006  F030         	movff	?___lwdiv,_dig_decena
   944  000EE2  C007  F031         	movff	?___lwdiv+1,_dig_decena+1
   945                           
   946                           ;maincode3.c: 33:     dig_unidad = dato_in % 10;
   947  000EE6  C00D  F001         	movff	digbyte@dato_in,___lwmod@dividend
   948  000EEA  C00E  F002         	movff	digbyte@dato_in+1,___lwmod@dividend+1
   949  000EEE  0E00               	movlw	0
   950  000EF0  6E04               	movwf	(___lwmod@divisor+1)^0,c
   951  000EF2  0E0A               	movlw	10
   952  000EF4  6E03               	movwf	___lwmod@divisor^0,c
   953  000EF6  EC0C  F008         	call	___lwmod	;wreg free
   954  000EFA  C001  F02E         	movff	?___lwmod,_dig_unidad
   955  000EFE  C002  F02F         	movff	?___lwmod+1,_dig_unidad+1
   956  000F02  0012               	return		;funcret
   957  000F04                     __end_of_digbyte:
   958                           	callstack 0
   959                           
   960 ;; *************** function ___lwmod *****************
   961 ;; Defined at:
   962 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  dividend        2    0[COMRAM] unsigned int 
   965 ;;  divisor         2    2[COMRAM] unsigned int 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  counter         1    4[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  2    0[COMRAM] unsigned int 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   977 ;;      Params:         4       0       0       0       0       0       0       0       0
   978 ;;      Locals:         1       0       0       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0       0       0
   980 ;;      Totals:         5       0       0       0       0       0       0       0       0
   981 ;;Total ram usage:        5 bytes
   982 ;; Hardware stack levels used: 1
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_digbyte
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text7
   991  001018                     __ptext7:
   992                           	callstack 0
   993  001018                     ___lwmod:
   994                           	callstack 29
   995                           
   996                           ;incstack = 0
   997  001018  5003               	movf	___lwmod@divisor^0,w,c
   998  00101A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   999  00101C  B4D8               	btfsc	status,2,c
  1000  00101E  D018               	goto	l640
  1001  001020  0E01               	movlw	1
  1002  001022  6E05               	movwf	___lwmod@counter^0,c
  1003  001024  D004               	goto	l1298
  1004  001026                     l1296:
  1005  001026  90D8               	bcf	status,0,c
  1006  001028  3603               	rlcf	___lwmod@divisor^0,f,c
  1007  00102A  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1008  00102C  2A05               	incf	___lwmod@counter^0,f,c
  1009  00102E                     l1298:
  1010  00102E  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1011  001030  D7FA               	goto	l1296
  1012  001032                     u530:
  1013  001032  5003               	movf	___lwmod@divisor^0,w,c
  1014  001034  5C01               	subwf	___lwmod@dividend^0,w,c
  1015  001036  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1016  001038  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1017  00103A  A0D8               	btfss	status,0,c
  1018  00103C  D004               	goto	l1304
  1019  00103E  5003               	movf	___lwmod@divisor^0,w,c
  1020  001040  5E01               	subwf	___lwmod@dividend^0,f,c
  1021  001042  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1022  001044  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1023  001046                     l1304:
  1024  001046  90D8               	bcf	status,0,c
  1025  001048  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1026  00104A  3203               	rrcf	___lwmod@divisor^0,f,c
  1027  00104C  2E05               	decfsz	___lwmod@counter^0,f,c
  1028  00104E  D7F1               	goto	u530
  1029  001050                     l640:
  1030  001050  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1031  001054  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1032  001058  0012               	return		;funcret
  1033  00105A                     __end_of___lwmod:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function ___lwdiv *****************
  1037 ;; Defined at:
  1038 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  dividend        2    5[COMRAM] unsigned int 
  1041 ;;  divisor         2    7[COMRAM] unsigned int 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  quotient        2    9[COMRAM] unsigned int 
  1044 ;;  counter         1   11[COMRAM] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  2    5[COMRAM] unsigned int 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1054 ;;      Params:         4       0       0       0       0       0       0       0       0
  1055 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1057 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1058 ;;Total ram usage:        7 bytes
  1059 ;; Hardware stack levels used: 1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_digbyte
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text8
  1068  000FC6                     __ptext8:
  1069                           	callstack 0
  1070  000FC6                     ___lwdiv:
  1071                           	callstack 29
  1072                           
  1073                           ;incstack = 0
  1074  000FC6  0E00               	movlw	0
  1075  000FC8  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  1076  000FCA  0E00               	movlw	0
  1077  000FCC  6E0A               	movwf	___lwdiv@quotient^0,c
  1078  000FCE  5008               	movf	___lwdiv@divisor^0,w,c
  1079  000FD0  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1080  000FD2  B4D8               	btfsc	status,2,c
  1081  000FD4  D01C               	goto	l630
  1082  000FD6  0E01               	movlw	1
  1083  000FD8  6E0C               	movwf	___lwdiv@counter^0,c
  1084  000FDA  D004               	goto	l1278
  1085  000FDC                     l1276:
  1086  000FDC  90D8               	bcf	status,0,c
  1087  000FDE  3608               	rlcf	___lwdiv@divisor^0,f,c
  1088  000FE0  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1089  000FE2  2A0C               	incf	___lwdiv@counter^0,f,c
  1090  000FE4                     l1278:
  1091  000FE4  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1092  000FE6  D7FA               	goto	l1276
  1093  000FE8                     u500:
  1094  000FE8  90D8               	bcf	status,0,c
  1095  000FEA  360A               	rlcf	___lwdiv@quotient^0,f,c
  1096  000FEC  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1097  000FEE  5008               	movf	___lwdiv@divisor^0,w,c
  1098  000FF0  5C06               	subwf	___lwdiv@dividend^0,w,c
  1099  000FF2  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1100  000FF4  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1101  000FF6  A0D8               	btfss	status,0,c
  1102  000FF8  D005               	goto	l1288
  1103  000FFA  5008               	movf	___lwdiv@divisor^0,w,c
  1104  000FFC  5E06               	subwf	___lwdiv@dividend^0,f,c
  1105  000FFE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1106  001000  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1107  001002  800A               	bsf	___lwdiv@quotient^0,0,c
  1108  001004                     l1288:
  1109  001004  90D8               	bcf	status,0,c
  1110  001006  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1111  001008  3208               	rrcf	___lwdiv@divisor^0,f,c
  1112  00100A  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1113  00100C  D7ED               	goto	u500
  1114  00100E                     l630:
  1115  00100E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1116  001012  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1117  001016  0012               	return		;funcret
  1118  001018                     __end_of___lwdiv:
  1119                           	callstack 0
  1120                           
  1121 ;; *************** function _configuracion *****************
  1122 ;; Defined at:
  1123 ;;		line 14 in file "maincode3.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text9
  1151  001188                     __ptext9:
  1152                           	callstack 0
  1153  001188                     _configuracion:
  1154                           	callstack 30
  1155                           
  1156                           ;maincode3.c: 15:     ADCON2 = 0xA4;
  1157                           
  1158                           ;incstack = 0
  1159  001188  0EA4               	movlw	164
  1160  00118A  6EC0               	movwf	192,c	;volatile
  1161                           
  1162                           ;maincode3.c: 16:     ADCON1 = 0x0E;
  1163  00118C  0E0E               	movlw	14
  1164  00118E  6EC1               	movwf	193,c	;volatile
  1165                           
  1166                           ;maincode3.c: 17:     ADCON0 = 0x01;
  1167  001190  0E01               	movlw	1
  1168  001192  6EC2               	movwf	194,c	;volatile
  1169  001194  0012               	return		;funcret
  1170  001196                     __end_of_configuracion:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function ___xxtofl *****************
  1174 ;; Defined at:
  1175 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  sign            1    wreg     unsigned char 
  1178 ;;  val             4    0[COMRAM] long 
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  sign            1    8[COMRAM] unsigned char 
  1181 ;;  arg             4   10[COMRAM] unsigned long 
  1182 ;;  exp             1    9[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  4    0[COMRAM] unsigned char 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         4       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1194 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1195 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1196 ;;Total ram usage:       14 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text10
  1206  000B4A                     __ptext10:
  1207                           	callstack 0
  1208  000B4A                     ___xxtofl:
  1209                           	callstack 30
  1210                           
  1211                           ;incstack = 0
  1212                           ;___xxtofl@sign stored from wreg
  1213  000B4A  6E09               	movwf	___xxtofl@sign^0,c
  1214  000B4C  5009               	movf	___xxtofl@sign^0,w,c
  1215  000B4E  A4D8               	btfss	status,2,c
  1216  000B50  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  1217  000B52  D01A               	goto	l794
  1218  000B54  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1219  000B58  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1220  000B5C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1221  000B60  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1222  000B64  1E05               	comf	??___xxtofl^0,f,c
  1223  000B66  1E06               	comf	(??___xxtofl+1)^0,f,c
  1224  000B68  1E07               	comf	(??___xxtofl+2)^0,f,c
  1225  000B6A  1E08               	comf	(??___xxtofl+3)^0,f,c
  1226  000B6C  2A05               	incf	??___xxtofl^0,f,c
  1227  000B6E  0E00               	movlw	0
  1228  000B70  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1229  000B72  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1230  000B74  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1231  000B76  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1232  000B7A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1233  000B7E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1234  000B82  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1235  000B86  D008               	goto	l1506
  1236  000B88                     l794:
  1237  000B88  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1238  000B8C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1239  000B90  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1240  000B94  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1241  000B98                     l1506:
  1242  000B98  5001               	movf	___xxtofl@val^0,w,c
  1243  000B9A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1244  000B9C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1245  000B9E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1246  000BA0  A4D8               	btfss	status,2,c
  1247  000BA2  D009               	goto	l1512
  1248  000BA4  0E00               	movlw	0
  1249  000BA6  6E01               	movwf	?___xxtofl^0,c
  1250  000BA8  0E00               	movlw	0
  1251  000BAA  6E02               	movwf	(?___xxtofl+1)^0,c
  1252  000BAC  0E00               	movlw	0
  1253  000BAE  6E03               	movwf	(?___xxtofl+2)^0,c
  1254  000BB0  0E00               	movlw	0
  1255  000BB2  6E04               	movwf	(?___xxtofl+3)^0,c
  1256  000BB4  0012               	return	
  1257  000BB6                     l1512:
  1258  000BB6  0E96               	movlw	150
  1259  000BB8  6E0A               	movwf	___xxtofl@exp^0,c
  1260  000BBA  D006               	goto	l1516
  1261  000BBC                     l1514:
  1262  000BBC  2A0A               	incf	___xxtofl@exp^0,f,c
  1263  000BBE  90D8               	bcf	status,0,c
  1264  000BC0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1265  000BC2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1266  000BC4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1267  000BC6  320B               	rrcf	___xxtofl@arg^0,f,c
  1268  000BC8                     l1516:
  1269  000BC8  0E00               	movlw	0
  1270  000BCA  140B               	andwf	___xxtofl@arg^0,w,c
  1271  000BCC  6E05               	movwf	??___xxtofl^0,c
  1272  000BCE  0E00               	movlw	0
  1273  000BD0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1274  000BD2  6E06               	movwf	(??___xxtofl+1)^0,c
  1275  000BD4  0E00               	movlw	0
  1276  000BD6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1277  000BD8  6E07               	movwf	(??___xxtofl+2)^0,c
  1278  000BDA  0EFE               	movlw	254
  1279  000BDC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1280  000BDE  6E08               	movwf	(??___xxtofl+3)^0,c
  1281  000BE0  5005               	movf	??___xxtofl^0,w,c
  1282  000BE2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1283  000BE4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1284  000BE6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1285  000BE8  B4D8               	btfsc	status,2,c
  1286  000BEA  D00D               	goto	l801
  1287  000BEC  D7E7               	goto	l1514
  1288  000BEE                     l1518:
  1289  000BEE  2A0A               	incf	___xxtofl@exp^0,f,c
  1290  000BF0  0E01               	movlw	1
  1291  000BF2  260B               	addwf	___xxtofl@arg^0,f,c
  1292  000BF4  0E00               	movlw	0
  1293  000BF6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1294  000BF8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1295  000BFA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1296  000BFC  90D8               	bcf	status,0,c
  1297  000BFE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1298  000C00  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1299  000C02  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1300  000C04  320B               	rrcf	___xxtofl@arg^0,f,c
  1301  000C06                     l801:
  1302  000C06  0E00               	movlw	0
  1303  000C08  140B               	andwf	___xxtofl@arg^0,w,c
  1304  000C0A  6E05               	movwf	??___xxtofl^0,c
  1305  000C0C  0E00               	movlw	0
  1306  000C0E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1307  000C10  6E06               	movwf	(??___xxtofl+1)^0,c
  1308  000C12  0E00               	movlw	0
  1309  000C14  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1310  000C16  6E07               	movwf	(??___xxtofl+2)^0,c
  1311  000C18  0EFF               	movlw	255
  1312  000C1A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1313  000C1C  6E08               	movwf	(??___xxtofl+3)^0,c
  1314  000C1E  5005               	movf	??___xxtofl^0,w,c
  1315  000C20  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1316  000C22  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1317  000C24  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1318  000C26  B4D8               	btfsc	status,2,c
  1319  000C28  D007               	goto	l1526
  1320  000C2A  D7E1               	goto	l1518
  1321  000C2C                     l1524:
  1322  000C2C  060A               	decf	___xxtofl@exp^0,f,c
  1323  000C2E  90D8               	bcf	status,0,c
  1324  000C30  360B               	rlcf	___xxtofl@arg^0,f,c
  1325  000C32  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1326  000C34  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1327  000C36  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1328  000C38                     l1526:
  1329  000C38  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1330  000C3A  D003               	goto	u890
  1331  000C3C  0E02               	movlw	2
  1332  000C3E  600A               	cpfslt	___xxtofl@exp^0,c
  1333  000C40  D7F5               	goto	l1524
  1334  000C42                     u890:
  1335  000C42  A00A               	btfss	___xxtofl@exp^0,0,c
  1336  000C44  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1337  000C46  90D8               	bcf	status,0,c
  1338  000C48  320A               	rrcf	___xxtofl@exp^0,f,c
  1339  000C4A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1340  000C4E  6A06               	clrf	(??___xxtofl+1)^0,c
  1341  000C50  6A07               	clrf	(??___xxtofl+2)^0,c
  1342  000C52  6A08               	clrf	(??___xxtofl+3)^0,c
  1343  000C54  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1344  000C58  6A07               	clrf	(??___xxtofl+2)^0,c
  1345  000C5A  6A06               	clrf	(??___xxtofl+1)^0,c
  1346  000C5C  6A05               	clrf	??___xxtofl^0,c
  1347  000C5E  5005               	movf	??___xxtofl^0,w,c
  1348  000C60  120B               	iorwf	___xxtofl@arg^0,f,c
  1349  000C62  5006               	movf	(??___xxtofl+1)^0,w,c
  1350  000C64  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1351  000C66  5007               	movf	(??___xxtofl+2)^0,w,c
  1352  000C68  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1353  000C6A  5008               	movf	(??___xxtofl+3)^0,w,c
  1354  000C6C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1355  000C6E  5009               	movf	___xxtofl@sign^0,w,c
  1356  000C70  A4D8               	btfss	status,2,c
  1357  000C72  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  1358  000C74  D001               	goto	l1542
  1359  000C76  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1360  000C78                     l1542:
  1361  000C78  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1362  000C7C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1363  000C80  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1364  000C84  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1365  000C88  0012               	return		;funcret
  1366  000C8A                     __end_of___xxtofl:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function ___fltol *****************
  1370 ;; Defined at:
  1371 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  f1              4    0[COMRAM] unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  exp1            1    9[COMRAM] unsigned char 
  1376 ;;  sign1           1    8[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  4    0[COMRAM] long 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1386 ;;      Params:         4       0       0       0       0       0       0       0       0
  1387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1388 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1389 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1390 ;;Total ram usage:       10 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text11
  1400  000DB0                     __ptext11:
  1401                           	callstack 0
  1402  000DB0                     ___fltol:
  1403                           	callstack 30
  1404                           
  1405                           ;incstack = 0
  1406  000DB0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1407  000DB2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1408  000DB4  6E0A               	movwf	___fltol@exp1^0,c
  1409  000DB6  500A               	movf	___fltol@exp1^0,w,c
  1410  000DB8  A4D8               	btfss	status,2,c
  1411  000DBA  D009               	goto	l1462
  1412  000DBC                     u760:
  1413  000DBC  0E00               	movlw	0
  1414  000DBE  6E01               	movwf	?___fltol^0,c
  1415  000DC0  0E00               	movlw	0
  1416  000DC2  6E02               	movwf	(?___fltol+1)^0,c
  1417  000DC4  0E00               	movlw	0
  1418  000DC6  6E03               	movwf	(?___fltol+2)^0,c
  1419  000DC8  0E00               	movlw	0
  1420  000DCA  6E04               	movwf	(?___fltol+3)^0,c
  1421  000DCC  0012               	return	
  1422  000DCE                     l1462:
  1423  000DCE  C001  F005         	movff	___fltol@f1,??___fltol
  1424  000DD2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1425  000DD6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1426  000DDA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1427  000DDE  0E20               	movlw	32
  1428  000DE0  D005               	goto	u770
  1429  000DE2                     u775:
  1430  000DE2  90D8               	bcf	status,0,c
  1431  000DE4  3208               	rrcf	(??___fltol+3)^0,f,c
  1432  000DE6  3207               	rrcf	(??___fltol+2)^0,f,c
  1433  000DE8  3206               	rrcf	(??___fltol+1)^0,f,c
  1434  000DEA  3205               	rrcf	??___fltol^0,f,c
  1435  000DEC                     u770:
  1436  000DEC  2EE8               	decfsz	wreg,f,c
  1437  000DEE  D7F9               	goto	u775
  1438  000DF0  5005               	movf	??___fltol^0,w,c
  1439  000DF2  6E09               	movwf	___fltol@sign1^0,c
  1440  000DF4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1441  000DF6  0EFF               	movlw	255
  1442  000DF8  1601               	andwf	___fltol@f1^0,f,c
  1443  000DFA  0EFF               	movlw	255
  1444  000DFC  1602               	andwf	(___fltol@f1+1)^0,f,c
  1445  000DFE  0EFF               	movlw	255
  1446  000E00  1603               	andwf	(___fltol@f1+2)^0,f,c
  1447  000E02  0E00               	movlw	0
  1448  000E04  1604               	andwf	(___fltol@f1+3)^0,f,c
  1449  000E06  0E96               	movlw	150
  1450  000E08  5E0A               	subwf	___fltol@exp1^0,f,c
  1451  000E0A  AE0A               	btfss	___fltol@exp1^0,7,c
  1452  000E0C  D00D               	goto	l1482
  1453  000E0E  500A               	movf	___fltol@exp1^0,w,c
  1454  000E10  0A80               	xorlw	128
  1455  000E12  0F97               	addlw	151
  1456  000E14  A0D8               	btfss	status,0,c
  1457  000E16  D7D2               	goto	u760
  1458  000E18                     l1478:
  1459  000E18  90D8               	bcf	status,0,c
  1460  000E1A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1461  000E1C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1462  000E1E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1463  000E20  3201               	rrcf	___fltol@f1^0,f,c
  1464  000E22  3E0A               	incfsz	___fltol@exp1^0,f,c
  1465  000E24  D7F9               	goto	l1478
  1466  000E26  D00D               	goto	u810
  1467  000E28                     l1482:
  1468  000E28  0E1F               	movlw	31
  1469  000E2A  640A               	cpfsgt	___fltol@exp1^0,c
  1470  000E2C  D007               	goto	l1490
  1471  000E2E  D7C6               	goto	u760
  1472  000E30                     l1488:
  1473  000E30  90D8               	bcf	status,0,c
  1474  000E32  3601               	rlcf	___fltol@f1^0,f,c
  1475  000E34  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1476  000E36  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1477  000E38  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1478  000E3A  060A               	decf	___fltol@exp1^0,f,c
  1479  000E3C                     l1490:
  1480  000E3C  500A               	movf	___fltol@exp1^0,w,c
  1481  000E3E  A4D8               	btfss	status,2,c
  1482  000E40  D7F7               	goto	l1488
  1483  000E42                     u810:
  1484  000E42  5009               	movf	___fltol@sign1^0,w,c
  1485  000E44  B4D8               	btfsc	status,2,c
  1486  000E46  D008               	goto	l1496
  1487  000E48  1E04               	comf	(___fltol@f1+3)^0,f,c
  1488  000E4A  1E03               	comf	(___fltol@f1+2)^0,f,c
  1489  000E4C  1E02               	comf	(___fltol@f1+1)^0,f,c
  1490  000E4E  6C01               	negf	___fltol@f1^0,c
  1491  000E50  0E00               	movlw	0
  1492  000E52  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1493  000E54  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1494  000E56  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1495  000E58                     l1496:
  1496  000E58  C001  F001         	movff	___fltol@f1,?___fltol
  1497  000E5C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1498  000E60  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1499  000E64  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1500  000E68  0012               	return		;funcret
  1501  000E6A                     __end_of___fltol:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function ___flmul *****************
  1505 ;; Defined at:
  1506 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  b               4   14[COMRAM] long 
  1509 ;;  a               4   18[COMRAM] long 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  prod            4   33[COMRAM] struct .
  1512 ;;  grs             4   28[COMRAM] unsigned long 
  1513 ;;  temp            2   37[COMRAM] struct .
  1514 ;;  bexp            1   32[COMRAM] unsigned char 
  1515 ;;  aexp            1   27[COMRAM] unsigned char 
  1516 ;;  sign            1   26[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  4   14[COMRAM] unsigned char 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, prodl, prodh
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         8       0       0       0       0       0       0       0       0
  1527 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1528 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1529 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1530 ;;Total ram usage:       25 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text12
  1540  00081E                     __ptext12:
  1541                           	callstack 0
  1542  00081E                     ___flmul:
  1543                           	callstack 30
  1544                           
  1545                           ;incstack = 0
  1546  00081E  5012               	movf	(___flmul@b+3)^0,w,c
  1547  000820  0B80               	andlw	128
  1548  000822  6E1B               	movwf	___flmul@sign^0,c
  1549  000824  5012               	movf	(___flmul@b+3)^0,w,c
  1550  000826  2412               	addwf	(___flmul@b+3)^0,w,c
  1551  000828  6E21               	movwf	___flmul@bexp^0,c
  1552  00082A  BE11               	btfsc	(___flmul@b+2)^0,7,c
  1553  00082C  8021               	bsf	___flmul@bexp^0,0,c
  1554  00082E  5021               	movf	___flmul@bexp^0,w,c
  1555  000830  B4D8               	btfsc	status,2,c
  1556  000832  D00D               	goto	l1340
  1557  000834  2821               	incf	___flmul@bexp^0,w,c
  1558  000836  A4D8               	btfss	status,2,c
  1559  000838  D008               	goto	l1338
  1560  00083A  0E00               	movlw	0
  1561  00083C  6E0F               	movwf	___flmul@b^0,c
  1562  00083E  0E00               	movlw	0
  1563  000840  6E10               	movwf	(___flmul@b+1)^0,c
  1564  000842  0E00               	movlw	0
  1565  000844  6E11               	movwf	(___flmul@b+2)^0,c
  1566  000846  0E00               	movlw	0
  1567  000848  6E12               	movwf	(___flmul@b+3)^0,c
  1568  00084A                     l1338:
  1569  00084A  8E11               	bsf	(___flmul@b+2)^0,7,c
  1570  00084C  D008               	goto	l1342
  1571  00084E                     l1340:
  1572  00084E  0E00               	movlw	0
  1573  000850  6E0F               	movwf	___flmul@b^0,c
  1574  000852  0E00               	movlw	0
  1575  000854  6E10               	movwf	(___flmul@b+1)^0,c
  1576  000856  0E00               	movlw	0
  1577  000858  6E11               	movwf	(___flmul@b+2)^0,c
  1578  00085A  0E00               	movlw	0
  1579  00085C  6E12               	movwf	(___flmul@b+3)^0,c
  1580  00085E                     l1342:
  1581  00085E  5016               	movf	(___flmul@a+3)^0,w,c
  1582  000860  0B80               	andlw	128
  1583  000862  1A1B               	xorwf	___flmul@sign^0,f,c
  1584  000864  5016               	movf	(___flmul@a+3)^0,w,c
  1585  000866  2416               	addwf	(___flmul@a+3)^0,w,c
  1586  000868  6E1C               	movwf	___flmul@aexp^0,c
  1587  00086A  BE15               	btfsc	(___flmul@a+2)^0,7,c
  1588  00086C  801C               	bsf	___flmul@aexp^0,0,c
  1589  00086E  501C               	movf	___flmul@aexp^0,w,c
  1590  000870  B4D8               	btfsc	status,2,c
  1591  000872  D00D               	goto	l1358
  1592  000874  281C               	incf	___flmul@aexp^0,w,c
  1593  000876  A4D8               	btfss	status,2,c
  1594  000878  D008               	goto	l1356
  1595  00087A  0E00               	movlw	0
  1596  00087C  6E13               	movwf	___flmul@a^0,c
  1597  00087E  0E00               	movlw	0
  1598  000880  6E14               	movwf	(___flmul@a+1)^0,c
  1599  000882  0E00               	movlw	0
  1600  000884  6E15               	movwf	(___flmul@a+2)^0,c
  1601  000886  0E00               	movlw	0
  1602  000888  6E16               	movwf	(___flmul@a+3)^0,c
  1603  00088A                     l1356:
  1604  00088A  8E15               	bsf	(___flmul@a+2)^0,7,c
  1605  00088C  D008               	goto	l753
  1606  00088E                     l1358:
  1607  00088E  0E00               	movlw	0
  1608  000890  6E13               	movwf	___flmul@a^0,c
  1609  000892  0E00               	movlw	0
  1610  000894  6E14               	movwf	(___flmul@a+1)^0,c
  1611  000896  0E00               	movlw	0
  1612  000898  6E15               	movwf	(___flmul@a+2)^0,c
  1613  00089A  0E00               	movlw	0
  1614  00089C  6E16               	movwf	(___flmul@a+3)^0,c
  1615  00089E                     l753:
  1616  00089E  501C               	movf	___flmul@aexp^0,w,c
  1617  0008A0  B4D8               	btfsc	status,2,c
  1618  0008A2  D003               	goto	u650
  1619  0008A4  5021               	movf	___flmul@bexp^0,w,c
  1620  0008A6  A4D8               	btfss	status,2,c
  1621  0008A8  D009               	goto	l1366
  1622  0008AA                     u650:
  1623  0008AA  0E00               	movlw	0
  1624  0008AC  6E0F               	movwf	?___flmul^0,c
  1625  0008AE  0E00               	movlw	0
  1626  0008B0  6E10               	movwf	(?___flmul+1)^0,c
  1627  0008B2  0E00               	movlw	0
  1628  0008B4  6E11               	movwf	(?___flmul+2)^0,c
  1629  0008B6  0E00               	movlw	0
  1630  0008B8  6E12               	movwf	(?___flmul+3)^0,c
  1631  0008BA  0012               	return	
  1632  0008BC                     l1366:
  1633  0008BC  5015               	movf	(___flmul@a+2)^0,w,c
  1634  0008BE  020F               	mulwf	___flmul@b^0,c
  1635  0008C0  CFF3 F026          	movff	prodl,___flmul@temp
  1636  0008C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  1637  0008C8  5026               	movf	___flmul@temp^0,w,c
  1638  0008CA  6E1D               	movwf	___flmul@grs^0,c
  1639  0008CC  6A1E               	clrf	(___flmul@grs+1)^0,c
  1640  0008CE  6A1F               	clrf	(___flmul@grs+2)^0,c
  1641  0008D0  6A20               	clrf	(___flmul@grs+3)^0,c
  1642  0008D2  5027               	movf	(___flmul@temp+1)^0,w,c
  1643  0008D4  6E22               	movwf	___flmul@prod^0,c
  1644  0008D6  6A23               	clrf	(___flmul@prod+1)^0,c
  1645  0008D8  6A24               	clrf	(___flmul@prod+2)^0,c
  1646  0008DA  6A25               	clrf	(___flmul@prod+3)^0,c
  1647  0008DC  5014               	movf	(___flmul@a+1)^0,w,c
  1648  0008DE  0210               	mulwf	(___flmul@b+1)^0,c
  1649  0008E0  CFF3 F026          	movff	prodl,___flmul@temp
  1650  0008E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  1651  0008E8  5026               	movf	___flmul@temp^0,w,c
  1652  0008EA  261D               	addwf	___flmul@grs^0,f,c
  1653  0008EC  0E00               	movlw	0
  1654  0008EE  221E               	addwfc	(___flmul@grs+1)^0,f,c
  1655  0008F0  221F               	addwfc	(___flmul@grs+2)^0,f,c
  1656  0008F2  2220               	addwfc	(___flmul@grs+3)^0,f,c
  1657  0008F4  5027               	movf	(___flmul@temp+1)^0,w,c
  1658  0008F6  2622               	addwf	___flmul@prod^0,f,c
  1659  0008F8  0E00               	movlw	0
  1660  0008FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1661  0008FC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1662  0008FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1663  000900  5013               	movf	___flmul@a^0,w,c
  1664  000902  0211               	mulwf	(___flmul@b+2)^0,c
  1665  000904  CFF3 F026          	movff	prodl,___flmul@temp
  1666  000908  CFF4 F027          	movff	prodh,___flmul@temp+1
  1667  00090C  5026               	movf	___flmul@temp^0,w,c
  1668  00090E  261D               	addwf	___flmul@grs^0,f,c
  1669  000910  0E00               	movlw	0
  1670  000912  221E               	addwfc	(___flmul@grs+1)^0,f,c
  1671  000914  221F               	addwfc	(___flmul@grs+2)^0,f,c
  1672  000916  2220               	addwfc	(___flmul@grs+3)^0,f,c
  1673  000918  5027               	movf	(___flmul@temp+1)^0,w,c
  1674  00091A  2622               	addwf	___flmul@prod^0,f,c
  1675  00091C  0E00               	movlw	0
  1676  00091E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1677  000920  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1678  000922  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1679  000924  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  1680  000928  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  1681  00092C  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  1682  000930  6A1D               	clrf	___flmul@grs^0,c
  1683  000932  5013               	movf	___flmul@a^0,w,c
  1684  000934  0210               	mulwf	(___flmul@b+1)^0,c
  1685  000936  CFF3 F026          	movff	prodl,___flmul@temp
  1686  00093A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1687  00093E  5026               	movf	___flmul@temp^0,w,c
  1688  000940  261D               	addwf	___flmul@grs^0,f,c
  1689  000942  5027               	movf	(___flmul@temp+1)^0,w,c
  1690  000944  221E               	addwfc	(___flmul@grs+1)^0,f,c
  1691  000946  0E00               	movlw	0
  1692  000948  221F               	addwfc	(___flmul@grs+2)^0,f,c
  1693  00094A  0E00               	movlw	0
  1694  00094C  2220               	addwfc	(___flmul@grs+3)^0,f,c
  1695  00094E  5014               	movf	(___flmul@a+1)^0,w,c
  1696  000950  020F               	mulwf	___flmul@b^0,c
  1697  000952  CFF3 F026          	movff	prodl,___flmul@temp
  1698  000956  CFF4 F027          	movff	prodh,___flmul@temp+1
  1699  00095A  5026               	movf	___flmul@temp^0,w,c
  1700  00095C  261D               	addwf	___flmul@grs^0,f,c
  1701  00095E  5027               	movf	(___flmul@temp+1)^0,w,c
  1702  000960  221E               	addwfc	(___flmul@grs+1)^0,f,c
  1703  000962  0E00               	movlw	0
  1704  000964  221F               	addwfc	(___flmul@grs+2)^0,f,c
  1705  000966  0E00               	movlw	0
  1706  000968  2220               	addwfc	(___flmul@grs+3)^0,f,c
  1707  00096A  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  1708  00096E  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  1709  000972  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  1710  000976  6A1D               	clrf	___flmul@grs^0,c
  1711  000978  5013               	movf	___flmul@a^0,w,c
  1712  00097A  020F               	mulwf	___flmul@b^0,c
  1713  00097C  CFF3 F026          	movff	prodl,___flmul@temp
  1714  000980  CFF4 F027          	movff	prodh,___flmul@temp+1
  1715  000984  5026               	movf	___flmul@temp^0,w,c
  1716  000986  261D               	addwf	___flmul@grs^0,f,c
  1717  000988  5027               	movf	(___flmul@temp+1)^0,w,c
  1718  00098A  221E               	addwfc	(___flmul@grs+1)^0,f,c
  1719  00098C  0E00               	movlw	0
  1720  00098E  221F               	addwfc	(___flmul@grs+2)^0,f,c
  1721  000990  0E00               	movlw	0
  1722  000992  2220               	addwfc	(___flmul@grs+3)^0,f,c
  1723  000994  5015               	movf	(___flmul@a+2)^0,w,c
  1724  000996  0210               	mulwf	(___flmul@b+1)^0,c
  1725  000998  CFF3 F026          	movff	prodl,___flmul@temp
  1726  00099C  CFF4 F027          	movff	prodh,___flmul@temp+1
  1727  0009A0  5026               	movf	___flmul@temp^0,w,c
  1728  0009A2  2622               	addwf	___flmul@prod^0,f,c
  1729  0009A4  5027               	movf	(___flmul@temp+1)^0,w,c
  1730  0009A6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1731  0009A8  0E00               	movlw	0
  1732  0009AA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1733  0009AC  0E00               	movlw	0
  1734  0009AE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1735  0009B0  5014               	movf	(___flmul@a+1)^0,w,c
  1736  0009B2  0211               	mulwf	(___flmul@b+2)^0,c
  1737  0009B4  CFF3 F026          	movff	prodl,___flmul@temp
  1738  0009B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  1739  0009BC  5026               	movf	___flmul@temp^0,w,c
  1740  0009BE  2622               	addwf	___flmul@prod^0,f,c
  1741  0009C0  5027               	movf	(___flmul@temp+1)^0,w,c
  1742  0009C2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1743  0009C4  0E00               	movlw	0
  1744  0009C6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1745  0009C8  0E00               	movlw	0
  1746  0009CA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1747  0009CC  5015               	movf	(___flmul@a+2)^0,w,c
  1748  0009CE  0211               	mulwf	(___flmul@b+2)^0,c
  1749  0009D0  CFF3 F026          	movff	prodl,___flmul@temp
  1750  0009D4  CFF4 F027          	movff	prodh,___flmul@temp+1
  1751  0009D8  5026               	movf	___flmul@temp^0,w,c
  1752  0009DA  6E17               	movwf	??___flmul^0,c
  1753  0009DC  5027               	movf	(___flmul@temp+1)^0,w,c
  1754  0009DE  6E18               	movwf	(??___flmul+1)^0,c
  1755  0009E0  6A19               	clrf	(??___flmul+2)^0,c
  1756  0009E2  6A1A               	clrf	(??___flmul+3)^0,c
  1757  0009E4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1758  0009E8  C018  F019         	movff	??___flmul+1,??___flmul+2
  1759  0009EC  C017  F018         	movff	??___flmul,??___flmul+1
  1760  0009F0  6A17               	clrf	??___flmul^0,c
  1761  0009F2  5017               	movf	??___flmul^0,w,c
  1762  0009F4  2622               	addwf	___flmul@prod^0,f,c
  1763  0009F6  5018               	movf	(??___flmul+1)^0,w,c
  1764  0009F8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1765  0009FA  5019               	movf	(??___flmul+2)^0,w,c
  1766  0009FC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1767  0009FE  501A               	movf	(??___flmul+3)^0,w,c
  1768  000A00  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1769  000A02  5020               	movf	(___flmul@grs+3)^0,w,c
  1770  000A04  2622               	addwf	___flmul@prod^0,f,c
  1771  000A06  0E00               	movlw	0
  1772  000A08  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1773  000A0A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1774  000A0C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1775  000A0E  C01F  F020         	movff	___flmul@grs+2,___flmul@grs+3
  1776  000A12  C01E  F01F         	movff	___flmul@grs+1,___flmul@grs+2
  1777  000A16  C01D  F01E         	movff	___flmul@grs,___flmul@grs+1
  1778  000A1A  6A1D               	clrf	___flmul@grs^0,c
  1779  000A1C  501C               	movf	___flmul@aexp^0,w,c
  1780  000A1E  C021  F017         	movff	___flmul@bexp,??___flmul
  1781  000A22  6A18               	clrf	(??___flmul+1)^0,c
  1782  000A24  2617               	addwf	??___flmul^0,f,c
  1783  000A26  0E00               	movlw	0
  1784  000A28  2218               	addwfc	(??___flmul+1)^0,f,c
  1785  000A2A  0E82               	movlw	130
  1786  000A2C  2417               	addwf	??___flmul^0,w,c
  1787  000A2E  6E26               	movwf	___flmul@temp^0,c
  1788  000A30  0EFF               	movlw	255
  1789  000A32  2018               	addwfc	(??___flmul+1)^0,w,c
  1790  000A34  6E27               	movwf	(___flmul@temp+1)^0,c
  1791  000A36  D00F               	goto	l1414
  1792  000A38                     l1408:
  1793  000A38  90D8               	bcf	status,0,c
  1794  000A3A  3622               	rlcf	___flmul@prod^0,f,c
  1795  000A3C  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1796  000A3E  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1797  000A40  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1798  000A42  BE20               	btfsc	(___flmul@grs+3)^0,7,c
  1799  000A44  8022               	bsf	___flmul@prod^0,0,c
  1800  000A46  90D8               	bcf	status,0,c
  1801  000A48  361D               	rlcf	___flmul@grs^0,f,c
  1802  000A4A  361E               	rlcf	(___flmul@grs+1)^0,f,c
  1803  000A4C  361F               	rlcf	(___flmul@grs+2)^0,f,c
  1804  000A4E  3620               	rlcf	(___flmul@grs+3)^0,f,c
  1805  000A50  0626               	decf	___flmul@temp^0,f,c
  1806  000A52  A0D8               	btfss	status,0,c
  1807  000A54  0627               	decf	(___flmul@temp+1)^0,f,c
  1808  000A56                     l1414:
  1809  000A56  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1810  000A58  D7EF               	goto	l1408
  1811  000A5A  0E00               	movlw	0
  1812  000A5C  6E1C               	movwf	___flmul@aexp^0,c
  1813  000A5E  AE20               	btfss	(___flmul@grs+3)^0,7,c
  1814  000A60  D017               	goto	l762
  1815  000A62  0EFF               	movlw	255
  1816  000A64  141D               	andwf	___flmul@grs^0,w,c
  1817  000A66  6E17               	movwf	??___flmul^0,c
  1818  000A68  0EFF               	movlw	255
  1819  000A6A  141E               	andwf	(___flmul@grs+1)^0,w,c
  1820  000A6C  6E18               	movwf	(??___flmul+1)^0,c
  1821  000A6E  0EFF               	movlw	255
  1822  000A70  141F               	andwf	(___flmul@grs+2)^0,w,c
  1823  000A72  6E19               	movwf	(??___flmul+2)^0,c
  1824  000A74  0E7F               	movlw	127
  1825  000A76  1420               	andwf	(___flmul@grs+3)^0,w,c
  1826  000A78  6E1A               	movwf	(??___flmul+3)^0,c
  1827  000A7A  5017               	movf	??___flmul^0,w,c
  1828  000A7C  1018               	iorwf	(??___flmul+1)^0,w,c
  1829  000A7E  1019               	iorwf	(??___flmul+2)^0,w,c
  1830  000A80  101A               	iorwf	(??___flmul+3)^0,w,c
  1831  000A82  B4D8               	btfsc	status,2,c
  1832  000A84  D003               	goto	l763
  1833  000A86                     u690:
  1834  000A86  0E01               	movlw	1
  1835  000A88  6E1C               	movwf	___flmul@aexp^0,c
  1836  000A8A  D002               	goto	l762
  1837  000A8C                     l763:
  1838  000A8C  B022               	btfsc	___flmul@prod^0,0,c
  1839  000A8E  D7FB               	goto	u690
  1840  000A90                     l762:
  1841  000A90  501C               	movf	___flmul@aexp^0,w,c
  1842  000A92  B4D8               	btfsc	status,2,c
  1843  000A94  D01F               	goto	l1434
  1844  000A96  0E01               	movlw	1
  1845  000A98  2622               	addwf	___flmul@prod^0,f,c
  1846  000A9A  0E00               	movlw	0
  1847  000A9C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1848  000A9E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1849  000AA0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1850  000AA2  A025               	btfss	(___flmul@prod+3)^0,0,c
  1851  000AA4  D017               	goto	l1434
  1852  000AA6  C022  F017         	movff	___flmul@prod,??___flmul
  1853  000AAA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  1854  000AAE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  1855  000AB2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  1856  000AB6  341A               	rlcf	(??___flmul+3)^0,w,c
  1857  000AB8  321A               	rrcf	(??___flmul+3)^0,f,c
  1858  000ABA  3219               	rrcf	(??___flmul+2)^0,f,c
  1859  000ABC  3218               	rrcf	(??___flmul+1)^0,f,c
  1860  000ABE  3217               	rrcf	??___flmul^0,f,c
  1861  000AC0  C017  F022         	movff	??___flmul,___flmul@prod
  1862  000AC4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  1863  000AC8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  1864  000ACC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  1865  000AD0  4A26               	infsnz	___flmul@temp^0,f,c
  1866  000AD2  2A27               	incf	(___flmul@temp+1)^0,f,c
  1867  000AD4                     l1434:
  1868  000AD4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  1869  000AD6  D00D               	goto	l1438
  1870  000AD8  5027               	movf	(___flmul@temp+1)^0,w,c
  1871  000ADA  E103               	bnz	u730
  1872  000ADC  2826               	incf	___flmul@temp^0,w,c
  1873  000ADE  A0D8               	btfss	status,0,c
  1874  000AE0  D008               	goto	l1438
  1875  000AE2                     u730:
  1876  000AE2  0E00               	movlw	0
  1877  000AE4  6E22               	movwf	___flmul@prod^0,c
  1878  000AE6  0E00               	movlw	0
  1879  000AE8  6E23               	movwf	(___flmul@prod+1)^0,c
  1880  000AEA  0E80               	movlw	128
  1881  000AEC  6E24               	movwf	(___flmul@prod+2)^0,c
  1882  000AEE  0E7F               	movlw	127
  1883  000AF0  D020               	goto	L1
  1884  000AF2                     l1438:
  1885  000AF2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  1886  000AF4  D005               	goto	u740
  1887  000AF6  5027               	movf	(___flmul@temp+1)^0,w,c
  1888  000AF8  E10E               	bnz	l770
  1889  000AFA  0426               	decf	___flmul@temp^0,w,c
  1890  000AFC  B0D8               	btfsc	status,0,c
  1891  000AFE  D00B               	goto	l770
  1892  000B00                     u740:
  1893  000B00  0E00               	movlw	0
  1894  000B02  6E22               	movwf	___flmul@prod^0,c
  1895  000B04  0E00               	movlw	0
  1896  000B06  6E23               	movwf	(___flmul@prod+1)^0,c
  1897  000B08  0E00               	movlw	0
  1898  000B0A  6E24               	movwf	(___flmul@prod+2)^0,c
  1899  000B0C  0E00               	movlw	0
  1900  000B0E  6E25               	movwf	(___flmul@prod+3)^0,c
  1901  000B10  0E00               	movlw	0
  1902  000B12  6E1B               	movwf	___flmul@sign^0,c
  1903  000B14  D00F               	goto	l1450
  1904  000B16                     l770:
  1905  000B16  C026  F021         	movff	___flmul@temp,___flmul@bexp
  1906  000B1A  0EFF               	movlw	255
  1907  000B1C  1622               	andwf	___flmul@prod^0,f,c
  1908  000B1E  0EFF               	movlw	255
  1909  000B20  1623               	andwf	(___flmul@prod+1)^0,f,c
  1910  000B22  0E7F               	movlw	127
  1911  000B24  1624               	andwf	(___flmul@prod+2)^0,f,c
  1912  000B26  0E00               	movlw	0
  1913  000B28  1625               	andwf	(___flmul@prod+3)^0,f,c
  1914  000B2A  B021               	btfsc	___flmul@bexp^0,0,c
  1915  000B2C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  1916  000B2E  90D8               	bcf	status,0,c
  1917  000B30  3021               	rrcf	___flmul@bexp^0,w,c
  1918  000B32                     L1:
  1919  000B32  6E25               	movwf	(___flmul@prod+3)^0,c
  1920  000B34                     l1450:
  1921  000B34  501B               	movf	___flmul@sign^0,w,c
  1922  000B36  1225               	iorwf	(___flmul@prod+3)^0,f,c
  1923  000B38  C022  F00F         	movff	___flmul@prod,?___flmul
  1924  000B3C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  1925  000B40  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  1926  000B44  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  1927  000B48  0012               	return		;funcret
  1928  000B4A                     __end_of___flmul:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _POS_CURSOR *****************
  1932 ;; Defined at:
  1933 ;;		line 6 in file "../20212_c_el51_1.X/LCD.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  fila            1    wreg     unsigned char 
  1936 ;;  columna         1    3[COMRAM] unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  fila            1    4[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1948 ;;      Params:         1       0       0       0       0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1951 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1952 ;;Total ram usage:        2 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 2
  1955 ;; This function calls:
  1956 ;;		_ENVIA_LCD_CMD
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text13
  1963  001112                     __ptext13:
  1964                           	callstack 0
  1965  001112                     _POS_CURSOR:
  1966                           	callstack 28
  1967                           
  1968                           ;incstack = 0
  1969                           ;POS_CURSOR@fila stored from wreg
  1970  001112  6E05               	movwf	POS_CURSOR@fila^0,c
  1971                           
  1972                           ;../20212_c_el51_1.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna)
      +                          ;../20212_c_el51_1.X/LCD.c: 7: {;../20212_c_el51_1.X/LCD.c: 8:  if(fila == 1)
  1973  001114  0405               	decf	POS_CURSOR@fila^0,w,c
  1974  001116  A4D8               	btfss	status,2,c
  1975  001118  D005               	goto	l1312
  1976                           
  1977                           ;../20212_c_el51_1.X/LCD.c: 9:  {;../20212_c_el51_1.X/LCD.c: 10:   ENVIA_LCD_CMD(0x80+co
      +                          lumna);
  1978  00111A  5004               	movf	POS_CURSOR@columna^0,w,c
  1979  00111C  0F80               	addlw	128
  1980  00111E  EC2D  F008         	call	_ENVIA_LCD_CMD
  1981                           
  1982                           ;../20212_c_el51_1.X/LCD.c: 11:  }
  1983  001122  0012               	return	
  1984  001124                     l1312:
  1985  001124  0E02               	movlw	2
  1986  001126  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1987  001128  A4D8               	btfss	status,2,c
  1988  00112A  0012               	return	
  1989                           
  1990                           ;../20212_c_el51_1.X/LCD.c: 13:  {;../20212_c_el51_1.X/LCD.c: 14:   ENVIA_LCD_CMD(0xC0+c
      +                          olumna);
  1991  00112C  5004               	movf	POS_CURSOR@columna^0,w,c
  1992  00112E  0FC0               	addlw	192
  1993  001130  EC2D  F008         	call	_ENVIA_LCD_CMD
  1994  001134  0012               	return		;funcret
  1995  001136                     __end_of_POS_CURSOR:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _ENVIA_LCD_CMD *****************
  1999 ;; Defined at:
  2000 ;;		line 104 in file "../20212_c_el51_1.X/LCD.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  dato            1    wreg     unsigned char 
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;  dato            1    1[COMRAM] unsigned char 
  2005 ;;  aux             1    2[COMRAM] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2015 ;;      Params:         0       0       0       0       0       0       0       0       0
  2016 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2018 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2019 ;;Total ram usage:        2 bytes
  2020 ;; Hardware stack levels used: 1
  2021 ;; Hardware stack levels required when called: 1
  2022 ;; This function calls:
  2023 ;;		_ENVIA_NIBBLE
  2024 ;;		_LEER_LCD
  2025 ;; This function is called by:
  2026 ;;		_POS_CURSOR
  2027 ;;		_CURSOR_HOME
  2028 ;;		_CURSOR_ONOFF
  2029 ;;		_BORRAR_LCD
  2030 ;;		_LCD_CONFIG
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text14
  2035  00105A                     __ptext14:
  2036                           	callstack 0
  2037  00105A                     _ENVIA_LCD_CMD:
  2038                           	callstack 27
  2039                           
  2040                           ;incstack = 0
  2041                           ;ENVIA_LCD_CMD@dato stored from wreg
  2042  00105A  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2043                           
  2044                           ;../20212_c_el51_1.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20212_c_el51_
      +                          1.X/LCD.c: 105: {;../20212_c_el51_1.X/LCD.c: 106:  unsigned char aux;;../20212_c_el51_1.
      +                          X/LCD.c: 107:  LATDbits.LATD0 = 0;
  2045  00105C  908C               	bcf	140,0,c	;volatile
  2046                           
  2047                           ;../20212_c_el51_1.X/LCD.c: 108:  LEER_LCD();
  2048  00105E  EC82  F007         	call	_LEER_LCD	;wreg free
  2049                           
  2050                           ;../20212_c_el51_1.X/LCD.c: 109:  TRISD = 0b00000000;
  2051  001062  0E00               	movlw	0
  2052  001064  6E95               	movwf	149,c	;volatile
  2053                           
  2054                           ;../20212_c_el51_1.X/LCD.c: 111:         _delay(1200);
  2055  001066  0EF0               	movlw	240
  2056  001068                     u997:
  2057  001068  D000               	nop2	
  2058  00106A  2EE8               	decfsz	wreg,f,c
  2059  00106C  D7FD               	bra	u997
  2060                           
  2061                           ;../20212_c_el51_1.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  2062  00106E  928C               	bcf	140,1,c	;volatile
  2063                           
  2064                           ;../20212_c_el51_1.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  2065  001070  948C               	bcf	140,2,c	;volatile
  2066                           
  2067                           ;../20212_c_el51_1.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  2068  001072  908C               	bcf	140,0,c	;volatile
  2069                           
  2070                           ;../20212_c_el51_1.X/LCD.c: 115:  aux = dato & 0xF0;
  2071  001074  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2072  001076  0BF0               	andlw	240
  2073  001078  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2074                           
  2075                           ;../20212_c_el51_1.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  2076  00107A  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2077  00107C  ECA9  F008         	call	_ENVIA_NIBBLE
  2078                           
  2079                           ;../20212_c_el51_1.X/LCD.c: 117:  aux = dato<<4;
  2080  001080  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2081  001082  0BF0               	andlw	240
  2082  001084  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2083                           
  2084                           ;../20212_c_el51_1.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  2085  001086  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2086  001088  ECA9  F008         	call	_ENVIA_NIBBLE
  2087  00108C  0012               	return		;funcret
  2088  00108E                     __end_of_ENVIA_LCD_CMD:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _ESCRIBE_MENSAJE *****************
  2092 ;; Defined at:
  2093 ;;		line 41 in file "../20212_c_el51_1.X/LCD.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2096 ;;		 -> STR_4(2), STR_3(6), STR_2(4), STR_1(15), 
  2097 ;;  tam             1    4[COMRAM] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  i               1    6[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2109 ;;      Params:         2       0       0       0       0       0       0       0       0
  2110 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2111 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2112 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2113 ;;Total ram usage:        4 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 2
  2116 ;; This function calls:
  2117 ;;		_ENVIA_CHAR
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text15
  2124  0010EA                     __ptext15:
  2125                           	callstack 0
  2126  0010EA                     _ESCRIBE_MENSAJE:
  2127                           	callstack 28
  2128                           
  2129                           ;../20212_c_el51_1.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char ta
      +                          m);../20212_c_el51_1.X/LCD.c: 42: {;../20212_c_el51_1.X/LCD.c: 43:  unsigned char i = 0;
  2130                           
  2131                           ;incstack = 0
  2132  0010EA  0E00               	movlw	0
  2133  0010EC  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
  2134                           
  2135                           ;../20212_c_el51_1.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  2136  0010EE  0E00               	movlw	0
  2137  0010F0  6E07               	movwf	ESCRIBE_MENSAJE@i^0,c
  2138  0010F2  D00A               	goto	l1322
  2139  0010F4                     l1318:
  2140                           
  2141                           ;../20212_c_el51_1.X/LCD.c: 45:  {;../20212_c_el51_1.X/LCD.c: 46:   ENVIA_CHAR(cadena[i]
      +                          );
  2142  0010F4  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
  2143  0010F6  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
  2144  0010F8  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
  2145  0010FA  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2146  0010FE                     	if	0	;There is only one active tblptr byte
  2147  0010FE                     	endif
  2148  0010FE                     	if	0	;tblptru may be non-zero
  2149  0010FE                     	endif
  2150  0010FE                     	if	0	;tblptru may be non-zero
  2151  0010FE                     	endif
  2152  0010FE  0008               	tblrd		*
  2153  001100  50F5               	movf	tablat,w,c
  2154  001102  EC47  F008         	call	_ENVIA_CHAR
  2155                           
  2156                           ;../20212_c_el51_1.X/LCD.c: 47:  }
  2157  001106  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2158  001108                     l1322:
  2159  001108  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2160  00110A  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2161  00110C  B0D8               	btfsc	status,0,c
  2162  00110E  0012               	return	
  2163  001110  D7F1               	goto	l1318
  2164  001112                     __end_of_ESCRIBE_MENSAJE:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _ENVIA_CHAR *****************
  2168 ;; Defined at:
  2169 ;;		line 50 in file "../20212_c_el51_1.X/LCD.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  dato            1    wreg     unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  dato            1    1[COMRAM] unsigned char 
  2174 ;;  aux             1    2[COMRAM] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0
  2185 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2187 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2188 ;;Total ram usage:        2 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 1
  2191 ;; This function calls:
  2192 ;;		_ENVIA_NIBBLE
  2193 ;;		_LEER_LCD
  2194 ;; This function is called by:
  2195 ;;		_ESCRIBE_MENSAJE
  2196 ;;		_main
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text16
  2201  00108E                     __ptext16:
  2202                           	callstack 0
  2203  00108E                     _ENVIA_CHAR:
  2204                           	callstack 28
  2205                           
  2206                           ;incstack = 0
  2207                           ;ENVIA_CHAR@dato stored from wreg
  2208  00108E  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2209                           
  2210                           ;../20212_c_el51_1.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20212_c_el51_1.X/
      +                          LCD.c: 51: {;../20212_c_el51_1.X/LCD.c: 52:  unsigned char aux;;../20212_c_el51_1.X/LCD.
      +                          c: 53:  LATDbits.LATD0 = 1;
  2211  001090  808C               	bsf	140,0,c	;volatile
  2212                           
  2213                           ;../20212_c_el51_1.X/LCD.c: 54:  LEER_LCD();
  2214  001092  EC82  F007         	call	_LEER_LCD	;wreg free
  2215                           
  2216                           ;../20212_c_el51_1.X/LCD.c: 55:  TRISD = 0x00;
  2217  001096  0E00               	movlw	0
  2218  001098  6E95               	movwf	149,c	;volatile
  2219                           
  2220                           ;../20212_c_el51_1.X/LCD.c: 56:         _delay(1200);
  2221  00109A  0EF0               	movlw	240
  2222  00109C                     u1007:
  2223  00109C  D000               	nop2	
  2224  00109E  2EE8               	decfsz	wreg,f,c
  2225  0010A0  D7FD               	bra	u1007
  2226                           
  2227                           ;../20212_c_el51_1.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  2228  0010A2  928C               	bcf	140,1,c	;volatile
  2229                           
  2230                           ;../20212_c_el51_1.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  2231  0010A4  948C               	bcf	140,2,c	;volatile
  2232                           
  2233                           ;../20212_c_el51_1.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  2234  0010A6  808C               	bsf	140,0,c	;volatile
  2235                           
  2236                           ;../20212_c_el51_1.X/LCD.c: 61:  aux = dato & 0xF0;
  2237  0010A8  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2238  0010AA  0BF0               	andlw	240
  2239  0010AC  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2240                           
  2241                           ;../20212_c_el51_1.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  2242  0010AE  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2243  0010B0  ECA9  F008         	call	_ENVIA_NIBBLE
  2244                           
  2245                           ;../20212_c_el51_1.X/LCD.c: 63:  aux = dato << 4;
  2246  0010B4  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2247  0010B6  0BF0               	andlw	240
  2248  0010B8  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2249                           
  2250                           ;../20212_c_el51_1.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  2251  0010BA  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2252  0010BC  ECA9  F008         	call	_ENVIA_NIBBLE
  2253  0010C0  0012               	return		;funcret
  2254  0010C2                     __end_of_ENVIA_CHAR:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _LEER_LCD *****************
  2258 ;; Defined at:
  2259 ;;		line 121 in file "../20212_c_el51_1.X/LCD.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  aux             1    0[COMRAM] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0
  2274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2277 ;;Total ram usage:        1 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_ENVIA_CHAR
  2283 ;;		_ENVIA_LCD_CMD
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text17
  2288  000F04                     __ptext17:
  2289                           	callstack 0
  2290  000F04                     _LEER_LCD:
  2291                           	callstack 27
  2292                           
  2293                           ;../20212_c_el51_1.X/LCD.c: 123:  unsigned char aux;;../20212_c_el51_1.X/LCD.c: 124:  TR
      +                          ISD = 0xF8;
  2294                           
  2295                           ;incstack = 0
  2296  000F04  0EF8               	movlw	248
  2297  000F06  6E95               	movwf	149,c	;volatile
  2298                           
  2299                           ;../20212_c_el51_1.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  2300  000F08  908C               	bcf	140,0,c	;volatile
  2301                           
  2302                           ;../20212_c_el51_1.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  2303  000F0A  828C               	bsf	140,1,c	;volatile
  2304                           
  2305                           ;../20212_c_el51_1.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  2306  000F0C  848C               	bsf	140,2,c	;volatile
  2307                           
  2308                           ;../20212_c_el51_1.X/LCD.c: 128:         _delay(1200);
  2309  000F0E  0EF0               	movlw	240
  2310  000F10                     u1017:
  2311  000F10  D000               	nop2	
  2312  000F12  2EE8               	decfsz	wreg,f,c
  2313  000F14  D7FD               	bra	u1017
  2314                           
  2315                           ;../20212_c_el51_1.X/LCD.c: 130:  aux = PORTD;
  2316  000F16  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2317                           
  2318                           ;../20212_c_el51_1.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  2319  000F1A  948C               	bcf	140,2,c	;volatile
  2320                           
  2321                           ;../20212_c_el51_1.X/LCD.c: 132:         _delay(1200);
  2322  000F1C  0EF0               	movlw	240
  2323  000F1E                     u1027:
  2324  000F1E  D000               	nop2	
  2325  000F20  2EE8               	decfsz	wreg,f,c
  2326  000F22  D7FD               	bra	u1027
  2327                           
  2328                           ;../20212_c_el51_1.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  2329  000F24  848C               	bsf	140,2,c	;volatile
  2330                           
  2331                           ;../20212_c_el51_1.X/LCD.c: 135:         _delay(1200);
  2332  000F26  0EF0               	movlw	240
  2333  000F28                     u1037:
  2334  000F28  D000               	nop2	
  2335  000F2A  2EE8               	decfsz	wreg,f,c
  2336  000F2C  D7FD               	bra	u1037
  2337  000F2E                     l832:
  2338                           
  2339                           ;../20212_c_el51_1.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  2340  000F2E  948C               	bcf	140,2,c	;volatile
  2341                           
  2342                           ;../20212_c_el51_1.X/LCD.c: 138:  aux = aux & 0x80;
  2343  000F30  5001               	movf	LEER_LCD@aux^0,w,c
  2344  000F32  0B80               	andlw	128
  2345  000F34  6E01               	movwf	LEER_LCD@aux^0,c
  2346                           
  2347                           ;../20212_c_el51_1.X/LCD.c: 139:  while(aux == 0x80)
  2348  000F36  D012               	goto	l848
  2349  000F38                     l67:
  2350                           
  2351                           ;../20212_c_el51_1.X/LCD.c: 140:         {;../20212_c_el51_1.X/LCD.c: 141:             L
      +                          ATDbits.LATD2 = 1;
  2352  000F38  848C               	bsf	140,2,c	;volatile
  2353                           
  2354                           ;../20212_c_el51_1.X/LCD.c: 142:             _delay(1200);
  2355  000F3A  0EF0               	movlw	240
  2356  000F3C                     u1047:
  2357  000F3C  D000               	nop2	
  2358  000F3E  2EE8               	decfsz	wreg,f,c
  2359  000F40  D7FD               	bra	u1047
  2360                           
  2361                           ;../20212_c_el51_1.X/LCD.c: 143:             aux = PORTD;
  2362  000F42  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2363                           
  2364                           ;../20212_c_el51_1.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  2365  000F46  948C               	bcf	140,2,c	;volatile
  2366                           
  2367                           ;../20212_c_el51_1.X/LCD.c: 145:             _delay(1200);
  2368  000F48  0EF0               	movlw	240
  2369  000F4A                     u1057:
  2370  000F4A  D000               	nop2	
  2371  000F4C  2EE8               	decfsz	wreg,f,c
  2372  000F4E  D7FD               	bra	u1057
  2373                           
  2374                           ;../20212_c_el51_1.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  2375  000F50  848C               	bsf	140,2,c	;volatile
  2376                           
  2377                           ;../20212_c_el51_1.X/LCD.c: 147:             _delay(1200);
  2378  000F52  0EF0               	movlw	240
  2379  000F54                     u1067:
  2380  000F54  D000               	nop2	
  2381  000F56  2EE8               	decfsz	wreg,f,c
  2382  000F58  D7FD               	bra	u1067
  2383  000F5A  D7E9               	goto	l832
  2384  000F5C                     l848:
  2385                           
  2386                           ;../20212_c_el51_1.X/LCD.c: 139:  while(aux == 0x80)
  2387  000F5C  0E80               	movlw	128
  2388  000F5E  1801               	xorwf	LEER_LCD@aux^0,w,c
  2389  000F60  A4D8               	btfss	status,2,c
  2390  000F62  0012               	return	
  2391  000F64  D7E9               	goto	l67
  2392  000F66                     __end_of_LEER_LCD:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _ENVIA_NIBBLE *****************
  2396 ;; Defined at:
  2397 ;;		line 93 in file "../20212_c_el51_1.X/LCD.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  dato            1    wreg     unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  dato            1    0[COMRAM] unsigned char 
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0
  2412 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2414 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        1 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_ENVIA_CHAR
  2421 ;;		_LCD_CONFIG
  2422 ;;		_ENVIA_LCD_CMD
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text18
  2427  001152                     __ptext18:
  2428                           	callstack 0
  2429  001152                     _ENVIA_NIBBLE:
  2430                           	callstack 28
  2431                           
  2432                           ;incstack = 0
  2433                           ;ENVIA_NIBBLE@dato stored from wreg
  2434  001152  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2435                           
  2436                           ;../20212_c_el51_1.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20212_c_el51_1.
      +                          X/LCD.c: 94: {;../20212_c_el51_1.X/LCD.c: 95:  LATD &= 0x0F;
  2437  001154  0E0F               	movlw	15
  2438  001156  168C               	andwf	140,f,c	;volatile
  2439                           
  2440                           ;../20212_c_el51_1.X/LCD.c: 96:  dato &= 0xF0;
  2441  001158  0EF0               	movlw	240
  2442  00115A  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2443                           
  2444                           ;../20212_c_el51_1.X/LCD.c: 97:  LATD|= dato;
  2445  00115C  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2446  00115E  128C               	iorwf	140,f,c	;volatile
  2447                           
  2448                           ;../20212_c_el51_1.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  2449  001160  848C               	bsf	140,2,c	;volatile
  2450                           
  2451                           ;../20212_c_el51_1.X/LCD.c: 100:         _delay(1200);
  2452  001162  0EF0               	movlw	240
  2453  001164                     u1077:
  2454  001164  D000               	nop2	
  2455  001166  2EE8               	decfsz	wreg,f,c
  2456  001168  D7FD               	bra	u1077
  2457                           
  2458                           ;../20212_c_el51_1.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  2459  00116A  948C               	bcf	140,2,c	;volatile
  2460  00116C  0012               	return		;funcret
  2461  00116E                     __end_of_ENVIA_NIBBLE:
  2462                           	callstack 0
  2463                           
  2464                           	psect	rparam
  2465  0000                     
  2466                           	psect	idloc
  2467                           
  2468                           ;Config register IDLOC0 @ 0x200000
  2469                           ;	unspecified, using default values
  2470  200000                     	org	2097152
  2471  200000  FF                 	db	255
  2472                           
  2473                           ;Config register IDLOC1 @ 0x200001
  2474                           ;	unspecified, using default values
  2475  200001                     	org	2097153
  2476  200001  FF                 	db	255
  2477                           
  2478                           ;Config register IDLOC2 @ 0x200002
  2479                           ;	unspecified, using default values
  2480  200002                     	org	2097154
  2481  200002  FF                 	db	255
  2482                           
  2483                           ;Config register IDLOC3 @ 0x200003
  2484                           ;	unspecified, using default values
  2485  200003                     	org	2097155
  2486  200003  FF                 	db	255
  2487                           
  2488                           ;Config register IDLOC4 @ 0x200004
  2489                           ;	unspecified, using default values
  2490  200004                     	org	2097156
  2491  200004  FF                 	db	255
  2492                           
  2493                           ;Config register IDLOC5 @ 0x200005
  2494                           ;	unspecified, using default values
  2495  200005                     	org	2097157
  2496  200005  FF                 	db	255
  2497                           
  2498                           ;Config register IDLOC6 @ 0x200006
  2499                           ;	unspecified, using default values
  2500  200006                     	org	2097158
  2501  200006  FF                 	db	255
  2502                           
  2503                           ;Config register IDLOC7 @ 0x200007
  2504                           ;	unspecified, using default values
  2505  200007                     	org	2097159
  2506  200007  FF                 	db	255
  2507                           
  2508                           	psect	config
  2509                           
  2510                           ;Config register CONFIG1L @ 0x300000
  2511                           ;	PLL Prescaler Selection bits
  2512                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2513                           ;	System Clock Postscaler Selection bits
  2514                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2515                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2516                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2517  300000                     	org	3145728
  2518  300000  00                 	db	0
  2519                           
  2520                           ;Config register CONFIG1H @ 0x300001
  2521                           ;	Oscillator Selection bits
  2522                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2523                           ;	Fail-Safe Clock Monitor Enable bit
  2524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2525                           ;	Internal/External Oscillator Switchover bit
  2526                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2527  300001                     	org	3145729
  2528  300001  02                 	db	2
  2529                           
  2530                           ;Config register CONFIG2L @ 0x300002
  2531                           ;	Power-up Timer Enable bit
  2532                           ;	PWRT = ON, PWRT enabled
  2533                           ;	Brown-out Reset Enable bits
  2534                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2535                           ;	Brown-out Reset Voltage bits
  2536                           ;	BORV = 3, Minimum setting 2.05V
  2537                           ;	USB Voltage Regulator Enable bit
  2538                           ;	VREGEN = OFF, USB voltage regulator disabled
  2539  300002                     	org	3145730
  2540  300002  18                 	db	24
  2541                           
  2542                           ;Config register CONFIG2H @ 0x300003
  2543                           ;	Watchdog Timer Enable bit
  2544                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2545                           ;	Watchdog Timer Postscale Select bits
  2546                           ;	WDTPS = 32768, 1:32768
  2547  300003                     	org	3145731
  2548  300003  1E                 	db	30
  2549                           
  2550                           ; Padding undefined space
  2551  300004                     	org	3145732
  2552  300004  FF                 	db	255
  2553                           
  2554                           ;Config register CONFIG3H @ 0x300005
  2555                           ;	CCP2 MUX bit
  2556                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2557                           ;	PORTB A/D Enable bit
  2558                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2559                           ;	Low-Power Timer 1 Oscillator Enable bit
  2560                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2561                           ;	MCLR Pin Enable bit
  2562                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2563  300005                     	org	3145733
  2564  300005  81                 	db	129
  2565                           
  2566                           ;Config register CONFIG4L @ 0x300006
  2567                           ;	Stack Full/Underflow Reset Enable bit
  2568                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2569                           ;	Single-Supply ICSP Enable bit
  2570                           ;	LVP = OFF, Single-Supply ICSP disabled
  2571                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2572                           ;	ICPRT = OFF, ICPORT disabled
  2573                           ;	Extended Instruction Set Enable bit
  2574                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2575                           ;	Background Debugger Enable bit
  2576                           ;	DEBUG = 0x1, unprogrammed default
  2577  300006                     	org	3145734
  2578  300006  81                 	db	129
  2579                           
  2580                           ; Padding undefined space
  2581  300007                     	org	3145735
  2582  300007  FF                 	db	255
  2583                           
  2584                           ;Config register CONFIG5L @ 0x300008
  2585                           ;	Code Protection bit
  2586                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2587                           ;	Code Protection bit
  2588                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2589                           ;	Code Protection bit
  2590                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2591                           ;	Code Protection bit
  2592                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2593  300008                     	org	3145736
  2594  300008  0F                 	db	15
  2595                           
  2596                           ;Config register CONFIG5H @ 0x300009
  2597                           ;	Boot Block Code Protection bit
  2598                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2599                           ;	Data EEPROM Code Protection bit
  2600                           ;	CPD = OFF, Data EEPROM is not code-protected
  2601  300009                     	org	3145737
  2602  300009  C0                 	db	192
  2603                           
  2604                           ;Config register CONFIG6L @ 0x30000A
  2605                           ;	Write Protection bit
  2606                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2607                           ;	Write Protection bit
  2608                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2609                           ;	Write Protection bit
  2610                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2611                           ;	Write Protection bit
  2612                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2613  30000A                     	org	3145738
  2614  30000A  0F                 	db	15
  2615                           
  2616                           ;Config register CONFIG6H @ 0x30000B
  2617                           ;	Configuration Register Write Protection bit
  2618                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2619                           ;	Boot Block Write Protection bit
  2620                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2621                           ;	Data EEPROM Write Protection bit
  2622                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2623  30000B                     	org	3145739
  2624  30000B  E0                 	db	224
  2625                           
  2626                           ;Config register CONFIG7L @ 0x30000C
  2627                           ;	Table Read Protection bit
  2628                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2629                           ;	Table Read Protection bit
  2630                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2631                           ;	Table Read Protection bit
  2632                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2633                           ;	Table Read Protection bit
  2634                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2635  30000C                     	org	3145740
  2636  30000C  0F                 	db	15
  2637                           
  2638                           ;Config register CONFIG7H @ 0x30000D
  2639                           ;	Boot Block Table Read Protection bit
  2640                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2641  30000D                     	org	3145741
  2642  30000D  40                 	db	64
  2643                           tosu	equ	0xFFF
  2644                           tosh	equ	0xFFE
  2645                           tosl	equ	0xFFD
  2646                           stkptr	equ	0xFFC
  2647                           pclatu	equ	0xFFB
  2648                           pclath	equ	0xFFA
  2649                           pcl	equ	0xFF9
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           indf0	equ	0xFEF
  2657                           postinc0	equ	0xFEE
  2658                           postdec0	equ	0xFED
  2659                           preinc0	equ	0xFEC
  2660                           plusw0	equ	0xFEB
  2661                           fsr0h	equ	0xFEA
  2662                           fsr0l	equ	0xFE9
  2663                           wreg	equ	0xFE8
  2664                           indf1	equ	0xFE7
  2665                           postinc1	equ	0xFE6
  2666                           postdec1	equ	0xFE5
  2667                           preinc1	equ	0xFE4
  2668                           plusw1	equ	0xFE3
  2669                           fsr1h	equ	0xFE2
  2670                           fsr1l	equ	0xFE1
  2671                           bsr	equ	0xFE0
  2672                           indf2	equ	0xFDF
  2673                           postinc2	equ	0xFDE
  2674                           postdec2	equ	0xFDD
  2675                           preinc2	equ	0xFDC
  2676                           plusw2	equ	0xFDB
  2677                           fsr2h	equ	0xFDA
  2678                           fsr2l	equ	0xFD9
  2679                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      55
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_4(CODE[2]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _digbyte->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5745
                                             39 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                           ___xxtofl
                      _configuracion
                            _digbyte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _digbyte                                              2     0      2    1473
                                             12 COMRAM     2     0      2
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1745
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     819
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _configuracion
   _digbyte
     ___fltol (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      37       1       57.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      20        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 13 21:36:25 2021

                      l67 0F38            ?_configuracion 0001             ENVIA_CHAR@aux 0003  
                     l131 0C94                       l630 100E                       l640 1050  
                     l801 0C06                       l832 0F2E                       l753 089E  
                     l770 0B16                       l762 0A90                       l763 0A8C  
                     l848 0F5C                       l794 0B88                       l886 1144  
                     u500 0FE8                       u530 1032                       u730 0AE2  
                     u650 08AA                       u810 0E42                       u740 0B00  
                     u760 0DBC                       u690 0A86                       u770 0DEC  
                     u775 0DE2                       u890 0C42                       u947 0D1C  
                     u957 10D0                       u967 0F76                       u977 0F84  
                     u987 0F94                       u997 1068                       _pot 002A  
             LEER_LCD@aux 0001                       wreg 000FE8              ?_CURSOR_HOME 0001  
            ___flmul@aexp 001C              ___flmul@bexp 0021              ___flmul@sign 001B  
            ___flmul@temp 0026              ___flmul@prod 0022            ??_ENVIA_NIBBLE 0001  
            ___fltol@exp1 000A            ENVIA_CHAR@dato 0002                      l1312 1124  
                    l1304 1046                      l1322 1108                      l1340 084E  
                    l1318 10F4                      l1414 0A56                      l1342 085E  
                    l1408 0A38                      l1512 0BB6                      l1450 0B34  
                    l1434 0AD4                      l1338 084A                      l1514 0BBC  
                    l1506 0B98                      l1356 088A                      l1524 0C2C  
                    l1516 0BC8                      l1276 0FDC                      l1438 0AF2  
                    l1366 08BC                      l1358 088E                      l1462 0DCE  
                    l1542 0C78                      l1526 0C38                      l1518 0BEE  
                    l1278 0FE4                      l1550 0C92                      l1288 1004  
                    l1296 1026                      l1490 0E3C                      l1482 0E28  
                    l1298 102E                      l1478 0E18                      l1496 0E58  
                    l1488 0E30                      STR_1 0801                      STR_2 0816  
                    STR_3 0810                      STR_4 081A                      u1007 109C  
                    u1017 0F10                      u1027 0F1E                      u1037 0F28  
                    u1047 0F3C                      u1057 0F4A                      u1067 0F54  
                    u1077 1164                      _LATD 000F8C                      _main 0C8A  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
           ?_CURSOR_ONOFF 0001              ___param_bank 000000           ??_ENVIA_LCD_CMD 0002  
        __end_of_LEER_LCD 0F66       __size_of_BORRAR_LCD 0008             ___fltol@sign1 0009  
                   ?_main 0001           __end_of___flmul 0B4A           __end_of___fltol 0E6A  
         __end_of___lwdiv 1018           __end_of___lwmod 105A                     _PORTD 000F83  
     __size_of_LCD_CONFIG 0060                     _TRISD 000F95       __size_of_ENVIA_CHAR 0034  
         __end_of_digbyte 0F04               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 116E  
            __end_of_main 0DB0           ??_configuracion 0001           _ESCRIBE_MENSAJE 10EA  
                  ??_main 0028             __activetblptr 000001                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    _ADRESH 000FC4  
                  _ADRESL 000FC3          __end_of___xxtofl 0C8A          __end_of_lcd_init 10EA  
    __end_of_ENVIA_NIBBLE 116E                 ??___flmul 0017                 ??___fltol 0005  
               ??___lwdiv 000A                 ??___lwmod 0005       __size_of_POS_CURSOR 0024  
                  clear_0 1174                    _res_ad 0036                    isa$std 000001  
               ??_digbyte 000F              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008              ___xxtofl@arg 000B              ___xxtofl@exp 000A  
            ___xxtofl@val 0001                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 117A              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002                ___fltol@f1 0001   __end_of_ESCRIBE_MENSAJE 1112  
          __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 11A6          ENVIA_LCD_CMD@aux 0003  
    __end_of_CURSOR_ONOFF 1152        __end_of_LCD_CONFIG 0FC6        __end_of_ENVIA_CHAR 10C2  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001                _dig_decena 0030  
              _dig_millar 0034                _dig_unidad 002E                 ?___xxtofl 0001  
            ??_POS_CURSOR 0005                 ?_lcd_init 0001     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
          digbyte@dato_in 000D                   ___flmul 081E                   ___fltol 0DB0  
                 ___lwdiv 0FC6                   ___lwmod 1018              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 108E                   __pcinit 116E        __end_of_POS_CURSOR 1136  
                 __ramtop 0800                   _digbyte 0E6A                   __ptext0 0C8A  
                 __ptext1 10C2                   __ptext2 0F66                   __ptext3 1136  
                 __ptext4 1196                   __ptext5 119E                   __ptext6 0E6A  
                 __ptext7 1018                   __ptext8 0FC6                   __ptext9 1188  
              ??___xxtofl 0005                ??_lcd_init 0005              _ENVIA_NIBBLE 1152  
    end_of_initialization 117A                   postinc0 000FEE     __end_of_configuracion 1196  
   __size_of_CURSOR_ONOFF 001C             ___xxtofl@sign 0009               ___flmul@grs 001D  
       __size_of_LEER_LCD 0062              _CURSOR_ONOFF 1136        CURSOR_ONOFF@estado 0004  
           ??_CURSOR_HOME 0004       start_initialization 116E         ENVIA_LCD_CMD@dato 0002  
               ___flmul@a 0013                 ___flmul@b 000F               __pbssCOMRAM 002A  
       __size_of___xxtofl 0140       __end_of_CURSOR_HOME 119E               _dig_centena 0032  
       __size_of_lcd_init 0028          ___lwdiv@dividend 0006                  ?___flmul 000F  
                ?___fltol 0001                  ?___lwdiv 0006                  ?___lwmod 0001  
                ?_digbyte 000D               __smallconst 0800          ___lwdiv@quotient 000A  
                _LEER_LCD 0F04                  _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0007  
          POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 0028                _ADCON0bits 000FC2  
             _CURSOR_HOME 1196    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800          __size_of___flmul 032C  
        __size_of___fltol 00BA          __size_of___lwdiv 0052          __size_of___lwmod 0042  
        __size_of_digbyte 009A                  ___xxtofl 0B4A           ___lwdiv@divisor 0008  
         ___lwdiv@counter 000C                  __ptext10 0B4A                  __ptext11 0DB0  
                __ptext12 081E                  __ptext13 1112                  __ptext14 105A  
                __ptext15 10EA                  __ptext16 108E                  __ptext17 0F04  
                __ptext18 1152                _BORRAR_LCD 119E                  _lcd_init 10C2  
  __size_of_configuracion 000E             __size_of_main 0126                _LCD_CONFIG 0F66  
              _ENVIA_CHAR 108E                  isa$xinst 000000             _ENVIA_LCD_CMD 105A  
       ??_ESCRIBE_MENSAJE 0006     ESCRIBE_MENSAJE@cadena 0004          ___lwmod@dividend 0001  
          ?_ENVIA_LCD_CMD 0001             _configuracion 1188           ___lwmod@divisor 0003  
         ___lwmod@counter 0005               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 1112               ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0005  
             ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
