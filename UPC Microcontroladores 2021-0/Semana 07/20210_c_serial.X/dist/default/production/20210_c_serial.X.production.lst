

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:12:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Pro license) build 20201012212115 Og9s 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37                           	psect	pa_nodes0,global,class=CODE,delta=1
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  000388                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _menu_2
    79  000388  45                 	db	69
    80  000389  6C                 	db	108
    81  00038A  69                 	db	105
    82  00038B  6A                 	db	106
    83  00038C  61                 	db	97
    84  00038D  20                 	db	32
    85  00038E  6F                 	db	111
    86  00038F  70                 	db	112
    87  000390  63                 	db	99
    88  000391  69                 	db	105
    89  000392  6F                 	db	111
    90  000393  6E                 	db	110
    91  000394  3A                 	db	58
    92  000395  20                 	db	32
    93  000396  20                 	db	32
    94  000397  20                 	db	32
    95  000398  20                 	db	32
    96  000399  20                 	db	32
    97  00039A  20                 	db	32
    98  00039B  20                 	db	32
    99  00039C  20                 	db	32
   100  00039D  20                 	db	32
   101  00039E  20                 	db	32
   102  00039F  20                 	db	32
   103  0003A0  20                 	db	32
   104  0003A1  20                 	db	32
   105  0003A2  20                 	db	32
   106  0003A3  00                 	db	0
   107                           
   108                           ;initializer for _menu_1
   109  0003A4  42                 	db	66
   110  0003A5  69                 	db	105
   111  0003A6  65                 	db	101
   112  0003A7  6E                 	db	110
   113  0003A8  76                 	db	118
   114  0003A9  65                 	db	101
   115  0003AA  6E                 	db	110
   116  0003AB  69                 	db	105
   117  0003AC  64                 	db	100
   118  0003AD  6F                 	db	111
   119  0003AE  73                 	db	115
   120  0003AF  20                 	db	32
   121  0003B0  61                 	db	97
   122  0003B1  20                 	db	32
   123  0003B2  6C                 	db	108
   124  0003B3  61                 	db	97
   125  0003B4  20                 	db	32
   126  0003B5  61                 	db	97
   127  0003B6  70                 	db	112
   128  0003B7  6C                 	db	108
   129  0003B8  69                 	db	105
   130  0003B9  63                 	db	99
   131  0003BA  61                 	db	97
   132  0003BB  63                 	db	99
   133  0003BC  69                 	db	105
   134  0003BD  6F                 	db	111
   135  0003BE  6E                 	db	110
   136  0003BF  00                 	db	0
   137                           
   138                           	psect	idataBANK0
   139  000012                     __pidataBANK0:
   140                           	callstack 0
   141                           
   142                           ;initializer for _menu_7
   143  000012  28                 	db	40
   144  000013  6D                 	db	109
   145  000014  29                 	db	41
   146  000015  20                 	db	32
   147  000016  56                 	db	86
   148  000017  69                 	db	105
   149  000018  73                 	db	115
   150  000019  75                 	db	117
   151  00001A  61                 	db	97
   152  00001B  6C                 	db	108
   153  00001C  69                 	db	105
   154  00001D  7A                 	db	122
   155  00001E  61                 	db	97
   156  00001F  72                 	db	114
   157  000020  20                 	db	32
   158  000021  65                 	db	101
   159  000022  6C                 	db	108
   160  000023  20                 	db	32
   161  000024  6D                 	db	109
   162  000025  65                 	db	101
   163  000026  6E                 	db	110
   164  000027  75                 	db	117
   165  000028  20                 	db	32
   166  000029  20                 	db	32
   167  00002A  20                 	db	32
   168  00002B  20                 	db	32
   169  00002C  20                 	db	32
   170  00002D  00                 	db	0
   171                           
   172                           ;initializer for _menu_6
   173  00002E  28                 	db	40
   174  00002F  34                 	db	52
   175  000030  29                 	db	41
   176  000031  20                 	db	32
   177  000032  41                 	db	65
   178  000033  70                 	db	112
   179  000034  61                 	db	97
   180  000035  67                 	db	103
   181  000036  61                 	db	97
   182  000037  72                 	db	114
   183  000038  20                 	db	32
   184  000039  4C                 	db	76
   185  00003A  45                 	db	69
   186  00003B  44                 	db	68
   187  00003C  20                 	db	32
   188  00003D  32                 	db	50
   189  00003E  20                 	db	32
   190  00003F  20                 	db	32
   191  000040  20                 	db	32
   192  000041  20                 	db	32
   193  000042  20                 	db	32
   194  000043  20                 	db	32
   195  000044  20                 	db	32
   196  000045  20                 	db	32
   197  000046  20                 	db	32
   198  000047  20                 	db	32
   199  000048  20                 	db	32
   200  000049  00                 	db	0
   201                           
   202                           ;initializer for _menu_5
   203  00004A  28                 	db	40
   204  00004B  33                 	db	51
   205  00004C  29                 	db	41
   206  00004D  20                 	db	32
   207  00004E  50                 	db	80
   208  00004F  72                 	db	114
   209  000050  65                 	db	101
   210  000051  6E                 	db	110
   211  000052  64                 	db	100
   212  000053  65                 	db	101
   213  000054  72                 	db	114
   214  000055  20                 	db	32
   215  000056  4C                 	db	76
   216  000057  45                 	db	69
   217  000058  44                 	db	68
   218  000059  20                 	db	32
   219  00005A  32                 	db	50
   220  00005B  20                 	db	32
   221  00005C  20                 	db	32
   222  00005D  20                 	db	32
   223  00005E  20                 	db	32
   224  00005F  20                 	db	32
   225  000060  20                 	db	32
   226  000061  20                 	db	32
   227  000062  20                 	db	32
   228  000063  20                 	db	32
   229  000064  20                 	db	32
   230  000065  00                 	db	0
   231                           
   232                           ;initializer for _menu_4
   233  000066  28                 	db	40
   234  000067  32                 	db	50
   235  000068  29                 	db	41
   236  000069  20                 	db	32
   237  00006A  41                 	db	65
   238  00006B  70                 	db	112
   239  00006C  61                 	db	97
   240  00006D  67                 	db	103
   241  00006E  61                 	db	97
   242  00006F  72                 	db	114
   243  000070  20                 	db	32
   244  000071  4C                 	db	76
   245  000072  45                 	db	69
   246  000073  44                 	db	68
   247  000074  20                 	db	32
   248  000075  31                 	db	49
   249  000076  20                 	db	32
   250  000077  20                 	db	32
   251  000078  20                 	db	32
   252  000079  20                 	db	32
   253  00007A  20                 	db	32
   254  00007B  20                 	db	32
   255  00007C  20                 	db	32
   256  00007D  20                 	db	32
   257  00007E  20                 	db	32
   258  00007F  20                 	db	32
   259  000080  20                 	db	32
   260  000081  00                 	db	0
   261                           
   262                           ;initializer for _menu_3
   263  000082  28                 	db	40
   264  000083  31                 	db	49
   265  000084  29                 	db	41
   266  000085  20                 	db	32
   267  000086  50                 	db	80
   268  000087  72                 	db	114
   269  000088  65                 	db	101
   270  000089  6E                 	db	110
   271  00008A  64                 	db	100
   272  00008B  65                 	db	101
   273  00008C  72                 	db	114
   274  00008D  20                 	db	32
   275  00008E  4C                 	db	76
   276  00008F  45                 	db	69
   277  000090  44                 	db	68
   278  000091  20                 	db	32
   279  000092  31                 	db	49
   280  000093  20                 	db	32
   281  000094  20                 	db	32
   282  000095  20                 	db	32
   283  000096  20                 	db	32
   284  000097  20                 	db	32
   285  000098  20                 	db	32
   286  000099  20                 	db	32
   287  00009A  20                 	db	32
   288  00009B  20                 	db	32
   289  00009C  20                 	db	32
   290  00009D  00                 	db	0
   291                           
   292                           	psect	idataBANK1
   293  000478                     __pidataBANK1:
   294                           	callstack 0
   295                           
   296                           ;initializer for _error
   297  000478  54                 	db	84
   298  000479  65                 	db	101
   299  00047A  63                 	db	99
   300  00047B  6C                 	db	108
   301  00047C  61                 	db	97
   302  00047D  20                 	db	32
   303  00047E  69                 	db	105
   304  00047F  6E                 	db	110
   305  000480  76                 	db	118
   306  000481  61                 	db	97
   307  000482  6C                 	db	108
   308  000483  69                 	db	105
   309  000484  64                 	db	100
   310  000485  61                 	db	97
   311  000486  2C                 	db	44
   312  000487  20                 	db	32
   313  000488  69                 	db	105
   314  000489  6E                 	db	110
   315  00048A  74                 	db	116
   316  00048B  65                 	db	101
   317  00048C  6E                 	db	110
   318  00048D  74                 	db	116
   319  00048E  65                 	db	101
   320  00048F  20                 	db	32
   321  000490  64                 	db	100
   322  000491  65                 	db	101
   323  000492  20                 	db	32
   324  000493  6E                 	db	110
   325  000494  75                 	db	117
   326  000495  65                 	db	101
   327  000496  76                 	db	118
   328  000497  6F                 	db	111
   329  000498  00                 	db	0
   330  0000                     _RCREG	set	4014
   331  0000                     _LATDbits	set	3980
   332  0000                     _PIR1bits	set	3998
   333  0000                     _TXREG	set	4013
   334  0000                     _TXSTAbits	set	4012
   335  0000                     _RCSTAbits	set	4011
   336  0000                     _TRISCbits	set	3988
   337  0000                     _SPBRG	set	4015
   338  0000                     _SPBRGH	set	4016
   339  0000                     _PIE1bits	set	3997
   340  0000                     _INTCONbits	set	4082
   341  0000                     _TRISDbits	set	3989
   342                           
   343                           ; #config settings
   344                           
   345                           	psect	cinit
   346  00011E                     __pcinit:
   347                           	callstack 0
   348  00011E                     start_initialization:
   349                           	callstack 0
   350  00011E                     __initialization:
   351                           	callstack 0
   352                           
   353                           ; Initialize objects allocated to BANK1 (33 bytes)
   354                           ; load TBLPTR registers with __pidataBANK1
   355  00011E  0E78               	movlw	low __pidataBANK1
   356  000120  6EF6               	movwf	tblptrl,c
   357  000122  0E04               	movlw	high __pidataBANK1
   358  000124  6EF7               	movwf	tblptrh,c
   359  000126  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   360  000128  6EF8               	movwf	tblptru,c
   361  00012A  EE01  F000         	lfsr	0,__pdataBANK1
   362  00012E  EE10 F021          	lfsr	1,33
   363  000132                     copy_data0:
   364  000132  0009               	tblrd		*+
   365  000134  CFF5 FFEE          	movff	tablat,postinc0
   366  000138  50E5               	movf	postdec1,w,c
   367  00013A  50E1               	movf	fsr1l,w,c
   368  00013C  E1FA               	bnz	copy_data0
   369                           
   370                           ; Initialize objects allocated to BANK0 (140 bytes)
   371                           ; load TBLPTR registers with __pidataBANK0
   372  00013E  0E12               	movlw	low __pidataBANK0
   373  000140  6EF6               	movwf	tblptrl,c
   374  000142  0E00               	movlw	high __pidataBANK0
   375  000144  6EF7               	movwf	tblptrh,c
   376  000146  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   377  000148  6EF8               	movwf	tblptru,c
   378  00014A  EE00  F060         	lfsr	0,__pdataBANK0
   379  00014E  EE10 F08C          	lfsr	1,140
   380  000152                     copy_data1:
   381  000152  0009               	tblrd		*+
   382  000154  CFF5 FFEE          	movff	tablat,postinc0
   383  000158  50E5               	movf	postdec1,w,c
   384  00015A  50E1               	movf	fsr1l,w,c
   385  00015C  E1FA               	bnz	copy_data1
   386                           
   387                           ; Initialize objects allocated to COMRAM (56 bytes)
   388                           ; load TBLPTR registers with __pidataCOMRAM
   389  00015E  0E88               	movlw	low __pidataCOMRAM
   390  000160  6EF6               	movwf	tblptrl,c
   391  000162  0E03               	movlw	high __pidataCOMRAM
   392  000164  6EF7               	movwf	tblptrh,c
   393  000166  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   394  000168  6EF8               	movwf	tblptru,c
   395  00016A  EE00  F001         	lfsr	0,__pdataCOMRAM
   396  00016E  EE10 F038          	lfsr	1,56
   397  000172                     copy_data2:
   398  000172  0009               	tblrd		*+
   399  000174  CFF5 FFEE          	movff	tablat,postinc0
   400  000178  50E5               	movf	postdec1,w,c
   401  00017A  50E1               	movf	fsr1l,w,c
   402  00017C  E1FA               	bnz	copy_data2
   403                           
   404                           ; Clear objects allocated to COMRAM (7 bytes)
   405  00017E  EE00  F04C         	lfsr	0,__pbssCOMRAM
   406  000182  0E07               	movlw	7
   407  000184                     clear_0:
   408  000184  6AEE               	clrf	postinc0,c
   409  000186  06E8               	decf	wreg,f,c
   410  000188  E1FD               	bnz	clear_0
   411  00018A                     end_of_initialization:
   412                           	callstack 0
   413  00018A                     __end_of__initialization:
   414                           	callstack 0
   415  00018A  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   416  00018C  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   417  00018E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   418  000190  6EF8               	movwf	tblptru,c
   419  000192  0100               	movlb	0
   420  000194  EF85  F001         	goto	_main	;jump to C main() function
   421                           
   422                           	psect	bssCOMRAM
   423  00004C                     __pbssCOMRAM:
   424                           	callstack 0
   425  00004C                     _unidad:
   426                           	callstack 0
   427  00004C                     	ds	2
   428  00004E                     _decena:
   429                           	callstack 0
   430  00004E                     	ds	2
   431  000050                     _centena:
   432                           	callstack 0
   433  000050                     	ds	2
   434  000052                     _cantidad:
   435                           	callstack 0
   436  000052                     	ds	1
   437                           
   438                           	psect	dataCOMRAM
   439  000001                     __pdataCOMRAM:
   440                           	callstack 0
   441  000001                     _menu_2:
   442                           	callstack 0
   443  000001                     	ds	28
   444  00001D                     _menu_1:
   445                           	callstack 0
   446  00001D                     	ds	28
   447                           
   448                           	psect	dataBANK0
   449  000060                     __pdataBANK0:
   450                           	callstack 0
   451  000060                     _menu_7:
   452                           	callstack 0
   453  000060                     	ds	28
   454  00007C                     _menu_6:
   455                           	callstack 0
   456  00007C                     	ds	28
   457  000098                     _menu_5:
   458                           	callstack 0
   459  000098                     	ds	28
   460  0000B4                     _menu_4:
   461                           	callstack 0
   462  0000B4                     	ds	28
   463  0000D0                     _menu_3:
   464                           	callstack 0
   465  0000D0                     	ds	28
   466                           
   467                           	psect	dataBANK1
   468  000100                     __pdataBANK1:
   469                           	callstack 0
   470  000100                     _error:
   471                           	callstack 0
   472  000100                     	ds	33
   473                           
   474                           	psect	cstackBANK0
   475  0000EC                     __pcstackBANK0:
   476                           	callstack 0
   477  0000EC                     ?___lwdiv:
   478                           	callstack 0
   479  0000EC                     EUSART_enviacadena@cantidad:
   480                           	callstack 0
   481  0000EC                     ___lwdiv@dividend:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x0
   485  0000EC                     	ds	1
   486  0000ED                     EUSART_enviacadena@x:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1
   490  0000ED                     	ds	1
   491  0000EE                     ___lwdiv@divisor:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x2
   495  0000EE                     	ds	2
   496  0000F0                     ___lwdiv@counter:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x4
   500  0000F0                     	ds	1
   501  0000F1                     ___lwdiv@quotient:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x5
   505  0000F1                     	ds	2
   506                           
   507                           	psect	cstackCOMRAM
   508  000039                     __pcstackCOMRAM:
   509                           	callstack 0
   510  000039                     ?i2_strlen:
   511                           	callstack 0
   512  000039                     i2strlen@s:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x0
   516  000039                     	ds	2
   517  00003B                     i2strlen@a:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x2
   521  00003B                     	ds	2
   522  00003D                     i2EUSART_enviacadena@vector:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x4
   526  00003D                     	ds	2
   527  00003F                     i2EUSART_enviacadena@cantidad:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x6
   531  00003F                     	ds	1
   532  000040                     i2EUSART_enviacadena@x:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x7
   536  000040                     	ds	1
   537  000041                     ??_RC_ISR:
   538  000041                     
   539                           ; 1 bytes @ 0x8
   540  000041                     	ds	4
   541  000045                     ?_strlen:
   542                           	callstack 0
   543  000045                     ?___lwmod:
   544                           	callstack 0
   545  000045                     EUSART_enviachar@papa:
   546                           	callstack 0
   547  000045                     ___lwmod@dividend:
   548                           	callstack 0
   549  000045                     strlen@s:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0xC
   553  000045                     	ds	2
   554  000047                     ___lwmod@divisor:
   555                           	callstack 0
   556  000047                     strlen@a:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0xE
   560  000047                     	ds	2
   561  000049                     ___lwmod@counter:
   562                           	callstack 0
   563  000049                     EUSART_enviacadena@vector:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x10
   567  000049                     	ds	1
   568  00004A                     convierte@numero:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x11
   572  00004A                     	ds	1
   573  00004B                     
   574                           ; 1 bytes @ 0x12
   575  00004B                     	ds	1
   576  00004C                     
   577                           ; 1 bytes @ 0x13
   578 ;;
   579 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   580 ;;
   581 ;; *************** function _main *****************
   582 ;; Defined at:
   583 ;;		line 102 in file "maincode.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;		None
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   597 ;;      Params:         0       0       0       0       0       0       0       0       0
   598 ;;      Locals:         0       0       0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0
   600 ;;      Totals:         0       0       0       0       0       0       0       0       0
   601 ;;Total ram usage:        0 bytes
   602 ;; Hardware stack levels required when called:    7
   603 ;; This function calls:
   604 ;;		_EUSART_config
   605 ;;		_EUSART_enviachar
   606 ;;		_convierte
   607 ;;		_init_config
   608 ;;		_strlen
   609 ;;		_vis_menu
   610 ;; This function is called by:
   611 ;;		Startup code after reset
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text0
   616  00030A                     __ptext0:
   617                           	callstack 0
   618  00030A                     _main:
   619                           	callstack 24
   620                           
   621                           ;maincode.c: 103:     init_config();
   622                           
   623                           ;incstack = 0
   624  00030A  EC67  F002         	call	_init_config	;wreg free
   625                           
   626                           ;maincode.c: 104:     EUSART_config();
   627  00030E  EC5F  F002         	call	_EUSART_config	;wreg free
   628                           
   629                           ;maincode.c: 105:     vis_menu();
   630  000312  ECFE  F000         	call	_vis_menu	;wreg free
   631                           
   632                           ; BSR set to: 0
   633                           ;maincode.c: 106:     cantidad = strlen(error);
   634  000316  0E00               	movlw	low _error
   635  000318  6E45               	movwf	strlen@s^0,c
   636  00031A  0E01               	movlw	high _error
   637  00031C  6E46               	movwf	(strlen@s+1)^0,c
   638  00031E  EC14  F002         	call	_strlen	;wreg free
   639  000322  5045               	movf	?_strlen^0,w,c
   640  000324  6E52               	movwf	_cantidad^0,c
   641                           
   642                           ;maincode.c: 107:     convierte(cantidad);
   643  000326  C052  F04A         	movff	_cantidad,convierte@numero
   644  00032A  6A4B               	clrf	(convierte@numero+1)^0,c
   645  00032C  EC4F  F000         	call	_convierte	;wreg free
   646                           
   647                           ; BSR set to: 0
   648                           ;maincode.c: 108:     EUSART_enviachar(centena+0x30);
   649  000330  5050               	movf	_centena^0,w,c
   650  000332  0F30               	addlw	48
   651  000334  EC6D  F002         	call	_EUSART_enviachar
   652                           
   653                           ;maincode.c: 109:     EUSART_enviachar(decena+0x30);
   654  000338  504E               	movf	_decena^0,w,c
   655  00033A  0F30               	addlw	48
   656  00033C  EC6D  F002         	call	_EUSART_enviachar
   657                           
   658                           ;maincode.c: 110:     EUSART_enviachar(unidad+0x30);
   659  000340  504C               	movf	_unidad^0,w,c
   660  000342  0F30               	addlw	48
   661  000344  EC6D  F002         	call	_EUSART_enviachar
   662  000348                     l93:
   663                           
   664                           ;maincode.c: 114:     }
   665  000348  D7FF               	goto	l93
   666  00034A                     __end_of_main:
   667                           	callstack 0
   668                           
   669 ;; *************** function _vis_menu *****************
   670 ;; Defined at:
   671 ;;		line 85 in file "maincode.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 3F/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         0       0       0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    6
   692 ;; This function calls:
   693 ;;		_EUSART_enviacadena
   694 ;;		_EUSART_siguientelinea
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701  0001FC                     __ptext1:
   702                           	callstack 0
   703  0001FC                     _vis_menu:
   704                           	callstack 24
   705                           
   706                           ;maincode.c: 86:     EUSART_enviacadena(menu_1);
   707                           
   708                           ;incstack = 0
   709  0001FC  0E1D               	movlw	low _menu_1
   710  0001FE  6E49               	movwf	EUSART_enviacadena@vector^0,c
   711  000200  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   712  000202  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   713                           
   714                           ; BSR set to: 0
   715                           ;maincode.c: 87:     EUSART_siguientelinea();
   716  000206  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   717                           
   718                           ; BSR set to: 0
   719                           ;maincode.c: 88:     EUSART_enviacadena(menu_2);
   720  00020A  0E01               	movlw	low _menu_2
   721  00020C  6E49               	movwf	EUSART_enviacadena@vector^0,c
   722  00020E  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   723  000210  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   724                           
   725                           ;maincode.c: 89:     EUSART_siguientelinea();
   726  000214  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   727                           
   728                           ; BSR set to: 0
   729                           ;maincode.c: 90:     EUSART_enviacadena(menu_3);
   730  000218  0ED0               	movlw	low _menu_3
   731  00021A  6E49               	movwf	EUSART_enviacadena@vector^0,c
   732  00021C  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   733  00021E  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   734                           
   735                           ; BSR set to: 0
   736                           ;maincode.c: 91:     EUSART_siguientelinea();
   737  000222  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   738                           
   739                           ;maincode.c: 92:     EUSART_enviacadena(menu_4);
   740  000226  0EB4               	movlw	low _menu_4
   741  000228  6E49               	movwf	EUSART_enviacadena@vector^0,c
   742  00022A  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   743  00022C  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   744                           
   745                           ; BSR set to: 0
   746                           ;maincode.c: 93:     EUSART_siguientelinea();
   747  000230  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   748                           
   749                           ; BSR set to: 0
   750                           ;maincode.c: 94:     EUSART_enviacadena(menu_5);
   751  000234  0E98               	movlw	low _menu_5
   752  000236  6E49               	movwf	EUSART_enviacadena@vector^0,c
   753  000238  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   754  00023A  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   755                           
   756                           ;maincode.c: 95:     EUSART_siguientelinea();
   757  00023E  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   758                           
   759                           ; BSR set to: 0
   760                           ;maincode.c: 96:     EUSART_enviacadena(menu_6);
   761  000242  0E7C               	movlw	low _menu_6
   762  000244  6E49               	movwf	EUSART_enviacadena@vector^0,c
   763  000246  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   764  000248  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   765                           
   766                           ; BSR set to: 0
   767                           ;maincode.c: 97:     EUSART_siguientelinea();
   768  00024C  EC4D  F002         	call	_EUSART_siguientelinea	;wreg free
   769                           
   770                           ;maincode.c: 98:     EUSART_enviacadena(menu_7);
   771  000250  0E60               	movlw	low _menu_7
   772  000252  6E49               	movwf	EUSART_enviacadena@vector^0,c
   773  000254  6A4A               	clrf	(EUSART_enviacadena@vector+1)^0,c
   774  000256  ECE0  F001         	call	_EUSART_enviacadena	;wreg free
   775                           
   776                           ; BSR set to: 0
   777                           ;maincode.c: 99:     EUSART_siguientelinea();
   778  00025A  EF4D  F002         	goto	_EUSART_siguientelinea	;wreg free
   779  00025E                     __end_of_vis_menu:
   780                           	callstack 0
   781                           
   782 ;; *************** function _EUSART_siguientelinea *****************
   783 ;; Defined at:
   784 ;;		line 57 in file "maincode.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2
   793 ;; Tracked objects:
   794 ;;		On entry : 3F/0
   795 ;;		On exit  : 3F/0
   796 ;;		Unchanged: 3F/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   798 ;;      Params:         0       0       0       0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    4
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_vis_menu
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text2
   813  00049A                     __ptext2:
   814                           	callstack 0
   815  00049A                     _EUSART_siguientelinea:
   816                           	callstack 25
   817                           
   818                           ; BSR set to: 0
   819                           ;maincode.c: 58:     TXREG = 0x0A;
   820                           
   821                           ; BSR set to: 0
   822                           ;incstack = 0
   823  00049A  0E0A               	movlw	10
   824  00049C  6EAD               	movwf	173,c	;volatile
   825  00049E                     l64:
   826                           
   827                           ; BSR set to: 0
   828  00049E  A2AC               	btfss	172,1,c	;volatile
   829  0004A0  D7FE               	goto	l64
   830                           
   831                           ; BSR set to: 0
   832                           ;maincode.c: 60:     TXREG = 0x0D;
   833  0004A2  0E0D               	movlw	13
   834  0004A4  6EAD               	movwf	173,c	;volatile
   835  0004A6                     l67:
   836                           
   837                           ; BSR set to: 0
   838  0004A6  B2AC               	btfsc	172,1,c	;volatile
   839                           
   840                           ; BSR set to: 0
   841  0004A8  0012               	return		;funcret
   842  0004AA  D7FD               	goto	l67
   843  0004AC                     __end_of_EUSART_siguientelinea:
   844                           	callstack 0
   845                           
   846 ;; *************** function _EUSART_enviacadena *****************
   847 ;; Defined at:
   848 ;;		line 71 in file "maincode.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  vector          2   16[COMRAM] PTR const unsigned char 
   851 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
   852 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  x               1    1[BANK0 ] unsigned char 
   855 ;;  cantidad        1    0[BANK0 ] unsigned char 
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 3F/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         2       0       0       0       0       0       0       0       0
   866 ;;      Locals:         0       2       0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0
   868 ;;      Totals:         2       2       0       0       0       0       0       0       0
   869 ;;Total ram usage:        4 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    5
   872 ;; This function calls:
   873 ;;		_strlen
   874 ;; This function is called by:
   875 ;;		_vis_menu
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text3
   880  0003C0                     __ptext3:
   881                           	callstack 0
   882  0003C0                     _EUSART_enviacadena:
   883                           	callstack 24
   884                           
   885                           ;maincode.c: 73:     cantidad = strlen(vector);
   886                           
   887                           ; BSR set to: 0
   888                           ;incstack = 0
   889  0003C0  C049  F045         	movff	EUSART_enviacadena@vector,strlen@s
   890  0003C4  C04A  F046         	movff	EUSART_enviacadena@vector+1,strlen@s+1
   891  0003C8  EC14  F002         	call	_strlen	;wreg free
   892  0003CC  5045               	movf	?_strlen^0,w,c
   893  0003CE  0100               	movlb	0	; () banked
   894  0003D0  6FEC               	movwf	EUSART_enviacadena@cantidad& (0+255),b
   895                           
   896                           ; BSR set to: 0
   897                           ;maincode.c: 74:         for (unsigned char x=0;x<cantidad;x++){
   898  0003D2  6BED               	clrf	EUSART_enviacadena@x& (0+255),b
   899  0003D4  D00C               	goto	l1185
   900  0003D6                     l1181:
   901                           
   902                           ; BSR set to: 0
   903                           ;maincode.c: 75:             TXREG = vector[x];
   904  0003D6  51ED               	movf	EUSART_enviacadena@x& (0+255),w,b
   905  0003D8  2449               	addwf	EUSART_enviacadena@vector^0,w,c
   906  0003DA  6ED9               	movwf	fsr2l,c
   907  0003DC  0E00               	movlw	0
   908  0003DE  204A               	addwfc	(EUSART_enviacadena@vector+1)^0,w,c
   909  0003E0  6EDA               	movwf	fsr2h,c
   910  0003E2  50DF               	movf	indf2,w,c
   911  0003E4  6EAD               	movwf	173,c	;volatile
   912  0003E6                     l75:
   913  0003E6  A2AC               	btfss	172,1,c	;volatile
   914  0003E8  D7FE               	goto	l75
   915                           
   916                           ;maincode.c: 77:         }
   917  0003EA  0100               	movlb	0	; () banked
   918  0003EC  2BED               	incf	EUSART_enviacadena@x& (0+255),f,b
   919  0003EE                     l1185:
   920                           
   921                           ; BSR set to: 0
   922  0003EE  51EC               	movf	EUSART_enviacadena@cantidad& (0+255),w,b
   923  0003F0  5DED               	subwf	EUSART_enviacadena@x& (0+255),w,b
   924  0003F2  E3F1               	bnc	l1181
   925                           
   926                           ; BSR set to: 0
   927  0003F4  0012               	return		;funcret
   928  0003F6                     __end_of_EUSART_enviacadena:
   929                           	callstack 0
   930                           
   931 ;; *************** function _strlen *****************
   932 ;; Defined at:
   933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  s               2   12[COMRAM] PTR const unsigned char 
   936 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
   937 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  a               2   14[COMRAM] PTR const unsigned char 
   940 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
   941 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2   12[COMRAM] unsigned int 
   944 ;; Registers used:
   945 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   951 ;;      Params:         2       0       0       0       0       0       0       0       0
   952 ;;      Locals:         2       0       0       0       0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0
   954 ;;      Totals:         4       0       0       0       0       0       0       0       0
   955 ;;Total ram usage:        4 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    4
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_EUSART_enviacadena
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text4
   967  000428                     __ptext4:
   968                           	callstack 0
   969  000428                     _strlen:
   970                           	callstack 24
   971                           
   972                           ; BSR set to: 0
   973                           ;incstack = 0
   974  000428  C045  F047         	movff	strlen@s,strlen@a
   975  00042C  C046  F048         	movff	strlen@s+1,strlen@a+1
   976  000430  D002               	goto	l1159
   977  000432                     l1157:
   978  000432  4A45               	infsnz	strlen@s^0,f,c
   979  000434  2A46               	incf	(strlen@s+1)^0,f,c
   980  000436                     l1159:
   981  000436  C045  FFD9         	movff	strlen@s,fsr2l
   982  00043A  C046  FFDA         	movff	strlen@s+1,fsr2h
   983  00043E  50DF               	movf	indf2,w,c
   984  000440  E1F8               	bnz	l1157
   985  000442  5047               	movf	strlen@a^0,w,c
   986  000444  5C45               	subwf	strlen@s^0,w,c
   987  000446  6E45               	movwf	?_strlen^0,c
   988  000448  5048               	movf	(strlen@a+1)^0,w,c
   989  00044A  5846               	subwfb	(strlen@s+1)^0,w,c
   990  00044C  6E46               	movwf	(?_strlen+1)^0,c
   991  00044E  0012               	return		;funcret
   992  000450                     __end_of_strlen:
   993                           	callstack 0
   994                           
   995 ;; *************** function _init_config *****************
   996 ;; Defined at:
   997 ;;		line 40 in file "maincode.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		None
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1011 ;;      Params:         0       0       0       0       0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; Hardware stack levels required when called:    4
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026  0004CE                     __ptext5:
  1027                           	callstack 0
  1028  0004CE                     _init_config:
  1029                           	callstack 26
  1030                           
  1031                           ;maincode.c: 41:     TRISDbits.RD6 = 0;
  1032                           
  1033                           ;incstack = 0
  1034  0004CE  9C95               	bcf	149,6,c	;volatile
  1035                           
  1036                           ;maincode.c: 42:     TRISDbits.RD7 = 0;
  1037  0004D0  9E95               	bcf	149,7,c	;volatile
  1038                           
  1039                           ;maincode.c: 43:     INTCONbits.GIE = 1;
  1040  0004D2  8EF2               	bsf	242,7,c	;volatile
  1041                           
  1042                           ;maincode.c: 44:     INTCONbits.PEIE = 1;
  1043  0004D4  8CF2               	bsf	242,6,c	;volatile
  1044                           
  1045                           ;maincode.c: 45:     PIE1bits.RCIE = 1;
  1046  0004D6  8A9D               	bsf	157,5,c	;volatile
  1047  0004D8  0012               	return		;funcret
  1048  0004DA                     __end_of_init_config:
  1049                           	callstack 0
  1050                           
  1051 ;; *************** function _convierte *****************
  1052 ;; Defined at:
  1053 ;;		line 32 in file "maincode.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  numero          2   17[COMRAM] unsigned int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 3F/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1067 ;;      Params:         2       0       0       0       0       0       0       0       0
  1068 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1070 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1071 ;;Total ram usage:        2 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		___lwdiv
  1076 ;;		___lwmod
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text6
  1083  00009E                     __ptext6:
  1084                           	callstack 0
  1085  00009E                     _convierte:
  1086                           	callstack 25
  1087                           
  1088                           ;maincode.c: 33:     millar = numero /1000;
  1089                           
  1090                           ;incstack = 0
  1091  00009E  C04A  F0EC         	movff	convierte@numero,___lwdiv@dividend
  1092  0000A2  C04B  F0ED         	movff	convierte@numero+1,___lwdiv@dividend+1
  1093  0000A6  0E03               	movlw	3
  1094  0000A8  0100               	movlb	0	; () banked
  1095  0000AA  6FEF               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1096  0000AC  0EE8               	movlw	232
  1097  0000AE  6FEE               	movwf	___lwdiv@divisor& (0+255),b
  1098  0000B0  EC60  F001         	call	___lwdiv	;wreg free
  1099                           
  1100                           ;maincode.c: 34:     centena = (numero % 1000) / 100;
  1101  0000B4  0E03               	movlw	3
  1102  0000B6  6E48               	movwf	(___lwmod@divisor+1)^0,c
  1103  0000B8  0EE8               	movlw	232
  1104  0000BA  6E47               	movwf	___lwmod@divisor^0,c
  1105  0000BC  D825               	call	PL2	;call to abstracted procedure
  1106  0000BE  ECA5  F001         	call	___lwmod	;wreg free
  1107  0000C2  D827               	call	PL4	;call to abstracted procedure
  1108  0000C4  0E64               	movlw	100
  1109  0000C6  6FEE               	movwf	___lwdiv@divisor& (0+255),b
  1110  0000C8  EC60  F001         	call	___lwdiv	;wreg free
  1111  0000CC  C0EC  F050         	movff	?___lwdiv,_centena
  1112  0000D0  C0ED  F051         	movff	?___lwdiv+1,_centena+1
  1113                           
  1114                           ;maincode.c: 35:     decena = (numero % 100) / 10;
  1115  0000D4  6A48               	clrf	(___lwmod@divisor+1)^0,c
  1116  0000D6  0E64               	movlw	100
  1117  0000D8  6E47               	movwf	___lwmod@divisor^0,c
  1118  0000DA  D816               	call	PL2	;call to abstracted procedure
  1119  0000DC  ECA5  F001         	call	___lwmod	;wreg free
  1120  0000E0  D818               	call	PL4	;call to abstracted procedure
  1121  0000E2  0E0A               	movlw	10
  1122  0000E4  6FEE               	movwf	___lwdiv@divisor& (0+255),b
  1123  0000E6  EC60  F001         	call	___lwdiv	;wreg free
  1124  0000EA  C0EC  F04E         	movff	?___lwdiv,_decena
  1125  0000EE  C0ED  F04F         	movff	?___lwdiv+1,_decena+1
  1126                           
  1127                           ;maincode.c: 36:     unidad = numero % 10;
  1128  0000F2  D80A               	call	PL2	;call to abstracted procedure
  1129  0000F4  6A48               	clrf	(___lwmod@divisor+1)^0,c
  1130  0000F6  0E0A               	movlw	10
  1131  0000F8  6E47               	movwf	___lwmod@divisor^0,c
  1132  0000FA  ECA5  F001         	call	___lwmod	;wreg free
  1133  0000FE  C045  F04C         	movff	?___lwmod,_unidad
  1134  000102  C046  F04D         	movff	?___lwmod+1,_unidad+1
  1135                           
  1136                           ; BSR set to: 0
  1137  000106  0012               	return		;funcret
  1138  000108                     __end_of_convierte:
  1139                           	callstack 0
  1140  000108                     PL2:
  1141                           	callstack 25
  1142  000108  C04A  F045         	movff	convierte@numero,___lwmod@dividend
  1143  00010C  C04B  F046         	movff	convierte@numero+1,___lwmod@dividend+1
  1144  000110  0012               	return	
  1145  000112                     __end_ofPL2:
  1146                           	callstack 0
  1147  000112                     PL4:
  1148                           	callstack 25
  1149  000112  C045  F0EC         	movff	?___lwmod,___lwdiv@dividend
  1150  000116  C046  F0ED         	movff	?___lwmod+1,___lwdiv@dividend+1
  1151  00011A  6BEF               	clrf	(___lwdiv@divisor+1)& (0+255),b
  1152  00011C  0012               	return	
  1153  00011E                     __end_ofPL4:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function ___lwmod *****************
  1157 ;; Defined at:
  1158 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  dividend        2   12[COMRAM] unsigned int 
  1161 ;;  divisor         2   14[COMRAM] unsigned int 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  counter         1   16[COMRAM] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2   12[COMRAM] unsigned int 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 3F/0
  1170 ;;		On exit  : 3F/0
  1171 ;;		Unchanged: 3F/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         4       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        5 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_convierte
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text7
  1188  00034A                     __ptext7:
  1189                           	callstack 0
  1190  00034A                     ___lwmod:
  1191                           	callstack 25
  1192                           
  1193                           ; BSR set to: 0
  1194                           
  1195                           ; BSR set to: 0
  1196                           ;incstack = 0
  1197  00034A  5047               	movf	___lwmod@divisor^0,w,c
  1198  00034C  1048               	iorwf	(___lwmod@divisor+1)^0,w,c
  1199  00034E  E017               	bz	l613
  1200                           
  1201                           ; BSR set to: 0
  1202  000350  0E01               	movlw	1
  1203  000352  6E49               	movwf	___lwmod@counter^0,c
  1204  000354  D004               	goto	l1037
  1205  000356                     l1035:
  1206                           
  1207                           ; BSR set to: 0
  1208  000356  90D8               	bcf	status,0,c
  1209  000358  3647               	rlcf	___lwmod@divisor^0,f,c
  1210  00035A  3648               	rlcf	(___lwmod@divisor+1)^0,f,c
  1211  00035C  2A49               	incf	___lwmod@counter^0,f,c
  1212  00035E                     l1037:
  1213                           
  1214                           ; BSR set to: 0
  1215  00035E  AE48               	btfss	(___lwmod@divisor+1)^0,7,c
  1216  000360  D7FA               	goto	l1035
  1217  000362                     u280:
  1218                           
  1219                           ; BSR set to: 0
  1220  000362  5047               	movf	___lwmod@divisor^0,w,c
  1221  000364  5C45               	subwf	___lwmod@dividend^0,w,c
  1222  000366  5048               	movf	(___lwmod@divisor+1)^0,w,c
  1223  000368  5846               	subwfb	(___lwmod@dividend+1)^0,w,c
  1224  00036A  E304               	bnc	l1043
  1225                           
  1226                           ; BSR set to: 0
  1227  00036C  5047               	movf	___lwmod@divisor^0,w,c
  1228  00036E  5E45               	subwf	___lwmod@dividend^0,f,c
  1229  000370  5048               	movf	(___lwmod@divisor+1)^0,w,c
  1230  000372  5A46               	subwfb	(___lwmod@dividend+1)^0,f,c
  1231  000374                     l1043:
  1232                           
  1233                           ; BSR set to: 0
  1234  000374  90D8               	bcf	status,0,c
  1235  000376  3248               	rrcf	(___lwmod@divisor+1)^0,f,c
  1236  000378  3247               	rrcf	___lwmod@divisor^0,f,c
  1237                           
  1238                           ; BSR set to: 0
  1239  00037A  2E49               	decfsz	___lwmod@counter^0,f,c
  1240  00037C  D7F2               	goto	u280
  1241  00037E                     l613:
  1242                           
  1243                           ; BSR set to: 0
  1244  00037E  C045  F045         	movff	___lwmod@dividend,?___lwmod
  1245  000382  C046  F046         	movff	___lwmod@dividend+1,?___lwmod+1
  1246                           
  1247                           ; BSR set to: 0
  1248  000386  0012               	return		;funcret
  1249  000388                     __end_of___lwmod:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function ___lwdiv *****************
  1253 ;; Defined at:
  1254 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  dividend        2    0[BANK0 ] unsigned int 
  1257 ;;  divisor         2    2[BANK0 ] unsigned int 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  quotient        2    5[BANK0 ] unsigned int 
  1260 ;;  counter         1    4[BANK0 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[BANK0 ] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 3F/0
  1267 ;;		On exit  : 3F/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1270 ;;      Params:         0       4       0       0       0       0       0       0       0
  1271 ;;      Locals:         0       3       0       0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1273 ;;      Totals:         0       7       0       0       0       0       0       0       0
  1274 ;;Total ram usage:        7 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_convierte
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text8
  1285  0002C0                     __ptext8:
  1286                           	callstack 0
  1287  0002C0                     ___lwdiv:
  1288                           	callstack 25
  1289                           
  1290                           ; BSR set to: 0
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;incstack = 0
  1294  0002C0  6BF1               	clrf	___lwdiv@quotient& (0+255),b
  1295  0002C2  6BF2               	clrf	(___lwdiv@quotient+1)& (0+255),b
  1296                           
  1297                           ; BSR set to: 0
  1298  0002C4  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  1299  0002C6  11EF               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1300  0002C8  E01B               	bz	l603
  1301                           
  1302                           ; BSR set to: 0
  1303  0002CA  0E01               	movlw	1
  1304  0002CC  6FF0               	movwf	___lwdiv@counter& (0+255),b
  1305  0002CE  D004               	goto	l1195
  1306  0002D0                     l1193:
  1307                           
  1308                           ; BSR set to: 0
  1309  0002D0  90D8               	bcf	status,0,c
  1310  0002D2  37EE               	rlcf	___lwdiv@divisor& (0+255),f,b
  1311  0002D4  37EF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1312  0002D6  2BF0               	incf	___lwdiv@counter& (0+255),f,b
  1313  0002D8                     l1195:
  1314                           
  1315                           ; BSR set to: 0
  1316  0002D8  AFEF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  1317  0002DA  D7FA               	goto	l1193
  1318  0002DC                     u400:
  1319                           
  1320                           ; BSR set to: 0
  1321  0002DC  90D8               	bcf	status,0,c
  1322  0002DE  37F1               	rlcf	___lwdiv@quotient& (0+255),f,b
  1323  0002E0  37F2               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1324                           
  1325                           ; BSR set to: 0
  1326  0002E2  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  1327  0002E4  5DEC               	subwf	___lwdiv@dividend& (0+255),w,b
  1328  0002E6  51EF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1329  0002E8  59ED               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1330  0002EA  E305               	bnc	l1205
  1331                           
  1332                           ; BSR set to: 0
  1333  0002EC  51EE               	movf	___lwdiv@divisor& (0+255),w,b
  1334  0002EE  5FEC               	subwf	___lwdiv@dividend& (0+255),f,b
  1335  0002F0  51EF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1336  0002F2  5BED               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1337                           
  1338                           ; BSR set to: 0
  1339  0002F4  81F1               	bsf	___lwdiv@quotient& (0+255),0,b
  1340  0002F6                     l1205:
  1341                           
  1342                           ; BSR set to: 0
  1343  0002F6  90D8               	bcf	status,0,c
  1344  0002F8  33EF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1345  0002FA  33EE               	rrcf	___lwdiv@divisor& (0+255),f,b
  1346                           
  1347                           ; BSR set to: 0
  1348  0002FC  2FF0               	decfsz	___lwdiv@counter& (0+255),f,b
  1349  0002FE  D7EE               	goto	u400
  1350  000300                     l603:
  1351                           
  1352                           ; BSR set to: 0
  1353  000300  C0F1  F0EC         	movff	___lwdiv@quotient,?___lwdiv
  1354  000304  C0F2  F0ED         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1355                           
  1356                           ; BSR set to: 0
  1357  000308  0012               	return		;funcret
  1358  00030A                     __end_of___lwdiv:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _EUSART_enviachar *****************
  1362 ;; Defined at:
  1363 ;;		line 80 in file "maincode.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  papa            1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  papa            1   12[COMRAM] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1380 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1381 ;;Total ram usage:        1 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    4
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text9
  1392  0004DA                     __ptext9:
  1393                           	callstack 0
  1394  0004DA                     _EUSART_enviachar:
  1395                           	callstack 26
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;incstack = 0
  1399                           ;EUSART_enviachar@papa stored from wreg
  1400  0004DA  6E45               	movwf	EUSART_enviachar@papa^0,c
  1401                           
  1402                           ;maincode.c: 81:     TXREG = papa;
  1403  0004DC  C045  FFAD         	movff	EUSART_enviachar@papa,4013	;volatile
  1404  0004E0                     l82:
  1405  0004E0  B2AC               	btfsc	172,1,c	;volatile
  1406  0004E2  0012               	return		;funcret
  1407  0004E4  D7FD               	goto	l82
  1408  0004E6                     __end_of_EUSART_enviachar:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _EUSART_config *****************
  1412 ;; Defined at:
  1413 ;;		line 48 in file "maincode.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    4
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text10
  1442  0004BE                     __ptext10:
  1443                           	callstack 0
  1444  0004BE                     _EUSART_config:
  1445                           	callstack 26
  1446                           
  1447                           ;maincode.c: 49:     SPBRGH = 0;
  1448                           
  1449                           ;incstack = 0
  1450  0004BE  6AB0               	clrf	176,c	;volatile
  1451                           
  1452                           ;maincode.c: 50:     SPBRG = 21;
  1453  0004C0  0E15               	movlw	21
  1454  0004C2  6EAF               	movwf	175,c	;volatile
  1455                           
  1456                           ;maincode.c: 51:     TRISCbits.RC6 = 0;
  1457  0004C4  9C94               	bcf	148,6,c	;volatile
  1458                           
  1459                           ;maincode.c: 52:     RCSTAbits.SPEN = 1;
  1460  0004C6  8EAB               	bsf	171,7,c	;volatile
  1461                           
  1462                           ;maincode.c: 53:     TXSTAbits.TXEN = 1;
  1463  0004C8  8AAC               	bsf	172,5,c	;volatile
  1464                           
  1465                           ;maincode.c: 54:     RCSTAbits.CREN = 1;
  1466  0004CA  88AB               	bsf	171,4,c	;volatile
  1467  0004CC  0C15               	retlw	21	;funcret
  1468  0004CE                     __end_of_EUSART_config:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _RC_ISR *****************
  1472 ;; Defined at:
  1473 ;;		line 117 in file "maincode.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1487 ;;      Params:         0       0       0       0       0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1489 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1490 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1491 ;;Total ram usage:        4 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		i2_EUSART_enviacadena
  1496 ;;		i2_EUSART_siguientelinea
  1497 ;;		i2_vis_menu
  1498 ;; This function is called by:
  1499 ;;		Interrupt level 2
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	intcode
  1504  000008                     __pintcode:
  1505                           	callstack 0
  1506  000008                     _RC_ISR:
  1507                           	callstack 24
  1508                           
  1509                           ;incstack = 0
  1510  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1511  00000A  EDCC  F000         	call	int_func,f	;refresh shadow registers
  1512                           
  1513                           	psect	intcode_body
  1514  000198                     __pintcode_body:
  1515                           	callstack 24
  1516  000198                     int_func:
  1517                           	callstack 24
  1518  000198  0006               	pop		; remove dummy address from shadow register refresh
  1519  00019A  CFD9 F043          	movff	fsr2l,??_RC_ISR+2
  1520  00019E  CFDA F044          	movff	fsr2h,??_RC_ISR+3
  1521                           
  1522                           ;maincode.c: 118:     PIR1bits.RCIF = 0;
  1523  0001A2  9A9E               	bcf	158,5,c	;volatile
  1524                           
  1525                           ;maincode.c: 119:     switch(RCREG){
  1526  0001A4  D014               	goto	i2l1287
  1527  0001A6                     i2l102:
  1528                           
  1529                           ;maincode.c: 121:             LATDbits.LD6 = 1;
  1530  0001A6  8C8C               	bsf	140,6,c	;volatile
  1531                           
  1532                           ;maincode.c: 122:             break;
  1533  0001A8  D023               	goto	i2l109
  1534  0001AA                     i2l104:
  1535                           
  1536                           ;maincode.c: 124:             LATDbits.LD6 = 0;
  1537  0001AA  9C8C               	bcf	140,6,c	;volatile
  1538                           
  1539                           ;maincode.c: 125:             break;
  1540  0001AC  D021               	goto	i2l109
  1541  0001AE                     i2l105:
  1542                           
  1543                           ;maincode.c: 127:             LATDbits.LD7 = 1;
  1544  0001AE  8E8C               	bsf	140,7,c	;volatile
  1545                           
  1546                           ;maincode.c: 128:             break;
  1547  0001B0  D01F               	goto	i2l109
  1548  0001B2                     i2l106:
  1549                           
  1550                           ;maincode.c: 130:             LATDbits.LD7 = 0;
  1551  0001B2  9E8C               	bcf	140,7,c	;volatile
  1552                           
  1553                           ;maincode.c: 131:             break;
  1554  0001B4  D01D               	goto	i2l109
  1555  0001B6                     i2l1281:
  1556                           
  1557                           ;maincode.c: 133:             vis_menu();
  1558  0001B6  EC2F  F001         	call	i2_vis_menu	;wreg free
  1559                           
  1560                           ;maincode.c: 134:             break;
  1561  0001BA  D01A               	goto	i2l109
  1562  0001BC                     i2l1283:
  1563                           
  1564                           ;maincode.c: 136:             EUSART_enviacadena(error);
  1565  0001BC  0E00               	movlw	low _error
  1566  0001BE  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1567  0001C0  0E01               	movlw	high _error
  1568  0001C2  6E3E               	movwf	(i2EUSART_enviacadena@vector+1)^0,c
  1569  0001C4  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1570                           
  1571                           ;maincode.c: 137:             EUSART_siguientelinea();
  1572  0001C8  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1573                           
  1574                           ;maincode.c: 138:     }
  1575  0001CC  D011               	goto	i2l109
  1576  0001CE                     i2l1287:
  1577  0001CE  50AE               	movf	174,w,c	;volatile
  1578  0001D0  6E41               	movwf	??_RC_ISR^0,c
  1579  0001D2  6A42               	clrf	(??_RC_ISR+1)^0,c
  1580                           
  1581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1582                           ; Switch size 1, requested type "space"
  1583                           ; Number of cases is 1, Range of values is 0 to 0
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte            4     3 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588  0001D4  5042               	movf	(??_RC_ISR+1)^0,w,c
  1589  0001D6  E1F2               	bnz	i2l1283
  1590                           
  1591                           ; Switch size 1, requested type "space"
  1592                           ; Number of cases is 5, Range of values is 49 to 109
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte           16     9 (average)
  1596                           ;	Chosen strategy is simple_byte
  1597  0001D8  5041               	movf	??_RC_ISR^0,w,c
  1598  0001DA  0A31               	xorlw	49	; case 49
  1599  0001DC  E0E4               	bz	i2l102
  1600  0001DE  0A03               	xorlw	3	; case 50
  1601  0001E0  E0E4               	bz	i2l104
  1602  0001E2  0A01               	xorlw	1	; case 51
  1603  0001E4  E0E4               	bz	i2l105
  1604  0001E6  0A07               	xorlw	7	; case 52
  1605  0001E8  E0E4               	bz	i2l106
  1606  0001EA  0A59               	xorlw	89	; case 109
  1607  0001EC  E0E4               	bz	i2l1281
  1608  0001EE  D7E6               	goto	i2l1283
  1609  0001F0                     i2l109:
  1610  0001F0  C044  FFDA         	movff	??_RC_ISR+3,fsr2h
  1611  0001F4  C043  FFD9         	movff	??_RC_ISR+2,fsr2l
  1612  0001F8  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1613  0001FA  0011               	retfie		f
  1614  0001FC                     __end_of_RC_ISR:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function i2_vis_menu *****************
  1618 ;; Defined at:
  1619 ;;		line 85 in file "maincode.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;		None
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         0       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        0 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    2
  1640 ;; This function calls:
  1641 ;;		i2_EUSART_enviacadena
  1642 ;;		i2_EUSART_siguientelinea
  1643 ;; This function is called by:
  1644 ;;		_RC_ISR
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text12
  1649  00025E                     __ptext12:
  1650                           	callstack 0
  1651  00025E                     i2_vis_menu:
  1652                           	callstack 24
  1653                           
  1654                           ;maincode.c: 86:     EUSART_enviacadena(menu_1);
  1655                           
  1656                           ;incstack = 0
  1657  00025E  0E1D               	movlw	low _menu_1
  1658  000260  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1659  000262  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1660  000264  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1661                           
  1662                           ;maincode.c: 87:     EUSART_siguientelinea();
  1663  000268  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1664                           
  1665                           ;maincode.c: 88:     EUSART_enviacadena(menu_2);
  1666  00026C  0E01               	movlw	low _menu_2
  1667  00026E  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1668  000270  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1669  000272  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1670                           
  1671                           ;maincode.c: 89:     EUSART_siguientelinea();
  1672  000276  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1673                           
  1674                           ;maincode.c: 90:     EUSART_enviacadena(menu_3);
  1675  00027A  0ED0               	movlw	low _menu_3
  1676  00027C  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1677  00027E  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1678  000280  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1679                           
  1680                           ;maincode.c: 91:     EUSART_siguientelinea();
  1681  000284  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1682                           
  1683                           ;maincode.c: 92:     EUSART_enviacadena(menu_4);
  1684  000288  0EB4               	movlw	low _menu_4
  1685  00028A  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1686  00028C  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1687  00028E  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1688                           
  1689                           ;maincode.c: 93:     EUSART_siguientelinea();
  1690  000292  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1691                           
  1692                           ;maincode.c: 94:     EUSART_enviacadena(menu_5);
  1693  000296  0E98               	movlw	low _menu_5
  1694  000298  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1695  00029A  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1696  00029C  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1697                           
  1698                           ;maincode.c: 95:     EUSART_siguientelinea();
  1699  0002A0  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1700                           
  1701                           ;maincode.c: 96:     EUSART_enviacadena(menu_6);
  1702  0002A4  0E7C               	movlw	low _menu_6
  1703  0002A6  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1704  0002A8  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1705  0002AA  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1706                           
  1707                           ;maincode.c: 97:     EUSART_siguientelinea();
  1708  0002AE  EC56  F002         	call	i2_EUSART_siguientelinea	;wreg free
  1709                           
  1710                           ;maincode.c: 98:     EUSART_enviacadena(menu_7);
  1711  0002B2  0E60               	movlw	low _menu_7
  1712  0002B4  6E3D               	movwf	i2EUSART_enviacadena@vector^0,c
  1713  0002B6  6A3E               	clrf	(i2EUSART_enviacadena@vector+1)^0,c
  1714  0002B8  ECFB  F001         	call	i2_EUSART_enviacadena	;wreg free
  1715                           
  1716                           ;maincode.c: 99:     EUSART_siguientelinea();
  1717  0002BC  EF56  F002         	goto	i2_EUSART_siguientelinea	;wreg free
  1718  0002C0                     __end_ofi2_vis_menu:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function i2_EUSART_siguientelinea *****************
  1722 ;; Defined at:
  1723 ;;		line 57 in file "maincode.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_RC_ISR
  1747 ;;		i2_vis_menu
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text13
  1752  0004AC                     __ptext13:
  1753                           	callstack 0
  1754  0004AC                     i2_EUSART_siguientelinea:
  1755                           	callstack 25
  1756                           
  1757                           ;maincode.c: 58:     TXREG = 0x0A;
  1758                           
  1759                           ;incstack = 0
  1760  0004AC  0E0A               	movlw	10
  1761  0004AE  6EAD               	movwf	173,c	;volatile
  1762  0004B0                     i2l64:
  1763  0004B0  A2AC               	btfss	172,1,c	;volatile
  1764  0004B2  D7FE               	goto	i2l64
  1765                           
  1766                           ;maincode.c: 60:     TXREG = 0x0D;
  1767  0004B4  0E0D               	movlw	13
  1768  0004B6  6EAD               	movwf	173,c	;volatile
  1769  0004B8                     i2l67:
  1770  0004B8  B2AC               	btfsc	172,1,c	;volatile
  1771  0004BA  0012               	return		;funcret
  1772  0004BC  D7FD               	goto	i2l67
  1773  0004BE                     __end_ofi2_EUSART_siguientelinea:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function i2_EUSART_enviacadena *****************
  1777 ;; Defined at:
  1778 ;;		line 71 in file "maincode.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  vector          2    4[COMRAM] PTR const unsigned char 
  1781 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
  1782 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  x               1    7[COMRAM] unsigned char 
  1785 ;;  cantidad        1    6[COMRAM] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1795 ;;      Params:         2       0       0       0       0       0       0       0       0
  1796 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1798 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1799 ;;Total ram usage:        4 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    1
  1802 ;; This function calls:
  1803 ;;		i2_strlen
  1804 ;; This function is called by:
  1805 ;;		_RC_ISR
  1806 ;;		i2_vis_menu
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text14
  1811  0003F6                     __ptext14:
  1812                           	callstack 0
  1813  0003F6                     i2_EUSART_enviacadena:
  1814                           	callstack 24
  1815                           
  1816                           ;maincode.c: 73:     cantidad = strlen(vector);
  1817                           
  1818                           ;incstack = 0
  1819  0003F6  C03D  F039         	movff	i2EUSART_enviacadena@vector,i2strlen@s
  1820  0003FA  C03E  F03A         	movff	i2EUSART_enviacadena@vector+1,i2strlen@s+1
  1821  0003FE  EC28  F002         	call	i2_strlen	;wreg free
  1822  000402  5039               	movf	?i2_strlen^0,w,c
  1823  000404  6E3F               	movwf	i2EUSART_enviacadena@cantidad^0,c
  1824                           
  1825                           ;maincode.c: 74:         for (unsigned char x=0;x<cantidad;x++){
  1826  000406  6A40               	clrf	i2EUSART_enviacadena@x^0,c
  1827  000408  D00B               	goto	i2l1219
  1828  00040A                     i2l1215:
  1829                           
  1830                           ;maincode.c: 75:             TXREG = vector[x];
  1831  00040A  5040               	movf	i2EUSART_enviacadena@x^0,w,c
  1832  00040C  243D               	addwf	i2EUSART_enviacadena@vector^0,w,c
  1833  00040E  6ED9               	movwf	fsr2l,c
  1834  000410  0E00               	movlw	0
  1835  000412  203E               	addwfc	(i2EUSART_enviacadena@vector+1)^0,w,c
  1836  000414  6EDA               	movwf	fsr2h,c
  1837  000416  50DF               	movf	indf2,w,c
  1838  000418  6EAD               	movwf	173,c	;volatile
  1839  00041A                     i2l75:
  1840  00041A  A2AC               	btfss	172,1,c	;volatile
  1841  00041C  D7FE               	goto	i2l75
  1842                           
  1843                           ;maincode.c: 77:         }
  1844  00041E  2A40               	incf	i2EUSART_enviacadena@x^0,f,c
  1845  000420                     i2l1219:
  1846  000420  503F               	movf	i2EUSART_enviacadena@cantidad^0,w,c
  1847  000422  5C40               	subwf	i2EUSART_enviacadena@x^0,w,c
  1848  000424  E3F2               	bnc	i2l1215
  1849  000426  0012               	return		;funcret
  1850  000428                     __end_ofi2_EUSART_enviacadena:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function i2_strlen *****************
  1854 ;; Defined at:
  1855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1858 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
  1859 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1862 ;;		 -> error(33), menu_7(28), menu_6(28), menu_5(28), 
  1863 ;;		 -> menu_4(28), menu_3(28), menu_2(28), menu_1(28), 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  2    0[COMRAM] unsigned int 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1873 ;;      Params:         2       0       0       0       0       0       0       0       0
  1874 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1876 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1877 ;;Total ram usage:        4 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		i2_EUSART_enviacadena
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text15
  1887  000450                     __ptext15:
  1888                           	callstack 0
  1889  000450                     i2_strlen:
  1890                           	callstack 24
  1891                           
  1892                           ;incstack = 0
  1893  000450  C039  F03B         	movff	i2strlen@s,i2strlen@a
  1894  000454  C03A  F03C         	movff	i2strlen@s+1,i2strlen@a+1
  1895  000458  D002               	goto	i2l1169
  1896  00045A                     i2l1167:
  1897  00045A  4A39               	infsnz	i2strlen@s^0,f,c
  1898  00045C  2A3A               	incf	(i2strlen@s+1)^0,f,c
  1899  00045E                     i2l1169:
  1900  00045E  C039  FFD9         	movff	i2strlen@s,fsr2l
  1901  000462  C03A  FFDA         	movff	i2strlen@s+1,fsr2h
  1902  000466  50DF               	movf	indf2,w,c
  1903  000468  E1F8               	bnz	i2l1167
  1904  00046A  503B               	movf	i2strlen@a^0,w,c
  1905  00046C  5C39               	subwf	i2strlen@s^0,w,c
  1906  00046E  6E39               	movwf	?i2_strlen^0,c
  1907  000470  503C               	movf	(i2strlen@a+1)^0,w,c
  1908  000472  583A               	subwfb	(i2strlen@s+1)^0,w,c
  1909  000474  6E3A               	movwf	(?i2_strlen+1)^0,c
  1910  000476  0012               	return		;funcret
  1911  000478                     __end_ofi2_strlen:
  1912                           	callstack 0
  1913  0000                     
  1914                           	psect	rparam
  1915  0000                     
  1916                           	psect	temp
  1917  000053                     btemp:
  1918                           	callstack 0
  1919  000053                     	ds	1
  1920  0000                     int$flags	set	btemp
  1921  0000                     wtemp8	set	btemp+1
  1922  0000                     ttemp5	set	btemp+1
  1923  0000                     ttemp6	set	btemp+4
  1924  0000                     ttemp7	set	btemp+8
  1925                           
  1926                           	psect	idloc
  1927                           
  1928                           ;Config register IDLOC0 @ 0x200000
  1929                           ;	unspecified, using default values
  1930  200000                     	org	2097152
  1931  200000  FF                 	db	255
  1932                           
  1933                           ;Config register IDLOC1 @ 0x200001
  1934                           ;	unspecified, using default values
  1935  200001                     	org	2097153
  1936  200001  FF                 	db	255
  1937                           
  1938                           ;Config register IDLOC2 @ 0x200002
  1939                           ;	unspecified, using default values
  1940  200002                     	org	2097154
  1941  200002  FF                 	db	255
  1942                           
  1943                           ;Config register IDLOC3 @ 0x200003
  1944                           ;	unspecified, using default values
  1945  200003                     	org	2097155
  1946  200003  FF                 	db	255
  1947                           
  1948                           ;Config register IDLOC4 @ 0x200004
  1949                           ;	unspecified, using default values
  1950  200004                     	org	2097156
  1951  200004  FF                 	db	255
  1952                           
  1953                           ;Config register IDLOC5 @ 0x200005
  1954                           ;	unspecified, using default values
  1955  200005                     	org	2097157
  1956  200005  FF                 	db	255
  1957                           
  1958                           ;Config register IDLOC6 @ 0x200006
  1959                           ;	unspecified, using default values
  1960  200006                     	org	2097158
  1961  200006  FF                 	db	255
  1962                           
  1963                           ;Config register IDLOC7 @ 0x200007
  1964                           ;	unspecified, using default values
  1965  200007                     	org	2097159
  1966  200007  FF                 	db	255
  1967                           
  1968                           	psect	config
  1969                           
  1970                           ;Config register CONFIG1L @ 0x300000
  1971                           ;	PLL Prescaler Selection bits
  1972                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1973                           ;	System Clock Postscaler Selection bits
  1974                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1975                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1976                           ;	USBDIV = 0x0, unprogrammed default
  1977  300000                     	org	3145728
  1978  300000  00                 	db	0
  1979                           
  1980                           ;Config register CONFIG1H @ 0x300001
  1981                           ;	Oscillator Selection bits
  1982                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1983                           ;	Fail-Safe Clock Monitor Enable bit
  1984                           ;	FCMEN = 0x0, unprogrammed default
  1985                           ;	Internal/External Oscillator Switchover bit
  1986                           ;	IESO = 0x0, unprogrammed default
  1987  300001                     	org	3145729
  1988  300001  02                 	db	2
  1989                           
  1990                           ;Config register CONFIG2L @ 0x300002
  1991                           ;	Power-up Timer Enable bit
  1992                           ;	PWRT = ON, PWRT enabled
  1993                           ;	Brown-out Reset Enable bits
  1994                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1995                           ;	Brown-out Reset Voltage bits
  1996                           ;	BORV = 0x3, unprogrammed default
  1997                           ;	USB Voltage Regulator Enable bit
  1998                           ;	VREGEN = 0x0, unprogrammed default
  1999  300002                     	org	3145730
  2000  300002  18                 	db	24
  2001                           
  2002                           ;Config register CONFIG2H @ 0x300003
  2003                           ;	Watchdog Timer Enable bit
  2004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2005                           ;	Watchdog Timer Postscale Select bits
  2006                           ;	WDTPS = 0xF, unprogrammed default
  2007  300003                     	org	3145731
  2008  300003  1E                 	db	30
  2009                           
  2010                           ; Padding undefined space
  2011  300004                     	org	3145732
  2012  300004  FF                 	db	255
  2013                           
  2014                           ;Config register CONFIG3H @ 0x300005
  2015                           ;	CCP2 MUX bit
  2016                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2017                           ;	PORTB A/D Enable bit
  2018                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2019                           ;	Low-Power Timer 1 Oscillator Enable bit
  2020                           ;	LPT1OSC = 0x0, unprogrammed default
  2021                           ;	MCLR Pin Enable bit
  2022                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2023  300005                     	org	3145733
  2024  300005  81                 	db	129
  2025                           
  2026                           ;Config register CONFIG4L @ 0x300006
  2027                           ;	Stack Full/Underflow Reset Enable bit
  2028                           ;	STVREN = 0x1, unprogrammed default
  2029                           ;	Single-Supply ICSP Enable bit
  2030                           ;	LVP = OFF, Single-Supply ICSP disabled
  2031                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2032                           ;	ICPRT = 0x0, unprogrammed default
  2033                           ;	Extended Instruction Set Enable bit
  2034                           ;	XINST = 0x0, unprogrammed default
  2035                           ;	Background Debugger Enable bit
  2036                           ;	DEBUG = 0x1, unprogrammed default
  2037  300006                     	org	3145734
  2038  300006  81                 	db	129
  2039                           
  2040                           ; Padding undefined space
  2041  300007                     	org	3145735
  2042  300007  FF                 	db	255
  2043                           
  2044                           ;Config register CONFIG5L @ 0x300008
  2045                           ;	unspecified, using default values
  2046                           ;	Code Protection bit
  2047                           ;	CP0 = 0x1, unprogrammed default
  2048                           ;	Code Protection bit
  2049                           ;	CP1 = 0x1, unprogrammed default
  2050                           ;	Code Protection bit
  2051                           ;	CP2 = 0x1, unprogrammed default
  2052                           ;	Code Protection bit
  2053                           ;	CP3 = 0x1, unprogrammed default
  2054  300008                     	org	3145736
  2055  300008  0F                 	db	15
  2056                           
  2057                           ;Config register CONFIG5H @ 0x300009
  2058                           ;	unspecified, using default values
  2059                           ;	Boot Block Code Protection bit
  2060                           ;	CPB = 0x1, unprogrammed default
  2061                           ;	Data EEPROM Code Protection bit
  2062                           ;	CPD = 0x1, unprogrammed default
  2063  300009                     	org	3145737
  2064  300009  C0                 	db	192
  2065                           
  2066                           ;Config register CONFIG6L @ 0x30000A
  2067                           ;	unspecified, using default values
  2068                           ;	Write Protection bit
  2069                           ;	WRT0 = 0x1, unprogrammed default
  2070                           ;	Write Protection bit
  2071                           ;	WRT1 = 0x1, unprogrammed default
  2072                           ;	Write Protection bit
  2073                           ;	WRT2 = 0x1, unprogrammed default
  2074                           ;	Write Protection bit
  2075                           ;	WRT3 = 0x1, unprogrammed default
  2076  30000A                     	org	3145738
  2077  30000A  0F                 	db	15
  2078                           
  2079                           ;Config register CONFIG6H @ 0x30000B
  2080                           ;	unspecified, using default values
  2081                           ;	Configuration Register Write Protection bit
  2082                           ;	WRTC = 0x1, unprogrammed default
  2083                           ;	Boot Block Write Protection bit
  2084                           ;	WRTB = 0x1, unprogrammed default
  2085                           ;	Data EEPROM Write Protection bit
  2086                           ;	WRTD = 0x1, unprogrammed default
  2087  30000B                     	org	3145739
  2088  30000B  E0                 	db	224
  2089                           
  2090                           ;Config register CONFIG7L @ 0x30000C
  2091                           ;	unspecified, using default values
  2092                           ;	Table Read Protection bit
  2093                           ;	EBTR0 = 0x1, unprogrammed default
  2094                           ;	Table Read Protection bit
  2095                           ;	EBTR1 = 0x1, unprogrammed default
  2096                           ;	Table Read Protection bit
  2097                           ;	EBTR2 = 0x1, unprogrammed default
  2098                           ;	Table Read Protection bit
  2099                           ;	EBTR3 = 0x1, unprogrammed default
  2100  30000C                     	org	3145740
  2101  30000C  0F                 	db	15
  2102                           
  2103                           ;Config register CONFIG7H @ 0x30000D
  2104                           ;	unspecified, using default values
  2105                           ;	Boot Block Table Read Protection bit
  2106                           ;	EBTRB = 0x1, unprogrammed default
  2107  30000D                     	org	3145741
  2108  30000D  40                 	db	64
  2109                           tosu	equ	0xFFF
  2110                           tosh	equ	0xFFE
  2111                           tosl	equ	0xFFD
  2112                           stkptr	equ	0xFFC
  2113                           pclatu	equ	0xFFB
  2114                           pclath	equ	0xFFA
  2115                           pcl	equ	0xFF9
  2116                           tblptru	equ	0xFF8
  2117                           tblptrh	equ	0xFF7
  2118                           tblptrl	equ	0xFF6
  2119                           tablat	equ	0xFF5
  2120                           prodh	equ	0xFF4
  2121                           prodl	equ	0xFF3
  2122                           indf0	equ	0xFEF
  2123                           postinc0	equ	0xFEE
  2124                           postdec0	equ	0xFED
  2125                           preinc0	equ	0xFEC
  2126                           plusw0	equ	0xFEB
  2127                           fsr0h	equ	0xFEA
  2128                           fsr0l	equ	0xFE9
  2129                           wreg	equ	0xFE8
  2130                           indf1	equ	0xFE7
  2131                           postinc1	equ	0xFE6
  2132                           postdec1	equ	0xFE5
  2133                           preinc1	equ	0xFE4
  2134                           plusw1	equ	0xFE3
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           bsr	equ	0xFE0
  2138                           indf2	equ	0xFDF
  2139                           postinc2	equ	0xFDE
  2140                           postdec2	equ	0xFDD
  2141                           preinc2	equ	0xFDC
  2142                           plusw2	equ	0xFDB
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        229
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      82
    BANK0           160      7     147
    BANK1           256      0      33
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 33
		 -> error(BANK1[33]), menu_7(BANK0[28]), menu_6(BANK0[28]), menu_5(BANK0[28]), 
		 -> menu_4(BANK0[28]), menu_3(BANK0[28]), menu_2(COMRAM[28]), menu_1(COMRAM[28]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 33
		 -> error(BANK1[33]), menu_7(BANK0[28]), menu_6(BANK0[28]), menu_5(BANK0[28]), 
		 -> menu_4(BANK0[28]), menu_3(BANK0[28]), menu_2(COMRAM[28]), menu_1(COMRAM[28]), 

    EUSART_enviacadena@vector	PTR const unsigned char  size(2) Largest target is 33
		 -> error(BANK1[33]), menu_7(BANK0[28]), menu_6(BANK0[28]), menu_5(BANK0[28]), 
		 -> menu_4(BANK0[28]), menu_3(BANK0[28]), menu_2(COMRAM[28]), menu_1(COMRAM[28]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _vis_menu->_EUSART_enviacadena
    _EUSART_enviacadena->_strlen
    _convierte->___lwmod
    ___lwdiv->___lwmod

Critical Paths under _RC_ISR in COMRAM

    _RC_ISR->i2_EUSART_enviacadena
    i2_vis_menu->i2_EUSART_enviacadena
    i2_EUSART_enviacadena->i2_strlen

Critical Paths under _main in BANK0

    _vis_menu->_EUSART_enviacadena
    _convierte->___lwdiv

Critical Paths under _RC_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RC_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RC_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RC_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RC_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RC_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RC_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RC_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3104
                      _EUSART_config
                   _EUSART_enviachar
                          _convierte
                        _init_config
                             _strlen
                           _vis_menu
 ---------------------------------------------------------------------------------
 (1) _vis_menu                                             0     0      0    1162
                 _EUSART_enviacadena
              _EUSART_siguientelinea
 ---------------------------------------------------------------------------------
 (2) _EUSART_siguientelinea                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_enviacadena                                   4     2      2    1162
                                             16 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     310
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1610
                                             17 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             12 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     781
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _EUSART_enviachar                                     1     1      0      22
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_config                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RC_ISR                                               4     4      0    1224
                                              8 COMRAM     4     4      0
               i2_EUSART_enviacadena
            i2_EUSART_siguientelinea
                         i2_vis_menu
 ---------------------------------------------------------------------------------
 (5) i2_vis_menu                                           0     0      0     612
               i2_EUSART_enviacadena
            i2_EUSART_siguientelinea
 ---------------------------------------------------------------------------------
 (6) i2_EUSART_siguientelinea                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) i2_EUSART_enviacadena                                 4     2      2     612
                                              4 COMRAM     4     2      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (7) i2_strlen                                             4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_config
   _EUSART_enviachar
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _init_config
   _strlen
   _vis_menu
     _EUSART_enviacadena
       _strlen
     _EUSART_siguientelinea

 _RC_ISR (ROOT)
   i2_EUSART_enviacadena
     i2_strlen
   i2_EUSART_siguientelinea
   i2_vis_menu
     i2_EUSART_enviacadena
       i2_strlen
     i2_EUSART_siguientelinea

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      21       7       12.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106      20        0.0%
DATA                 0      0     106       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:12:27 2021

          ??i2_EUSART_enviacadena 003F            __size_of_EUSART_config 0010  
                              PL2 0108                                PL4 0112  
                              l64 049E                                l82 04E0  
                              l75 03E6                                l67 04A6  
                              l93 0348                               l603 0300  
                             l613 037E                               u400 02DC  
                             u280 0362                               wreg 000FE8  
                            l1043 0374                              l1035 0356  
                            l1205 02F6                              l1037 035E  
                            l1157 0432                              l1181 03D6  
                            l1159 0436                              l1193 02D0  
                            l1185 03EE                              l1195 02D8  
                            i2l64 04B0                              i2l75 041A  
                            i2l67 04B8           ??_EUSART_siguientelinea 0045  
                            _main 030A                              fsr2h 000FDA  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0053  
                            start 000E                      ___param_bank 000000  
                      i2_vis_menu 025E                             ?_main 0039  
        __end_of_EUSART_enviachar 04E6                   __end_of___lwdiv 030A  
                           i2l102 01A6                             i2l104 01AA  
                           i2l105 01AE                   __end_of___lwmod 0388  
                           i2l106 01B2                             i2l109 01F0  
                    ?_init_config 0039                             _RCREG 000FAE  
                           _SPBRG 000FAF                             _TXREG 000FAD  
                   _EUSART_config 04BE                             _error 0100  
                           tablat 000FF5        __end_of_EUSART_enviacadena 03F6  
                           ttemp5 0054                             ttemp6 0057  
                           ttemp7 005B                             status 000FD8  
                           wtemp8 0054                  __end_ofi2_strlen 0478  
                 __initialization 011E                      __end_of_main 034A  
                          ??_main 004C                     __activetblptr 000002  
    i2EUSART_enviacadena@cantidad 003F                    ?_EUSART_config 0039  
                          i2l1215 040A                            i2l1219 0420  
                          i2l1167 045A                            i2l1169 045E  
                          i2l1281 01B6                            i2l1283 01BC  
                          i2l1287 01CE                            _RC_ISR 0008  
                          _SPBRGH 000FB0                            _decena 004E  
                       ??___lwdiv 004A                         ??___lwmod 0049  
                     ?i2_vis_menu 0039                            _menu_1 001D  
                          _menu_2 0001                            _menu_3 00D0  
                          _menu_4 00B4                            _menu_5 0098  
                          _menu_6 007C                            _menu_7 0060  
                          clear_0 0184                            _unidad 004C  
                          _strlen 0428                      __pdataCOMRAM 0001  
      EUSART_enviacadena@cantidad 00EC                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                __end_of_vis_menu 025E                        __accesstop 0060  
         __end_of__initialization 018A                     ___rparam_used 000001  
                  __pcstackCOMRAM 0039                      __pidataBANK0 0012  
                    __pidataBANK1 0478                        __end_ofPL2 0112  
                      __end_ofPL4 011E                   ??_EUSART_config 0045  
            __size_of_init_config 000C                         ?i2_strlen 0039  
              __size_of_convierte 006A               __size_ofi2_vis_menu 0062  
                         ?_RC_ISR 0039    __size_of_EUSART_siguientelinea 0012  
   __end_of_EUSART_siguientelinea 04AC     __size_ofi2_EUSART_enviacadena 0032  
                         ?_strlen 0045                 ?_EUSART_enviachar 0039  
              ??_EUSART_enviachar 0045                        ??i2_strlen 003B  
        ?i2_EUSART_siguientelinea 0039                   __size_of_RC_ISR 01F4  
                         __Hparam 0000                           __Lparam 0000  
                         ___lwdiv 02C0                           ___lwmod 034A  
                       ?_vis_menu 0039                _EUSART_enviacadena 03C0  
               __end_of_convierte 0108                           __pcinit 011E  
                         __ramtop 0800                           _centena 0050  
                         __ptext0 030A                           __ptext1 01FC  
                         __ptext2 049A                           __ptext3 03C0  
                         __ptext4 0428                           __ptext5 04CE  
                         __ptext6 009E                           __ptext7 034A  
                         __ptext8 02C0                           __ptext9 04DA  
                 __size_of_strlen 0028               ?_EUSART_enviacadena 0049  
                  __pintcode_body 0198              end_of_initialization 018A  
                   __Lmediumconst 0000                           int_func 0198  
            ??_EUSART_enviacadena 004B                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postinc0 000FEE  
                    ??i2_vis_menu 0041                        ??_vis_menu 004B  
                         strlen@a 0047                           strlen@s 0045  
 __end_ofi2_EUSART_siguientelinea 04BE                         _TRISCbits 000F94  
                       _TRISDbits 000F95        i2EUSART_enviacadena@vector 003D  
              __end_ofi2_vis_menu 02C0                         _TXSTAbits 000FAC  
                  __end_of_RC_ISR 01FC                     __pidataCOMRAM 0388  
                  __end_of_strlen 0450               start_initialization 011E  
               __size_ofi2_strlen 0028                         i2strlen@a 003B  
                       i2strlen@s 0039                          ??_RC_ISR 0041  
                     __pdataBANK0 0060                       __pdataBANK1 0100  
                        ??_strlen 0047                     ??_init_config 0045  
                     __pbssCOMRAM 004C                     __pcstackBANK0 00EC  
           __end_of_EUSART_config 04CE      __end_ofi2_EUSART_enviacadena 0428  
       __size_of_EUSART_enviachar 000C                  ___lwdiv@dividend 00EC  
__size_ofi2_EUSART_siguientelinea 0012             _EUSART_siguientelinea 049A  
                       __pintcode 0008                          ?___lwdiv 00EC  
                        ?___lwmod 0045                 __size_of_vis_menu 0062  
                       _convierte 009E                   convierte@numero 004A  
                ___lwdiv@quotient 00F1               __end_of_init_config 04DA  
                        _LATDbits 000F8C                          _PIE1bits 000F9D  
           i2EUSART_enviacadena@x 0040                          _PIR1bits 000F9E  
                      ?_convierte 004A                          i2_strlen 0450  
        EUSART_enviacadena@vector 0049                         copy_data0 0132  
                       copy_data1 0152                         copy_data2 0172  
          ?_EUSART_siguientelinea 0039       __size_of_EUSART_enviacadena 0036  
                        __Hrparam 0000                          __Lrparam 0000  
            i2_EUSART_enviacadena 03F6                  __size_of___lwdiv 004A  
                __size_of___lwmod 003E                       _init_config 04CE  
                        _cantidad 0052                   ___lwdiv@divisor 00EE  
                 ___lwdiv@counter 00F0                          __ptext10 04BE  
                        __ptext12 025E                          __ptext13 04AC  
                        __ptext14 03F6                          __ptext15 0450  
                _EUSART_enviachar 04DA                     __size_of_main 0040  
         i2_EUSART_siguientelinea 04AC              EUSART_enviachar@papa 0045  
                        int$flags 0053             ?i2_EUSART_enviacadena 003D  
                        _vis_menu 01FC                       ??_convierte 004C  
                      _INTCONbits 000FF2                          intlevel2 0000  
                ___lwmod@dividend 0045               EUSART_enviacadena@x 00ED  
                 ___lwmod@divisor 0047                   ___lwmod@counter 0049  
       ??i2_EUSART_siguientelinea 0039  
