

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 10 11:53:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	idataBANK0
    74  000BBA                     __pidataBANK0:
    75                           	callstack 0
    76                           
    77                           ;initializer for _cadenon
    78  000BBA  20                 	db	32
    79  000BBB  20                 	db	32
    80  000BBC  20                 	db	32
    81  000BBD  20                 	db	32
    82  000BBE  20                 	db	32
    83  000BBF  20                 	db	32
    84  000BC0  20                 	db	32
    85  000BC1  20                 	db	32
    86  000BC2  20                 	db	32
    87  000BC3  20                 	db	32
    88  000BC4  20                 	db	32
    89  000BC5  20                 	db	32
    90  000BC6  20                 	db	32
    91  000BC7  20                 	db	32
    92  000BC8  20                 	db	32
    93  000BC9  20                 	db	32
    94  000BCA  20                 	db	32
    95  000BCB  20                 	db	32
    96  000BCC  20                 	db	32
    97  000BCD  41                 	db	65
    98  000BCE  6E                 	db	110
    99  000BCF  64                 	db	100
   100  000BD0  72                 	db	114
   101  000BD1  65                 	db	101
   102  000BD2  73                 	db	115
   103  000BD3  20                 	db	32
   104  000BD4  45                 	db	69
   105  000BD5  6E                 	db	110
   106  000BD6  72                 	db	114
   107  000BD7  69                 	db	105
   108  000BD8  71                 	db	113
   109  000BD9  75                 	db	117
   110  000BDA  65                 	db	101
   111  000BDB  20                 	db	32
   112  000BDC  4D                 	db	77
   113  000BDD  61                 	db	97
   114  000BDE  72                 	db	114
   115  000BDF  74                 	db	116
   116  000BE0  69                 	db	105
   117  000BE1  6E                 	db	110
   118  000BE2  20                 	db	32
   119  000BE3  56                 	db	86
   120  000BE4  61                 	db	97
   121  000BE5  73                 	db	115
   122  000BE6  71                 	db	113
   123  000BE7  75                 	db	117
   124  000BE8  65                 	db	101
   125  000BE9  7A                 	db	122
   126  000BEA  20                 	db	32
   127  000BEB  48                 	db	72
   128  000BEC  75                 	db	117
   129  000BED  69                 	db	105
   130  000BEE  6C                 	db	108
   131  000BEF  6C                 	db	108
   132  000BF0  63                 	db	99
   133  000BF1  61                 	db	97
   134  000BF2  6D                 	db	109
   135  000BF3  69                 	db	105
   136  000BF4  73                 	db	115
   137  000BF5  61                 	db	97
   138  000BF6  20                 	db	32
   139  000BF7  20                 	db	32
   140  000BF8  20                 	db	32
   141  000BF9  20                 	db	32
   142  000BFA  20                 	db	32
   143  000BFB  20                 	db	32
   144  000BFC  20                 	db	32
   145  000BFD  20                 	db	32
   146  000BFE  20                 	db	32
   147  000BFF  20                 	db	32
   148  000C00  20                 	db	32
   149  000C01  20                 	db	32
   150  000C02  20                 	db	32
   151  000C03  20                 	db	32
   152  000C04  20                 	db	32
   153  000C05  20                 	db	32
   154  000C06  20                 	db	32
   155  000C07  20                 	db	32
   156  000C08  20                 	db	32
   157  000C09  20                 	db	32
   158  000C0A  00                 	db	0
   159  0000                     _INTCONbits	set	4082
   160  0000                     _INTCON	set	4082
   161  0000                     _PORTD	set	3971
   162  0000                     _LATD	set	3980
   163  0000                     _TRISD	set	3989
   164  0000                     _LATDbits	set	3980
   165                           
   166                           	psect	smallconst
   167  000800                     __psmallconst:
   168                           	callstack 0
   169  000800  00                 	db	0
   170  000801                     STR_1:
   171  000801  20                 	db	32
   172  000802  20                 	db	32
   173  000803  20                 	db	32
   174  000804  20                 	db	32
   175  000805  20                 	db	32
   176  000806  48                 	db	72	;'H'
   177  000807  6F                 	db	111	;'o'
   178  000808  6C                 	db	108	;'l'
   179  000809  61                 	db	97	;'a'
   180  00080A  20                 	db	32
   181  00080B  6D                 	db	109	;'m'
   182  00080C  75                 	db	117	;'u'
   183  00080D  6E                 	db	110	;'n'
   184  00080E  64                 	db	100	;'d'
   185  00080F  6F                 	db	111	;'o'
   186  000810  00                 	db	0
   187  000811                     STR_2:
   188  000811  45                 	db	69	;'E'
   189  000812  73                 	db	115	;'s'
   190  000813  74                 	db	116	;'t'
   191  000814  61                 	db	97	;'a'
   192  000815  64                 	db	100	;'d'
   193  000816  6F                 	db	111	;'o'
   194  000817  3A                 	db	58	;':'
   195  000818  00                 	db	0
   196  000819  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  000C0C                     __pcinit:
   202                           	callstack 0
   203  000C0C                     start_initialization:
   204                           	callstack 0
   205  000C0C                     __initialization:
   206                           	callstack 0
   207                           
   208                           ; Initialize objects allocated to BANK0 (81 bytes)
   209                           ; load TBLPTR registers with __pidataBANK0
   210  000C0C  0EBA               	movlw	low __pidataBANK0
   211  000C0E  6EF6               	movwf	tblptrl,c
   212  000C10  0E0B               	movlw	high __pidataBANK0
   213  000C12  6EF7               	movwf	tblptrh,c
   214  000C14  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   215  000C16  6EF8               	movwf	tblptru,c
   216  000C18  EE00  F060         	lfsr	0,__pdataBANK0
   217  000C1C  EE10 F051          	lfsr	1,81
   218  000C20                     copy_data0:
   219  000C20  0009               	tblrd		*+
   220  000C22  CFF5 FFEE          	movff	tablat,postinc0
   221  000C26  50E5               	movf	postdec1,w,c
   222  000C28  50E1               	movf	fsr1l,w,c
   223  000C2A  E1FA               	bnz	copy_data0
   224                           
   225                           ; Clear objects allocated to COMRAM (13 bytes)
   226  000C2C  EE00  F01D         	lfsr	0,__pbssCOMRAM
   227  000C30  0E0D               	movlw	13
   228  000C32                     clear_0:
   229  000C32  6AEE               	clrf	postinc0,c
   230  000C34  06E8               	decf	wreg,f,c
   231  000C36  E1FD               	bnz	clear_0
   232  000C38                     end_of_initialization:
   233                           	callstack 0
   234  000C38                     __end_of__initialization:
   235                           	callstack 0
   236  000C38  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   237  000C3A  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   238  000C3C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   239  000C3E  6EF8               	movwf	tblptru,c
   240  000C40  0E08               	movlw	high __Lsmallconst
   241  000C42  6EF7               	movwf	tblptrh,c
   242  000C44  0100               	movlb	0
   243  000C46  EF0D  F004         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246  00001D                     __pbssCOMRAM:
   247                           	callstack 0
   248  00001D                     _cuenta:
   249                           	callstack 0
   250  00001D                     	ds	2
   251  00001F                     _unidad:
   252                           	callstack 0
   253  00001F                     	ds	2
   254  000021                     _decena:
   255                           	callstack 0
   256  000021                     	ds	2
   257  000023                     _centena:
   258                           	callstack 0
   259  000023                     	ds	2
   260  000025                     _millar:
   261                           	callstack 0
   262  000025                     	ds	2
   263  000027                     _d_millar:
   264                           	callstack 0
   265  000027                     	ds	2
   266  000029                     _estado:
   267                           	callstack 0
   268  000029                     	ds	1
   269                           
   270                           	psect	dataBANK0
   271  000060                     __pdataBANK0:
   272                           	callstack 0
   273  000060                     _cadenon:
   274                           	callstack 0
   275  000060                     	ds	81
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     i2ENVIA_NIBBLE@dato:
   281                           	callstack 0
   282  000001                     i2LEER_LCD@aux:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x0
   286  000001                     	ds	1
   287  000002                     i2ENVIA_CHAR@dato:
   288                           	callstack 0
   289  000002                     i2ENVIA_LCD_CMD@dato:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293  000002                     	ds	1
   294  000003                     i2ENVIA_CHAR@aux:
   295                           	callstack 0
   296  000003                     i2ENVIA_LCD_CMD@aux:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x2
   300  000003                     	ds	1
   301  000004                     i2POS_CURSOR@columna:
   302                           	callstack 0
   303  000004                     i2ESCRIBE_MENSAJE@cadena:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x3
   307  000004                     	ds	1
   308  000005                     i2POS_CURSOR@fila:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x4
   312  000005                     	ds	1
   313  000006                     i2ESCRIBE_MENSAJE@tam:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x5
   317  000006                     	ds	1
   318  000007                     ??i2_ESCRIBE_MENSAJE:
   319                           
   320                           ; 1 bytes @ 0x6
   321  000007                     	ds	2
   322  000009                     i2ESCRIBE_MENSAJE@i:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x8
   326  000009                     	ds	1
   327  00000A                     ??_INT0_ISR:
   328                           
   329                           ; 1 bytes @ 0x9
   330  00000A                     	ds	4
   331  00000E                     ENVIA_NIBBLE@dato:
   332                           	callstack 0
   333  00000E                     LEER_LCD@aux:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xD
   337  00000E                     	ds	1
   338  00000F                     ENVIA_CHAR@dato:
   339                           	callstack 0
   340  00000F                     ENVIA_LCD_CMD@dato:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xE
   344  00000F                     	ds	1
   345  000010                     ENVIA_CHAR@aux:
   346                           	callstack 0
   347  000010                     ENVIA_LCD_CMD@aux:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0xF
   351  000010                     	ds	1
   352  000011                     ??_LCD_CONFIG:
   353  000011                     POS_CURSOR@columna:
   354                           	callstack 0
   355  000011                     CURSOR_ONOFF@estado:
   356                           	callstack 0
   357  000011                     ESCRIBE_MENSAJE@cadena:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x10
   361  000011                     	ds	1
   362  000012                     ??_lcd_init:
   363  000012                     POS_CURSOR@fila:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x11
   367  000012                     	ds	1
   368  000013                     ESCRIBE_MENSAJE@tam:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x12
   372  000013                     	ds	1
   373  000014                     ??_ESCRIBE_MENSAJE:
   374                           
   375                           ; 1 bytes @ 0x13
   376  000014                     	ds	2
   377  000016                     ESCRIBE_MENSAJE@i:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x15
   381  000016                     	ds	1
   382  000017                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x16
   385  000017                     	ds	2
   386  000019                     main@i:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x18
   390  000019                     	ds	1
   391  00001A                     main@j:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x19
   395  00001A                     	ds	1
   396  00001B                     main@i_217:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x1A
   400  00001B                     	ds	1
   401  00001C                     main@j_218:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x1B
   405  00001C                     	ds	1
   406                           
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 41 in file "maincode3.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  j               1   27[COMRAM] unsigned char 
   417 ;;  j               1   25[COMRAM] unsigned char 
   418 ;;  i               1   26[COMRAM] unsigned char 
   419 ;;  i               1   24[COMRAM] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   429 ;;      Params:         0       0       0       0       0       0       0       0       0
   430 ;;      Locals:         4       0       0       0       0       0       0       0       0
   431 ;;      Temps:          2       0       0       0       0       0       0       0       0
   432 ;;      Totals:         6       0       0       0       0       0       0       0       0
   433 ;;Total ram usage:        6 bytes
   434 ;; Hardware stack levels required when called:    8
   435 ;; This function calls:
   436 ;;		_ENVIA_CHAR
   437 ;;		_ESCRIBE_MENSAJE
   438 ;;		_POS_CURSOR
   439 ;;		_init_conf
   440 ;;		_lcd_init
   441 ;; This function is called by:
   442 ;;		Startup code after reset
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           	psect	text0
   447  00081A                     __ptext0:
   448                           	callstack 0
   449  00081A                     _main:
   450                           	callstack 23
   451  00081A                     
   452                           ;maincode3.c: 42:     init_conf();
   453  00081A  EC1B  F007         	call	_init_conf	;wreg free
   454  00081E                     
   455                           ;maincode3.c: 43:     lcd_init();
   456  00081E  ECE3  F006         	call	_lcd_init	;wreg free
   457  000822                     
   458                           ;maincode3.c: 44:     ESCRIBE_MENSAJE("     Hola mundo", 15);
   459  000822  0E01               	movlw	low STR_1
   460  000824  6E11               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   461  000826  0E08               	movlw	high STR_1
   462  000828  6E12               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   463  00082A  0E0F               	movlw	15
   464  00082C  6E13               	movwf	ESCRIBE_MENSAJE@tam^0,c
   465  00082E  EC25  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   466  000832                     
   467                           ;maincode3.c: 45:     POS_CURSOR(3,0);
   468  000832  0E00               	movlw	0
   469  000834  6E11               	movwf	POS_CURSOR@columna^0,c
   470  000836  0E03               	movlw	3
   471  000838  EC85  F005         	call	_POS_CURSOR
   472  00083C                     
   473                           ;maincode3.c: 46:     ESCRIBE_MENSAJE("Estado:",7);
   474  00083C  0E11               	movlw	low STR_2
   475  00083E  6E11               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   476  000840  0E08               	movlw	high STR_2
   477  000842  6E12               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   478  000844  0E07               	movlw	7
   479  000846  6E13               	movwf	ESCRIBE_MENSAJE@tam^0,c
   480  000848  EC25  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   481  00084C                     
   482                           ;maincode3.c: 47:     ENVIA_CHAR(estado+0x30);
   483  00084C  5029               	movf	_estado^0,w,c
   484  00084E  0F30               	addlw	48
   485  000850  EC7D  F006         	call	_ENVIA_CHAR
   486  000854                     
   487                           ;maincode3.c: 48:     POS_CURSOR(2,0);
   488  000854  0E00               	movlw	0
   489  000856  6E11               	movwf	POS_CURSOR@columna^0,c
   490  000858  0E02               	movlw	2
   491  00085A  EC85  F005         	call	_POS_CURSOR
   492  00085E                     l1521:
   493                           
   494                           ;maincode3.c: 50:         if (estado == 0){
   495  00085E  5029               	movf	_estado^0,w,c
   496  000860  A4D8               	btfss	status,2,c
   497  000862  EF35  F004         	goto	u411
   498  000866  EF37  F004         	goto	u410
   499  00086A                     u411:
   500  00086A  EF70  F004         	goto	l1549
   501  00086E                     u410:
   502  00086E                     
   503                           ;maincode3.c: 51:             for(unsigned char i=0;i<60;i++){
   504  00086E  0E00               	movlw	0
   505  000870  6E19               	movwf	main@i^0,c
   506  000872                     l1529:
   507                           
   508                           ;maincode3.c: 52:                 for(unsigned char j=0;j<20;j++){
   509  000872  0E00               	movlw	0
   510  000874  6E1A               	movwf	main@j^0,c
   511  000876                     l1535:
   512                           
   513                           ;maincode3.c: 53:                     ENVIA_CHAR(cadenon[j+i]);
   514  000876  0E60               	movlw	low _cadenon
   515  000878  6E17               	movwf	??_main^0,c
   516  00087A  0E00               	movlw	high _cadenon
   517  00087C  6E18               	movwf	(??_main+1)^0,c
   518  00087E  501A               	movf	main@j^0,w,c
   519  000880  2617               	addwf	??_main^0,f,c
   520  000882  0E00               	movlw	0
   521  000884  2218               	addwfc	(??_main+1)^0,f,c
   522  000886  5019               	movf	main@i^0,w,c
   523  000888  2417               	addwf	??_main^0,w,c
   524  00088A  6ED9               	movwf	fsr2l,c
   525  00088C  0E00               	movlw	0
   526  00088E  2018               	addwfc	(??_main+1)^0,w,c
   527  000890  6EDA               	movwf	fsr2h,c
   528  000892  50DF               	movf	indf2,w,c
   529  000894  EC7D  F006         	call	_ENVIA_CHAR
   530  000898                     
   531                           ;maincode3.c: 54:                 }
   532  000898  2A1A               	incf	main@j^0,f,c
   533  00089A  0E13               	movlw	19
   534  00089C  641A               	cpfsgt	main@j^0,c
   535  00089E  EF53  F004         	goto	u421
   536  0008A2  EF55  F004         	goto	u420
   537  0008A6                     u421:
   538  0008A6  EF3B  F004         	goto	l1535
   539  0008AA                     u420:
   540  0008AA                     
   541                           ;maincode3.c: 55:                 _delay((unsigned long)((200)*(48000000UL/4000.0)));
   542  0008AA  0E0D               	movlw	13
   543  0008AC  6E18               	movwf	(??_main+1)^0,c
   544  0008AE  0E2D               	movlw	45
   545  0008B0  6E17               	movwf	??_main^0,c
   546  0008B2  0ED8               	movlw	216
   547  0008B4                     u477:
   548  0008B4  2EE8               	decfsz	wreg,f,c
   549  0008B6  D7FE               	bra	u477
   550  0008B8  2E17               	decfsz	??_main^0,f,c
   551  0008BA  D7FC               	bra	u477
   552  0008BC  2E18               	decfsz	(??_main+1)^0,f,c
   553  0008BE  D7FA               	bra	u477
   554  0008C0                     
   555                           ;maincode3.c: 56:                 POS_CURSOR(2,0);
   556  0008C0  0E00               	movlw	0
   557  0008C2  6E11               	movwf	POS_CURSOR@columna^0,c
   558  0008C4  0E02               	movlw	2
   559  0008C6  EC85  F005         	call	_POS_CURSOR
   560  0008CA                     
   561                           ;maincode3.c: 57:             }
   562  0008CA  2A19               	incf	main@i^0,f,c
   563  0008CC  0E3B               	movlw	59
   564  0008CE  6419               	cpfsgt	main@i^0,c
   565  0008D0  EF6C  F004         	goto	u431
   566  0008D4  EF6E  F004         	goto	u430
   567  0008D8                     u431:
   568  0008D8  EF39  F004         	goto	l1529
   569  0008DC                     u430:
   570  0008DC  EF2F  F004         	goto	l1521
   571  0008E0                     l1549:
   572                           
   573                           ;maincode3.c: 60:             for(unsigned char i=0;i<60;i++){
   574  0008E0  0E00               	movlw	0
   575  0008E2  6E1B               	movwf	main@i_217^0,c
   576  0008E4                     l1555:
   577                           
   578                           ;maincode3.c: 61:                 for(unsigned char j=0;j<20;j++){
   579  0008E4  0E00               	movlw	0
   580  0008E6  6E1C               	movwf	main@j_218^0,c
   581  0008E8                     l1561:
   582                           
   583                           ;maincode3.c: 62:                     ENVIA_CHAR(cadenon[j+(60-i)]);
   584  0008E8  0E60               	movlw	low _cadenon
   585  0008EA  6E17               	movwf	??_main^0,c
   586  0008EC  0E00               	movlw	high _cadenon
   587  0008EE  6E18               	movwf	(??_main+1)^0,c
   588  0008F0  0E3C               	movlw	60
   589  0008F2  2617               	addwf	??_main^0,f,c
   590  0008F4  0E00               	movlw	0
   591  0008F6  2218               	addwfc	(??_main+1)^0,f,c
   592  0008F8  501C               	movf	main@j_218^0,w,c
   593  0008FA  2617               	addwf	??_main^0,f,c
   594  0008FC  0E00               	movlw	0
   595  0008FE  2218               	addwfc	(??_main+1)^0,f,c
   596  000900  501B               	movf	main@i_217^0,w,c
   597  000902  5C17               	subwf	??_main^0,w,c
   598  000904  6ED9               	movwf	fsr2l,c
   599  000906  5018               	movf	(??_main+1)^0,w,c
   600  000908  A0D8               	btfss	status,0,c
   601  00090A  0418               	decf	(??_main+1)^0,w,c
   602  00090C  6EDA               	movwf	fsr2h,c
   603  00090E  50DF               	movf	indf2,w,c
   604  000910  EC7D  F006         	call	_ENVIA_CHAR
   605  000914                     
   606                           ;maincode3.c: 63:                 }
   607  000914  2A1C               	incf	main@j_218^0,f,c
   608  000916  0E13               	movlw	19
   609  000918  641C               	cpfsgt	main@j_218^0,c
   610  00091A  EF91  F004         	goto	u441
   611  00091E  EF93  F004         	goto	u440
   612  000922                     u441:
   613  000922  EF74  F004         	goto	l1561
   614  000926                     u440:
   615  000926                     
   616                           ;maincode3.c: 64:                 _delay((unsigned long)((200)*(48000000UL/4000.0)));
   617  000926  0E0D               	movlw	13
   618  000928  6E18               	movwf	(??_main+1)^0,c
   619  00092A  0E2D               	movlw	45
   620  00092C  6E17               	movwf	??_main^0,c
   621  00092E  0ED8               	movlw	216
   622  000930                     u487:
   623  000930  2EE8               	decfsz	wreg,f,c
   624  000932  D7FE               	bra	u487
   625  000934  2E17               	decfsz	??_main^0,f,c
   626  000936  D7FC               	bra	u487
   627  000938  2E18               	decfsz	(??_main+1)^0,f,c
   628  00093A  D7FA               	bra	u487
   629  00093C                     
   630                           ;maincode3.c: 65:                 POS_CURSOR(2,0);
   631  00093C  0E00               	movlw	0
   632  00093E  6E11               	movwf	POS_CURSOR@columna^0,c
   633  000940  0E02               	movlw	2
   634  000942  EC85  F005         	call	_POS_CURSOR
   635  000946                     
   636                           ;maincode3.c: 66:             }
   637  000946  2A1B               	incf	main@i_217^0,f,c
   638  000948  0E3B               	movlw	59
   639  00094A  641B               	cpfsgt	main@i_217^0,c
   640  00094C  EFAA  F004         	goto	u451
   641  000950  EFAC  F004         	goto	u450
   642  000954                     u451:
   643  000954  EF72  F004         	goto	l1555
   644  000958                     u450:
   645  000958  EF2F  F004         	goto	l1521
   646  00095C  EF07  F000         	goto	start
   647  000960                     __end_of_main:
   648                           	callstack 0
   649                           
   650 ;; *************** function _lcd_init *****************
   651 ;; Defined at:
   652 ;;		line 28 in file "maincode3.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;		None
   655 ;; Auto vars:     Size  Location     Type
   656 ;;		None
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   666 ;;      Params:         0       0       0       0       0       0       0       0       0
   667 ;;      Locals:         0       0       0       0       0       0       0       0       0
   668 ;;      Temps:          1       0       0       0       0       0       0       0       0
   669 ;;      Totals:         1       0       0       0       0       0       0       0       0
   670 ;;Total ram usage:        1 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    7
   673 ;; This function calls:
   674 ;;		_BORRAR_LCD
   675 ;;		_CURSOR_HOME
   676 ;;		_CURSOR_ONOFF
   677 ;;		_LCD_CONFIG
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684  000DC6                     __ptext1:
   685                           	callstack 0
   686  000DC6                     _lcd_init:
   687                           	callstack 23
   688  000DC6                     
   689                           ;maincode3.c: 29:     TRISD = 0x00;
   690  000DC6  0E00               	movlw	0
   691  000DC8  6E95               	movwf	149,c	;volatile
   692  000DCA                     
   693                           ;maincode3.c: 30:     LCD_CONFIG();
   694  000DCA  EC55  F005         	call	_LCD_CONFIG	;wreg free
   695  000DCE                     
   696                           ;maincode3.c: 31:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   697  000DCE  0EEA               	movlw	234
   698  000DD0  6E12               	movwf	??_lcd_init^0,c
   699  000DD2  0EC3               	movlw	195
   700  000DD4                     u497:
   701  000DD4  2EE8               	decfsz	wreg,f,c
   702  000DD6  D7FE               	bra	u497
   703  000DD8  2E12               	decfsz	??_lcd_init^0,f,c
   704  000DDA  D7FC               	bra	u497
   705  000DDC  F000               	nop	
   706  000DDE                     
   707                           ;maincode3.c: 32:     BORRAR_LCD();
   708  000DDE  EC17  F007         	call	_BORRAR_LCD	;wreg free
   709  000DE2                     
   710                           ;maincode3.c: 33:     CURSOR_HOME();
   711  000DE2  EC13  F007         	call	_CURSOR_HOME	;wreg free
   712  000DE6                     
   713                           ;maincode3.c: 34:     CURSOR_ONOFF(1);
   714  000DE6  0E01               	movlw	1
   715  000DE8  ECCB  F006         	call	_CURSOR_ONOFF
   716  000DEC  0012               	return		;funcret
   717  000DEE                     __end_of_lcd_init:
   718                           	callstack 0
   719                           
   720 ;; *************** function _LCD_CONFIG *****************
   721 ;; Defined at:
   722 ;;		line 76 in file "LCD.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   736 ;;      Params:         0       0       0       0       0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0       0       0       0       0
   739 ;;      Totals:         1       0       0       0       0       0       0       0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    6
   743 ;; This function calls:
   744 ;;		_ENVIA_LCD_CMD
   745 ;;		_ENVIA_NIBBLE
   746 ;; This function is called by:
   747 ;;		_lcd_init
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text2
   752  000AAA                     __ptext2:
   753                           	callstack 0
   754  000AAA                     _LCD_CONFIG:
   755                           	callstack 23
   756  000AAA                     
   757                           ;LCD.c: 78:  LATDbits.LATD0 = 0;
   758  000AAA  908C               	bcf	140,0,c	;volatile
   759                           
   760                           ;LCD.c: 79:  LATDbits.LATD1 = 0;
   761  000AAC  928C               	bcf	140,1,c	;volatile
   762  000AAE                     
   763                           ;LCD.c: 80:  ENVIA_NIBBLE(0x30);
   764  000AAE  0E30               	movlw	48
   765  000AB0  ECF7  F006         	call	_ENVIA_NIBBLE
   766  000AB4                     
   767                           ;LCD.c: 81:         _delay(24000);
   768  000AB4  0E20               	movlw	32
   769  000AB6  6E11               	movwf	??_LCD_CONFIG^0,c
   770  000AB8  0E2A               	movlw	42
   771  000ABA                     u507:
   772  000ABA  2EE8               	decfsz	wreg,f,c
   773  000ABC  D7FE               	bra	u507
   774  000ABE  2E11               	decfsz	??_LCD_CONFIG^0,f,c
   775  000AC0  D7FC               	bra	u507
   776  000AC2                     
   777                           ;LCD.c: 82:         _delay(24000);
   778  000AC2  0E20               	movlw	32
   779  000AC4  6E11               	movwf	??_LCD_CONFIG^0,c
   780  000AC6  0E2A               	movlw	42
   781  000AC8                     u517:
   782  000AC8  2EE8               	decfsz	wreg,f,c
   783  000ACA  D7FE               	bra	u517
   784  000ACC  2E11               	decfsz	??_LCD_CONFIG^0,f,c
   785  000ACE  D7FC               	bra	u517
   786                           
   787                           ;LCD.c: 85:  ENVIA_NIBBLE(0x30);
   788  000AD0  0E30               	movlw	48
   789  000AD2  ECF7  F006         	call	_ENVIA_NIBBLE
   790  000AD6                     
   791                           ;LCD.c: 87:  _delay(1200);
   792  000AD6  0EF0               	movlw	240
   793  000AD8                     u527:
   794  000AD8  D000               	nop2	
   795  000ADA  2EE8               	decfsz	wreg,f,c
   796  000ADC  D7FD               	bra	u527
   797  000ADE                     
   798                           ;LCD.c: 88:         ENVIA_NIBBLE(0x30);
   799  000ADE  0E30               	movlw	48
   800  000AE0  ECF7  F006         	call	_ENVIA_NIBBLE
   801  000AE4                     
   802                           ;LCD.c: 89:  ENVIA_NIBBLE(0x20);
   803  000AE4  0E20               	movlw	32
   804  000AE6  ECF7  F006         	call	_ENVIA_NIBBLE
   805  000AEA                     
   806                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   807  000AEA  0E01               	movlw	1
   808  000AEC  EC63  F006         	call	_ENVIA_LCD_CMD
   809  000AF0                     
   810                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x28);
   811  000AF0  0E28               	movlw	40
   812  000AF2  EC63  F006         	call	_ENVIA_LCD_CMD
   813  000AF6                     
   814                           ;LCD.c: 92:  ENVIA_LCD_CMD(0x0F);
   815  000AF6  0E0F               	movlw	15
   816  000AF8  EC63  F006         	call	_ENVIA_LCD_CMD
   817  000AFC                     
   818                           ;LCD.c: 93:  ENVIA_LCD_CMD(0x06);
   819  000AFC  0E06               	movlw	6
   820  000AFE  EC63  F006         	call	_ENVIA_LCD_CMD
   821  000B02                     
   822                           ;LCD.c: 94:  ENVIA_LCD_CMD(0x01);
   823  000B02  0E01               	movlw	1
   824  000B04  EC63  F006         	call	_ENVIA_LCD_CMD
   825  000B08  0012               	return		;funcret
   826  000B0A                     __end_of_LCD_CONFIG:
   827                           	callstack 0
   828                           
   829 ;; *************** function _CURSOR_ONOFF *****************
   830 ;; Defined at:
   831 ;;		line 39 in file "LCD.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  estado          1    wreg     unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  estado          1   16[COMRAM] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   845 ;;      Params:         0       0       0       0       0       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0
   848 ;;      Totals:         1       0       0       0       0       0       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    6
   852 ;; This function calls:
   853 ;;		_ENVIA_LCD_CMD
   854 ;; This function is called by:
   855 ;;		_lcd_init
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text3
   860  000D96                     __ptext3:
   861                           	callstack 0
   862  000D96                     _CURSOR_ONOFF:
   863                           	callstack 23
   864                           
   865                           ;incstack = 0
   866                           ;CURSOR_ONOFF@estado stored from wreg
   867  000D96  6E11               	movwf	CURSOR_ONOFF@estado^0,c
   868  000D98                     
   869                           ;LCD.c: 39: void CURSOR_ONOFF(unsigned char estado);LCD.c: 40: {;LCD.c: 41:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   870  000D98  5011               	movf	CURSOR_ONOFF@estado^0,w,c
   871  000D9A  A4D8               	btfss	status,2,c
   872  000D9C  EFD2  F006         	goto	u261
   873  000DA0  EFD4  F006         	goto	u260
   874  000DA4                     u261:
   875  000DA4  EFD7  F006         	goto	l1325
   876  000DA8                     u260:
   877  000DA8  0E0E               	movlw	14
   878  000DAA  EC63  F006         	call	_ENVIA_LCD_CMD
   879  000DAE                     l1325:
   880                           
   881                           ;LCD.c: 42:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   882  000DAE  0411               	decf	CURSOR_ONOFF@estado^0,w,c
   883  000DB0  A4D8               	btfss	status,2,c
   884  000DB2  EFDD  F006         	goto	u271
   885  000DB6  EFDF  F006         	goto	u270
   886  000DBA                     u271:
   887  000DBA  EFE2  F006         	goto	l44
   888  000DBE                     u270:
   889  000DBE  0E0C               	movlw	12
   890  000DC0  EC63  F006         	call	_ENVIA_LCD_CMD
   891  000DC4                     l44:
   892  000DC4  0012               	return		;funcret
   893  000DC6                     __end_of_CURSOR_ONOFF:
   894                           	callstack 0
   895                           
   896 ;; *************** function _CURSOR_HOME *****************
   897 ;; Defined at:
   898 ;;		line 34 in file "LCD.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   912 ;;      Params:         0       0       0       0       0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    6
   919 ;; This function calls:
   920 ;;		_ENVIA_LCD_CMD
   921 ;; This function is called by:
   922 ;;		_lcd_init
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text4
   927  000E26                     __ptext4:
   928                           	callstack 0
   929  000E26                     _CURSOR_HOME:
   930                           	callstack 23
   931  000E26                     
   932                           ;LCD.c: 36:  ENVIA_LCD_CMD(0x02);
   933  000E26  0E02               	movlw	2
   934  000E28  EC63  F006         	call	_ENVIA_LCD_CMD
   935  000E2C  0012               	return		;funcret
   936  000E2E                     __end_of_CURSOR_HOME:
   937                           	callstack 0
   938                           
   939 ;; *************** function _BORRAR_LCD *****************
   940 ;; Defined at:
   941 ;;		line 71 in file "LCD.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       0       0       0       0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    6
   962 ;; This function calls:
   963 ;;		_ENVIA_LCD_CMD
   964 ;; This function is called by:
   965 ;;		_lcd_init
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text5
   970  000E2E                     __ptext5:
   971                           	callstack 0
   972  000E2E                     _BORRAR_LCD:
   973                           	callstack 23
   974  000E2E                     
   975                           ;LCD.c: 73:  ENVIA_LCD_CMD(0x01);
   976  000E2E  0E01               	movlw	1
   977  000E30  EC63  F006         	call	_ENVIA_LCD_CMD
   978  000E34  0012               	return		;funcret
   979  000E36                     __end_of_BORRAR_LCD:
   980                           	callstack 0
   981                           
   982 ;; *************** function _init_conf *****************
   983 ;; Defined at:
   984 ;;		line 37 in file "maincode3.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         0       0       0       0       0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1001 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        0 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    4
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text6
  1013  000E36                     __ptext6:
  1014                           	callstack 0
  1015  000E36                     _init_conf:
  1016                           	callstack 26
  1017  000E36                     
  1018                           ;maincode3.c: 38:     INTCON = 0x90;
  1019  000E36  0E90               	movlw	144
  1020  000E38  6EF2               	movwf	242,c	;volatile
  1021  000E3A  0012               	return		;funcret
  1022  000E3C                     __end_of_init_conf:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _POS_CURSOR *****************
  1026 ;; Defined at:
  1027 ;;		line 6 in file "LCD.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  fila            1    wreg     unsigned char 
  1030 ;;  columna         1   16[COMRAM] unsigned char 
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  fila            1   17[COMRAM] unsigned char 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         1       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        2 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; Hardware stack levels required when called:    6
  1049 ;; This function calls:
  1050 ;;		_ENVIA_LCD_CMD
  1051 ;; This function is called by:
  1052 ;;		_main
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text7
  1057  000B0A                     __ptext7:
  1058                           	callstack 0
  1059  000B0A                     _POS_CURSOR:
  1060                           	callstack 24
  1061                           
  1062                           ;incstack = 0
  1063                           ;POS_CURSOR@fila stored from wreg
  1064  000B0A  6E12               	movwf	POS_CURSOR@fila^0,c
  1065  000B0C                     
  1066                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1067  000B0C  0412               	decf	POS_CURSOR@fila^0,w,c
  1068  000B0E  A4D8               	btfss	status,2,c
  1069  000B10  EF8C  F005         	goto	u281
  1070  000B14  EF8E  F005         	goto	u280
  1071  000B18                     u281:
  1072  000B18  EF94  F005         	goto	l1425
  1073  000B1C                     u280:
  1074  000B1C                     
  1075                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1076  000B1C  5011               	movf	POS_CURSOR@columna^0,w,c
  1077  000B1E  0F80               	addlw	128
  1078  000B20  EC63  F006         	call	_ENVIA_LCD_CMD
  1079                           
  1080                           ;LCD.c: 11:  }
  1081  000B24  EFB0  F005         	goto	l26
  1082  000B28                     l1425:
  1083  000B28  0E02               	movlw	2
  1084  000B2A  1812               	xorwf	POS_CURSOR@fila^0,w,c
  1085  000B2C  A4D8               	btfss	status,2,c
  1086  000B2E  EF9B  F005         	goto	u291
  1087  000B32  EF9D  F005         	goto	u290
  1088  000B36                     u291:
  1089  000B36  EFA3  F005         	goto	l1429
  1090  000B3A                     u290:
  1091  000B3A                     
  1092                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1093  000B3A  5011               	movf	POS_CURSOR@columna^0,w,c
  1094  000B3C  0FC0               	addlw	192
  1095  000B3E  EC63  F006         	call	_ENVIA_LCD_CMD
  1096                           
  1097                           ;LCD.c: 15:  }
  1098  000B42  EFB0  F005         	goto	l26
  1099  000B46                     l1429:
  1100  000B46  0E03               	movlw	3
  1101  000B48  1812               	xorwf	POS_CURSOR@fila^0,w,c
  1102  000B4A  A4D8               	btfss	status,2,c
  1103  000B4C  EFAA  F005         	goto	u301
  1104  000B50  EFAC  F005         	goto	u300
  1105  000B54                     u301:
  1106  000B54  EFB0  F005         	goto	l26
  1107  000B58                     u300:
  1108  000B58                     
  1109                           ;LCD.c: 17:  {;LCD.c: 18:   ENVIA_LCD_CMD(0x94+columna);
  1110  000B58  5011               	movf	POS_CURSOR@columna^0,w,c
  1111  000B5A  0F94               	addlw	148
  1112  000B5C  EC63  F006         	call	_ENVIA_LCD_CMD
  1113  000B60                     l26:
  1114  000B60  0012               	return		;funcret
  1115  000B62                     __end_of_POS_CURSOR:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _ENVIA_LCD_CMD *****************
  1119 ;; Defined at:
  1120 ;;		line 108 in file "LCD.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  dato            1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  dato            1   14[COMRAM] unsigned char 
  1125 ;;  aux             1   15[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        2 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    5
  1142 ;; This function calls:
  1143 ;;		_ENVIA_NIBBLE
  1144 ;;		_LEER_LCD
  1145 ;; This function is called by:
  1146 ;;		_POS_CURSOR
  1147 ;;		_CURSOR_HOME
  1148 ;;		_CURSOR_ONOFF
  1149 ;;		_BORRAR_LCD
  1150 ;;		_LCD_CONFIG
  1151 ;;		_BLINK_CURSOR
  1152 ;;		_DISPLAY_ONOFF
  1153 ;;		_GENERACARACTER
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text8
  1158  000CC6                     __ptext8:
  1159                           	callstack 0
  1160  000CC6                     _ENVIA_LCD_CMD:
  1161                           	callstack 23
  1162                           
  1163                           ;incstack = 0
  1164                           ;ENVIA_LCD_CMD@dato stored from wreg
  1165  000CC6  6E0F               	movwf	ENVIA_LCD_CMD@dato^0,c
  1166  000CC8                     
  1167                           ;LCD.c: 108: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 109: {;LCD.c: 110:  unsigned 
      +                          char aux;;LCD.c: 111:  LATDbits.LATD0 = 0;
  1168  000CC8  908C               	bcf	140,0,c	;volatile
  1169  000CCA                     
  1170                           ;LCD.c: 112:  LEER_LCD();
  1171  000CCA  ECB0  F004         	call	_LEER_LCD	;wreg free
  1172  000CCE                     
  1173                           ;LCD.c: 113:  TRISD = 0b00000000;
  1174  000CCE  0E00               	movlw	0
  1175  000CD0  6E95               	movwf	149,c	;volatile
  1176  000CD2                     
  1177                           ;LCD.c: 115:         _delay(1200);
  1178  000CD2  0EF0               	movlw	240
  1179  000CD4                     u537:
  1180  000CD4  D000               	nop2	
  1181  000CD6  2EE8               	decfsz	wreg,f,c
  1182  000CD8  D7FD               	bra	u537
  1183  000CDA                     
  1184                           ;LCD.c: 116:         LATDbits.LATD1 = 0;
  1185  000CDA  928C               	bcf	140,1,c	;volatile
  1186  000CDC                     
  1187                           ;LCD.c: 117:  LATDbits.LATD2 = 0;
  1188  000CDC  948C               	bcf	140,2,c	;volatile
  1189  000CDE                     
  1190                           ;LCD.c: 118:  LATDbits.LATD0 = 0;
  1191  000CDE  908C               	bcf	140,0,c	;volatile
  1192  000CE0                     
  1193                           ;LCD.c: 119:  aux = dato & 0xF0;
  1194  000CE0  500F               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1195  000CE2  0BF0               	andlw	240
  1196  000CE4  6E10               	movwf	ENVIA_LCD_CMD@aux^0,c
  1197  000CE6                     
  1198                           ;LCD.c: 120:  ENVIA_NIBBLE(aux);
  1199  000CE6  5010               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1200  000CE8  ECF7  F006         	call	_ENVIA_NIBBLE
  1201  000CEC                     
  1202                           ;LCD.c: 121:  aux = dato<<4;
  1203  000CEC  380F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1204  000CEE  0BF0               	andlw	240
  1205  000CF0  6E10               	movwf	ENVIA_LCD_CMD@aux^0,c
  1206  000CF2                     
  1207                           ;LCD.c: 122:  ENVIA_NIBBLE(aux);
  1208  000CF2  5010               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1209  000CF4  ECF7  F006         	call	_ENVIA_NIBBLE
  1210  000CF8  0012               	return		;funcret
  1211  000CFA                     __end_of_ENVIA_LCD_CMD:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _ESCRIBE_MENSAJE *****************
  1215 ;; Defined at:
  1216 ;;		line 45 in file "LCD.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  cadena          2   16[COMRAM] PTR const unsigned char 
  1219 ;;		 -> STR_3(8), STR_2(8), STR_1(16), 
  1220 ;;  tam             1   18[COMRAM] unsigned char 
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  i               1   21[COMRAM] unsigned char 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1232 ;;      Params:         3       0       0       0       0       0       0       0       0
  1233 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1234 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1235 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1236 ;;Total ram usage:        6 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    6
  1239 ;; This function calls:
  1240 ;;		_ENVIA_CHAR
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text9
  1247  000C4A                     __ptext9:
  1248                           	callstack 0
  1249  000C4A                     _ESCRIBE_MENSAJE:
  1250                           	callstack 24
  1251  000C4A                     
  1252                           ;LCD.c: 45: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 46: {;LCD.
      +                          c: 47:  unsigned char i = 0;
  1253  000C4A  0E00               	movlw	0
  1254  000C4C  6E16               	movwf	ESCRIBE_MENSAJE@i^0,c
  1255                           
  1256                           ;LCD.c: 48:  for(i = 0; i<tam; i++)
  1257  000C4E  0E00               	movlw	0
  1258  000C50  6E16               	movwf	ESCRIBE_MENSAJE@i^0,c
  1259  000C52  EF3A  F006         	goto	l1439
  1260  000C56                     l1435:
  1261                           
  1262                           ;LCD.c: 49:  {;LCD.c: 50:   ENVIA_CHAR(cadena[i]);
  1263  000C56  5016               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1264  000C58  2411               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1265  000C5A  6E14               	movwf	??_ESCRIBE_MENSAJE^0,c
  1266  000C5C  0E00               	movlw	0
  1267  000C5E  2012               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1268  000C60  6E15               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1269  000C62  C014  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1270  000C66  C015  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1271  000C6A                     	if	0	;tblptru may be non-zero
  1272  000C6A                     	endif
  1273  000C6A                     	if	0	;tblptru may be non-zero
  1274  000C6A                     	endif
  1275  000C6A  0008               	tblrd		*
  1276  000C6C  50F5               	movf	tablat,w,c
  1277  000C6E  EC7D  F006         	call	_ENVIA_CHAR
  1278  000C72                     
  1279                           ;LCD.c: 51:  }
  1280  000C72  2A16               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1281  000C74                     l1439:
  1282  000C74  5013               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1283  000C76  5C16               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1284  000C78  A0D8               	btfss	status,0,c
  1285  000C7A  EF41  F006         	goto	u311
  1286  000C7E  EF43  F006         	goto	u310
  1287  000C82                     u311:
  1288  000C82  EF2B  F006         	goto	l1435
  1289  000C86                     u310:
  1290  000C86  0012               	return		;funcret
  1291  000C88                     __end_of_ESCRIBE_MENSAJE:
  1292                           	callstack 0
  1293                           
  1294 ;; *************** function _ENVIA_CHAR *****************
  1295 ;; Defined at:
  1296 ;;		line 54 in file "LCD.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  dato            1    wreg     unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  dato            1   14[COMRAM] unsigned char 
  1301 ;;  aux             1   15[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1311 ;;      Params:         0       0       0       0       0       0       0       0       0
  1312 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1314 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1315 ;;Total ram usage:        2 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    5
  1318 ;; This function calls:
  1319 ;;		_ENVIA_NIBBLE
  1320 ;;		_LEER_LCD
  1321 ;; This function is called by:
  1322 ;;		_ESCRIBE_MENSAJE
  1323 ;;		_main
  1324 ;;		_GENERACARACTER
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text10
  1329  000CFA                     __ptext10:
  1330                           	callstack 0
  1331  000CFA                     _ENVIA_CHAR:
  1332                           	callstack 24
  1333                           
  1334                           ;incstack = 0
  1335                           ;ENVIA_CHAR@dato stored from wreg
  1336  000CFA  6E0F               	movwf	ENVIA_CHAR@dato^0,c
  1337  000CFC                     
  1338                           ;LCD.c: 54: void ENVIA_CHAR(unsigned char dato);LCD.c: 55: {;LCD.c: 56:  unsigned char a
      +                          ux;;LCD.c: 57:  LATDbits.LATD0 = 1;
  1339  000CFC  808C               	bsf	140,0,c	;volatile
  1340  000CFE                     
  1341                           ;LCD.c: 58:  LEER_LCD();
  1342  000CFE  ECB0  F004         	call	_LEER_LCD	;wreg free
  1343  000D02                     
  1344                           ;LCD.c: 59:  TRISD = 0x00;
  1345  000D02  0E00               	movlw	0
  1346  000D04  6E95               	movwf	149,c	;volatile
  1347  000D06                     
  1348                           ;LCD.c: 60:         _delay(1200);
  1349  000D06  0EF0               	movlw	240
  1350  000D08                     u547:
  1351  000D08  D000               	nop2	
  1352  000D0A  2EE8               	decfsz	wreg,f,c
  1353  000D0C  D7FD               	bra	u547
  1354  000D0E                     
  1355                           ;LCD.c: 62:  LATDbits.LATD1 = 0;
  1356  000D0E  928C               	bcf	140,1,c	;volatile
  1357  000D10                     
  1358                           ;LCD.c: 63:  LATDbits.LATD2 = 0;
  1359  000D10  948C               	bcf	140,2,c	;volatile
  1360  000D12                     
  1361                           ;LCD.c: 64:  LATDbits.LATD0 = 1;
  1362  000D12  808C               	bsf	140,0,c	;volatile
  1363  000D14                     
  1364                           ;LCD.c: 65:  aux = dato & 0xF0;
  1365  000D14  500F               	movf	ENVIA_CHAR@dato^0,w,c
  1366  000D16  0BF0               	andlw	240
  1367  000D18  6E10               	movwf	ENVIA_CHAR@aux^0,c
  1368  000D1A                     
  1369                           ;LCD.c: 66:  ENVIA_NIBBLE(aux);
  1370  000D1A  5010               	movf	ENVIA_CHAR@aux^0,w,c
  1371  000D1C  ECF7  F006         	call	_ENVIA_NIBBLE
  1372  000D20                     
  1373                           ;LCD.c: 67:  aux = dato << 4;
  1374  000D20  380F               	swapf	ENVIA_CHAR@dato^0,w,c
  1375  000D22  0BF0               	andlw	240
  1376  000D24  6E10               	movwf	ENVIA_CHAR@aux^0,c
  1377  000D26                     
  1378                           ;LCD.c: 68:  ENVIA_NIBBLE(aux);
  1379  000D26  5010               	movf	ENVIA_CHAR@aux^0,w,c
  1380  000D28  ECF7  F006         	call	_ENVIA_NIBBLE
  1381  000D2C  0012               	return		;funcret
  1382  000D2E                     __end_of_ENVIA_CHAR:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _LEER_LCD *****************
  1386 ;; Defined at:
  1387 ;;		line 125 in file "LCD.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  aux             1   13[COMRAM] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0
  1402 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1404 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1405 ;;Total ram usage:        1 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    4
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_ENVIA_CHAR
  1412 ;;		_ENVIA_LCD_CMD
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text11
  1417  000960                     __ptext11:
  1418                           	callstack 0
  1419  000960                     _LEER_LCD:
  1420                           	callstack 23
  1421  000960                     
  1422                           ;LCD.c: 127:  unsigned char aux;;LCD.c: 128:  TRISD = 0xF8;
  1423  000960  0EF8               	movlw	248
  1424  000962  6E95               	movwf	149,c	;volatile
  1425  000964                     
  1426                           ;LCD.c: 129:  LATDbits.LATD0 = 0;
  1427  000964  908C               	bcf	140,0,c	;volatile
  1428  000966                     
  1429                           ;LCD.c: 130:  LATDbits.LATD1 = 1;
  1430  000966  828C               	bsf	140,1,c	;volatile
  1431  000968                     
  1432                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  1433  000968  848C               	bsf	140,2,c	;volatile
  1434  00096A                     
  1435                           ;LCD.c: 132:         _delay(1200);
  1436  00096A  0EF0               	movlw	240
  1437  00096C                     u557:
  1438  00096C  D000               	nop2	
  1439  00096E  2EE8               	decfsz	wreg,f,c
  1440  000970  D7FD               	bra	u557
  1441  000972                     
  1442                           ;LCD.c: 134:  aux = PORTD;
  1443  000972  CF83 F00E          	movff	3971,LEER_LCD@aux	;volatile
  1444  000976                     
  1445                           ;LCD.c: 135:  LATDbits.LATD2 = 0;
  1446  000976  948C               	bcf	140,2,c	;volatile
  1447  000978                     
  1448                           ;LCD.c: 136:         _delay(1200);
  1449  000978  0EF0               	movlw	240
  1450  00097A                     u567:
  1451  00097A  D000               	nop2	
  1452  00097C  2EE8               	decfsz	wreg,f,c
  1453  00097E  D7FD               	bra	u567
  1454  000980                     
  1455                           ;LCD.c: 138:  LATDbits.LATD2 = 1;
  1456  000980  848C               	bsf	140,2,c	;volatile
  1457  000982                     
  1458                           ;LCD.c: 139:         _delay(1200);
  1459  000982  0EF0               	movlw	240
  1460  000984                     u577:
  1461  000984  D000               	nop2	
  1462  000986  2EE8               	decfsz	wreg,f,c
  1463  000988  D7FD               	bra	u577
  1464  00098A                     
  1465                           ;LCD.c: 141:  LATDbits.LATD2 = 0;
  1466  00098A  948C               	bcf	140,2,c	;volatile
  1467  00098C                     l1227:
  1468                           
  1469                           ;LCD.c: 142:  aux = aux & 0x80;
  1470  00098C  500E               	movf	LEER_LCD@aux^0,w,c
  1471  00098E  0B80               	andlw	128
  1472  000990  6E0E               	movwf	LEER_LCD@aux^0,c
  1473                           
  1474                           ;LCD.c: 143:  while(aux == 0x80)
  1475  000992  EFDF  F004         	goto	l1241
  1476  000996                     l69:
  1477                           
  1478                           ;LCD.c: 144:         {;LCD.c: 145:             LATDbits.LATD2 = 1;
  1479  000996  848C               	bsf	140,2,c	;volatile
  1480  000998                     
  1481                           ;LCD.c: 146:             _delay(1200);
  1482  000998  0EF0               	movlw	240
  1483  00099A                     u587:
  1484  00099A  D000               	nop2	
  1485  00099C  2EE8               	decfsz	wreg,f,c
  1486  00099E  D7FD               	bra	u587
  1487  0009A0                     
  1488                           ;LCD.c: 147:             aux = PORTD;
  1489  0009A0  CF83 F00E          	movff	3971,LEER_LCD@aux	;volatile
  1490  0009A4                     
  1491                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1492  0009A4  948C               	bcf	140,2,c	;volatile
  1493                           
  1494                           ;LCD.c: 149:             _delay(1200);
  1495  0009A6  0EF0               	movlw	240
  1496  0009A8                     u597:
  1497  0009A8  D000               	nop2	
  1498  0009AA  2EE8               	decfsz	wreg,f,c
  1499  0009AC  D7FD               	bra	u597
  1500  0009AE                     
  1501                           ;LCD.c: 150:             LATDbits.LATD2 = 1;
  1502  0009AE  848C               	bsf	140,2,c	;volatile
  1503                           
  1504                           ;LCD.c: 151:             _delay(1200);
  1505  0009B0  0EF0               	movlw	240
  1506  0009B2                     u607:
  1507  0009B2  D000               	nop2	
  1508  0009B4  2EE8               	decfsz	wreg,f,c
  1509  0009B6  D7FD               	bra	u607
  1510  0009B8                     
  1511                           ;LCD.c: 152:             LATDbits.LATD2 = 0;
  1512  0009B8  948C               	bcf	140,2,c	;volatile
  1513  0009BA  EFC6  F004         	goto	l1227
  1514  0009BE                     l1241:
  1515                           
  1516                           ;LCD.c: 143:  while(aux == 0x80)
  1517  0009BE  0E80               	movlw	128
  1518  0009C0  180E               	xorwf	LEER_LCD@aux^0,w,c
  1519  0009C2  B4D8               	btfsc	status,2,c
  1520  0009C4  EFE6  F004         	goto	u241
  1521  0009C8  EFE8  F004         	goto	u240
  1522  0009CC                     u241:
  1523  0009CC  EFCB  F004         	goto	l69
  1524  0009D0                     u240:
  1525  0009D0  0012               	return		;funcret
  1526  0009D2                     __end_of_LEER_LCD:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _ENVIA_NIBBLE *****************
  1530 ;; Defined at:
  1531 ;;		line 97 in file "LCD.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  dato            1    wreg     unsigned char 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  dato            1   13[COMRAM] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1545 ;;      Params:         0       0       0       0       0       0       0       0       0
  1546 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1549 ;;Total ram usage:        1 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    4
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_ENVIA_CHAR
  1556 ;;		_LCD_CONFIG
  1557 ;;		_ENVIA_LCD_CMD
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text12
  1562  000DEE                     __ptext12:
  1563                           	callstack 0
  1564  000DEE                     _ENVIA_NIBBLE:
  1565                           	callstack 24
  1566                           
  1567                           ;incstack = 0
  1568                           ;ENVIA_NIBBLE@dato stored from wreg
  1569  000DEE  6E0E               	movwf	ENVIA_NIBBLE@dato^0,c
  1570  000DF0                     
  1571                           ;LCD.c: 97: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 98: {;LCD.c: 99:  LATD &= 0x0F;
  1572  000DF0  0E0F               	movlw	15
  1573  000DF2  168C               	andwf	140,f,c	;volatile
  1574                           
  1575                           ;LCD.c: 100:  dato &= 0xF0;
  1576  000DF4  0EF0               	movlw	240
  1577  000DF6  160E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1578                           
  1579                           ;LCD.c: 101:  LATD|= dato;
  1580  000DF8  500E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1581  000DFA  128C               	iorwf	140,f,c	;volatile
  1582  000DFC                     
  1583                           ;LCD.c: 102:  LATDbits.LATD2 = 1;
  1584  000DFC  848C               	bsf	140,2,c	;volatile
  1585  000DFE                     
  1586                           ;LCD.c: 104:         _delay(1200);
  1587  000DFE  0EF0               	movlw	240
  1588  000E00                     u617:
  1589  000E00  D000               	nop2	
  1590  000E02  2EE8               	decfsz	wreg,f,c
  1591  000E04  D7FD               	bra	u617
  1592  000E06                     
  1593                           ;LCD.c: 105:  LATDbits.LATD2 = 0;
  1594  000E06  948C               	bcf	140,2,c	;volatile
  1595  000E08  0012               	return		;funcret
  1596  000E0A                     __end_of_ENVIA_NIBBLE:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _INT0_ISR *****************
  1600 ;; Defined at:
  1601 ;;		line 71 in file "maincode3.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1617 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1618 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        4 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    3
  1622 ;; This function calls:
  1623 ;;		i2_ENVIA_CHAR
  1624 ;;		i2_ESCRIBE_MENSAJE
  1625 ;;		i2_POS_CURSOR
  1626 ;; This function is called by:
  1627 ;;		Interrupt level 2
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	intcode
  1632  000008                     __pintcode:
  1633                           	callstack 0
  1634  000008                     _INT0_ISR:
  1635                           	callstack 23
  1636                           
  1637                           ;incstack = 0
  1638  000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1639  00000A  ED22  F005         	call	int_func,f	;refresh shadow registers
  1640                           
  1641                           	psect	intcode_body
  1642  000A44                     __pintcode_body:
  1643                           	callstack 23
  1644  000A44                     int_func:
  1645                           	callstack 23
  1646  000A44  0006               	pop		; remove dummy address from shadow register refresh
  1647  000A46  CFF6 F00A          	movff	tblptrl,??_INT0_ISR
  1648  000A4A  CFF7 F00B          	movff	tblptrh,??_INT0_ISR+1
  1649  000A4E  CFF8 F00C          	movff	tblptru,??_INT0_ISR+2
  1650  000A52  CFF5 F00D          	movff	tablat,??_INT0_ISR+3
  1651  000A56                     
  1652                           ;maincode3.c: 72:     if (estado == 0){
  1653  000A56  5029               	movf	_estado^0,w,c
  1654  000A58  A4D8               	btfss	status,2,c
  1655  000A5A  EF31  F005         	goto	i2u46_41
  1656  000A5E  EF33  F005         	goto	i2u46_40
  1657  000A62                     i2u46_41:
  1658  000A62  EF37  F005         	goto	i2l1579
  1659  000A66                     i2u46_40:
  1660  000A66                     
  1661                           ;maincode3.c: 73:         estado = 1;
  1662  000A66  0E01               	movlw	1
  1663  000A68  6E29               	movwf	_estado^0,c
  1664                           
  1665                           ;maincode3.c: 74:     }
  1666  000A6A  EF39  F005         	goto	i2l1581
  1667  000A6E                     i2l1579:
  1668                           
  1669                           ;maincode3.c: 76:         estado = 0;
  1670  000A6E  0E00               	movlw	0
  1671  000A70  6E29               	movwf	_estado^0,c
  1672  000A72                     i2l1581:
  1673                           
  1674                           ;maincode3.c: 78:     POS_CURSOR(3,0);
  1675  000A72  0E00               	movlw	0
  1676  000A74  6E04               	movwf	i2POS_CURSOR@columna^0,c
  1677  000A76  0E03               	movlw	3
  1678  000A78  ECB1  F005         	call	i2_POS_CURSOR
  1679  000A7C                     
  1680                           ;maincode3.c: 79:     ESCRIBE_MENSAJE("Estado:",7);
  1681  000A7C  0E11               	movlw	low STR_2
  1682  000A7E  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  1683  000A80  0E08               	movlw	high STR_2
  1684  000A82  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  1685  000A84  0E07               	movlw	7
  1686  000A86  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  1687  000A88  EC44  F006         	call	i2_ESCRIBE_MENSAJE	;wreg free
  1688  000A8C                     
  1689                           ;maincode3.c: 80:     ENVIA_CHAR(estado+0x30);
  1690  000A8C  5029               	movf	_estado^0,w,c
  1691  000A8E  0F30               	addlw	48
  1692  000A90  ECB1  F006         	call	i2_ENVIA_CHAR
  1693  000A94                     
  1694                           ;maincode3.c: 81:     INTCONbits.INT0IF = 0;
  1695  000A94  92F2               	bcf	242,1,c	;volatile
  1696  000A96  C00D  FFF5         	movff	??_INT0_ISR+3,tablat
  1697  000A9A  C00C  FFF8         	movff	??_INT0_ISR+2,tblptru
  1698  000A9E  C00B  FFF7         	movff	??_INT0_ISR+1,tblptrh
  1699  000AA2  C00A  FFF6         	movff	??_INT0_ISR,tblptrl
  1700  000AA6  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1701  000AA8  0011               	retfie		f
  1702  000AAA                     __end_of_INT0_ISR:
  1703                           	callstack 0
  1704                           
  1705 ;; *************** function i2_POS_CURSOR *****************
  1706 ;; Defined at:
  1707 ;;		line 6 in file "LCD.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  fila            1    wreg     unsigned char 
  1710 ;;  columna         1    3[COMRAM] unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  fila            1    4[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         1       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        2 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    2
  1729 ;; This function calls:
  1730 ;;		i2_ENVIA_LCD_CMD
  1731 ;; This function is called by:
  1732 ;;		_INT0_ISR
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text14
  1737  000B62                     __ptext14:
  1738                           	callstack 0
  1739  000B62                     i2_POS_CURSOR:
  1740                           	callstack 23
  1741                           
  1742                           ;incstack = 0
  1743                           ;i2POS_CURSOR@fila stored from wreg
  1744  000B62  6E05               	movwf	i2POS_CURSOR@fila^0,c
  1745  000B64                     
  1746                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1747  000B64  0405               	decf	i2POS_CURSOR@fila^0,w,c
  1748  000B66  A4D8               	btfss	status,2,c
  1749  000B68  EFB8  F005         	goto	i2u32_41
  1750  000B6C  EFBA  F005         	goto	i2u32_40
  1751  000B70                     i2u32_41:
  1752  000B70  EFC0  F005         	goto	i2l1459
  1753  000B74                     i2u32_40:
  1754  000B74                     
  1755                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1756  000B74  5004               	movf	i2POS_CURSOR@columna^0,w,c
  1757  000B76  0F80               	addlw	128
  1758  000B78  EC97  F006         	call	i2_ENVIA_LCD_CMD
  1759                           
  1760                           ;LCD.c: 11:  }
  1761  000B7C  EFDC  F005         	goto	i2l26
  1762  000B80                     i2l1459:
  1763  000B80  0E02               	movlw	2
  1764  000B82  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  1765  000B84  A4D8               	btfss	status,2,c
  1766  000B86  EFC7  F005         	goto	i2u33_41
  1767  000B8A  EFC9  F005         	goto	i2u33_40
  1768  000B8E                     i2u33_41:
  1769  000B8E  EFCF  F005         	goto	i2l1463
  1770  000B92                     i2u33_40:
  1771  000B92                     
  1772                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1773  000B92  5004               	movf	i2POS_CURSOR@columna^0,w,c
  1774  000B94  0FC0               	addlw	192
  1775  000B96  EC97  F006         	call	i2_ENVIA_LCD_CMD
  1776                           
  1777                           ;LCD.c: 15:  }
  1778  000B9A  EFDC  F005         	goto	i2l26
  1779  000B9E                     i2l1463:
  1780  000B9E  0E03               	movlw	3
  1781  000BA0  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  1782  000BA2  A4D8               	btfss	status,2,c
  1783  000BA4  EFD6  F005         	goto	i2u34_41
  1784  000BA8  EFD8  F005         	goto	i2u34_40
  1785  000BAC                     i2u34_41:
  1786  000BAC  EFDC  F005         	goto	i2l26
  1787  000BB0                     i2u34_40:
  1788  000BB0                     
  1789                           ;LCD.c: 17:  {;LCD.c: 18:   ENVIA_LCD_CMD(0x94+columna);
  1790  000BB0  5004               	movf	i2POS_CURSOR@columna^0,w,c
  1791  000BB2  0F94               	addlw	148
  1792  000BB4  EC97  F006         	call	i2_ENVIA_LCD_CMD
  1793  000BB8                     i2l26:
  1794  000BB8  0012               	return		;funcret
  1795  000BBA                     __end_ofi2_POS_CURSOR:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function i2_ENVIA_LCD_CMD *****************
  1799 ;; Defined at:
  1800 ;;		line 108 in file "LCD.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  dato            1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  dato            1    1[COMRAM] unsigned char 
  1805 ;;  aux             1    2[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0
  1816 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		i2_ENVIA_NIBBLE
  1824 ;;		i2_LEER_LCD
  1825 ;; This function is called by:
  1826 ;;		i2_POS_CURSOR
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text15
  1831  000D2E                     __ptext15:
  1832                           	callstack 0
  1833  000D2E                     i2_ENVIA_LCD_CMD:
  1834                           	callstack 23
  1835                           
  1836                           ;incstack = 0
  1837                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  1838  000D2E  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  1839  000D30                     
  1840                           ;LCD.c: 108: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 109: {;LCD.c: 110:  unsigned 
      +                          char aux;;LCD.c: 111:  LATDbits.LATD0 = 0;
  1841  000D30  908C               	bcf	140,0,c	;volatile
  1842  000D32                     
  1843                           ;LCD.c: 112:  LEER_LCD();
  1844  000D32  ECE9  F004         	call	i2_LEER_LCD	;wreg free
  1845  000D36                     
  1846                           ;LCD.c: 113:  TRISD = 0b00000000;
  1847  000D36  0E00               	movlw	0
  1848  000D38  6E95               	movwf	149,c	;volatile
  1849  000D3A                     
  1850                           ;LCD.c: 115:         _delay(1200);
  1851  000D3A  0EF0               	movlw	240
  1852  000D3C                     i2u62_47:
  1853  000D3C  D000               	nop2	
  1854  000D3E  2EE8               	decfsz	wreg,f,c
  1855  000D40  D7FD               	bra	i2u62_47
  1856  000D42                     
  1857                           ;LCD.c: 116:         LATDbits.LATD1 = 0;
  1858  000D42  928C               	bcf	140,1,c	;volatile
  1859  000D44                     
  1860                           ;LCD.c: 117:  LATDbits.LATD2 = 0;
  1861  000D44  948C               	bcf	140,2,c	;volatile
  1862  000D46                     
  1863                           ;LCD.c: 118:  LATDbits.LATD0 = 0;
  1864  000D46  908C               	bcf	140,0,c	;volatile
  1865  000D48                     
  1866                           ;LCD.c: 119:  aux = dato & 0xF0;
  1867  000D48  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  1868  000D4A  0BF0               	andlw	240
  1869  000D4C  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  1870  000D4E                     
  1871                           ;LCD.c: 120:  ENVIA_NIBBLE(aux);
  1872  000D4E  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  1873  000D50  EC05  F007         	call	i2_ENVIA_NIBBLE
  1874  000D54                     
  1875                           ;LCD.c: 121:  aux = dato<<4;
  1876  000D54  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  1877  000D56  0BF0               	andlw	240
  1878  000D58  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  1879  000D5A                     
  1880                           ;LCD.c: 122:  ENVIA_NIBBLE(aux);
  1881  000D5A  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  1882  000D5C  EC05  F007         	call	i2_ENVIA_NIBBLE
  1883  000D60  0012               	return		;funcret
  1884  000D62                     __end_ofi2_ENVIA_LCD_CMD:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function i2_ESCRIBE_MENSAJE *****************
  1888 ;; Defined at:
  1889 ;;		line 45 in file "LCD.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1892 ;;		 -> STR_3(8), STR_2(8), STR_1(16), 
  1893 ;;  tam             1    5[COMRAM] unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  i               1    8[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1905 ;;      Params:         3       0       0       0       0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1907 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1908 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1909 ;;Total ram usage:        6 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    2
  1912 ;; This function calls:
  1913 ;;		i2_ENVIA_CHAR
  1914 ;; This function is called by:
  1915 ;;		_INT0_ISR
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text16
  1920  000C88                     __ptext16:
  1921                           	callstack 0
  1922  000C88                     i2_ESCRIBE_MENSAJE:
  1923                           	callstack 23
  1924  000C88                     
  1925                           ;LCD.c: 45: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 46: {;LCD.
      +                          c: 47:  unsigned char i = 0;
  1926  000C88  0E00               	movlw	0
  1927  000C8A  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  1928                           
  1929                           ;LCD.c: 48:  for(i = 0; i<tam; i++)
  1930  000C8C  0E00               	movlw	0
  1931  000C8E  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  1932  000C90  EF59  F006         	goto	i2l1473
  1933  000C94                     i2l1469:
  1934                           
  1935                           ;LCD.c: 49:  {;LCD.c: 50:   ENVIA_CHAR(cadena[i]);
  1936  000C94  5009               	movf	i2ESCRIBE_MENSAJE@i^0,w,c
  1937  000C96  2404               	addwf	i2ESCRIBE_MENSAJE@cadena^0,w,c
  1938  000C98  6E07               	movwf	??i2_ESCRIBE_MENSAJE^0,c
  1939  000C9A  0E00               	movlw	0
  1940  000C9C  2005               	addwfc	(i2ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1941  000C9E  6E08               	movwf	(??i2_ESCRIBE_MENSAJE+1)^0,c
  1942  000CA0  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE,tblptrl
  1943  000CA4  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE+1,tblptrh
  1944  000CA8                     	if	0	;tblptru may be non-zero
  1945  000CA8                     	endif
  1946  000CA8                     	if	0	;tblptru may be non-zero
  1947  000CA8                     	endif
  1948  000CA8  0008               	tblrd		*
  1949  000CAA  50F5               	movf	tablat,w,c
  1950  000CAC  ECB1  F006         	call	i2_ENVIA_CHAR
  1951  000CB0                     
  1952                           ;LCD.c: 51:  }
  1953  000CB0  2A09               	incf	i2ESCRIBE_MENSAJE@i^0,f,c
  1954  000CB2                     i2l1473:
  1955  000CB2  5006               	movf	i2ESCRIBE_MENSAJE@tam^0,w,c
  1956  000CB4  5C09               	subwf	i2ESCRIBE_MENSAJE@i^0,w,c
  1957  000CB6  A0D8               	btfss	status,0,c
  1958  000CB8  EF60  F006         	goto	i2u35_41
  1959  000CBC  EF62  F006         	goto	i2u35_40
  1960  000CC0                     i2u35_41:
  1961  000CC0  EF4A  F006         	goto	i2l1469
  1962  000CC4                     i2u35_40:
  1963  000CC4  0012               	return		;funcret
  1964  000CC6                     __end_ofi2_ESCRIBE_MENSAJE:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function i2_ENVIA_CHAR *****************
  1968 ;; Defined at:
  1969 ;;		line 54 in file "LCD.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  dato            1    wreg     unsigned char 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  dato            1    1[COMRAM] unsigned char 
  1974 ;;  aux             1    2[COMRAM] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0
  1985 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1987 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1988 ;;Total ram usage:        2 bytes
  1989 ;; Hardware stack levels used:    1
  1990 ;; Hardware stack levels required when called:    1
  1991 ;; This function calls:
  1992 ;;		i2_ENVIA_NIBBLE
  1993 ;;		i2_LEER_LCD
  1994 ;; This function is called by:
  1995 ;;		_INT0_ISR
  1996 ;;		i2_ESCRIBE_MENSAJE
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text17
  2001  000D62                     __ptext17:
  2002                           	callstack 0
  2003  000D62                     i2_ENVIA_CHAR:
  2004                           	callstack 23
  2005                           
  2006                           ;incstack = 0
  2007                           ;i2ENVIA_CHAR@dato stored from wreg
  2008  000D62  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  2009  000D64                     
  2010                           ;LCD.c: 54: void ENVIA_CHAR(unsigned char dato);LCD.c: 55: {;LCD.c: 56:  unsigned char a
      +                          ux;;LCD.c: 57:  LATDbits.LATD0 = 1;
  2011  000D64  808C               	bsf	140,0,c	;volatile
  2012  000D66                     
  2013                           ;LCD.c: 58:  LEER_LCD();
  2014  000D66  ECE9  F004         	call	i2_LEER_LCD	;wreg free
  2015  000D6A                     
  2016                           ;LCD.c: 59:  TRISD = 0x00;
  2017  000D6A  0E00               	movlw	0
  2018  000D6C  6E95               	movwf	149,c	;volatile
  2019  000D6E                     
  2020                           ;LCD.c: 60:         _delay(1200);
  2021  000D6E  0EF0               	movlw	240
  2022  000D70                     i2u63_47:
  2023  000D70  D000               	nop2	
  2024  000D72  2EE8               	decfsz	wreg,f,c
  2025  000D74  D7FD               	bra	i2u63_47
  2026  000D76                     
  2027                           ;LCD.c: 62:  LATDbits.LATD1 = 0;
  2028  000D76  928C               	bcf	140,1,c	;volatile
  2029  000D78                     
  2030                           ;LCD.c: 63:  LATDbits.LATD2 = 0;
  2031  000D78  948C               	bcf	140,2,c	;volatile
  2032  000D7A                     
  2033                           ;LCD.c: 64:  LATDbits.LATD0 = 1;
  2034  000D7A  808C               	bsf	140,0,c	;volatile
  2035  000D7C                     
  2036                           ;LCD.c: 65:  aux = dato & 0xF0;
  2037  000D7C  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  2038  000D7E  0BF0               	andlw	240
  2039  000D80  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2040  000D82                     
  2041                           ;LCD.c: 66:  ENVIA_NIBBLE(aux);
  2042  000D82  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2043  000D84  EC05  F007         	call	i2_ENVIA_NIBBLE
  2044  000D88                     
  2045                           ;LCD.c: 67:  aux = dato << 4;
  2046  000D88  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  2047  000D8A  0BF0               	andlw	240
  2048  000D8C  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2049  000D8E                     
  2050                           ;LCD.c: 68:  ENVIA_NIBBLE(aux);
  2051  000D8E  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2052  000D90  EC05  F007         	call	i2_ENVIA_NIBBLE
  2053  000D94  0012               	return		;funcret
  2054  000D96                     __end_ofi2_ENVIA_CHAR:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function i2_LEER_LCD *****************
  2058 ;; Defined at:
  2059 ;;		line 125 in file "LCD.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  aux             1    0[COMRAM] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      void 
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2077 ;;Total ram usage:        1 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		i2_ENVIA_CHAR
  2083 ;;		i2_ENVIA_LCD_CMD
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text18
  2088  0009D2                     __ptext18:
  2089                           	callstack 0
  2090  0009D2                     i2_LEER_LCD:
  2091                           	callstack 23
  2092  0009D2                     
  2093                           ;LCD.c: 127:  unsigned char aux;;LCD.c: 128:  TRISD = 0xF8;
  2094  0009D2  0EF8               	movlw	248
  2095  0009D4  6E95               	movwf	149,c	;volatile
  2096  0009D6                     
  2097                           ;LCD.c: 129:  LATDbits.LATD0 = 0;
  2098  0009D6  908C               	bcf	140,0,c	;volatile
  2099  0009D8                     
  2100                           ;LCD.c: 130:  LATDbits.LATD1 = 1;
  2101  0009D8  828C               	bsf	140,1,c	;volatile
  2102  0009DA                     
  2103                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2104  0009DA  848C               	bsf	140,2,c	;volatile
  2105  0009DC                     
  2106                           ;LCD.c: 132:         _delay(1200);
  2107  0009DC  0EF0               	movlw	240
  2108  0009DE                     i2u64_47:
  2109  0009DE  D000               	nop2	
  2110  0009E0  2EE8               	decfsz	wreg,f,c
  2111  0009E2  D7FD               	bra	i2u64_47
  2112  0009E4                     
  2113                           ;LCD.c: 134:  aux = PORTD;
  2114  0009E4  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2115  0009E8                     
  2116                           ;LCD.c: 135:  LATDbits.LATD2 = 0;
  2117  0009E8  948C               	bcf	140,2,c	;volatile
  2118  0009EA                     
  2119                           ;LCD.c: 136:         _delay(1200);
  2120  0009EA  0EF0               	movlw	240
  2121  0009EC                     i2u65_47:
  2122  0009EC  D000               	nop2	
  2123  0009EE  2EE8               	decfsz	wreg,f,c
  2124  0009F0  D7FD               	bra	i2u65_47
  2125  0009F2                     
  2126                           ;LCD.c: 138:  LATDbits.LATD2 = 1;
  2127  0009F2  848C               	bsf	140,2,c	;volatile
  2128  0009F4                     
  2129                           ;LCD.c: 139:         _delay(1200);
  2130  0009F4  0EF0               	movlw	240
  2131  0009F6                     i2u66_47:
  2132  0009F6  D000               	nop2	
  2133  0009F8  2EE8               	decfsz	wreg,f,c
  2134  0009FA  D7FD               	bra	i2u66_47
  2135  0009FC                     
  2136                           ;LCD.c: 141:  LATDbits.LATD2 = 0;
  2137  0009FC  948C               	bcf	140,2,c	;volatile
  2138  0009FE                     i2l1303:
  2139                           
  2140                           ;LCD.c: 142:  aux = aux & 0x80;
  2141  0009FE  5001               	movf	i2LEER_LCD@aux^0,w,c
  2142  000A00  0B80               	andlw	128
  2143  000A02  6E01               	movwf	i2LEER_LCD@aux^0,c
  2144                           
  2145                           ;LCD.c: 143:  while(aux == 0x80)
  2146  000A04  EF18  F005         	goto	i2l1317
  2147  000A08                     i2l69:
  2148                           
  2149                           ;LCD.c: 144:         {;LCD.c: 145:             LATDbits.LATD2 = 1;
  2150  000A08  848C               	bsf	140,2,c	;volatile
  2151  000A0A                     
  2152                           ;LCD.c: 146:             _delay(1200);
  2153  000A0A  0EF0               	movlw	240
  2154  000A0C                     i2u67_47:
  2155  000A0C  D000               	nop2	
  2156  000A0E  2EE8               	decfsz	wreg,f,c
  2157  000A10  D7FD               	bra	i2u67_47
  2158  000A12                     
  2159                           ;LCD.c: 147:             aux = PORTD;
  2160  000A12  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2161  000A16                     
  2162                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2163  000A16  948C               	bcf	140,2,c	;volatile
  2164                           
  2165                           ;LCD.c: 149:             _delay(1200);
  2166  000A18  0EF0               	movlw	240
  2167  000A1A                     i2u68_47:
  2168  000A1A  D000               	nop2	
  2169  000A1C  2EE8               	decfsz	wreg,f,c
  2170  000A1E  D7FD               	bra	i2u68_47
  2171  000A20                     
  2172                           ;LCD.c: 150:             LATDbits.LATD2 = 1;
  2173  000A20  848C               	bsf	140,2,c	;volatile
  2174                           
  2175                           ;LCD.c: 151:             _delay(1200);
  2176  000A22  0EF0               	movlw	240
  2177  000A24                     i2u69_47:
  2178  000A24  D000               	nop2	
  2179  000A26  2EE8               	decfsz	wreg,f,c
  2180  000A28  D7FD               	bra	i2u69_47
  2181  000A2A                     
  2182                           ;LCD.c: 152:             LATDbits.LATD2 = 0;
  2183  000A2A  948C               	bcf	140,2,c	;volatile
  2184  000A2C  EFFF  F004         	goto	i2l1303
  2185  000A30                     i2l1317:
  2186                           
  2187                           ;LCD.c: 143:  while(aux == 0x80)
  2188  000A30  0E80               	movlw	128
  2189  000A32  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  2190  000A34  B4D8               	btfsc	status,2,c
  2191  000A36  EF1F  F005         	goto	i2u25_41
  2192  000A3A  EF21  F005         	goto	i2u25_40
  2193  000A3E                     i2u25_41:
  2194  000A3E  EF04  F005         	goto	i2l69
  2195  000A42                     i2u25_40:
  2196  000A42  0012               	return		;funcret
  2197  000A44                     __end_ofi2_LEER_LCD:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function i2_ENVIA_NIBBLE *****************
  2201 ;; Defined at:
  2202 ;;		line 97 in file "LCD.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  dato            1    wreg     unsigned char 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  dato            1    0[COMRAM] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        1 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		i2_ENVIA_CHAR
  2226 ;;		i2_ENVIA_LCD_CMD
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text19
  2231  000E0A                     __ptext19:
  2232                           	callstack 0
  2233  000E0A                     i2_ENVIA_NIBBLE:
  2234                           	callstack 23
  2235                           
  2236                           ;incstack = 0
  2237                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2238  000E0A  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  2239  000E0C                     
  2240                           ;LCD.c: 97: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 98: {;LCD.c: 99:  LATD &= 0x0F;
  2241  000E0C  0E0F               	movlw	15
  2242  000E0E  168C               	andwf	140,f,c	;volatile
  2243                           
  2244                           ;LCD.c: 100:  dato &= 0xF0;
  2245  000E10  0EF0               	movlw	240
  2246  000E12  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  2247                           
  2248                           ;LCD.c: 101:  LATD|= dato;
  2249  000E14  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  2250  000E16  128C               	iorwf	140,f,c	;volatile
  2251  000E18                     
  2252                           ;LCD.c: 102:  LATDbits.LATD2 = 1;
  2253  000E18  848C               	bsf	140,2,c	;volatile
  2254  000E1A                     
  2255                           ;LCD.c: 104:         _delay(1200);
  2256  000E1A  0EF0               	movlw	240
  2257  000E1C                     i2u70_47:
  2258  000E1C  D000               	nop2	
  2259  000E1E  2EE8               	decfsz	wreg,f,c
  2260  000E20  D7FD               	bra	i2u70_47
  2261  000E22                     
  2262                           ;LCD.c: 105:  LATDbits.LATD2 = 0;
  2263  000E22  948C               	bcf	140,2,c	;volatile
  2264  000E24  0012               	return		;funcret
  2265  000E26                     __end_ofi2_ENVIA_NIBBLE:
  2266                           	callstack 0
  2267                           
  2268                           	psect	rparam
  2269  0000                     
  2270                           	psect	temp
  2271  00002A                     btemp:
  2272                           	callstack 0
  2273  00002A                     	ds	1
  2274  0000                     int$flags	set	btemp
  2275  0000                     wtemp8	set	btemp+1
  2276  0000                     ttemp5	set	btemp+1
  2277  0000                     ttemp6	set	btemp+4
  2278  0000                     ttemp7	set	btemp+8
  2279                           
  2280                           	psect	idloc
  2281                           
  2282                           ;Config register IDLOC0 @ 0x200000
  2283                           ;	unspecified, using default values
  2284  200000                     	org	2097152
  2285  200000  FF                 	db	255
  2286                           
  2287                           ;Config register IDLOC1 @ 0x200001
  2288                           ;	unspecified, using default values
  2289  200001                     	org	2097153
  2290  200001  FF                 	db	255
  2291                           
  2292                           ;Config register IDLOC2 @ 0x200002
  2293                           ;	unspecified, using default values
  2294  200002                     	org	2097154
  2295  200002  FF                 	db	255
  2296                           
  2297                           ;Config register IDLOC3 @ 0x200003
  2298                           ;	unspecified, using default values
  2299  200003                     	org	2097155
  2300  200003  FF                 	db	255
  2301                           
  2302                           ;Config register IDLOC4 @ 0x200004
  2303                           ;	unspecified, using default values
  2304  200004                     	org	2097156
  2305  200004  FF                 	db	255
  2306                           
  2307                           ;Config register IDLOC5 @ 0x200005
  2308                           ;	unspecified, using default values
  2309  200005                     	org	2097157
  2310  200005  FF                 	db	255
  2311                           
  2312                           ;Config register IDLOC6 @ 0x200006
  2313                           ;	unspecified, using default values
  2314  200006                     	org	2097158
  2315  200006  FF                 	db	255
  2316                           
  2317                           ;Config register IDLOC7 @ 0x200007
  2318                           ;	unspecified, using default values
  2319  200007                     	org	2097159
  2320  200007  FF                 	db	255
  2321                           
  2322                           	psect	config
  2323                           
  2324                           ;Config register CONFIG1L @ 0x300000
  2325                           ;	PLL Prescaler Selection bits
  2326                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2327                           ;	System Clock Postscaler Selection bits
  2328                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2329                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2330                           ;	USBDIV = 0x0, unprogrammed default
  2331  300000                     	org	3145728
  2332  300000  00                 	db	0
  2333                           
  2334                           ;Config register CONFIG1H @ 0x300001
  2335                           ;	Oscillator Selection bits
  2336                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2337                           ;	Fail-Safe Clock Monitor Enable bit
  2338                           ;	FCMEN = 0x0, unprogrammed default
  2339                           ;	Internal/External Oscillator Switchover bit
  2340                           ;	IESO = 0x0, unprogrammed default
  2341  300001                     	org	3145729
  2342  300001  02                 	db	2
  2343                           
  2344                           ;Config register CONFIG2L @ 0x300002
  2345                           ;	Power-up Timer Enable bit
  2346                           ;	PWRT = ON, PWRT enabled
  2347                           ;	Brown-out Reset Enable bits
  2348                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2349                           ;	Brown-out Reset Voltage bits
  2350                           ;	BORV = 0x3, unprogrammed default
  2351                           ;	USB Voltage Regulator Enable bit
  2352                           ;	VREGEN = 0x0, unprogrammed default
  2353  300002                     	org	3145730
  2354  300002  18                 	db	24
  2355                           
  2356                           ;Config register CONFIG2H @ 0x300003
  2357                           ;	Watchdog Timer Enable bit
  2358                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2359                           ;	Watchdog Timer Postscale Select bits
  2360                           ;	WDTPS = 0xF, unprogrammed default
  2361  300003                     	org	3145731
  2362  300003  1E                 	db	30
  2363                           
  2364                           ; Padding undefined space
  2365  300004                     	org	3145732
  2366  300004  FF                 	db	255
  2367                           
  2368                           ;Config register CONFIG3H @ 0x300005
  2369                           ;	CCP2 MUX bit
  2370                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2371                           ;	PORTB A/D Enable bit
  2372                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2373                           ;	Low-Power Timer 1 Oscillator Enable bit
  2374                           ;	LPT1OSC = 0x0, unprogrammed default
  2375                           ;	MCLR Pin Enable bit
  2376                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2377  300005                     	org	3145733
  2378  300005  81                 	db	129
  2379                           
  2380                           ;Config register CONFIG4L @ 0x300006
  2381                           ;	Stack Full/Underflow Reset Enable bit
  2382                           ;	STVREN = 0x1, unprogrammed default
  2383                           ;	Single-Supply ICSP Enable bit
  2384                           ;	LVP = OFF, Single-Supply ICSP disabled
  2385                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2386                           ;	ICPRT = 0x0, unprogrammed default
  2387                           ;	Extended Instruction Set Enable bit
  2388                           ;	XINST = 0x0, unprogrammed default
  2389                           ;	Background Debugger Enable bit
  2390                           ;	DEBUG = 0x1, unprogrammed default
  2391  300006                     	org	3145734
  2392  300006  81                 	db	129
  2393                           
  2394                           ; Padding undefined space
  2395  300007                     	org	3145735
  2396  300007  FF                 	db	255
  2397                           
  2398                           ;Config register CONFIG5L @ 0x300008
  2399                           ;	unspecified, using default values
  2400                           ;	Code Protection bit
  2401                           ;	CP0 = 0x1, unprogrammed default
  2402                           ;	Code Protection bit
  2403                           ;	CP1 = 0x1, unprogrammed default
  2404                           ;	Code Protection bit
  2405                           ;	CP2 = 0x1, unprogrammed default
  2406                           ;	Code Protection bit
  2407                           ;	CP3 = 0x1, unprogrammed default
  2408  300008                     	org	3145736
  2409  300008  0F                 	db	15
  2410                           
  2411                           ;Config register CONFIG5H @ 0x300009
  2412                           ;	unspecified, using default values
  2413                           ;	Boot Block Code Protection bit
  2414                           ;	CPB = 0x1, unprogrammed default
  2415                           ;	Data EEPROM Code Protection bit
  2416                           ;	CPD = 0x1, unprogrammed default
  2417  300009                     	org	3145737
  2418  300009  C0                 	db	192
  2419                           
  2420                           ;Config register CONFIG6L @ 0x30000A
  2421                           ;	unspecified, using default values
  2422                           ;	Write Protection bit
  2423                           ;	WRT0 = 0x1, unprogrammed default
  2424                           ;	Write Protection bit
  2425                           ;	WRT1 = 0x1, unprogrammed default
  2426                           ;	Write Protection bit
  2427                           ;	WRT2 = 0x1, unprogrammed default
  2428                           ;	Write Protection bit
  2429                           ;	WRT3 = 0x1, unprogrammed default
  2430  30000A                     	org	3145738
  2431  30000A  0F                 	db	15
  2432                           
  2433                           ;Config register CONFIG6H @ 0x30000B
  2434                           ;	unspecified, using default values
  2435                           ;	Configuration Register Write Protection bit
  2436                           ;	WRTC = 0x1, unprogrammed default
  2437                           ;	Boot Block Write Protection bit
  2438                           ;	WRTB = 0x1, unprogrammed default
  2439                           ;	Data EEPROM Write Protection bit
  2440                           ;	WRTD = 0x1, unprogrammed default
  2441  30000B                     	org	3145739
  2442  30000B  E0                 	db	224
  2443                           
  2444                           ;Config register CONFIG7L @ 0x30000C
  2445                           ;	unspecified, using default values
  2446                           ;	Table Read Protection bit
  2447                           ;	EBTR0 = 0x1, unprogrammed default
  2448                           ;	Table Read Protection bit
  2449                           ;	EBTR1 = 0x1, unprogrammed default
  2450                           ;	Table Read Protection bit
  2451                           ;	EBTR2 = 0x1, unprogrammed default
  2452                           ;	Table Read Protection bit
  2453                           ;	EBTR3 = 0x1, unprogrammed default
  2454  30000C                     	org	3145740
  2455  30000C  0F                 	db	15
  2456                           
  2457                           ;Config register CONFIG7H @ 0x30000D
  2458                           ;	unspecified, using default values
  2459                           ;	Boot Block Table Read Protection bit
  2460                           ;	EBTRB = 0x1, unprogrammed default
  2461  30000D                     	org	3145741
  2462  30000D  40                 	db	64
  2463                           tosu	equ	0xFFF
  2464                           tosh	equ	0xFFE
  2465                           tosl	equ	0xFFD
  2466                           stkptr	equ	0xFFC
  2467                           pclatu	equ	0xFFB
  2468                           pclath	equ	0xFFA
  2469                           pcl	equ	0xFF9
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           prodh	equ	0xFF4
  2475                           prodl	equ	0xFF3
  2476                           indf0	equ	0xFEF
  2477                           postinc0	equ	0xFEE
  2478                           postdec0	equ	0xFED
  2479                           preinc0	equ	0xFEC
  2480                           plusw0	equ	0xFEB
  2481                           fsr0h	equ	0xFEA
  2482                           fsr0l	equ	0xFE9
  2483                           wreg	equ	0xFE8
  2484                           indf1	equ	0xFE7
  2485                           postinc1	equ	0xFE6
  2486                           postdec1	equ	0xFE5
  2487                           preinc1	equ	0xFE4
  2488                           plusw1	equ	0xFE3
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           bsr	equ	0xFE0
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           postdec2	equ	0xFDD
  2495                           preinc2	equ	0xFDC
  2496                           plusw2	equ	0xFDB
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        81
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      41
    BANK0           160      0      81
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_ESCRIBE_MENSAJE
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    i2_ESCRIBE_MENSAJE->i2_ENVIA_CHAR
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2601
                                             22 COMRAM     6     6      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _init_conf
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     799
                                             17 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     206
                                             16 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     227
                                             16 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _init_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     669
                                             16 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     183
                                             14 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     678
                                             16 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                             14 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      70
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             4     4      0     850
                                              9 COMRAM     4     4      0
                       i2_ENVIA_CHAR
                  i2_ESCRIBE_MENSAJE
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (6) i2_POS_CURSOR                                         2     1      1     341
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (6) i2_ESCRIBE_MENSAJE                                    6     3      3     326
                                              3 COMRAM     6     3      3
                       i2_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (7) i2_ENVIA_CHAR                                         2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i2_LEER_LCD                                           1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_NIBBLE                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _init_conf
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)
   i2_ENVIA_CHAR
     i2_ENVIA_NIBBLE
     i2_LEER_LCD
   i2_ESCRIBE_MENSAJE
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      51       5       50.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      29       1       43.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      20        0.0%
DATA                 0      0      7A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 10 11:53:59 2021

                        l50 0C86                          l26 0B60                          l44 0DC4  
                        l53 0D2C                          l62 0E08                          l71 09D0  
                        l39 0E2C                          l56 0E34                          l65 0CF8  
                        l59 0B08                          l69 0996  __size_ofi2_ESCRIBE_MENSAJE 003E  
             ENVIA_CHAR@aux 0010                         l120 0E3A                         l117 0DEC  
                       u300 0B58                         u301 0B54                         u310 0C86  
                       u311 0C82                         u240 09D0                         u241 09CC  
                       u410 086E                         u411 086A                         u260 0DA8  
                       u420 08AA                         u261 0DA4                         u421 08A6  
                       u270 0DBE                         u430 08DC                         u271 0DBA  
                       u431 08D8                         u280 0B1C                         u440 0926  
                       u281 0B18                         u441 0922                         u290 0B3A  
                       u450 0958                         u291 0B36                         u507 0ABA  
                       u451 0954                         u517 0AC8                         u607 09B2  
                       u527 0AD8                         u617 0E00                         u537 0CD4  
                       u547 0D08                         u557 096C                         u477 08B4  
                       u567 097A                         u487 0930                         u577 0984  
                       u497 0DD4                         u587 099A                         u597 09A8  
               LEER_LCD@aux 000E                         wreg 000FE8            ??i2_ENVIA_NIBBLE 0001  
              ?_CURSOR_HOME 0001              ??_ENVIA_NIBBLE 000E              ENVIA_CHAR@dato 000F  
                      l1211 0968                        l1221 0980                        l1213 096A  
                      l1205 0960                        l1231 09A0                        l1223 0982  
                      l1215 0972                        l1207 0964                        l1233 09A4  
                      l1241 09BE                        l1225 098A                        l1217 0976  
                      l1209 0966                        l1321 0D98                        l1243 0DF0  
                      l1235 09AE                        l1227 098C                        l1219 0978  
                      l1331 0CFE                        l1251 0CC8                        l1323 0DA8  
                      l1245 0DFC                        l1237 09B8                        l1229 0998  
                      l1341 0D12                        l1333 0D02                        l1261 0CDC  
                      l1253 0CCA                        l1421 0B0C                        l1325 0DAE  
                      l1247 0DFE                        l1343 0D14                        l1335 0D06  
                      l1271 0CF2                        l1263 0CDE                        l1255 0CCE  
                      l1431 0B58                        l1423 0B1C                        l1351 0E2E  
                      l1319 0E26                        l1327 0DBE                        l1511 0822  
                      l1249 0E06                        l1345 0D1A                        l1337 0D0E  
                      l1329 0CFC                        l1433 0C4A                        l1265 0CE0  
                      l1257 0CD2                        l1425 0B28                        l1361 0AD6  
                      l1353 0AAA                        l1441 0DC6                        l1521 085E  
                      l1513 0832                        l1347 0D20                        l1339 0D10  
                      l1435 0C56                        l1267 0CE6                        l1259 0CDA  
                      l1427 0B3A                        l1371 0AF6                        l1363 0ADE  
                      l1355 0AAE                        l1451 0DE6                        l1443 0DCA  
                      l1523 086E                        l1515 083C                        l1507 081A  
                      l1349 0D26                        l1437 0C72                        l1269 0CEC  
                      l1429 0B46                        l1453 0E36                        l1373 0AFC  
                      l1365 0AE4                        l1357 0AB4                        l1445 0DCE  
                      l1541 08AA                        l1517 084C                        l1509 081E  
                      l1439 0C74                        l1375 0B02                        l1367 0AEA  
                      l1359 0AC2                        l1447 0DDE                        l1543 08C0  
                      l1535 0876                        l1519 0854                        l1369 0AF0  
                      l1449 0DE2                        l1561 08E8                        l1545 08CA  
                      l1537 0898                        l1529 0872                        l1571 0946  
                      l1563 0914                        l1555 08E4                        l1547 08CC  
                      l1539 089A                        l1573 0948                        l1565 0916  
                      l1549 08E0                        l1567 0926                        l1569 093C  
                      STR_1 0801                        STR_2 0811                        STR_3 0811  
                      _LATD 000F8C                        i2l50 0CC4                        i2l26 0BB8  
                      i2l53 0D94                        i2l62 0E24                        i2l71 0A42  
                      i2l65 0D60                        i2l69 0A08                 ?i2_LEER_LCD 0001  
                      _main 081A                        indf2 000FDF                        fsr1l 000FE1  
                      fsr2l 000FD9                        btemp 002A           ??i2_ENVIA_LCD_CMD 0002  
                      start 000E               ?_CURSOR_ONOFF 0001                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 000F            __end_of_LEER_LCD 09D2         __size_of_BORRAR_LCD 0008  
          __end_of_INT0_ISR 0AAA                       ?_main 0001                       i2l145 0A96  
                     _PORTD 000F83         __size_of_LCD_CONFIG 0060                       _TRISD 000F95  
        i2ESCRIBE_MENSAJE@i 0009         __size_of_ENVIA_CHAR 0034     i2ESCRIBE_MENSAJE@cadena 0004  
               ?_POS_CURSOR 0011                       main@i 0019                       main@j 001A  
                     tablat 000FF5                       ttemp5 002B                       ttemp6 002E  
                     ttemp7 0032                       status 000FD8                       wtemp8 002B  
            ??_CURSOR_ONOFF 0011             __initialization 0C0C                __end_of_main 0960  
           _ESCRIBE_MENSAJE 0C4A                      ??_main 0017         __size_ofi2_LEER_LCD 0072  
             __activetblptr 000001                      i2l1301 09FC                      i2l1311 0A20  
                    i2l1303 09FE                      i2l1313 0A2A                      i2l1305 0A0A  
                    i2l1401 0D32                      i2l1307 0A12                      i2l1411 0D46  
                    i2l1403 0D36                      i2l1309 0A16                      i2l1317 0A30  
                    i2l1413 0D48                      i2l1405 0D3A                      i2l1415 0D4E  
                    i2l1407 0D42                      i2l1273 0E0C                      i2l1281 09D2  
                    i2l1417 0D54                      i2l1409 0D44                      i2l1275 0E18  
                    i2l1291 09E4                      i2l1283 09D6                      i2l1419 0D5A  
                    i2l1277 0E1A                      i2l1293 09E8                      i2l1285 09D8  
                    i2l1381 0D6A                      i2l1461 0B92                      i2l1279 0E22  
                    i2l1295 09EA                      i2l1287 09DA                      i2l1391 0D7C  
                    i2l1383 0D6E                      i2l1471 0CB0                      i2l1463 0B9E  
                    i2l1455 0B64                      i2l1297 09F2                      i2l1289 09DC  
                    i2l1393 0D82                      i2l1385 0D76                      i2l1377 0D64  
                    i2l1473 0CB2                      i2l1465 0BB0                      i2l1457 0B74  
                    i2l1299 09F4                      i2l1395 0D88                      i2l1387 0D78  
                    i2l1379 0D66                      i2l1467 0C88                      i2l1459 0B80  
                    i2l1397 0D8E                      i2l1389 0D7A                      i2l1469 0C94  
                    i2l1581 0A72                      i2l1399 0D30                      i2l1583 0A7C  
                    i2l1575 0A56                      i2l1585 0A8C                      i2l1577 0A66  
                    i2l1587 0A94                      i2l1579 0A6E                      _INTCON 000FF2  
             ?i2_ENVIA_CHAR 0001            __end_of_lcd_init 0DEE                      _decena 0021  
      __end_of_ENVIA_NIBBLE 0E0A                      _cuenta 001D                      _estado 0029  
       __size_of_POS_CURSOR 0058                      _millar 0025                      clear_0 0C32  
                    _unidad 001F                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ??_BORRAR_LCD 0011  
      __size_of_CURSOR_HOME 0008                   ?_LEER_LCD 0001                  __accesstop 0060  
   __end_of__initialization 0C38                   ?_INT0_ISR 0001                ??_LCD_CONFIG 0011  
            ??i2_ENVIA_CHAR 0002               ___rparam_used 000001                ??_ENVIA_CHAR 000F  
   __end_of_ESCRIBE_MENSAJE 0C88              __pcstackCOMRAM 0001                __pidataBANK0 0BBA  
        __end_of_BORRAR_LCD 0E36         i2ENVIA_LCD_CMD@dato 0002            ENVIA_LCD_CMD@aux 0010  
      __end_of_CURSOR_ONOFF 0DC6          __end_of_LCD_CONFIG 0B0A          __end_of_ENVIA_CHAR 0D2E  
           i2_ENVIA_LCD_CMD 0D2E               ?i2_POS_CURSOR 0004                ??i2_LEER_LCD 0001  
                ??_LEER_LCD 000E            ENVIA_NIBBLE@dato 000E                  ??_INT0_ISR 000A  
        __size_of_init_conf 0006          __end_ofi2_LEER_LCD 0A44                     i2u32_40 0B74  
                   i2u32_41 0B70                     i2u25_40 0A42                     i2u33_40 0B92  
                   i2u25_41 0A3E                     i2u33_41 0B8E                     i2u34_40 0BB0  
                   i2u34_41 0BAC                     i2u35_40 0CC4                     i2u35_41 0CC0  
                   i2u46_40 0A66                     i2u46_41 0A62                     i2u70_47 0E1C  
                   i2u62_47 0D3C                     i2u63_47 0D70                     i2u64_47 09DE  
                   i2u65_47 09EC                     i2u66_47 09F6                     i2u67_47 0A0C  
                   i2u68_47 0A1A                     i2u69_47 0A24              ??i2_POS_CURSOR 0005  
              ??_POS_CURSOR 0012                   ?_lcd_init 0001        i2ESCRIBE_MENSAJE@tam 0006  
     __size_of_ENVIA_NIBBLE 001C                     __Hparam 0000                     __Lparam 0000  
          ?_ESCRIBE_MENSAJE 0011                     _cadenon 0060                __psmallconst 0800  
     __end_of_ENVIA_LCD_CMD 0CFA                     __pcinit 0C0C          __end_of_POS_CURSOR 0B62  
                   __ramtop 0800                     _centena 0023                     __ptext0 081A  
                   __ptext1 0DC6                     __ptext2 0AAA                     __ptext3 0D96  
                   __ptext4 0E26                     __ptext5 0E2E                     __ptext6 0E36  
                   __ptext7 0B0A                     __ptext8 0CC6                     __ptext9 0C4A  
   __end_ofi2_ENVIA_LCD_CMD 0D62        __end_ofi2_ENVIA_CHAR 0D96           __end_of_init_conf 0E3C  
           i2ENVIA_CHAR@aux 0003                  ??_lcd_init 0012              __pintcode_body 0A44  
              _ENVIA_NIBBLE 0DEE        end_of_initialization 0C38                     int_func 0A44  
   __size_ofi2_ENVIA_NIBBLE 001C                     postdec1 000FE5                     postinc0 000FEE  
     __size_of_CURSOR_ONOFF 0030           __size_of_LEER_LCD 0072           __size_of_INT0_ISR 0AA2  
              _CURSOR_ONOFF 0D96          CURSOR_ONOFF@estado 0011        __end_ofi2_POS_CURSOR 0BBA  
          ?i2_ENVIA_LCD_CMD 0001               ??_CURSOR_HOME 0011         start_initialization 0C0C  
         ENVIA_LCD_CMD@dato 000F            i2POS_CURSOR@fila 0005                 __pdataBANK0 0060  
     __size_ofi2_ENVIA_CHAR 0034                 __pbssCOMRAM 001D               i2LEER_LCD@aux 0001  
        i2ENVIA_LCD_CMD@aux 0003         __end_of_CURSOR_HOME 0E2E           __size_of_lcd_init 0028  
            i2_ENVIA_NIBBLE 0E0A                i2_ENVIA_CHAR 0D62          i2ENVIA_NIBBLE@dato 0001  
                 __pintcode 0008                 __smallconst 0800         i2POS_CURSOR@columna 0004  
                 _init_conf 0E36      __end_ofi2_ENVIA_NIBBLE 0E26                    _LEER_LCD 0960  
                  _INT0_ISR 0008                    _LATDbits 000F8C       __size_ofi2_POS_CURSOR 0058  
          ESCRIBE_MENSAJE@i 0016              POS_CURSOR@fila 0012    __size_of_ESCRIBE_MENSAJE 003E  
                 main@i_217 001B                   main@j_218 001C                 _CURSOR_HOME 0E26  
                ?_init_conf 0001                   copy_data0 0C20                i2_POS_CURSOR 0B62  
           ?i2_ENVIA_NIBBLE 0001      __size_of_ENVIA_LCD_CMD 0034                    __Hrparam 0000  
                  __Lrparam 0000                __Lsmallconst 0800           i2_ESCRIBE_MENSAJE 0C88  
                  _d_millar 0027          ?i2_ESCRIBE_MENSAJE 0004                    __ptext10 0CFA  
                  __ptext11 0960                    __ptext12 0DEE                    __ptext14 0B62  
                  __ptext15 0D2E                    __ptext16 0C88                    __ptext17 0D62  
                  __ptext18 09D2                    __ptext19 0E0A                  _BORRAR_LCD 0E2E  
                  _lcd_init 0DC6         ??i2_ESCRIBE_MENSAJE 0007               __size_of_main 0146  
                _LCD_CONFIG 0AAA                  _ENVIA_CHAR 0CFA                    int$flags 002A  
          i2ENVIA_CHAR@dato 0002   __end_ofi2_ESCRIBE_MENSAJE 0CC6               _ENVIA_LCD_CMD 0CC6  
                _INTCONbits 000FF2           ??_ESCRIBE_MENSAJE 0014                 ??_init_conf 000E  
  __size_ofi2_ENVIA_LCD_CMD 0034                    intlevel2 0000       ESCRIBE_MENSAJE@cadena 0011  
                i2_LEER_LCD 09D2              ?_ENVIA_LCD_CMD 0001                 ?_BORRAR_LCD 0001  
             ?_ENVIA_NIBBLE 0001                  _POS_CURSOR 0B0A                 ?_LCD_CONFIG 0001  
        ESCRIBE_MENSAJE@tam 0013                 ?_ENVIA_CHAR 0001           POS_CURSOR@columna 0011  
