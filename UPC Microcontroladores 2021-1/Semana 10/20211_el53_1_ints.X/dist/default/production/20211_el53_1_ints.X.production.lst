

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 26 19:44:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     _PORTD	set	3971
    78  0000                     _LATD	set	3980
    79  0000                     _LATDbits	set	3980
    80  0000                     _TRISD	set	3989
    81  0000                     _INTCON3bits	set	4080
    82  0000                     _INTCONbits	set	4082
    83  0000                     _RCONbits	set	4048
    84                           
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     STR_2:
    90  000801  20                 	db	32
    91  000802  20                 	db	32
    92  000803  20                 	db	32
    93  000804  20                 	db	32
    94  000805  20                 	db	32
    95  000806  20                 	db	32
    96  000807  20                 	db	32
    97  000808  20                 	db	32
    98  000809  20                 	db	32
    99  00080A  20                 	db	32
   100  00080B  20                 	db	32
   101  00080C  20                 	db	32
   102  00080D  20                 	db	32
   103  00080E  20                 	db	32
   104  00080F  20                 	db	32
   105  000810  20                 	db	32
   106  000811  00                 	db	0
   107  000812                     STR_4:
   108  000812  4D                 	db	77	;'M'
   109  000813  61                 	db	97	;'a'
   110  000814  63                 	db	99	;'c'
   111  000815  68                 	db	104	;'h'
   112  000816  75                 	db	117	;'u'
   113  000817  63                 	db	99	;'c'
   114  000818  61                 	db	97	;'a'
   115  000819  73                 	db	115	;'s'
   116  00081A  74                 	db	116	;'t'
   117  00081B  65                 	db	101	;'e'
   118  00081C  20                 	db	32
   119  00081D  49                 	db	73	;'I'
   120  00081E  4E                 	db	78	;'N'
   121  00081F  54                 	db	84	;'T'
   122  000820  31                 	db	49	;'1'
   123  000821  20                 	db	32
   124  000822  00                 	db	0
   125  000823                     STR_3:
   126  000823  50                 	db	80	;'P'
   127  000824  72                 	db	114	;'r'
   128  000825  65                 	db	101	;'e'
   129  000826  73                 	db	115	;'s'
   130  000827  69                 	db	105	;'i'
   131  000828  6F                 	db	111	;'o'
   132  000829  6E                 	db	110	;'n'
   133  00082A  61                 	db	97	;'a'
   134  00082B  73                 	db	115	;'s'
   135  00082C  74                 	db	116	;'t'
   136  00082D  65                 	db	101	;'e'
   137  00082E  20                 	db	32
   138  00082F  49                 	db	73	;'I'
   139  000830  4E                 	db	78	;'N'
   140  000831  54                 	db	84	;'T'
   141  000832  30                 	db	48	;'0'
   142  000833  00                 	db	0
   143  000834                     STR_1:
   144  000834  44                 	db	68	;'D'
   145  000835  65                 	db	101	;'e'
   146  000836  74                 	db	116	;'t'
   147  000837  65                 	db	101	;'e'
   148  000838  63                 	db	99	;'c'
   149  000839  74                 	db	116	;'t'
   150  00083A  6F                 	db	111	;'o'
   151  00083B  72                 	db	114	;'r'
   152  00083C  20                 	db	32
   153  00083D  55                 	db	85	;'U'
   154  00083E  50                 	db	80	;'P'
   155  00083F  43                 	db	67	;'C'
   156  000840  32                 	db	50	;'2'
   157  000841  30                 	db	48	;'0'
   158  000842  32                 	db	50	;'2'
   159  000843  31                 	db	49	;'1'
   160  000844  00                 	db	0
   161  000845  00                 	db	0	; dummy byte at the end
   162  0000                     
   163                           ; #config settings
   164                           
   165                           	psect	cinit
   166  000E12                     __pcinit:
   167                           	callstack 0
   168  000E12                     start_initialization:
   169                           	callstack 0
   170  000E12                     __initialization:
   171                           	callstack 0
   172                           
   173                           ; Clear objects allocated to COMRAM (1 bytes)
   174  000E12  6A29               	clrf	__pbssCOMRAM& (0+255),c
   175  000E14                     end_of_initialization:
   176                           	callstack 0
   177  000E14                     __end_of__initialization:
   178                           	callstack 0
   179  000E14  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  000E16  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  000E18  0E00               	movlw	low (__Lsmallconst shr (0+16))
   182  000E1A  6EF8               	movwf	tblptru,c
   183  000E1C  0E08               	movlw	high __Lsmallconst
   184  000E1E  6EF7               	movwf	tblptrh,c
   185  000E20  0100               	movlb	0
   186  000E22  EFCE  F004         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssCOMRAM
   189  000029                     __pbssCOMRAM:
   190                           	callstack 0
   191  000029                     _indicador:
   192                           	callstack 0
   193  000029                     	ds	1
   194                           
   195                           	psect	cstackCOMRAM
   196  000001                     __pcstackCOMRAM:
   197                           	callstack 0
   198  000001                     i2ENVIA_NIBBLE@dato:
   199                           	callstack 0
   200  000001                     i2LEER_LCD@aux:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0x0
   204  000001                     	ds	1
   205  000002                     i2ENVIA_CHAR@dato:
   206                           	callstack 0
   207  000002                     i2ENVIA_LCD_CMD@dato:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x1
   211  000002                     	ds	1
   212  000003                     i2ENVIA_CHAR@aux:
   213                           	callstack 0
   214  000003                     i2ENVIA_LCD_CMD@aux:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x2
   218  000003                     	ds	1
   219  000004                     i2POS_CURSOR@columna:
   220                           	callstack 0
   221  000004                     i2ESCRIBE_MENSAJE@cadena:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x3
   225  000004                     	ds	1
   226  000005                     i2POS_CURSOR@fila:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x4
   230  000005                     	ds	1
   231  000006                     i2ESCRIBE_MENSAJE@tam:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x5
   235  000006                     	ds	1
   236  000007                     ??i2_ESCRIBE_MENSAJE:
   237                           
   238                           ; 1 bytes @ 0x6
   239  000007                     	ds	2
   240  000009                     i2ESCRIBE_MENSAJE@i:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0x8
   244  000009                     	ds	1
   245  00000A                     ??_INT0_ISR:
   246                           
   247                           ; 1 bytes @ 0x9
   248  00000A                     	ds	4
   249  00000E                     i1ENVIA_NIBBLE@dato:
   250                           	callstack 0
   251  00000E                     i1LEER_LCD@aux:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0xD
   255  00000E                     	ds	1
   256  00000F                     i1ENVIA_CHAR@dato:
   257                           	callstack 0
   258  00000F                     i1ENVIA_LCD_CMD@dato:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0xE
   262  00000F                     	ds	1
   263  000010                     i1ENVIA_CHAR@aux:
   264                           	callstack 0
   265  000010                     i1ENVIA_LCD_CMD@aux:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xF
   269  000010                     	ds	1
   270  000011                     i1POS_CURSOR@columna:
   271                           	callstack 0
   272  000011                     i1ESCRIBE_MENSAJE@cadena:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x10
   276  000011                     	ds	1
   277  000012                     i1POS_CURSOR@fila:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x11
   281  000012                     	ds	1
   282  000013                     i1ESCRIBE_MENSAJE@tam:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x12
   286  000013                     	ds	1
   287  000014                     ??i1_ESCRIBE_MENSAJE:
   288                           
   289                           ; 1 bytes @ 0x13
   290  000014                     	ds	2
   291  000016                     i1ESCRIBE_MENSAJE@i:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x15
   295  000016                     	ds	1
   296  000017                     ??_INT1_ISR:
   297                           
   298                           ; 1 bytes @ 0x16
   299  000017                     	ds	7
   300  00001E                     ENVIA_NIBBLE@dato:
   301                           	callstack 0
   302  00001E                     LEER_LCD@aux:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x1D
   306  00001E                     	ds	1
   307  00001F                     ENVIA_CHAR@dato:
   308                           	callstack 0
   309  00001F                     ENVIA_LCD_CMD@dato:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x1E
   313  00001F                     	ds	1
   314  000020                     ENVIA_CHAR@aux:
   315                           	callstack 0
   316  000020                     ENVIA_LCD_CMD@aux:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1F
   320  000020                     	ds	1
   321  000021                     ??_LCD_CONFIG:
   322  000021                     POS_CURSOR@columna:
   323                           	callstack 0
   324  000021                     CURSOR_ONOFF@estado:
   325                           	callstack 0
   326  000021                     ESCRIBE_MENSAJE@cadena:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x20
   330  000021                     	ds	1
   331  000022                     ??_lcd_conf:
   332  000022                     POS_CURSOR@fila:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x21
   336  000022                     	ds	1
   337  000023                     ESCRIBE_MENSAJE@tam:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x22
   341  000023                     	ds	1
   342  000024                     ??_ESCRIBE_MENSAJE:
   343                           
   344                           ; 1 bytes @ 0x23
   345  000024                     	ds	2
   346  000026                     ESCRIBE_MENSAJE@i:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x25
   350  000026                     	ds	1
   351  000027                     ??_main:
   352                           
   353                           ; 1 bytes @ 0x26
   354  000027                     	ds	2
   355                           
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 37 in file "maincode.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   375 ;;      Params:         0       0       0       0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0       0       0       0       0
   378 ;;      Totals:         2       0       0       0       0       0       0       0       0
   379 ;;Total ram usage:        2 bytes
   380 ;; Hardware stack levels required when called: 12
   381 ;; This function calls:
   382 ;;		_ESCRIBE_MENSAJE
   383 ;;		_POS_CURSOR
   384 ;;		_init_conf
   385 ;;		_lcd_conf
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text0
   392  00099C                     __ptext0:
   393                           	callstack 0
   394  00099C                     _main:
   395                           	callstack 19
   396  00099C                     
   397                           ;maincode.c: 38:     init_conf();
   398  00099C  EC13  F007         	call	_init_conf	;wreg free
   399  0009A0                     
   400                           ;maincode.c: 39:     lcd_conf();
   401  0009A0  EC58  F005         	call	_lcd_conf	;wreg free
   402  0009A4                     
   403                           ;maincode.c: 40:     POS_CURSOR(1,0);
   404  0009A4  0E00               	movlw	0
   405  0009A6  6E21               	movwf	POS_CURSOR@columna^0,c
   406  0009A8  0E01               	movlw	1
   407  0009AA  ECD4  F005         	call	_POS_CURSOR
   408  0009AE                     
   409                           ;maincode.c: 41:     ESCRIBE_MENSAJE("Detector UPC2021",16);
   410  0009AE  0E34               	movlw	low STR_1
   411  0009B0  6E21               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   412  0009B2  0E08               	movlw	high STR_1
   413  0009B4  6E22               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   414  0009B6  0E10               	movlw	16
   415  0009B8  6E23               	movwf	ESCRIBE_MENSAJE@tam^0,c
   416  0009BA  EC77  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   417  0009BE                     l1471:
   418                           
   419                           ;maincode.c: 43:         if (indicador == 1){
   420  0009BE  0429               	decf	_indicador^0,w,c
   421  0009C0  A4D8               	btfss	status,2,c
   422  0009C2  EFE5  F004         	goto	u321
   423  0009C6  EFE7  F004         	goto	u320
   424  0009CA                     u321:
   425  0009CA  EFDF  F004         	goto	l1471
   426  0009CE                     u320:
   427  0009CE                     
   428                           ;maincode.c: 44:             indicador = 0;
   429  0009CE  0E00               	movlw	0
   430  0009D0  6E29               	movwf	_indicador^0,c
   431  0009D2                     
   432                           ;maincode.c: 45:             _delay((unsigned long)((3000)*(48000000UL/4000.0)));
   433  0009D2  0EB7               	movlw	183
   434  0009D4  6E28               	movwf	(??_main+1)^0,c
   435  0009D6  0EA1               	movlw	161
   436  0009D8  6E27               	movwf	??_main^0,c
   437  0009DA  0EC4               	movlw	196
   438  0009DC                     u337:
   439  0009DC  2EE8               	decfsz	wreg,f,c
   440  0009DE  D7FE               	bra	u337
   441  0009E0  2E27               	decfsz	??_main^0,f,c
   442  0009E2  D7FC               	bra	u337
   443  0009E4  2E28               	decfsz	(??_main+1)^0,f,c
   444  0009E6  D7FA               	bra	u337
   445  0009E8                     
   446                           ;maincode.c: 46:             POS_CURSOR(2,0);
   447  0009E8  0E00               	movlw	0
   448  0009EA  6E21               	movwf	POS_CURSOR@columna^0,c
   449  0009EC  0E02               	movlw	2
   450  0009EE  ECD4  F005         	call	_POS_CURSOR
   451  0009F2                     
   452                           ;maincode.c: 47:             ESCRIBE_MENSAJE("                ",16);
   453  0009F2  0E01               	movlw	low STR_2
   454  0009F4  6E21               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   455  0009F6  0E08               	movlw	high STR_2
   456  0009F8  6E22               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   457  0009FA  0E10               	movlw	16
   458  0009FC  6E23               	movwf	ESCRIBE_MENSAJE@tam^0,c
   459  0009FE  EC77  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   460  000A02  EFDF  F004         	goto	l1471
   461  000A06  EF3B  F000         	goto	start
   462  000A0A                     __end_of_main:
   463                           	callstack 0
   464                           
   465 ;; *************** function _lcd_conf *****************
   466 ;; Defined at:
   467 ;;		line 27 in file "maincode.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;		None
   470 ;; Auto vars:     Size  Location     Type
   471 ;;		None
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   481 ;;      Params:         0       0       0       0       0       0       0       0       0
   482 ;;      Locals:         0       0       0       0       0       0       0       0       0
   483 ;;      Temps:          2       0       0       0       0       0       0       0       0
   484 ;;      Totals:         2       0       0       0       0       0       0       0       0
   485 ;;Total ram usage:        2 bytes
   486 ;; Hardware stack levels used: 1
   487 ;; Hardware stack levels required when called: 11
   488 ;; This function calls:
   489 ;;		_BORRAR_LCD
   490 ;;		_CURSOR_HOME
   491 ;;		_CURSOR_ONOFF
   492 ;;		_LCD_CONFIG
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text1
   499  000AB0                     __ptext1:
   500                           	callstack 0
   501  000AB0                     _lcd_conf:
   502                           	callstack 19
   503  000AB0                     
   504                           ;maincode.c: 28:     TRISD = 0x00;
   505  000AB0  0E00               	movlw	0
   506  000AB2  6E95               	movwf	149,c	;volatile
   507  000AB4                     
   508                           ;maincode.c: 29:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
   509  000AB4  0E04               	movlw	4
   510  000AB6  6E23               	movwf	(??_lcd_conf+1)^0,c
   511  000AB8  0E0C               	movlw	12
   512  000ABA  6E22               	movwf	??_lcd_conf^0,c
   513  000ABC  0E34               	movlw	52
   514  000ABE                     u347:
   515  000ABE  2EE8               	decfsz	wreg,f,c
   516  000AC0  D7FE               	bra	u347
   517  000AC2  2E22               	decfsz	??_lcd_conf^0,f,c
   518  000AC4  D7FC               	bra	u347
   519  000AC6  2E23               	decfsz	(??_lcd_conf+1)^0,f,c
   520  000AC8  D7FA               	bra	u347
   521  000ACA                     
   522                           ;maincode.c: 30:     LCD_CONFIG();
   523  000ACA  EC05  F005         	call	_LCD_CONFIG	;wreg free
   524  000ACE                     
   525                           ;maincode.c: 31:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   526  000ACE  0EEA               	movlw	234
   527  000AD0  6E22               	movwf	??_lcd_conf^0,c
   528  000AD2  0EC3               	movlw	195
   529  000AD4                     u357:
   530  000AD4  2EE8               	decfsz	wreg,f,c
   531  000AD6  D7FE               	bra	u357
   532  000AD8  2E22               	decfsz	??_lcd_conf^0,f,c
   533  000ADA  D7FC               	bra	u357
   534  000ADC  F000               	nop	
   535  000ADE                     
   536                           ;maincode.c: 32:     BORRAR_LCD();
   537  000ADE  EC1E  F007         	call	_BORRAR_LCD	;wreg free
   538  000AE2                     
   539                           ;maincode.c: 33:     CURSOR_HOME();
   540  000AE2  EC1A  F007         	call	_CURSOR_HOME	;wreg free
   541  000AE6                     
   542                           ;maincode.c: 34:     CURSOR_ONOFF(1);
   543  000AE6  0E01               	movlw	1
   544  000AE8  ECC7  F006         	call	_CURSOR_ONOFF
   545  000AEC  0012               	return		;funcret
   546  000AEE                     __end_of_lcd_conf:
   547                           	callstack 0
   548                           
   549 ;; *************** function _LCD_CONFIG *****************
   550 ;; Defined at:
   551 ;;		line 72 in file "LCD.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0
   567 ;;      Temps:          1       0       0       0       0       0       0       0       0
   568 ;;      Totals:         1       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        1 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 10
   572 ;; This function calls:
   573 ;;		_ENVIA_LCD_CMD
   574 ;;		_ENVIA_NIBBLE
   575 ;; This function is called by:
   576 ;;		_lcd_conf
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text2
   581  000A0A                     __ptext2:
   582                           	callstack 0
   583  000A0A                     _LCD_CONFIG:
   584                           	callstack 19
   585  000A0A                     
   586                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   587  000A0A  908C               	bcf	140,0,c	;volatile
   588                           
   589                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   590  000A0C  928C               	bcf	140,1,c	;volatile
   591  000A0E                     
   592                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   593  000A0E  0E30               	movlw	48
   594  000A10  ECDF  F006         	call	_ENVIA_NIBBLE
   595  000A14                     
   596                           ;LCD.c: 77:         _delay(24000);
   597  000A14  0E20               	movlw	32
   598  000A16  6E21               	movwf	??_LCD_CONFIG^0,c
   599  000A18  0E2A               	movlw	42
   600  000A1A                     u367:
   601  000A1A  2EE8               	decfsz	wreg,f,c
   602  000A1C  D7FE               	bra	u367
   603  000A1E  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   604  000A20  D7FC               	bra	u367
   605  000A22                     
   606                           ;LCD.c: 78:         _delay(24000);
   607  000A22  0E20               	movlw	32
   608  000A24  6E21               	movwf	??_LCD_CONFIG^0,c
   609  000A26  0E2A               	movlw	42
   610  000A28                     u377:
   611  000A28  2EE8               	decfsz	wreg,f,c
   612  000A2A  D7FE               	bra	u377
   613  000A2C  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   614  000A2E  D7FC               	bra	u377
   615                           
   616                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   617  000A30  0E30               	movlw	48
   618  000A32  ECDF  F006         	call	_ENVIA_NIBBLE
   619  000A36                     
   620                           ;LCD.c: 83:  _delay(1200);
   621  000A36  0EF0               	movlw	240
   622  000A38                     u387:
   623  000A38  D000               	nop2	
   624  000A3A  2EE8               	decfsz	wreg,f,c
   625  000A3C  D7FD               	bra	u387
   626  000A3E                     
   627                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   628  000A3E  0E30               	movlw	48
   629  000A40  ECDF  F006         	call	_ENVIA_NIBBLE
   630  000A44                     
   631                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   632  000A44  0E20               	movlw	32
   633  000A46  ECDF  F006         	call	_ENVIA_NIBBLE
   634  000A4A                     
   635                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   636  000A4A  0E01               	movlw	1
   637  000A4C  EC2B  F006         	call	_ENVIA_LCD_CMD
   638  000A50                     
   639                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   640  000A50  0E28               	movlw	40
   641  000A52  EC2B  F006         	call	_ENVIA_LCD_CMD
   642  000A56                     
   643                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   644  000A56  0E0F               	movlw	15
   645  000A58  EC2B  F006         	call	_ENVIA_LCD_CMD
   646  000A5C                     
   647                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   648  000A5C  0E06               	movlw	6
   649  000A5E  EC2B  F006         	call	_ENVIA_LCD_CMD
   650  000A62                     
   651                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   652  000A62  0E01               	movlw	1
   653  000A64  EC2B  F006         	call	_ENVIA_LCD_CMD
   654  000A68  0012               	return		;funcret
   655  000A6A                     __end_of_LCD_CONFIG:
   656                           	callstack 0
   657                           
   658 ;; *************** function _CURSOR_ONOFF *****************
   659 ;; Defined at:
   660 ;;		line 35 in file "LCD.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  estado          1    wreg     unsigned char 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  estado          1   32[COMRAM] unsigned char 
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, status,2, status,0, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   674 ;;      Params:         0       0       0       0       0       0       0       0       0
   675 ;;      Locals:         1       0       0       0       0       0       0       0       0
   676 ;;      Temps:          0       0       0       0       0       0       0       0       0
   677 ;;      Totals:         1       0       0       0       0       0       0       0       0
   678 ;;Total ram usage:        1 bytes
   679 ;; Hardware stack levels used: 1
   680 ;; Hardware stack levels required when called: 10
   681 ;; This function calls:
   682 ;;		_ENVIA_LCD_CMD
   683 ;; This function is called by:
   684 ;;		_lcd_conf
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text3
   689  000D8E                     __ptext3:
   690                           	callstack 0
   691  000D8E                     _CURSOR_ONOFF:
   692                           	callstack 19
   693                           
   694                           ;incstack = 0
   695                           ;CURSOR_ONOFF@estado stored from wreg
   696  000D8E  6E21               	movwf	CURSOR_ONOFF@estado^0,c
   697  000D90                     
   698                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   699  000D90  5021               	movf	CURSOR_ONOFF@estado^0,w,c
   700  000D92  A4D8               	btfss	status,2,c
   701  000D94  EFCE  F006         	goto	u41
   702  000D98  EFD0  F006         	goto	u40
   703  000D9C                     u41:
   704  000D9C  EFD3  F006         	goto	l991
   705  000DA0                     u40:
   706  000DA0  0E0E               	movlw	14
   707  000DA2  EC2B  F006         	call	_ENVIA_LCD_CMD
   708  000DA6                     l991:
   709                           
   710                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   711  000DA6  0421               	decf	CURSOR_ONOFF@estado^0,w,c
   712  000DA8  A4D8               	btfss	status,2,c
   713  000DAA  EFD9  F006         	goto	u51
   714  000DAE  EFDB  F006         	goto	u50
   715  000DB2                     u51:
   716  000DB2  EFDE  F006         	goto	l91
   717  000DB6                     u50:
   718  000DB6  0E0C               	movlw	12
   719  000DB8  EC2B  F006         	call	_ENVIA_LCD_CMD
   720  000DBC                     l91:
   721  000DBC  0012               	return		;funcret
   722  000DBE                     __end_of_CURSOR_ONOFF:
   723                           	callstack 0
   724                           
   725 ;; *************** function _CURSOR_HOME *****************
   726 ;; Defined at:
   727 ;;		line 30 in file "LCD.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         0       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 10
   748 ;; This function calls:
   749 ;;		_ENVIA_LCD_CMD
   750 ;; This function is called by:
   751 ;;		_lcd_conf
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text4
   756  000E34                     __ptext4:
   757                           	callstack 0
   758  000E34                     _CURSOR_HOME:
   759                           	callstack 19
   760  000E34                     
   761                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   762  000E34  0E02               	movlw	2
   763  000E36  EC2B  F006         	call	_ENVIA_LCD_CMD
   764  000E3A  0012               	return		;funcret
   765  000E3C                     __end_of_CURSOR_HOME:
   766                           	callstack 0
   767                           
   768 ;; *************** function _BORRAR_LCD *****************
   769 ;; Defined at:
   770 ;;		line 67 in file "LCD.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : 0/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   784 ;;      Params:         0       0       0       0       0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0       0       0       0       0
   786 ;;      Temps:          0       0       0       0       0       0       0       0       0
   787 ;;      Totals:         0       0       0       0       0       0       0       0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels used: 1
   790 ;; Hardware stack levels required when called: 10
   791 ;; This function calls:
   792 ;;		_ENVIA_LCD_CMD
   793 ;; This function is called by:
   794 ;;		_lcd_conf
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text5
   799  000E3C                     __ptext5:
   800                           	callstack 0
   801  000E3C                     _BORRAR_LCD:
   802                           	callstack 19
   803  000E3C                     
   804                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   805  000E3C  0E01               	movlw	1
   806  000E3E  EC2B  F006         	call	_ENVIA_LCD_CMD
   807  000E42  0012               	return		;funcret
   808  000E44                     __end_of_BORRAR_LCD:
   809                           	callstack 0
   810                           
   811 ;; *************** function _init_conf *****************
   812 ;; Defined at:
   813 ;;		line 18 in file "maincode.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		None
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 8
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text6
   842  000E26                     __ptext6:
   843                           	callstack 0
   844  000E26                     _init_conf:
   845                           	callstack 22
   846  000E26                     
   847                           ;maincode.c: 19:     RCONbits.IPEN = 1;
   848  000E26  8ED0               	bsf	208,7,c	;volatile
   849                           
   850                           ;maincode.c: 20:     INTCONbits.INT0IE = 1;
   851  000E28  88F2               	bsf	242,4,c	;volatile
   852                           
   853                           ;maincode.c: 21:     INTCON3bits.INT1IE = 1;
   854  000E2A  86F0               	bsf	240,3,c	;volatile
   855                           
   856                           ;maincode.c: 22:     INTCON3bits.INT1IP = 0;
   857  000E2C  9CF0               	bcf	240,6,c	;volatile
   858                           
   859                           ;maincode.c: 23:     INTCONbits.GIEH = 1;
   860  000E2E  8EF2               	bsf	242,7,c	;volatile
   861                           
   862                           ;maincode.c: 24:     INTCONbits.GIEL = 1;
   863  000E30  8CF2               	bsf	242,6,c	;volatile
   864  000E32  0012               	return		;funcret
   865  000E34                     __end_of_init_conf:
   866                           	callstack 0
   867                           
   868 ;; *************** function _POS_CURSOR *****************
   869 ;; Defined at:
   870 ;;		line 6 in file "LCD.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  fila            1    wreg     unsigned char 
   873 ;;  columna         1   32[COMRAM] unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  fila            1   33[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         1       0       0       0       0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         2       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:        2 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 10
   892 ;; This function calls:
   893 ;;		_ENVIA_LCD_CMD
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text7
   900  000BA8                     __ptext7:
   901                           	callstack 0
   902  000BA8                     _POS_CURSOR:
   903                           	callstack 20
   904                           
   905                           ;incstack = 0
   906                           ;POS_CURSOR@fila stored from wreg
   907  000BA8  6E22               	movwf	POS_CURSOR@fila^0,c
   908  000BAA                     
   909                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   910  000BAA  0422               	decf	POS_CURSOR@fila^0,w,c
   911  000BAC  A4D8               	btfss	status,2,c
   912  000BAE  EFDB  F005         	goto	u231
   913  000BB2  EFDD  F005         	goto	u230
   914  000BB6                     u231:
   915  000BB6  EFE3  F005         	goto	l1419
   916  000BBA                     u230:
   917  000BBA                     
   918                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   919  000BBA  5021               	movf	POS_CURSOR@columna^0,w,c
   920  000BBC  0F80               	addlw	128
   921  000BBE  EC2B  F006         	call	_ENVIA_LCD_CMD
   922                           
   923                           ;LCD.c: 11:  }
   924  000BC2  EFF0  F005         	goto	l73
   925  000BC6                     l1419:
   926  000BC6  0E02               	movlw	2
   927  000BC8  1822               	xorwf	POS_CURSOR@fila^0,w,c
   928  000BCA  A4D8               	btfss	status,2,c
   929  000BCC  EFEA  F005         	goto	u241
   930  000BD0  EFEC  F005         	goto	u240
   931  000BD4                     u241:
   932  000BD4  EFF0  F005         	goto	l73
   933  000BD8                     u240:
   934  000BD8                     
   935                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   936  000BD8  5021               	movf	POS_CURSOR@columna^0,w,c
   937  000BDA  0FC0               	addlw	192
   938  000BDC  EC2B  F006         	call	_ENVIA_LCD_CMD
   939  000BE0                     l73:
   940  000BE0  0012               	return		;funcret
   941  000BE2                     __end_of_POS_CURSOR:
   942                           	callstack 0
   943                           
   944 ;; *************** function _ENVIA_LCD_CMD *****************
   945 ;; Defined at:
   946 ;;		line 104 in file "LCD.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  dato            1    wreg     unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  dato            1   30[COMRAM] unsigned char 
   951 ;;  aux             1   31[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   961 ;;      Params:         0       0       0       0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0
   964 ;;      Totals:         2       0       0       0       0       0       0       0       0
   965 ;;Total ram usage:        2 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 9
   968 ;; This function calls:
   969 ;;		_ENVIA_NIBBLE
   970 ;;		_LEER_LCD
   971 ;; This function is called by:
   972 ;;		_POS_CURSOR
   973 ;;		_CURSOR_HOME
   974 ;;		_CURSOR_ONOFF
   975 ;;		_BORRAR_LCD
   976 ;;		_LCD_CONFIG
   977 ;;		_BLINK_CURSOR
   978 ;;		_DISPLAY_ONOFF
   979 ;;		_GENERACARACTER
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text8
   984  000C56                     __ptext8:
   985                           	callstack 0
   986  000C56                     _ENVIA_LCD_CMD:
   987                           	callstack 19
   988                           
   989                           ;incstack = 0
   990                           ;ENVIA_LCD_CMD@dato stored from wreg
   991  000C56  6E1F               	movwf	ENVIA_LCD_CMD@dato^0,c
   992  000C58                     
   993                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   994  000C58  908C               	bcf	140,0,c	;volatile
   995  000C5A                     
   996                           ;LCD.c: 108:  LEER_LCD();
   997  000C5A  EC23  F004         	call	_LEER_LCD	;wreg free
   998  000C5E                     
   999                           ;LCD.c: 109:  TRISD = 0b00000000;
  1000  000C5E  0E00               	movlw	0
  1001  000C60  6E95               	movwf	149,c	;volatile
  1002  000C62                     
  1003                           ;LCD.c: 111:         _delay(1200);
  1004  000C62  0EF0               	movlw	240
  1005  000C64                     u397:
  1006  000C64  D000               	nop2	
  1007  000C66  2EE8               	decfsz	wreg,f,c
  1008  000C68  D7FD               	bra	u397
  1009  000C6A                     
  1010                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1011  000C6A  928C               	bcf	140,1,c	;volatile
  1012  000C6C                     
  1013                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1014  000C6C  948C               	bcf	140,2,c	;volatile
  1015  000C6E                     
  1016                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1017  000C6E  908C               	bcf	140,0,c	;volatile
  1018  000C70                     
  1019                           ;LCD.c: 115:  aux = dato & 0xF0;
  1020  000C70  501F               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1021  000C72  0BF0               	andlw	240
  1022  000C74  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
  1023  000C76                     
  1024                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1025  000C76  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1026  000C78  ECDF  F006         	call	_ENVIA_NIBBLE
  1027  000C7C                     
  1028                           ;LCD.c: 117:  aux = dato<<4;
  1029  000C7C  381F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1030  000C7E  0BF0               	andlw	240
  1031  000C80  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
  1032  000C82                     
  1033                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1034  000C82  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1035  000C84  ECDF  F006         	call	_ENVIA_NIBBLE
  1036  000C88  0012               	return		;funcret
  1037  000C8A                     __end_of_ENVIA_LCD_CMD:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _ESCRIBE_MENSAJE *****************
  1041 ;; Defined at:
  1042 ;;		line 41 in file "LCD.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  cadena          2   32[COMRAM] PTR const unsigned char 
  1045 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1046 ;;  tam             1   34[COMRAM] unsigned char 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  i               1   37[COMRAM] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         3       0       0       0       0       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 10
  1065 ;; This function calls:
  1066 ;;		_ENVIA_CHAR
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text9
  1073  000AEE                     __ptext9:
  1074                           	callstack 0
  1075  000AEE                     _ESCRIBE_MENSAJE:
  1076                           	callstack 20
  1077  000AEE                     
  1078                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1079  000AEE  0E00               	movlw	0
  1080  000AF0  6E26               	movwf	ESCRIBE_MENSAJE@i^0,c
  1081                           
  1082                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1083  000AF2  0E00               	movlw	0
  1084  000AF4  6E26               	movwf	ESCRIBE_MENSAJE@i^0,c
  1085  000AF6  EF8C  F005         	goto	l1429
  1086  000AFA                     l1425:
  1087                           
  1088                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1089  000AFA  5026               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1090  000AFC  2421               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1091  000AFE  6E24               	movwf	??_ESCRIBE_MENSAJE^0,c
  1092  000B00  0E00               	movlw	0
  1093  000B02  2022               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1094  000B04  6E25               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1095  000B06  C024  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1096  000B0A  C025  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1097  000B0E                     	if	0	;tblptru may be non-zero
  1098  000B0E                     	endif
  1099  000B0E                     	if	0	;tblptru may be non-zero
  1100  000B0E                     	endif
  1101  000B0E  0008               	tblrd		*
  1102  000B10  50F5               	movf	tablat,w,c
  1103  000B12  EC45  F006         	call	_ENVIA_CHAR
  1104  000B16                     
  1105                           ;LCD.c: 47:  }
  1106  000B16  2A26               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1107  000B18                     l1429:
  1108  000B18  5023               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1109  000B1A  5C26               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1110  000B1C  A0D8               	btfss	status,0,c
  1111  000B1E  EF93  F005         	goto	u251
  1112  000B22  EF95  F005         	goto	u250
  1113  000B26                     u251:
  1114  000B26  EF7D  F005         	goto	l1425
  1115  000B2A                     u250:
  1116  000B2A  0012               	return		;funcret
  1117  000B2C                     __end_of_ESCRIBE_MENSAJE:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _ENVIA_CHAR *****************
  1121 ;; Defined at:
  1122 ;;		line 50 in file "LCD.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  dato            1    wreg     unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  dato            1   30[COMRAM] unsigned char 
  1127 ;;  aux             1   31[COMRAM] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1137 ;;      Params:         0       0       0       0       0       0       0       0       0
  1138 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1140 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1141 ;;Total ram usage:        2 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 9
  1144 ;; This function calls:
  1145 ;;		_ENVIA_NIBBLE
  1146 ;;		_LEER_LCD
  1147 ;; This function is called by:
  1148 ;;		_ESCRIBE_MENSAJE
  1149 ;;		_GENERACARACTER
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text10
  1154  000C8A                     __ptext10:
  1155                           	callstack 0
  1156  000C8A                     _ENVIA_CHAR:
  1157                           	callstack 20
  1158                           
  1159                           ;incstack = 0
  1160                           ;ENVIA_CHAR@dato stored from wreg
  1161  000C8A  6E1F               	movwf	ENVIA_CHAR@dato^0,c
  1162  000C8C                     
  1163                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1164  000C8C  808C               	bsf	140,0,c	;volatile
  1165  000C8E                     
  1166                           ;LCD.c: 54:  LEER_LCD();
  1167  000C8E  EC23  F004         	call	_LEER_LCD	;wreg free
  1168  000C92                     
  1169                           ;LCD.c: 55:  TRISD = 0x00;
  1170  000C92  0E00               	movlw	0
  1171  000C94  6E95               	movwf	149,c	;volatile
  1172  000C96                     
  1173                           ;LCD.c: 56:         _delay(1200);
  1174  000C96  0EF0               	movlw	240
  1175  000C98                     u407:
  1176  000C98  D000               	nop2	
  1177  000C9A  2EE8               	decfsz	wreg,f,c
  1178  000C9C  D7FD               	bra	u407
  1179  000C9E                     
  1180                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1181  000C9E  928C               	bcf	140,1,c	;volatile
  1182  000CA0                     
  1183                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1184  000CA0  948C               	bcf	140,2,c	;volatile
  1185  000CA2                     
  1186                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1187  000CA2  808C               	bsf	140,0,c	;volatile
  1188  000CA4                     
  1189                           ;LCD.c: 61:  aux = dato & 0xF0;
  1190  000CA4  501F               	movf	ENVIA_CHAR@dato^0,w,c
  1191  000CA6  0BF0               	andlw	240
  1192  000CA8  6E20               	movwf	ENVIA_CHAR@aux^0,c
  1193  000CAA                     
  1194                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1195  000CAA  5020               	movf	ENVIA_CHAR@aux^0,w,c
  1196  000CAC  ECDF  F006         	call	_ENVIA_NIBBLE
  1197  000CB0                     
  1198                           ;LCD.c: 63:  aux = dato << 4;
  1199  000CB0  381F               	swapf	ENVIA_CHAR@dato^0,w,c
  1200  000CB2  0BF0               	andlw	240
  1201  000CB4  6E20               	movwf	ENVIA_CHAR@aux^0,c
  1202  000CB6                     
  1203                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1204  000CB6  5020               	movf	ENVIA_CHAR@aux^0,w,c
  1205  000CB8  ECDF  F006         	call	_ENVIA_NIBBLE
  1206  000CBC  0012               	return		;funcret
  1207  000CBE                     __end_of_ENVIA_CHAR:
  1208                           	callstack 0
  1209                           
  1210 ;; *************** function _LEER_LCD *****************
  1211 ;; Defined at:
  1212 ;;		line 121 in file "LCD.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;  aux             1   29[COMRAM] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used: 1
  1232 ;; Hardware stack levels required when called: 8
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_ENVIA_CHAR
  1237 ;;		_ENVIA_LCD_CMD
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text11
  1242  000846                     __ptext11:
  1243                           	callstack 0
  1244  000846                     _LEER_LCD:
  1245                           	callstack 19
  1246  000846                     
  1247                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1248  000846  0EF8               	movlw	248
  1249  000848  6E95               	movwf	149,c	;volatile
  1250  00084A                     
  1251                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1252  00084A  908C               	bcf	140,0,c	;volatile
  1253  00084C                     
  1254                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1255  00084C  828C               	bsf	140,1,c	;volatile
  1256  00084E                     
  1257                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1258  00084E  848C               	bsf	140,2,c	;volatile
  1259  000850                     
  1260                           ;LCD.c: 128:         _delay(1200);
  1261  000850  0EF0               	movlw	240
  1262  000852                     u417:
  1263  000852  D000               	nop2	
  1264  000854  2EE8               	decfsz	wreg,f,c
  1265  000856  D7FD               	bra	u417
  1266  000858                     
  1267                           ;LCD.c: 130:  aux = PORTD;
  1268  000858  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1269  00085C                     
  1270                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1271  00085C  948C               	bcf	140,2,c	;volatile
  1272  00085E                     
  1273                           ;LCD.c: 132:         _delay(1200);
  1274  00085E  0EF0               	movlw	240
  1275  000860                     u427:
  1276  000860  D000               	nop2	
  1277  000862  2EE8               	decfsz	wreg,f,c
  1278  000864  D7FD               	bra	u427
  1279  000866                     
  1280                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1281  000866  848C               	bsf	140,2,c	;volatile
  1282  000868                     
  1283                           ;LCD.c: 135:         _delay(1200);
  1284  000868  0EF0               	movlw	240
  1285  00086A                     u437:
  1286  00086A  D000               	nop2	
  1287  00086C  2EE8               	decfsz	wreg,f,c
  1288  00086E  D7FD               	bra	u437
  1289  000870                     
  1290                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1291  000870  948C               	bcf	140,2,c	;volatile
  1292  000872                     l821:
  1293                           
  1294                           ;LCD.c: 138:  aux = aux & 0x80;
  1295  000872  501E               	movf	LEER_LCD@aux^0,w,c
  1296  000874  0B80               	andlw	128
  1297  000876  6E1E               	movwf	LEER_LCD@aux^0,c
  1298                           
  1299                           ;LCD.c: 139:  while(aux == 0x80)
  1300  000878  EF52  F004         	goto	l835
  1301  00087C                     l116:
  1302                           
  1303                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1304  00087C  848C               	bsf	140,2,c	;volatile
  1305  00087E                     
  1306                           ;LCD.c: 142:             _delay(1200);
  1307  00087E  0EF0               	movlw	240
  1308  000880                     u447:
  1309  000880  D000               	nop2	
  1310  000882  2EE8               	decfsz	wreg,f,c
  1311  000884  D7FD               	bra	u447
  1312  000886                     
  1313                           ;LCD.c: 143:             aux = PORTD;
  1314  000886  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1315  00088A                     
  1316                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1317  00088A  948C               	bcf	140,2,c	;volatile
  1318                           
  1319                           ;LCD.c: 145:             _delay(1200);
  1320  00088C  0EF0               	movlw	240
  1321  00088E                     u457:
  1322  00088E  D000               	nop2	
  1323  000890  2EE8               	decfsz	wreg,f,c
  1324  000892  D7FD               	bra	u457
  1325  000894                     
  1326                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1327  000894  848C               	bsf	140,2,c	;volatile
  1328                           
  1329                           ;LCD.c: 147:             _delay(1200);
  1330  000896  0EF0               	movlw	240
  1331  000898                     u467:
  1332  000898  D000               	nop2	
  1333  00089A  2EE8               	decfsz	wreg,f,c
  1334  00089C  D7FD               	bra	u467
  1335  00089E                     
  1336                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1337  00089E  948C               	bcf	140,2,c	;volatile
  1338  0008A0  EF39  F004         	goto	l821
  1339  0008A4                     l835:
  1340                           
  1341                           ;LCD.c: 139:  while(aux == 0x80)
  1342  0008A4  0E80               	movlw	128
  1343  0008A6  181E               	xorwf	LEER_LCD@aux^0,w,c
  1344  0008A8  B4D8               	btfsc	status,2,c
  1345  0008AA  EF59  F004         	goto	u11
  1346  0008AE  EF5B  F004         	goto	u10
  1347  0008B2                     u11:
  1348  0008B2  EF3E  F004         	goto	l116
  1349  0008B6                     u10:
  1350  0008B6  0012               	return		;funcret
  1351  0008B8                     __end_of_LEER_LCD:
  1352                           	callstack 0
  1353                           
  1354 ;; *************** function _ENVIA_NIBBLE *****************
  1355 ;; Defined at:
  1356 ;;		line 93 in file "LCD.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  dato            1    wreg     unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  dato            1   29[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        1 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 8
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_ENVIA_CHAR
  1381 ;;		_LCD_CONFIG
  1382 ;;		_ENVIA_LCD_CMD
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text12
  1387  000DBE                     __ptext12:
  1388                           	callstack 0
  1389  000DBE                     _ENVIA_NIBBLE:
  1390                           	callstack 20
  1391                           
  1392                           ;incstack = 0
  1393                           ;ENVIA_NIBBLE@dato stored from wreg
  1394  000DBE  6E1E               	movwf	ENVIA_NIBBLE@dato^0,c
  1395  000DC0                     
  1396                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1397  000DC0  0E0F               	movlw	15
  1398  000DC2  168C               	andwf	140,f,c	;volatile
  1399                           
  1400                           ;LCD.c: 96:  dato &= 0xF0;
  1401  000DC4  0EF0               	movlw	240
  1402  000DC6  161E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1403                           
  1404                           ;LCD.c: 97:  LATD|= dato;
  1405  000DC8  501E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1406  000DCA  128C               	iorwf	140,f,c	;volatile
  1407  000DCC                     
  1408                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1409  000DCC  848C               	bsf	140,2,c	;volatile
  1410  000DCE                     
  1411                           ;LCD.c: 100:         _delay(1200);
  1412  000DCE  0EF0               	movlw	240
  1413  000DD0                     u477:
  1414  000DD0  D000               	nop2	
  1415  000DD2  2EE8               	decfsz	wreg,f,c
  1416  000DD4  D7FD               	bra	u477
  1417  000DD6                     
  1418                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1419  000DD6  948C               	bcf	140,2,c	;volatile
  1420  000DD8  0012               	return		;funcret
  1421  000DDA                     __end_of_ENVIA_NIBBLE:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _INT1_ISR *****************
  1425 ;; Defined at:
  1426 ;;		line 59 in file "maincode.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1440 ;;      Params:         0       0       0       0       0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1442 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1443 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1444 ;;Total ram usage:        7 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 7
  1447 ;; This function calls:
  1448 ;;		i1_ESCRIBE_MENSAJE
  1449 ;;		i1_POS_CURSOR
  1450 ;; This function is called by:
  1451 ;;		Interrupt level 1
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	intcodelo
  1456  000018                     __pintcodelo:
  1457                           	callstack 0
  1458  000018                     _INT1_ISR:
  1459                           	callstack 19
  1460                           
  1461                           ;incstack = 0
  1462  000018  802A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1463  00001A  CFD8 F017          	movff	status,??_INT1_ISR
  1464  00001E  CFE8 F018          	movff	wreg,??_INT1_ISR+1
  1465  000022  CFE0 F019          	movff	bsr,??_INT1_ISR+2
  1466  000026  CFF6 F01A          	movff	tblptrl,??_INT1_ISR+3
  1467  00002A  CFF7 F01B          	movff	tblptrh,??_INT1_ISR+4
  1468  00002E  CFF8 F01C          	movff	tblptru,??_INT1_ISR+5
  1469  000032  CFF5 F01D          	movff	tablat,??_INT1_ISR+6
  1470  000036                     
  1471                           ;maincode.c: 60:     POS_CURSOR(2,0);
  1472  000036  0E00               	movlw	0
  1473  000038  6E11               	movwf	i1POS_CURSOR@columna^0,c
  1474  00003A  0E02               	movlw	2
  1475  00003C  ECF1  F005         	call	i1_POS_CURSOR
  1476  000040                     
  1477                           ;maincode.c: 61:     ESCRIBE_MENSAJE("Machucaste INT1 ",16);
  1478  000040  0E12               	movlw	low STR_4
  1479  000042  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena^0,c
  1480  000044  0E08               	movlw	high STR_4
  1481  000046  6E12               	movwf	(i1ESCRIBE_MENSAJE@cadena+1)^0,c
  1482  000048  0E10               	movlw	16
  1483  00004A  6E13               	movwf	i1ESCRIBE_MENSAJE@tam^0,c
  1484  00004C  EC96  F005         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1485  000050                     
  1486                           ;maincode.c: 62:     INTCON3bits.INT1IF = 0;
  1487  000050  90F0               	bcf	240,0,c	;volatile
  1488  000052                     
  1489                           ;maincode.c: 63:     indicador = 1;
  1490  000052  0E01               	movlw	1
  1491  000054  6E29               	movwf	_indicador^0,c
  1492  000056  C01D  FFF5         	movff	??_INT1_ISR+6,tablat
  1493  00005A  C01C  FFF8         	movff	??_INT1_ISR+5,tblptru
  1494  00005E  C01B  FFF7         	movff	??_INT1_ISR+4,tblptrh
  1495  000062  C01A  FFF6         	movff	??_INT1_ISR+3,tblptrl
  1496  000066  C019  FFE0         	movff	??_INT1_ISR+2,bsr
  1497  00006A  C018  FFE8         	movff	??_INT1_ISR+1,wreg
  1498  00006E  C017  FFD8         	movff	??_INT1_ISR,status
  1499  000072  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1500  000074  0010               	retfie	
  1501  000076                     __end_of_INT1_ISR:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function i1_POS_CURSOR *****************
  1505 ;; Defined at:
  1506 ;;		line 6 in file "LCD.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  fila            1    wreg     unsigned char 
  1509 ;;  columna         1   16[COMRAM] unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  fila            1   17[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1521 ;;      Params:         1       0       0       0       0       0       0       0       0
  1522 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1524 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1525 ;;Total ram usage:        2 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 6
  1528 ;; This function calls:
  1529 ;;		i1_ENVIA_LCD_CMD
  1530 ;; This function is called by:
  1531 ;;		_INT1_ISR
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text14
  1536  000BE2                     __ptext14:
  1537                           	callstack 0
  1538  000BE2                     i1_POS_CURSOR:
  1539                           	callstack 19
  1540                           
  1541                           ;incstack = 0
  1542                           ;i1POS_CURSOR@fila stored from wreg
  1543  000BE2  6E12               	movwf	i1POS_CURSOR@fila^0,c
  1544  000BE4                     
  1545                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1546  000BE4  0412               	decf	i1POS_CURSOR@fila^0,w,c
  1547  000BE6  A4D8               	btfss	status,2,c
  1548  000BE8  EFF8  F005         	goto	i1u26_21
  1549  000BEC  EFFA  F005         	goto	i1u26_20
  1550  000BF0                     i1u26_21:
  1551  000BF0  EF00  F006         	goto	i1l1435
  1552  000BF4                     i1u26_20:
  1553  000BF4                     
  1554                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1555  000BF4  5011               	movf	i1POS_CURSOR@columna^0,w,c
  1556  000BF6  0F80               	addlw	128
  1557  000BF8  EC5F  F006         	call	i1_ENVIA_LCD_CMD
  1558                           
  1559                           ;LCD.c: 11:  }
  1560  000BFC  EF0D  F006         	goto	i1l73
  1561  000C00                     i1l1435:
  1562  000C00  0E02               	movlw	2
  1563  000C02  1812               	xorwf	i1POS_CURSOR@fila^0,w,c
  1564  000C04  A4D8               	btfss	status,2,c
  1565  000C06  EF07  F006         	goto	i1u27_21
  1566  000C0A  EF09  F006         	goto	i1u27_20
  1567  000C0E                     i1u27_21:
  1568  000C0E  EF0D  F006         	goto	i1l73
  1569  000C12                     i1u27_20:
  1570  000C12                     
  1571                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1572  000C12  5011               	movf	i1POS_CURSOR@columna^0,w,c
  1573  000C14  0FC0               	addlw	192
  1574  000C16  EC5F  F006         	call	i1_ENVIA_LCD_CMD
  1575  000C1A                     i1l73:
  1576  000C1A  0012               	return		;funcret
  1577  000C1C                     __end_ofi1_POS_CURSOR:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function i1_ENVIA_LCD_CMD *****************
  1581 ;; Defined at:
  1582 ;;		line 104 in file "LCD.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  dato            1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  dato            1   14[COMRAM] unsigned char 
  1587 ;;  aux             1   15[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         0       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        2 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 5
  1604 ;; This function calls:
  1605 ;;		i1_ENVIA_NIBBLE
  1606 ;;		i1_LEER_LCD
  1607 ;; This function is called by:
  1608 ;;		i1_POS_CURSOR
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text15
  1613  000CBE                     __ptext15:
  1614                           	callstack 0
  1615  000CBE                     i1_ENVIA_LCD_CMD:
  1616                           	callstack 19
  1617                           
  1618                           ;incstack = 0
  1619                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  1620  000CBE  6E0F               	movwf	i1ENVIA_LCD_CMD@dato^0,c
  1621  000CC0                     
  1622                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1623  000CC0  908C               	bcf	140,0,c	;volatile
  1624  000CC2                     
  1625                           ;LCD.c: 108:  LEER_LCD();
  1626  000CC2  EC5C  F004         	call	i1_LEER_LCD	;wreg free
  1627  000CC6                     
  1628                           ;LCD.c: 109:  TRISD = 0b00000000;
  1629  000CC6  0E00               	movlw	0
  1630  000CC8  6E95               	movwf	149,c	;volatile
  1631  000CCA                     
  1632                           ;LCD.c: 111:         _delay(1200);
  1633  000CCA  0EF0               	movlw	240
  1634  000CCC                     i1u48_27:
  1635  000CCC  D000               	nop2	
  1636  000CCE  2EE8               	decfsz	wreg,f,c
  1637  000CD0  D7FD               	bra	i1u48_27
  1638  000CD2                     
  1639                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1640  000CD2  928C               	bcf	140,1,c	;volatile
  1641  000CD4                     
  1642                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1643  000CD4  948C               	bcf	140,2,c	;volatile
  1644  000CD6                     
  1645                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1646  000CD6  908C               	bcf	140,0,c	;volatile
  1647  000CD8                     
  1648                           ;LCD.c: 115:  aux = dato & 0xF0;
  1649  000CD8  500F               	movf	i1ENVIA_LCD_CMD@dato^0,w,c
  1650  000CDA  0BF0               	andlw	240
  1651  000CDC  6E10               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  1652  000CDE                     
  1653                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1654  000CDE  5010               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  1655  000CE0  ECED  F006         	call	i1_ENVIA_NIBBLE
  1656  000CE4                     
  1657                           ;LCD.c: 117:  aux = dato<<4;
  1658  000CE4  380F               	swapf	i1ENVIA_LCD_CMD@dato^0,w,c
  1659  000CE6  0BF0               	andlw	240
  1660  000CE8  6E10               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  1661  000CEA                     
  1662                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1663  000CEA  5010               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  1664  000CEC  ECED  F006         	call	i1_ENVIA_NIBBLE
  1665  000CF0  0012               	return		;funcret
  1666  000CF2                     __end_ofi1_ENVIA_LCD_CMD:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function i1_ESCRIBE_MENSAJE *****************
  1670 ;; Defined at:
  1671 ;;		line 41 in file "LCD.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  cadena          2   16[COMRAM] PTR const unsigned char 
  1674 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  1675 ;;  tam             1   18[COMRAM] unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  i               1   21[COMRAM] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         3       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        6 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 6
  1694 ;; This function calls:
  1695 ;;		i1_ENVIA_CHAR
  1696 ;; This function is called by:
  1697 ;;		_INT1_ISR
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text16
  1702  000B2C                     __ptext16:
  1703                           	callstack 0
  1704  000B2C                     i1_ESCRIBE_MENSAJE:
  1705                           	callstack 19
  1706  000B2C                     
  1707                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1708  000B2C  0E00               	movlw	0
  1709  000B2E  6E16               	movwf	i1ESCRIBE_MENSAJE@i^0,c
  1710                           
  1711                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1712  000B30  0E00               	movlw	0
  1713  000B32  6E16               	movwf	i1ESCRIBE_MENSAJE@i^0,c
  1714  000B34  EFAB  F005         	goto	i1l1453
  1715  000B38                     i1l1449:
  1716                           
  1717                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1718  000B38  5016               	movf	i1ESCRIBE_MENSAJE@i^0,w,c
  1719  000B3A  2411               	addwf	i1ESCRIBE_MENSAJE@cadena^0,w,c
  1720  000B3C  6E14               	movwf	??i1_ESCRIBE_MENSAJE^0,c
  1721  000B3E  0E00               	movlw	0
  1722  000B40  2012               	addwfc	(i1ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1723  000B42  6E15               	movwf	(??i1_ESCRIBE_MENSAJE+1)^0,c
  1724  000B44  C014  FFF6         	movff	??i1_ESCRIBE_MENSAJE,tblptrl
  1725  000B48  C015  FFF7         	movff	??i1_ESCRIBE_MENSAJE+1,tblptrh
  1726  000B4C                     	if	0	;tblptru may be non-zero
  1727  000B4C                     	endif
  1728  000B4C                     	if	0	;tblptru may be non-zero
  1729  000B4C                     	endif
  1730  000B4C  0008               	tblrd		*
  1731  000B4E  50F5               	movf	tablat,w,c
  1732  000B50  EC79  F006         	call	i1_ENVIA_CHAR
  1733  000B54                     
  1734                           ;LCD.c: 47:  }
  1735  000B54  2A16               	incf	i1ESCRIBE_MENSAJE@i^0,f,c
  1736  000B56                     i1l1453:
  1737  000B56  5013               	movf	i1ESCRIBE_MENSAJE@tam^0,w,c
  1738  000B58  5C16               	subwf	i1ESCRIBE_MENSAJE@i^0,w,c
  1739  000B5A  A0D8               	btfss	status,0,c
  1740  000B5C  EFB2  F005         	goto	i1u30_21
  1741  000B60  EFB4  F005         	goto	i1u30_20
  1742  000B64                     i1u30_21:
  1743  000B64  EF9C  F005         	goto	i1l1449
  1744  000B68                     i1u30_20:
  1745  000B68  0012               	return		;funcret
  1746  000B6A                     __end_ofi1_ESCRIBE_MENSAJE:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function i1_ENVIA_CHAR *****************
  1750 ;; Defined at:
  1751 ;;		line 50 in file "LCD.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  dato            1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  dato            1   14[COMRAM] unsigned char 
  1756 ;;  aux             1   15[COMRAM] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1769 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1770 ;;Total ram usage:        2 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 5
  1773 ;; This function calls:
  1774 ;;		i1_ENVIA_NIBBLE
  1775 ;;		i1_LEER_LCD
  1776 ;; This function is called by:
  1777 ;;		i1_ESCRIBE_MENSAJE
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text17
  1782  000CF2                     __ptext17:
  1783                           	callstack 0
  1784  000CF2                     i1_ENVIA_CHAR:
  1785                           	callstack 19
  1786                           
  1787                           ;incstack = 0
  1788                           ;i1ENVIA_CHAR@dato stored from wreg
  1789  000CF2  6E0F               	movwf	i1ENVIA_CHAR@dato^0,c
  1790  000CF4                     
  1791                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1792  000CF4  808C               	bsf	140,0,c	;volatile
  1793  000CF6                     
  1794                           ;LCD.c: 54:  LEER_LCD();
  1795  000CF6  EC5C  F004         	call	i1_LEER_LCD	;wreg free
  1796  000CFA                     
  1797                           ;LCD.c: 55:  TRISD = 0x00;
  1798  000CFA  0E00               	movlw	0
  1799  000CFC  6E95               	movwf	149,c	;volatile
  1800  000CFE                     
  1801                           ;LCD.c: 56:         _delay(1200);
  1802  000CFE  0EF0               	movlw	240
  1803  000D00                     i1u49_27:
  1804  000D00  D000               	nop2	
  1805  000D02  2EE8               	decfsz	wreg,f,c
  1806  000D04  D7FD               	bra	i1u49_27
  1807  000D06                     
  1808                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1809  000D06  928C               	bcf	140,1,c	;volatile
  1810  000D08                     
  1811                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1812  000D08  948C               	bcf	140,2,c	;volatile
  1813  000D0A                     
  1814                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1815  000D0A  808C               	bsf	140,0,c	;volatile
  1816  000D0C                     
  1817                           ;LCD.c: 61:  aux = dato & 0xF0;
  1818  000D0C  500F               	movf	i1ENVIA_CHAR@dato^0,w,c
  1819  000D0E  0BF0               	andlw	240
  1820  000D10  6E10               	movwf	i1ENVIA_CHAR@aux^0,c
  1821  000D12                     
  1822                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1823  000D12  5010               	movf	i1ENVIA_CHAR@aux^0,w,c
  1824  000D14  ECED  F006         	call	i1_ENVIA_NIBBLE
  1825  000D18                     
  1826                           ;LCD.c: 63:  aux = dato << 4;
  1827  000D18  380F               	swapf	i1ENVIA_CHAR@dato^0,w,c
  1828  000D1A  0BF0               	andlw	240
  1829  000D1C  6E10               	movwf	i1ENVIA_CHAR@aux^0,c
  1830  000D1E                     
  1831                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1832  000D1E  5010               	movf	i1ENVIA_CHAR@aux^0,w,c
  1833  000D20  ECED  F006         	call	i1_ENVIA_NIBBLE
  1834  000D24  0012               	return		;funcret
  1835  000D26                     __end_ofi1_ENVIA_CHAR:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function i1_LEER_LCD *****************
  1839 ;; Defined at:
  1840 ;;		line 121 in file "LCD.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;  aux             1   13[COMRAM] unsigned char 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0
  1855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1857 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1858 ;;Total ram usage:        1 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 4
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		i1_ENVIA_CHAR
  1865 ;;		i1_ENVIA_LCD_CMD
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text18
  1870  0008B8                     __ptext18:
  1871                           	callstack 0
  1872  0008B8                     i1_LEER_LCD:
  1873                           	callstack 19
  1874  0008B8                     
  1875                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1876  0008B8  0EF8               	movlw	248
  1877  0008BA  6E95               	movwf	149,c	;volatile
  1878  0008BC                     
  1879                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1880  0008BC  908C               	bcf	140,0,c	;volatile
  1881  0008BE                     
  1882                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1883  0008BE  828C               	bsf	140,1,c	;volatile
  1884  0008C0                     
  1885                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1886  0008C0  848C               	bsf	140,2,c	;volatile
  1887  0008C2                     
  1888                           ;LCD.c: 128:         _delay(1200);
  1889  0008C2  0EF0               	movlw	240
  1890  0008C4                     i1u50_27:
  1891  0008C4  D000               	nop2	
  1892  0008C6  2EE8               	decfsz	wreg,f,c
  1893  0008C8  D7FD               	bra	i1u50_27
  1894  0008CA                     
  1895                           ;LCD.c: 130:  aux = PORTD;
  1896  0008CA  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1897  0008CE                     
  1898                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1899  0008CE  948C               	bcf	140,2,c	;volatile
  1900  0008D0                     
  1901                           ;LCD.c: 132:         _delay(1200);
  1902  0008D0  0EF0               	movlw	240
  1903  0008D2                     i1u51_27:
  1904  0008D2  D000               	nop2	
  1905  0008D4  2EE8               	decfsz	wreg,f,c
  1906  0008D6  D7FD               	bra	i1u51_27
  1907  0008D8                     
  1908                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1909  0008D8  848C               	bsf	140,2,c	;volatile
  1910  0008DA                     
  1911                           ;LCD.c: 135:         _delay(1200);
  1912  0008DA  0EF0               	movlw	240
  1913  0008DC                     i1u52_27:
  1914  0008DC  D000               	nop2	
  1915  0008DE  2EE8               	decfsz	wreg,f,c
  1916  0008E0  D7FD               	bra	i1u52_27
  1917  0008E2                     
  1918                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1919  0008E2  948C               	bcf	140,2,c	;volatile
  1920  0008E4                     i1l1273:
  1921                           
  1922                           ;LCD.c: 138:  aux = aux & 0x80;
  1923  0008E4  500E               	movf	i1LEER_LCD@aux^0,w,c
  1924  0008E6  0B80               	andlw	128
  1925  0008E8  6E0E               	movwf	i1LEER_LCD@aux^0,c
  1926                           
  1927                           ;LCD.c: 139:  while(aux == 0x80)
  1928  0008EA  EF8B  F004         	goto	i1l1287
  1929  0008EE                     i1l116:
  1930                           
  1931                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1932  0008EE  848C               	bsf	140,2,c	;volatile
  1933  0008F0                     
  1934                           ;LCD.c: 142:             _delay(1200);
  1935  0008F0  0EF0               	movlw	240
  1936  0008F2                     i1u53_27:
  1937  0008F2  D000               	nop2	
  1938  0008F4  2EE8               	decfsz	wreg,f,c
  1939  0008F6  D7FD               	bra	i1u53_27
  1940  0008F8                     
  1941                           ;LCD.c: 143:             aux = PORTD;
  1942  0008F8  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1943  0008FC                     
  1944                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1945  0008FC  948C               	bcf	140,2,c	;volatile
  1946                           
  1947                           ;LCD.c: 145:             _delay(1200);
  1948  0008FE  0EF0               	movlw	240
  1949  000900                     i1u54_27:
  1950  000900  D000               	nop2	
  1951  000902  2EE8               	decfsz	wreg,f,c
  1952  000904  D7FD               	bra	i1u54_27
  1953  000906                     
  1954                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1955  000906  848C               	bsf	140,2,c	;volatile
  1956                           
  1957                           ;LCD.c: 147:             _delay(1200);
  1958  000908  0EF0               	movlw	240
  1959  00090A                     i1u55_27:
  1960  00090A  D000               	nop2	
  1961  00090C  2EE8               	decfsz	wreg,f,c
  1962  00090E  D7FD               	bra	i1u55_27
  1963  000910                     
  1964                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1965  000910  948C               	bcf	140,2,c	;volatile
  1966  000912  EF72  F004         	goto	i1l1273
  1967  000916                     i1l1287:
  1968                           
  1969                           ;LCD.c: 139:  while(aux == 0x80)
  1970  000916  0E80               	movlw	128
  1971  000918  180E               	xorwf	i1LEER_LCD@aux^0,w,c
  1972  00091A  B4D8               	btfsc	status,2,c
  1973  00091C  EF92  F004         	goto	i1u21_21
  1974  000920  EF94  F004         	goto	i1u21_20
  1975  000924                     i1u21_21:
  1976  000924  EF77  F004         	goto	i1l116
  1977  000928                     i1u21_20:
  1978  000928  0012               	return		;funcret
  1979  00092A                     __end_ofi1_LEER_LCD:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function i1_ENVIA_NIBBLE *****************
  1983 ;; Defined at:
  1984 ;;		line 93 in file "LCD.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  dato            1    wreg     unsigned char 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  dato            1   13[COMRAM] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1998 ;;      Params:         0       0       0       0       0       0       0       0       0
  1999 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2001 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2002 ;;Total ram usage:        1 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 4
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		i1_ENVIA_CHAR
  2009 ;;		i1_ENVIA_LCD_CMD
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text19
  2014  000DDA                     __ptext19:
  2015                           	callstack 0
  2016  000DDA                     i1_ENVIA_NIBBLE:
  2017                           	callstack 19
  2018                           
  2019                           ;incstack = 0
  2020                           ;i1ENVIA_NIBBLE@dato stored from wreg
  2021  000DDA  6E0E               	movwf	i1ENVIA_NIBBLE@dato^0,c
  2022  000DDC                     
  2023                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2024  000DDC  0E0F               	movlw	15
  2025  000DDE  168C               	andwf	140,f,c	;volatile
  2026                           
  2027                           ;LCD.c: 96:  dato &= 0xF0;
  2028  000DE0  0EF0               	movlw	240
  2029  000DE2  160E               	andwf	i1ENVIA_NIBBLE@dato^0,f,c
  2030                           
  2031                           ;LCD.c: 97:  LATD|= dato;
  2032  000DE4  500E               	movf	i1ENVIA_NIBBLE@dato^0,w,c	;volatile
  2033  000DE6  128C               	iorwf	140,f,c	;volatile
  2034  000DE8                     
  2035                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2036  000DE8  848C               	bsf	140,2,c	;volatile
  2037  000DEA                     
  2038                           ;LCD.c: 100:         _delay(1200);
  2039  000DEA  0EF0               	movlw	240
  2040  000DEC                     i1u56_27:
  2041  000DEC  D000               	nop2	
  2042  000DEE  2EE8               	decfsz	wreg,f,c
  2043  000DF0  D7FD               	bra	i1u56_27
  2044  000DF2                     
  2045                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2046  000DF2  948C               	bcf	140,2,c	;volatile
  2047  000DF4  0012               	return		;funcret
  2048  000DF6                     __end_ofi1_ENVIA_NIBBLE:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function _INT0_ISR *****************
  2052 ;; Defined at:
  2053 ;;		line 52 in file "maincode.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2069 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2070 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2071 ;;Total ram usage:        4 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; Hardware stack levels required when called: 3
  2074 ;; This function calls:
  2075 ;;		i2_ESCRIBE_MENSAJE
  2076 ;;		i2_POS_CURSOR
  2077 ;; This function is called by:
  2078 ;;		Interrupt level 2
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	intcode
  2083  000008                     __pintcode:
  2084                           	callstack 0
  2085  000008                     _INT0_ISR:
  2086                           	callstack 19
  2087                           
  2088                           ;incstack = 0
  2089  000008  822A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2090  00000A  ED35  F005         	call	int_func,f	;refresh shadow registers
  2091                           
  2092                           	psect	intcode_body
  2093  000A6A                     __pintcode_body:
  2094                           	callstack 19
  2095  000A6A                     int_func:
  2096                           	callstack 19
  2097  000A6A  0006               	pop		; remove dummy address from shadow register refresh
  2098  000A6C  CFF6 F00A          	movff	tblptrl,??_INT0_ISR
  2099  000A70  CFF7 F00B          	movff	tblptrh,??_INT0_ISR+1
  2100  000A74  CFF8 F00C          	movff	tblptru,??_INT0_ISR+2
  2101  000A78  CFF5 F00D          	movff	tablat,??_INT0_ISR+3
  2102  000A7C                     
  2103                           ;maincode.c: 53:     POS_CURSOR(2,0);
  2104  000A7C  0E00               	movlw	0
  2105  000A7E  6E04               	movwf	i2POS_CURSOR@columna^0,c
  2106  000A80  0E02               	movlw	2
  2107  000A82  EC0E  F006         	call	i2_POS_CURSOR
  2108  000A86                     
  2109                           ;maincode.c: 54:     ESCRIBE_MENSAJE("Presionaste INT0",16);
  2110  000A86  0E23               	movlw	low STR_3
  2111  000A88  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  2112  000A8A  0E08               	movlw	high STR_3
  2113  000A8C  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  2114  000A8E  0E10               	movlw	16
  2115  000A90  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  2116  000A92  ECB5  F005         	call	i2_ESCRIBE_MENSAJE	;wreg free
  2117  000A96                     
  2118                           ;maincode.c: 55:     INTCONbits.INT0IF = 0;
  2119  000A96  92F2               	bcf	242,1,c	;volatile
  2120  000A98                     
  2121                           ;maincode.c: 56:     indicador = 1;
  2122  000A98  0E01               	movlw	1
  2123  000A9A  6E29               	movwf	_indicador^0,c
  2124  000A9C  C00D  FFF5         	movff	??_INT0_ISR+3,tablat
  2125  000AA0  C00C  FFF8         	movff	??_INT0_ISR+2,tblptru
  2126  000AA4  C00B  FFF7         	movff	??_INT0_ISR+1,tblptrh
  2127  000AA8  C00A  FFF6         	movff	??_INT0_ISR,tblptrl
  2128  000AAC  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2129  000AAE  0011               	retfie		f
  2130  000AB0                     __end_of_INT0_ISR:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function i2_POS_CURSOR *****************
  2134 ;; Defined at:
  2135 ;;		line 6 in file "LCD.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  fila            1    wreg     unsigned char 
  2138 ;;  columna         1    3[COMRAM] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  fila            1    4[COMRAM] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  1    wreg      void 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0, cstack
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2150 ;;      Params:         1       0       0       0       0       0       0       0       0
  2151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2153 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2154 ;;Total ram usage:        2 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; Hardware stack levels required when called: 2
  2157 ;; This function calls:
  2158 ;;		i2_ENVIA_LCD_CMD
  2159 ;; This function is called by:
  2160 ;;		_INT0_ISR
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text21
  2165  000C1C                     __ptext21:
  2166                           	callstack 0
  2167  000C1C                     i2_POS_CURSOR:
  2168                           	callstack 19
  2169                           
  2170                           ;incstack = 0
  2171                           ;i2POS_CURSOR@fila stored from wreg
  2172  000C1C  6E05               	movwf	i2POS_CURSOR@fila^0,c
  2173  000C1E                     
  2174                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2175  000C1E  0405               	decf	i2POS_CURSOR@fila^0,w,c
  2176  000C20  A4D8               	btfss	status,2,c
  2177  000C22  EF15  F006         	goto	i2u28_41
  2178  000C26  EF17  F006         	goto	i2u28_40
  2179  000C2A                     i2u28_41:
  2180  000C2A  EF1D  F006         	goto	i2l1443
  2181  000C2E                     i2u28_40:
  2182  000C2E                     
  2183                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2184  000C2E  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2185  000C30  0F80               	addlw	128
  2186  000C32  EC93  F006         	call	i2_ENVIA_LCD_CMD
  2187                           
  2188                           ;LCD.c: 11:  }
  2189  000C36  EF2A  F006         	goto	i2l73
  2190  000C3A                     i2l1443:
  2191  000C3A  0E02               	movlw	2
  2192  000C3C  1805               	xorwf	i2POS_CURSOR@fila^0,w,c
  2193  000C3E  A4D8               	btfss	status,2,c
  2194  000C40  EF24  F006         	goto	i2u29_41
  2195  000C44  EF26  F006         	goto	i2u29_40
  2196  000C48                     i2u29_41:
  2197  000C48  EF2A  F006         	goto	i2l73
  2198  000C4C                     i2u29_40:
  2199  000C4C                     
  2200                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2201  000C4C  5004               	movf	i2POS_CURSOR@columna^0,w,c
  2202  000C4E  0FC0               	addlw	192
  2203  000C50  EC93  F006         	call	i2_ENVIA_LCD_CMD
  2204  000C54                     i2l73:
  2205  000C54  0012               	return		;funcret
  2206  000C56                     __end_ofi2_POS_CURSOR:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function i2_ENVIA_LCD_CMD *****************
  2210 ;; Defined at:
  2211 ;;		line 104 in file "LCD.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;  dato            1    wreg     unsigned char 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  dato            1    1[COMRAM] unsigned char 
  2216 ;;  aux             1    2[COMRAM] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2226 ;;      Params:         0       0       0       0       0       0       0       0       0
  2227 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2230 ;;Total ram usage:        2 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		i2_ENVIA_NIBBLE
  2235 ;;		i2_LEER_LCD
  2236 ;; This function is called by:
  2237 ;;		i2_POS_CURSOR
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text22
  2242  000D26                     __ptext22:
  2243                           	callstack 0
  2244  000D26                     i2_ENVIA_LCD_CMD:
  2245                           	callstack 19
  2246                           
  2247                           ;incstack = 0
  2248                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  2249  000D26  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  2250  000D28                     
  2251                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2252  000D28  908C               	bcf	140,0,c	;volatile
  2253  000D2A                     
  2254                           ;LCD.c: 108:  LEER_LCD();
  2255  000D2A  EC95  F004         	call	i2_LEER_LCD	;wreg free
  2256  000D2E                     
  2257                           ;LCD.c: 109:  TRISD = 0b00000000;
  2258  000D2E  0E00               	movlw	0
  2259  000D30  6E95               	movwf	149,c	;volatile
  2260  000D32                     
  2261                           ;LCD.c: 111:         _delay(1200);
  2262  000D32  0EF0               	movlw	240
  2263  000D34                     i2u57_47:
  2264  000D34  D000               	nop2	
  2265  000D36  2EE8               	decfsz	wreg,f,c
  2266  000D38  D7FD               	bra	i2u57_47
  2267  000D3A                     
  2268                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2269  000D3A  928C               	bcf	140,1,c	;volatile
  2270  000D3C                     
  2271                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2272  000D3C  948C               	bcf	140,2,c	;volatile
  2273  000D3E                     
  2274                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2275  000D3E  908C               	bcf	140,0,c	;volatile
  2276  000D40                     
  2277                           ;LCD.c: 115:  aux = dato & 0xF0;
  2278  000D40  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  2279  000D42  0BF0               	andlw	240
  2280  000D44  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  2281  000D46                     
  2282                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2283  000D46  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  2284  000D48  ECFB  F006         	call	i2_ENVIA_NIBBLE
  2285  000D4C                     
  2286                           ;LCD.c: 117:  aux = dato<<4;
  2287  000D4C  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  2288  000D4E  0BF0               	andlw	240
  2289  000D50  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  2290  000D52                     
  2291                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2292  000D52  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  2293  000D54  ECFB  F006         	call	i2_ENVIA_NIBBLE
  2294  000D58  0012               	return		;funcret
  2295  000D5A                     __end_ofi2_ENVIA_LCD_CMD:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function i2_ESCRIBE_MENSAJE *****************
  2299 ;; Defined at:
  2300 ;;		line 41 in file "LCD.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2303 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  2304 ;;  tam             1    5[COMRAM] unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  i               1    8[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2316 ;;      Params:         3       0       0       0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2318 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2319 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2320 ;;Total ram usage:        6 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		i2_ENVIA_CHAR
  2325 ;; This function is called by:
  2326 ;;		_INT0_ISR
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text23
  2331  000B6A                     __ptext23:
  2332                           	callstack 0
  2333  000B6A                     i2_ESCRIBE_MENSAJE:
  2334                           	callstack 19
  2335  000B6A                     
  2336                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2337  000B6A  0E00               	movlw	0
  2338  000B6C  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  2339                           
  2340                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2341  000B6E  0E00               	movlw	0
  2342  000B70  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  2343  000B72  EFCA  F005         	goto	i2l1461
  2344  000B76                     i2l1457:
  2345                           
  2346                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2347  000B76  5009               	movf	i2ESCRIBE_MENSAJE@i^0,w,c
  2348  000B78  2404               	addwf	i2ESCRIBE_MENSAJE@cadena^0,w,c
  2349  000B7A  6E07               	movwf	??i2_ESCRIBE_MENSAJE^0,c
  2350  000B7C  0E00               	movlw	0
  2351  000B7E  2005               	addwfc	(i2ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2352  000B80  6E08               	movwf	(??i2_ESCRIBE_MENSAJE+1)^0,c
  2353  000B82  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE,tblptrl
  2354  000B86  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE+1,tblptrh
  2355  000B8A                     	if	0	;tblptru may be non-zero
  2356  000B8A                     	endif
  2357  000B8A                     	if	0	;tblptru may be non-zero
  2358  000B8A                     	endif
  2359  000B8A  0008               	tblrd		*
  2360  000B8C  50F5               	movf	tablat,w,c
  2361  000B8E  ECAD  F006         	call	i2_ENVIA_CHAR
  2362  000B92                     
  2363                           ;LCD.c: 47:  }
  2364  000B92  2A09               	incf	i2ESCRIBE_MENSAJE@i^0,f,c
  2365  000B94                     i2l1461:
  2366  000B94  5006               	movf	i2ESCRIBE_MENSAJE@tam^0,w,c
  2367  000B96  5C09               	subwf	i2ESCRIBE_MENSAJE@i^0,w,c
  2368  000B98  A0D8               	btfss	status,0,c
  2369  000B9A  EFD1  F005         	goto	i2u31_41
  2370  000B9E  EFD3  F005         	goto	i2u31_40
  2371  000BA2                     i2u31_41:
  2372  000BA2  EFBB  F005         	goto	i2l1457
  2373  000BA6                     i2u31_40:
  2374  000BA6  0012               	return		;funcret
  2375  000BA8                     __end_ofi2_ESCRIBE_MENSAJE:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function i2_ENVIA_CHAR *****************
  2379 ;; Defined at:
  2380 ;;		line 50 in file "LCD.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  dato            1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  dato            1    1[COMRAM] unsigned char 
  2385 ;;  aux             1    2[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0, cstack
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2395 ;;      Params:         0       0       0       0       0       0       0       0       0
  2396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2398 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2399 ;;Total ram usage:        2 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; Hardware stack levels required when called: 1
  2402 ;; This function calls:
  2403 ;;		i2_ENVIA_NIBBLE
  2404 ;;		i2_LEER_LCD
  2405 ;; This function is called by:
  2406 ;;		i2_ESCRIBE_MENSAJE
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text24
  2411  000D5A                     __ptext24:
  2412                           	callstack 0
  2413  000D5A                     i2_ENVIA_CHAR:
  2414                           	callstack 19
  2415                           
  2416                           ;incstack = 0
  2417                           ;i2ENVIA_CHAR@dato stored from wreg
  2418  000D5A  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  2419  000D5C                     
  2420                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2421  000D5C  808C               	bsf	140,0,c	;volatile
  2422  000D5E                     
  2423                           ;LCD.c: 54:  LEER_LCD();
  2424  000D5E  EC95  F004         	call	i2_LEER_LCD	;wreg free
  2425  000D62                     
  2426                           ;LCD.c: 55:  TRISD = 0x00;
  2427  000D62  0E00               	movlw	0
  2428  000D64  6E95               	movwf	149,c	;volatile
  2429  000D66                     
  2430                           ;LCD.c: 56:         _delay(1200);
  2431  000D66  0EF0               	movlw	240
  2432  000D68                     i2u58_47:
  2433  000D68  D000               	nop2	
  2434  000D6A  2EE8               	decfsz	wreg,f,c
  2435  000D6C  D7FD               	bra	i2u58_47
  2436  000D6E                     
  2437                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2438  000D6E  928C               	bcf	140,1,c	;volatile
  2439  000D70                     
  2440                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2441  000D70  948C               	bcf	140,2,c	;volatile
  2442  000D72                     
  2443                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2444  000D72  808C               	bsf	140,0,c	;volatile
  2445  000D74                     
  2446                           ;LCD.c: 61:  aux = dato & 0xF0;
  2447  000D74  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  2448  000D76  0BF0               	andlw	240
  2449  000D78  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2450  000D7A                     
  2451                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2452  000D7A  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2453  000D7C  ECFB  F006         	call	i2_ENVIA_NIBBLE
  2454  000D80                     
  2455                           ;LCD.c: 63:  aux = dato << 4;
  2456  000D80  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  2457  000D82  0BF0               	andlw	240
  2458  000D84  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2459  000D86                     
  2460                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2461  000D86  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2462  000D88  ECFB  F006         	call	i2_ENVIA_NIBBLE
  2463  000D8C  0012               	return		;funcret
  2464  000D8E                     __end_ofi2_ENVIA_CHAR:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function i2_LEER_LCD *****************
  2468 ;; Defined at:
  2469 ;;		line 121 in file "LCD.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  aux             1    0[COMRAM] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0
  2484 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2486 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2487 ;;Total ram usage:        1 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		i2_ENVIA_CHAR
  2493 ;;		i2_ENVIA_LCD_CMD
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text25
  2498  00092A                     __ptext25:
  2499                           	callstack 0
  2500  00092A                     i2_LEER_LCD:
  2501                           	callstack 19
  2502  00092A                     
  2503                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2504  00092A  0EF8               	movlw	248
  2505  00092C  6E95               	movwf	149,c	;volatile
  2506  00092E                     
  2507                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2508  00092E  908C               	bcf	140,0,c	;volatile
  2509  000930                     
  2510                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2511  000930  828C               	bsf	140,1,c	;volatile
  2512  000932                     
  2513                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2514  000932  848C               	bsf	140,2,c	;volatile
  2515  000934                     
  2516                           ;LCD.c: 128:         _delay(1200);
  2517  000934  0EF0               	movlw	240
  2518  000936                     i2u59_47:
  2519  000936  D000               	nop2	
  2520  000938  2EE8               	decfsz	wreg,f,c
  2521  00093A  D7FD               	bra	i2u59_47
  2522  00093C                     
  2523                           ;LCD.c: 130:  aux = PORTD;
  2524  00093C  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2525  000940                     
  2526                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2527  000940  948C               	bcf	140,2,c	;volatile
  2528  000942                     
  2529                           ;LCD.c: 132:         _delay(1200);
  2530  000942  0EF0               	movlw	240
  2531  000944                     i2u60_47:
  2532  000944  D000               	nop2	
  2533  000946  2EE8               	decfsz	wreg,f,c
  2534  000948  D7FD               	bra	i2u60_47
  2535  00094A                     
  2536                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2537  00094A  848C               	bsf	140,2,c	;volatile
  2538  00094C                     
  2539                           ;LCD.c: 135:         _delay(1200);
  2540  00094C  0EF0               	movlw	240
  2541  00094E                     i2u61_47:
  2542  00094E  D000               	nop2	
  2543  000950  2EE8               	decfsz	wreg,f,c
  2544  000952  D7FD               	bra	i2u61_47
  2545  000954                     
  2546                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2547  000954  948C               	bcf	140,2,c	;volatile
  2548  000956                     i2l1311:
  2549                           
  2550                           ;LCD.c: 138:  aux = aux & 0x80;
  2551  000956  5001               	movf	i2LEER_LCD@aux^0,w,c
  2552  000958  0B80               	andlw	128
  2553  00095A  6E01               	movwf	i2LEER_LCD@aux^0,c
  2554                           
  2555                           ;LCD.c: 139:  while(aux == 0x80)
  2556  00095C  EFC4  F004         	goto	i2l1325
  2557  000960                     i2l116:
  2558                           
  2559                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2560  000960  848C               	bsf	140,2,c	;volatile
  2561  000962                     
  2562                           ;LCD.c: 142:             _delay(1200);
  2563  000962  0EF0               	movlw	240
  2564  000964                     i2u62_47:
  2565  000964  D000               	nop2	
  2566  000966  2EE8               	decfsz	wreg,f,c
  2567  000968  D7FD               	bra	i2u62_47
  2568  00096A                     
  2569                           ;LCD.c: 143:             aux = PORTD;
  2570  00096A  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2571  00096E                     
  2572                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2573  00096E  948C               	bcf	140,2,c	;volatile
  2574                           
  2575                           ;LCD.c: 145:             _delay(1200);
  2576  000970  0EF0               	movlw	240
  2577  000972                     i2u63_47:
  2578  000972  D000               	nop2	
  2579  000974  2EE8               	decfsz	wreg,f,c
  2580  000976  D7FD               	bra	i2u63_47
  2581  000978                     
  2582                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2583  000978  848C               	bsf	140,2,c	;volatile
  2584                           
  2585                           ;LCD.c: 147:             _delay(1200);
  2586  00097A  0EF0               	movlw	240
  2587  00097C                     i2u64_47:
  2588  00097C  D000               	nop2	
  2589  00097E  2EE8               	decfsz	wreg,f,c
  2590  000980  D7FD               	bra	i2u64_47
  2591  000982                     
  2592                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2593  000982  948C               	bcf	140,2,c	;volatile
  2594  000984  EFAB  F004         	goto	i2l1311
  2595  000988                     i2l1325:
  2596                           
  2597                           ;LCD.c: 139:  while(aux == 0x80)
  2598  000988  0E80               	movlw	128
  2599  00098A  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  2600  00098C  B4D8               	btfsc	status,2,c
  2601  00098E  EFCB  F004         	goto	i2u22_41
  2602  000992  EFCD  F004         	goto	i2u22_40
  2603  000996                     i2u22_41:
  2604  000996  EFB0  F004         	goto	i2l116
  2605  00099A                     i2u22_40:
  2606  00099A  0012               	return		;funcret
  2607  00099C                     __end_ofi2_LEER_LCD:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function i2_ENVIA_NIBBLE *****************
  2611 ;; Defined at:
  2612 ;;		line 93 in file "LCD.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  dato            1    wreg     unsigned char 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  dato            1    0[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        1 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		i2_ENVIA_CHAR
  2636 ;;		i2_ENVIA_LCD_CMD
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text26
  2641  000DF6                     __ptext26:
  2642                           	callstack 0
  2643  000DF6                     i2_ENVIA_NIBBLE:
  2644                           	callstack 19
  2645                           
  2646                           ;incstack = 0
  2647                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2648  000DF6  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  2649  000DF8                     
  2650                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2651  000DF8  0E0F               	movlw	15
  2652  000DFA  168C               	andwf	140,f,c	;volatile
  2653                           
  2654                           ;LCD.c: 96:  dato &= 0xF0;
  2655  000DFC  0EF0               	movlw	240
  2656  000DFE  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  2657                           
  2658                           ;LCD.c: 97:  LATD|= dato;
  2659  000E00  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  2660  000E02  128C               	iorwf	140,f,c	;volatile
  2661  000E04                     
  2662                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2663  000E04  848C               	bsf	140,2,c	;volatile
  2664  000E06                     
  2665                           ;LCD.c: 100:         _delay(1200);
  2666  000E06  0EF0               	movlw	240
  2667  000E08                     i2u65_47:
  2668  000E08  D000               	nop2	
  2669  000E0A  2EE8               	decfsz	wreg,f,c
  2670  000E0C  D7FD               	bra	i2u65_47
  2671  000E0E                     
  2672                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2673  000E0E  948C               	bcf	140,2,c	;volatile
  2674  000E10  0012               	return		;funcret
  2675  000E12                     __end_ofi2_ENVIA_NIBBLE:
  2676                           	callstack 0
  2677                           
  2678                           	psect	rparam
  2679  0000                     
  2680                           	psect	temp
  2681  00002A                     btemp:
  2682                           	callstack 0
  2683  00002A                     	ds	1
  2684  0000                     int$flags	set	btemp
  2685  0000                     wtemp8	set	btemp+1
  2686  0000                     ttemp5	set	btemp+1
  2687  0000                     ttemp6	set	btemp+4
  2688  0000                     ttemp7	set	btemp+8
  2689                           
  2690                           	psect	idloc
  2691                           
  2692                           ;Config register IDLOC0 @ 0x200000
  2693                           ;	unspecified, using default values
  2694  200000                     	org	2097152
  2695  200000  FF                 	db	255
  2696                           
  2697                           ;Config register IDLOC1 @ 0x200001
  2698                           ;	unspecified, using default values
  2699  200001                     	org	2097153
  2700  200001  FF                 	db	255
  2701                           
  2702                           ;Config register IDLOC2 @ 0x200002
  2703                           ;	unspecified, using default values
  2704  200002                     	org	2097154
  2705  200002  FF                 	db	255
  2706                           
  2707                           ;Config register IDLOC3 @ 0x200003
  2708                           ;	unspecified, using default values
  2709  200003                     	org	2097155
  2710  200003  FF                 	db	255
  2711                           
  2712                           ;Config register IDLOC4 @ 0x200004
  2713                           ;	unspecified, using default values
  2714  200004                     	org	2097156
  2715  200004  FF                 	db	255
  2716                           
  2717                           ;Config register IDLOC5 @ 0x200005
  2718                           ;	unspecified, using default values
  2719  200005                     	org	2097157
  2720  200005  FF                 	db	255
  2721                           
  2722                           ;Config register IDLOC6 @ 0x200006
  2723                           ;	unspecified, using default values
  2724  200006                     	org	2097158
  2725  200006  FF                 	db	255
  2726                           
  2727                           ;Config register IDLOC7 @ 0x200007
  2728                           ;	unspecified, using default values
  2729  200007                     	org	2097159
  2730  200007  FF                 	db	255
  2731                           
  2732                           	psect	config
  2733                           
  2734                           ;Config register CONFIG1L @ 0x300000
  2735                           ;	PLL Prescaler Selection bits
  2736                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2737                           ;	System Clock Postscaler Selection bits
  2738                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2739                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2740                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2741  300000                     	org	3145728
  2742  300000  00                 	db	0
  2743                           
  2744                           ;Config register CONFIG1H @ 0x300001
  2745                           ;	Oscillator Selection bits
  2746                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2747                           ;	Fail-Safe Clock Monitor Enable bit
  2748                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2749                           ;	Internal/External Oscillator Switchover bit
  2750                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2751  300001                     	org	3145729
  2752  300001  02                 	db	2
  2753                           
  2754                           ;Config register CONFIG2L @ 0x300002
  2755                           ;	Power-up Timer Enable bit
  2756                           ;	PWRT = ON, PWRT enabled
  2757                           ;	Brown-out Reset Enable bits
  2758                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2759                           ;	Brown-out Reset Voltage bits
  2760                           ;	BORV = 3, Minimum setting 2.05V
  2761                           ;	USB Voltage Regulator Enable bit
  2762                           ;	VREGEN = OFF, USB voltage regulator disabled
  2763  300002                     	org	3145730
  2764  300002  18                 	db	24
  2765                           
  2766                           ;Config register CONFIG2H @ 0x300003
  2767                           ;	Watchdog Timer Enable bit
  2768                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2769                           ;	Watchdog Timer Postscale Select bits
  2770                           ;	WDTPS = 32768, 1:32768
  2771  300003                     	org	3145731
  2772  300003  1E                 	db	30
  2773                           
  2774                           ; Padding undefined space
  2775  300004                     	org	3145732
  2776  300004  FF                 	db	255
  2777                           
  2778                           ;Config register CONFIG3H @ 0x300005
  2779                           ;	CCP2 MUX bit
  2780                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2781                           ;	PORTB A/D Enable bit
  2782                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2783                           ;	Low-Power Timer 1 Oscillator Enable bit
  2784                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2785                           ;	MCLR Pin Enable bit
  2786                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2787  300005                     	org	3145733
  2788  300005  81                 	db	129
  2789                           
  2790                           ;Config register CONFIG4L @ 0x300006
  2791                           ;	Stack Full/Underflow Reset Enable bit
  2792                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2793                           ;	Single-Supply ICSP Enable bit
  2794                           ;	LVP = OFF, Single-Supply ICSP disabled
  2795                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2796                           ;	ICPRT = OFF, ICPORT disabled
  2797                           ;	Extended Instruction Set Enable bit
  2798                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2799                           ;	Background Debugger Enable bit
  2800                           ;	DEBUG = 0x1, unprogrammed default
  2801  300006                     	org	3145734
  2802  300006  81                 	db	129
  2803                           
  2804                           ; Padding undefined space
  2805  300007                     	org	3145735
  2806  300007  FF                 	db	255
  2807                           
  2808                           ;Config register CONFIG5L @ 0x300008
  2809                           ;	Code Protection bit
  2810                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2811                           ;	Code Protection bit
  2812                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2813                           ;	Code Protection bit
  2814                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2815                           ;	Code Protection bit
  2816                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2817  300008                     	org	3145736
  2818  300008  0F                 	db	15
  2819                           
  2820                           ;Config register CONFIG5H @ 0x300009
  2821                           ;	Boot Block Code Protection bit
  2822                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2823                           ;	Data EEPROM Code Protection bit
  2824                           ;	CPD = OFF, Data EEPROM is not code-protected
  2825  300009                     	org	3145737
  2826  300009  C0                 	db	192
  2827                           
  2828                           ;Config register CONFIG6L @ 0x30000A
  2829                           ;	Write Protection bit
  2830                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2831                           ;	Write Protection bit
  2832                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2833                           ;	Write Protection bit
  2834                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2835                           ;	Write Protection bit
  2836                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2837  30000A                     	org	3145738
  2838  30000A  0F                 	db	15
  2839                           
  2840                           ;Config register CONFIG6H @ 0x30000B
  2841                           ;	Configuration Register Write Protection bit
  2842                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2843                           ;	Boot Block Write Protection bit
  2844                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2845                           ;	Data EEPROM Write Protection bit
  2846                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2847  30000B                     	org	3145739
  2848  30000B  E0                 	db	224
  2849                           
  2850                           ;Config register CONFIG7L @ 0x30000C
  2851                           ;	Table Read Protection bit
  2852                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2853                           ;	Table Read Protection bit
  2854                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2855                           ;	Table Read Protection bit
  2856                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2857                           ;	Table Read Protection bit
  2858                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2859  30000C                     	org	3145740
  2860  30000C  0F                 	db	15
  2861                           
  2862                           ;Config register CONFIG7H @ 0x30000D
  2863                           ;	Boot Block Table Read Protection bit
  2864                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2865  30000D                     	org	3145741
  2866  30000D  40                 	db	64
  2867                           tosu	equ	0xFFF
  2868                           tosh	equ	0xFFE
  2869                           tosl	equ	0xFFD
  2870                           stkptr	equ	0xFFC
  2871                           pclatu	equ	0xFFB
  2872                           pclath	equ	0xFFA
  2873                           pcl	equ	0xFF9
  2874                           tblptru	equ	0xFF8
  2875                           tblptrh	equ	0xFF7
  2876                           tblptrl	equ	0xFF6
  2877                           tablat	equ	0xFF5
  2878                           prodh	equ	0xFF4
  2879                           prodl	equ	0xFF3
  2880                           indf0	equ	0xFEF
  2881                           postinc0	equ	0xFEE
  2882                           postdec0	equ	0xFED
  2883                           preinc0	equ	0xFEC
  2884                           plusw0	equ	0xFEB
  2885                           fsr0h	equ	0xFEA
  2886                           fsr0l	equ	0xFE9
  2887                           wreg	equ	0xFE8
  2888                           indf1	equ	0xFE7
  2889                           postinc1	equ	0xFE6
  2890                           postdec1	equ	0xFE5
  2891                           preinc1	equ	0xFE4
  2892                           plusw1	equ	0xFE3
  2893                           fsr1h	equ	0xFE2
  2894                           fsr1l	equ	0xFE1
  2895                           bsr	equ	0xFE0
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           preinc2	equ	0xFDC
  2900                           plusw2	equ	0xFDB
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_conf->_CURSOR_ONOFF
    _lcd_conf->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->i1_ESCRIBE_MENSAJE
    i1_POS_CURSOR->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD
    i1_ESCRIBE_MENSAJE->i1_ENVIA_CHAR
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_ESCRIBE_MENSAJE
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    i2_ESCRIBE_MENSAJE->i2_ENVIA_CHAR
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1700
                                             38 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _init_conf
                           _lcd_conf
 ---------------------------------------------------------------------------------
 (1) _lcd_conf                                             2     2      0     525
                                             33 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _init_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     460
                                             32 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     715
                                             32 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             7     7      0     623
                                             22 COMRAM     7     7      0
                  i1_ESCRIBE_MENSAJE
                       i1_POS_CURSOR
 ---------------------------------------------------------------------------------
 (6) i1_POS_CURSOR                                         2     1      1     297
                                             16 COMRAM     2     1      1
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (6) i1_ESCRIBE_MENSAJE                                    6     3      3     326
                                             16 COMRAM     6     3      3
                       i1_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (7) i1_ENVIA_CHAR                                         2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i1_LEER_LCD                                           1     1      0      70
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_NIBBLE                                       1     1      0      23
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT0_ISR                                             4     4      0     623
                                              9 COMRAM     4     4      0
                  i2_ESCRIBE_MENSAJE
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (10) i2_POS_CURSOR                                        2     1      1     297
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (11) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (10) i2_ESCRIBE_MENSAJE                                   6     3      3     326
                                              3 COMRAM     6     3      3
                       i2_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (11) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (12) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _init_conf
   _lcd_conf
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT1_ISR (ROOT)
   i1_ESCRIBE_MENSAJE
     i1_ENVIA_CHAR
       i1_ENVIA_NIBBLE
       i1_LEER_LCD
   i1_POS_CURSOR
     i1_ENVIA_LCD_CMD
       i1_ENVIA_NIBBLE
       i1_LEER_LCD

 _INT0_ISR (ROOT)
   i2_ESCRIBE_MENSAJE
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      29       1       43.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      20        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 26 19:44:46 2021

                        l30 0AEC                          l27 0E32                          l73 0BE0  
                        l91 0DBC                          l86 0E3A                          l97 0B2A  
                        u10 08B6                          u11 08B2                          u40 0DA0  
                        u41 0D9C                          u50 0DB6                          u51 0DB2  
__size_ofi2_ESCRIBE_MENSAJE 003E                          bsr 000FE0               ENVIA_CHAR@aux 0020  
                       l100 0CBC                         l103 0E42                         l112 0C88  
                       l106 0A68                         l116 087C                         l109 0DD8  
                       l118 08B6                         l801 084A                         l811 085C  
                       l803 084C                         l821 0872                         l813 085E  
                       l805 084E                         l831 089E                         l823 087E  
                       l815 0866                         l807 0850                         l841 0DCE  
                       l825 0886                         l817 0868                         l809 0858  
                       l843 0DD6                         l827 088A                         l835 08A4  
                       l819 0870                         l851 0C62                         l837 0DC0  
                       l829 0894                         l861 0C76                         l853 0C6A  
                       l845 0C58                         l839 0DCC                         l863 0C7C  
                       l855 0C6C                         l847 0C5A                         l865 0C82  
                       l857 0C6E                         l849 0C5E                         l961 0A0E  
                       l859 0C70                         l971 0A44                         l963 0A14  
                       l981 0A62                         l973 0A4A                         l965 0A22  
                       l799 0846                         l983 0E3C                         l991 0DA6  
                       l975 0A50                         l967 0A36                         l959 0A0A  
                       l985 0E34                         l993 0DB6                         l977 0A56  
                       l969 0A3E                         l995 0C8C                         l987 0D90  
                       l979 0A5C                         l997 0C8E                         l989 0DA0  
                       l999 0C92                         u230 0BBA                         u231 0BB6  
                       u240 0BD8                         u320 09CE                         u241 0BD4  
                       u321 09CA                         u250 0B2A                         u251 0B26  
                       u407 0C98                         u417 0852                         u337 09DC  
                       u427 0860                         u347 0ABE                         u437 086A  
                       u357 0AD4                         u447 0880                         u367 0A1A  
                       u457 088E                         u377 0A28                         u467 0898  
                       u387 0A38                         u477 0DD0                         u397 0C64  
               LEER_LCD@aux 001E                         wreg 000FE8            ??i2_ENVIA_NIBBLE 0001  
              ?_CURSOR_HOME 0001             i1_ENVIA_LCD_CMD 0CBE              ??_ENVIA_NIBBLE 001E  
               ?i1_LEER_LCD 0001              ENVIA_CHAR@dato 001F                        l1001 0C96  
                      l1011 0CAA                        l1003 0C9E                        l1013 0CB0  
                      l1005 0CA0                        l1015 0CB6                        l1007 0CA2  
                      l1111 0ACA                        l1009 0CA4                        l1105 0E26  
                      l1113 0ACE                        l1115 0ADE                        l1107 0AB0  
                      l1117 0AE2                        l1109 0AB4                        l1119 0AE6  
                      l1421 0BD8                        l1423 0AEE                        l1415 0BAA  
                      l1425 0AFA                        l1417 0BBA                        l1427 0B16  
                      l1419 0BC6                        l1429 0B18                        l1471 09BE  
                      l1463 099C                        l1473 09CE                        l1465 09A0  
                      l1475 09D2                        l1467 09A4                        l1477 09E8  
                      l1469 09AE                        l1479 09F2                        STR_1 0834  
                      STR_2 0801                        STR_3 0823                        STR_4 0812  
          i1POS_CURSOR@fila 0012                        _LATD 000F8C                        i1l73 0C1A  
                      i1l49 0056                        i2l44 0A9C                        i2l73 0C54  
                      i1l97 0B68                        i2l97 0BA6                 ?i2_LEER_LCD 0001  
                      _main 099C                        btemp 002A           ??i2_ENVIA_LCD_CMD 0002  
                      start 0076               ?_CURSOR_ONOFF 0001                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 001F            __end_of_LEER_LCD 08B8         __size_of_BORRAR_LCD 0008  
          __end_of_INT0_ISR 0AB0            __end_of_INT1_ISR 0076                       ?_main 0001  
                     i1l100 0D24                       i1l112 0CF0                       i1l116 08EE  
                     i1l109 0DF4                       i1l118 0928                       i2l100 0D8C  
                     i2l112 0D58                       i2l116 0960                       i2l109 0E10  
                     i2l118 099A                       _PORTD 000F83         __size_of_LCD_CONFIG 0060  
                     _TRISD 000F95          i2ESCRIBE_MENSAJE@i 0009         __size_of_ENVIA_CHAR 0034  
   i2ESCRIBE_MENSAJE@cadena 0004                 ?_POS_CURSOR 0021                       tablat 000FF5  
                     ttemp5 002B                       ttemp6 002E                       ttemp7 0032  
                     status 000FD8                       wtemp8 002B              ??_CURSOR_ONOFF 0021  
           __initialization 0E12                __end_of_main 0A0A         __size_ofi1_LEER_LCD 0072  
           _ESCRIBE_MENSAJE 0AEE     __end_ofi1_ENVIA_LCD_CMD 0CF2                      ??_main 0027  
       __size_ofi2_LEER_LCD 0072               __activetblptr 000001               ?i1_ENVIA_CHAR 0001  
           i1ENVIA_CHAR@aux 0010                      i1l1241 0DF2                      i1l1235 0DDC  
                    i1l1251 08B8                      i1l1331 0CFA                      i1l1237 0DE8  
                    i1l1261 08CA                      i1l1253 08BC                      i1l1341 0D0C  
                    i1l1333 0CFE                      i1l1239 0DEA                      i1l1271 08E2  
                    i1l1263 08CE                      i1l1255 08BE                      i1l1343 0D12  
                    i1l1335 0D06                      i1l1327 0CF4                      i1l1431 0BE4  
                    i1l1281 0906                      i1l1273 08E4                      i1l1265 08D0  
                    i1l1257 08C0                      i1l1345 0D18                      i1l1337 0D08  
                    i1l1329 0CF6                      i1l1433 0BF4                      i1l1283 0910  
                    i1l1275 08F0                      i1l1267 08D8                      i1l1259 08C2  
                    i1l1347 0D1E                      i1l1339 0D0A                      i1l1451 0B54  
                    i1l1371 0CC0                      i1l1435 0C00                      i1l1277 08F8  
                    i1l1269 08DA                      i1l1453 0B56                      i1l1381 0CD4  
                    i1l1373 0CC2                      i1l1437 0C12                      i1l1279 08FC  
                    i1l1287 0916                      i1l1447 0B2C                      i1l1391 0CEA  
                    i1l1383 0CD6                      i1l1375 0CC6                      i1l1449 0B38  
                    i1l1385 0CD8                      i1l1377 0CCA                      i1l1387 0CDE  
                    i1l1379 0CD2                      i1l1491 0040                      i1l1389 0CE4  
                    i1l1493 0050                      i1l1495 0052                      i1l1489 0036  
                    i2l1301 0940                      i2l1311 0956                      i2l1303 0942  
                    i2l1321 0982                      i2l1313 0962                      i2l1305 094A  
                    i2l1401 0D3A                      i2l1243 0DF8                      i2l1315 096A  
                    i2l1307 094C                      i2l1411 0D4C                      i2l1403 0D3C  
                    i2l1245 0E04                      i2l1317 096E                      i2l1325 0988  
                    i2l1309 0954                      i2l1413 0D52                      i2l1405 0D3E  
                    i2l1247 0E06                      i2l1319 0978                      i2l1351 0D5E  
                    i2l1407 0D40                      i2l1249 0E0E                      i2l1361 0D72  
                    i2l1353 0D62                      i2l1409 0D46                      i2l1441 0C2E  
                    i2l1291 092E                      i2l1363 0D74                      i2l1355 0D66  
                    i2l1443 0C3A                      i2l1293 0930                      i2l1365 0D7A  
                    i2l1357 0D6E                      i2l1349 0D5C                      i2l1461 0B94  
                    i2l1445 0C4C                      i2l1295 0932                      i2l1367 0D80  
                    i2l1359 0D70                      i2l1455 0B6A                      i2l1439 0C1E  
                    i2l1297 0934                      i2l1289 092A                      i2l1369 0D86  
                    i2l1457 0B76                      i2l1393 0D28                      i2l1481 0A7C  
                    i2l1299 093C                      i2l1459 0B92                      i2l1395 0D2A  
                    i2l1483 0A86                      i2l1397 0D2E                      i2l1485 0A96  
                    i2l1399 0D32                      i2l1487 0A98               ?i2_ENVIA_CHAR 0001  
          __end_of_lcd_conf 0AEE        __end_of_ENVIA_NIBBLE 0DDA         __size_of_POS_CURSOR 003A  
                    isa$std 000001              ??i1_ENVIA_CHAR 000F                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
              ??_BORRAR_LCD 0021        __size_of_CURSOR_HOME 0008                   ?_LEER_LCD 0001  
                __accesstop 0060     __end_of__initialization 0E14                   ?_INT0_ISR 0001  
                 ?_INT1_ISR 0001                ??_LCD_CONFIG 0021              ??i2_ENVIA_CHAR 0002  
             ___rparam_used 000001                ??_ENVIA_CHAR 001F     __end_of_ESCRIBE_MENSAJE 0B2C  
            __pcstackCOMRAM 0001               ?i1_POS_CURSOR 0011          __end_of_BORRAR_LCD 0E44  
          ?i1_ENVIA_LCD_CMD 0001         i2ENVIA_LCD_CMD@dato 0002            ENVIA_LCD_CMD@aux 0020  
      __end_of_CURSOR_ONOFF 0DBE          __end_of_LCD_CONFIG 0A6A          __end_of_ENVIA_CHAR 0CBE  
           i2_ENVIA_LCD_CMD 0D26                ??i1_LEER_LCD 000E               ?i2_POS_CURSOR 0004  
              ??i2_LEER_LCD 0001                  ??_LEER_LCD 001E            ENVIA_NIBBLE@dato 001E  
                ??_INT0_ISR 000A                  ??_INT1_ISR 0017     __size_ofi1_ENVIA_NIBBLE 001C  
        __size_of_init_conf 000E            i1ENVIA_CHAR@dato 000F              ??i1_POS_CURSOR 0012  
        __end_ofi1_LEER_LCD 092A          __end_ofi2_LEER_LCD 099C         i1POS_CURSOR@columna 0011  
                   i1u21_20 0928                     i1u21_21 0924                     i1u30_20 0B68  
                   i1u30_21 0B64                     i1u26_20 0BF4                     i1u26_21 0BF0  
                   i1u50_27 08C4                     i1u27_20 0C12                     i1u27_21 0C0E  
                   i1u51_27 08D2                     i1u52_27 08DC                     i1u53_27 08F2  
                   i2u22_40 099A                     i2u22_41 0996                     i1u54_27 0900  
                   i2u31_40 0BA6                     i2u31_41 0BA2                     i1u55_27 090A  
                   i1u56_27 0DEC                     i1u48_27 0CCC                     i1u49_27 0D00  
                   i2u28_40 0C2E                     i2u28_41 0C2A                     i2u60_47 0944  
                   i2u29_40 0C4C                     i2u29_41 0C48                     i2u61_47 094E  
                   i2u62_47 0964                     i2u63_47 0972                     i2u64_47 097C  
                   i2u65_47 0E08                     i2u57_47 0D34                     i2u58_47 0D68  
                   i2u59_47 0936              ??i2_POS_CURSOR 0005                   ?_lcd_conf 0001  
              ??_POS_CURSOR 0022        i2ESCRIBE_MENSAJE@tam 0006        __end_ofi1_ENVIA_CHAR 0D26  
     __size_of_ENVIA_NIBBLE 001C                     __Hparam 0000                     __Lparam 0000  
          ?_ESCRIBE_MENSAJE 0021                __psmallconst 0800       __end_of_ENVIA_LCD_CMD 0C8A  
                   __pcinit 0E12          __end_of_POS_CURSOR 0BE2                     __ramtop 0800  
                   __ptext0 099C                     __ptext1 0AB0                     __ptext2 0A0A  
                   __ptext3 0D8E                     __ptext4 0E34                     __ptext5 0E3C  
                   __ptext6 0E26                     __ptext7 0BA8                     __ptext8 0C56  
                   __ptext9 0AEE     __end_ofi2_ENVIA_LCD_CMD 0D5A        __end_ofi2_ENVIA_CHAR 0D8E  
         __end_of_init_conf 0E34             i2ENVIA_CHAR@aux 0003                  ??_lcd_conf 0022  
            __pintcode_body 0A6A                _ENVIA_NIBBLE 0DBE        end_of_initialization 0E14  
                   int_func 0A6A     __size_ofi2_ENVIA_NIBBLE 001C          i1ENVIA_LCD_CMD@aux 0010  
     __size_of_CURSOR_ONOFF 0030          i1ENVIA_NIBBLE@dato 000E        __end_ofi1_POS_CURSOR 0C1C  
            i1_ENVIA_NIBBLE 0DDA           __size_of_LEER_LCD 0072           __size_of_INT0_ISR 0AA8  
         __size_of_INT1_ISR 005E                _CURSOR_ONOFF 0D8E          CURSOR_ONOFF@estado 0021  
      __end_ofi2_POS_CURSOR 0C56            ?i2_ENVIA_LCD_CMD 0001               ??_CURSOR_HOME 0021  
       start_initialization 0E12               i1LEER_LCD@aux 000E      __end_ofi1_ENVIA_NIBBLE 0DF6  
     __size_ofi1_ENVIA_CHAR 0034           ENVIA_LCD_CMD@dato 001F            i2POS_CURSOR@fila 0005  
     __size_ofi2_ENVIA_CHAR 0034                i1_ENVIA_CHAR 0CF2                 __pbssCOMRAM 0029  
             i2LEER_LCD@aux 0001    __size_ofi1_ENVIA_LCD_CMD 0034             ?i1_ENVIA_NIBBLE 0001  
        i2ENVIA_LCD_CMD@aux 0003         __end_of_CURSOR_HOME 0E3C           __size_of_lcd_conf 003E  
            i2_ENVIA_NIBBLE 0DF6                i2_ENVIA_CHAR 0D5A          i2ENVIA_NIBBLE@dato 0001  
                 __pintcode 0008                 __pintcodelo 0018                 __smallconst 0800  
     __size_ofi1_POS_CURSOR 003A                   _indicador 0029         i2POS_CURSOR@columna 0004  
                 _init_conf 0E26      __end_ofi2_ENVIA_NIBBLE 0E12                    _LEER_LCD 0846  
                  _INT0_ISR 0008                    _INT1_ISR 0018                    _LATDbits 000F8C  
      i1ESCRIBE_MENSAJE@tam 0013       __size_ofi2_POS_CURSOR 003A                    _RCONbits 000FD0  
         i1_ESCRIBE_MENSAJE 0B2C                i1_POS_CURSOR 0BE2          ?i1_ESCRIBE_MENSAJE 0011  
          ESCRIBE_MENSAJE@i 0026              POS_CURSOR@fila 0022    __size_of_ESCRIBE_MENSAJE 003E  
       ??i1_ESCRIBE_MENSAJE 0014                 _CURSOR_HOME 0E34     i1ESCRIBE_MENSAJE@cadena 0011  
                ?_init_conf 0001                 _INTCON3bits 000FF0                i2_POS_CURSOR 0C1C  
           ?i2_ENVIA_NIBBLE 0001      __size_of_ENVIA_LCD_CMD 0034           ??i1_ENVIA_LCD_CMD 000F  
                  __Hrparam 0000   __end_ofi1_ESCRIBE_MENSAJE 0B6A                    __Lrparam 0000  
              __Lsmallconst 0800           i2_ESCRIBE_MENSAJE 0B6A          ?i2_ESCRIBE_MENSAJE 0004  
                  __ptext10 0C8A                    __ptext11 0846                    __ptext12 0DBE  
                  __ptext21 0C1C                    __ptext22 0D26                    __ptext14 0BE2  
                  __ptext23 0B6A                    __ptext15 0CBE                    __ptext24 0D5A  
                  __ptext16 0B2C                    __ptext25 092A                    __ptext17 0CF2  
                  __ptext26 0DF6                    __ptext18 08B8                    __ptext19 0DDA  
                _BORRAR_LCD 0E3C                    _lcd_conf 0AB0         ??i2_ESCRIBE_MENSAJE 0007  
             __size_of_main 006E                  _LCD_CONFIG 0A0A                  _ENVIA_CHAR 0C8A  
                  isa$xinst 000000                    int$flags 002A            i2ENVIA_CHAR@dato 0002  
 __end_ofi2_ESCRIBE_MENSAJE 0BA8               _ENVIA_LCD_CMD 0C56                  _INTCONbits 000FF2  
          ??i1_ENVIA_NIBBLE 000E           ??_ESCRIBE_MENSAJE 0024                 ??_init_conf 001E  
  __size_ofi2_ENVIA_LCD_CMD 0034                  i1_LEER_LCD 08B8                    intlevel1 0000  
                  intlevel2 0000       ESCRIBE_MENSAJE@cadena 0021                  i2_LEER_LCD 092A  
__size_ofi1_ESCRIBE_MENSAJE 003E          i1ESCRIBE_MENSAJE@i 0016              ?_ENVIA_LCD_CMD 0001  
       i1ENVIA_LCD_CMD@dato 000F                 ?_BORRAR_LCD 0001               ?_ENVIA_NIBBLE 0001  
                _POS_CURSOR 0BA8                 ?_LCD_CONFIG 0001          ESCRIBE_MENSAJE@tam 0023  
               ?_ENVIA_CHAR 0001           POS_CURSOR@columna 0021  
