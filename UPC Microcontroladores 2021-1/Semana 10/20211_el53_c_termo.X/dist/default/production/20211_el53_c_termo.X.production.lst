

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 10:34:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4550 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  001612                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _o_acento
    80  001612  02                 	db	2
    81  001613  04                 	db	4
    82  001614  EE                 	db	238
    83  001615  11                 	db	17
    84  001616  11                 	db	17
    85  001617  11                 	db	17
    86  001618  0E                 	db	14
    87  001619  00                 	db	0
    88                           
    89                           	psect	idataBANK0
    90  00161A                     __pidataBANK0:
    91                           	callstack 0
    92                           
    93                           ;initializer for _thermo
    94  00161A  04                 	db	4
    95  00161B  0A                 	db	10
    96  00161C  0A                 	db	10
    97  00161D  0E                 	db	14
    98  00161E  1F                 	db	31
    99  00161F  1F                 	db	31
   100  001620  0E                 	db	14
   101  001621  00                 	db	0
   102  0000                     _PORTD	set	3971
   103  0000                     _LATD	set	3980
   104  0000                     _LATDbits	set	3980
   105  0000                     _ADRESL	set	4035
   106  0000                     _ADRESH	set	4036
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADCON0	set	4034
   109  0000                     _ADCON1	set	4033
   110  0000                     _ADCON2	set	4032
   111  0000                     _TRISD	set	3989
   112                           
   113                           	psect	smallconst
   114  000800                     __psmallconst:
   115                           	callstack 0
   116  000800  00                 	db	0
   117  000801                     STR_2:
   118  000801  6D                 	db	109	;'m'
   119  000802  65                 	db	101	;'e'
   120  000803  74                 	db	116	;'t'
   121  000804  72                 	db	114	;'r'
   122  000805  6F                 	db	111	;'o'
   123  000806  20                 	db	32
   124  000807  00                 	db	0
   125  000808                     STR_1:
   126  000808  54                 	db	84	;'T'
   127  000809  65                 	db	101	;'e'
   128  00080A  72                 	db	114	;'r'
   129  00080B  6D                 	db	109	;'m'
   130  00080C  00                 	db	0
   131  00080D                     STR_3:
   132  00080D  54                 	db	84	;'T'
   133  00080E  30                 	db	48	;'0'
   134  00080F  3A                 	db	58	;':'
   135  000810  00                 	db	0
   136  000811                     STR_4:
   137  000811  43                 	db	67	;'C'
   138  000812  20                 	db	32
   139  000813  00                 	db	0
   140  000814                     STR_5:
   141  000814  46                 	db	70	;'F'
   142  000815  00                 	db	0
   143  000816  00                 	db	0	; dummy byte at the end
   144  0000                     
   145                           ; #config settings
   146                           
   147                           	psect	cinit
   148  0013D4                     __pcinit:
   149                           	callstack 0
   150  0013D4                     start_initialization:
   151                           	callstack 0
   152  0013D4                     __initialization:
   153                           	callstack 0
   154                           
   155                           ; Initialize objects allocated to BANK0 (8 bytes)
   156                           ; load TBLPTR registers with __pidataBANK0
   157  0013D4  0E1A               	movlw	low __pidataBANK0
   158  0013D6  6EF6               	movwf	tblptrl,c
   159  0013D8  0E16               	movlw	high __pidataBANK0
   160  0013DA  6EF7               	movwf	tblptrh,c
   161  0013DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   162  0013DE  6EF8               	movwf	tblptru,c
   163  0013E0  EE00  F060         	lfsr	0,__pdataBANK0
   164  0013E4  EE10 F008          	lfsr	1,8
   165  0013E8                     copy_data0:
   166  0013E8  0009               	tblrd		*+
   167  0013EA  CFF5 FFEE          	movff	tablat,postinc0
   168  0013EE  50E5               	movf	postdec1,w,c
   169  0013F0  50E1               	movf	fsr1l,w,c
   170  0013F2  E1FA               	bnz	copy_data0
   171                           
   172                           ; Initialize objects allocated to COMRAM (8 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174  0013F4  0E12               	movlw	low __pidataCOMRAM
   175  0013F6  6EF6               	movwf	tblptrl,c
   176  0013F8  0E16               	movlw	high __pidataCOMRAM
   177  0013FA  6EF7               	movwf	tblptrh,c
   178  0013FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179  0013FE  6EF8               	movwf	tblptru,c
   180  001400  EE00  F055         	lfsr	0,__pdataCOMRAM
   181  001404  EE10 F008          	lfsr	1,8
   182  001408                     copy_data1:
   183  001408  0009               	tblrd		*+
   184  00140A  CFF5 FFEE          	movff	tablat,postinc0
   185  00140E  50E5               	movf	postdec1,w,c
   186  001410  50E1               	movf	fsr1l,w,c
   187  001412  E1FA               	bnz	copy_data1
   188                           
   189                           ; Clear objects allocated to COMRAM (16 bytes)
   190  001414  EE00  F045         	lfsr	0,__pbssCOMRAM
   191  001418  0E10               	movlw	16
   192  00141A                     clear_0:
   193  00141A  6AEE               	clrf	postinc0,c
   194  00141C  06E8               	decf	wreg,f,c
   195  00141E  E1FD               	bnz	clear_0
   196  001420                     end_of_initialization:
   197                           	callstack 0
   198  001420                     __end_of__initialization:
   199                           	callstack 0
   200  001420  0E00               	movlw	low (__Lsmallconst shr (0+16))
   201  001422  6EF8               	movwf	tblptru,c
   202  001424  0E08               	movlw	high __Lsmallconst
   203  001426  6EF7               	movwf	tblptrh,c
   204  001428  0100               	movlb	0
   205  00142A  EF90  F007         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  000045                     __pbssCOMRAM:
   209                           	callstack 0
   210  000045                     _n_temp_f:
   211                           	callstack 0
   212  000045                     	ds	4
   213  000049                     _n_temp_c:
   214                           	callstack 0
   215  000049                     	ds	4
   216  00004D                     _unidad:
   217                           	callstack 0
   218  00004D                     	ds	2
   219  00004F                     _decena:
   220                           	callstack 0
   221  00004F                     	ds	2
   222  000051                     _centena:
   223                           	callstack 0
   224  000051                     	ds	2
   225  000053                     _lm35raw:
   226                           	callstack 0
   227  000053                     	ds	2
   228                           
   229                           	psect	dataCOMRAM
   230  000055                     __pdataCOMRAM:
   231                           	callstack 0
   232  000055                     _o_acento:
   233                           	callstack 0
   234  000055                     	ds	8
   235                           
   236                           	psect	dataBANK0
   237  000060                     __pdataBANK0:
   238                           	callstack 0
   239  000060                     _thermo:
   240                           	callstack 0
   241  000060                     	ds	8
   242                           
   243                           	psect	cstackCOMRAM
   244  000001                     __pcstackCOMRAM:
   245                           	callstack 0
   246  000001                     ?___lwmod:
   247                           	callstack 0
   248  000001                     ?___flmul:
   249                           	callstack 0
   250  000001                     ?___fltol:
   251                           	callstack 0
   252  000001                     ?___xxtofl:
   253                           	callstack 0
   254  000001                     ENVIA_NIBBLE@dato:
   255                           	callstack 0
   256  000001                     LEER_LCD@aux:
   257                           	callstack 0
   258  000001                     ___lwmod@dividend:
   259                           	callstack 0
   260  000001                     ___fltol@f1:
   261                           	callstack 0
   262  000001                     ___flmul@b:
   263                           	callstack 0
   264  000001                     ___xxtofl@val:
   265                           	callstack 0
   266                           
   267                           ; 4 bytes @ 0x0
   268  000001                     	ds	1
   269  000002                     ENVIA_CHAR@dato:
   270                           	callstack 0
   271  000002                     ENVIA_LCD_CMD@dato:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x1
   275  000002                     	ds	1
   276  000003                     ENVIA_CHAR@aux:
   277                           	callstack 0
   278  000003                     ENVIA_LCD_CMD@aux:
   279                           	callstack 0
   280  000003                     ___lwmod@divisor:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x2
   284  000003                     	ds	1
   285  000004                     ??_LCD_CONFIG:
   286  000004                     POS_CURSOR@columna:
   287                           	callstack 0
   288  000004                     CURSOR_ONOFF@estado:
   289                           	callstack 0
   290  000004                     ESCRIBE_MENSAJE@cadena:
   291                           	callstack 0
   292  000004                     GENERACARACTER@vector:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x3
   296  000004                     	ds	1
   297  000005                     ??___fltol:
   298  000005                     ??___xxtofl:
   299  000005                     POS_CURSOR@fila:
   300                           	callstack 0
   301  000005                     ESCRIBE_MENSAJE@tam:
   302                           	callstack 0
   303  000005                     GENERACARACTER@pos:
   304                           	callstack 0
   305  000005                     ___lwmod@counter:
   306                           	callstack 0
   307  000005                     ___flmul@a:
   308                           	callstack 0
   309                           
   310                           ; 4 bytes @ 0x4
   311  000005                     	ds	1
   312  000006                     ??_ESCRIBE_MENSAJE:
   313  000006                     ?___lwdiv:
   314                           	callstack 0
   315  000006                     GENERACARACTER@i:
   316                           	callstack 0
   317  000006                     ___lwdiv@dividend:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x5
   321  000006                     	ds	1
   322  000007                     ??_lcd_init:
   323  000007                     ESCRIBE_MENSAJE@i:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x6
   327  000007                     	ds	1
   328  000008                     ___lwdiv@divisor:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x7
   332  000008                     	ds	1
   333  000009                     ??___flmul:
   334  000009                     ___fltol@sign1:
   335                           	callstack 0
   336  000009                     ___xxtofl@sign:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x8
   340  000009                     	ds	1
   341  00000A                     ___fltol@exp1:
   342                           	callstack 0
   343  00000A                     ___xxtofl@exp:
   344                           	callstack 0
   345  00000A                     ___lwdiv@quotient:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x9
   349  00000A                     	ds	1
   350  00000B                     ___xxtofl@arg:
   351                           	callstack 0
   352                           
   353                           ; 4 bytes @ 0xA
   354  00000B                     	ds	1
   355  00000C                     ___lwdiv@counter:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0xB
   359  00000C                     	ds	1
   360  00000D                     ___flmul@sign:
   361                           	callstack 0
   362  00000D                     convierte@numero:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0xC
   366  00000D                     	ds	1
   367  00000E                     ___flmul@aexp:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xD
   371  00000E                     	ds	1
   372  00000F                     ___flmul@grs:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0xE
   376  00000F                     	ds	4
   377  000013                     ___flmul@bexp:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x12
   381  000013                     	ds	1
   382  000014                     ___flmul@prod:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x13
   386  000014                     	ds	4
   387  000018                     ___flmul@temp:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x17
   391  000018                     	ds	2
   392  00001A                     ?___fldiv:
   393                           	callstack 0
   394  00001A                     ___fldiv@b:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x19
   398  00001A                     	ds	4
   399  00001E                     ___fldiv@a:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x1D
   403  00001E                     	ds	4
   404  000022                     ??___fldiv:
   405                           
   406                           ; 1 bytes @ 0x21
   407  000022                     	ds	4
   408  000026                     ___fldiv@rem:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x25
   412  000026                     	ds	4
   413  00002A                     ___fldiv@sign:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x29
   417  00002A                     	ds	1
   418  00002B                     ___fldiv@new_exp:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2A
   422  00002B                     	ds	2
   423  00002D                     ___fldiv@grs:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x2C
   427  00002D                     	ds	4
   428  000031                     ___fldiv@bexp:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x30
   432  000031                     	ds	1
   433  000032                     ___fldiv@aexp:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x31
   437  000032                     	ds	1
   438  000033                     ?___fladd:
   439                           	callstack 0
   440  000033                     ___fladd@b:
   441                           	callstack 0
   442                           
   443                           ; 4 bytes @ 0x32
   444  000033                     	ds	4
   445  000037                     ___fladd@a:
   446                           	callstack 0
   447                           
   448                           ; 4 bytes @ 0x36
   449  000037                     	ds	4
   450  00003B                     ??___fladd:
   451                           
   452                           ; 1 bytes @ 0x3A
   453  00003B                     	ds	4
   454  00003F                     ___fladd@signs:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x3E
   458  00003F                     	ds	1
   459  000040                     ___fladd@aexp:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x3F
   463  000040                     	ds	1
   464  000041                     ___fladd@bexp:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x40
   468  000041                     	ds	1
   469  000042                     ___fladd@grs:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x41
   473  000042                     	ds	1
   474  000043                     ??_main:
   475                           
   476                           ; 1 bytes @ 0x42
   477  000043                     	ds	2
   478                           
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 43 in file "maincode.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   498 ;;      Params:         0       0       0       0       0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0
   500 ;;      Temps:          2       0       0       0       0       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels required when called: 4
   504 ;; This function calls:
   505 ;;		_ENVIA_CHAR
   506 ;;		_ESCRIBE_MENSAJE
   507 ;;		_POS_CURSOR
   508 ;;		___fladd
   509 ;;		___fldiv
   510 ;;		___flmul
   511 ;;		___fltol
   512 ;;		___xxtofl
   513 ;;		_adc_init
   514 ;;		_convierte
   515 ;;		_lcd_init
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text0
   522  000F20                     __ptext0:
   523                           	callstack 0
   524  000F20                     _main:
   525                           	callstack 27
   526                           
   527                           ;maincode.c: 44:     lcd_init();
   528                           
   529                           ;incstack = 0
   530  000F20  EC17  F00A         	call	_lcd_init	;wreg free
   531                           
   532                           ;maincode.c: 45:     adc_init();
   533  000F24  EC02  F00B         	call	_adc_init	;wreg free
   534                           
   535                           ;maincode.c: 46:     POS_CURSOR(1,0);
   536  000F28  6A04               	clrf	POS_CURSOR@columna^0,c
   537  000F2A  0E01               	movlw	1
   538  000F2C  ECD9  F00A         	call	_POS_CURSOR
   539                           
   540                           ;maincode.c: 47:     ESCRIBE_MENSAJE("Term",4);
   541  000F30  0E08               	movlw	low STR_1
   542  000F32  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   543  000F34  0E04               	movlw	4
   544  000F36  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   545  000F38  ECC8  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   546                           
   547                           ;maincode.c: 48:     ENVIA_CHAR(0x00);
   548  000F3C  0E00               	movlw	0
   549  000F3E  EC9B  F00A         	call	_ENVIA_CHAR
   550                           
   551                           ;maincode.c: 49:     ESCRIBE_MENSAJE("metro ", 6);
   552  000F42  0E01               	movlw	low STR_2
   553  000F44  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   554  000F46  0E06               	movlw	6
   555  000F48  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   556  000F4A  ECC8  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   557                           
   558                           ;maincode.c: 50:     ENVIA_CHAR(0x01);
   559  000F4E  0E01               	movlw	1
   560  000F50  EC9B  F00A         	call	_ENVIA_CHAR
   561  000F54                     l2314:
   562                           
   563                           ;maincode.c: 52:         ADCON0bits.GODONE = 1;
   564  000F54  82C2               	bsf	194,1,c	;volatile
   565  000F56                     l65:
   566  000F56  B2C2               	btfsc	194,1,c	;volatile
   567  000F58  D7FE               	goto	l65
   568                           
   569                           ;maincode.c: 54:         POS_CURSOR(2,0);
   570  000F5A  6A04               	clrf	POS_CURSOR@columna^0,c
   571  000F5C  0E02               	movlw	2
   572  000F5E  ECD9  F00A         	call	_POS_CURSOR
   573                           
   574                           ;maincode.c: 55:         ESCRIBE_MENSAJE("T0:", 3);
   575  000F62  0E0D               	movlw	low STR_3
   576  000F64  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   577  000F66  0E03               	movlw	3
   578  000F68  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   579  000F6A  ECC8  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   580                           
   581                           ;maincode.c: 56:         lm35raw = (ADRESH << 8) + ADRESL;
   582  000F6E  50C4               	movf	196,w,c	;volatile
   583  000F70  6E44               	movwf	(??_main+1)^0,c
   584  000F72  6A43               	clrf	??_main^0,c
   585  000F74  50C3               	movf	195,w,c	;volatile
   586  000F76  2443               	addwf	??_main^0,w,c
   587  000F78  6E53               	movwf	_lm35raw^0,c
   588  000F7A  0E00               	movlw	0
   589  000F7C  2044               	addwfc	(??_main+1)^0,w,c
   590  000F7E  6E54               	movwf	(_lm35raw+1)^0,c
   591                           
   592                           ;maincode.c: 57:         n_temp_c = lm35raw / 10.24;
   593  000F80  C053  F001         	movff	_lm35raw,___xxtofl@val
   594  000F84  C054  F002         	movff	_lm35raw+1,___xxtofl@val+1
   595  000F88  6A03               	clrf	(___xxtofl@val+2)^0,c
   596  000F8A  6A04               	clrf	(___xxtofl@val+3)^0,c
   597  000F8C  0E00               	movlw	0
   598  000F8E  EC65  F008         	call	___xxtofl
   599  000F92  C001  F01A         	movff	?___xxtofl,___fldiv@b
   600  000F96  C002  F01B         	movff	?___xxtofl+1,___fldiv@b+1
   601  000F9A  C003  F01C         	movff	?___xxtofl+2,___fldiv@b+2
   602  000F9E  C004  F01D         	movff	?___xxtofl+3,___fldiv@b+3
   603  000FA2  0E0A               	movlw	10
   604  000FA4  6E1E               	movwf	___fldiv@a^0,c
   605  000FA6  0ED7               	movlw	215
   606  000FA8  6E1F               	movwf	(___fldiv@a+1)^0,c
   607  000FAA  0E23               	movlw	35
   608  000FAC  6E20               	movwf	(___fldiv@a+2)^0,c
   609  000FAE  0E41               	movlw	65
   610  000FB0  6E21               	movwf	(___fldiv@a+3)^0,c
   611  000FB2  EC9B  F006         	call	___fldiv	;wreg free
   612  000FB6  C01A  F049         	movff	?___fldiv,_n_temp_c
   613  000FBA  C01B  F04A         	movff	?___fldiv+1,_n_temp_c+1
   614  000FBE  C01C  F04B         	movff	?___fldiv+2,_n_temp_c+2
   615  000FC2  C01D  F04C         	movff	?___fldiv+3,_n_temp_c+3
   616                           
   617                           ;maincode.c: 58:         n_temp_f = (n_temp_c * 9 / 5) + 32;
   618  000FC6  6A1E               	clrf	___fldiv@a^0,c
   619  000FC8  6A1F               	clrf	(___fldiv@a+1)^0,c
   620  000FCA  0EA0               	movlw	160
   621  000FCC  6E20               	movwf	(___fldiv@a+2)^0,c
   622  000FCE  0E40               	movlw	64
   623  000FD0  6E21               	movwf	(___fldiv@a+3)^0,c
   624  000FD2  6A05               	clrf	___flmul@a^0,c
   625  000FD4  6A06               	clrf	(___flmul@a+1)^0,c
   626  000FD6  0E10               	movlw	16
   627  000FD8  6E07               	movwf	(___flmul@a+2)^0,c
   628  000FDA  0E41               	movlw	65
   629  000FDC  6E08               	movwf	(___flmul@a+3)^0,c
   630  000FDE  C049  F001         	movff	_n_temp_c,___flmul@b
   631  000FE2  C04A  F002         	movff	_n_temp_c+1,___flmul@b+1
   632  000FE6  C04B  F003         	movff	_n_temp_c+2,___flmul@b+2
   633  000FEA  C04C  F004         	movff	_n_temp_c+3,___flmul@b+3
   634  000FEE  EC0C  F004         	call	___flmul	;wreg free
   635  000FF2  C001  F01A         	movff	?___flmul,___fldiv@b
   636  000FF6  C002  F01B         	movff	?___flmul+1,___fldiv@b+1
   637  000FFA  C003  F01C         	movff	?___flmul+2,___fldiv@b+2
   638  000FFE  C004  F01D         	movff	?___flmul+3,___fldiv@b+3
   639  001002  EC9B  F006         	call	___fldiv	;wreg free
   640  001006  C01A  F033         	movff	?___fldiv,___fladd@b
   641  00100A  C01B  F034         	movff	?___fldiv+1,___fladd@b+1
   642  00100E  C01C  F035         	movff	?___fldiv+2,___fladd@b+2
   643  001012  C01D  F036         	movff	?___fldiv+3,___fladd@b+3
   644  001016  6A37               	clrf	___fladd@a^0,c
   645  001018  6A38               	clrf	(___fladd@a+1)^0,c
   646  00101A  6A39               	clrf	(___fladd@a+2)^0,c
   647  00101C  0E42               	movlw	66
   648  00101E  6E3A               	movwf	(___fladd@a+3)^0,c
   649  001020  EC5E  F005         	call	___fladd	;wreg free
   650  001024  C033  F045         	movff	?___fladd,_n_temp_f
   651  001028  C034  F046         	movff	?___fladd+1,_n_temp_f+1
   652  00102C  C035  F047         	movff	?___fladd+2,_n_temp_f+2
   653  001030  C036  F048         	movff	?___fladd+3,_n_temp_f+3
   654                           
   655                           ;maincode.c: 59:         convierte(n_temp_c);
   656  001034  C049  F001         	movff	_n_temp_c,___fltol@f1
   657  001038  C04A  F002         	movff	_n_temp_c+1,___fltol@f1+1
   658  00103C  C04B  F003         	movff	_n_temp_c+2,___fltol@f1+2
   659  001040  C04C  F004         	movff	_n_temp_c+3,___fltol@f1+3
   660  001044  EC3E  F009         	call	___fltol	;wreg free
   661  001048  C001  F00D         	movff	?___fltol,convierte@numero
   662  00104C  C002  F00E         	movff	?___fltol+1,convierte@numero+1
   663  001050  ECEF  F008         	call	_convierte	;wreg free
   664                           
   665                           ;maincode.c: 60:         ENVIA_CHAR(centena+0x30);
   666  001054  5051               	movf	_centena^0,w,c
   667  001056  0F30               	addlw	48
   668  001058  EC9B  F00A         	call	_ENVIA_CHAR
   669                           
   670                           ;maincode.c: 61:         ENVIA_CHAR(decena+0x30);
   671  00105C  504F               	movf	_decena^0,w,c
   672  00105E  0F30               	addlw	48
   673  001060  EC9B  F00A         	call	_ENVIA_CHAR
   674                           
   675                           ;maincode.c: 62:         ENVIA_CHAR(unidad+0x30);
   676  001064  504D               	movf	_unidad^0,w,c
   677  001066  0F30               	addlw	48
   678  001068  EC9B  F00A         	call	_ENVIA_CHAR
   679                           
   680                           ;maincode.c: 63:         ENVIA_CHAR(0x0DF);
   681  00106C  0EDF               	movlw	223
   682  00106E  EC9B  F00A         	call	_ENVIA_CHAR
   683                           
   684                           ;maincode.c: 64:         ESCRIBE_MENSAJE("C ", 2);
   685  001072  0E11               	movlw	low STR_4
   686  001074  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   687  001076  0E02               	movlw	2
   688  001078  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   689  00107A  ECC8  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   690                           
   691                           ;maincode.c: 65:         convierte(n_temp_f);
   692  00107E  C045  F001         	movff	_n_temp_f,___fltol@f1
   693  001082  C046  F002         	movff	_n_temp_f+1,___fltol@f1+1
   694  001086  C047  F003         	movff	_n_temp_f+2,___fltol@f1+2
   695  00108A  C048  F004         	movff	_n_temp_f+3,___fltol@f1+3
   696  00108E  EC3E  F009         	call	___fltol	;wreg free
   697  001092  C001  F00D         	movff	?___fltol,convierte@numero
   698  001096  C002  F00E         	movff	?___fltol+1,convierte@numero+1
   699  00109A  ECEF  F008         	call	_convierte	;wreg free
   700                           
   701                           ;maincode.c: 66:         ENVIA_CHAR(centena+0x30);
   702  00109E  5051               	movf	_centena^0,w,c
   703  0010A0  0F30               	addlw	48
   704  0010A2  EC9B  F00A         	call	_ENVIA_CHAR
   705                           
   706                           ;maincode.c: 67:         ENVIA_CHAR(decena+0x30);
   707  0010A6  504F               	movf	_decena^0,w,c
   708  0010A8  0F30               	addlw	48
   709  0010AA  EC9B  F00A         	call	_ENVIA_CHAR
   710                           
   711                           ;maincode.c: 68:         ENVIA_CHAR(unidad+0x30);
   712  0010AE  504D               	movf	_unidad^0,w,c
   713  0010B0  0F30               	addlw	48
   714  0010B2  EC9B  F00A         	call	_ENVIA_CHAR
   715                           
   716                           ;maincode.c: 69:         ENVIA_CHAR(0x0DF);
   717  0010B6  0EDF               	movlw	223
   718  0010B8  EC9B  F00A         	call	_ENVIA_CHAR
   719                           
   720                           ;maincode.c: 70:         ESCRIBE_MENSAJE("F", 1);
   721  0010BC  0E14               	movlw	low STR_5
   722  0010BE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   723  0010C0  0E01               	movlw	1
   724  0010C2  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   725  0010C4  ECC8  F00A         	call	_ESCRIBE_MENSAJE	;wreg free
   726  0010C8  D745               	goto	l2314
   727  0010CA                     __end_of_main:
   728                           	callstack 0
   729                           
   730 ;; *************** function _lcd_init *****************
   731 ;; Defined at:
   732 ;;		line 25 in file "maincode.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   746 ;;      Params:         0       0       0       0       0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0
   748 ;;      Temps:          2       0       0       0       0       0       0       0       0
   749 ;;      Totals:         2       0       0       0       0       0       0       0       0
   750 ;;Total ram usage:        2 bytes
   751 ;; Hardware stack levels used: 1
   752 ;; Hardware stack levels required when called: 3
   753 ;; This function calls:
   754 ;;		_BORRAR_LCD
   755 ;;		_CURSOR_HOME
   756 ;;		_CURSOR_ONOFF
   757 ;;		_GENERACARACTER
   758 ;;		_LCD_CONFIG
   759 ;; This function is called by:
   760 ;;		_main
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text1
   765  00142E                     __ptext1:
   766                           	callstack 0
   767  00142E                     _lcd_init:
   768                           	callstack 27
   769                           
   770                           ;maincode.c: 26:     TRISD = 0x00;
   771                           
   772                           ;incstack = 0
   773  00142E  6A95               	clrf	149,c	;volatile
   774                           
   775                           ;maincode.c: 27:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
   776  001430  0E04               	movlw	4
   777  001432  6E08               	movwf	(??_lcd_init+1)^0,c
   778  001434  0E0C               	movlw	12
   779  001436  6E07               	movwf	??_lcd_init^0,c
   780  001438  0E34               	movlw	52
   781  00143A                     u2237:
   782  00143A  2EE8               	decfsz	wreg,f,c
   783  00143C  D7FE               	bra	u2237
   784  00143E  2E07               	decfsz	??_lcd_init^0,f,c
   785  001440  D7FC               	bra	u2237
   786  001442  2E08               	decfsz	(??_lcd_init+1)^0,f,c
   787  001444  D7FA               	bra	u2237
   788                           
   789                           ;maincode.c: 28:     LCD_CONFIG();
   790  001446  EC8C  F009         	call	_LCD_CONFIG	;wreg free
   791                           
   792                           ;maincode.c: 29:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   793  00144A  0EEA               	movlw	234
   794  00144C  6E07               	movwf	??_lcd_init^0,c
   795  00144E  0EC3               	movlw	195
   796  001450                     u2247:
   797  001450  2EE8               	decfsz	wreg,f,c
   798  001452  D7FE               	bra	u2247
   799  001454  2E07               	decfsz	??_lcd_init^0,f,c
   800  001456  D7FC               	bra	u2247
   801  001458  F000               	nop	
   802                           
   803                           ;maincode.c: 30:     BORRAR_LCD();
   804  00145A  EC14  F00B         	call	_BORRAR_LCD	;wreg free
   805                           
   806                           ;maincode.c: 31:     CURSOR_HOME();
   807  00145E  EC11  F00B         	call	_CURSOR_HOME	;wreg free
   808                           
   809                           ;maincode.c: 32:     CURSOR_ONOFF(1);
   810  001462  0E01               	movlw	1
   811  001464  ECF6  F00A         	call	_CURSOR_ONOFF
   812                           
   813                           ;maincode.c: 33:     GENERACARACTER(o_acento, 0);
   814  001468  0E55               	movlw	low _o_acento
   815  00146A  6E04               	movwf	GENERACARACTER@vector^0,c
   816  00146C  6A05               	clrf	GENERACARACTER@pos^0,c
   817  00146E  ECB3  F00A         	call	_GENERACARACTER	;wreg free
   818                           
   819                           ;maincode.c: 34:     GENERACARACTER(thermo, 1);
   820  001472  0E60               	movlw	low _thermo
   821  001474  6E04               	movwf	GENERACARACTER@vector^0,c
   822  001476  0E01               	movlw	1
   823  001478  6E05               	movwf	GENERACARACTER@pos^0,c
   824  00147A  EFB3  F00A         	goto	_GENERACARACTER	;wreg free
   825  00147E                     __end_of_lcd_init:
   826                           	callstack 0
   827                           
   828 ;; *************** function _LCD_CONFIG *****************
   829 ;; Defined at:
   830 ;;		line 72 in file "LCD.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   844 ;;      Params:         0       0       0       0       0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0
   846 ;;      Temps:          1       0       0       0       0       0       0       0       0
   847 ;;      Totals:         1       0       0       0       0       0       0       0       0
   848 ;;Total ram usage:        1 bytes
   849 ;; Hardware stack levels used: 1
   850 ;; Hardware stack levels required when called: 2
   851 ;; This function calls:
   852 ;;		_ENVIA_LCD_CMD
   853 ;;		_ENVIA_NIBBLE
   854 ;; This function is called by:
   855 ;;		_lcd_init
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text2
   860  001318                     __ptext2:
   861                           	callstack 0
   862  001318                     _LCD_CONFIG:
   863                           	callstack 27
   864                           
   865                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   866                           
   867                           ;incstack = 0
   868  001318  908C               	bcf	140,0,c	;volatile
   869                           
   870                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   871  00131A  928C               	bcf	140,1,c	;volatile
   872                           
   873                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   874  00131C  0E30               	movlw	48
   875  00131E  ECE8  F00A         	call	_ENVIA_NIBBLE
   876                           
   877                           ;LCD.c: 77:         _delay(24000);
   878  001322  0E20               	movlw	32
   879  001324  6E04               	movwf	??_LCD_CONFIG^0,c
   880  001326  0E2A               	movlw	42
   881  001328                     u2257:
   882  001328  2EE8               	decfsz	wreg,f,c
   883  00132A  D7FE               	bra	u2257
   884  00132C  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   885  00132E  D7FC               	bra	u2257
   886                           
   887                           ;LCD.c: 78:         _delay(24000);
   888  001330  0E20               	movlw	32
   889  001332  6E04               	movwf	??_LCD_CONFIG^0,c
   890  001334  0E2A               	movlw	42
   891  001336                     u2267:
   892  001336  2EE8               	decfsz	wreg,f,c
   893  001338  D7FE               	bra	u2267
   894  00133A  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   895  00133C  D7FC               	bra	u2267
   896                           
   897                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   898  00133E  0E30               	movlw	48
   899  001340  ECE8  F00A         	call	_ENVIA_NIBBLE
   900                           
   901                           ;LCD.c: 83:  _delay(1200);
   902  001344  0EF0               	movlw	240
   903  001346                     u2277:
   904  001346  D000               	nop2	
   905  001348  2EE8               	decfsz	wreg,f,c
   906  00134A  D7FD               	bra	u2277
   907                           
   908                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   909  00134C  0E30               	movlw	48
   910  00134E  ECE8  F00A         	call	_ENVIA_NIBBLE
   911                           
   912                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   913  001352  0E20               	movlw	32
   914  001354  ECE8  F00A         	call	_ENVIA_NIBBLE
   915                           
   916                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   917  001358  0E01               	movlw	1
   918  00135A  EC83  F00A         	call	_ENVIA_LCD_CMD
   919                           
   920                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   921  00135E  0E28               	movlw	40
   922  001360  EC83  F00A         	call	_ENVIA_LCD_CMD
   923                           
   924                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   925  001364  0E0F               	movlw	15
   926  001366  EC83  F00A         	call	_ENVIA_LCD_CMD
   927                           
   928                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   929  00136A  0E06               	movlw	6
   930  00136C  EC83  F00A         	call	_ENVIA_LCD_CMD
   931                           
   932                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   933  001370  0E01               	movlw	1
   934  001372  EF83  F00A         	goto	_ENVIA_LCD_CMD
   935  001376                     __end_of_LCD_CONFIG:
   936                           	callstack 0
   937                           
   938 ;; *************** function _GENERACARACTER *****************
   939 ;; Defined at:
   940 ;;		line 153 in file "LCD.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  vector          1    3[COMRAM] PTR const unsigned char 
   943 ;;		 -> thermo(8), o_acento(8), 
   944 ;;  pos             1    4[COMRAM] unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  i               1    5[COMRAM] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   956 ;;      Params:         2       0       0       0       0       0       0       0       0
   957 ;;      Locals:         1       0       0       0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0
   959 ;;      Totals:         3       0       0       0       0       0       0       0       0
   960 ;;Total ram usage:        3 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 2
   963 ;; This function calls:
   964 ;;		_ENVIA_CHAR
   965 ;;		_ENVIA_LCD_CMD
   966 ;; This function is called by:
   967 ;;		_lcd_init
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text3
   972  001566                     __ptext3:
   973                           	callstack 0
   974  001566                     _GENERACARACTER:
   975                           	callstack 27
   976                           
   977                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
   978                           
   979                           ;incstack = 0
   980  001566  5005               	movf	GENERACARACTER@pos^0,w,c
   981  001568  0D08               	mullw	8
   982  00156A  50F3               	movf	243,w,c
   983  00156C  0F40               	addlw	64
   984  00156E  EC83  F00A         	call	_ENVIA_LCD_CMD
   985                           
   986                           ;LCD.c: 157:  for(i=0;i<8;i++)
   987  001572  6A06               	clrf	GENERACARACTER@i^0,c
   988  001574                     l1720:
   989                           
   990                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
   991  001574  5004               	movf	GENERACARACTER@vector^0,w,c
   992  001576  2406               	addwf	GENERACARACTER@i^0,w,c
   993  001578  6ED9               	movwf	fsr2l,c
   994  00157A  6ADA               	clrf	fsr2h,c
   995  00157C  50DF               	movf	indf2,w,c
   996  00157E  EC9B  F00A         	call	_ENVIA_CHAR
   997                           
   998                           ;LCD.c: 160:  }
   999  001582  2A06               	incf	GENERACARACTER@i^0,f,c
  1000  001584  0E07               	movlw	7
  1001  001586  6406               	cpfsgt	GENERACARACTER@i^0,c
  1002  001588  D7F5               	goto	l1720
  1003                           
  1004                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1005  00158A  0E80               	movlw	128
  1006  00158C  EF83  F00A         	goto	_ENVIA_LCD_CMD
  1007  001590                     __end_of_GENERACARACTER:
  1008                           	callstack 0
  1009                           
  1010 ;; *************** function _CURSOR_ONOFF *****************
  1011 ;; Defined at:
  1012 ;;		line 35 in file "LCD.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  estado          1    wreg     unsigned char 
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  estado          1    3[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0
  1027 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1029 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1030 ;;Total ram usage:        1 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 2
  1033 ;; This function calls:
  1034 ;;		_ENVIA_LCD_CMD
  1035 ;; This function is called by:
  1036 ;;		_lcd_init
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text4
  1041  0015EC                     __ptext4:
  1042                           	callstack 0
  1043  0015EC                     _CURSOR_ONOFF:
  1044                           	callstack 27
  1045                           
  1046                           ;incstack = 0
  1047                           ;CURSOR_ONOFF@estado stored from wreg
  1048  0015EC  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1049                           
  1050                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1051  0015EE  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1052  0015F0  E103               	bnz	l1708
  1053  0015F2  0E0E               	movlw	14
  1054  0015F4  EC83  F00A         	call	_ENVIA_LCD_CMD
  1055  0015F8                     l1708:
  1056                           
  1057                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1058  0015F8  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1059  0015FA  A4D8               	btfss	status,2,c
  1060  0015FC  0012               	return	
  1061  0015FE  0E0C               	movlw	12
  1062  001600  EF83  F00A         	goto	_ENVIA_LCD_CMD
  1063  001604                     __end_of_CURSOR_ONOFF:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _CURSOR_HOME *****************
  1067 ;; Defined at:
  1068 ;;		line 30 in file "LCD.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		_ENVIA_LCD_CMD
  1091 ;; This function is called by:
  1092 ;;		_lcd_init
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text5
  1097  001622                     __ptext5:
  1098                           	callstack 0
  1099  001622                     _CURSOR_HOME:
  1100                           	callstack 27
  1101                           
  1102                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1103                           
  1104                           ;incstack = 0
  1105  001622  0E02               	movlw	2
  1106  001624  EF83  F00A         	goto	_ENVIA_LCD_CMD
  1107  001628                     __end_of_CURSOR_HOME:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _BORRAR_LCD *****************
  1111 ;; Defined at:
  1112 ;;		line 67 in file "LCD.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         0       0       0       0       0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 2
  1133 ;; This function calls:
  1134 ;;		_ENVIA_LCD_CMD
  1135 ;; This function is called by:
  1136 ;;		_lcd_init
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text6
  1141  001628                     __ptext6:
  1142                           	callstack 0
  1143  001628                     _BORRAR_LCD:
  1144                           	callstack 27
  1145                           
  1146                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1147                           
  1148                           ;incstack = 0
  1149  001628  0E01               	movlw	1
  1150  00162A  EF83  F00A         	goto	_ENVIA_LCD_CMD
  1151  00162E                     __end_of_BORRAR_LCD:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _convierte *****************
  1155 ;; Defined at:
  1156 ;;		line 18 in file "maincode.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  numero          2   12[COMRAM] unsigned int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1170 ;;      Params:         2       0       0       0       0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1173 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1174 ;;Total ram usage:        2 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 1
  1177 ;; This function calls:
  1178 ;;		___lwdiv
  1179 ;;		___lwmod
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text7
  1186  0011DE                     __ptext7:
  1187                           	callstack 0
  1188  0011DE                     _convierte:
  1189                           	callstack 29
  1190                           
  1191                           ;maincode.c: 19:     millar = (numero %10000) /1000;
  1192                           
  1193                           ;incstack = 0
  1194  0011DE  0E27               	movlw	39
  1195  0011E0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1196  0011E2  0E10               	movlw	16
  1197  0011E4  6E03               	movwf	___lwmod@divisor^0,c
  1198  0011E6  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1199  0011EA  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1200  0011EE  EC64  F00A         	call	___lwmod	;wreg free
  1201  0011F2  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1202  0011F6  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1203  0011FA  0E03               	movlw	3
  1204  0011FC  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  1205  0011FE  0EE8               	movlw	232
  1206  001200  6E08               	movwf	___lwdiv@divisor^0,c
  1207  001202  EC3F  F00A         	call	___lwdiv	;wreg free
  1208                           
  1209                           ;maincode.c: 20:     centena = (numero % 1000) / 100;
  1210  001206  0E03               	movlw	3
  1211  001208  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1212  00120A  0EE8               	movlw	232
  1213  00120C  6E03               	movwf	___lwmod@divisor^0,c
  1214  00120E  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1215  001212  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1216  001216  EC64  F00A         	call	___lwmod	;wreg free
  1217  00121A  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1218  00121E  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1219  001222  6A09               	clrf	(___lwdiv@divisor+1)^0,c
  1220  001224  0E64               	movlw	100
  1221  001226  6E08               	movwf	___lwdiv@divisor^0,c
  1222  001228  EC3F  F00A         	call	___lwdiv	;wreg free
  1223  00122C  C006  F051         	movff	?___lwdiv,_centena
  1224  001230  C007  F052         	movff	?___lwdiv+1,_centena+1
  1225                           
  1226                           ;maincode.c: 21:     decena = (numero % 100) / 10;
  1227  001234  6A04               	clrf	(___lwmod@divisor+1)^0,c
  1228  001236  0E64               	movlw	100
  1229  001238  6E03               	movwf	___lwmod@divisor^0,c
  1230  00123A  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1231  00123E  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1232  001242  EC64  F00A         	call	___lwmod	;wreg free
  1233  001246  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1234  00124A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1235  00124E  6A09               	clrf	(___lwdiv@divisor+1)^0,c
  1236  001250  0E0A               	movlw	10
  1237  001252  6E08               	movwf	___lwdiv@divisor^0,c
  1238  001254  EC3F  F00A         	call	___lwdiv	;wreg free
  1239  001258  C006  F04F         	movff	?___lwdiv,_decena
  1240  00125C  C007  F050         	movff	?___lwdiv+1,_decena+1
  1241                           
  1242                           ;maincode.c: 22:     unidad = numero % 10;
  1243  001260  C00D  F001         	movff	convierte@numero,___lwmod@dividend
  1244  001264  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
  1245  001268  6A04               	clrf	(___lwmod@divisor+1)^0,c
  1246  00126A  0E0A               	movlw	10
  1247  00126C  6E03               	movwf	___lwmod@divisor^0,c
  1248  00126E  EC64  F00A         	call	___lwmod	;wreg free
  1249  001272  C001  F04D         	movff	?___lwmod,_unidad
  1250  001276  C002  F04E         	movff	?___lwmod+1,_unidad+1
  1251  00127A  0012               	return		;funcret
  1252  00127C                     __end_of_convierte:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function ___lwmod *****************
  1256 ;; Defined at:
  1257 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwmod.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  dividend        2    0[COMRAM] unsigned int 
  1260 ;;  divisor         2    2[COMRAM] unsigned int 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  counter         1    4[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2    0[COMRAM] unsigned int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1272 ;;      Params:         4       0       0       0       0       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1275 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1276 ;;Total ram usage:        5 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_convierte
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text8
  1286  0014C8                     __ptext8:
  1287                           	callstack 0
  1288  0014C8                     ___lwmod:
  1289                           	callstack 29
  1290                           
  1291                           ;incstack = 0
  1292  0014C8  5003               	movf	___lwmod@divisor^0,w,c
  1293  0014CA  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1294  0014CC  E017               	bz	l648
  1295  0014CE  0E01               	movlw	1
  1296  0014D0  6E05               	movwf	___lwmod@counter^0,c
  1297  0014D2  D004               	goto	l1756
  1298  0014D4                     l1754:
  1299  0014D4  90D8               	bcf	status,0,c
  1300  0014D6  3603               	rlcf	___lwmod@divisor^0,f,c
  1301  0014D8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1302  0014DA  2A05               	incf	___lwmod@counter^0,f,c
  1303  0014DC                     l1756:
  1304  0014DC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1305  0014DE  D7FA               	goto	l1754
  1306  0014E0                     u1200:
  1307  0014E0  5003               	movf	___lwmod@divisor^0,w,c
  1308  0014E2  5C01               	subwf	___lwmod@dividend^0,w,c
  1309  0014E4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1310  0014E6  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1311  0014E8  E304               	bnc	l1762
  1312  0014EA  5003               	movf	___lwmod@divisor^0,w,c
  1313  0014EC  5E01               	subwf	___lwmod@dividend^0,f,c
  1314  0014EE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1315  0014F0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1316  0014F2                     l1762:
  1317  0014F2  90D8               	bcf	status,0,c
  1318  0014F4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1319  0014F6  3203               	rrcf	___lwmod@divisor^0,f,c
  1320  0014F8  2E05               	decfsz	___lwmod@counter^0,f,c
  1321  0014FA  D7F2               	goto	u1200
  1322  0014FC                     l648:
  1323  0014FC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1324  001500  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1325  001504  0012               	return		;funcret
  1326  001506                     __end_of___lwmod:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function ___lwdiv *****************
  1330 ;; Defined at:
  1331 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  dividend        2    5[COMRAM] unsigned int 
  1334 ;;  divisor         2    7[COMRAM] unsigned int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  quotient        2    9[COMRAM] unsigned int 
  1337 ;;  counter         1   11[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2    5[COMRAM] unsigned int 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         4       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1350 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:        7 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_convierte
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text9
  1361  00147E                     __ptext9:
  1362                           	callstack 0
  1363  00147E                     ___lwdiv:
  1364                           	callstack 29
  1365                           
  1366                           ;incstack = 0
  1367  00147E  6A0A               	clrf	___lwdiv@quotient^0,c
  1368  001480  6A0B               	clrf	(___lwdiv@quotient+1)^0,c
  1369  001482  5008               	movf	___lwdiv@divisor^0,w,c
  1370  001484  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1371  001486  E01B               	bz	l638
  1372  001488  0E01               	movlw	1
  1373  00148A  6E0C               	movwf	___lwdiv@counter^0,c
  1374  00148C  D004               	goto	l1736
  1375  00148E                     l1734:
  1376  00148E  90D8               	bcf	status,0,c
  1377  001490  3608               	rlcf	___lwdiv@divisor^0,f,c
  1378  001492  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1379  001494  2A0C               	incf	___lwdiv@counter^0,f,c
  1380  001496                     l1736:
  1381  001496  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  1382  001498  D7FA               	goto	l1734
  1383  00149A                     u1170:
  1384  00149A  90D8               	bcf	status,0,c
  1385  00149C  360A               	rlcf	___lwdiv@quotient^0,f,c
  1386  00149E  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1387  0014A0  5008               	movf	___lwdiv@divisor^0,w,c
  1388  0014A2  5C06               	subwf	___lwdiv@dividend^0,w,c
  1389  0014A4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1390  0014A6  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1391  0014A8  E305               	bnc	l1746
  1392  0014AA  5008               	movf	___lwdiv@divisor^0,w,c
  1393  0014AC  5E06               	subwf	___lwdiv@dividend^0,f,c
  1394  0014AE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1395  0014B0  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1396  0014B2  800A               	bsf	___lwdiv@quotient^0,0,c
  1397  0014B4                     l1746:
  1398  0014B4  90D8               	bcf	status,0,c
  1399  0014B6  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1400  0014B8  3208               	rrcf	___lwdiv@divisor^0,f,c
  1401  0014BA  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1402  0014BC  D7EE               	goto	u1170
  1403  0014BE                     l638:
  1404  0014BE  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1405  0014C2  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1406  0014C6  0012               	return		;funcret
  1407  0014C8                     __end_of___lwdiv:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _adc_init *****************
  1411 ;; Defined at:
  1412 ;;		line 37 in file "maincode.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text10
  1440  001604                     __ptext10:
  1441                           	callstack 0
  1442  001604                     _adc_init:
  1443                           	callstack 30
  1444                           
  1445                           ;maincode.c: 38:     ADCON2 = 0xA4;
  1446                           
  1447                           ;incstack = 0
  1448  001604  0EA4               	movlw	164
  1449  001606  6EC0               	movwf	192,c	;volatile
  1450                           
  1451                           ;maincode.c: 39:     ADCON1 = 0x1B;
  1452  001608  0E1B               	movlw	27
  1453  00160A  6EC1               	movwf	193,c	;volatile
  1454                           
  1455                           ;maincode.c: 40:     ADCON0 = 0x01;
  1456  00160C  0E01               	movlw	1
  1457  00160E  6EC2               	movwf	194,c	;volatile
  1458  001610  0C01               	retlw	1	;funcret
  1459  001612                     __end_of_adc_init:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function ___xxtofl *****************
  1463 ;; Defined at:
  1464 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  sign            1    wreg     unsigned char 
  1467 ;;  val             4    0[COMRAM] long 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  sign            1    8[COMRAM] unsigned char 
  1470 ;;  arg             4   10[COMRAM] unsigned long 
  1471 ;;  exp             1    9[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  4    0[COMRAM] unsigned char 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:         4       0       0       0       0       0       0       0       0
  1482 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1484 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:       14 bytes
  1486 ;; Hardware stack levels used: 1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text11
  1495  0010CA                     __ptext11:
  1496                           	callstack 0
  1497  0010CA                     ___xxtofl:
  1498                           	callstack 30
  1499                           
  1500                           ;incstack = 0
  1501                           ;___xxtofl@sign stored from wreg
  1502  0010CA  6E09               	movwf	___xxtofl@sign^0,c
  1503  0010CC  5009               	movf	___xxtofl@sign^0,w,c
  1504  0010CE  E01C               	bz	l802
  1505  0010D0  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  1506  0010D2  D01A               	goto	l802
  1507  0010D4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1508  0010D8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1509  0010DC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1510  0010E0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1511  0010E4  1E05               	comf	??___xxtofl^0,f,c
  1512  0010E6  1E06               	comf	(??___xxtofl+1)^0,f,c
  1513  0010E8  1E07               	comf	(??___xxtofl+2)^0,f,c
  1514  0010EA  1E08               	comf	(??___xxtofl+3)^0,f,c
  1515  0010EC  2A05               	incf	??___xxtofl^0,f,c
  1516  0010EE  0E00               	movlw	0
  1517  0010F0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1518  0010F2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1519  0010F4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1520  0010F6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1521  0010FA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1522  0010FE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1523  001102  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1524  001106  D008               	goto	l2262
  1525  001108                     l802:
  1526  001108  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1527  00110C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1528  001110  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1529  001114  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1530  001118                     l2262:
  1531  001118  5001               	movf	___xxtofl@val^0,w,c
  1532  00111A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1533  00111C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1534  00111E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1535  001120  E105               	bnz	l2266
  1536  001122  6A01               	clrf	?___xxtofl^0,c
  1537  001124  6A02               	clrf	(?___xxtofl+1)^0,c
  1538  001126  6A03               	clrf	(?___xxtofl+2)^0,c
  1539  001128  6A04               	clrf	(?___xxtofl+3)^0,c
  1540  00112A  0012               	return	
  1541  00112C                     l2266:
  1542  00112C  0E96               	movlw	150
  1543  00112E  6E0A               	movwf	___xxtofl@exp^0,c
  1544  001130  D006               	goto	l2270
  1545  001132                     l2268:
  1546  001132  2A0A               	incf	___xxtofl@exp^0,f,c
  1547  001134  90D8               	bcf	status,0,c
  1548  001136  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1549  001138  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1550  00113A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1551  00113C  320B               	rrcf	___xxtofl@arg^0,f,c
  1552  00113E                     l2270:
  1553  00113E  6A05               	clrf	??___xxtofl^0,c
  1554  001140  6A06               	clrf	(??___xxtofl+1)^0,c
  1555  001142  6A07               	clrf	(??___xxtofl+2)^0,c
  1556  001144  0EFE               	movlw	254
  1557  001146  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1558  001148  6E08               	movwf	(??___xxtofl+3)^0,c
  1559  00114A  5005               	movf	??___xxtofl^0,w,c
  1560  00114C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1561  00114E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1562  001150  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1563  001152  E00C               	bz	l809
  1564  001154  D7EE               	goto	l2268
  1565  001156                     l2272:
  1566  001156  2A0A               	incf	___xxtofl@exp^0,f,c
  1567  001158  2A0B               	incf	___xxtofl@arg^0,f,c
  1568  00115A  0E00               	movlw	0
  1569  00115C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1570  00115E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1571  001160  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1572  001162  90D8               	bcf	status,0,c
  1573  001164  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1574  001166  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1575  001168  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1576  00116A  320B               	rrcf	___xxtofl@arg^0,f,c
  1577  00116C                     l809:
  1578  00116C  6A05               	clrf	??___xxtofl^0,c
  1579  00116E  6A06               	clrf	(??___xxtofl+1)^0,c
  1580  001170  6A07               	clrf	(??___xxtofl+2)^0,c
  1581  001172  500E               	movf	(___xxtofl@arg+3)^0,w,c
  1582  001174  6E08               	movwf	(??___xxtofl+3)^0,c
  1583  001176  5005               	movf	??___xxtofl^0,w,c
  1584  001178  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1585  00117A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1586  00117C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1587  00117E  E007               	bz	l2280
  1588  001180  D7EA               	goto	l2272
  1589  001182                     l2278:
  1590  001182  060A               	decf	___xxtofl@exp^0,f,c
  1591  001184  90D8               	bcf	status,0,c
  1592  001186  360B               	rlcf	___xxtofl@arg^0,f,c
  1593  001188  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1594  00118A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1595  00118C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1596  00118E                     l2280:
  1597  00118E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1598  001190  D003               	goto	u2180
  1599  001192  0E02               	movlw	2
  1600  001194  600A               	cpfslt	___xxtofl@exp^0,c
  1601  001196  D7F5               	goto	l2278
  1602  001198                     u2180:
  1603  001198  A00A               	btfss	___xxtofl@exp^0,0,c
  1604  00119A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1605  00119C  90D8               	bcf	status,0,c
  1606  00119E  320A               	rrcf	___xxtofl@exp^0,f,c
  1607  0011A0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1608  0011A4  6A06               	clrf	(??___xxtofl+1)^0,c
  1609  0011A6  6A07               	clrf	(??___xxtofl+2)^0,c
  1610  0011A8  6A08               	clrf	(??___xxtofl+3)^0,c
  1611  0011AA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1612  0011AE  6A07               	clrf	(??___xxtofl+2)^0,c
  1613  0011B0  6A06               	clrf	(??___xxtofl+1)^0,c
  1614  0011B2  6A05               	clrf	??___xxtofl^0,c
  1615  0011B4  5005               	movf	??___xxtofl^0,w,c
  1616  0011B6  120B               	iorwf	___xxtofl@arg^0,f,c
  1617  0011B8  5006               	movf	(??___xxtofl+1)^0,w,c
  1618  0011BA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1619  0011BC  5007               	movf	(??___xxtofl+2)^0,w,c
  1620  0011BE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1621  0011C0  5008               	movf	(??___xxtofl+3)^0,w,c
  1622  0011C2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1623  0011C4  5009               	movf	___xxtofl@sign^0,w,c
  1624  0011C6  E002               	bz	l2296
  1625  0011C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1626  0011CA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1627  0011CC                     l2296:
  1628  0011CC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1629  0011D0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1630  0011D4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1631  0011D8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1632  0011DC  0012               	return		;funcret
  1633  0011DE                     __end_of___xxtofl:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function ___fltol *****************
  1637 ;; Defined at:
  1638 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  f1              4    0[COMRAM] unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  exp1            1    9[COMRAM] unsigned char 
  1643 ;;  sign1           1    8[COMRAM] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  4    0[COMRAM] long 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1653 ;;      Params:         4       0       0       0       0       0       0       0       0
  1654 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1655 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1656 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1657 ;;Total ram usage:       10 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text12
  1667  00127C                     __ptext12:
  1668                           	callstack 0
  1669  00127C                     ___fltol:
  1670                           	callstack 30
  1671                           
  1672                           ;incstack = 0
  1673  00127C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1674  00127E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1675  001280  6E0A               	movwf	___fltol@exp1^0,c
  1676  001282  500A               	movf	___fltol@exp1^0,w,c
  1677  001284  E105               	bnz	l2222
  1678  001286                     u2050:
  1679  001286  6A01               	clrf	?___fltol^0,c
  1680  001288  6A02               	clrf	(?___fltol+1)^0,c
  1681  00128A  6A03               	clrf	(?___fltol+2)^0,c
  1682  00128C  6A04               	clrf	(?___fltol+3)^0,c
  1683  00128E  0012               	return	
  1684  001290                     l2222:
  1685  001290  C001  F005         	movff	___fltol@f1,??___fltol
  1686  001294  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1687  001298  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1688  00129C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1689  0012A0  0E20               	movlw	32
  1690  0012A2  D005               	goto	u2060
  1691  0012A4                     u2065:
  1692  0012A4  90D8               	bcf	status,0,c
  1693  0012A6  3208               	rrcf	(??___fltol+3)^0,f,c
  1694  0012A8  3207               	rrcf	(??___fltol+2)^0,f,c
  1695  0012AA  3206               	rrcf	(??___fltol+1)^0,f,c
  1696  0012AC  3205               	rrcf	??___fltol^0,f,c
  1697  0012AE                     u2060:
  1698  0012AE  2EE8               	decfsz	wreg,f,c
  1699  0012B0  D7F9               	goto	u2065
  1700  0012B2  5005               	movf	??___fltol^0,w,c
  1701  0012B4  6E09               	movwf	___fltol@sign1^0,c
  1702  0012B6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1703  0012B8  6A04               	clrf	(___fltol@f1+3)^0,c
  1704  0012BA  0E96               	movlw	150
  1705  0012BC  5E0A               	subwf	___fltol@exp1^0,f,c
  1706  0012BE  AE0A               	btfss	___fltol@exp1^0,7,c
  1707  0012C0  D00C               	goto	l2240
  1708  0012C2  500A               	movf	___fltol@exp1^0,w,c
  1709  0012C4  0A80               	xorlw	128
  1710  0012C6  0F97               	addlw	151
  1711  0012C8  E3DE               	bnc	u2050
  1712  0012CA                     l2236:
  1713  0012CA  90D8               	bcf	status,0,c
  1714  0012CC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1715  0012CE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1716  0012D0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1717  0012D2  3201               	rrcf	___fltol@f1^0,f,c
  1718  0012D4  3E0A               	incfsz	___fltol@exp1^0,f,c
  1719  0012D6  D7F9               	goto	l2236
  1720  0012D8  D00C               	goto	u2100
  1721  0012DA                     l2240:
  1722  0012DA  0E1F               	movlw	31
  1723  0012DC  640A               	cpfsgt	___fltol@exp1^0,c
  1724  0012DE  D007               	goto	l2246
  1725  0012E0  D7D2               	goto	u2050
  1726  0012E2                     l2244:
  1727  0012E2  90D8               	bcf	status,0,c
  1728  0012E4  3601               	rlcf	___fltol@f1^0,f,c
  1729  0012E6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1730  0012E8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1731  0012EA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1732  0012EC  060A               	decf	___fltol@exp1^0,f,c
  1733  0012EE                     l2246:
  1734  0012EE  500A               	movf	___fltol@exp1^0,w,c
  1735  0012F0  E1F8               	bnz	l2244
  1736  0012F2                     u2100:
  1737  0012F2  5009               	movf	___fltol@sign1^0,w,c
  1738  0012F4  E008               	bz	l2252
  1739  0012F6  1E04               	comf	(___fltol@f1+3)^0,f,c
  1740  0012F8  1E03               	comf	(___fltol@f1+2)^0,f,c
  1741  0012FA  1E02               	comf	(___fltol@f1+1)^0,f,c
  1742  0012FC  6C01               	negf	___fltol@f1^0,c
  1743  0012FE  0E00               	movlw	0
  1744  001300  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1745  001302  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1746  001304  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1747  001306                     l2252:
  1748  001306  C001  F001         	movff	___fltol@f1,?___fltol
  1749  00130A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1750  00130E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1751  001312  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1752  001316  0012               	return		;funcret
  1753  001318                     __end_of___fltol:
  1754                           	callstack 0
  1755                           
  1756 ;; *************** function ___flmul *****************
  1757 ;; Defined at:
  1758 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  1759 ;; Parameters:    Size  Location     Type
  1760 ;;  b               4    0[COMRAM] long 
  1761 ;;  a               4    4[COMRAM] long 
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  prod            4   19[COMRAM] struct .
  1764 ;;  grs             4   14[COMRAM] unsigned long 
  1765 ;;  temp            2   23[COMRAM] struct .
  1766 ;;  bexp            1   18[COMRAM] unsigned char 
  1767 ;;  aexp            1   13[COMRAM] unsigned char 
  1768 ;;  sign            1   12[COMRAM] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  4    0[COMRAM] unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, prodl, prodh
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         8       0       0       0       0       0       0       0       0
  1779 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1781 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:       25 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text13
  1792  000818                     __ptext13:
  1793                           	callstack 0
  1794  000818                     ___flmul:
  1795                           	callstack 30
  1796                           
  1797                           ;incstack = 0
  1798  000818  5004               	movf	(___flmul@b+3)^0,w,c
  1799  00081A  0B80               	andlw	128
  1800  00081C  6E0D               	movwf	___flmul@sign^0,c
  1801  00081E  5004               	movf	(___flmul@b+3)^0,w,c
  1802  000820  2404               	addwf	(___flmul@b+3)^0,w,c
  1803  000822  6E13               	movwf	___flmul@bexp^0,c
  1804  000824  BE03               	btfsc	(___flmul@b+2)^0,7,c
  1805  000826  8013               	bsf	___flmul@bexp^0,0,c
  1806  000828  5013               	movf	___flmul@bexp^0,w,c
  1807  00082A  E008               	bz	l755
  1808  00082C  2813               	incf	___flmul@bexp^0,w,c
  1809  00082E  E104               	bnz	l2112
  1810  000830  6A01               	clrf	___flmul@b^0,c
  1811  000832  6A02               	clrf	(___flmul@b+1)^0,c
  1812  000834  6A03               	clrf	(___flmul@b+2)^0,c
  1813  000836  6A04               	clrf	(___flmul@b+3)^0,c
  1814  000838                     l2112:
  1815  000838  8E03               	bsf	(___flmul@b+2)^0,7,c
  1816  00083A  D004               	goto	l2114
  1817  00083C                     l755:
  1818  00083C  6A01               	clrf	___flmul@b^0,c
  1819  00083E  6A02               	clrf	(___flmul@b+1)^0,c
  1820  000840  6A03               	clrf	(___flmul@b+2)^0,c
  1821  000842  6A04               	clrf	(___flmul@b+3)^0,c
  1822  000844                     l2114:
  1823  000844  5008               	movf	(___flmul@a+3)^0,w,c
  1824  000846  0B80               	andlw	128
  1825  000848  1A0D               	xorwf	___flmul@sign^0,f,c
  1826  00084A  5008               	movf	(___flmul@a+3)^0,w,c
  1827  00084C  2408               	addwf	(___flmul@a+3)^0,w,c
  1828  00084E  6E0E               	movwf	___flmul@aexp^0,c
  1829  000850  BE07               	btfsc	(___flmul@a+2)^0,7,c
  1830  000852  800E               	bsf	___flmul@aexp^0,0,c
  1831  000854  500E               	movf	___flmul@aexp^0,w,c
  1832  000856  E008               	bz	l759
  1833  000858  280E               	incf	___flmul@aexp^0,w,c
  1834  00085A  E104               	bnz	l2126
  1835  00085C  6A05               	clrf	___flmul@a^0,c
  1836  00085E  6A06               	clrf	(___flmul@a+1)^0,c
  1837  000860  6A07               	clrf	(___flmul@a+2)^0,c
  1838  000862  6A08               	clrf	(___flmul@a+3)^0,c
  1839  000864                     l2126:
  1840  000864  8E07               	bsf	(___flmul@a+2)^0,7,c
  1841  000866  D004               	goto	l2128
  1842  000868                     l759:
  1843  000868  6A05               	clrf	___flmul@a^0,c
  1844  00086A  6A06               	clrf	(___flmul@a+1)^0,c
  1845  00086C  6A07               	clrf	(___flmul@a+2)^0,c
  1846  00086E  6A08               	clrf	(___flmul@a+3)^0,c
  1847  000870                     l2128:
  1848  000870  500E               	movf	___flmul@aexp^0,w,c
  1849  000872  E002               	bz	u1940
  1850  000874  5013               	movf	___flmul@bexp^0,w,c
  1851  000876  E105               	bnz	l2132
  1852  000878                     u1940:
  1853  000878  6A01               	clrf	?___flmul^0,c
  1854  00087A  6A02               	clrf	(?___flmul+1)^0,c
  1855  00087C  6A03               	clrf	(?___flmul+2)^0,c
  1856  00087E  6A04               	clrf	(?___flmul+3)^0,c
  1857  000880  0012               	return	
  1858  000882                     l2132:
  1859  000882  5007               	movf	(___flmul@a+2)^0,w,c
  1860  000884  0201               	mulwf	___flmul@b^0,c
  1861  000886  CFF3 F018          	movff	prodl,___flmul@temp
  1862  00088A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1863  00088E  5018               	movf	___flmul@temp^0,w,c
  1864  000890  6E0F               	movwf	___flmul@grs^0,c
  1865  000892  6A10               	clrf	(___flmul@grs+1)^0,c
  1866  000894  6A11               	clrf	(___flmul@grs+2)^0,c
  1867  000896  6A12               	clrf	(___flmul@grs+3)^0,c
  1868  000898  5019               	movf	(___flmul@temp+1)^0,w,c
  1869  00089A  6E14               	movwf	___flmul@prod^0,c
  1870  00089C  6A15               	clrf	(___flmul@prod+1)^0,c
  1871  00089E  6A16               	clrf	(___flmul@prod+2)^0,c
  1872  0008A0  6A17               	clrf	(___flmul@prod+3)^0,c
  1873  0008A2  5006               	movf	(___flmul@a+1)^0,w,c
  1874  0008A4  0202               	mulwf	(___flmul@b+1)^0,c
  1875  0008A6  CFF3 F018          	movff	prodl,___flmul@temp
  1876  0008AA  CFF4 F019          	movff	prodh,___flmul@temp+1
  1877  0008AE  5018               	movf	___flmul@temp^0,w,c
  1878  0008B0  260F               	addwf	___flmul@grs^0,f,c
  1879  0008B2  0E00               	movlw	0
  1880  0008B4  2210               	addwfc	(___flmul@grs+1)^0,f,c
  1881  0008B6  2211               	addwfc	(___flmul@grs+2)^0,f,c
  1882  0008B8  2212               	addwfc	(___flmul@grs+3)^0,f,c
  1883  0008BA  5019               	movf	(___flmul@temp+1)^0,w,c
  1884  0008BC  2614               	addwf	___flmul@prod^0,f,c
  1885  0008BE  0E00               	movlw	0
  1886  0008C0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1887  0008C2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1888  0008C4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1889  0008C6  5005               	movf	___flmul@a^0,w,c
  1890  0008C8  0203               	mulwf	(___flmul@b+2)^0,c
  1891  0008CA  CFF3 F018          	movff	prodl,___flmul@temp
  1892  0008CE  CFF4 F019          	movff	prodh,___flmul@temp+1
  1893  0008D2  5018               	movf	___flmul@temp^0,w,c
  1894  0008D4  260F               	addwf	___flmul@grs^0,f,c
  1895  0008D6  0E00               	movlw	0
  1896  0008D8  2210               	addwfc	(___flmul@grs+1)^0,f,c
  1897  0008DA  2211               	addwfc	(___flmul@grs+2)^0,f,c
  1898  0008DC  2212               	addwfc	(___flmul@grs+3)^0,f,c
  1899  0008DE  5019               	movf	(___flmul@temp+1)^0,w,c
  1900  0008E0  2614               	addwf	___flmul@prod^0,f,c
  1901  0008E2  0E00               	movlw	0
  1902  0008E4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1903  0008E6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1904  0008E8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1905  0008EA  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  1906  0008EE  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  1907  0008F2  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  1908  0008F6  6A0F               	clrf	___flmul@grs^0,c
  1909  0008F8  5005               	movf	___flmul@a^0,w,c
  1910  0008FA  0202               	mulwf	(___flmul@b+1)^0,c
  1911  0008FC  CFF3 F018          	movff	prodl,___flmul@temp
  1912  000900  CFF4 F019          	movff	prodh,___flmul@temp+1
  1913  000904  5018               	movf	___flmul@temp^0,w,c
  1914  000906  260F               	addwf	___flmul@grs^0,f,c
  1915  000908  5019               	movf	(___flmul@temp+1)^0,w,c
  1916  00090A  2210               	addwfc	(___flmul@grs+1)^0,f,c
  1917  00090C  0E00               	movlw	0
  1918  00090E  2211               	addwfc	(___flmul@grs+2)^0,f,c
  1919  000910  2212               	addwfc	(___flmul@grs+3)^0,f,c
  1920  000912  5006               	movf	(___flmul@a+1)^0,w,c
  1921  000914  0201               	mulwf	___flmul@b^0,c
  1922  000916  CFF3 F018          	movff	prodl,___flmul@temp
  1923  00091A  CFF4 F019          	movff	prodh,___flmul@temp+1
  1924  00091E  5018               	movf	___flmul@temp^0,w,c
  1925  000920  260F               	addwf	___flmul@grs^0,f,c
  1926  000922  5019               	movf	(___flmul@temp+1)^0,w,c
  1927  000924  2210               	addwfc	(___flmul@grs+1)^0,f,c
  1928  000926  0E00               	movlw	0
  1929  000928  2211               	addwfc	(___flmul@grs+2)^0,f,c
  1930  00092A  2212               	addwfc	(___flmul@grs+3)^0,f,c
  1931  00092C  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  1932  000930  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  1933  000934  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  1934  000938  6A0F               	clrf	___flmul@grs^0,c
  1935  00093A  5005               	movf	___flmul@a^0,w,c
  1936  00093C  0201               	mulwf	___flmul@b^0,c
  1937  00093E  CFF3 F018          	movff	prodl,___flmul@temp
  1938  000942  CFF4 F019          	movff	prodh,___flmul@temp+1
  1939  000946  5018               	movf	___flmul@temp^0,w,c
  1940  000948  260F               	addwf	___flmul@grs^0,f,c
  1941  00094A  5019               	movf	(___flmul@temp+1)^0,w,c
  1942  00094C  2210               	addwfc	(___flmul@grs+1)^0,f,c
  1943  00094E  0E00               	movlw	0
  1944  000950  2211               	addwfc	(___flmul@grs+2)^0,f,c
  1945  000952  2212               	addwfc	(___flmul@grs+3)^0,f,c
  1946  000954  5007               	movf	(___flmul@a+2)^0,w,c
  1947  000956  0202               	mulwf	(___flmul@b+1)^0,c
  1948  000958  CFF3 F018          	movff	prodl,___flmul@temp
  1949  00095C  CFF4 F019          	movff	prodh,___flmul@temp+1
  1950  000960  5018               	movf	___flmul@temp^0,w,c
  1951  000962  2614               	addwf	___flmul@prod^0,f,c
  1952  000964  5019               	movf	(___flmul@temp+1)^0,w,c
  1953  000966  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1954  000968  0E00               	movlw	0
  1955  00096A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1956  00096C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1957  00096E  5006               	movf	(___flmul@a+1)^0,w,c
  1958  000970  0203               	mulwf	(___flmul@b+2)^0,c
  1959  000972  CFF3 F018          	movff	prodl,___flmul@temp
  1960  000976  CFF4 F019          	movff	prodh,___flmul@temp+1
  1961  00097A  5018               	movf	___flmul@temp^0,w,c
  1962  00097C  2614               	addwf	___flmul@prod^0,f,c
  1963  00097E  5019               	movf	(___flmul@temp+1)^0,w,c
  1964  000980  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1965  000982  0E00               	movlw	0
  1966  000984  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1967  000986  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1968  000988  5007               	movf	(___flmul@a+2)^0,w,c
  1969  00098A  0203               	mulwf	(___flmul@b+2)^0,c
  1970  00098C  CFF3 F018          	movff	prodl,___flmul@temp
  1971  000990  CFF4 F019          	movff	prodh,___flmul@temp+1
  1972  000994  5018               	movf	___flmul@temp^0,w,c
  1973  000996  6E09               	movwf	??___flmul^0,c
  1974  000998  5019               	movf	(___flmul@temp+1)^0,w,c
  1975  00099A  6E0A               	movwf	(??___flmul+1)^0,c
  1976  00099C  6A0B               	clrf	(??___flmul+2)^0,c
  1977  00099E  6A0C               	clrf	(??___flmul+3)^0,c
  1978  0009A0  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  1979  0009A4  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  1980  0009A8  C009  F00A         	movff	??___flmul,??___flmul+1
  1981  0009AC  6A09               	clrf	??___flmul^0,c
  1982  0009AE  5009               	movf	??___flmul^0,w,c
  1983  0009B0  2614               	addwf	___flmul@prod^0,f,c
  1984  0009B2  500A               	movf	(??___flmul+1)^0,w,c
  1985  0009B4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1986  0009B6  500B               	movf	(??___flmul+2)^0,w,c
  1987  0009B8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1988  0009BA  500C               	movf	(??___flmul+3)^0,w,c
  1989  0009BC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1990  0009BE  5012               	movf	(___flmul@grs+3)^0,w,c
  1991  0009C0  2614               	addwf	___flmul@prod^0,f,c
  1992  0009C2  0E00               	movlw	0
  1993  0009C4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  1994  0009C6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  1995  0009C8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  1996  0009CA  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  1997  0009CE  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  1998  0009D2  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  1999  0009D6  6A0F               	clrf	___flmul@grs^0,c
  2000  0009D8  500E               	movf	___flmul@aexp^0,w,c
  2001  0009DA  C013  F009         	movff	___flmul@bexp,??___flmul
  2002  0009DE  6A0A               	clrf	(??___flmul+1)^0,c
  2003  0009E0  2609               	addwf	??___flmul^0,f,c
  2004  0009E2  0E00               	movlw	0
  2005  0009E4  220A               	addwfc	(??___flmul+1)^0,f,c
  2006  0009E6  0E82               	movlw	130
  2007  0009E8  2409               	addwf	??___flmul^0,w,c
  2008  0009EA  6E18               	movwf	___flmul@temp^0,c
  2009  0009EC  0EFF               	movlw	255
  2010  0009EE  200A               	addwfc	(??___flmul+1)^0,w,c
  2011  0009F0  6E19               	movwf	(___flmul@temp+1)^0,c
  2012  0009F2  D00F               	goto	l2180
  2013  0009F4                     l2174:
  2014  0009F4  90D8               	bcf	status,0,c
  2015  0009F6  3614               	rlcf	___flmul@prod^0,f,c
  2016  0009F8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  2017  0009FA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  2018  0009FC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  2019  0009FE  BE12               	btfsc	(___flmul@grs+3)^0,7,c
  2020  000A00  8014               	bsf	___flmul@prod^0,0,c
  2021  000A02  90D8               	bcf	status,0,c
  2022  000A04  360F               	rlcf	___flmul@grs^0,f,c
  2023  000A06  3610               	rlcf	(___flmul@grs+1)^0,f,c
  2024  000A08  3611               	rlcf	(___flmul@grs+2)^0,f,c
  2025  000A0A  3612               	rlcf	(___flmul@grs+3)^0,f,c
  2026  000A0C  0618               	decf	___flmul@temp^0,f,c
  2027  000A0E  A0D8               	btfss	status,0,c
  2028  000A10  0619               	decf	(___flmul@temp+1)^0,f,c
  2029  000A12                     l2180:
  2030  000A12  AE16               	btfss	(___flmul@prod+2)^0,7,c
  2031  000A14  D7EF               	goto	l2174
  2032  000A16  6A0E               	clrf	___flmul@aexp^0,c
  2033  000A18  AE12               	btfss	(___flmul@grs+3)^0,7,c
  2034  000A1A  D013               	goto	l770
  2035  000A1C  500F               	movf	___flmul@grs^0,w,c
  2036  000A1E  6E09               	movwf	??___flmul^0,c
  2037  000A20  5010               	movf	(___flmul@grs+1)^0,w,c
  2038  000A22  6E0A               	movwf	(??___flmul+1)^0,c
  2039  000A24  5011               	movf	(___flmul@grs+2)^0,w,c
  2040  000A26  6E0B               	movwf	(??___flmul+2)^0,c
  2041  000A28  0E7F               	movlw	127
  2042  000A2A  1412               	andwf	(___flmul@grs+3)^0,w,c
  2043  000A2C  6E0C               	movwf	(??___flmul+3)^0,c
  2044  000A2E  5009               	movf	??___flmul^0,w,c
  2045  000A30  100A               	iorwf	(??___flmul+1)^0,w,c
  2046  000A32  100B               	iorwf	(??___flmul+2)^0,w,c
  2047  000A34  100C               	iorwf	(??___flmul+3)^0,w,c
  2048  000A36  E003               	bz	l771
  2049  000A38                     u1980:
  2050  000A38  0E01               	movlw	1
  2051  000A3A  6E0E               	movwf	___flmul@aexp^0,c
  2052  000A3C  D002               	goto	l770
  2053  000A3E                     l771:
  2054  000A3E  B014               	btfsc	___flmul@prod^0,0,c
  2055  000A40  D7FB               	goto	u1980
  2056  000A42                     l770:
  2057  000A42  500E               	movf	___flmul@aexp^0,w,c
  2058  000A44  E00E               	bz	l2196
  2059  000A46  2A14               	incf	___flmul@prod^0,f,c
  2060  000A48  0E00               	movlw	0
  2061  000A4A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  2062  000A4C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  2063  000A4E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  2064  000A50  A017               	btfss	(___flmul@prod+3)^0,0,c
  2065  000A52  D007               	goto	l2196
  2066  000A54  3417               	rlcf	(___flmul@prod+3)^0,w,c
  2067  000A56  3217               	rrcf	(___flmul@prod+3)^0,f,c
  2068  000A58  3216               	rrcf	(___flmul@prod+2)^0,f,c
  2069  000A5A  3215               	rrcf	(___flmul@prod+1)^0,f,c
  2070  000A5C  3214               	rrcf	___flmul@prod^0,f,c
  2071  000A5E  4A18               	infsnz	___flmul@temp^0,f,c
  2072  000A60  2A19               	incf	(___flmul@temp+1)^0,f,c
  2073  000A62                     l2196:
  2074  000A62  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2075  000A64  D00A               	goto	l2200
  2076  000A66  5019               	movf	(___flmul@temp+1)^0,w,c
  2077  000A68  E102               	bnz	u2020
  2078  000A6A  2818               	incf	___flmul@temp^0,w,c
  2079  000A6C  E306               	bnc	l2200
  2080  000A6E                     u2020:
  2081  000A6E  6A14               	clrf	___flmul@prod^0,c
  2082  000A70  6A15               	clrf	(___flmul@prod+1)^0,c
  2083  000A72  0E80               	movlw	128
  2084  000A74  6E16               	movwf	(___flmul@prod+2)^0,c
  2085  000A76  0E7F               	movlw	127
  2086  000A78  D015               	goto	L1
  2087  000A7A                     l2200:
  2088  000A7A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  2089  000A7C  D004               	goto	u2030
  2090  000A7E  5019               	movf	(___flmul@temp+1)^0,w,c
  2091  000A80  E108               	bnz	l778
  2092  000A82  0418               	decf	___flmul@temp^0,w,c
  2093  000A84  E206               	bc	l778
  2094  000A86                     u2030:
  2095  000A86  6A14               	clrf	___flmul@prod^0,c
  2096  000A88  6A15               	clrf	(___flmul@prod+1)^0,c
  2097  000A8A  6A16               	clrf	(___flmul@prod+2)^0,c
  2098  000A8C  6A17               	clrf	(___flmul@prod+3)^0,c
  2099  000A8E  6A0D               	clrf	___flmul@sign^0,c
  2100  000A90  D00A               	goto	l2212
  2101  000A92                     l778:
  2102  000A92  C018  F013         	movff	___flmul@temp,___flmul@bexp
  2103  000A96  0E7F               	movlw	127
  2104  000A98  1616               	andwf	(___flmul@prod+2)^0,f,c
  2105  000A9A  6A17               	clrf	(___flmul@prod+3)^0,c
  2106  000A9C  B013               	btfsc	___flmul@bexp^0,0,c
  2107  000A9E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  2108  000AA0  90D8               	bcf	status,0,c
  2109  000AA2  3013               	rrcf	___flmul@bexp^0,w,c
  2110  000AA4                     L1:
  2111  000AA4  6E17               	movwf	(___flmul@prod+3)^0,c
  2112  000AA6                     l2212:
  2113  000AA6  500D               	movf	___flmul@sign^0,w,c
  2114  000AA8  1217               	iorwf	(___flmul@prod+3)^0,f,c
  2115  000AAA  C014  F001         	movff	___flmul@prod,?___flmul
  2116  000AAE  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  2117  000AB2  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  2118  000AB6  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  2119  000ABA  0012               	return		;funcret
  2120  000ABC                     __end_of___flmul:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function ___fldiv *****************
  2124 ;; Defined at:
  2125 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  b               4   25[COMRAM] unsigned char 
  2128 ;;  a               4   29[COMRAM] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  grs             4   44[COMRAM] unsigned long 
  2131 ;;  rem             4   37[COMRAM] unsigned long 
  2132 ;;  new_exp         2   42[COMRAM] short 
  2133 ;;  aexp            1   49[COMRAM] unsigned char 
  2134 ;;  bexp            1   48[COMRAM] unsigned char 
  2135 ;;  sign            1   41[COMRAM] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  4   25[COMRAM] unsigned char 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2145 ;;      Params:         8       0       0       0       0       0       0       0       0
  2146 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2147 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2148 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2149 ;;Total ram usage:       25 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text14
  2159  000D36                     __ptext14:
  2160                           	callstack 0
  2161  000D36                     ___fldiv:
  2162                           	callstack 30
  2163                           
  2164                           ;incstack = 0
  2165  000D36  501D               	movf	(___fldiv@b+3)^0,w,c
  2166  000D38  0B80               	andlw	128
  2167  000D3A  6E2A               	movwf	___fldiv@sign^0,c
  2168  000D3C  501D               	movf	(___fldiv@b+3)^0,w,c
  2169  000D3E  241D               	addwf	(___fldiv@b+3)^0,w,c
  2170  000D40  6E31               	movwf	___fldiv@bexp^0,c
  2171  000D42  BE1C               	btfsc	(___fldiv@b+2)^0,7,c
  2172  000D44  8031               	bsf	___fldiv@bexp^0,0,c
  2173  000D46  5031               	movf	___fldiv@bexp^0,w,c
  2174  000D48  E008               	bz	l721
  2175  000D4A  2831               	incf	___fldiv@bexp^0,w,c
  2176  000D4C  E104               	bnz	l1992
  2177  000D4E  6A1A               	clrf	___fldiv@b^0,c
  2178  000D50  6A1B               	clrf	(___fldiv@b+1)^0,c
  2179  000D52  6A1C               	clrf	(___fldiv@b+2)^0,c
  2180  000D54  6A1D               	clrf	(___fldiv@b+3)^0,c
  2181  000D56                     l1992:
  2182  000D56  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  2183  000D58  D003               	goto	L2
  2184  000D5A                     l721:
  2185  000D5A  6A1A               	clrf	___fldiv@b^0,c
  2186  000D5C  6A1B               	clrf	(___fldiv@b+1)^0,c
  2187  000D5E  6A1C               	clrf	(___fldiv@b+2)^0,c
  2188  000D60                     L2:
  2189  000D60  6A1D               	clrf	(___fldiv@b+3)^0,c
  2190  000D62  5021               	movf	(___fldiv@a+3)^0,w,c
  2191  000D64  0B80               	andlw	128
  2192  000D66  1A2A               	xorwf	___fldiv@sign^0,f,c
  2193  000D68  5021               	movf	(___fldiv@a+3)^0,w,c
  2194  000D6A  2421               	addwf	(___fldiv@a+3)^0,w,c
  2195  000D6C  6E32               	movwf	___fldiv@aexp^0,c
  2196  000D6E  BE20               	btfsc	(___fldiv@a+2)^0,7,c
  2197  000D70  8032               	bsf	___fldiv@aexp^0,0,c
  2198  000D72  5032               	movf	___fldiv@aexp^0,w,c
  2199  000D74  E008               	bz	l725
  2200  000D76  2832               	incf	___fldiv@aexp^0,w,c
  2201  000D78  E104               	bnz	l2008
  2202  000D7A  6A1E               	clrf	___fldiv@a^0,c
  2203  000D7C  6A1F               	clrf	(___fldiv@a+1)^0,c
  2204  000D7E  6A20               	clrf	(___fldiv@a+2)^0,c
  2205  000D80  6A21               	clrf	(___fldiv@a+3)^0,c
  2206  000D82                     l2008:
  2207  000D82  8E20               	bsf	(___fldiv@a+2)^0,7,c
  2208  000D84  D003               	goto	L3
  2209  000D86                     l725:
  2210  000D86  6A1E               	clrf	___fldiv@a^0,c
  2211  000D88  6A1F               	clrf	(___fldiv@a+1)^0,c
  2212  000D8A  6A20               	clrf	(___fldiv@a+2)^0,c
  2213  000D8C                     L3:
  2214  000D8C  6A21               	clrf	(___fldiv@a+3)^0,c
  2215  000D8E  501E               	movf	___fldiv@a^0,w,c
  2216  000D90  101F               	iorwf	(___fldiv@a+1)^0,w,c
  2217  000D92  1020               	iorwf	(___fldiv@a+2)^0,w,c
  2218  000D94  1021               	iorwf	(___fldiv@a+3)^0,w,c
  2219  000D96  E113               	bnz	l2022
  2220  000D98  6A1A               	clrf	___fldiv@b^0,c
  2221  000D9A  6A1B               	clrf	(___fldiv@b+1)^0,c
  2222  000D9C  6A1C               	clrf	(___fldiv@b+2)^0,c
  2223  000D9E  6A1D               	clrf	(___fldiv@b+3)^0,c
  2224  000DA0  0E80               	movlw	128
  2225  000DA2  121C               	iorwf	(___fldiv@b+2)^0,f,c
  2226  000DA4  0E7F               	movlw	127
  2227  000DA6  121D               	iorwf	(___fldiv@b+3)^0,f,c
  2228  000DA8  502A               	movf	___fldiv@sign^0,w,c
  2229  000DAA  121D               	iorwf	(___fldiv@b+3)^0,f,c
  2230  000DAC  C01A  F01A         	movff	___fldiv@b,?___fldiv
  2231  000DB0  C01B  F01B         	movff	___fldiv@b+1,?___fldiv+1
  2232  000DB4  C01C  F01C         	movff	___fldiv@b+2,?___fldiv+2
  2233  000DB8  C01D  F01D         	movff	___fldiv@b+3,?___fldiv+3
  2234  000DBC  0012               	return	
  2235  000DBE                     l2022:
  2236  000DBE  5031               	movf	___fldiv@bexp^0,w,c
  2237  000DC0  E105               	bnz	l2026
  2238  000DC2  6A1A               	clrf	?___fldiv^0,c
  2239  000DC4  6A1B               	clrf	(?___fldiv+1)^0,c
  2240  000DC6  6A1C               	clrf	(?___fldiv+2)^0,c
  2241  000DC8  6A1D               	clrf	(?___fldiv+3)^0,c
  2242  000DCA  0012               	return	
  2243  000DCC                     l2026:
  2244  000DCC  5032               	movf	___fldiv@aexp^0,w,c
  2245  000DCE  C031  F022         	movff	___fldiv@bexp,??___fldiv
  2246  000DD2  6A23               	clrf	(??___fldiv+1)^0,c
  2247  000DD4  5E22               	subwf	??___fldiv^0,f,c
  2248  000DD6  0E00               	movlw	0
  2249  000DD8  5A23               	subwfb	(??___fldiv+1)^0,f,c
  2250  000DDA  0E7F               	movlw	127
  2251  000DDC  2422               	addwf	??___fldiv^0,w,c
  2252  000DDE  6E2B               	movwf	___fldiv@new_exp^0,c
  2253  000DE0  0E00               	movlw	0
  2254  000DE2  2023               	addwfc	(??___fldiv+1)^0,w,c
  2255  000DE4  6E2C               	movwf	(___fldiv@new_exp+1)^0,c
  2256  000DE6  C01A  F026         	movff	___fldiv@b,___fldiv@rem
  2257  000DEA  C01B  F027         	movff	___fldiv@b+1,___fldiv@rem+1
  2258  000DEE  C01C  F028         	movff	___fldiv@b+2,___fldiv@rem+2
  2259  000DF2  C01D  F029         	movff	___fldiv@b+3,___fldiv@rem+3
  2260  000DF6  6A1A               	clrf	___fldiv@b^0,c
  2261  000DF8  6A1B               	clrf	(___fldiv@b+1)^0,c
  2262  000DFA  6A1C               	clrf	(___fldiv@b+2)^0,c
  2263  000DFC  6A1D               	clrf	(___fldiv@b+3)^0,c
  2264  000DFE  6A2D               	clrf	___fldiv@grs^0,c
  2265  000E00  6A2E               	clrf	(___fldiv@grs+1)^0,c
  2266  000E02  6A2F               	clrf	(___fldiv@grs+2)^0,c
  2267  000E04  6A30               	clrf	(___fldiv@grs+3)^0,c
  2268  000E06  6A32               	clrf	___fldiv@aexp^0,c
  2269  000E08  D026               	goto	l731
  2270  000E0A                     l2036:
  2271  000E0A  5032               	movf	___fldiv@aexp^0,w,c
  2272  000E0C  E011               	bz	l2044
  2273  000E0E  90D8               	bcf	status,0,c
  2274  000E10  3626               	rlcf	___fldiv@rem^0,f,c
  2275  000E12  3627               	rlcf	(___fldiv@rem+1)^0,f,c
  2276  000E14  3628               	rlcf	(___fldiv@rem+2)^0,f,c
  2277  000E16  3629               	rlcf	(___fldiv@rem+3)^0,f,c
  2278  000E18  90D8               	bcf	status,0,c
  2279  000E1A  361A               	rlcf	___fldiv@b^0,f,c
  2280  000E1C  361B               	rlcf	(___fldiv@b+1)^0,f,c
  2281  000E1E  361C               	rlcf	(___fldiv@b+2)^0,f,c
  2282  000E20  361D               	rlcf	(___fldiv@b+3)^0,f,c
  2283  000E22  BE30               	btfsc	(___fldiv@grs+3)^0,7,c
  2284  000E24  801A               	bsf	___fldiv@b^0,0,c
  2285  000E26  90D8               	bcf	status,0,c
  2286  000E28  362D               	rlcf	___fldiv@grs^0,f,c
  2287  000E2A  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  2288  000E2C  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  2289  000E2E  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  2290  000E30                     l2044:
  2291  000E30  501E               	movf	___fldiv@a^0,w,c
  2292  000E32  5C26               	subwf	___fldiv@rem^0,w,c
  2293  000E34  501F               	movf	(___fldiv@a+1)^0,w,c
  2294  000E36  5827               	subwfb	(___fldiv@rem+1)^0,w,c
  2295  000E38  5020               	movf	(___fldiv@a+2)^0,w,c
  2296  000E3A  5828               	subwfb	(___fldiv@rem+2)^0,w,c
  2297  000E3C  5021               	movf	(___fldiv@a+3)^0,w,c
  2298  000E3E  5829               	subwfb	(___fldiv@rem+3)^0,w,c
  2299  000E40  E309               	bnc	l2050
  2300  000E42  8C30               	bsf	(___fldiv@grs+3)^0,6,c
  2301  000E44  501E               	movf	___fldiv@a^0,w,c
  2302  000E46  5E26               	subwf	___fldiv@rem^0,f,c
  2303  000E48  501F               	movf	(___fldiv@a+1)^0,w,c
  2304  000E4A  5A27               	subwfb	(___fldiv@rem+1)^0,f,c
  2305  000E4C  5020               	movf	(___fldiv@a+2)^0,w,c
  2306  000E4E  5A28               	subwfb	(___fldiv@rem+2)^0,f,c
  2307  000E50  5021               	movf	(___fldiv@a+3)^0,w,c
  2308  000E52  5A29               	subwfb	(___fldiv@rem+3)^0,f,c
  2309  000E54                     l2050:
  2310  000E54  2A32               	incf	___fldiv@aexp^0,f,c
  2311  000E56                     l731:
  2312  000E56  0E19               	movlw	25
  2313  000E58  6432               	cpfsgt	___fldiv@aexp^0,c
  2314  000E5A  D7D7               	goto	l2036
  2315  000E5C  5026               	movf	___fldiv@rem^0,w,c
  2316  000E5E  1027               	iorwf	(___fldiv@rem+1)^0,w,c
  2317  000E60  1028               	iorwf	(___fldiv@rem+2)^0,w,c
  2318  000E62  1029               	iorwf	(___fldiv@rem+3)^0,w,c
  2319  000E64  E011               	bz	l2062
  2320  000E66  802D               	bsf	___fldiv@grs^0,0,c
  2321  000E68  D00F               	goto	l2062
  2322  000E6A                     l2056:
  2323  000E6A  90D8               	bcf	status,0,c
  2324  000E6C  361A               	rlcf	___fldiv@b^0,f,c
  2325  000E6E  361B               	rlcf	(___fldiv@b+1)^0,f,c
  2326  000E70  361C               	rlcf	(___fldiv@b+2)^0,f,c
  2327  000E72  361D               	rlcf	(___fldiv@b+3)^0,f,c
  2328  000E74  BE30               	btfsc	(___fldiv@grs+3)^0,7,c
  2329  000E76  801A               	bsf	___fldiv@b^0,0,c
  2330  000E78  90D8               	bcf	status,0,c
  2331  000E7A  362D               	rlcf	___fldiv@grs^0,f,c
  2332  000E7C  362E               	rlcf	(___fldiv@grs+1)^0,f,c
  2333  000E7E  362F               	rlcf	(___fldiv@grs+2)^0,f,c
  2334  000E80  3630               	rlcf	(___fldiv@grs+3)^0,f,c
  2335  000E82  062B               	decf	___fldiv@new_exp^0,f,c
  2336  000E84  A0D8               	btfss	status,0,c
  2337  000E86  062C               	decf	(___fldiv@new_exp+1)^0,f,c
  2338  000E88                     l2062:
  2339  000E88  AE1C               	btfss	(___fldiv@b+2)^0,7,c
  2340  000E8A  D7EF               	goto	l2056
  2341  000E8C  6A32               	clrf	___fldiv@aexp^0,c
  2342  000E8E  AE30               	btfss	(___fldiv@grs+3)^0,7,c
  2343  000E90  D013               	goto	l742
  2344  000E92  502D               	movf	___fldiv@grs^0,w,c
  2345  000E94  6E22               	movwf	??___fldiv^0,c
  2346  000E96  502E               	movf	(___fldiv@grs+1)^0,w,c
  2347  000E98  6E23               	movwf	(??___fldiv+1)^0,c
  2348  000E9A  502F               	movf	(___fldiv@grs+2)^0,w,c
  2349  000E9C  6E24               	movwf	(??___fldiv+2)^0,c
  2350  000E9E  0E7F               	movlw	127
  2351  000EA0  1430               	andwf	(___fldiv@grs+3)^0,w,c
  2352  000EA2  6E25               	movwf	(??___fldiv+3)^0,c
  2353  000EA4  5022               	movf	??___fldiv^0,w,c
  2354  000EA6  1023               	iorwf	(??___fldiv+1)^0,w,c
  2355  000EA8  1024               	iorwf	(??___fldiv+2)^0,w,c
  2356  000EAA  1025               	iorwf	(??___fldiv+3)^0,w,c
  2357  000EAC  E003               	bz	l743
  2358  000EAE                     u1800:
  2359  000EAE  0E01               	movlw	1
  2360  000EB0  6E32               	movwf	___fldiv@aexp^0,c
  2361  000EB2  D002               	goto	l742
  2362  000EB4                     l743:
  2363  000EB4  B01A               	btfsc	___fldiv@b^0,0,c
  2364  000EB6  D7FB               	goto	u1800
  2365  000EB8                     l742:
  2366  000EB8  5032               	movf	___fldiv@aexp^0,w,c
  2367  000EBA  E00E               	bz	l2078
  2368  000EBC  2A1A               	incf	___fldiv@b^0,f,c
  2369  000EBE  0E00               	movlw	0
  2370  000EC0  221B               	addwfc	(___fldiv@b+1)^0,f,c
  2371  000EC2  221C               	addwfc	(___fldiv@b+2)^0,f,c
  2372  000EC4  221D               	addwfc	(___fldiv@b+3)^0,f,c
  2373  000EC6  A01D               	btfss	(___fldiv@b+3)^0,0,c
  2374  000EC8  D007               	goto	l2078
  2375  000ECA  341D               	rlcf	(___fldiv@b+3)^0,w,c
  2376  000ECC  321D               	rrcf	(___fldiv@b+3)^0,f,c
  2377  000ECE  321C               	rrcf	(___fldiv@b+2)^0,f,c
  2378  000ED0  321B               	rrcf	(___fldiv@b+1)^0,f,c
  2379  000ED2  321A               	rrcf	___fldiv@b^0,f,c
  2380  000ED4  4A2B               	infsnz	___fldiv@new_exp^0,f,c
  2381  000ED6  2A2C               	incf	(___fldiv@new_exp+1)^0,f,c
  2382  000ED8                     l2078:
  2383  000ED8  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2384  000EDA  D00A               	goto	l2084
  2385  000EDC  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  2386  000EDE  E102               	bnz	u1840
  2387  000EE0  282B               	incf	___fldiv@new_exp^0,w,c
  2388  000EE2  E306               	bnc	l2084
  2389  000EE4                     u1840:
  2390  000EE4  6A2C               	clrf	(___fldiv@new_exp+1)^0,c
  2391  000EE6  682B               	setf	___fldiv@new_exp^0,c
  2392  000EE8  6A1A               	clrf	___fldiv@b^0,c
  2393  000EEA  6A1B               	clrf	(___fldiv@b+1)^0,c
  2394  000EEC  6A1C               	clrf	(___fldiv@b+2)^0,c
  2395  000EEE  6A1D               	clrf	(___fldiv@b+3)^0,c
  2396  000EF0                     l2084:
  2397  000EF0  BE2C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  2398  000EF2  D004               	goto	u1850
  2399  000EF4  502C               	movf	(___fldiv@new_exp+1)^0,w,c
  2400  000EF6  E109               	bnz	l749
  2401  000EF8  042B               	decf	___fldiv@new_exp^0,w,c
  2402  000EFA  E207               	bc	l749
  2403  000EFC                     u1850:
  2404  000EFC  6A2B               	clrf	___fldiv@new_exp^0,c
  2405  000EFE  6A2C               	clrf	(___fldiv@new_exp+1)^0,c
  2406  000F00  6A1A               	clrf	___fldiv@b^0,c
  2407  000F02  6A1B               	clrf	(___fldiv@b+1)^0,c
  2408  000F04  6A1C               	clrf	(___fldiv@b+2)^0,c
  2409  000F06  6A1D               	clrf	(___fldiv@b+3)^0,c
  2410  000F08  6A2A               	clrf	___fldiv@sign^0,c
  2411  000F0A                     l749:
  2412  000F0A  C02B  F031         	movff	___fldiv@new_exp,___fldiv@bexp
  2413  000F0E  A031               	btfss	___fldiv@bexp^0,0,c
  2414  000F10  D002               	goto	l2090
  2415  000F12  8E1C               	bsf	(___fldiv@b+2)^0,7,c
  2416  000F14  D001               	goto	l2092
  2417  000F16                     l2090:
  2418  000F16  9E1C               	bcf	(___fldiv@b+2)^0,7,c
  2419  000F18                     l2092:
  2420  000F18  90D8               	bcf	status,0,c
  2421  000F1A  3031               	rrcf	___fldiv@bexp^0,w,c
  2422  000F1C  6E1D               	movwf	(___fldiv@b+3)^0,c
  2423  000F1E  D744               	goto	L4
  2424  000F20                     __end_of___fldiv:
  2425                           	callstack 0
  2426                           
  2427 ;; *************** function ___fladd *****************
  2428 ;; Defined at:
  2429 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  b               4   50[COMRAM] unsigned char 
  2432 ;;  a               4   54[COMRAM] unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  grs             1   65[COMRAM] unsigned char 
  2435 ;;  bexp            1   64[COMRAM] unsigned char 
  2436 ;;  aexp            1   63[COMRAM] unsigned char 
  2437 ;;  signs           1   62[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  4   50[COMRAM] unsigned char 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2447 ;;      Params:         8       0       0       0       0       0       0       0       0
  2448 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2449 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2450 ;;      Totals:        16       0       0       0       0       0       0       0       0
  2451 ;;Total ram usage:       16 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_main
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text15
  2461  000ABC                     __ptext15:
  2462                           	callstack 0
  2463  000ABC                     ___fladd:
  2464                           	callstack 30
  2465                           
  2466                           ;incstack = 0
  2467  000ABC  5036               	movf	(___fladd@b+3)^0,w,c
  2468  000ABE  0B80               	andlw	128
  2469  000AC0  6E3F               	movwf	___fladd@signs^0,c
  2470  000AC2  5036               	movf	(___fladd@b+3)^0,w,c
  2471  000AC4  2436               	addwf	(___fladd@b+3)^0,w,c
  2472  000AC6  6E41               	movwf	___fladd@bexp^0,c
  2473  000AC8  BE35               	btfsc	(___fladd@b+2)^0,7,c
  2474  000ACA  8041               	bsf	___fladd@bexp^0,0,c
  2475  000ACC  5041               	movf	___fladd@bexp^0,w,c
  2476  000ACE  E008               	bz	l664
  2477  000AD0  2841               	incf	___fladd@bexp^0,w,c
  2478  000AD2  E104               	bnz	l1808
  2479  000AD4  6A33               	clrf	___fladd@b^0,c
  2480  000AD6  6A34               	clrf	(___fladd@b+1)^0,c
  2481  000AD8  6A35               	clrf	(___fladd@b+2)^0,c
  2482  000ADA  6A36               	clrf	(___fladd@b+3)^0,c
  2483  000ADC                     l1808:
  2484  000ADC  8E35               	bsf	(___fladd@b+2)^0,7,c
  2485  000ADE  D003               	goto	L5
  2486  000AE0                     l664:
  2487  000AE0  6A33               	clrf	___fladd@b^0,c
  2488  000AE2  6A34               	clrf	(___fladd@b+1)^0,c
  2489  000AE4  6A35               	clrf	(___fladd@b+2)^0,c
  2490  000AE6                     L5:
  2491  000AE6  6A36               	clrf	(___fladd@b+3)^0,c
  2492  000AE8  503A               	movf	(___fladd@a+3)^0,w,c
  2493  000AEA  0B80               	andlw	128
  2494  000AEC  6E40               	movwf	___fladd@aexp^0,c
  2495  000AEE  183F               	xorwf	___fladd@signs^0,w,c
  2496  000AF0  E001               	bz	l1816
  2497  000AF2  8C3F               	bsf	___fladd@signs^0,6,c
  2498  000AF4                     l1816:
  2499  000AF4  503A               	movf	(___fladd@a+3)^0,w,c
  2500  000AF6  243A               	addwf	(___fladd@a+3)^0,w,c
  2501  000AF8  6E40               	movwf	___fladd@aexp^0,c
  2502  000AFA  BE39               	btfsc	(___fladd@a+2)^0,7,c
  2503  000AFC  8040               	bsf	___fladd@aexp^0,0,c
  2504  000AFE  5040               	movf	___fladd@aexp^0,w,c
  2505  000B00  E008               	bz	l669
  2506  000B02  2840               	incf	___fladd@aexp^0,w,c
  2507  000B04  E104               	bnz	l1828
  2508  000B06  6A37               	clrf	___fladd@a^0,c
  2509  000B08  6A38               	clrf	(___fladd@a+1)^0,c
  2510  000B0A  6A39               	clrf	(___fladd@a+2)^0,c
  2511  000B0C  6A3A               	clrf	(___fladd@a+3)^0,c
  2512  000B0E                     l1828:
  2513  000B0E  8E39               	bsf	(___fladd@a+2)^0,7,c
  2514  000B10  D003               	goto	L6
  2515  000B12                     l669:
  2516  000B12  6A37               	clrf	___fladd@a^0,c
  2517  000B14  6A38               	clrf	(___fladd@a+1)^0,c
  2518  000B16  6A39               	clrf	(___fladd@a+2)^0,c
  2519  000B18                     L6:
  2520  000B18  6A3A               	clrf	(___fladd@a+3)^0,c
  2521  000B1A  5041               	movf	___fladd@bexp^0,w,c
  2522  000B1C  5C40               	subwf	___fladd@aexp^0,w,c
  2523  000B1E  E222               	bc	l1868
  2524  000B20  AC3F               	btfss	___fladd@signs^0,6,c
  2525  000B22  D002               	goto	l1838
  2526  000B24  0E80               	movlw	128
  2527  000B26  1A3F               	xorwf	___fladd@signs^0,f,c
  2528  000B28                     l1838:
  2529  000B28  C041  F042         	movff	___fladd@bexp,___fladd@grs
  2530  000B2C  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  2531  000B30  C042  F040         	movff	___fladd@grs,___fladd@aexp
  2532  000B34  C033  F042         	movff	___fladd@b,___fladd@grs
  2533  000B38  C037  F033         	movff	___fladd@a,___fladd@b
  2534  000B3C  C042  F037         	movff	___fladd@grs,___fladd@a
  2535  000B40  C034  F042         	movff	___fladd@b+1,___fladd@grs
  2536  000B44  C038  F034         	movff	___fladd@a+1,___fladd@b+1
  2537  000B48  C042  F038         	movff	___fladd@grs,___fladd@a+1
  2538  000B4C  C035  F042         	movff	___fladd@b+2,___fladd@grs
  2539  000B50  C039  F035         	movff	___fladd@a+2,___fladd@b+2
  2540  000B54  C042  F039         	movff	___fladd@grs,___fladd@a+2
  2541  000B58  C036  F042         	movff	___fladd@b+3,___fladd@grs
  2542  000B5C  C03A  F036         	movff	___fladd@a+3,___fladd@b+3
  2543  000B60  C042  F03A         	movff	___fladd@grs,___fladd@a+3
  2544  000B64                     l1868:
  2545  000B64  6A42               	clrf	___fladd@grs^0,c
  2546  000B66  5041               	movf	___fladd@bexp^0,w,c
  2547  000B68  C040  F03B         	movff	___fladd@aexp,??___fladd
  2548  000B6C  6A3C               	clrf	(??___fladd+1)^0,c
  2549  000B6E  5E3B               	subwf	??___fladd^0,f,c
  2550  000B70  0E00               	movlw	0
  2551  000B72  5A3C               	subwfb	(??___fladd+1)^0,f,c
  2552  000B74  BE3C               	btfsc	(??___fladd+1)^0,7,c
  2553  000B76  D025               	goto	l676
  2554  000B78  503C               	movf	(??___fladd+1)^0,w,c
  2555  000B7A  E103               	bnz	u1340
  2556  000B7C  0E1A               	movlw	26
  2557  000B7E  5C3B               	subwf	??___fladd^0,w,c
  2558  000B80  E320               	bnc	l676
  2559  000B82                     u1340:
  2560  000B82  5033               	movf	___fladd@b^0,w,c
  2561  000B84  1034               	iorwf	(___fladd@b+1)^0,w,c
  2562  000B86  1035               	iorwf	(___fladd@b+2)^0,w,c
  2563  000B88  1036               	iorwf	(___fladd@b+3)^0,w,c
  2564  000B8A  0E01               	movlw	1
  2565  000B8C  B4D8               	btfsc	status,2,c
  2566  000B8E  0E00               	movlw	0
  2567  000B90  6E42               	movwf	___fladd@grs^0,c
  2568  000B92  6A33               	clrf	___fladd@b^0,c
  2569  000B94  6A34               	clrf	(___fladd@b+1)^0,c
  2570  000B96  6A35               	clrf	(___fladd@b+2)^0,c
  2571  000B98  6A36               	clrf	(___fladd@b+3)^0,c
  2572  000B9A  C040  F041         	movff	___fladd@aexp,___fladd@bexp
  2573  000B9E  D014               	goto	u1390
  2574  000BA0                     l677:
  2575  000BA0  A042               	btfss	___fladd@grs^0,0,c
  2576  000BA2  D005               	goto	l1878
  2577  000BA4  90D8               	bcf	status,0,c
  2578  000BA6  3042               	rrcf	___fladd@grs^0,w,c
  2579  000BA8  0901               	iorlw	1
  2580  000BAA  6E42               	movwf	___fladd@grs^0,c
  2581  000BAC  D002               	goto	l1880
  2582  000BAE                     l1878:
  2583  000BAE  90D8               	bcf	status,0,c
  2584  000BB0  3242               	rrcf	___fladd@grs^0,f,c
  2585  000BB2                     l1880:
  2586  000BB2  B033               	btfsc	___fladd@b^0,0,c
  2587  000BB4  8E42               	bsf	___fladd@grs^0,7,c
  2588  000BB6  3436               	rlcf	(___fladd@b+3)^0,w,c
  2589  000BB8  3236               	rrcf	(___fladd@b+3)^0,f,c
  2590  000BBA  3235               	rrcf	(___fladd@b+2)^0,f,c
  2591  000BBC  3234               	rrcf	(___fladd@b+1)^0,f,c
  2592  000BBE  3233               	rrcf	___fladd@b^0,f,c
  2593  000BC0  2A41               	incf	___fladd@bexp^0,f,c
  2594  000BC2                     l676:
  2595  000BC2  5040               	movf	___fladd@aexp^0,w,c
  2596  000BC4  5C41               	subwf	___fladd@bexp^0,w,c
  2597  000BC6  E3EC               	bnc	l677
  2598  000BC8                     u1390:
  2599  000BC8  BC3F               	btfsc	___fladd@signs^0,6,c
  2600  000BCA  D023               	goto	l1910
  2601  000BCC  5041               	movf	___fladd@bexp^0,w,c
  2602  000BCE  E105               	bnz	l1892
  2603  000BD0  6A33               	clrf	?___fladd^0,c
  2604  000BD2  6A34               	clrf	(?___fladd+1)^0,c
  2605  000BD4  6A35               	clrf	(?___fladd+2)^0,c
  2606  000BD6  6A36               	clrf	(?___fladd+3)^0,c
  2607  000BD8  0012               	return	
  2608  000BDA                     l1892:
  2609  000BDA  5037               	movf	___fladd@a^0,w,c
  2610  000BDC  2633               	addwf	___fladd@b^0,f,c
  2611  000BDE  5038               	movf	(___fladd@a+1)^0,w,c
  2612  000BE0  2234               	addwfc	(___fladd@b+1)^0,f,c
  2613  000BE2  5039               	movf	(___fladd@a+2)^0,w,c
  2614  000BE4  2235               	addwfc	(___fladd@b+2)^0,f,c
  2615  000BE6  503A               	movf	(___fladd@a+3)^0,w,c
  2616  000BE8  2236               	addwfc	(___fladd@b+3)^0,f,c
  2617  000BEA  A036               	btfss	(___fladd@b+3)^0,0,c
  2618  000BEC  D068               	goto	u1520
  2619  000BEE  A042               	btfss	___fladd@grs^0,0,c
  2620  000BF0  D005               	goto	l1900
  2621  000BF2  90D8               	bcf	status,0,c
  2622  000BF4  3042               	rrcf	___fladd@grs^0,w,c
  2623  000BF6  0901               	iorlw	1
  2624  000BF8  6E42               	movwf	___fladd@grs^0,c
  2625  000BFA  D002               	goto	l1902
  2626  000BFC                     l1900:
  2627  000BFC  90D8               	bcf	status,0,c
  2628  000BFE  3242               	rrcf	___fladd@grs^0,f,c
  2629  000C00                     l1902:
  2630  000C00  B033               	btfsc	___fladd@b^0,0,c
  2631  000C02  8E42               	bsf	___fladd@grs^0,7,c
  2632  000C04  3436               	rlcf	(___fladd@b+3)^0,w,c
  2633  000C06  3236               	rrcf	(___fladd@b+3)^0,f,c
  2634  000C08  3235               	rrcf	(___fladd@b+2)^0,f,c
  2635  000C0A  3234               	rrcf	(___fladd@b+1)^0,f,c
  2636  000C0C  3233               	rrcf	___fladd@b^0,f,c
  2637  000C0E  2A41               	incf	___fladd@bexp^0,f,c
  2638  000C10  D056               	goto	u1520
  2639  000C12                     l1910:
  2640  000C12  5037               	movf	___fladd@a^0,w,c
  2641  000C14  5C33               	subwf	___fladd@b^0,w,c
  2642  000C16  5038               	movf	(___fladd@a+1)^0,w,c
  2643  000C18  5834               	subwfb	(___fladd@b+1)^0,w,c
  2644  000C1A  5039               	movf	(___fladd@a+2)^0,w,c
  2645  000C1C  5835               	subwfb	(___fladd@b+2)^0,w,c
  2646  000C1E  5036               	movf	(___fladd@b+3)^0,w,c
  2647  000C20  0A80               	xorlw	128
  2648  000C22  6E3B               	movwf	??___fladd^0,c
  2649  000C24  503A               	movf	(___fladd@a+3)^0,w,c
  2650  000C26  0A80               	xorlw	128
  2651  000C28  583B               	subwfb	??___fladd^0,w,c
  2652  000C2A  E223               	bc	l1920
  2653  000C2C  5033               	movf	___fladd@b^0,w,c
  2654  000C2E  5C37               	subwf	___fladd@a^0,w,c
  2655  000C30  6E3B               	movwf	??___fladd^0,c
  2656  000C32  5034               	movf	(___fladd@b+1)^0,w,c
  2657  000C34  5838               	subwfb	(___fladd@a+1)^0,w,c
  2658  000C36  6E3C               	movwf	(??___fladd+1)^0,c
  2659  000C38  5035               	movf	(___fladd@b+2)^0,w,c
  2660  000C3A  5839               	subwfb	(___fladd@a+2)^0,w,c
  2661  000C3C  6E3D               	movwf	(??___fladd+2)^0,c
  2662  000C3E  5036               	movf	(___fladd@b+3)^0,w,c
  2663  000C40  583A               	subwfb	(___fladd@a+3)^0,w,c
  2664  000C42  6E3E               	movwf	(??___fladd+3)^0,c
  2665  000C44  0EFF               	movlw	255
  2666  000C46  243B               	addwf	??___fladd^0,w,c
  2667  000C48  6E33               	movwf	___fladd@b^0,c
  2668  000C4A  0EFF               	movlw	255
  2669  000C4C  203C               	addwfc	(??___fladd+1)^0,w,c
  2670  000C4E  6E34               	movwf	(___fladd@b+1)^0,c
  2671  000C50  0EFF               	movlw	255
  2672  000C52  203D               	addwfc	(??___fladd+2)^0,w,c
  2673  000C54  6E35               	movwf	(___fladd@b+2)^0,c
  2674  000C56  0EFF               	movlw	255
  2675  000C58  203E               	addwfc	(??___fladd+3)^0,w,c
  2676  000C5A  6E36               	movwf	(___fladd@b+3)^0,c
  2677  000C5C  0E80               	movlw	128
  2678  000C5E  1A3F               	xorwf	___fladd@signs^0,f,c
  2679  000C60  6C42               	negf	___fladd@grs^0,c
  2680  000C62  5042               	movf	___fladd@grs^0,w,c
  2681  000C64  E10E               	bnz	l692
  2682  000C66  2A33               	incf	___fladd@b^0,f,c
  2683  000C68  0E00               	movlw	0
  2684  000C6A  2234               	addwfc	(___fladd@b+1)^0,f,c
  2685  000C6C  2235               	addwfc	(___fladd@b+2)^0,f,c
  2686  000C6E  2236               	addwfc	(___fladd@b+3)^0,f,c
  2687  000C70  D008               	goto	l692
  2688  000C72                     l1920:
  2689  000C72  5037               	movf	___fladd@a^0,w,c
  2690  000C74  5E33               	subwf	___fladd@b^0,f,c
  2691  000C76  5038               	movf	(___fladd@a+1)^0,w,c
  2692  000C78  5A34               	subwfb	(___fladd@b+1)^0,f,c
  2693  000C7A  5039               	movf	(___fladd@a+2)^0,w,c
  2694  000C7C  5A35               	subwfb	(___fladd@b+2)^0,f,c
  2695  000C7E  503A               	movf	(___fladd@a+3)^0,w,c
  2696  000C80  5A36               	subwfb	(___fladd@b+3)^0,f,c
  2697  000C82                     l692:
  2698  000C82  5033               	movf	___fladd@b^0,w,c
  2699  000C84  1034               	iorwf	(___fladd@b+1)^0,w,c
  2700  000C86  1035               	iorwf	(___fladd@b+2)^0,w,c
  2701  000C88  1036               	iorwf	(___fladd@b+3)^0,w,c
  2702  000C8A  E117               	bnz	l1942
  2703  000C8C  5042               	movf	___fladd@grs^0,w,c
  2704  000C8E  E115               	bnz	l1942
  2705  000C90  6A33               	clrf	?___fladd^0,c
  2706  000C92  6A34               	clrf	(?___fladd+1)^0,c
  2707  000C94  6A35               	clrf	(?___fladd+2)^0,c
  2708  000C96  6A36               	clrf	(?___fladd+3)^0,c
  2709  000C98  0012               	return	
  2710  000C9A                     l1926:
  2711  000C9A  90D8               	bcf	status,0,c
  2712  000C9C  3633               	rlcf	___fladd@b^0,f,c
  2713  000C9E  3634               	rlcf	(___fladd@b+1)^0,f,c
  2714  000CA0  3635               	rlcf	(___fladd@b+2)^0,f,c
  2715  000CA2  3636               	rlcf	(___fladd@b+3)^0,f,c
  2716  000CA4  BE42               	btfsc	___fladd@grs^0,7,c
  2717  000CA6  8033               	bsf	___fladd@b^0,0,c
  2718  000CA8  A042               	btfss	___fladd@grs^0,0,c
  2719  000CAA  D002               	goto	l1936
  2720  000CAC  80D8               	bsf	status,0,c
  2721  000CAE  D001               	goto	L7
  2722  000CB0                     l1936:
  2723  000CB0  90D8               	bcf	status,0,c
  2724  000CB2                     L7:
  2725  000CB2  3642               	rlcf	___fladd@grs^0,f,c
  2726  000CB4  5041               	movf	___fladd@bexp^0,w,c
  2727  000CB6  E001               	bz	l1942
  2728  000CB8  0641               	decf	___fladd@bexp^0,f,c
  2729  000CBA                     l1942:
  2730  000CBA  AE35               	btfss	(___fladd@b+2)^0,7,c
  2731  000CBC  D7EE               	goto	l1926
  2732  000CBE                     u1520:
  2733  000CBE  6A40               	clrf	___fladd@aexp^0,c
  2734  000CC0  AE42               	btfss	___fladd@grs^0,7,c
  2735  000CC2  D00A               	goto	l701
  2736  000CC4  C042  F03B         	movff	___fladd@grs,??___fladd
  2737  000CC8  0E7F               	movlw	127
  2738  000CCA  163B               	andwf	??___fladd^0,f,c
  2739  000CCC  E003               	bz	l702
  2740  000CCE                     u1540:
  2741  000CCE  0E01               	movlw	1
  2742  000CD0  6E40               	movwf	___fladd@aexp^0,c
  2743  000CD2  D002               	goto	l701
  2744  000CD4                     l702:
  2745  000CD4  B033               	btfsc	___fladd@b^0,0,c
  2746  000CD6  D7FB               	goto	u1540
  2747  000CD8                     l701:
  2748  000CD8  5040               	movf	___fladd@aexp^0,w,c
  2749  000CDA  E00F               	bz	l1958
  2750  000CDC  2A33               	incf	___fladd@b^0,f,c
  2751  000CDE  0E00               	movlw	0
  2752  000CE0  2234               	addwfc	(___fladd@b+1)^0,f,c
  2753  000CE2  2235               	addwfc	(___fladd@b+2)^0,f,c
  2754  000CE4  2236               	addwfc	(___fladd@b+3)^0,f,c
  2755  000CE6  A036               	btfss	(___fladd@b+3)^0,0,c
  2756  000CE8  D008               	goto	l1958
  2757  000CEA  3436               	rlcf	(___fladd@b+3)^0,w,c
  2758  000CEC  3236               	rrcf	(___fladd@b+3)^0,f,c
  2759  000CEE  3235               	rrcf	(___fladd@b+2)^0,f,c
  2760  000CF0  3234               	rrcf	(___fladd@b+1)^0,f,c
  2761  000CF2  3233               	rrcf	___fladd@b^0,f,c
  2762  000CF4  2841               	incf	___fladd@bexp^0,w,c
  2763  000CF6  E001               	bz	l1958
  2764  000CF8  2A41               	incf	___fladd@bexp^0,f,c
  2765  000CFA                     l1958:
  2766  000CFA  2841               	incf	___fladd@bexp^0,w,c
  2767  000CFC  E002               	bz	u1600
  2768  000CFE  5041               	movf	___fladd@bexp^0,w,c
  2769  000D00  E107               	bnz	l708
  2770  000D02                     u1600:
  2771  000D02  6A33               	clrf	___fladd@b^0,c
  2772  000D04  6A34               	clrf	(___fladd@b+1)^0,c
  2773  000D06  6A35               	clrf	(___fladd@b+2)^0,c
  2774  000D08  6A36               	clrf	(___fladd@b+3)^0,c
  2775  000D0A  5041               	movf	___fladd@bexp^0,w,c
  2776  000D0C  E101               	bnz	l708
  2777  000D0E  6A3F               	clrf	___fladd@signs^0,c
  2778  000D10                     l708:
  2779  000D10  A041               	btfss	___fladd@bexp^0,0,c
  2780  000D12  D002               	goto	l1968
  2781  000D14  8E35               	bsf	(___fladd@b+2)^0,7,c
  2782  000D16  D001               	goto	l1970
  2783  000D18                     l1968:
  2784  000D18  9E35               	bcf	(___fladd@b+2)^0,7,c
  2785  000D1A                     l1970:
  2786  000D1A  90D8               	bcf	status,0,c
  2787  000D1C  3041               	rrcf	___fladd@bexp^0,w,c
  2788  000D1E  6E36               	movwf	(___fladd@b+3)^0,c
  2789  000D20  BE3F               	btfsc	___fladd@signs^0,7,c
  2790  000D22  8E36               	bsf	(___fladd@b+3)^0,7,c
  2791  000D24  C033  F033         	movff	___fladd@b,?___fladd
  2792  000D28  C034  F034         	movff	___fladd@b+1,?___fladd+1
  2793  000D2C  C035  F035         	movff	___fladd@b+2,?___fladd+2
  2794  000D30  C036  F036         	movff	___fladd@b+3,?___fladd+3
  2795  000D34  0012               	return		;funcret
  2796  000D36                     __end_of___fladd:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _POS_CURSOR *****************
  2800 ;; Defined at:
  2801 ;;		line 6 in file "LCD.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  fila            1    wreg     unsigned char 
  2804 ;;  columna         1    3[COMRAM] unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  fila            1    4[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2816 ;;      Params:         1       0       0       0       0       0       0       0       0
  2817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2819 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		_ENVIA_LCD_CMD
  2825 ;; This function is called by:
  2826 ;;		_main
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text16
  2831  0015B2                     __ptext16:
  2832                           	callstack 0
  2833  0015B2                     _POS_CURSOR:
  2834                           	callstack 28
  2835                           
  2836                           ;incstack = 0
  2837                           ;POS_CURSOR@fila stored from wreg
  2838  0015B2  6E05               	movwf	POS_CURSOR@fila^0,c
  2839                           
  2840                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2841  0015B4  0405               	decf	POS_CURSOR@fila^0,w,c
  2842  0015B6  E104               	bnz	l1784
  2843                           
  2844                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2845  0015B8  5004               	movf	POS_CURSOR@columna^0,w,c
  2846  0015BA  0F80               	addlw	128
  2847  0015BC  EF83  F00A         	goto	_ENVIA_LCD_CMD
  2848  0015C0                     l1784:
  2849  0015C0  0E02               	movlw	2
  2850  0015C2  1805               	xorwf	POS_CURSOR@fila^0,w,c
  2851  0015C4  A4D8               	btfss	status,2,c
  2852  0015C6  0012               	return	
  2853                           
  2854                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2855  0015C8  5004               	movf	POS_CURSOR@columna^0,w,c
  2856  0015CA  0FC0               	addlw	192
  2857  0015CC  EF83  F00A         	goto	_ENVIA_LCD_CMD
  2858  0015D0                     __end_of_POS_CURSOR:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _ENVIA_LCD_CMD *****************
  2862 ;; Defined at:
  2863 ;;		line 104 in file "LCD.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  dato            1    wreg     unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  dato            1    1[COMRAM] unsigned char 
  2868 ;;  aux             1    2[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0
  2879 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2881 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2882 ;;Total ram usage:        2 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 1
  2885 ;; This function calls:
  2886 ;;		_ENVIA_NIBBLE
  2887 ;;		_LEER_LCD
  2888 ;; This function is called by:
  2889 ;;		_POS_CURSOR
  2890 ;;		_CURSOR_HOME
  2891 ;;		_CURSOR_ONOFF
  2892 ;;		_BORRAR_LCD
  2893 ;;		_LCD_CONFIG
  2894 ;;		_GENERACARACTER
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text17
  2899  001506                     __ptext17:
  2900                           	callstack 0
  2901  001506                     _ENVIA_LCD_CMD:
  2902                           	callstack 27
  2903                           
  2904                           ;incstack = 0
  2905                           ;ENVIA_LCD_CMD@dato stored from wreg
  2906  001506  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2907                           
  2908                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2909  001508  908C               	bcf	140,0,c	;volatile
  2910                           
  2911                           ;LCD.c: 108:  LEER_LCD();
  2912  00150A  ECBB  F009         	call	_LEER_LCD	;wreg free
  2913                           
  2914                           ;LCD.c: 109:  TRISD = 0b00000000;
  2915  00150E  6A95               	clrf	149,c	;volatile
  2916                           
  2917                           ;LCD.c: 111:         _delay(1200);
  2918  001510  0EF0               	movlw	240
  2919  001512                     u2287:
  2920  001512  D000               	nop2	
  2921  001514  2EE8               	decfsz	wreg,f,c
  2922  001516  D7FD               	bra	u2287
  2923                           
  2924                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2925  001518  928C               	bcf	140,1,c	;volatile
  2926                           
  2927                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2928  00151A  948C               	bcf	140,2,c	;volatile
  2929                           
  2930                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2931  00151C  908C               	bcf	140,0,c	;volatile
  2932                           
  2933                           ;LCD.c: 115:  aux = dato & 0xF0;
  2934  00151E  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2935  001520  0BF0               	andlw	240
  2936  001522  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2937                           
  2938                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2939  001524  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2940  001526  ECE8  F00A         	call	_ENVIA_NIBBLE
  2941                           
  2942                           ;LCD.c: 117:  aux = dato<<4;
  2943  00152A  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2944  00152C  0BF0               	andlw	240
  2945  00152E  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2946                           
  2947                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2948  001530  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2949  001532  EFE8  F00A         	goto	_ENVIA_NIBBLE
  2950  001536                     __end_of_ENVIA_LCD_CMD:
  2951                           	callstack 0
  2952                           
  2953 ;; *************** function _ESCRIBE_MENSAJE *****************
  2954 ;; Defined at:
  2955 ;;		line 41 in file "LCD.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2958 ;;		 -> STR_5(2), STR_4(3), STR_3(4), STR_2(7), 
  2959 ;;		 -> STR_1(5), 
  2960 ;;  tam             1    4[COMRAM] unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  i               1    6[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2972 ;;      Params:         2       0       0       0       0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2974 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2975 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 2
  2979 ;; This function calls:
  2980 ;;		_ENVIA_CHAR
  2981 ;; This function is called by:
  2982 ;;		_main
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986                           	psect	text18
  2987  001590                     __ptext18:
  2988                           	callstack 0
  2989  001590                     _ESCRIBE_MENSAJE:
  2990                           	callstack 28
  2991                           
  2992                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2993                           
  2994                           ;incstack = 0
  2995  001590  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  2996                           
  2997                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2998  001592  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  2999  001594  D00A               	goto	l1794
  3000  001596                     l1790:
  3001                           
  3002                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  3003  001596  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
  3004  001598  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
  3005  00159A  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
  3006  00159C  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  3007  0015A0                     	if	0	;There is only one active tblptr byte
  3008  0015A0                     	endif
  3009  0015A0                     	if	0	;tblptru may be non-zero
  3010  0015A0                     	endif
  3011  0015A0                     	if	0	;tblptru may be non-zero
  3012  0015A0                     	endif
  3013  0015A0  0008               	tblrd		*
  3014  0015A2  50F5               	movf	tablat,w,c
  3015  0015A4  EC9B  F00A         	call	_ENVIA_CHAR
  3016                           
  3017                           ;LCD.c: 47:  }
  3018  0015A8  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
  3019  0015AA                     l1794:
  3020  0015AA  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  3021  0015AC  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  3022  0015AE  E3F3               	bnc	l1790
  3023  0015B0  0012               	return		;funcret
  3024  0015B2                     __end_of_ESCRIBE_MENSAJE:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _ENVIA_CHAR *****************
  3028 ;; Defined at:
  3029 ;;		line 50 in file "LCD.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  dato            1    wreg     unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  dato            1    1[COMRAM] unsigned char 
  3034 ;;  aux             1    2[COMRAM] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 1
  3051 ;; This function calls:
  3052 ;;		_ENVIA_NIBBLE
  3053 ;;		_LEER_LCD
  3054 ;; This function is called by:
  3055 ;;		_main
  3056 ;;		_ESCRIBE_MENSAJE
  3057 ;;		_GENERACARACTER
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text19
  3062  001536                     __ptext19:
  3063                           	callstack 0
  3064  001536                     _ENVIA_CHAR:
  3065                           	callstack 27
  3066                           
  3067                           ;incstack = 0
  3068                           ;ENVIA_CHAR@dato stored from wreg
  3069  001536  6E02               	movwf	ENVIA_CHAR@dato^0,c
  3070                           
  3071                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  3072  001538  808C               	bsf	140,0,c	;volatile
  3073                           
  3074                           ;LCD.c: 54:  LEER_LCD();
  3075  00153A  ECBB  F009         	call	_LEER_LCD	;wreg free
  3076                           
  3077                           ;LCD.c: 55:  TRISD = 0x00;
  3078  00153E  6A95               	clrf	149,c	;volatile
  3079                           
  3080                           ;LCD.c: 56:         _delay(1200);
  3081  001540  0EF0               	movlw	240
  3082  001542                     u2297:
  3083  001542  D000               	nop2	
  3084  001544  2EE8               	decfsz	wreg,f,c
  3085  001546  D7FD               	bra	u2297
  3086                           
  3087                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3088  001548  928C               	bcf	140,1,c	;volatile
  3089                           
  3090                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3091  00154A  948C               	bcf	140,2,c	;volatile
  3092                           
  3093                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3094  00154C  808C               	bsf	140,0,c	;volatile
  3095                           
  3096                           ;LCD.c: 61:  aux = dato & 0xF0;
  3097  00154E  5002               	movf	ENVIA_CHAR@dato^0,w,c
  3098  001550  0BF0               	andlw	240
  3099  001552  6E03               	movwf	ENVIA_CHAR@aux^0,c
  3100                           
  3101                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3102  001554  5003               	movf	ENVIA_CHAR@aux^0,w,c
  3103  001556  ECE8  F00A         	call	_ENVIA_NIBBLE
  3104                           
  3105                           ;LCD.c: 63:  aux = dato << 4;
  3106  00155A  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  3107  00155C  0BF0               	andlw	240
  3108  00155E  6E03               	movwf	ENVIA_CHAR@aux^0,c
  3109                           
  3110                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3111  001560  5003               	movf	ENVIA_CHAR@aux^0,w,c
  3112  001562  EFE8  F00A         	goto	_ENVIA_NIBBLE
  3113  001566                     __end_of_ENVIA_CHAR:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _LEER_LCD *****************
  3117 ;; Defined at:
  3118 ;;		line 121 in file "LCD.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  aux             1    0[COMRAM] unsigned char 
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0
  3133 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3135 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3136 ;;Total ram usage:        1 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_ENVIA_CHAR
  3142 ;;		_ENVIA_LCD_CMD
  3143 ;; This function uses a non-reentrant model
  3144 ;;
  3145                           
  3146                           	psect	text20
  3147  001376                     __ptext20:
  3148                           	callstack 0
  3149  001376                     _LEER_LCD:
  3150                           	callstack 27
  3151                           
  3152                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3153                           
  3154                           ;incstack = 0
  3155  001376  0EF8               	movlw	248
  3156  001378  6E95               	movwf	149,c	;volatile
  3157                           
  3158                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3159  00137A  908C               	bcf	140,0,c	;volatile
  3160                           
  3161                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3162  00137C  828C               	bsf	140,1,c	;volatile
  3163                           
  3164                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3165  00137E  848C               	bsf	140,2,c	;volatile
  3166                           
  3167                           ;LCD.c: 128:         _delay(1200);
  3168  001380  0EF0               	movlw	240
  3169  001382                     u2307:
  3170  001382  D000               	nop2	
  3171  001384  2EE8               	decfsz	wreg,f,c
  3172  001386  D7FD               	bra	u2307
  3173                           
  3174                           ;LCD.c: 130:  aux = PORTD;
  3175  001388  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3176                           
  3177                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3178  00138C  948C               	bcf	140,2,c	;volatile
  3179                           
  3180                           ;LCD.c: 132:         _delay(1200);
  3181  00138E  0EF0               	movlw	240
  3182  001390                     u2317:
  3183  001390  D000               	nop2	
  3184  001392  2EE8               	decfsz	wreg,f,c
  3185  001394  D7FD               	bra	u2317
  3186                           
  3187                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3188  001396  848C               	bsf	140,2,c	;volatile
  3189                           
  3190                           ;LCD.c: 135:         _delay(1200);
  3191  001398  0EF0               	movlw	240
  3192  00139A                     u2327:
  3193  00139A  D000               	nop2	
  3194  00139C  2EE8               	decfsz	wreg,f,c
  3195  00139E  D7FD               	bra	u2327
  3196  0013A0                     l1606:
  3197                           
  3198                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3199  0013A0  948C               	bcf	140,2,c	;volatile
  3200                           
  3201                           ;LCD.c: 138:  aux = aux & 0x80;
  3202  0013A2  0E80               	movlw	128
  3203  0013A4  1601               	andwf	LEER_LCD@aux^0,f,c
  3204                           
  3205                           ;LCD.c: 139:  while(aux == 0x80)
  3206  0013A6  D012               	goto	l1622
  3207  0013A8                     l137:
  3208                           
  3209                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3210  0013A8  848C               	bsf	140,2,c	;volatile
  3211                           
  3212                           ;LCD.c: 142:             _delay(1200);
  3213  0013AA  0EF0               	movlw	240
  3214  0013AC                     u2337:
  3215  0013AC  D000               	nop2	
  3216  0013AE  2EE8               	decfsz	wreg,f,c
  3217  0013B0  D7FD               	bra	u2337
  3218                           
  3219                           ;LCD.c: 143:             aux = PORTD;
  3220  0013B2  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3221                           
  3222                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3223  0013B6  948C               	bcf	140,2,c	;volatile
  3224                           
  3225                           ;LCD.c: 145:             _delay(1200);
  3226  0013B8  0EF0               	movlw	240
  3227  0013BA                     u2347:
  3228  0013BA  D000               	nop2	
  3229  0013BC  2EE8               	decfsz	wreg,f,c
  3230  0013BE  D7FD               	bra	u2347
  3231                           
  3232                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3233  0013C0  848C               	bsf	140,2,c	;volatile
  3234                           
  3235                           ;LCD.c: 147:             _delay(1200);
  3236  0013C2  0EF0               	movlw	240
  3237  0013C4                     u2357:
  3238  0013C4  D000               	nop2	
  3239  0013C6  2EE8               	decfsz	wreg,f,c
  3240  0013C8  D7FD               	bra	u2357
  3241  0013CA  D7EA               	goto	l1606
  3242  0013CC                     l1622:
  3243                           
  3244                           ;LCD.c: 139:  while(aux == 0x80)
  3245  0013CC  0E80               	movlw	128
  3246  0013CE  1801               	xorwf	LEER_LCD@aux^0,w,c
  3247  0013D0  E0EB               	bz	l137
  3248  0013D2  0012               	return		;funcret
  3249  0013D4                     __end_of_LEER_LCD:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _ENVIA_NIBBLE *****************
  3253 ;; Defined at:
  3254 ;;		line 93 in file "LCD.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  dato            1    wreg     unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  dato            1    0[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        1 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_ENVIA_CHAR
  3278 ;;		_LCD_CONFIG
  3279 ;;		_ENVIA_LCD_CMD
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text21
  3284  0015D0                     __ptext21:
  3285                           	callstack 0
  3286  0015D0                     _ENVIA_NIBBLE:
  3287                           	callstack 28
  3288                           
  3289                           ;incstack = 0
  3290                           ;ENVIA_NIBBLE@dato stored from wreg
  3291  0015D0  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  3292                           
  3293                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3294  0015D2  0E0F               	movlw	15
  3295  0015D4  168C               	andwf	140,f,c	;volatile
  3296                           
  3297                           ;LCD.c: 96:  dato &= 0xF0;
  3298  0015D6  0EF0               	movlw	240
  3299  0015D8  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  3300                           
  3301                           ;LCD.c: 97:  LATD|= dato;
  3302  0015DA  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  3303  0015DC  128C               	iorwf	140,f,c	;volatile
  3304                           
  3305                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3306  0015DE  848C               	bsf	140,2,c	;volatile
  3307                           
  3308                           ;LCD.c: 100:         _delay(1200);
  3309  0015E0  0EF0               	movlw	240
  3310  0015E2                     u2367:
  3311  0015E2  D000               	nop2	
  3312  0015E4  2EE8               	decfsz	wreg,f,c
  3313  0015E6  D7FD               	bra	u2367
  3314                           
  3315                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3316  0015E8  948C               	bcf	140,2,c	;volatile
  3317  0015EA  0012               	return		;funcret
  3318  0015EC                     __end_of_ENVIA_NIBBLE:
  3319                           	callstack 0
  3320                           
  3321                           	psect	rparam
  3322  0000                     
  3323                           	psect	idloc
  3324                           
  3325                           ;Config register IDLOC0 @ 0x200000
  3326                           ;	unspecified, using default values
  3327  200000                     	org	2097152
  3328  200000  FF                 	db	255
  3329                           
  3330                           ;Config register IDLOC1 @ 0x200001
  3331                           ;	unspecified, using default values
  3332  200001                     	org	2097153
  3333  200001  FF                 	db	255
  3334                           
  3335                           ;Config register IDLOC2 @ 0x200002
  3336                           ;	unspecified, using default values
  3337  200002                     	org	2097154
  3338  200002  FF                 	db	255
  3339                           
  3340                           ;Config register IDLOC3 @ 0x200003
  3341                           ;	unspecified, using default values
  3342  200003                     	org	2097155
  3343  200003  FF                 	db	255
  3344                           
  3345                           ;Config register IDLOC4 @ 0x200004
  3346                           ;	unspecified, using default values
  3347  200004                     	org	2097156
  3348  200004  FF                 	db	255
  3349                           
  3350                           ;Config register IDLOC5 @ 0x200005
  3351                           ;	unspecified, using default values
  3352  200005                     	org	2097157
  3353  200005  FF                 	db	255
  3354                           
  3355                           ;Config register IDLOC6 @ 0x200006
  3356                           ;	unspecified, using default values
  3357  200006                     	org	2097158
  3358  200006  FF                 	db	255
  3359                           
  3360                           ;Config register IDLOC7 @ 0x200007
  3361                           ;	unspecified, using default values
  3362  200007                     	org	2097159
  3363  200007  FF                 	db	255
  3364                           
  3365                           	psect	config
  3366                           
  3367                           ;Config register CONFIG1L @ 0x300000
  3368                           ;	PLL Prescaler Selection bits
  3369                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3370                           ;	System Clock Postscaler Selection bits
  3371                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3372                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3373                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3374  300000                     	org	3145728
  3375  300000  00                 	db	0
  3376                           
  3377                           ;Config register CONFIG1H @ 0x300001
  3378                           ;	Oscillator Selection bits
  3379                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  3380                           ;	Fail-Safe Clock Monitor Enable bit
  3381                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3382                           ;	Internal/External Oscillator Switchover bit
  3383                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3384  300001                     	org	3145729
  3385  300001  02                 	db	2
  3386                           
  3387                           ;Config register CONFIG2L @ 0x300002
  3388                           ;	Power-up Timer Enable bit
  3389                           ;	PWRT = ON, PWRT enabled
  3390                           ;	Brown-out Reset Enable bits
  3391                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3392                           ;	Brown-out Reset Voltage bits
  3393                           ;	BORV = 3, Minimum setting 2.05V
  3394                           ;	USB Voltage Regulator Enable bit
  3395                           ;	VREGEN = OFF, USB voltage regulator disabled
  3396  300002                     	org	3145730
  3397  300002  18                 	db	24
  3398                           
  3399                           ;Config register CONFIG2H @ 0x300003
  3400                           ;	Watchdog Timer Enable bit
  3401                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3402                           ;	Watchdog Timer Postscale Select bits
  3403                           ;	WDTPS = 32768, 1:32768
  3404  300003                     	org	3145731
  3405  300003  1E                 	db	30
  3406                           
  3407                           ; Padding undefined space
  3408  300004                     	org	3145732
  3409  300004  FF                 	db	255
  3410                           
  3411                           ;Config register CONFIG3H @ 0x300005
  3412                           ;	CCP2 MUX bit
  3413                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3414                           ;	PORTB A/D Enable bit
  3415                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3416                           ;	Low-Power Timer 1 Oscillator Enable bit
  3417                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3418                           ;	MCLR Pin Enable bit
  3419                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3420  300005                     	org	3145733
  3421  300005  81                 	db	129
  3422                           
  3423                           ;Config register CONFIG4L @ 0x300006
  3424                           ;	Stack Full/Underflow Reset Enable bit
  3425                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3426                           ;	Single-Supply ICSP Enable bit
  3427                           ;	LVP = OFF, Single-Supply ICSP disabled
  3428                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3429                           ;	ICPRT = OFF, ICPORT disabled
  3430                           ;	Extended Instruction Set Enable bit
  3431                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3432                           ;	Background Debugger Enable bit
  3433                           ;	DEBUG = 0x1, unprogrammed default
  3434  300006                     	org	3145734
  3435  300006  81                 	db	129
  3436                           
  3437                           ; Padding undefined space
  3438  300007                     	org	3145735
  3439  300007  FF                 	db	255
  3440                           
  3441                           ;Config register CONFIG5L @ 0x300008
  3442                           ;	Code Protection bit
  3443                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3444                           ;	Code Protection bit
  3445                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3446                           ;	Code Protection bit
  3447                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3448                           ;	Code Protection bit
  3449                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3450  300008                     	org	3145736
  3451  300008  0F                 	db	15
  3452                           
  3453                           ;Config register CONFIG5H @ 0x300009
  3454                           ;	Boot Block Code Protection bit
  3455                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3456                           ;	Data EEPROM Code Protection bit
  3457                           ;	CPD = OFF, Data EEPROM is not code-protected
  3458  300009                     	org	3145737
  3459  300009  C0                 	db	192
  3460                           
  3461                           ;Config register CONFIG6L @ 0x30000A
  3462                           ;	Write Protection bit
  3463                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3464                           ;	Write Protection bit
  3465                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3466                           ;	Write Protection bit
  3467                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3468                           ;	Write Protection bit
  3469                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3470  30000A                     	org	3145738
  3471  30000A  0F                 	db	15
  3472                           
  3473                           ;Config register CONFIG6H @ 0x30000B
  3474                           ;	Configuration Register Write Protection bit
  3475                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3476                           ;	Boot Block Write Protection bit
  3477                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3478                           ;	Data EEPROM Write Protection bit
  3479                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3480  30000B                     	org	3145739
  3481  30000B  E0                 	db	224
  3482                           
  3483                           ;Config register CONFIG7L @ 0x30000C
  3484                           ;	Table Read Protection bit
  3485                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3486                           ;	Table Read Protection bit
  3487                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3488                           ;	Table Read Protection bit
  3489                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3490                           ;	Table Read Protection bit
  3491                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3492  30000C                     	org	3145740
  3493  30000C  0F                 	db	15
  3494                           
  3495                           ;Config register CONFIG7H @ 0x30000D
  3496                           ;	Boot Block Table Read Protection bit
  3497                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3498  30000D                     	org	3145741
  3499  30000D  40                 	db	64
  3500                           tosu	equ	0xFFF
  3501                           tosh	equ	0xFFE
  3502                           tosl	equ	0xFFD
  3503                           stkptr	equ	0xFFC
  3504                           pclatu	equ	0xFFB
  3505                           pclath	equ	0xFFA
  3506                           pcl	equ	0xFF9
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           indf0	equ	0xFEF
  3514                           postinc0	equ	0xFEE
  3515                           postdec0	equ	0xFED
  3516                           preinc0	equ	0xFEC
  3517                           plusw0	equ	0xFEB
  3518                           fsr0h	equ	0xFEA
  3519                           fsr0l	equ	0xFE9
  3520                           wreg	equ	0xFE8
  3521                           indf1	equ	0xFE7
  3522                           postinc1	equ	0xFE6
  3523                           postdec1	equ	0xFE5
  3524                           preinc1	equ	0xFE4
  3525                           plusw1	equ	0xFE3
  3526                           fsr1h	equ	0xFE2
  3527                           fsr1l	equ	0xFE1
  3528                           bsr	equ	0xFE0
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           postdec2	equ	0xFDD
  3532                           preinc2	equ	0xFDC
  3533                           plusw2	equ	0xFDB
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        16
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     68      92
    BANK0           160      0       8
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(1) Largest target is 8
		 -> thermo(BANK0[8]), o_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[2]), STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[7]), 
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->___fladd
    _lcd_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    ___fldiv->___flmul
    ___fladd->___fldiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10847
                                             66 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_init
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0    1317
                                              6 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     162
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       3     1      2     694
                                              3 COMRAM     3     1      2
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     183
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     139
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     139
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1625
                                             12 COMRAM     2     0      2
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1723
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1529
                                             25 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2366
                                             50 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     379
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     139
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     990
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     139
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      26
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
   ___fldiv
   ___flmul
   ___fltol
   ___xxtofl
   _adc_init
   _convierte
     ___fltol (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       8       5        5.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     44      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      64      20        0.0%
DATA                 0      0      64       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 10:34:31 2021

            ___fldiv@aexp 0032              ___fldiv@bexp 0031              ___fldiv@sign 002A  
                      l65 0F56             ENVIA_CHAR@aux 0003                       l137 13A8  
                     l701 0CD8                       l702 0CD4                       l721 0D5A  
                     l802 1108                       l731 0E56                       l708 0D10  
                     l725 0D86                       l742 0EB8                       l638 14BE  
                     l743 0EB4                       l664 0AE0                       l648 14FC  
                     l809 116C                       l770 0A42                       l771 0A3E  
                     l755 083C                       l692 0C82                       l676 0BC2  
                     l677 0BA0                       l669 0B12                       l749 0F0A  
                     l759 0868                       l778 0A92               LEER_LCD@aux 0001  
                     wreg 000FE8              ?_CURSOR_HOME 0001              ___flmul@aexp 000E  
            ___flmul@bexp 0013              ___flmul@sign 000D              ___flmul@temp 0018  
            ___flmul@prod 0014            ??_ENVIA_NIBBLE 0001              ___fltol@exp1 000A  
          ENVIA_CHAR@dato 0002                      l2022 0DBE                      l2008 0D82  
                    l2200 0A7A                      l2112 0838                      l2050 0E54  
                    l2026 0DCC                      l2114 0844                      l2044 0E30  
                    l2036 0E0A                      l2212 0AA6                      l2132 0882  
                    l2062 0E88                      l2126 0864                      l2222 1290  
                    l2056 0E6A                      l2128 0870                      l2240 12DA  
                    l2090 0F16                      l2314 0F54                      l2092 0F18  
                    l2084 0EF0                      l2180 0A12                      l2252 1306  
                    l2244 12E2                      l2236 12CA                      l1622 13CC  
                    l1606 13A0                      l2078 0ED8                      l2174 09F4  
                    l2246 12EE                      l2270 113E                      l2262 1118  
                    l2280 118E                      l2272 1156                      l1720 1574  
                    l2266 112C                      l1900 0BFC                      l2196 0A62  
                    l2268 1132                      l1708 15F8                      l1902 0C00  
                    l1910 0C12                      l2278 1182                      l1734 148E  
                    l1920 0C72                      l1816 0AF4                      l1808 0ADC  
                    l2296 11CC                      l1736 1496                      l1746 14B4  
                    l1762 14F2                      l1754 14D4                      l1828 0B0E  
                    l1756 14DC                      l1790 1596                      l1926 0C9A  
                    l1942 0CBA                      l1838 0B28                      l1784 15C0  
                    l1936 0CB0                      l1880 0BB2                      l1794 15AA  
                    l1970 0D1A                      l1892 0BDA                      l1868 0B64  
                    l1958 0CFA                      l1878 0BAE                      l1968 0D18  
                    l1992 0D56                      STR_1 0808                      STR_2 0801  
                    STR_3 080D                      STR_4 0811                      STR_5 0814  
                    u1200 14E0                      u2020 0A6E                      u2100 12F2  
                    u2030 0A86                      u2050 1286                      u1170 149A  
                    u1340 0B82                      u2060 12AE                      u1600 0D02  
                    u1520 0CBE                      _LATD 000F8C                      u2065 12A4  
                    u2307 1382                      u1540 0CCE                      u2180 1198  
                    u2317 1390                      u2237 143A                      u1390 0BC8  
                    u2327 139A                      u2247 1450                      u1800 0EAE  
                    u2337 13AC                      u2257 1328                      u2347 13BA  
                    u2267 1336                      u2357 13C4                      u2277 1346  
                    u2367 15E2                      u2287 1512                      u1840 0EE4  
                    u2297 1542                      u1850 0EFC                      u1940 0878  
                    u1980 0A38                      _main 0F20                      fsr2h 000FDA  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    prodh 000FF4                      prodl 000FF3                      start 0000  
         ___fldiv@new_exp 002B             ?_CURSOR_ONOFF 0001              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 13D4       __size_of_BORRAR_LCD 0006  
          _GENERACARACTER 1566             ___fltol@sign1 0009           __end_of___fladd 0D36  
                   ?_main 0001           __end_of___fldiv 0F20           __end_of___flmul 0ABC  
         __end_of___fltol 1318           __end_of___lwdiv 14C8           __end_of___lwmod 1506  
                   _PORTD 000F83       __size_of_LCD_CONFIG 005E                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0030               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 13D4  
            __end_of_main 10CA    __end_of_GENERACARACTER 1590           _ESCRIBE_MENSAJE 1590  
                  ??_main 0043             __activetblptr 000001                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    _ADRESH 000FC4  
                  _ADRESL 000FC3          __end_of_adc_init 1612          __end_of___xxtofl 11DE  
        __end_of_lcd_init 147E                 ??___fladd 003B                 ??___fldiv 0022  
                  _decena 004F      __end_of_ENVIA_NIBBLE 15EC                 ??___flmul 0009  
               ??___fltol 0005                 ??___lwdiv 000A                 ??___lwmod 0005  
         ?_GENERACARACTER 0004       __size_of_POS_CURSOR 001E                    clear_0 141A  
                  isa$std 000001                    _thermo 0060                    _unidad 004D  
            __pdataCOMRAM 0055              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0006              ___xxtofl@arg 000B              ___xxtofl@exp 000A  
            ___xxtofl@val 0001                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 1420              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002                ___fltol@f1 0001   __end_of_ESCRIBE_MENSAJE 15B2  
          __pcstackCOMRAM 0001              __pidataBANK0 161A        __end_of_BORRAR_LCD 162E  
        ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 1604        __end_of_LCD_CONFIG 1376  
      __end_of_ENVIA_CHAR 1566        __size_of_convierte 009E                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001                 ?_adc_init 0001                 ?___xxtofl 0001  
            ??_POS_CURSOR 0005                 ?_lcd_init 0001     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
                 ___fladd 0ABC                   ___fldiv 0D36                   ___flmul 0818  
                 _lm35raw 0053                   ___fltol 127C                   ___lwdiv 147E  
                 ___lwmod 14C8              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 1536  
       __end_of_convierte 127C                   __pcinit 13D4        __end_of_POS_CURSOR 15D0  
                 __ramtop 0800                   _centena 0051                ??_adc_init 0001  
                 __ptext0 0F20                   __ptext1 142E                   __ptext2 1318  
                 __ptext3 1566                   __ptext4 15EC                   __ptext5 1622  
                 __ptext6 1628                   __ptext7 11DE                   __ptext8 14C8  
                 __ptext9 147E           GENERACARACTER@i 0006                ??___xxtofl 0005  
              ??_lcd_init 0007              _ENVIA_NIBBLE 15D0      end_of_initialization 1420  
        ??_GENERACARACTER 0006                   postdec1 000FE5                   postinc0 000FEE  
    GENERACARACTER@vector 0004     __size_of_CURSOR_ONOFF 0018               ___fladd@grs 0042  
           ___xxtofl@sign 0009               ___fldiv@grs 002D               ___fldiv@rem 0026  
             ___flmul@grs 000F         __size_of_LEER_LCD 005E              _CURSOR_ONOFF 15EC  
      CURSOR_ONOFF@estado 0004             __pidataCOMRAM 1612             ??_CURSOR_HOME 0004  
     start_initialization 13D4         ENVIA_LCD_CMD@dato 0002               __pdataBANK0 0060  
               ___fladd@a 0037                 ___fladd@b 0033                 ___fldiv@a 001E  
               ___fldiv@b 001A         __size_of_adc_init 000E                 ___flmul@a 0005  
               ___flmul@b 0001               __pbssCOMRAM 0045         __size_of___xxtofl 0114  
     __end_of_CURSOR_HOME 1628         __size_of_lcd_init 0050          ___lwdiv@dividend 0006  
                ?___fladd 0033                  ?___fldiv 001A                  ?___flmul 0001  
                ?___fltol 0001                  ?___lwdiv 0006                  ?___lwmod 0001  
       GENERACARACTER@pos 0005               __smallconst 0800                 _convierte 11DE  
         convierte@numero 000D          ___lwdiv@quotient 000A                  _LEER_LCD 1376  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0007            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 0022                _ADCON0bits 000FC2                ?_convierte 000D  
             _CURSOR_HOME 1622                 copy_data0 13E8                 copy_data1 1408  
  __size_of_ENVIA_LCD_CMD 0030                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 0800          __size_of___fladd 027A          __size_of___fldiv 01EA  
        __size_of___flmul 02A4          __size_of___fltol 009C          __size_of___lwdiv 004A  
        __size_of___lwmod 003E                  _adc_init 1604                  ___xxtofl 10CA  
         ___lwdiv@divisor 0008           ___lwdiv@counter 000C                  __ptext10 1604  
                __ptext11 10CA                  __ptext20 1376                  __ptext12 127C  
                __ptext21 15D0                  __ptext13 0818                  __ptext14 0D36  
                __ptext15 0ABC                  __ptext16 15B2                  __ptext17 1506  
                __ptext18 1590                  __ptext19 1536                _BORRAR_LCD 1628  
                _lcd_init 142E                  _o_acento 0055                  _n_temp_c 0049  
                _n_temp_f 0045             __size_of_main 01AA                _LCD_CONFIG 1318  
              _ENVIA_CHAR 1536                  isa$xinst 000000             _ENVIA_LCD_CMD 1506  
 __size_of_GENERACARACTER 002A               ??_convierte 000F         ??_ESCRIBE_MENSAJE 0006  
   ESCRIBE_MENSAJE@cadena 0004          ___lwmod@dividend 0001            ?_ENVIA_LCD_CMD 0001  
         ___lwmod@divisor 0003           ___lwmod@counter 0005               ?_BORRAR_LCD 0001  
           ?_ENVIA_NIBBLE 0001             ___fladd@signs 003F                _POS_CURSOR 15B2  
            ___fladd@aexp 0040              ___fladd@bexp 0041               ?_LCD_CONFIG 0001  
      ESCRIBE_MENSAJE@tam 0005               ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
