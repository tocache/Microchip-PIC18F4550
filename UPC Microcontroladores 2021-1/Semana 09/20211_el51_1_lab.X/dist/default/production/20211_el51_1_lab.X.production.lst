

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 18 21:11:56 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     _ADRESL	set	4035
    65  0000                     _ADRESH	set	4036
    66  0000                     _ADCON0bits	set	4034
    67  0000                     _LATCbits	set	3979
    68  0000                     _ADCON0	set	4034
    69  0000                     _ADCON1	set	4033
    70  0000                     _ADCON2	set	4032
    71  0000                     _TRISCbits	set	3988
    72  0000                     _PORTD	set	3971
    73  0000                     _LATD	set	3980
    74  0000                     _TRISD	set	3989
    75  0000                     _LATDbits	set	3980
    76                           
    77                           	psect	smallconst
    78  000800                     __psmallconst:
    79                           	callstack 0
    80  000800  00                 	db	0
    81  000801                     STR_1:
    82  000801  4C                 	db	76	;'L'
    83  000802  65                 	db	101	;'e'
    84  000803  63                 	db	99	;'c'
    85  000804  74                 	db	116	;'t'
    86  000805  75                 	db	117	;'u'
    87  000806  72                 	db	114	;'r'
    88  000807  61                 	db	97	;'a'
    89  000808  20                 	db	32
    90  000809  41                 	db	65	;'A'
    91  00080A  44                 	db	68	;'D'
    92  00080B  43                 	db	67	;'C'
    93  00080C  3A                 	db	58	;':'
    94  00080D  00                 	db	0
    95  00080E  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  000C22                     __pcinit:
   101                           	callstack 0
   102  000C22                     start_initialization:
   103                           	callstack 0
   104  000C22                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (10 bytes)
   108  000C22  EE00  F011         	lfsr	0,__pbssCOMRAM
   109  000C26  0E0A               	movlw	10
   110  000C28                     clear_0:
   111  000C28  6AEE               	clrf	postinc0,c
   112  000C2A  06E8               	decf	wreg,f,c
   113  000C2C  E1FD               	bnz	clear_0
   114  000C2E                     end_of_initialization:
   115                           	callstack 0
   116  000C2E                     __end_of__initialization:
   117                           	callstack 0
   118  000C2E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   119  000C30  6EF8               	movwf	tblptru,c
   120  000C32  0E08               	movlw	high __Lsmallconst
   121  000C34  6EF7               	movwf	tblptrh,c
   122  000C36  0100               	movlb	0
   123  000C38  EF55  F004         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126  000011                     __pbssCOMRAM:
   127                           	callstack 0
   128  000011                     _unidad:
   129                           	callstack 0
   130  000011                     	ds	2
   131  000013                     _decena:
   132                           	callstack 0
   133  000013                     	ds	2
   134  000015                     _centena:
   135                           	callstack 0
   136  000015                     	ds	2
   137  000017                     _millar:
   138                           	callstack 0
   139  000017                     	ds	2
   140  000019                     _ad_resultado:
   141                           	callstack 0
   142  000019                     	ds	2
   143                           
   144                           	psect	cstackCOMRAM
   145  000001                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000001                     ?___lwmod:
   148                           	callstack 0
   149  000001                     ENVIA_NIBBLE@dato:
   150                           	callstack 0
   151  000001                     LEER_LCD@aux:
   152                           	callstack 0
   153  000001                     ___lwmod@dividend:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x0
   157  000001                     	ds	1
   158  000002                     ENVIA_CHAR@dato:
   159                           	callstack 0
   160  000002                     ENVIA_LCD_CMD@dato:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x1
   164  000002                     	ds	1
   165  000003                     ENVIA_CHAR@aux:
   166                           	callstack 0
   167  000003                     ENVIA_LCD_CMD@aux:
   168                           	callstack 0
   169  000003                     ___lwmod@divisor:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x2
   173  000003                     	ds	1
   174  000004                     ??_LCD_CONFIG:
   175  000004                     POS_CURSOR@columna:
   176                           	callstack 0
   177  000004                     CURSOR_ONOFF@estado:
   178                           	callstack 0
   179  000004                     ESCRIBE_MENSAJE@cadena:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x3
   183  000004                     	ds	1
   184  000005                     ??_lcd_conf:
   185  000005                     POS_CURSOR@fila:
   186                           	callstack 0
   187  000005                     ___lwmod@counter:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0x4
   191  000005                     	ds	1
   192  000006                     ?___lwdiv:
   193                           	callstack 0
   194  000006                     ESCRIBE_MENSAJE@tam:
   195                           	callstack 0
   196  000006                     ___lwdiv@dividend:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x5
   200  000006                     	ds	1
   201  000007                     ??_ESCRIBE_MENSAJE:
   202                           
   203                           ; 1 bytes @ 0x6
   204  000007                     	ds	1
   205  000008                     ___lwdiv@divisor:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x7
   209  000008                     	ds	1
   210  000009                     ESCRIBE_MENSAJE@i:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x8
   214  000009                     	ds	1
   215  00000A                     ___lwdiv@quotient:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x9
   219  00000A                     	ds	2
   220  00000C                     ___lwdiv@counter:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0xB
   224  00000C                     	ds	1
   225  00000D                     convierte@numero:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0xC
   229  00000D                     	ds	2
   230  00000F                     ??_main:
   231                           
   232                           ; 1 bytes @ 0xE
   233  00000F                     	ds	2
   234                           
   235 ;;
   236 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   237 ;;
   238 ;; *************** function _main *****************
   239 ;; Defined at:
   240 ;;		line 37 in file "maincode2.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0       0       0       0       0
   257 ;;      Totals:         2       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        2 bytes
   259 ;; Hardware stack levels required when called:    4
   260 ;; This function calls:
   261 ;;		_ENVIA_CHAR
   262 ;;		_ESCRIBE_MENSAJE
   263 ;;		_POS_CURSOR
   264 ;;		_convierte
   265 ;;		_init_conf
   266 ;;		_lcd_conf
   267 ;; This function is called by:
   268 ;;		Startup code after reset
   269 ;; This function uses a non-reentrant model
   270 ;;
   271                           
   272                           	psect	text0
   273  0008AA                     __ptext0:
   274                           	callstack 0
   275  0008AA                     _main:
   276                           	callstack 27
   277  0008AA                     
   278                           ;maincode2.c: 38:     init_conf();
   279  0008AA  EC1E  F006         	call	_init_conf	;wreg free
   280  0008AE                     
   281                           ;maincode2.c: 39:     lcd_conf();
   282  0008AE  ECEF  F005         	call	_lcd_conf	;wreg free
   283  0008B2                     
   284                           ;maincode2.c: 40:     LATCbits.LC2 = 1;
   285  0008B2  848B               	bsf	139,2,c	;volatile
   286  0008B4                     
   287                           ;maincode2.c: 41:     ESCRIBE_MENSAJE("Lectura ADC:",12);
   288  0008B4  0E01               	movlw	low STR_1
   289  0008B6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   290  0008B8  0E08               	movlw	high STR_1
   291  0008BA  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   292  0008BC  0E0C               	movlw	12
   293  0008BE  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   294  0008C0  EC67  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   295  0008C4                     l1132:
   296                           
   297                           ;maincode2.c: 43:         ADCON0bits.GODONE = 1;
   298  0008C4  82C2               	bsf	194,1,c	;volatile
   299  0008C6                     l133:
   300  0008C6  B2C2               	btfsc	194,1,c	;volatile
   301  0008C8  EF68  F004         	goto	u281
   302  0008CC  EF6A  F004         	goto	u280
   303  0008D0                     u281:
   304  0008D0  EF63  F004         	goto	l133
   305  0008D4                     u280:
   306  0008D4                     
   307                           ;maincode2.c: 45:         ad_resultado = (ADRESH << 8) + ADRESL;
   308  0008D4  50C4               	movf	196,w,c	;volatile
   309  0008D6  6E10               	movwf	(??_main+1)^0,c
   310  0008D8  6A0F               	clrf	??_main^0,c
   311  0008DA  50C3               	movf	195,w,c	;volatile
   312  0008DC  240F               	addwf	??_main^0,w,c
   313  0008DE  6E19               	movwf	_ad_resultado^0,c
   314  0008E0  0E00               	movlw	0
   315  0008E2  2010               	addwfc	(??_main+1)^0,w,c
   316  0008E4  6E1A               	movwf	(_ad_resultado+1)^0,c
   317  0008E6                     
   318                           ;maincode2.c: 46:         convierte(ad_resultado);
   319  0008E6  C019  F00D         	movff	_ad_resultado,convierte@numero
   320  0008EA  C01A  F00E         	movff	_ad_resultado+1,convierte@numero+1
   321  0008EE  EC08  F004         	call	_convierte	;wreg free
   322  0008F2                     
   323                           ;maincode2.c: 47:         POS_CURSOR(2,0);
   324  0008F2  0E00               	movlw	0
   325  0008F4  6E04               	movwf	POS_CURSOR@columna^0,c
   326  0008F6  0E02               	movlw	2
   327  0008F8  EC86  F005         	call	_POS_CURSOR
   328  0008FC                     
   329                           ;maincode2.c: 48:         ENVIA_CHAR(millar+0x30);
   330  0008FC  5017               	movf	_millar^0,w,c
   331  0008FE  0F30               	addlw	48
   332  000900  ECBD  F005         	call	_ENVIA_CHAR
   333  000904                     
   334                           ;maincode2.c: 49:         ENVIA_CHAR(centena+0x30);
   335  000904  5015               	movf	_centena^0,w,c
   336  000906  0F30               	addlw	48
   337  000908  ECBD  F005         	call	_ENVIA_CHAR
   338  00090C                     
   339                           ;maincode2.c: 50:         ENVIA_CHAR(decena+0x30);
   340  00090C  5013               	movf	_decena^0,w,c
   341  00090E  0F30               	addlw	48
   342  000910  ECBD  F005         	call	_ENVIA_CHAR
   343  000914                     
   344                           ;maincode2.c: 51:         ENVIA_CHAR(unidad+0x30);
   345  000914  5011               	movf	_unidad^0,w,c
   346  000916  0F30               	addlw	48
   347  000918  ECBD  F005         	call	_ENVIA_CHAR
   348  00091C  EF62  F004         	goto	l1132
   349  000920  EF00  F000         	goto	start
   350  000924                     __end_of_main:
   351                           	callstack 0
   352                           
   353 ;; *************** function _lcd_conf *****************
   354 ;; Defined at:
   355 ;;		line 21 in file "maincode2.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0
   371 ;;      Temps:          1       0       0       0       0       0       0       0       0
   372 ;;      Totals:         1       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        1 bytes
   374 ;; Hardware stack levels used:    1
   375 ;; Hardware stack levels required when called:    3
   376 ;; This function calls:
   377 ;;		_BORRAR_LCD
   378 ;;		_CURSOR_HOME
   379 ;;		_CURSOR_ONOFF
   380 ;;		_LCD_CONFIG
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text1
   387  000BDE                     __ptext1:
   388                           	callstack 0
   389  000BDE                     _lcd_conf:
   390                           	callstack 27
   391  000BDE                     
   392                           ;maincode2.c: 22:     TRISD = 0x00;
   393  000BDE  0E00               	movlw	0
   394  000BE0  6E95               	movwf	149,c	;volatile
   395  000BE2                     
   396                           ;maincode2.c: 23:     LCD_CONFIG();
   397  000BE2  EC37  F005         	call	_LCD_CONFIG	;wreg free
   398  000BE6                     
   399                           ;maincode2.c: 24:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   400  000BE6  0EEA               	movlw	234
   401  000BE8  6E05               	movwf	??_lcd_conf^0,c
   402  000BEA  0EC3               	movlw	195
   403  000BEC                     u297:
   404  000BEC  2EE8               	decfsz	wreg,f,c
   405  000BEE  D7FE               	bra	u297
   406  000BF0  2E05               	decfsz	??_lcd_conf^0,f,c
   407  000BF2  D7FC               	bra	u297
   408  000BF4  F000               	nop	
   409  000BF6                     
   410                           ;maincode2.c: 25:     BORRAR_LCD();
   411  000BF6  EC2A  F006         	call	_BORRAR_LCD	;wreg free
   412  000BFA                     
   413                           ;maincode2.c: 26:     CURSOR_HOME();
   414  000BFA  EC26  F006         	call	_CURSOR_HOME	;wreg free
   415  000BFE                     
   416                           ;maincode2.c: 27:     CURSOR_ONOFF(1);
   417  000BFE  0E01               	movlw	1
   418  000C00  ECD7  F005         	call	_CURSOR_ONOFF
   419  000C04  0012               	return		;funcret
   420  000C06                     __end_of_lcd_conf:
   421                           	callstack 0
   422                           
   423 ;; *************** function _LCD_CONFIG *****************
   424 ;; Defined at:
   425 ;;		line 72 in file "../20211_el53_2_lab.X/LCD.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   439 ;;      Params:         0       0       0       0       0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0       0       0       0       0
   441 ;;      Temps:          1       0       0       0       0       0       0       0       0
   442 ;;      Totals:         1       0       0       0       0       0       0       0       0
   443 ;;Total ram usage:        1 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    2
   446 ;; This function calls:
   447 ;;		_ENVIA_LCD_CMD
   448 ;;		_ENVIA_NIBBLE
   449 ;; This function is called by:
   450 ;;		_lcd_conf
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text2
   455  000A6E                     __ptext2:
   456                           	callstack 0
   457  000A6E                     _LCD_CONFIG:
   458                           	callstack 27
   459  000A6E                     
   460                           ;../20211_el53_2_lab.X/LCD.c: 74:  LATDbits.LATD0 = 0;
   461  000A6E  908C               	bcf	140,0,c	;volatile
   462                           
   463                           ;../20211_el53_2_lab.X/LCD.c: 75:  LATDbits.LATD1 = 0;
   464  000A70  928C               	bcf	140,1,c	;volatile
   465  000A72                     
   466                           ;../20211_el53_2_lab.X/LCD.c: 76:  ENVIA_NIBBLE(0x30);
   467  000A72  0E30               	movlw	48
   468  000A74  EC03  F006         	call	_ENVIA_NIBBLE
   469  000A78                     
   470                           ;../20211_el53_2_lab.X/LCD.c: 77:         _delay(24000);
   471  000A78  0E20               	movlw	32
   472  000A7A  6E04               	movwf	??_LCD_CONFIG^0,c
   473  000A7C  0E2A               	movlw	42
   474  000A7E                     u307:
   475  000A7E  2EE8               	decfsz	wreg,f,c
   476  000A80  D7FE               	bra	u307
   477  000A82  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   478  000A84  D7FC               	bra	u307
   479  000A86                     
   480                           ;../20211_el53_2_lab.X/LCD.c: 78:         _delay(24000);
   481  000A86  0E20               	movlw	32
   482  000A88  6E04               	movwf	??_LCD_CONFIG^0,c
   483  000A8A  0E2A               	movlw	42
   484  000A8C                     u317:
   485  000A8C  2EE8               	decfsz	wreg,f,c
   486  000A8E  D7FE               	bra	u317
   487  000A90  2E04               	decfsz	??_LCD_CONFIG^0,f,c
   488  000A92  D7FC               	bra	u317
   489                           
   490                           ;../20211_el53_2_lab.X/LCD.c: 81:  ENVIA_NIBBLE(0x30);
   491  000A94  0E30               	movlw	48
   492  000A96  EC03  F006         	call	_ENVIA_NIBBLE
   493  000A9A                     
   494                           ;../20211_el53_2_lab.X/LCD.c: 83:  _delay(1200);
   495  000A9A  0EF0               	movlw	240
   496  000A9C                     u327:
   497  000A9C  D000               	nop2	
   498  000A9E  2EE8               	decfsz	wreg,f,c
   499  000AA0  D7FD               	bra	u327
   500  000AA2                     
   501                           ;../20211_el53_2_lab.X/LCD.c: 84:         ENVIA_NIBBLE(0x30);
   502  000AA2  0E30               	movlw	48
   503  000AA4  EC03  F006         	call	_ENVIA_NIBBLE
   504  000AA8                     
   505                           ;../20211_el53_2_lab.X/LCD.c: 85:  ENVIA_NIBBLE(0x20);
   506  000AA8  0E20               	movlw	32
   507  000AAA  EC03  F006         	call	_ENVIA_NIBBLE
   508  000AAE                     
   509                           ;../20211_el53_2_lab.X/LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   510  000AAE  0E01               	movlw	1
   511  000AB0  ECA3  F005         	call	_ENVIA_LCD_CMD
   512  000AB4                     
   513                           ;../20211_el53_2_lab.X/LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   514  000AB4  0E28               	movlw	40
   515  000AB6  ECA3  F005         	call	_ENVIA_LCD_CMD
   516  000ABA                     
   517                           ;../20211_el53_2_lab.X/LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   518  000ABA  0E0F               	movlw	15
   519  000ABC  ECA3  F005         	call	_ENVIA_LCD_CMD
   520  000AC0                     
   521                           ;../20211_el53_2_lab.X/LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   522  000AC0  0E06               	movlw	6
   523  000AC2  ECA3  F005         	call	_ENVIA_LCD_CMD
   524  000AC6                     
   525                           ;../20211_el53_2_lab.X/LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   526  000AC6  0E01               	movlw	1
   527  000AC8  ECA3  F005         	call	_ENVIA_LCD_CMD
   528  000ACC  0012               	return		;funcret
   529  000ACE                     __end_of_LCD_CONFIG:
   530                           	callstack 0
   531                           
   532 ;; *************** function _CURSOR_ONOFF *****************
   533 ;; Defined at:
   534 ;;		line 35 in file "../20211_el53_2_lab.X/LCD.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  estado          1    wreg     unsigned char 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  estado          1    3[COMRAM] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   548 ;;      Params:         0       0       0       0       0       0       0       0       0
   549 ;;      Locals:         1       0       0       0       0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0
   551 ;;      Totals:         1       0       0       0       0       0       0       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    2
   555 ;; This function calls:
   556 ;;		_ENVIA_LCD_CMD
   557 ;; This function is called by:
   558 ;;		_lcd_conf
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text3
   563  000BAE                     __ptext3:
   564                           	callstack 0
   565  000BAE                     _CURSOR_ONOFF:
   566                           	callstack 27
   567                           
   568                           ;incstack = 0
   569                           ;CURSOR_ONOFF@estado stored from wreg
   570  000BAE  6E04               	movwf	CURSOR_ONOFF@estado^0,c
   571  000BB0                     
   572                           ;../20211_el53_2_lab.X/LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);../20211_el53_
      +                          2_lab.X/LCD.c: 36: {;../20211_el53_2_lab.X/LCD.c: 37:  if(estado == 0) ENVIA_LCD_CMD(0x0
      +                          E);
   573  000BB0  5004               	movf	CURSOR_ONOFF@estado^0,w,c
   574  000BB2  A4D8               	btfss	status,2,c
   575  000BB4  EFDE  F005         	goto	u21
   576  000BB8  EFE0  F005         	goto	u20
   577  000BBC                     u21:
   578  000BBC  EFE3  F005         	goto	l888
   579  000BC0                     u20:
   580  000BC0  0E0E               	movlw	14
   581  000BC2  ECA3  F005         	call	_ENVIA_LCD_CMD
   582  000BC6                     l888:
   583                           
   584                           ;../20211_el53_2_lab.X/LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   585  000BC6  0404               	decf	CURSOR_ONOFF@estado^0,w,c
   586  000BC8  A4D8               	btfss	status,2,c
   587  000BCA  EFE9  F005         	goto	u31
   588  000BCE  EFEB  F005         	goto	u30
   589  000BD2                     u31:
   590  000BD2  EFEE  F005         	goto	l42
   591  000BD6                     u30:
   592  000BD6  0E0C               	movlw	12
   593  000BD8  ECA3  F005         	call	_ENVIA_LCD_CMD
   594  000BDC                     l42:
   595  000BDC  0012               	return		;funcret
   596  000BDE                     __end_of_CURSOR_ONOFF:
   597                           	callstack 0
   598                           
   599 ;; *************** function _CURSOR_HOME *****************
   600 ;; Defined at:
   601 ;;		line 30 in file "../20211_el53_2_lab.X/LCD.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         0       0       0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    2
   622 ;; This function calls:
   623 ;;		_ENVIA_LCD_CMD
   624 ;; This function is called by:
   625 ;;		_lcd_conf
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text4
   630  000C4C                     __ptext4:
   631                           	callstack 0
   632  000C4C                     _CURSOR_HOME:
   633                           	callstack 27
   634  000C4C                     
   635                           ;../20211_el53_2_lab.X/LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   636  000C4C  0E02               	movlw	2
   637  000C4E  ECA3  F005         	call	_ENVIA_LCD_CMD
   638  000C52  0012               	return		;funcret
   639  000C54                     __end_of_CURSOR_HOME:
   640                           	callstack 0
   641                           
   642 ;; *************** function _BORRAR_LCD *****************
   643 ;; Defined at:
   644 ;;		line 67 in file "../20211_el53_2_lab.X/LCD.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    2
   665 ;; This function calls:
   666 ;;		_ENVIA_LCD_CMD
   667 ;; This function is called by:
   668 ;;		_lcd_conf
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text5
   673  000C54                     __ptext5:
   674                           	callstack 0
   675  000C54                     _BORRAR_LCD:
   676                           	callstack 27
   677  000C54                     
   678                           ;../20211_el53_2_lab.X/LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   679  000C54  0E01               	movlw	1
   680  000C56  ECA3  F005         	call	_ENVIA_LCD_CMD
   681  000C5A  0012               	return		;funcret
   682  000C5C                     __end_of_BORRAR_LCD:
   683                           	callstack 0
   684                           
   685 ;; *************** function _init_conf *****************
   686 ;; Defined at:
   687 ;;		line 14 in file "maincode2.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   701 ;;      Params:         0       0       0       0       0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; This function calls:
   708 ;;		Nothing
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text6
   715  000C3C                     __ptext6:
   716                           	callstack 0
   717  000C3C                     _init_conf:
   718                           	callstack 30
   719  000C3C                     
   720                           ;maincode2.c: 15:     TRISCbits.RC2 = 0;
   721  000C3C  9494               	bcf	148,2,c	;volatile
   722  000C3E                     
   723                           ;maincode2.c: 16:     ADCON2 = 0xA4;
   724  000C3E  0EA4               	movlw	164
   725  000C40  6EC0               	movwf	192,c	;volatile
   726                           
   727                           ;maincode2.c: 17:     ADCON1 = 0x0E;
   728  000C42  0E0E               	movlw	14
   729  000C44  6EC1               	movwf	193,c	;volatile
   730                           
   731                           ;maincode2.c: 18:     ADCON0 = 0x01;
   732  000C46  0E01               	movlw	1
   733  000C48  6EC2               	movwf	194,c	;volatile
   734  000C4A  0012               	return		;funcret
   735  000C4C                     __end_of_init_conf:
   736                           	callstack 0
   737                           
   738 ;; *************** function _convierte *****************
   739 ;; Defined at:
   740 ;;		line 30 in file "maincode2.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  numero          2   12[COMRAM] unsigned int 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   754 ;;      Params:         2       0       0       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0       0       0       0       0
   757 ;;      Totals:         2       0       0       0       0       0       0       0       0
   758 ;;Total ram usage:        2 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; Hardware stack levels required when called:    1
   761 ;; This function calls:
   762 ;;		___lwdiv
   763 ;;		___lwmod
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text7
   770  000810                     __ptext7:
   771                           	callstack 0
   772  000810                     _convierte:
   773                           	callstack 29
   774  000810                     
   775                           ;maincode2.c: 31:     millar = numero /1000;
   776  000810  C00D  F006         	movff	convierte@numero,___lwdiv@dividend
   777  000814  C00E  F007         	movff	convierte@numero+1,___lwdiv@dividend+1
   778  000818  0E03               	movlw	3
   779  00081A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   780  00081C  0EE8               	movlw	232
   781  00081E  6E08               	movwf	___lwdiv@divisor^0,c
   782  000820  EC92  F004         	call	___lwdiv	;wreg free
   783  000824  C006  F017         	movff	?___lwdiv,_millar
   784  000828  C007  F018         	movff	?___lwdiv+1,_millar+1
   785                           
   786                           ;maincode2.c: 32:     centena = (numero % 1000) / 100;
   787  00082C  0E03               	movlw	3
   788  00082E  6E04               	movwf	(___lwmod@divisor+1)^0,c
   789  000830  0EE8               	movlw	232
   790  000832  6E03               	movwf	___lwmod@divisor^0,c
   791  000834  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   792  000838  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   793  00083C  EC05  F005         	call	___lwmod	;wreg free
   794  000840  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   795  000844  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   796  000848  0E00               	movlw	0
   797  00084A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   798  00084C  0E64               	movlw	100
   799  00084E  6E08               	movwf	___lwdiv@divisor^0,c
   800  000850  EC92  F004         	call	___lwdiv	;wreg free
   801  000854  C006  F015         	movff	?___lwdiv,_centena
   802  000858  C007  F016         	movff	?___lwdiv+1,_centena+1
   803                           
   804                           ;maincode2.c: 33:     decena = (numero % 100) / 10;
   805  00085C  0E00               	movlw	0
   806  00085E  6E04               	movwf	(___lwmod@divisor+1)^0,c
   807  000860  0E64               	movlw	100
   808  000862  6E03               	movwf	___lwmod@divisor^0,c
   809  000864  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   810  000868  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   811  00086C  EC05  F005         	call	___lwmod	;wreg free
   812  000870  C001  F006         	movff	?___lwmod,___lwdiv@dividend
   813  000874  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
   814  000878  0E00               	movlw	0
   815  00087A  6E09               	movwf	(___lwdiv@divisor+1)^0,c
   816  00087C  0E0A               	movlw	10
   817  00087E  6E08               	movwf	___lwdiv@divisor^0,c
   818  000880  EC92  F004         	call	___lwdiv	;wreg free
   819  000884  C006  F013         	movff	?___lwdiv,_decena
   820  000888  C007  F014         	movff	?___lwdiv+1,_decena+1
   821                           
   822                           ;maincode2.c: 34:     unidad = numero % 10;
   823  00088C  C00D  F001         	movff	convierte@numero,___lwmod@dividend
   824  000890  C00E  F002         	movff	convierte@numero+1,___lwmod@dividend+1
   825  000894  0E00               	movlw	0
   826  000896  6E04               	movwf	(___lwmod@divisor+1)^0,c
   827  000898  0E0A               	movlw	10
   828  00089A  6E03               	movwf	___lwmod@divisor^0,c
   829  00089C  EC05  F005         	call	___lwmod	;wreg free
   830  0008A0  C001  F011         	movff	?___lwmod,_unidad
   831  0008A4  C002  F012         	movff	?___lwmod+1,_unidad+1
   832  0008A8  0012               	return		;funcret
   833  0008AA                     __end_of_convierte:
   834                           	callstack 0
   835                           
   836 ;; *************** function ___lwmod *****************
   837 ;; Defined at:
   838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  dividend        2    0[COMRAM] unsigned int 
   841 ;;  divisor         2    2[COMRAM] unsigned int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  counter         1    4[COMRAM] unsigned char 
   844 ;; Return value:  Size  Location     Type
   845 ;;                  2    0[COMRAM] unsigned int 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   853 ;;      Params:         4       0       0       0       0       0       0       0       0
   854 ;;      Locals:         1       0       0       0       0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0       0       0       0       0
   856 ;;      Totals:         5       0       0       0       0       0       0       0       0
   857 ;;Total ram usage:        5 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_convierte
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           	psect	text8
   867  000A0A                     __ptext8:
   868                           	callstack 0
   869  000A0A                     ___lwmod:
   870                           	callstack 29
   871  000A0A  5003               	movf	___lwmod@divisor^0,w,c
   872  000A0C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
   873  000A0E  B4D8               	btfsc	status,2,c
   874  000A10  EF0C  F005         	goto	u221
   875  000A14  EF0E  F005         	goto	u220
   876  000A18                     u221:
   877  000A18  EF32  F005         	goto	l642
   878  000A1C                     u220:
   879  000A1C  0E01               	movlw	1
   880  000A1E  6E05               	movwf	___lwmod@counter^0,c
   881  000A20  EF16  F005         	goto	l1096
   882  000A24                     l1094:
   883  000A24  90D8               	bcf	status,0,c
   884  000A26  3603               	rlcf	___lwmod@divisor^0,f,c
   885  000A28  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
   886  000A2A  2A05               	incf	___lwmod@counter^0,f,c
   887  000A2C                     l1096:
   888  000A2C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
   889  000A2E  EF1B  F005         	goto	u231
   890  000A32  EF1D  F005         	goto	u230
   891  000A36                     u231:
   892  000A36  EF12  F005         	goto	l1094
   893  000A3A                     u230:
   894  000A3A                     l1098:
   895  000A3A  5003               	movf	___lwmod@divisor^0,w,c
   896  000A3C  5C01               	subwf	___lwmod@dividend^0,w,c
   897  000A3E  5004               	movf	(___lwmod@divisor+1)^0,w,c
   898  000A40  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
   899  000A42  A0D8               	btfss	status,0,c
   900  000A44  EF26  F005         	goto	u241
   901  000A48  EF28  F005         	goto	u240
   902  000A4C                     u241:
   903  000A4C  EF2C  F005         	goto	l1102
   904  000A50                     u240:
   905  000A50  5003               	movf	___lwmod@divisor^0,w,c
   906  000A52  5E01               	subwf	___lwmod@dividend^0,f,c
   907  000A54  5004               	movf	(___lwmod@divisor+1)^0,w,c
   908  000A56  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
   909  000A58                     l1102:
   910  000A58  90D8               	bcf	status,0,c
   911  000A5A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
   912  000A5C  3203               	rrcf	___lwmod@divisor^0,f,c
   913  000A5E  2E05               	decfsz	___lwmod@counter^0,f,c
   914  000A60  EF1D  F005         	goto	l1098
   915  000A64                     l642:
   916  000A64  C001  F001         	movff	___lwmod@dividend,?___lwmod
   917  000A68  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   918  000A6C  0012               	return		;funcret
   919  000A6E                     __end_of___lwmod:
   920                           	callstack 0
   921                           
   922 ;; *************** function ___lwdiv *****************
   923 ;; Defined at:
   924 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  dividend        2    5[COMRAM] unsigned int 
   927 ;;  divisor         2    7[COMRAM] unsigned int 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  quotient        2    9[COMRAM] unsigned int 
   930 ;;  counter         1   11[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  2    5[COMRAM] unsigned int 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         4       0       0       0       0       0       0       0       0
   941 ;;      Locals:         3       0       0       0       0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0
   943 ;;      Totals:         7       0       0       0       0       0       0       0       0
   944 ;;Total ram usage:        7 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; This function calls:
   947 ;;		Nothing
   948 ;; This function is called by:
   949 ;;		_convierte
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text9
   954  000924                     __ptext9:
   955                           	callstack 0
   956  000924                     ___lwdiv:
   957                           	callstack 29
   958  000924  0E00               	movlw	0
   959  000926  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
   960  000928  0E00               	movlw	0
   961  00092A  6E0A               	movwf	___lwdiv@quotient^0,c
   962  00092C  5008               	movf	___lwdiv@divisor^0,w,c
   963  00092E  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
   964  000930  B4D8               	btfsc	status,2,c
   965  000932  EF9D  F004         	goto	u191
   966  000936  EF9F  F004         	goto	u190
   967  00093A                     u191:
   968  00093A  EFC7  F004         	goto	l632
   969  00093E                     u190:
   970  00093E  0E01               	movlw	1
   971  000940  6E0C               	movwf	___lwdiv@counter^0,c
   972  000942  EFA7  F004         	goto	l1076
   973  000946                     l1074:
   974  000946  90D8               	bcf	status,0,c
   975  000948  3608               	rlcf	___lwdiv@divisor^0,f,c
   976  00094A  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
   977  00094C  2A0C               	incf	___lwdiv@counter^0,f,c
   978  00094E                     l1076:
   979  00094E  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
   980  000950  EFAC  F004         	goto	u201
   981  000954  EFAE  F004         	goto	u200
   982  000958                     u201:
   983  000958  EFA3  F004         	goto	l1074
   984  00095C                     u200:
   985  00095C                     l1078:
   986  00095C  90D8               	bcf	status,0,c
   987  00095E  360A               	rlcf	___lwdiv@quotient^0,f,c
   988  000960  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
   989  000962  5008               	movf	___lwdiv@divisor^0,w,c
   990  000964  5C06               	subwf	___lwdiv@dividend^0,w,c
   991  000966  5009               	movf	(___lwdiv@divisor+1)^0,w,c
   992  000968  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
   993  00096A  A0D8               	btfss	status,0,c
   994  00096C  EFBA  F004         	goto	u211
   995  000970  EFBC  F004         	goto	u210
   996  000974                     u211:
   997  000974  EFC1  F004         	goto	l1086
   998  000978                     u210:
   999  000978  5008               	movf	___lwdiv@divisor^0,w,c
  1000  00097A  5E06               	subwf	___lwdiv@dividend^0,f,c
  1001  00097C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  1002  00097E  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1003  000980  800A               	bsf	___lwdiv@quotient^0,0,c
  1004  000982                     l1086:
  1005  000982  90D8               	bcf	status,0,c
  1006  000984  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1007  000986  3208               	rrcf	___lwdiv@divisor^0,f,c
  1008  000988  2E0C               	decfsz	___lwdiv@counter^0,f,c
  1009  00098A  EFAE  F004         	goto	l1078
  1010  00098E                     l632:
  1011  00098E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1012  000992  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1013  000996  0012               	return		;funcret
  1014  000998                     __end_of___lwdiv:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _POS_CURSOR *****************
  1018 ;; Defined at:
  1019 ;;		line 6 in file "../20211_el53_2_lab.X/LCD.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  fila            1    wreg     unsigned char 
  1022 ;;  columna         1    3[COMRAM] unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  fila            1    4[COMRAM] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         1       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		_ENVIA_LCD_CMD
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text10
  1049  000B0C                     __ptext10:
  1050                           	callstack 0
  1051  000B0C                     _POS_CURSOR:
  1052                           	callstack 28
  1053                           
  1054                           ;incstack = 0
  1055                           ;POS_CURSOR@fila stored from wreg
  1056  000B0C  6E05               	movwf	POS_CURSOR@fila^0,c
  1057  000B0E                     
  1058                           ;../20211_el53_2_lab.X/LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char column
      +                          a);../20211_el53_2_lab.X/LCD.c: 7: {;../20211_el53_2_lab.X/LCD.c: 8:  if(fila == 1)
  1059  000B0E  0405               	decf	POS_CURSOR@fila^0,w,c
  1060  000B10  A4D8               	btfss	status,2,c
  1061  000B12  EF8D  F005         	goto	u251
  1062  000B16  EF8F  F005         	goto	u250
  1063  000B1A                     u251:
  1064  000B1A  EF95  F005         	goto	l1110
  1065  000B1E                     u250:
  1066  000B1E                     
  1067                           ;../20211_el53_2_lab.X/LCD.c: 9:  {;../20211_el53_2_lab.X/LCD.c: 10:   ENVIA_LCD_CMD(0x8
      +                          0+columna);
  1068  000B1E  5004               	movf	POS_CURSOR@columna^0,w,c
  1069  000B20  0F80               	addlw	128
  1070  000B22  ECA3  F005         	call	_ENVIA_LCD_CMD
  1071                           
  1072                           ;../20211_el53_2_lab.X/LCD.c: 11:  }
  1073  000B26  EFA2  F005         	goto	l24
  1074  000B2A                     l1110:
  1075  000B2A  0E02               	movlw	2
  1076  000B2C  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1077  000B2E  A4D8               	btfss	status,2,c
  1078  000B30  EF9C  F005         	goto	u261
  1079  000B34  EF9E  F005         	goto	u260
  1080  000B38                     u261:
  1081  000B38  EFA2  F005         	goto	l24
  1082  000B3C                     u260:
  1083  000B3C                     
  1084                           ;../20211_el53_2_lab.X/LCD.c: 13:  {;../20211_el53_2_lab.X/LCD.c: 14:   ENVIA_LCD_CMD(0x
      +                          C0+columna);
  1085  000B3C  5004               	movf	POS_CURSOR@columna^0,w,c
  1086  000B3E  0FC0               	addlw	192
  1087  000B40  ECA3  F005         	call	_ENVIA_LCD_CMD
  1088  000B44                     l24:
  1089  000B44  0012               	return		;funcret
  1090  000B46                     __end_of_POS_CURSOR:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _ENVIA_LCD_CMD *****************
  1094 ;; Defined at:
  1095 ;;		line 104 in file "../20211_el53_2_lab.X/LCD.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  dato            1    wreg     unsigned char 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  dato            1    1[COMRAM] unsigned char 
  1100 ;;  aux             1    2[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0
  1111 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1113 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    1
  1117 ;; This function calls:
  1118 ;;		_ENVIA_NIBBLE
  1119 ;;		_LEER_LCD
  1120 ;; This function is called by:
  1121 ;;		_POS_CURSOR
  1122 ;;		_CURSOR_HOME
  1123 ;;		_CURSOR_ONOFF
  1124 ;;		_BORRAR_LCD
  1125 ;;		_LCD_CONFIG
  1126 ;;		_BLINK_CURSOR
  1127 ;;		_DISPLAY_ONOFF
  1128 ;;		_GENERACARACTER
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text11
  1133  000B46                     __ptext11:
  1134                           	callstack 0
  1135  000B46                     _ENVIA_LCD_CMD:
  1136                           	callstack 27
  1137                           
  1138                           ;incstack = 0
  1139                           ;ENVIA_LCD_CMD@dato stored from wreg
  1140  000B46  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1141  000B48                     
  1142                           ;../20211_el53_2_lab.X/LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);../20211_el53_
      +                          2_lab.X/LCD.c: 105: {;../20211_el53_2_lab.X/LCD.c: 106:  unsigned char aux;;../20211_el5
      +                          3_2_lab.X/LCD.c: 107:  LATDbits.LATD0 = 0;
  1143  000B48  908C               	bcf	140,0,c	;volatile
  1144  000B4A                     
  1145                           ;../20211_el53_2_lab.X/LCD.c: 108:  LEER_LCD();
  1146  000B4A  ECCC  F004         	call	_LEER_LCD	;wreg free
  1147  000B4E                     
  1148                           ;../20211_el53_2_lab.X/LCD.c: 109:  TRISD = 0b00000000;
  1149  000B4E  0E00               	movlw	0
  1150  000B50  6E95               	movwf	149,c	;volatile
  1151  000B52                     
  1152                           ;../20211_el53_2_lab.X/LCD.c: 111:         _delay(1200);
  1153  000B52  0EF0               	movlw	240
  1154  000B54                     u337:
  1155  000B54  D000               	nop2	
  1156  000B56  2EE8               	decfsz	wreg,f,c
  1157  000B58  D7FD               	bra	u337
  1158  000B5A                     
  1159                           ;../20211_el53_2_lab.X/LCD.c: 112:         LATDbits.LATD1 = 0;
  1160  000B5A  928C               	bcf	140,1,c	;volatile
  1161  000B5C                     
  1162                           ;../20211_el53_2_lab.X/LCD.c: 113:  LATDbits.LATD2 = 0;
  1163  000B5C  948C               	bcf	140,2,c	;volatile
  1164  000B5E                     
  1165                           ;../20211_el53_2_lab.X/LCD.c: 114:  LATDbits.LATD0 = 0;
  1166  000B5E  908C               	bcf	140,0,c	;volatile
  1167  000B60                     
  1168                           ;../20211_el53_2_lab.X/LCD.c: 115:  aux = dato & 0xF0;
  1169  000B60  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1170  000B62  0BF0               	andlw	240
  1171  000B64  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1172  000B66                     
  1173                           ;../20211_el53_2_lab.X/LCD.c: 116:  ENVIA_NIBBLE(aux);
  1174  000B66  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1175  000B68  EC03  F006         	call	_ENVIA_NIBBLE
  1176  000B6C                     
  1177                           ;../20211_el53_2_lab.X/LCD.c: 117:  aux = dato<<4;
  1178  000B6C  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1179  000B6E  0BF0               	andlw	240
  1180  000B70  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1181  000B72                     
  1182                           ;../20211_el53_2_lab.X/LCD.c: 118:  ENVIA_NIBBLE(aux);
  1183  000B72  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1184  000B74  EC03  F006         	call	_ENVIA_NIBBLE
  1185  000B78  0012               	return		;funcret
  1186  000B7A                     __end_of_ENVIA_LCD_CMD:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function _ESCRIBE_MENSAJE *****************
  1190 ;; Defined at:
  1191 ;;		line 41 in file "../20211_el53_2_lab.X/LCD.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1194 ;;		 -> STR_1(13), 
  1195 ;;  tam             1    5[COMRAM] unsigned char 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  i               1    8[COMRAM] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1207 ;;      Params:         3       0       0       0       0       0       0       0       0
  1208 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1209 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1210 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1211 ;;Total ram usage:        6 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		_ENVIA_CHAR
  1216 ;; This function is called by:
  1217 ;;		_main
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text12
  1222  000ACE                     __ptext12:
  1223                           	callstack 0
  1224  000ACE                     _ESCRIBE_MENSAJE:
  1225                           	callstack 28
  1226  000ACE                     
  1227                           ;../20211_el53_2_lab.X/LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char 
      +                          tam);../20211_el53_2_lab.X/LCD.c: 42: {;../20211_el53_2_lab.X/LCD.c: 43:  unsigned char 
      +                          i = 0;
  1228  000ACE  0E00               	movlw	0
  1229  000AD0  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1230                           
  1231                           ;../20211_el53_2_lab.X/LCD.c: 44:  for(i = 0; i<tam; i++)
  1232  000AD2  0E00               	movlw	0
  1233  000AD4  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1234  000AD6  EF7C  F005         	goto	l1120
  1235  000ADA                     l1116:
  1236                           
  1237                           ;../20211_el53_2_lab.X/LCD.c: 45:  {;../20211_el53_2_lab.X/LCD.c: 46:   ENVIA_CHAR(caden
      +                          a[i]);
  1238  000ADA  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1239  000ADC  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1240  000ADE  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  1241  000AE0  0E00               	movlw	0
  1242  000AE2  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1243  000AE4  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1244  000AE6  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1245  000AEA  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1246  000AEE                     	if	0	;tblptru may be non-zero
  1247  000AEE                     	endif
  1248  000AEE                     	if	0	;tblptru may be non-zero
  1249  000AEE                     	endif
  1250  000AEE  0008               	tblrd		*
  1251  000AF0  50F5               	movf	tablat,w,c
  1252  000AF2  ECBD  F005         	call	_ENVIA_CHAR
  1253  000AF6                     
  1254                           ;../20211_el53_2_lab.X/LCD.c: 47:  }
  1255  000AF6  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1256  000AF8                     l1120:
  1257  000AF8  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1258  000AFA  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1259  000AFC  A0D8               	btfss	status,0,c
  1260  000AFE  EF83  F005         	goto	u271
  1261  000B02  EF85  F005         	goto	u270
  1262  000B06                     u271:
  1263  000B06  EF6D  F005         	goto	l1116
  1264  000B0A                     u270:
  1265  000B0A  0012               	return		;funcret
  1266  000B0C                     __end_of_ESCRIBE_MENSAJE:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _ENVIA_CHAR *****************
  1270 ;; Defined at:
  1271 ;;		line 50 in file "../20211_el53_2_lab.X/LCD.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  dato            1    wreg     unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  dato            1    1[COMRAM] unsigned char 
  1276 ;;  aux             1    2[COMRAM] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0
  1287 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    1
  1293 ;; This function calls:
  1294 ;;		_ENVIA_NIBBLE
  1295 ;;		_LEER_LCD
  1296 ;; This function is called by:
  1297 ;;		_ESCRIBE_MENSAJE
  1298 ;;		_main
  1299 ;;		_GENERACARACTER
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text13
  1304  000B7A                     __ptext13:
  1305                           	callstack 0
  1306  000B7A                     _ENVIA_CHAR:
  1307                           	callstack 28
  1308                           
  1309                           ;incstack = 0
  1310                           ;ENVIA_CHAR@dato stored from wreg
  1311  000B7A  6E02               	movwf	ENVIA_CHAR@dato^0,c
  1312  000B7C                     
  1313                           ;../20211_el53_2_lab.X/LCD.c: 50: void ENVIA_CHAR(unsigned char dato);../20211_el53_2_la
      +                          b.X/LCD.c: 51: {;../20211_el53_2_lab.X/LCD.c: 52:  unsigned char aux;;../20211_el53_2_la
      +                          b.X/LCD.c: 53:  LATDbits.LATD0 = 1;
  1314  000B7C  808C               	bsf	140,0,c	;volatile
  1315  000B7E                     
  1316                           ;../20211_el53_2_lab.X/LCD.c: 54:  LEER_LCD();
  1317  000B7E  ECCC  F004         	call	_LEER_LCD	;wreg free
  1318  000B82                     
  1319                           ;../20211_el53_2_lab.X/LCD.c: 55:  TRISD = 0x00;
  1320  000B82  0E00               	movlw	0
  1321  000B84  6E95               	movwf	149,c	;volatile
  1322  000B86                     
  1323                           ;../20211_el53_2_lab.X/LCD.c: 56:         _delay(1200);
  1324  000B86  0EF0               	movlw	240
  1325  000B88                     u347:
  1326  000B88  D000               	nop2	
  1327  000B8A  2EE8               	decfsz	wreg,f,c
  1328  000B8C  D7FD               	bra	u347
  1329  000B8E                     
  1330                           ;../20211_el53_2_lab.X/LCD.c: 58:  LATDbits.LATD1 = 0;
  1331  000B8E  928C               	bcf	140,1,c	;volatile
  1332  000B90                     
  1333                           ;../20211_el53_2_lab.X/LCD.c: 59:  LATDbits.LATD2 = 0;
  1334  000B90  948C               	bcf	140,2,c	;volatile
  1335  000B92                     
  1336                           ;../20211_el53_2_lab.X/LCD.c: 60:  LATDbits.LATD0 = 1;
  1337  000B92  808C               	bsf	140,0,c	;volatile
  1338  000B94                     
  1339                           ;../20211_el53_2_lab.X/LCD.c: 61:  aux = dato & 0xF0;
  1340  000B94  5002               	movf	ENVIA_CHAR@dato^0,w,c
  1341  000B96  0BF0               	andlw	240
  1342  000B98  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1343  000B9A                     
  1344                           ;../20211_el53_2_lab.X/LCD.c: 62:  ENVIA_NIBBLE(aux);
  1345  000B9A  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1346  000B9C  EC03  F006         	call	_ENVIA_NIBBLE
  1347  000BA0                     
  1348                           ;../20211_el53_2_lab.X/LCD.c: 63:  aux = dato << 4;
  1349  000BA0  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  1350  000BA2  0BF0               	andlw	240
  1351  000BA4  6E03               	movwf	ENVIA_CHAR@aux^0,c
  1352  000BA6                     
  1353                           ;../20211_el53_2_lab.X/LCD.c: 64:  ENVIA_NIBBLE(aux);
  1354  000BA6  5003               	movf	ENVIA_CHAR@aux^0,w,c
  1355  000BA8  EC03  F006         	call	_ENVIA_NIBBLE
  1356  000BAC  0012               	return		;funcret
  1357  000BAE                     __end_of_ENVIA_CHAR:
  1358                           	callstack 0
  1359                           
  1360 ;; *************** function _LEER_LCD *****************
  1361 ;; Defined at:
  1362 ;;		line 121 in file "../20211_el53_2_lab.X/LCD.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;		None
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  aux             1    0[COMRAM] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1376 ;;      Params:         0       0       0       0       0       0       0       0       0
  1377 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1379 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1380 ;;Total ram usage:        1 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_ENVIA_CHAR
  1386 ;;		_ENVIA_LCD_CMD
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text14
  1391  000998                     __ptext14:
  1392                           	callstack 0
  1393  000998                     _LEER_LCD:
  1394                           	callstack 27
  1395  000998                     
  1396                           ;../20211_el53_2_lab.X/LCD.c: 123:  unsigned char aux;;../20211_el53_2_lab.X/LCD.c: 124:
      +                            TRISD = 0xF8;
  1397  000998  0EF8               	movlw	248
  1398  00099A  6E95               	movwf	149,c	;volatile
  1399  00099C                     
  1400                           ;../20211_el53_2_lab.X/LCD.c: 125:  LATDbits.LATD0 = 0;
  1401  00099C  908C               	bcf	140,0,c	;volatile
  1402  00099E                     
  1403                           ;../20211_el53_2_lab.X/LCD.c: 126:  LATDbits.LATD1 = 1;
  1404  00099E  828C               	bsf	140,1,c	;volatile
  1405  0009A0                     
  1406                           ;../20211_el53_2_lab.X/LCD.c: 127:  LATDbits.LATD2 = 1;
  1407  0009A0  848C               	bsf	140,2,c	;volatile
  1408  0009A2                     
  1409                           ;../20211_el53_2_lab.X/LCD.c: 128:         _delay(1200);
  1410  0009A2  0EF0               	movlw	240
  1411  0009A4                     u357:
  1412  0009A4  D000               	nop2	
  1413  0009A6  2EE8               	decfsz	wreg,f,c
  1414  0009A8  D7FD               	bra	u357
  1415  0009AA                     
  1416                           ;../20211_el53_2_lab.X/LCD.c: 130:  aux = PORTD;
  1417  0009AA  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1418  0009AE                     
  1419                           ;../20211_el53_2_lab.X/LCD.c: 131:  LATDbits.LATD2 = 0;
  1420  0009AE  948C               	bcf	140,2,c	;volatile
  1421  0009B0                     
  1422                           ;../20211_el53_2_lab.X/LCD.c: 132:         _delay(1200);
  1423  0009B0  0EF0               	movlw	240
  1424  0009B2                     u367:
  1425  0009B2  D000               	nop2	
  1426  0009B4  2EE8               	decfsz	wreg,f,c
  1427  0009B6  D7FD               	bra	u367
  1428  0009B8                     
  1429                           ;../20211_el53_2_lab.X/LCD.c: 134:  LATDbits.LATD2 = 1;
  1430  0009B8  848C               	bsf	140,2,c	;volatile
  1431  0009BA                     
  1432                           ;../20211_el53_2_lab.X/LCD.c: 135:         _delay(1200);
  1433  0009BA  0EF0               	movlw	240
  1434  0009BC                     u377:
  1435  0009BC  D000               	nop2	
  1436  0009BE  2EE8               	decfsz	wreg,f,c
  1437  0009C0  D7FD               	bra	u377
  1438  0009C2                     
  1439                           ;../20211_el53_2_lab.X/LCD.c: 137:  LATDbits.LATD2 = 0;
  1440  0009C2  948C               	bcf	140,2,c	;volatile
  1441  0009C4                     l836:
  1442                           
  1443                           ;../20211_el53_2_lab.X/LCD.c: 138:  aux = aux & 0x80;
  1444  0009C4  5001               	movf	LEER_LCD@aux^0,w,c
  1445  0009C6  0B80               	andlw	128
  1446  0009C8  6E01               	movwf	LEER_LCD@aux^0,c
  1447                           
  1448                           ;../20211_el53_2_lab.X/LCD.c: 139:  while(aux == 0x80)
  1449  0009CA  EFFB  F004         	goto	l850
  1450  0009CE                     l67:
  1451                           
  1452                           ;../20211_el53_2_lab.X/LCD.c: 140:         {;../20211_el53_2_lab.X/LCD.c: 141:          
      +                             LATDbits.LATD2 = 1;
  1453  0009CE  848C               	bsf	140,2,c	;volatile
  1454  0009D0                     
  1455                           ;../20211_el53_2_lab.X/LCD.c: 142:             _delay(1200);
  1456  0009D0  0EF0               	movlw	240
  1457  0009D2                     u387:
  1458  0009D2  D000               	nop2	
  1459  0009D4  2EE8               	decfsz	wreg,f,c
  1460  0009D6  D7FD               	bra	u387
  1461  0009D8                     
  1462                           ;../20211_el53_2_lab.X/LCD.c: 143:             aux = PORTD;
  1463  0009D8  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1464  0009DC                     
  1465                           ;../20211_el53_2_lab.X/LCD.c: 144:             LATDbits.LATD2 = 0;
  1466  0009DC  948C               	bcf	140,2,c	;volatile
  1467                           
  1468                           ;../20211_el53_2_lab.X/LCD.c: 145:             _delay(1200);
  1469  0009DE  0EF0               	movlw	240
  1470  0009E0                     u397:
  1471  0009E0  D000               	nop2	
  1472  0009E2  2EE8               	decfsz	wreg,f,c
  1473  0009E4  D7FD               	bra	u397
  1474  0009E6                     
  1475                           ;../20211_el53_2_lab.X/LCD.c: 146:             LATDbits.LATD2 = 1;
  1476  0009E6  848C               	bsf	140,2,c	;volatile
  1477                           
  1478                           ;../20211_el53_2_lab.X/LCD.c: 147:             _delay(1200);
  1479  0009E8  0EF0               	movlw	240
  1480  0009EA                     u407:
  1481  0009EA  D000               	nop2	
  1482  0009EC  2EE8               	decfsz	wreg,f,c
  1483  0009EE  D7FD               	bra	u407
  1484  0009F0                     
  1485                           ;../20211_el53_2_lab.X/LCD.c: 148:             LATDbits.LATD2 = 0;
  1486  0009F0  948C               	bcf	140,2,c	;volatile
  1487  0009F2  EFE2  F004         	goto	l836
  1488  0009F6                     l850:
  1489                           
  1490                           ;../20211_el53_2_lab.X/LCD.c: 139:  while(aux == 0x80)
  1491  0009F6  0E80               	movlw	128
  1492  0009F8  1801               	xorwf	LEER_LCD@aux^0,w,c
  1493  0009FA  B4D8               	btfsc	status,2,c
  1494  0009FC  EF02  F005         	goto	u11
  1495  000A00  EF04  F005         	goto	u10
  1496  000A04                     u11:
  1497  000A04  EFE7  F004         	goto	l67
  1498  000A08                     u10:
  1499  000A08  0012               	return		;funcret
  1500  000A0A                     __end_of_LEER_LCD:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _ENVIA_NIBBLE *****************
  1504 ;; Defined at:
  1505 ;;		line 93 in file "../20211_el53_2_lab.X/LCD.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  dato            1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  dato            1    0[COMRAM] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        1 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_ENVIA_CHAR
  1529 ;;		_LCD_CONFIG
  1530 ;;		_ENVIA_LCD_CMD
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text15
  1535  000C06                     __ptext15:
  1536                           	callstack 0
  1537  000C06                     _ENVIA_NIBBLE:
  1538                           	callstack 28
  1539                           
  1540                           ;incstack = 0
  1541                           ;ENVIA_NIBBLE@dato stored from wreg
  1542  000C06  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  1543  000C08                     
  1544                           ;../20211_el53_2_lab.X/LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);../20211_el53_2_
      +                          lab.X/LCD.c: 94: {;../20211_el53_2_lab.X/LCD.c: 95:  LATD &= 0x0F;
  1545  000C08  0E0F               	movlw	15
  1546  000C0A  168C               	andwf	140,f,c	;volatile
  1547                           
  1548                           ;../20211_el53_2_lab.X/LCD.c: 96:  dato &= 0xF0;
  1549  000C0C  0EF0               	movlw	240
  1550  000C0E  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1551                           
  1552                           ;../20211_el53_2_lab.X/LCD.c: 97:  LATD|= dato;
  1553  000C10  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1554  000C12  128C               	iorwf	140,f,c	;volatile
  1555  000C14                     
  1556                           ;../20211_el53_2_lab.X/LCD.c: 98:  LATDbits.LATD2 = 1;
  1557  000C14  848C               	bsf	140,2,c	;volatile
  1558  000C16                     
  1559                           ;../20211_el53_2_lab.X/LCD.c: 100:         _delay(1200);
  1560  000C16  0EF0               	movlw	240
  1561  000C18                     u417:
  1562  000C18  D000               	nop2	
  1563  000C1A  2EE8               	decfsz	wreg,f,c
  1564  000C1C  D7FD               	bra	u417
  1565  000C1E                     
  1566                           ;../20211_el53_2_lab.X/LCD.c: 101:  LATDbits.LATD2 = 0;
  1567  000C1E  948C               	bcf	140,2,c	;volatile
  1568  000C20  0012               	return		;funcret
  1569  000C22                     __end_of_ENVIA_NIBBLE:
  1570                           	callstack 0
  1571                           
  1572                           	psect	rparam
  1573  0000                     
  1574                           	psect	idloc
  1575                           
  1576                           ;Config register IDLOC0 @ 0x200000
  1577                           ;	unspecified, using default values
  1578  200000                     	org	2097152
  1579  200000  FF                 	db	255
  1580                           
  1581                           ;Config register IDLOC1 @ 0x200001
  1582                           ;	unspecified, using default values
  1583  200001                     	org	2097153
  1584  200001  FF                 	db	255
  1585                           
  1586                           ;Config register IDLOC2 @ 0x200002
  1587                           ;	unspecified, using default values
  1588  200002                     	org	2097154
  1589  200002  FF                 	db	255
  1590                           
  1591                           ;Config register IDLOC3 @ 0x200003
  1592                           ;	unspecified, using default values
  1593  200003                     	org	2097155
  1594  200003  FF                 	db	255
  1595                           
  1596                           ;Config register IDLOC4 @ 0x200004
  1597                           ;	unspecified, using default values
  1598  200004                     	org	2097156
  1599  200004  FF                 	db	255
  1600                           
  1601                           ;Config register IDLOC5 @ 0x200005
  1602                           ;	unspecified, using default values
  1603  200005                     	org	2097157
  1604  200005  FF                 	db	255
  1605                           
  1606                           ;Config register IDLOC6 @ 0x200006
  1607                           ;	unspecified, using default values
  1608  200006                     	org	2097158
  1609  200006  FF                 	db	255
  1610                           
  1611                           ;Config register IDLOC7 @ 0x200007
  1612                           ;	unspecified, using default values
  1613  200007                     	org	2097159
  1614  200007  FF                 	db	255
  1615                           
  1616                           	psect	config
  1617                           
  1618                           ;Config register CONFIG1L @ 0x300000
  1619                           ;	PLL Prescaler Selection bits
  1620                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1621                           ;	System Clock Postscaler Selection bits
  1622                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1623                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1624                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1625  300000                     	org	3145728
  1626  300000  00                 	db	0
  1627                           
  1628                           ;Config register CONFIG1H @ 0x300001
  1629                           ;	Oscillator Selection bits
  1630                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1631                           ;	Fail-Safe Clock Monitor Enable bit
  1632                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1633                           ;	Internal/External Oscillator Switchover bit
  1634                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1635  300001                     	org	3145729
  1636  300001  02                 	db	2
  1637                           
  1638                           ;Config register CONFIG2L @ 0x300002
  1639                           ;	Power-up Timer Enable bit
  1640                           ;	PWRT = ON, PWRT enabled
  1641                           ;	Brown-out Reset Enable bits
  1642                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1643                           ;	Brown-out Reset Voltage bits
  1644                           ;	BORV = 3, Minimum setting 2.05V
  1645                           ;	USB Voltage Regulator Enable bit
  1646                           ;	VREGEN = OFF, USB voltage regulator disabled
  1647  300002                     	org	3145730
  1648  300002  18                 	db	24
  1649                           
  1650                           ;Config register CONFIG2H @ 0x300003
  1651                           ;	Watchdog Timer Enable bit
  1652                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1653                           ;	Watchdog Timer Postscale Select bits
  1654                           ;	WDTPS = 32768, 1:32768
  1655  300003                     	org	3145731
  1656  300003  1E                 	db	30
  1657                           
  1658                           ; Padding undefined space
  1659  300004                     	org	3145732
  1660  300004  FF                 	db	255
  1661                           
  1662                           ;Config register CONFIG3H @ 0x300005
  1663                           ;	CCP2 MUX bit
  1664                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1665                           ;	PORTB A/D Enable bit
  1666                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1667                           ;	Low-Power Timer 1 Oscillator Enable bit
  1668                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1669                           ;	MCLR Pin Enable bit
  1670                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1671  300005                     	org	3145733
  1672  300005  81                 	db	129
  1673                           
  1674                           ;Config register CONFIG4L @ 0x300006
  1675                           ;	Stack Full/Underflow Reset Enable bit
  1676                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1677                           ;	Single-Supply ICSP Enable bit
  1678                           ;	LVP = OFF, Single-Supply ICSP disabled
  1679                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1680                           ;	ICPRT = OFF, ICPORT disabled
  1681                           ;	Extended Instruction Set Enable bit
  1682                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1683                           ;	Background Debugger Enable bit
  1684                           ;	DEBUG = 0x1, unprogrammed default
  1685  300006                     	org	3145734
  1686  300006  81                 	db	129
  1687                           
  1688                           ; Padding undefined space
  1689  300007                     	org	3145735
  1690  300007  FF                 	db	255
  1691                           
  1692                           ;Config register CONFIG5L @ 0x300008
  1693                           ;	Code Protection bit
  1694                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1695                           ;	Code Protection bit
  1696                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1697                           ;	Code Protection bit
  1698                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1699                           ;	Code Protection bit
  1700                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1701  300008                     	org	3145736
  1702  300008  0F                 	db	15
  1703                           
  1704                           ;Config register CONFIG5H @ 0x300009
  1705                           ;	Boot Block Code Protection bit
  1706                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1707                           ;	Data EEPROM Code Protection bit
  1708                           ;	CPD = OFF, Data EEPROM is not code-protected
  1709  300009                     	org	3145737
  1710  300009  C0                 	db	192
  1711                           
  1712                           ;Config register CONFIG6L @ 0x30000A
  1713                           ;	Write Protection bit
  1714                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1715                           ;	Write Protection bit
  1716                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1717                           ;	Write Protection bit
  1718                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1719                           ;	Write Protection bit
  1720                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1721  30000A                     	org	3145738
  1722  30000A  0F                 	db	15
  1723                           
  1724                           ;Config register CONFIG6H @ 0x30000B
  1725                           ;	Configuration Register Write Protection bit
  1726                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1727                           ;	Boot Block Write Protection bit
  1728                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1729                           ;	Data EEPROM Write Protection bit
  1730                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1731  30000B                     	org	3145739
  1732  30000B  E0                 	db	224
  1733                           
  1734                           ;Config register CONFIG7L @ 0x30000C
  1735                           ;	Table Read Protection bit
  1736                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1737                           ;	Table Read Protection bit
  1738                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1739                           ;	Table Read Protection bit
  1740                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1741                           ;	Table Read Protection bit
  1742                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1743  30000C                     	org	3145740
  1744  30000C  0F                 	db	15
  1745                           
  1746                           ;Config register CONFIG7H @ 0x30000D
  1747                           ;	Boot Block Table Read Protection bit
  1748                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1749  30000D                     	org	3145741
  1750  30000D  40                 	db	64
  1751                           tosu	equ	0xFFF
  1752                           tosh	equ	0xFFE
  1753                           tosl	equ	0xFFD
  1754                           stkptr	equ	0xFFC
  1755                           pclatu	equ	0xFFB
  1756                           pclath	equ	0xFFA
  1757                           pcl	equ	0xFF9
  1758                           tblptru	equ	0xFF8
  1759                           tblptrh	equ	0xFF7
  1760                           tblptrl	equ	0xFF6
  1761                           tablat	equ	0xFF5
  1762                           prodh	equ	0xFF4
  1763                           prodl	equ	0xFF3
  1764                           indf0	equ	0xFEF
  1765                           postinc0	equ	0xFEE
  1766                           postdec0	equ	0xFED
  1767                           preinc0	equ	0xFEC
  1768                           plusw0	equ	0xFEB
  1769                           fsr0h	equ	0xFEA
  1770                           fsr0l	equ	0xFE9
  1771                           wreg	equ	0xFE8
  1772                           indf1	equ	0xFE7
  1773                           postinc1	equ	0xFE6
  1774                           postdec1	equ	0xFE5
  1775                           preinc1	equ	0xFE4
  1776                           plusw1	equ	0xFE3
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           bsr	equ	0xFE0
  1780                           indf2	equ	0xFDF
  1781                           postinc2	equ	0xFDE
  1782                           postdec2	equ	0xFDD
  1783                           preinc2	equ	0xFDC
  1784                           plusw2	equ	0xFDB
  1785                           fsr2h	equ	0xFDA
  1786                           fsr2l	equ	0xFD9
  1787                           status	equ	0xFD8

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_conf->_CURSOR_ONOFF
    _lcd_conf->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2689
                                             14 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _convierte
                          _init_conf
                           _lcd_conf
 ---------------------------------------------------------------------------------
 (1) _lcd_conf                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _init_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1397
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _init_conf
   _lcd_conf
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      1A       1       27.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 18 21:11:56 2021

                      l24 0B44                        l42 0BDC                        l51 0BAC  
                      l60 0C20                        l37 0C52                        l54 0C5A  
                      l63 0B78                        l48 0B0A                        l57 0ACC  
                      l67 09CE                        l69 0A08                        u10 0A08  
                      u11 0A04                        u20 0BC0                        u21 0BBC  
                      u30 0BD6                        u31 0BD2             ENVIA_CHAR@aux 0003  
                     l121 0C4A                       l124 0C04                       l133 08C6  
                     l127 08A8                       l632 098E                       l642 0A64  
                     l820 09A0                       l900 0B8E                       l830 09B8  
                     l822 09A2                       l814 0998                       l910 0BA0  
                     l902 0B90                       l639 0996                       l840 09D8  
                     l832 09BA                       l824 09AA                       l816 099C  
                     l912 0BA6                       l904 0B92                       l920 0A78  
                     l649 0A6C                       l842 09DC                       l850 09F6  
                     l834 09C2                       l826 09AE                       l818 099E  
                     l906 0B94                       l914 0C54                       l930 0AAE  
                     l922 0A86                       l852 0C08                       l844 09E6  
                     l836 09C4                       l828 09B0                       l908 0B9A  
                     l860 0B48                       l932 0AB4                       l924 0A9A  
                     l916 0A6E                       l854 0C14                       l846 09F0  
                     l838 09D0                       l870 0B5C                       l862 0B4A  
                     l934 0ABA                       l926 0AA2                       l918 0A72  
                     l856 0C16                       l880 0B72                       l872 0B5E  
                     l864 0B4E                       l936 0AC0                       l928 0AA8  
                     l858 0C1E                       l874 0B60                       l866 0B52  
                     l882 0C4C                       l890 0BD6                       l938 0AC6  
                     l892 0B7C                       l876 0B66                       l868 0B5A  
                     l884 0BB0                       l894 0B7E                       l878 0B6C  
                     l886 0BC0                       l896 0B82                       l888 0BC6  
                     l898 0B86                       l994 0C3C                       l996 0C3E  
                     l998 0BDE                       u200 095C                       u201 0958  
                     u210 0978                       u211 0974                       u220 0A1C  
                     u221 0A18                       u230 0A3A                       u231 0A36  
                     u240 0A50                       u241 0A4C                       u250 0B1E  
                     u251 0B1A                       u307 0A7E                       u260 0B3C  
                     u261 0B38                       u317 0A8C                       u270 0B0A  
                     u190 093E                       u407 09EA                       u271 0B06  
                     u191 093A                       u327 0A9C                       u280 08D4  
                     u417 0C18                       u337 0B54                       u281 08D0  
                     u347 0B88                       u357 09A4                       u367 09B2  
                     u377 09BC                       u297 0BEC                       u387 09D2  
                     u397 09E0               LEER_LCD@aux 0001                       wreg 000FE8  
            ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001            ENVIA_CHAR@dato 0002  
                    l1000 0BE2                      l1002 0BE6                      l1100 0A50  
                    l1004 0BF6                      l1110 0B2A                      l1102 0A58  
                    l1006 0BFA                      l1120 0AF8                      l1112 0B3C  
                    l1104 0A5E                      l1008 0BFE                      l1114 0ACE  
                    l1106 0B0E                      l1122 0810                      l1130 08B4  
                    l1116 0ADA                      l1108 0B1E                      l1140 08FC  
                    l1132 08C4                      l1124 08AA                      l1118 0AF6  
                    l1070 092C                      l1142 0904                      l1134 08D4  
                    l1126 08AE                      l1080 0962                      l1072 093E  
                    l1144 090C                      l1136 08E6                      l1128 08B2  
                    l1082 0978                      l1074 0946                      l1090 0A0A  
                    l1146 0914                      l1138 08F2                      l1084 0980  
                    l1076 094E                      l1068 0924                      l1092 0A1C  
                    l1086 0982                      l1078 095C                      l1094 0A24  
                    l1088 0988                      l1096 0A2C                      l1098 0A3A  
                    STR_1 0801                      _LATD 000F8C                      _main 08AA  
                    start 0000             ?_CURSOR_ONOFF 0001              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0A0A       __size_of_BORRAR_LCD 0008  
                   ?_main 0001           __end_of___lwdiv 0998           __end_of___lwmod 0A6E  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 0C22  
            __end_of_main 0924           _ESCRIBE_MENSAJE 0ACE              _ad_resultado 0019  
                  ??_main 000F             __activetblptr 000001                    _ADCON0 000FC2  
                  _ADCON1 000FC1                    _ADCON2 000FC0                    _ADRESH 000FC4  
                  _ADRESL 000FC3          __end_of_lcd_conf 0C06                    _decena 0013  
    __end_of_ENVIA_NIBBLE 0C22                 ??___lwdiv 000A                 ??___lwmod 0005  
     __size_of_POS_CURSOR 003A                    _millar 0017                    clear_0 0C28  
                  _unidad 0011              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 0C2E              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0B0C            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0C5C          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0BDE  
      __end_of_LCD_CONFIG 0ACE        __end_of_ENVIA_CHAR 0BAE        __size_of_convierte 009A  
              ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001        __size_of_init_conf 0010  
               ?_lcd_conf 0001              ??_POS_CURSOR 0005     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
                 ___lwdiv 0924                   ___lwmod 0A0A              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 0B7A         __end_of_convierte 08AA                   __pcinit 0C22  
      __end_of_POS_CURSOR 0B46                   __ramtop 0800                   _centena 0015  
                 __ptext0 08AA                   __ptext1 0BDE                   __ptext2 0A6E  
                 __ptext3 0BAE                   __ptext4 0C4C                   __ptext5 0C54  
                 __ptext6 0C3C                   __ptext7 0810                   __ptext8 0A0A  
                 __ptext9 0924         __end_of_init_conf 0C4C                ??_lcd_conf 0005  
            _ENVIA_NIBBLE 0C06      end_of_initialization 0C2E                   postinc0 000FEE  
   __size_of_CURSOR_ONOFF 0030                 _TRISCbits 000F94         __size_of_LEER_LCD 0072  
            _CURSOR_ONOFF 0BAE        CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004  
     start_initialization 0C22         ENVIA_LCD_CMD@dato 0002               __pbssCOMRAM 0011  
     __end_of_CURSOR_HOME 0C54         __size_of_lcd_conf 0028          ___lwdiv@dividend 0006  
                ?___lwdiv 0006                  ?___lwmod 0001               __smallconst 0800  
               _convierte 0810           convierte@numero 000D          ___lwdiv@quotient 000A  
               _init_conf 0C3C                  _LEER_LCD 0998                  _LATCbits 000F8B  
                _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 003E                _ADCON0bits 000FC2                ?_convierte 000D  
             _CURSOR_HOME 0C4C                ?_init_conf 0001    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        __size_of___lwdiv 0074          __size_of___lwmod 0064           ___lwdiv@divisor 0008  
         ___lwdiv@counter 000C                  __ptext10 0B0C                  __ptext11 0B46  
                __ptext12 0ACE                  __ptext13 0B7A                  __ptext14 0998  
                __ptext15 0C06                _BORRAR_LCD 0C54                  _lcd_conf 0BDE  
           __size_of_main 007A                _LCD_CONFIG 0A6E                _ENVIA_CHAR 0B7A  
           _ENVIA_LCD_CMD 0B46               ??_convierte 000F         ??_ESCRIBE_MENSAJE 0007  
             ??_init_conf 0001     ESCRIBE_MENSAJE@cadena 0004          ___lwmod@dividend 0001  
          ?_ENVIA_LCD_CMD 0001           ___lwmod@divisor 0003           ___lwmod@counter 0005  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001                _POS_CURSOR 0B0C  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
