

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 17 15:33:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F4550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	smallconst
    65  000800                     __psmallconst:
    66                           	callstack 0
    67  000800  00                 	db	0
    68  000801                     _boton1:
    69                           	callstack 0
    70  000801  42                 	db	66
    71  000802  6F                 	db	111
    72  000803  74                 	db	116
    73  000804  6F                 	db	111
    74  000805  6E                 	db	110
    75  000806  20                 	db	32
    76  000807  49                 	db	73
    77  000808  4E                 	db	78
    78  000809  54                 	db	84
    79  00080A  30                 	db	48
    80  00080B  20                 	db	32
    81  00080C  70                 	db	112
    82  00080D  72                 	db	114
    83  00080E  65                 	db	101
    84  00080F  73                 	db	115
    85  000810  69                 	db	105
    86  000811  6F                 	db	111
    87  000812  6E                 	db	110
    88  000813  61                 	db	97
    89  000814  64                 	db	100
    90  000815  6F                 	db	111
    91  000816  00                 	db	0
    92  000817                     __end_of_boton1:
    93                           	callstack 0
    94  000817                     _mensaje1:
    95                           	callstack 0
    96  000817  45                 	db	69
    97  000818  6A                 	db	106
    98  000819  65                 	db	101
    99  00081A  72                 	db	114
   100  00081B  63                 	db	99
   101  00081C  69                 	db	105
   102  00081D  63                 	db	99
   103  00081E  69                 	db	105
   104  00081F  6F                 	db	111
   105  000820  20                 	db	32
   106  000821  4A                 	db	74
   107  000822  75                 	db	117
   108  000823  65                 	db	101
   109  000824  76                 	db	118
   110  000825  65                 	db	101
   111  000826  73                 	db	115
   112  000827  00                 	db	0
   113  000828                     __end_of_mensaje1:
   114                           	callstack 0
   115  0000                     _RCREG	set	4014
   116  0000                     _LATDbits	set	3980
   117  0000                     _PIR1bits	set	3998
   118  0000                     _TXREG	set	4013
   119  0000                     _TXSTAbits	set	4012
   120  0000                     _RCSTAbits	set	4011
   121  0000                     _SPBRG	set	4015
   122  0000                     _TRISDbits	set	3989
   123  0000                     _IPR1bits	set	3999
   124  0000                     _PIE1bits	set	3997
   125  0000                     _INTCONbits	set	4082
   126  0000                     _RCONbits	set	4048
   127  000828                     STR_1:
   128  000828  54                 	db	84	;'T'
   129  000829  65                 	db	101	;'e'
   130  00082A  63                 	db	99	;'c'
   131  00082B  6C                 	db	108	;'l'
   132  00082C  61                 	db	97	;'a'
   133  00082D  20                 	db	32
   134  00082E  31                 	db	49	;'1'
   135  00082F  20                 	db	32
   136  000830  70                 	db	112	;'p'
   137  000831  72                 	db	114	;'r'
   138  000832  65                 	db	101	;'e'
   139  000833  73                 	db	115	;'s'
   140  000834  69                 	db	105	;'i'
   141  000835  6F                 	db	111	;'o'
   142  000836  6E                 	db	110	;'n'
   143  000837  61                 	db	97	;'a'
   144  000838  64                 	db	100	;'d'
   145  000839  61                 	db	97	;'a'
   146  00083A  00                 	db	0
   147  00083B                     STR_2:
   148  00083B  54                 	db	84	;'T'
   149  00083C  65                 	db	101	;'e'
   150  00083D  63                 	db	99	;'c'
   151  00083E  6C                 	db	108	;'l'
   152  00083F  61                 	db	97	;'a'
   153  000840  20                 	db	32
   154  000841  32                 	db	50	;'2'
   155  000842  20                 	db	32
   156  000843  70                 	db	112	;'p'
   157  000844  72                 	db	114	;'r'
   158  000845  65                 	db	101	;'e'
   159  000846  73                 	db	115	;'s'
   160  000847  69                 	db	105	;'i'
   161  000848  6F                 	db	111	;'o'
   162  000849  6E                 	db	110	;'n'
   163  00084A  61                 	db	97	;'a'
   164  00084B  64                 	db	100	;'d'
   165  00084C  61                 	db	97	;'a'
   166  00084D  00                 	db	0
   167  00084E                     STR_3:
   168  00084E  54                 	db	84	;'T'
   169  00084F  65                 	db	101	;'e'
   170  000850  63                 	db	99	;'c'
   171  000851  6C                 	db	108	;'l'
   172  000852  61                 	db	97	;'a'
   173  000853  20                 	db	32
   174  000854  33                 	db	51	;'3'
   175  000855  20                 	db	32
   176  000856  70                 	db	112	;'p'
   177  000857  72                 	db	114	;'r'
   178  000858  65                 	db	101	;'e'
   179  000859  73                 	db	115	;'s'
   180  00085A  69                 	db	105	;'i'
   181  00085B  6F                 	db	111	;'o'
   182  00085C  6E                 	db	110	;'n'
   183  00085D  61                 	db	97	;'a'
   184  00085E  64                 	db	100	;'d'
   185  00085F  61                 	db	97	;'a'
   186  000860  00                 	db	0
   187  000861                     STR_4:
   188  000861  54                 	db	84	;'T'
   189  000862  65                 	db	101	;'e'
   190  000863  63                 	db	99	;'c'
   191  000864  6C                 	db	108	;'l'
   192  000865  61                 	db	97	;'a'
   193  000866  20                 	db	32
   194  000867  34                 	db	52	;'4'
   195  000868  20                 	db	32
   196  000869  70                 	db	112	;'p'
   197  00086A  72                 	db	114	;'r'
   198  00086B  65                 	db	101	;'e'
   199  00086C  73                 	db	115	;'s'
   200  00086D  69                 	db	105	;'i'
   201  00086E  6F                 	db	111	;'o'
   202  00086F  6E                 	db	110	;'n'
   203  000870  61                 	db	97	;'a'
   204  000871  64                 	db	100	;'d'
   205  000872  61                 	db	97	;'a'
   206  000873  00                 	db	0
   207  000874                     STR_5:
   208  000874  54                 	db	84	;'T'
   209  000875  65                 	db	101	;'e'
   210  000876  63                 	db	99	;'c'
   211  000877  6C                 	db	108	;'l'
   212  000878  61                 	db	97	;'a'
   213  000879  20                 	db	32
   214  00087A  65                 	db	101	;'e'
   215  00087B  72                 	db	114	;'r'
   216  00087C  72                 	db	114	;'r'
   217  00087D  6F                 	db	111	;'o'
   218  00087E  6E                 	db	110	;'n'
   219  00087F  65                 	db	101	;'e'
   220  000880  61                 	db	97	;'a'
   221  000881  00                 	db	0
   222  000882  00                 	db	0	; dummy byte at the end
   223  0000                     
   224                           ; #config settings
   225                           
   226                           	psect	cinit
   227  000B26                     __pcinit:
   228                           	callstack 0
   229  000B26                     start_initialization:
   230                           	callstack 0
   231  000B26                     __initialization:
   232                           	callstack 0
   233  000B26                     end_of_initialization:
   234                           	callstack 0
   235  000B26                     __end_of__initialization:
   236                           	callstack 0
   237  000B26  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238  000B28  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239  000B2A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  000B2C  6EF8               	movwf	tblptru,c
   241  000B2E  0100               	movlb	0
   242  000B30  EF7A  F005         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	cstackCOMRAM
   245  000001                     __pcstackCOMRAM:
   246                           	callstack 0
   247  000001                     ?i2_strlen:
   248                           	callstack 0
   249  000001                     i2strlen@s:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x0
   253  000001                     	ds	2
   254  000003                     i2strlen@a:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000003                     	ds	2
   259  000005                     i2SERIAL_ESCRIBE_MENSAJE@cadena:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000005                     	ds	2
   264  000007                     ??i2_SERIAL_ESCRIBE_MENSAJE:
   265                           
   266                           ; 1 bytes @ 0x6
   267  000007                     	ds	2
   268  000009                     i2SERIAL_ESCRIBE_MENSAJE@tam:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x8
   272  000009                     	ds	1
   273  00000A                     i2SERIAL_ESCRIBE_MENSAJE@x:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x9
   277  00000A                     	ds	1
   278  00000B                     ??_INT0_ISR:
   279                           
   280                           ; 1 bytes @ 0xA
   281  00000B                     	ds	6
   282  000011                     ?i1_strlen:
   283                           	callstack 0
   284  000011                     i1strlen@s:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x10
   288  000011                     	ds	2
   289  000013                     i1strlen@a:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x12
   293  000013                     	ds	2
   294  000015                     i1SERIAL_ESCRIBE_MENSAJE@cadena:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x14
   298  000015                     	ds	2
   299  000017                     ??i1_SERIAL_ESCRIBE_MENSAJE:
   300                           
   301                           ; 1 bytes @ 0x16
   302  000017                     	ds	2
   303  000019                     i1SERIAL_ESCRIBE_MENSAJE@tam:
   304                           	callstack 0
   305                           
   306                           ; 1 bytes @ 0x18
   307  000019                     	ds	1
   308  00001A                     i1SERIAL_ESCRIBE_MENSAJE@x:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x19
   312  00001A                     	ds	1
   313  00001B                     ??_EUSART_RX_ISR:
   314                           
   315                           ; 1 bytes @ 0x1A
   316  00001B                     	ds	9
   317  000024                     ?_strlen:
   318                           	callstack 0
   319  000024                     strlen@s:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x23
   323  000024                     	ds	2
   324  000026                     strlen@a:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x25
   328  000026                     	ds	2
   329  000028                     SERIAL_ESCRIBE_MENSAJE@cadena:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x27
   333  000028                     	ds	2
   334  00002A                     ??_SERIAL_ESCRIBE_MENSAJE:
   335                           
   336                           ; 1 bytes @ 0x29
   337  00002A                     	ds	2
   338  00002C                     SERIAL_ESCRIBE_MENSAJE@tam:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x2B
   342  00002C                     	ds	1
   343  00002D                     SERIAL_ESCRIBE_MENSAJE@x:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x2C
   347  00002D                     	ds	1
   348  00002E                     
   349                           ; 1 bytes @ 0x2D
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 44 in file "maincode3.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   369 ;;      Params:         0       0       0       0       0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0       0       0
   372 ;;      Totals:         0       0       0       0       0       0       0       0       0
   373 ;;Total ram usage:        0 bytes
   374 ;; Hardware stack levels required when called: 8
   375 ;; This function calls:
   376 ;;		_EUSART_conf
   377 ;;		_INIT_conf
   378 ;;		_SERIAL_ESCRIBE_MENSAJE
   379 ;;		_SERIAL_NEXTLINE
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386  000AF4                     __ptext0:
   387                           	callstack 0
   388  000AF4                     _main:
   389                           	callstack 23
   390  000AF4                     
   391                           ;maincode3.c: 45:     INIT_conf();
   392  000AF4  EC8A  F005         	call	_INIT_conf	;wreg free
   393  000AF8                     
   394                           ;maincode3.c: 46:     EUSART_conf();
   395  000AF8  EC9A  F005         	call	_EUSART_conf	;wreg free
   396  000AFC                     
   397                           ;maincode3.c: 47:     SERIAL_ESCRIBE_MENSAJE(mensaje1);
   398  000AFC  0E17               	movlw	low _mensaje1
   399  000AFE  6E28               	movwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   400  000B00  0E08               	movlw	high _mensaje1
   401  000B02  6E29               	movwf	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   402  000B04  EC42  F004         	call	_SERIAL_ESCRIBE_MENSAJE	;wreg free
   403  000B08                     
   404                           ;maincode3.c: 48:     SERIAL_NEXTLINE();
   405  000B08  EC41  F005         	call	_SERIAL_NEXTLINE	;wreg free
   406  000B0C                     l61:
   407  000B0C  EF86  F005         	goto	l61
   408  000B10  EF79  F000         	goto	start
   409  000B14                     __end_of_main:
   410                           	callstack 0
   411                           
   412 ;; *************** function _SERIAL_NEXTLINE *****************
   413 ;; Defined at:
   414 ;;		line 37 in file "maincode3.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels used: 1
   434 ;; Hardware stack levels required when called: 6
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text1
   443  000A82                     __ptext1:
   444                           	callstack 0
   445  000A82                     _SERIAL_NEXTLINE:
   446                           	callstack 24
   447  000A82                     
   448                           ;maincode3.c: 38:     TXREG = 0x0A;
   449  000A82  0E0A               	movlw	10
   450  000A84  6EAD               	movwf	173,c	;volatile
   451  000A86                     l50:
   452  000A86  A2AC               	btfss	172,1,c	;volatile
   453  000A88  EF48  F005         	goto	u61
   454  000A8C  EF4A  F005         	goto	u60
   455  000A90                     u61:
   456  000A90  EF43  F005         	goto	l50
   457  000A94                     u60:
   458  000A94                     
   459                           ;maincode3.c: 40:     TXREG = 0x0D;
   460  000A94  0E0D               	movlw	13
   461  000A96  6EAD               	movwf	173,c	;volatile
   462  000A98                     l53:
   463  000A98  A2AC               	btfss	172,1,c	;volatile
   464  000A9A  EF51  F005         	goto	u71
   465  000A9E  EF53  F005         	goto	u70
   466  000AA2                     u71:
   467  000AA2  EF4C  F005         	goto	l53
   468  000AA6                     u70:
   469  000AA6  0012               	return		;funcret
   470  000AA8                     __end_of_SERIAL_NEXTLINE:
   471                           	callstack 0
   472                           
   473 ;; *************** function _SERIAL_ESCRIBE_MENSAJE *****************
   474 ;; Defined at:
   475 ;;		line 27 in file "maincode3.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  cadena          2   39[COMRAM] PTR const unsigned char 
   478 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   479 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  x               1   44[COMRAM] unsigned char 
   482 ;;  tam             1   43[COMRAM] unsigned char 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   492 ;;      Params:         2       0       0       0       0       0       0       0       0
   493 ;;      Locals:         2       0       0       0       0       0       0       0       0
   494 ;;      Temps:          2       0       0       0       0       0       0       0       0
   495 ;;      Totals:         6       0       0       0       0       0       0       0       0
   496 ;;Total ram usage:        6 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 7
   499 ;; This function calls:
   500 ;;		_strlen
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text2
   507  000884                     __ptext2:
   508                           	callstack 0
   509  000884                     _SERIAL_ESCRIBE_MENSAJE:
   510                           	callstack 23
   511  000884                     
   512                           ;maincode3.c: 29:     tam = strlen(cadena);
   513  000884  C028  F024         	movff	SERIAL_ESCRIBE_MENSAJE@cadena,strlen@s
   514  000888  C029  F025         	movff	SERIAL_ESCRIBE_MENSAJE@cadena+1,strlen@s+1
   515  00088C  ECEA  F004         	call	_strlen	;wreg free
   516  000890  5024               	movf	?_strlen^0,w,c
   517  000892  6E2C               	movwf	SERIAL_ESCRIBE_MENSAJE@tam^0,c
   518  000894                     
   519                           ;maincode3.c: 31:     for(x=0;x<tam;x++){
   520  000894  0E00               	movlw	0
   521  000896  6E2D               	movwf	SERIAL_ESCRIBE_MENSAJE@x^0,c
   522  000898  EF63  F004         	goto	l947
   523  00089C                     l943:
   524                           
   525                           ;maincode3.c: 32:         TXREG = cadena[x];
   526  00089C  502D               	movf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   527  00089E  2428               	addwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
   528  0008A0  6E2A               	movwf	??_SERIAL_ESCRIBE_MENSAJE^0,c
   529  0008A2  0E00               	movlw	0
   530  0008A4  2029               	addwfc	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
   531  0008A6  6E2B               	movwf	(??_SERIAL_ESCRIBE_MENSAJE+1)^0,c
   532  0008A8  C02A  FFF6         	movff	??_SERIAL_ESCRIBE_MENSAJE,tblptrl
   533  0008AC  C02B  FFF7         	movff	??_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
   534  0008B0                     	if	0	;tblptru may be non-zero
   535  0008B0                     	endif
   536  0008B0                     	if	0	;tblptru may be non-zero
   537  0008B0                     	endif
   538  0008B0  0008               	tblrd		*
   539  0008B2  CFF5 FFAD          	movff	tablat,4013	;volatile
   540  0008B6                     l43:
   541  0008B6  A2AC               	btfss	172,1,c	;volatile
   542  0008B8  EF60  F004         	goto	u191
   543  0008BC  EF62  F004         	goto	u190
   544  0008C0                     u191:
   545  0008C0  EF5B  F004         	goto	l43
   546  0008C4                     u190:
   547  0008C4                     
   548                           ;maincode3.c: 34:     }
   549  0008C4  2A2D               	incf	SERIAL_ESCRIBE_MENSAJE@x^0,f,c
   550  0008C6                     l947:
   551  0008C6  502C               	movf	SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
   552  0008C8  5C2D               	subwf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   553  0008CA  A0D8               	btfss	status,0,c
   554  0008CC  EF6A  F004         	goto	u201
   555  0008D0  EF6C  F004         	goto	u200
   556  0008D4                     u201:
   557  0008D4  EF4E  F004         	goto	l943
   558  0008D8                     u200:
   559  0008D8  0012               	return		;funcret
   560  0008DA                     __end_of_SERIAL_ESCRIBE_MENSAJE:
   561                           	callstack 0
   562                           
   563 ;; *************** function _strlen *****************
   564 ;; Defined at:
   565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;  s               2   35[COMRAM] PTR const unsigned char 
   568 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   569 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  a               2   37[COMRAM] PTR const unsigned char 
   572 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   573 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  2   35[COMRAM] unsigned int 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   583 ;;      Params:         2       0       0       0       0       0       0       0       0
   584 ;;      Locals:         2       0       0       0       0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 6
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_SERIAL_ESCRIBE_MENSAJE
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text3
   598  0009D4                     __ptext3:
   599                           	callstack 0
   600  0009D4                     _strlen:
   601                           	callstack 23
   602  0009D4  C024  F026         	movff	strlen@s,strlen@a
   603  0009D8  C025  F027         	movff	strlen@s+1,strlen@a+1
   604  0009DC  EFF2  F004         	goto	l909
   605  0009E0                     l907:
   606  0009E0  4A24               	infsnz	strlen@s^0,f,c
   607  0009E2  2A25               	incf	(strlen@s+1)^0,f,c
   608  0009E4                     l909:
   609  0009E4  C024  FFF6         	movff	strlen@s,tblptrl
   610  0009E8  C025  FFF7         	movff	strlen@s+1,tblptrh
   611  0009EC                     	if	0	;tblptru may be non-zero
   612  0009EC                     	endif
   613  0009EC                     	if	0	;tblptru may be non-zero
   614  0009EC                     	endif
   615  0009EC  0008               	tblrd		*
   616  0009EE  50F5               	movf	tablat,w,c
   617  0009F0  0900               	iorlw	0
   618  0009F2  A4D8               	btfss	status,2,c
   619  0009F4  EFFE  F004         	goto	u161
   620  0009F8  EF00  F005         	goto	u160
   621  0009FC                     u161:
   622  0009FC  EFF0  F004         	goto	l907
   623  000A00                     u160:
   624  000A00  5026               	movf	strlen@a^0,w,c
   625  000A02  5C24               	subwf	strlen@s^0,w,c
   626  000A04  6E24               	movwf	?_strlen^0,c
   627  000A06  5027               	movf	(strlen@a+1)^0,w,c
   628  000A08  5825               	subwfb	(strlen@s+1)^0,w,c
   629  000A0A  6E25               	movwf	(?_strlen+1)^0,c
   630  000A0C  0012               	return		;funcret
   631  000A0E                     __end_of_strlen:
   632                           	callstack 0
   633                           
   634 ;; *************** function _INIT_conf *****************
   635 ;; Defined at:
   636 ;;		line 9 in file "maincode3.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2   34[None  ] int 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 6
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text4
   665  000B14                     __ptext4:
   666                           	callstack 0
   667  000B14                     _INIT_conf:
   668                           	callstack 24
   669  000B14                     
   670                           ;maincode3.c: 10:     RCONbits.IPEN = 1;
   671  000B14  8ED0               	bsf	208,7,c	;volatile
   672                           
   673                           ;maincode3.c: 11:     INTCONbits.GIEH = 1;
   674  000B16  8EF2               	bsf	242,7,c	;volatile
   675                           
   676                           ;maincode3.c: 12:     INTCONbits.GIEL = 1;
   677  000B18  8CF2               	bsf	242,6,c	;volatile
   678                           
   679                           ;maincode3.c: 13:     INTCONbits.INT0IE = 1;
   680  000B1A  88F2               	bsf	242,4,c	;volatile
   681                           
   682                           ;maincode3.c: 14:     PIE1bits.RCIE = 1;
   683  000B1C  8A9D               	bsf	157,5,c	;volatile
   684                           
   685                           ;maincode3.c: 15:     IPR1bits.RCIP = 0;
   686  000B1E  9A9F               	bcf	159,5,c	;volatile
   687                           
   688                           ;maincode3.c: 16:     TRISDbits.RD0 = 0;
   689  000B20  9095               	bcf	149,0,c	;volatile
   690                           
   691                           ;maincode3.c: 17:     TRISDbits.RD1 = 0;
   692  000B22  9295               	bcf	149,1,c	;volatile
   693  000B24  0012               	return		;funcret
   694  000B26                     __end_of_INIT_conf:
   695                           	callstack 0
   696                           
   697 ;; *************** function _EUSART_conf *****************
   698 ;; Defined at:
   699 ;;		line 20 in file "maincode3.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  2   37[None  ] int 
   706 ;; Registers used:
   707 ;;		wreg, status,2
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   713 ;;      Params:         0       0       0       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 6
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text5
   728  000B34                     __ptext5:
   729                           	callstack 0
   730  000B34                     _EUSART_conf:
   731                           	callstack 24
   732  000B34                     
   733                           ;maincode3.c: 21:     SPBRG = 77;
   734  000B34  0E4D               	movlw	77
   735  000B36  6EAF               	movwf	175,c	;volatile
   736  000B38                     
   737                           ;maincode3.c: 22:     RCSTAbits.SPEN = 1;
   738  000B38  8EAB               	bsf	171,7,c	;volatile
   739  000B3A                     
   740                           ;maincode3.c: 23:     TXSTAbits.TXEN = 1;
   741  000B3A  8AAC               	bsf	172,5,c	;volatile
   742  000B3C                     
   743                           ;maincode3.c: 24:     RCSTAbits.CREN = 1;
   744  000B3C  88AB               	bsf	171,4,c	;volatile
   745  000B3E  0012               	return		;funcret
   746  000B40                     __end_of_EUSART_conf:
   747                           	callstack 0
   748                           
   749 ;; *************** function _EUSART_RX_ISR *****************
   750 ;; Defined at:
   751 ;;		line 59 in file "maincode3.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          9       0       0       0       0       0       0       0       0
   768 ;;      Totals:         9       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        9 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 5
   772 ;; This function calls:
   773 ;;		i1_SERIAL_ESCRIBE_MENSAJE
   774 ;;		i1_SERIAL_NEXTLINE
   775 ;; This function is called by:
   776 ;;		Interrupt level 1
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	intcodelo
   781  000018                     __pintcodelo:
   782                           	callstack 0
   783  000018                     _EUSART_RX_ISR:
   784                           	callstack 23
   785                           
   786                           ;incstack = 0
   787  000018  802E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   788  00001A  CFD8 F01D          	movff	status,??_EUSART_RX_ISR+2
   789  00001E  CFE8 F01E          	movff	wreg,??_EUSART_RX_ISR+3
   790  000022  CFE0 F01F          	movff	bsr,??_EUSART_RX_ISR+4
   791  000026  CFF6 F020          	movff	tblptrl,??_EUSART_RX_ISR+5
   792  00002A  CFF7 F021          	movff	tblptrh,??_EUSART_RX_ISR+6
   793  00002E  CFF8 F022          	movff	tblptru,??_EUSART_RX_ISR+7
   794  000032  CFF5 F023          	movff	tablat,??_EUSART_RX_ISR+8
   795  000036                     
   796                           ;maincode3.c: 60:     PIR1bits.RCIF = 0;
   797  000036  9A9E               	bcf	158,5,c	;volatile
   798                           
   799                           ;maincode3.c: 61:     switch(RCREG){
   800  000038  EF4C  F000         	goto	i1l1015
   801  00003C                     i1l75:
   802                           
   803                           ;maincode3.c: 63:             LATDbits.LD0 = 1;
   804  00003C  808C               	bsf	140,0,c	;volatile
   805  00003E                     
   806                           ;maincode3.c: 64:             SERIAL_ESCRIBE_MENSAJE("Tecla 1 presionada");
   807  00003E  0E28               	movlw	low STR_1
   808  000040  6E15               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   809  000042  0E08               	movlw	high STR_1
   810  000044  6E16               	movwf	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   811  000046  EC6D  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   812  00004A                     i1l997:
   813                           
   814                           ;maincode3.c: 65:             SERIAL_NEXTLINE();
   815  00004A  EC54  F005         	call	i1_SERIAL_NEXTLINE	;wreg free
   816                           
   817                           ;maincode3.c: 66:             break;
   818  00004E  EF69  F000         	goto	i1l81
   819  000052                     i1l77:
   820                           
   821                           ;maincode3.c: 68:             LATDbits.LD0 = 0;
   822  000052  908C               	bcf	140,0,c	;volatile
   823  000054                     
   824                           ;maincode3.c: 69:             SERIAL_ESCRIBE_MENSAJE("Tecla 2 presionada");
   825  000054  0E3B               	movlw	low STR_2
   826  000056  6E15               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   827  000058  0E08               	movlw	high STR_2
   828  00005A  6E16               	movwf	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   829  00005C  EC6D  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   830  000060  EF25  F000         	goto	i1l997
   831  000064                     i1l78:
   832                           
   833                           ;maincode3.c: 73:             LATDbits.LD1 = 1;
   834  000064  828C               	bsf	140,1,c	;volatile
   835  000066                     
   836                           ;maincode3.c: 74:             SERIAL_ESCRIBE_MENSAJE("Tecla 3 presionada");
   837  000066  0E4E               	movlw	low STR_3
   838  000068  6E15               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   839  00006A  0E08               	movlw	high STR_3
   840  00006C  6E16               	movwf	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   841  00006E  EC6D  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   842  000072  EF25  F000         	goto	i1l997
   843  000076                     i1l79:
   844                           
   845                           ;maincode3.c: 78:             LATDbits.LD1 = 0;
   846  000076  928C               	bcf	140,1,c	;volatile
   847  000078                     
   848                           ;maincode3.c: 79:             SERIAL_ESCRIBE_MENSAJE("Tecla 4 presionada");
   849  000078  0E61               	movlw	low STR_4
   850  00007A  6E15               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   851  00007C  0E08               	movlw	high STR_4
   852  00007E  6E16               	movwf	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   853  000080  EC6D  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   854  000084  EF25  F000         	goto	i1l997
   855  000088                     i1l1011:
   856                           
   857                           ;maincode3.c: 83:             SERIAL_ESCRIBE_MENSAJE("Tecla erronea");
   858  000088  0E74               	movlw	low STR_5
   859  00008A  6E15               	movwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   860  00008C  0E08               	movlw	high STR_5
   861  00008E  6E16               	movwf	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   862  000090  EC6D  F004         	call	i1_SERIAL_ESCRIBE_MENSAJE	;wreg free
   863  000094  EF25  F000         	goto	i1l997
   864  000098                     i1l1015:
   865  000098  50AE               	movf	174,w,c	;volatile
   866  00009A  6E1B               	movwf	??_EUSART_RX_ISR^0,c
   867  00009C  6A1C               	clrf	(??_EUSART_RX_ISR+1)^0,c
   868                           
   869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   870                           ; Switch size 1, requested type "simple"
   871                           ; Number of cases is 1, Range of values is 0 to 0
   872                           ; switch strategies available:
   873                           ; Name         Instructions Cycles
   874                           ; simple_byte            4     3 (average)
   875                           ;	Chosen strategy is simple_byte
   876  00009E  501C               	movf	(??_EUSART_RX_ISR+1)^0,w,c
   877  0000A0  0A00               	xorlw	0	; case 0
   878  0000A2  B4D8               	btfsc	status,2,c
   879  0000A4  EF56  F000         	goto	i1l1025
   880  0000A8  EF44  F000         	goto	i1l1011
   881  0000AC                     i1l1025:
   882                           
   883                           ; Switch size 1, requested type "simple"
   884                           ; Number of cases is 4, Range of values is 49 to 52
   885                           ; switch strategies available:
   886                           ; Name         Instructions Cycles
   887                           ; simple_byte           13     7 (average)
   888                           ;	Chosen strategy is simple_byte
   889  0000AC  501B               	movf	??_EUSART_RX_ISR^0,w,c
   890  0000AE  0A31               	xorlw	49	; case 49
   891  0000B0  B4D8               	btfsc	status,2,c
   892  0000B2  EF1E  F000         	goto	i1l75
   893  0000B6  0A03               	xorlw	3	; case 50
   894  0000B8  B4D8               	btfsc	status,2,c
   895  0000BA  EF29  F000         	goto	i1l77
   896  0000BE  0A01               	xorlw	1	; case 51
   897  0000C0  B4D8               	btfsc	status,2,c
   898  0000C2  EF32  F000         	goto	i1l78
   899  0000C6  0A07               	xorlw	7	; case 52
   900  0000C8  B4D8               	btfsc	status,2,c
   901  0000CA  EF3B  F000         	goto	i1l79
   902  0000CE  EF44  F000         	goto	i1l1011
   903  0000D2                     i1l81:
   904  0000D2  C023  FFF5         	movff	??_EUSART_RX_ISR+8,tablat
   905  0000D6  C022  FFF8         	movff	??_EUSART_RX_ISR+7,tblptru
   906  0000DA  C021  FFF7         	movff	??_EUSART_RX_ISR+6,tblptrh
   907  0000DE  C020  FFF6         	movff	??_EUSART_RX_ISR+5,tblptrl
   908  0000E2  C01F  FFE0         	movff	??_EUSART_RX_ISR+4,bsr
   909  0000E6  C01E  FFE8         	movff	??_EUSART_RX_ISR+3,wreg
   910  0000EA  C01D  FFD8         	movff	??_EUSART_RX_ISR+2,status
   911  0000EE  902E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   912  0000F0  0010               	retfie	
   913  0000F2                     __end_of_EUSART_RX_ISR:
   914                           	callstack 0
   915                           
   916 ;; *************** function i1_SERIAL_NEXTLINE *****************
   917 ;; Defined at:
   918 ;;		line 37 in file "maincode3.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         0       0       0       0       0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         0       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        0 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 3
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_EUSART_RX_ISR
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text7
   947  000AA8                     __ptext7:
   948                           	callstack 0
   949  000AA8                     i1_SERIAL_NEXTLINE:
   950                           	callstack 24
   951  000AA8                     
   952                           ;maincode3.c: 38:     TXREG = 0x0A;
   953  000AA8  0E0A               	movlw	10
   954  000AAA  6EAD               	movwf	173,c	;volatile
   955  000AAC                     i1l50:
   956  000AAC  A2AC               	btfss	172,1,c	;volatile
   957  000AAE  EF5B  F005         	goto	i1u12_21
   958  000AB2  EF5D  F005         	goto	i1u12_20
   959  000AB6                     i1u12_21:
   960  000AB6  EF56  F005         	goto	i1l50
   961  000ABA                     i1u12_20:
   962  000ABA                     
   963                           ;maincode3.c: 40:     TXREG = 0x0D;
   964  000ABA  0E0D               	movlw	13
   965  000ABC  6EAD               	movwf	173,c	;volatile
   966  000ABE                     i1l53:
   967  000ABE  A2AC               	btfss	172,1,c	;volatile
   968  000AC0  EF64  F005         	goto	i1u13_21
   969  000AC4  EF66  F005         	goto	i1u13_20
   970  000AC8                     i1u13_21:
   971  000AC8  EF5F  F005         	goto	i1l53
   972  000ACC                     i1u13_20:
   973  000ACC  0012               	return		;funcret
   974  000ACE                     __end_ofi1_SERIAL_NEXTLINE:
   975                           	callstack 0
   976                           
   977 ;; *************** function i1_SERIAL_ESCRIBE_MENSAJE *****************
   978 ;; Defined at:
   979 ;;		line 27 in file "maincode3.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  cadena          2   20[COMRAM] PTR const unsigned char 
   982 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   983 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  x               1   25[COMRAM] unsigned char 
   986 ;;  tam             1   24[COMRAM] unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   996 ;;      Params:         2       0       0       0       0       0       0       0       0
   997 ;;      Locals:         2       0       0       0       0       0       0       0       0
   998 ;;      Temps:          2       0       0       0       0       0       0       0       0
   999 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1000 ;;Total ram usage:        6 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 4
  1003 ;; This function calls:
  1004 ;;		i1_strlen
  1005 ;; This function is called by:
  1006 ;;		_EUSART_RX_ISR
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text8
  1011  0008DA                     __ptext8:
  1012                           	callstack 0
  1013  0008DA                     i1_SERIAL_ESCRIBE_MENSAJE:
  1014                           	callstack 23
  1015  0008DA                     
  1016                           ;maincode3.c: 29:     tam = strlen(cadena);
  1017  0008DA  C015  F011         	movff	i1SERIAL_ESCRIBE_MENSAJE@cadena,i1strlen@s
  1018  0008DE  C016  F012         	movff	i1SERIAL_ESCRIBE_MENSAJE@cadena+1,i1strlen@s+1
  1019  0008E2  EC07  F005         	call	i1_strlen	;wreg free
  1020  0008E6  5011               	movf	?i1_strlen^0,w,c
  1021  0008E8  6E19               	movwf	i1SERIAL_ESCRIBE_MENSAJE@tam^0,c
  1022  0008EA                     
  1023                           ;maincode3.c: 31:     for(x=0;x<tam;x++){
  1024  0008EA  0E00               	movlw	0
  1025  0008EC  6E1A               	movwf	i1SERIAL_ESCRIBE_MENSAJE@x^0,c
  1026  0008EE  EF8E  F004         	goto	i1l961
  1027  0008F2                     i1l957:
  1028                           
  1029                           ;maincode3.c: 32:         TXREG = cadena[x];
  1030  0008F2  501A               	movf	i1SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1031  0008F4  2415               	addwf	i1SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  1032  0008F6  6E17               	movwf	??i1_SERIAL_ESCRIBE_MENSAJE^0,c
  1033  0008F8  0E00               	movlw	0
  1034  0008FA  2016               	addwfc	(i1SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1035  0008FC  6E18               	movwf	(??i1_SERIAL_ESCRIBE_MENSAJE+1)^0,c
  1036  0008FE  C017  FFF6         	movff	??i1_SERIAL_ESCRIBE_MENSAJE,tblptrl
  1037  000902  C018  FFF7         	movff	??i1_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
  1038  000906                     	if	0	;tblptru may be non-zero
  1039  000906                     	endif
  1040  000906                     	if	0	;tblptru may be non-zero
  1041  000906                     	endif
  1042  000906  0008               	tblrd		*
  1043  000908  CFF5 FFAD          	movff	tablat,4013	;volatile
  1044  00090C                     i1l43:
  1045  00090C  A2AC               	btfss	172,1,c	;volatile
  1046  00090E  EF8B  F004         	goto	i1u21_21
  1047  000912  EF8D  F004         	goto	i1u21_20
  1048  000916                     i1u21_21:
  1049  000916  EF86  F004         	goto	i1l43
  1050  00091A                     i1u21_20:
  1051  00091A                     
  1052                           ;maincode3.c: 34:     }
  1053  00091A  2A1A               	incf	i1SERIAL_ESCRIBE_MENSAJE@x^0,f,c
  1054  00091C                     i1l961:
  1055  00091C  5019               	movf	i1SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  1056  00091E  5C1A               	subwf	i1SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1057  000920  A0D8               	btfss	status,0,c
  1058  000922  EF95  F004         	goto	i1u22_21
  1059  000926  EF97  F004         	goto	i1u22_20
  1060  00092A                     i1u22_21:
  1061  00092A  EF79  F004         	goto	i1l957
  1062  00092E                     i1u22_20:
  1063  00092E  0012               	return		;funcret
  1064  000930                     __end_ofi1_SERIAL_ESCRIBE_MENSAJE:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function i1_strlen *****************
  1068 ;; Defined at:
  1069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  s               2   16[COMRAM] PTR const unsigned char 
  1072 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1073 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  a               2   18[COMRAM] PTR const unsigned char 
  1076 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1077 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   16[COMRAM] unsigned int 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        4 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 3
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		i1_SERIAL_ESCRIBE_MENSAJE
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text9
  1102  000A0E                     __ptext9:
  1103                           	callstack 0
  1104  000A0E                     i1_strlen:
  1105                           	callstack 23
  1106  000A0E  C011  F013         	movff	i1strlen@s,i1strlen@a
  1107  000A12  C012  F014         	movff	i1strlen@s+1,i1strlen@a+1
  1108  000A16  EF0F  F005         	goto	i1l919
  1109  000A1A                     i1l917:
  1110  000A1A  4A11               	infsnz	i1strlen@s^0,f,c
  1111  000A1C  2A12               	incf	(i1strlen@s+1)^0,f,c
  1112  000A1E                     i1l919:
  1113  000A1E  C011  FFF6         	movff	i1strlen@s,tblptrl
  1114  000A22  C012  FFF7         	movff	i1strlen@s+1,tblptrh
  1115  000A26                     	if	0	;tblptru may be non-zero
  1116  000A26                     	endif
  1117  000A26                     	if	0	;tblptru may be non-zero
  1118  000A26                     	endif
  1119  000A26  0008               	tblrd		*
  1120  000A28  50F5               	movf	tablat,w,c
  1121  000A2A  0900               	iorlw	0
  1122  000A2C  A4D8               	btfss	status,2,c
  1123  000A2E  EF1B  F005         	goto	i1u17_21
  1124  000A32  EF1D  F005         	goto	i1u17_20
  1125  000A36                     i1u17_21:
  1126  000A36  EF0D  F005         	goto	i1l917
  1127  000A3A                     i1u17_20:
  1128  000A3A  5013               	movf	i1strlen@a^0,w,c
  1129  000A3C  5C11               	subwf	i1strlen@s^0,w,c
  1130  000A3E  6E11               	movwf	?i1_strlen^0,c
  1131  000A40  5014               	movf	(i1strlen@a+1)^0,w,c
  1132  000A42  5812               	subwfb	(i1strlen@s+1)^0,w,c
  1133  000A44  6E12               	movwf	(?i1_strlen+1)^0,c
  1134  000A46  0012               	return		;funcret
  1135  000A48                     __end_ofi1_strlen:
  1136                           	callstack 0
  1137                           
  1138 ;; *************** function _INT0_ISR *****************
  1139 ;; Defined at:
  1140 ;;		line 52 in file "maincode3.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1156 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1157 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1158 ;;Total ram usage:        6 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 2
  1161 ;; This function calls:
  1162 ;;		i2_SERIAL_ESCRIBE_MENSAJE
  1163 ;;		i2_SERIAL_NEXTLINE
  1164 ;; This function is called by:
  1165 ;;		Interrupt level 2
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	intcode
  1170  000008                     __pintcode:
  1171                           	callstack 0
  1172  000008                     _INT0_ISR:
  1173                           	callstack 23
  1174                           
  1175                           ;incstack = 0
  1176  000008  822E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1177  00000A  EDC3  F004         	call	int_func,f	;refresh shadow registers
  1178                           
  1179                           	psect	intcode_body
  1180  000986                     __pintcode_body:
  1181                           	callstack 23
  1182  000986                     int_func:
  1183                           	callstack 23
  1184  000986  0006               	pop		; remove dummy address from shadow register refresh
  1185  000988  CFF6 F00D          	movff	tblptrl,??_INT0_ISR+2
  1186  00098C  CFF7 F00E          	movff	tblptrh,??_INT0_ISR+3
  1187  000990  CFF8 F00F          	movff	tblptru,??_INT0_ISR+4
  1188  000994  CFF5 F010          	movff	tablat,??_INT0_ISR+5
  1189  000998                     
  1190                           ;maincode3.c: 53:     INTCONbits.INT0IF = 0;
  1191  000998  92F2               	bcf	242,1,c	;volatile
  1192  00099A                     
  1193                           ;maincode3.c: 54:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1194  00099A  0E04               	movlw	4
  1195  00099C  6E0C               	movwf	(??_INT0_ISR+1)^0,c
  1196  00099E  0E0C               	movlw	12
  1197  0009A0  6E0B               	movwf	??_INT0_ISR^0,c
  1198  0009A2  0E34               	movlw	52
  1199  0009A4                     i2u25_47:
  1200  0009A4  2EE8               	decfsz	wreg,f,c
  1201  0009A6  D7FE               	bra	i2u25_47
  1202  0009A8  2E0B               	decfsz	??_INT0_ISR^0,f,c
  1203  0009AA  D7FC               	bra	i2u25_47
  1204  0009AC  2E0C               	decfsz	(??_INT0_ISR+1)^0,f,c
  1205  0009AE  D7FA               	bra	i2u25_47
  1206  0009B0                     
  1207                           ;maincode3.c: 55:     SERIAL_ESCRIBE_MENSAJE(boton1);
  1208  0009B0  0E01               	movlw	low _boton1
  1209  0009B2  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
  1210  0009B4  0E08               	movlw	high _boton1
  1211  0009B6  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
  1212  0009B8  EC98  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
  1213  0009BC                     
  1214                           ;maincode3.c: 56:     SERIAL_NEXTLINE();
  1215  0009BC  EC67  F005         	call	i2_SERIAL_NEXTLINE	;wreg free
  1216  0009C0  C010  FFF5         	movff	??_INT0_ISR+5,tablat
  1217  0009C4  C00F  FFF8         	movff	??_INT0_ISR+4,tblptru
  1218  0009C8  C00E  FFF7         	movff	??_INT0_ISR+3,tblptrh
  1219  0009CC  C00D  FFF6         	movff	??_INT0_ISR+2,tblptrl
  1220  0009D0  922E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1221  0009D2  0011               	retfie		f
  1222  0009D4                     __end_of_INT0_ISR:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function i2_SERIAL_NEXTLINE *****************
  1226 ;; Defined at:
  1227 ;;		line 37 in file "maincode3.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_INT0_ISR
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text11
  1255  000ACE                     __ptext11:
  1256                           	callstack 0
  1257  000ACE                     i2_SERIAL_NEXTLINE:
  1258                           	callstack 24
  1259  000ACE                     
  1260                           ;maincode3.c: 38:     TXREG = 0x0A;
  1261  000ACE  0E0A               	movlw	10
  1262  000AD0  6EAD               	movwf	173,c	;volatile
  1263  000AD2                     i2l50:
  1264  000AD2  A2AC               	btfss	172,1,c	;volatile
  1265  000AD4  EF6E  F005         	goto	i2u14_41
  1266  000AD8  EF70  F005         	goto	i2u14_40
  1267  000ADC                     i2u14_41:
  1268  000ADC  EF69  F005         	goto	i2l50
  1269  000AE0                     i2u14_40:
  1270  000AE0                     
  1271                           ;maincode3.c: 40:     TXREG = 0x0D;
  1272  000AE0  0E0D               	movlw	13
  1273  000AE2  6EAD               	movwf	173,c	;volatile
  1274  000AE4                     i2l53:
  1275  000AE4  A2AC               	btfss	172,1,c	;volatile
  1276  000AE6  EF77  F005         	goto	i2u15_41
  1277  000AEA  EF79  F005         	goto	i2u15_40
  1278  000AEE                     i2u15_41:
  1279  000AEE  EF72  F005         	goto	i2l53
  1280  000AF2                     i2u15_40:
  1281  000AF2  0012               	return		;funcret
  1282  000AF4                     __end_ofi2_SERIAL_NEXTLINE:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function i2_SERIAL_ESCRIBE_MENSAJE *****************
  1286 ;; Defined at:
  1287 ;;		line 27 in file "maincode3.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  1290 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1291 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  x               1    9[COMRAM] unsigned char 
  1294 ;;  tam             1    8[COMRAM] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1304 ;;      Params:         2       0       0       0       0       0       0       0       0
  1305 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1306 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1307 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1308 ;;Total ram usage:        6 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 1
  1311 ;; This function calls:
  1312 ;;		i2_strlen
  1313 ;; This function is called by:
  1314 ;;		_INT0_ISR
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           	psect	text12
  1319  000930                     __ptext12:
  1320                           	callstack 0
  1321  000930                     i2_SERIAL_ESCRIBE_MENSAJE:
  1322                           	callstack 23
  1323  000930                     
  1324                           ;maincode3.c: 29:     tam = strlen(cadena);
  1325  000930  C005  F001         	movff	i2SERIAL_ESCRIBE_MENSAJE@cadena,i2strlen@s
  1326  000934  C006  F002         	movff	i2SERIAL_ESCRIBE_MENSAJE@cadena+1,i2strlen@s+1
  1327  000938  EC24  F005         	call	i2_strlen	;wreg free
  1328  00093C  5001               	movf	?i2_strlen^0,w,c
  1329  00093E  6E09               	movwf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,c
  1330  000940                     
  1331                           ;maincode3.c: 31:     for(x=0;x<tam;x++){
  1332  000940  0E00               	movlw	0
  1333  000942  6E0A               	movwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,c
  1334  000944  EFB9  F004         	goto	i2l975
  1335  000948                     i2l971:
  1336                           
  1337                           ;maincode3.c: 32:         TXREG = cadena[x];
  1338  000948  500A               	movf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1339  00094A  2405               	addwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  1340  00094C  6E07               	movwf	??i2_SERIAL_ESCRIBE_MENSAJE^0,c
  1341  00094E  0E00               	movlw	0
  1342  000950  2006               	addwfc	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1343  000952  6E08               	movwf	(??i2_SERIAL_ESCRIBE_MENSAJE+1)^0,c
  1344  000954  C007  FFF6         	movff	??i2_SERIAL_ESCRIBE_MENSAJE,tblptrl
  1345  000958  C008  FFF7         	movff	??i2_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
  1346  00095C                     	if	0	;tblptru may be non-zero
  1347  00095C                     	endif
  1348  00095C                     	if	0	;tblptru may be non-zero
  1349  00095C                     	endif
  1350  00095C  0008               	tblrd		*
  1351  00095E  CFF5 FFAD          	movff	tablat,4013	;volatile
  1352  000962                     i2l43:
  1353  000962  A2AC               	btfss	172,1,c	;volatile
  1354  000964  EFB6  F004         	goto	i2u23_41
  1355  000968  EFB8  F004         	goto	i2u23_40
  1356  00096C                     i2u23_41:
  1357  00096C  EFB1  F004         	goto	i2l43
  1358  000970                     i2u23_40:
  1359  000970                     
  1360                           ;maincode3.c: 34:     }
  1361  000970  2A0A               	incf	i2SERIAL_ESCRIBE_MENSAJE@x^0,f,c
  1362  000972                     i2l975:
  1363  000972  5009               	movf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  1364  000974  5C0A               	subwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1365  000976  A0D8               	btfss	status,0,c
  1366  000978  EFC0  F004         	goto	i2u24_41
  1367  00097C  EFC2  F004         	goto	i2u24_40
  1368  000980                     i2u24_41:
  1369  000980  EFA4  F004         	goto	i2l971
  1370  000984                     i2u24_40:
  1371  000984  0012               	return		;funcret
  1372  000986                     __end_ofi2_SERIAL_ESCRIBE_MENSAJE:
  1373                           	callstack 0
  1374                           
  1375 ;; *************** function i2_strlen *****************
  1376 ;; Defined at:
  1377 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1380 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1381 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1384 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1385 ;;		 -> STR_1(19), boton1(22), mensaje1(17), 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2    0[COMRAM] unsigned int 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         2       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        4 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		i2_SERIAL_ESCRIBE_MENSAJE
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text13
  1409  000A48                     __ptext13:
  1410                           	callstack 0
  1411  000A48                     i2_strlen:
  1412                           	callstack 23
  1413  000A48  C001  F003         	movff	i2strlen@s,i2strlen@a
  1414  000A4C  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  1415  000A50  EF2C  F005         	goto	i2l929
  1416  000A54                     i2l927:
  1417  000A54  4A01               	infsnz	i2strlen@s^0,f,c
  1418  000A56  2A02               	incf	(i2strlen@s+1)^0,f,c
  1419  000A58                     i2l929:
  1420  000A58  C001  FFF6         	movff	i2strlen@s,tblptrl
  1421  000A5C  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  1422  000A60                     	if	0	;tblptru may be non-zero
  1423  000A60                     	endif
  1424  000A60                     	if	0	;tblptru may be non-zero
  1425  000A60                     	endif
  1426  000A60  0008               	tblrd		*
  1427  000A62  50F5               	movf	tablat,w,c
  1428  000A64  0900               	iorlw	0
  1429  000A66  A4D8               	btfss	status,2,c
  1430  000A68  EF38  F005         	goto	i2u18_41
  1431  000A6C  EF3A  F005         	goto	i2u18_40
  1432  000A70                     i2u18_41:
  1433  000A70  EF2A  F005         	goto	i2l927
  1434  000A74                     i2u18_40:
  1435  000A74  5003               	movf	i2strlen@a^0,w,c
  1436  000A76  5C01               	subwf	i2strlen@s^0,w,c
  1437  000A78  6E01               	movwf	?i2_strlen^0,c
  1438  000A7A  5004               	movf	(i2strlen@a+1)^0,w,c
  1439  000A7C  5802               	subwfb	(i2strlen@s+1)^0,w,c
  1440  000A7E  6E02               	movwf	(?i2_strlen+1)^0,c
  1441  000A80  0012               	return		;funcret
  1442  000A82                     __end_ofi2_strlen:
  1443                           	callstack 0
  1444                           
  1445                           	psect	rparam
  1446  0000                     
  1447                           	psect	temp
  1448  00002E                     btemp:
  1449                           	callstack 0
  1450  00002E                     	ds	1
  1451  0000                     int$flags	set	btemp
  1452  0000                     wtemp8	set	btemp+1
  1453  0000                     ttemp5	set	btemp+1
  1454  0000                     ttemp6	set	btemp+4
  1455  0000                     ttemp7	set	btemp+8
  1456                           
  1457                           	psect	idloc
  1458                           
  1459                           ;Config register IDLOC0 @ 0x200000
  1460                           ;	unspecified, using default values
  1461  200000                     	org	2097152
  1462  200000  FF                 	db	255
  1463                           
  1464                           ;Config register IDLOC1 @ 0x200001
  1465                           ;	unspecified, using default values
  1466  200001                     	org	2097153
  1467  200001  FF                 	db	255
  1468                           
  1469                           ;Config register IDLOC2 @ 0x200002
  1470                           ;	unspecified, using default values
  1471  200002                     	org	2097154
  1472  200002  FF                 	db	255
  1473                           
  1474                           ;Config register IDLOC3 @ 0x200003
  1475                           ;	unspecified, using default values
  1476  200003                     	org	2097155
  1477  200003  FF                 	db	255
  1478                           
  1479                           ;Config register IDLOC4 @ 0x200004
  1480                           ;	unspecified, using default values
  1481  200004                     	org	2097156
  1482  200004  FF                 	db	255
  1483                           
  1484                           ;Config register IDLOC5 @ 0x200005
  1485                           ;	unspecified, using default values
  1486  200005                     	org	2097157
  1487  200005  FF                 	db	255
  1488                           
  1489                           ;Config register IDLOC6 @ 0x200006
  1490                           ;	unspecified, using default values
  1491  200006                     	org	2097158
  1492  200006  FF                 	db	255
  1493                           
  1494                           ;Config register IDLOC7 @ 0x200007
  1495                           ;	unspecified, using default values
  1496  200007                     	org	2097159
  1497  200007  FF                 	db	255
  1498                           
  1499                           	psect	config
  1500                           
  1501                           ;Config register CONFIG1L @ 0x300000
  1502                           ;	PLL Prescaler Selection bits
  1503                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1504                           ;	System Clock Postscaler Selection bits
  1505                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1506                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1507                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1508  300000                     	org	3145728
  1509  300000  00                 	db	0
  1510                           
  1511                           ;Config register CONFIG1H @ 0x300001
  1512                           ;	Oscillator Selection bits
  1513                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1514                           ;	Fail-Safe Clock Monitor Enable bit
  1515                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1516                           ;	Internal/External Oscillator Switchover bit
  1517                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1518  300001                     	org	3145729
  1519  300001  02                 	db	2
  1520                           
  1521                           ;Config register CONFIG2L @ 0x300002
  1522                           ;	Power-up Timer Enable bit
  1523                           ;	PWRT = ON, PWRT enabled
  1524                           ;	Brown-out Reset Enable bits
  1525                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1526                           ;	Brown-out Reset Voltage bits
  1527                           ;	BORV = 3, Minimum setting 2.05V
  1528                           ;	USB Voltage Regulator Enable bit
  1529                           ;	VREGEN = OFF, USB voltage regulator disabled
  1530  300002                     	org	3145730
  1531  300002  18                 	db	24
  1532                           
  1533                           ;Config register CONFIG2H @ 0x300003
  1534                           ;	Watchdog Timer Enable bit
  1535                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1536                           ;	Watchdog Timer Postscale Select bits
  1537                           ;	WDTPS = 32768, 1:32768
  1538  300003                     	org	3145731
  1539  300003  1E                 	db	30
  1540                           
  1541                           ; Padding undefined space
  1542  300004                     	org	3145732
  1543  300004  FF                 	db	255
  1544                           
  1545                           ;Config register CONFIG3H @ 0x300005
  1546                           ;	CCP2 MUX bit
  1547                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1548                           ;	PORTB A/D Enable bit
  1549                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1550                           ;	Low-Power Timer 1 Oscillator Enable bit
  1551                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1552                           ;	MCLR Pin Enable bit
  1553                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1554  300005                     	org	3145733
  1555  300005  81                 	db	129
  1556                           
  1557                           ;Config register CONFIG4L @ 0x300006
  1558                           ;	Stack Full/Underflow Reset Enable bit
  1559                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1560                           ;	Single-Supply ICSP Enable bit
  1561                           ;	LVP = OFF, Single-Supply ICSP disabled
  1562                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1563                           ;	ICPRT = OFF, ICPORT disabled
  1564                           ;	Extended Instruction Set Enable bit
  1565                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1566                           ;	Background Debugger Enable bit
  1567                           ;	DEBUG = 0x1, unprogrammed default
  1568  300006                     	org	3145734
  1569  300006  81                 	db	129
  1570                           
  1571                           ; Padding undefined space
  1572  300007                     	org	3145735
  1573  300007  FF                 	db	255
  1574                           
  1575                           ;Config register CONFIG5L @ 0x300008
  1576                           ;	Code Protection bit
  1577                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1578                           ;	Code Protection bit
  1579                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1580                           ;	Code Protection bit
  1581                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1582                           ;	Code Protection bit
  1583                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1584  300008                     	org	3145736
  1585  300008  0F                 	db	15
  1586                           
  1587                           ;Config register CONFIG5H @ 0x300009
  1588                           ;	Boot Block Code Protection bit
  1589                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1590                           ;	Data EEPROM Code Protection bit
  1591                           ;	CPD = OFF, Data EEPROM is not code-protected
  1592  300009                     	org	3145737
  1593  300009  C0                 	db	192
  1594                           
  1595                           ;Config register CONFIG6L @ 0x30000A
  1596                           ;	Write Protection bit
  1597                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1598                           ;	Write Protection bit
  1599                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1600                           ;	Write Protection bit
  1601                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1602                           ;	Write Protection bit
  1603                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1604  30000A                     	org	3145738
  1605  30000A  0F                 	db	15
  1606                           
  1607                           ;Config register CONFIG6H @ 0x30000B
  1608                           ;	Configuration Register Write Protection bit
  1609                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1610                           ;	Boot Block Write Protection bit
  1611                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1612                           ;	Data EEPROM Write Protection bit
  1613                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1614  30000B                     	org	3145739
  1615  30000B  E0                 	db	224
  1616                           
  1617                           ;Config register CONFIG7L @ 0x30000C
  1618                           ;	Table Read Protection bit
  1619                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1620                           ;	Table Read Protection bit
  1621                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1622                           ;	Table Read Protection bit
  1623                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1624                           ;	Table Read Protection bit
  1625                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1626  30000C                     	org	3145740
  1627  30000C  0F                 	db	15
  1628                           
  1629                           ;Config register CONFIG7H @ 0x30000D
  1630                           ;	Boot Block Table Read Protection bit
  1631                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1632  30000D                     	org	3145741
  1633  30000D  40                 	db	64
  1634                           tosu	equ	0xFFF
  1635                           tosh	equ	0xFFE
  1636                           tosl	equ	0xFFD
  1637                           stkptr	equ	0xFFC
  1638                           pclatu	equ	0xFFB
  1639                           pclath	equ	0xFFA
  1640                           pcl	equ	0xFF9
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           prodh	equ	0xFF4
  1646                           prodl	equ	0xFF3
  1647                           indf0	equ	0xFEF
  1648                           postinc0	equ	0xFEE
  1649                           postdec0	equ	0xFED
  1650                           preinc0	equ	0xFEC
  1651                           plusw0	equ	0xFEB
  1652                           fsr0h	equ	0xFEA
  1653                           fsr0l	equ	0xFE9
  1654                           wreg	equ	0xFE8
  1655                           indf1	equ	0xFE7
  1656                           postinc1	equ	0xFE6
  1657                           postdec1	equ	0xFE5
  1658                           preinc1	equ	0xFE4
  1659                           plusw1	equ	0xFE3
  1660                           fsr1h	equ	0xFE2
  1661                           fsr1l	equ	0xFE1
  1662                           bsr	equ	0xFE0
  1663                           indf2	equ	0xFDF
  1664                           postinc2	equ	0xFDE
  1665                           postdec2	equ	0xFDD
  1666                           preinc2	equ	0xFDC
  1667                           plusw2	equ	0xFDB
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    39
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), boton1(CODE[22]), mensaje1(CODE[17]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), boton1(CODE[22]), mensaje1(CODE[17]), 

    SERIAL_ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), boton1(CODE[22]), mensaje1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_SERIAL_ESCRIBE_MENSAJE
    _SERIAL_ESCRIBE_MENSAJE->_strlen

Critical Paths under _EUSART_RX_ISR in COMRAM

    _EUSART_RX_ISR->i1_SERIAL_ESCRIBE_MENSAJE
    i1_SERIAL_ESCRIBE_MENSAJE->i1_strlen

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_SERIAL_ESCRIBE_MENSAJE
    i2_SERIAL_ESCRIBE_MENSAJE->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_RX_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_RX_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_RX_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_RX_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_RX_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_RX_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_RX_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_RX_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     657
                        _EUSART_conf
                          _INIT_conf
             _SERIAL_ESCRIBE_MENSAJE
                    _SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (1) _SERIAL_NEXTLINE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_ESCRIBE_MENSAJE                               6     4      2     657
                                             39 COMRAM     6     4      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                             35 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _INIT_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_ISR                                        9     9      0     361
                                             26 COMRAM     9     9      0
           i1_SERIAL_ESCRIBE_MENSAJE
                  i1_SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (4) i1_SERIAL_NEXTLINE                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i1_SERIAL_ESCRIBE_MENSAJE                             6     4      2     361
                                             20 COMRAM     6     4      2
                           i1_strlen
 ---------------------------------------------------------------------------------
 (5) i1_strlen                                             4     2      2     116
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             6     6      0     257
                                             10 COMRAM     6     6      0
           i2_SERIAL_ESCRIBE_MENSAJE
                  i2_SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (7) i2_SERIAL_NEXTLINE                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_SERIAL_ESCRIBE_MENSAJE                             6     4      2     257
                                              4 COMRAM     6     4      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_conf
   _INIT_conf
   _SERIAL_ESCRIBE_MENSAJE
     _strlen
   _SERIAL_NEXTLINE

 _EUSART_RX_ISR (ROOT)
   i1_SERIAL_ESCRIBE_MENSAJE
     i1_strlen
   i1_SERIAL_NEXTLINE

 _INT0_ISR (ROOT)
   i2_SERIAL_ESCRIBE_MENSAJE
     i2_strlen
   i2_SERIAL_NEXTLINE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     2D      2D       1       47.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 17 15:33:27 2021

                               l50 0A86                                 l35 0B24  
                               l43 08B6                                 l53 0A98  
                               l61 0B0C                                 l38 0B3E  
                               l62 0B0C                                 l47 08D8  
                               l56 0AA6                                 u60 0A94  
                               u61 0A90                                 u70 0AA6  
                               u71 0AA2       SERIAL_ESCRIBE_MENSAJE@cadena 0028  
                               bsr 000FE0                                l801 0B3C  
                              l911 0A00                                l761 0A0C  
                              l905 09D4                                l817 0A82  
                              l907 09E0                                l819 0A94  
                              l909 09E4                                l941 0894  
                              l943 089C                                l935 0884  
                              l793 0B14                                l945 08C4  
                              l937 0884                                l795 0B34  
                              l947 08C6                                l939 0894  
                              l797 0B38                                l981 0AFC  
                              l799 0B3A                                l983 0B08  
                              l977 0AF4                                l979 0AF8  
                              u200 08D8                                u201 08D4  
                              u160 0A00                                u161 09FC  
                              u190 08C4                                u191 08C0  
                              wreg 000FE8                   ?_SERIAL_NEXTLINE 0001  
                     ?_EUSART_conf 0001                               STR_1 0828  
                             STR_2 083B                               STR_3 084E  
                             STR_4 0861                               STR_5 0874  
                             i1l50 0AAC                               i1l43 090C  
                             i1l53 0ABE                               i1l47 092E  
                             i1l56 0ACC                               i1l81 00D2  
                             i2l50 0AD2                               i2l43 0962  
                             i1l75 003C                               i2l53 0AE4  
                             i1l77 0052                               i1l78 0064  
                             i2l47 0984                               i1l79 0076  
                             i2l56 0AF2                               i2l69 09C0  
         i2_SERIAL_ESCRIBE_MENSAJE 0930                               _main 0AF4  
                             btemp 002E                               start 00F2  
                     ___param_bank 000000                 __size_of_INIT_conf 0012  
                 __end_of_INT0_ISR 09D4                      _EUSART_RX_ISR 0018  
                            ?_main 0001                              i1l761 0A46  
                            i1l921 0A3A                              i1l915 0A0E  
                            i1l851 0ABA                              i1l917 0A1A  
                            i1l919 0A1E                              i1l951 08DA  
                            i1l961 091C                              i1l953 08EA  
                            i1l849 0AA8                              i1l955 08EA  
                            i1l957 08F2                              i1l949 08DA  
                            i1l959 091A                              i2l761 0A80  
                            i1l993 0036                              i2l931 0A74  
                            i1l995 003E                              i2l925 0A48  
                            i2l853 0ACE                              i1l997 004A  
                            i2l927 0A54                              i2l855 0AE0  
                            i1l999 0054                              i2l929 0A58  
                            i2l971 0948                              i2l963 0930  
                            i2l973 0970                              i2l965 0930  
                            i2l975 0972                              i2l967 0940  
                            i2l991 09BC                              i2l969 0940  
                            i2l985 0998                              i2l987 099A  
                            i2l989 09B0                              _RCREG 000FAE  
                            _SPBRG 000FAF                              _TXREG 000FAD  
                            tablat 000FF5                              ttemp5 002F  
                            ttemp6 0032                              ttemp7 0036  
                            status 000FD8                              wtemp8 002F  
                 __end_ofi1_strlen 0A48                   __end_ofi2_strlen 0A82  
                  __initialization 0B26                       __end_of_main 0B14  
                   ?_EUSART_RX_ISR 0001                             ??_main 002E  
                    __activetblptr 000002                  __end_of_INIT_conf 0B26  
                           i1l1011 0088                             i1l1003 0066  
                           i1l1007 0078                             i1l1015 0098  
                           i1l1025 00AC            SERIAL_ESCRIBE_MENSAJE@x 002D  
                           _boton1 0801                   __end_of_mensaje1 0828  
                           isa$std 000001                             _strlen 09D4  
                     __mediumconst 0000   __end_ofi1_SERIAL_ESCRIBE_MENSAJE 0930  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8          i1SERIAL_ESCRIBE_MENSAJE@x 001A  
                       __accesstop 0060            __end_of__initialization 0B26  
             __size_of_EUSART_conf 000C                          ?_INT0_ISR 0001  
                    ___rparam_used 000001                     __pcstackCOMRAM 0001  
                  ??_EUSART_RX_ISR 001B         ??i2_SERIAL_ESCRIBE_MENSAJE 0007  
                        ?i1_strlen 0011                          ?i2_strlen 0001  
   i2SERIAL_ESCRIBE_MENSAJE@cadena 0005                         ??_INT0_ISR 000B  
                          ?_strlen 0024                            i1u12_20 0ABA  
                          i1u12_21 0AB6                            i1u21_20 091A  
                          i1u13_20 0ACC                            i1u21_21 0916  
                          i1u13_21 0AC8                            i1u22_20 092E  
                          i1u22_21 092A                            i1u17_20 0A3A  
                          i1u17_21 0A36                            i2u14_40 0AE0  
                          i2u14_41 0ADC                            i2u23_40 0970  
                          i2u15_40 0AF2                            i2u23_41 096C  
                          i2u15_41 0AEE                            i2u24_40 0984  
                          i2u24_41 0980                            i2u25_47 09A4  
                          i2u18_40 0A74                            i2u18_41 0A70  
                       ??i1_strlen 0013                         ??i2_strlen 0003  
                i1_SERIAL_NEXTLINE 0AA8           i1_SERIAL_ESCRIBE_MENSAJE 08DA  
               ?i1_SERIAL_NEXTLINE 0001     i1SERIAL_ESCRIBE_MENSAJE@cadena 0015  
         __size_of_SERIAL_NEXTLINE 0026                ??i1_SERIAL_NEXTLINE 0011  
                          __Hparam 0000                            __Lparam 0000  
                     __psmallconst 0800                            __pcinit 0B26  
                          __ramtop 0800                            __ptext0 0AF4  
                          __ptext1 0A82                            __ptext2 0884  
                          __ptext3 09D4                            __ptext4 0B14  
                          __ptext5 0B34                            __ptext7 0AA8  
                          __ptext8 08DA                            __ptext9 0A0E  
                  __size_of_strlen 003A           ??_SERIAL_ESCRIBE_MENSAJE 002A  
        SERIAL_ESCRIBE_MENSAJE@tam 002C          __end_ofi1_SERIAL_NEXTLINE 0ACE  
                   __pintcode_body 0986               end_of_initialization 0B26  
                        _INIT_conf 0B14                      __Lmediumconst 0000  
                          int_func 0986                  i2_SERIAL_NEXTLINE 0ACE  
               ?i2_SERIAL_NEXTLINE 0001                          _RCSTAbits 000FAB  
              ??i2_SERIAL_NEXTLINE 0001                            strlen@a 0026  
                          strlen@s 0024                          _TRISDbits 000F95  
        __end_ofi2_SERIAL_NEXTLINE 0AF4                         ?_INIT_conf 0001  
                        _TXSTAbits 000FAC        i1SERIAL_ESCRIBE_MENSAJE@tam 0019  
                __size_of_INT0_ISR 09CC                  ??_SERIAL_NEXTLINE 0024  
                   __end_of_boton1 0817                     __end_of_strlen 0A0E  
              start_initialization 0B26         __size_ofi1_SERIAL_NEXTLINE 0026  
  __size_of_SERIAL_ESCRIBE_MENSAJE 0056                      ??_EUSART_conf 0024  
        i2SERIAL_ESCRIBE_MENSAJE@x 000A                          i1strlen@a 0013  
                        i1strlen@s 0011                  __size_ofi1_strlen 003A  
                __size_ofi2_strlen 003A                          i2strlen@a 0003  
                        i2strlen@s 0001              __end_of_EUSART_RX_ISR 00F2  
                         ??_strlen 0026         ??i1_SERIAL_ESCRIBE_MENSAJE 0017  
       __size_ofi2_SERIAL_NEXTLINE 0026                        ??_INIT_conf 0024  
              __end_of_EUSART_conf 0B40  __size_ofi2_SERIAL_ESCRIBE_MENSAJE 0056  
        ?i2_SERIAL_ESCRIBE_MENSAJE 0005             _SERIAL_ESCRIBE_MENSAJE 0884  
                        __pintcode 0008                        __pintcodelo 0018  
                      __smallconst 0800                           _INT0_ISR 0008  
                         _LATDbits 000F8C                           _IPR1bits 000F9F  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
                         _RCONbits 000FD0                           i1_strlen 0A0E  
                         i2_strlen 0A48                        _EUSART_conf 0B34  
                  _SERIAL_NEXTLINE 0A82                           __Hrparam 0000  
                         __Lrparam 0000                           __ptext11 0ACE  
                         __ptext12 0930                           __ptext13 0A48  
                    __size_of_main 0020                           _mensaje1 0817  
                         isa$xinst 000000                           int$flags 002E  
      i2SERIAL_ESCRIBE_MENSAJE@tam 0009                         _INTCONbits 000FF2  
          __end_of_SERIAL_NEXTLINE 0AA8   __end_ofi2_SERIAL_ESCRIBE_MENSAJE 0986  
                         intlevel1 0000                           intlevel2 0000  
          ?_SERIAL_ESCRIBE_MENSAJE 0028     __end_of_SERIAL_ESCRIBE_MENSAJE 08DA  
           __size_of_EUSART_RX_ISR 00DA  __size_ofi1_SERIAL_ESCRIBE_MENSAJE 0056  
        ?i1_SERIAL_ESCRIBE_MENSAJE 0015  
