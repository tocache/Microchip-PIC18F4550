

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 16 21:04:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	smallconst
    61  000800                     __psmallconst:
    62                           	callstack 0
    63  000800  00                 	db	0
    64  000801                     _mensaje2:
    65                           	callstack 0
    66  000801  55                 	db	85
    67  000802  50                 	db	80
    68  000803  43                 	db	67
    69  000804  20                 	db	32
    70  000805  45                 	db	69
    71  000806  6C                 	db	108
    72  000807  65                 	db	101
    73  000808  63                 	db	99
    74  000809  74                 	db	116
    75  00080A  72                 	db	114
    76  00080B  6F                 	db	111
    77  00080C  6E                 	db	110
    78  00080D  69                 	db	105
    79  00080E  63                 	db	99
    80  00080F  61                 	db	97
    81  000810  20                 	db	32
    82  000811  4D                 	db	77
    83  000812  65                 	db	101
    84  000813  63                 	db	99
    85  000814  61                 	db	97
    86  000815  74                 	db	116
    87  000816  72                 	db	114
    88  000817  6F                 	db	111
    89  000818  6E                 	db	110
    90  000819  69                 	db	105
    91  00081A  63                 	db	99
    92  00081B  61                 	db	97
    93  00081C  00                 	db	0
    94  00081D                     __end_of_mensaje2:
    95                           	callstack 0
    96  00081D                     _mensaje1:
    97                           	callstack 0
    98  00081D  4D                 	db	77
    99  00081E  69                 	db	105
   100  00081F  20                 	db	32
   101  000820  6E                 	db	110
   102  000821  6F                 	db	111
   103  000822  6D                 	db	109
   104  000823  62                 	db	98
   105  000824  72                 	db	114
   106  000825  65                 	db	101
   107  000826  20                 	db	32
   108  000827  65                 	db	101
   109  000828  73                 	db	115
   110  000829  20                 	db	32
   111  00082A  4B                 	db	75
   112  00082B  61                 	db	97
   113  00082C  6C                 	db	108
   114  00082D  75                 	db	117
   115  00082E  6E                 	db	110
   116  00082F  20                 	db	32
   117  000830  4C                 	db	76
   118  000831  61                 	db	97
   119  000832  75                 	db	117
   120  000833  00                 	db	0
   121  000834                     __end_of_mensaje1:
   122                           	callstack 0
   123  0000                     _RCREG	set	4014
   124  0000                     _LATDbits	set	3980
   125  0000                     _PIR1bits	set	3998
   126  0000                     _TXREG	set	4013
   127  0000                     _TXSTAbits	set	4012
   128  0000                     _RCSTAbits	set	4011
   129  0000                     _SPBRG	set	4015
   130  0000                     _TRISDbits	set	3989
   131  0000                     _PIE1bits	set	3997
   132  0000                     _INTCONbits	set	4082
   133  000834                     STR_1:
   134  000834  54                 	db	84	;'T'
   135  000835  65                 	db	101	;'e'
   136  000836  63                 	db	99	;'c'
   137  000837  6C                 	db	108	;'l'
   138  000838  61                 	db	97	;'a'
   139  000839  20                 	db	32
   140  00083A  31                 	db	49	;'1'
   141  00083B  20                 	db	32
   142  00083C  70                 	db	112	;'p'
   143  00083D  72                 	db	114	;'r'
   144  00083E  65                 	db	101	;'e'
   145  00083F  73                 	db	115	;'s'
   146  000840  69                 	db	105	;'i'
   147  000841  6F                 	db	111	;'o'
   148  000842  6E                 	db	110	;'n'
   149  000843  61                 	db	97	;'a'
   150  000844  64                 	db	100	;'d'
   151  000845  61                 	db	97	;'a'
   152  000846  00                 	db	0
   153  000847                     STR_2:
   154  000847  54                 	db	84	;'T'
   155  000848  65                 	db	101	;'e'
   156  000849  63                 	db	99	;'c'
   157  00084A  6C                 	db	108	;'l'
   158  00084B  61                 	db	97	;'a'
   159  00084C  20                 	db	32
   160  00084D  32                 	db	50	;'2'
   161  00084E  20                 	db	32
   162  00084F  70                 	db	112	;'p'
   163  000850  72                 	db	114	;'r'
   164  000851  65                 	db	101	;'e'
   165  000852  73                 	db	115	;'s'
   166  000853  69                 	db	105	;'i'
   167  000854  6F                 	db	111	;'o'
   168  000855  6E                 	db	110	;'n'
   169  000856  61                 	db	97	;'a'
   170  000857  64                 	db	100	;'d'
   171  000858  61                 	db	97	;'a'
   172  000859  00                 	db	0
   173  00085A                     STR_3:
   174  00085A  54                 	db	84	;'T'
   175  00085B  65                 	db	101	;'e'
   176  00085C  63                 	db	99	;'c'
   177  00085D  6C                 	db	108	;'l'
   178  00085E  61                 	db	97	;'a'
   179  00085F  20                 	db	32
   180  000860  33                 	db	51	;'3'
   181  000861  20                 	db	32
   182  000862  70                 	db	112	;'p'
   183  000863  72                 	db	114	;'r'
   184  000864  65                 	db	101	;'e'
   185  000865  73                 	db	115	;'s'
   186  000866  69                 	db	105	;'i'
   187  000867  6F                 	db	111	;'o'
   188  000868  6E                 	db	110	;'n'
   189  000869  61                 	db	97	;'a'
   190  00086A  64                 	db	100	;'d'
   191  00086B  61                 	db	97	;'a'
   192  00086C  00                 	db	0
   193  00086D                     STR_4:
   194  00086D  54                 	db	84	;'T'
   195  00086E  65                 	db	101	;'e'
   196  00086F  63                 	db	99	;'c'
   197  000870  6C                 	db	108	;'l'
   198  000871  61                 	db	97	;'a'
   199  000872  20                 	db	32
   200  000873  34                 	db	52	;'4'
   201  000874  20                 	db	32
   202  000875  70                 	db	112	;'p'
   203  000876  72                 	db	114	;'r'
   204  000877  65                 	db	101	;'e'
   205  000878  73                 	db	115	;'s'
   206  000879  69                 	db	105	;'i'
   207  00087A  6F                 	db	111	;'o'
   208  00087B  6E                 	db	110	;'n'
   209  00087C  61                 	db	97	;'a'
   210  00087D  64                 	db	100	;'d'
   211  00087E  61                 	db	97	;'a'
   212  00087F  00                 	db	0
   213  000880                     STR_5:
   214  000880  54                 	db	84	;'T'
   215  000881  65                 	db	101	;'e'
   216  000882  63                 	db	99	;'c'
   217  000883  6C                 	db	108	;'l'
   218  000884  61                 	db	97	;'a'
   219  000885  20                 	db	32
   220  000886  65                 	db	101	;'e'
   221  000887  72                 	db	114	;'r'
   222  000888  72                 	db	114	;'r'
   223  000889  6F                 	db	111	;'o'
   224  00088A  6E                 	db	110	;'n'
   225  00088B  65                 	db	101	;'e'
   226  00088C  61                 	db	97	;'a'
   227  00088D  00                 	db	0
   228  00088E  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           ; #config settings
   231                           
   232                           	psect	cinit
   233  000AEE                     __pcinit:
   234                           	callstack 0
   235  000AEE                     start_initialization:
   236                           	callstack 0
   237  000AEE                     __initialization:
   238                           	callstack 0
   239  000AEE                     end_of_initialization:
   240                           	callstack 0
   241  000AEE                     __end_of__initialization:
   242                           	callstack 0
   243  000AEE  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   244  000AF0  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   245  000AF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   246  000AF4  6EF8               	movwf	tblptru,c
   247  000AF6  0100               	movlb	0
   248  000AF8  EF39  F005         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	cstackCOMRAM
   251  000001                     __pcstackCOMRAM:
   252                           	callstack 0
   253  000001                     ?i2_strlen:
   254                           	callstack 0
   255  000001                     i2strlen@s:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x0
   259  000001                     	ds	2
   260  000003                     i2strlen@a:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264  000003                     	ds	2
   265  000005                     i2SERIAL_ESCRIBE_MENSAJE@cadena:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x4
   269  000005                     	ds	2
   270  000007                     ??i2_SERIAL_ESCRIBE_MENSAJE:
   271                           
   272                           ; 1 bytes @ 0x6
   273  000007                     	ds	2
   274  000009                     i2SERIAL_ESCRIBE_MENSAJE@tam:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x8
   278  000009                     	ds	1
   279  00000A                     i2SERIAL_ESCRIBE_MENSAJE@x:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x9
   283  00000A                     	ds	1
   284  00000B                     ??_EUSART_RX_ISR:
   285                           
   286                           ; 1 bytes @ 0xA
   287  00000B                     	ds	6
   288  000011                     ?_strlen:
   289                           	callstack 0
   290  000011                     strlen@s:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x10
   294  000011                     	ds	2
   295  000013                     strlen@a:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x12
   299  000013                     	ds	2
   300  000015                     SERIAL_ESCRIBE_MENSAJE@cadena:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x14
   304  000015                     	ds	2
   305  000017                     ??_SERIAL_ESCRIBE_MENSAJE:
   306                           
   307                           ; 1 bytes @ 0x16
   308  000017                     	ds	2
   309  000019                     SERIAL_ESCRIBE_MENSAJE@tam:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x18
   313  000019                     	ds	1
   314  00001A                     SERIAL_ESCRIBE_MENSAJE@x:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x19
   318  00001A                     	ds	1
   319  00001B                     
   320                           ; 1 bytes @ 0x1A
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324 ;; *************** function _main *****************
   325 ;; Defined at:
   326 ;;		line 41 in file "maincode2.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;		None
   329 ;; Auto vars:     Size  Location     Type
   330 ;;		None
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   340 ;;      Params:         0       0       0       0       0       0       0       0       0
   341 ;;      Locals:         0       0       0       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0       0       0
   343 ;;      Totals:         0       0       0       0       0       0       0       0       0
   344 ;;Total ram usage:        0 bytes
   345 ;; Hardware stack levels required when called: 5
   346 ;; This function calls:
   347 ;;		_EUSART_conf
   348 ;;		_SERIAL_ESCRIBE_MENSAJE
   349 ;;		_SERIAL_NEXTLINE
   350 ;;		_init_conf
   351 ;; This function is called by:
   352 ;;		Startup code after reset
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356                           	psect	text0
   357  000A72                     __ptext0:
   358                           	callstack 0
   359  000A72                     _main:
   360                           	callstack 26
   361  000A72                     
   362                           ;maincode2.c: 42:     init_conf();
   363  000A72  EC7E  F005         	call	_init_conf	;wreg free
   364  000A76                     
   365                           ;maincode2.c: 43:     EUSART_conf();
   366  000A76  EC84  F005         	call	_EUSART_conf	;wreg free
   367  000A7A                     
   368                           ;maincode2.c: 44:     SERIAL_ESCRIBE_MENSAJE(mensaje1);
   369  000A7A  0E1D               	movlw	low _mensaje1
   370  000A7C  6E15               	movwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   371  000A7E  0E08               	movlw	high _mensaje1
   372  000A80  6E16               	movwf	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   373  000A82  ECA9  F004         	call	_SERIAL_ESCRIBE_MENSAJE	;wreg free
   374  000A86                     
   375                           ;maincode2.c: 45:     SERIAL_NEXTLINE();
   376  000A86  EC51  F005         	call	_SERIAL_NEXTLINE	;wreg free
   377  000A8A                     
   378                           ;maincode2.c: 46:     SERIAL_ESCRIBE_MENSAJE(mensaje2);
   379  000A8A  0E01               	movlw	low _mensaje2
   380  000A8C  6E15               	movwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   381  000A8E  0E08               	movlw	high _mensaje2
   382  000A90  6E16               	movwf	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   383  000A92  ECA9  F004         	call	_SERIAL_ESCRIBE_MENSAJE	;wreg free
   384  000A96                     
   385                           ;maincode2.c: 47:     SERIAL_NEXTLINE();
   386  000A96  EC51  F005         	call	_SERIAL_NEXTLINE	;wreg free
   387  000A9A                     l55:
   388  000A9A  EF4D  F005         	goto	l55
   389  000A9E  EF07  F000         	goto	start
   390  000AA2                     __end_of_main:
   391                           	callstack 0
   392                           
   393 ;; *************** function _init_conf *****************
   394 ;; Defined at:
   395 ;;		line 9 in file "maincode2.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		None
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   409 ;;      Params:         0       0       0       0       0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; Hardware stack levels required when called: 3
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text1
   424  000AFC                     __ptext1:
   425                           	callstack 0
   426  000AFC                     _init_conf:
   427                           	callstack 27
   428  000AFC                     
   429                           ;maincode2.c: 10:     INTCONbits.GIE = 1;
   430  000AFC  8EF2               	bsf	242,7,c	;volatile
   431                           
   432                           ;maincode2.c: 11:     INTCONbits.PEIE = 1;
   433  000AFE  8CF2               	bsf	242,6,c	;volatile
   434                           
   435                           ;maincode2.c: 12:     PIE1bits.RCIE = 1;
   436  000B00  8A9D               	bsf	157,5,c	;volatile
   437                           
   438                           ;maincode2.c: 13:     TRISDbits.RD0 = 0;
   439  000B02  9095               	bcf	149,0,c	;volatile
   440                           
   441                           ;maincode2.c: 14:     TRISDbits.RD1 = 0;
   442  000B04  9295               	bcf	149,1,c	;volatile
   443  000B06  0012               	return		;funcret
   444  000B08                     __end_of_init_conf:
   445                           	callstack 0
   446                           
   447 ;; *************** function _SERIAL_NEXTLINE *****************
   448 ;; Defined at:
   449 ;;		line 34 in file "maincode2.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   463 ;;      Params:         0       0       0       0       0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 3
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text2
   478  000AA2                     __ptext2:
   479                           	callstack 0
   480  000AA2                     _SERIAL_NEXTLINE:
   481                           	callstack 27
   482  000AA2                     
   483                           ;maincode2.c: 35:     TXREG = 0x0A;
   484  000AA2  0E0A               	movlw	10
   485  000AA4  6EAD               	movwf	173,c	;volatile
   486  000AA6                     l44:
   487  000AA6  A2AC               	btfss	172,1,c	;volatile
   488  000AA8  EF58  F005         	goto	u51
   489  000AAC  EF5A  F005         	goto	u50
   490  000AB0                     u51:
   491  000AB0  EF53  F005         	goto	l44
   492  000AB4                     u50:
   493  000AB4                     
   494                           ;maincode2.c: 37:     TXREG = 0x0D;
   495  000AB4  0E0D               	movlw	13
   496  000AB6  6EAD               	movwf	173,c	;volatile
   497  000AB8                     l47:
   498  000AB8  A2AC               	btfss	172,1,c	;volatile
   499  000ABA  EF61  F005         	goto	u61
   500  000ABE  EF63  F005         	goto	u60
   501  000AC2                     u61:
   502  000AC2  EF5C  F005         	goto	l47
   503  000AC6                     u60:
   504  000AC6  0012               	return		;funcret
   505  000AC8                     __end_of_SERIAL_NEXTLINE:
   506                           	callstack 0
   507                           
   508 ;; *************** function _SERIAL_ESCRIBE_MENSAJE *****************
   509 ;; Defined at:
   510 ;;		line 24 in file "maincode2.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  cadena          2   20[COMRAM] PTR const unsigned char 
   513 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   514 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  x               1   25[COMRAM] unsigned char 
   517 ;;  tam             1   24[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  1    wreg      void 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   527 ;;      Params:         2       0       0       0       0       0       0       0       0
   528 ;;      Locals:         2       0       0       0       0       0       0       0       0
   529 ;;      Temps:          2       0       0       0       0       0       0       0       0
   530 ;;      Totals:         6       0       0       0       0       0       0       0       0
   531 ;;Total ram usage:        6 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; Hardware stack levels required when called: 4
   534 ;; This function calls:
   535 ;;		_strlen
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text3
   542  000952                     __ptext3:
   543                           	callstack 0
   544  000952                     _SERIAL_ESCRIBE_MENSAJE:
   545                           	callstack 26
   546  000952                     
   547                           ;maincode2.c: 26:     tam = strlen(cadena);
   548  000952  C015  F011         	movff	SERIAL_ESCRIBE_MENSAJE@cadena,strlen@s
   549  000956  C016  F012         	movff	SERIAL_ESCRIBE_MENSAJE@cadena+1,strlen@s+1
   550  00095A  ECFF  F004         	call	_strlen	;wreg free
   551  00095E  5011               	movf	?_strlen^0,w,c
   552  000960  6E19               	movwf	SERIAL_ESCRIBE_MENSAJE@tam^0,c
   553  000962                     
   554                           ;maincode2.c: 28:     for(x=0;x<tam;x++){
   555  000962  0E00               	movlw	0
   556  000964  6E1A               	movwf	SERIAL_ESCRIBE_MENSAJE@x^0,c
   557  000966  EFCA  F004         	goto	l894
   558  00096A                     l890:
   559                           
   560                           ;maincode2.c: 29:         TXREG = cadena[x];
   561  00096A  501A               	movf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   562  00096C  2415               	addwf	SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
   563  00096E  6E17               	movwf	??_SERIAL_ESCRIBE_MENSAJE^0,c
   564  000970  0E00               	movlw	0
   565  000972  2016               	addwfc	(SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
   566  000974  6E18               	movwf	(??_SERIAL_ESCRIBE_MENSAJE+1)^0,c
   567  000976  C017  FFF6         	movff	??_SERIAL_ESCRIBE_MENSAJE,tblptrl
   568  00097A  C018  FFF7         	movff	??_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
   569  00097E                     	if	0	;tblptru may be non-zero
   570  00097E                     	endif
   571  00097E                     	if	0	;tblptru may be non-zero
   572  00097E                     	endif
   573  00097E  0008               	tblrd		*
   574  000980  CFF5 FFAD          	movff	tablat,4013	;volatile
   575  000984                     l37:
   576  000984  A2AC               	btfss	172,1,c	;volatile
   577  000986  EFC7  F004         	goto	u131
   578  00098A  EFC9  F004         	goto	u130
   579  00098E                     u131:
   580  00098E  EFC2  F004         	goto	l37
   581  000992                     u130:
   582  000992                     
   583                           ;maincode2.c: 31:     }
   584  000992  2A1A               	incf	SERIAL_ESCRIBE_MENSAJE@x^0,f,c
   585  000994                     l894:
   586  000994  5019               	movf	SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
   587  000996  5C1A               	subwf	SERIAL_ESCRIBE_MENSAJE@x^0,w,c
   588  000998  A0D8               	btfss	status,0,c
   589  00099A  EFD1  F004         	goto	u141
   590  00099E  EFD3  F004         	goto	u140
   591  0009A2                     u141:
   592  0009A2  EFB5  F004         	goto	l890
   593  0009A6                     u140:
   594  0009A6  0012               	return		;funcret
   595  0009A8                     __end_of_SERIAL_ESCRIBE_MENSAJE:
   596                           	callstack 0
   597                           
   598 ;; *************** function _strlen *****************
   599 ;; Defined at:
   600 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  s               2   16[COMRAM] PTR const unsigned char 
   603 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   604 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  a               2   18[COMRAM] PTR const unsigned char 
   607 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   608 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  2   16[COMRAM] unsigned int 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   618 ;;      Params:         2       0       0       0       0       0       0       0       0
   619 ;;      Locals:         2       0       0       0       0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0
   621 ;;      Totals:         4       0       0       0       0       0       0       0       0
   622 ;;Total ram usage:        4 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 3
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_SERIAL_ESCRIBE_MENSAJE
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text4
   633  0009FE                     __ptext4:
   634                           	callstack 0
   635  0009FE                     _strlen:
   636                           	callstack 26
   637  0009FE  C011  F013         	movff	strlen@s,strlen@a
   638  000A02  C012  F014         	movff	strlen@s+1,strlen@a+1
   639  000A06  EF07  F005         	goto	l866
   640  000A0A                     l864:
   641  000A0A  4A11               	infsnz	strlen@s^0,f,c
   642  000A0C  2A12               	incf	(strlen@s+1)^0,f,c
   643  000A0E                     l866:
   644  000A0E  C011  FFF6         	movff	strlen@s,tblptrl
   645  000A12  C012  FFF7         	movff	strlen@s+1,tblptrh
   646  000A16                     	if	0	;tblptru may be non-zero
   647  000A16                     	endif
   648  000A16                     	if	0	;tblptru may be non-zero
   649  000A16                     	endif
   650  000A16  0008               	tblrd		*
   651  000A18  50F5               	movf	tablat,w,c
   652  000A1A  0900               	iorlw	0
   653  000A1C  A4D8               	btfss	status,2,c
   654  000A1E  EF13  F005         	goto	u111
   655  000A22  EF15  F005         	goto	u110
   656  000A26                     u111:
   657  000A26  EF05  F005         	goto	l864
   658  000A2A                     u110:
   659  000A2A  5013               	movf	strlen@a^0,w,c
   660  000A2C  5C11               	subwf	strlen@s^0,w,c
   661  000A2E  6E11               	movwf	?_strlen^0,c
   662  000A30  5014               	movf	(strlen@a+1)^0,w,c
   663  000A32  5812               	subwfb	(strlen@s+1)^0,w,c
   664  000A34  6E12               	movwf	(?_strlen+1)^0,c
   665  000A36  0012               	return		;funcret
   666  000A38                     __end_of_strlen:
   667                           	callstack 0
   668                           
   669 ;; *************** function _EUSART_conf *****************
   670 ;; Defined at:
   671 ;;		line 17 in file "maincode2.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         0       0       0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 3
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text5
   700  000B08                     __ptext5:
   701                           	callstack 0
   702  000B08                     _EUSART_conf:
   703                           	callstack 27
   704  000B08                     
   705                           ;maincode2.c: 18:     SPBRG = 77;
   706  000B08  0E4D               	movlw	77
   707  000B0A  6EAF               	movwf	175,c	;volatile
   708  000B0C                     
   709                           ;maincode2.c: 19:     RCSTAbits.SPEN = 1;
   710  000B0C  8EAB               	bsf	171,7,c	;volatile
   711  000B0E                     
   712                           ;maincode2.c: 20:     TXSTAbits.TXEN = 1;
   713  000B0E  8AAC               	bsf	172,5,c	;volatile
   714  000B10                     
   715                           ;maincode2.c: 21:     RCSTAbits.CREN = 1;
   716  000B10  88AB               	bsf	171,4,c	;volatile
   717  000B12  0012               	return		;funcret
   718  000B14                     __end_of_EUSART_conf:
   719                           	callstack 0
   720                           
   721 ;; *************** function _EUSART_RX_ISR *****************
   722 ;; Defined at:
   723 ;;		line 51 in file "maincode2.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   737 ;;      Params:         0       0       0       0       0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0
   739 ;;      Temps:          6       0       0       0       0       0       0       0       0
   740 ;;      Totals:         6       0       0       0       0       0       0       0       0
   741 ;;Total ram usage:        6 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 2
   744 ;; This function calls:
   745 ;;		i2_SERIAL_ESCRIBE_MENSAJE
   746 ;;		i2_SERIAL_NEXTLINE
   747 ;; This function is called by:
   748 ;;		Interrupt level 2
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	intcode
   753  000008                     __pintcode:
   754                           	callstack 0
   755  000008                     _EUSART_RX_ISR:
   756                           	callstack 26
   757                           
   758                           ;incstack = 0
   759  000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   760  00000A  ED48  F004         	call	int_func,f	;refresh shadow registers
   761                           
   762                           	psect	intcode_body
   763  000890                     __pintcode_body:
   764                           	callstack 26
   765  000890                     int_func:
   766                           	callstack 26
   767  000890  0006               	pop		; remove dummy address from shadow register refresh
   768  000892  CFF6 F00D          	movff	tblptrl,??_EUSART_RX_ISR+2
   769  000896  CFF7 F00E          	movff	tblptrh,??_EUSART_RX_ISR+3
   770  00089A  CFF8 F00F          	movff	tblptru,??_EUSART_RX_ISR+4
   771  00089E  CFF5 F010          	movff	tablat,??_EUSART_RX_ISR+5
   772  0008A2                     
   773                           ;maincode2.c: 52:     PIR1bits.RCIF = 0;
   774  0008A2  9A9E               	bcf	158,5,c	;volatile
   775                           
   776                           ;maincode2.c: 53:     switch(RCREG){
   777  0008A4  EF82  F004         	goto	i2l944
   778  0008A8                     i2l64:
   779                           
   780                           ;maincode2.c: 55:             LATDbits.LD0 = 1;
   781  0008A8  808C               	bsf	140,0,c	;volatile
   782  0008AA                     
   783                           ;maincode2.c: 56:             SERIAL_ESCRIBE_MENSAJE("Tecla 1 presionada");
   784  0008AA  0E34               	movlw	low STR_1
   785  0008AC  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   786  0008AE  0E08               	movlw	high STR_1
   787  0008B0  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   788  0008B2  ECD4  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
   789  0008B6                     i2l926:
   790                           
   791                           ;maincode2.c: 57:             SERIAL_NEXTLINE();
   792  0008B6  EC64  F005         	call	i2_SERIAL_NEXTLINE	;wreg free
   793                           
   794                           ;maincode2.c: 58:             break;
   795  0008BA  EF9F  F004         	goto	i2l70
   796  0008BE                     i2l66:
   797                           
   798                           ;maincode2.c: 60:             LATDbits.LD0 = 0;
   799  0008BE  908C               	bcf	140,0,c	;volatile
   800  0008C0                     
   801                           ;maincode2.c: 61:             SERIAL_ESCRIBE_MENSAJE("Tecla 2 presionada");
   802  0008C0  0E47               	movlw	low STR_2
   803  0008C2  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   804  0008C4  0E08               	movlw	high STR_2
   805  0008C6  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   806  0008C8  ECD4  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
   807  0008CC  EF5B  F004         	goto	i2l926
   808  0008D0                     i2l67:
   809                           
   810                           ;maincode2.c: 65:             LATDbits.LD1 = 1;
   811  0008D0  828C               	bsf	140,1,c	;volatile
   812  0008D2                     
   813                           ;maincode2.c: 66:             SERIAL_ESCRIBE_MENSAJE("Tecla 3 presionada");
   814  0008D2  0E5A               	movlw	low STR_3
   815  0008D4  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   816  0008D6  0E08               	movlw	high STR_3
   817  0008D8  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   818  0008DA  ECD4  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
   819  0008DE  EF5B  F004         	goto	i2l926
   820  0008E2                     i2l68:
   821                           
   822                           ;maincode2.c: 70:             LATDbits.LD1 = 0;
   823  0008E2  928C               	bcf	140,1,c	;volatile
   824  0008E4                     
   825                           ;maincode2.c: 71:             SERIAL_ESCRIBE_MENSAJE("Tecla 4 presionada");
   826  0008E4  0E6D               	movlw	low STR_4
   827  0008E6  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   828  0008E8  0E08               	movlw	high STR_4
   829  0008EA  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   830  0008EC  ECD4  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
   831  0008F0  EF5B  F004         	goto	i2l926
   832  0008F4                     i2l940:
   833                           
   834                           ;maincode2.c: 75:             SERIAL_ESCRIBE_MENSAJE("Tecla erronea");
   835  0008F4  0E80               	movlw	low STR_5
   836  0008F6  6E05               	movwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,c
   837  0008F8  0E08               	movlw	high STR_5
   838  0008FA  6E06               	movwf	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,c
   839  0008FC  ECD4  F004         	call	i2_SERIAL_ESCRIBE_MENSAJE	;wreg free
   840  000900  EF5B  F004         	goto	i2l926
   841  000904                     i2l944:
   842  000904  50AE               	movf	174,w,c	;volatile
   843  000906  6E0B               	movwf	??_EUSART_RX_ISR^0,c
   844  000908  6A0C               	clrf	(??_EUSART_RX_ISR+1)^0,c
   845                           
   846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   847                           ; Switch size 1, requested type "simple"
   848                           ; Number of cases is 1, Range of values is 0 to 0
   849                           ; switch strategies available:
   850                           ; Name         Instructions Cycles
   851                           ; simple_byte            4     3 (average)
   852                           ;	Chosen strategy is simple_byte
   853  00090A  500C               	movf	(??_EUSART_RX_ISR+1)^0,w,c
   854  00090C  0A00               	xorlw	0	; case 0
   855  00090E  B4D8               	btfsc	status,2,c
   856  000910  EF8C  F004         	goto	i2l954
   857  000914  EF7A  F004         	goto	i2l940
   858  000918                     i2l954:
   859                           
   860                           ; Switch size 1, requested type "simple"
   861                           ; Number of cases is 4, Range of values is 49 to 52
   862                           ; switch strategies available:
   863                           ; Name         Instructions Cycles
   864                           ; simple_byte           13     7 (average)
   865                           ;	Chosen strategy is simple_byte
   866  000918  500B               	movf	??_EUSART_RX_ISR^0,w,c
   867  00091A  0A31               	xorlw	49	; case 49
   868  00091C  B4D8               	btfsc	status,2,c
   869  00091E  EF54  F004         	goto	i2l64
   870  000922  0A03               	xorlw	3	; case 50
   871  000924  B4D8               	btfsc	status,2,c
   872  000926  EF5F  F004         	goto	i2l66
   873  00092A  0A01               	xorlw	1	; case 51
   874  00092C  B4D8               	btfsc	status,2,c
   875  00092E  EF68  F004         	goto	i2l67
   876  000932  0A07               	xorlw	7	; case 52
   877  000934  B4D8               	btfsc	status,2,c
   878  000936  EF71  F004         	goto	i2l68
   879  00093A  EF7A  F004         	goto	i2l940
   880  00093E                     i2l70:
   881  00093E  C010  FFF5         	movff	??_EUSART_RX_ISR+5,tablat
   882  000942  C00F  FFF8         	movff	??_EUSART_RX_ISR+4,tblptru
   883  000946  C00E  FFF7         	movff	??_EUSART_RX_ISR+3,tblptrh
   884  00094A  C00D  FFF6         	movff	??_EUSART_RX_ISR+2,tblptrl
   885  00094E  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   886  000950  0011               	retfie		f
   887  000952                     __end_of_EUSART_RX_ISR:
   888                           	callstack 0
   889                           
   890 ;; *************** function i2_SERIAL_NEXTLINE *****************
   891 ;; Defined at:
   892 ;;		line 34 in file "maincode2.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   906 ;;      Params:         0       0       0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0       0
   909 ;;      Totals:         0       0       0       0       0       0       0       0       0
   910 ;;Total ram usage:        0 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_EUSART_RX_ISR
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text7
   920  000AC8                     __ptext7:
   921                           	callstack 0
   922  000AC8                     i2_SERIAL_NEXTLINE:
   923                           	callstack 27
   924  000AC8                     
   925                           ;maincode2.c: 35:     TXREG = 0x0A;
   926  000AC8  0E0A               	movlw	10
   927  000ACA  6EAD               	movwf	173,c	;volatile
   928  000ACC                     i2l44:
   929  000ACC  A2AC               	btfss	172,1,c	;volatile
   930  000ACE  EF6B  F005         	goto	i2u9_41
   931  000AD2  EF6D  F005         	goto	i2u9_40
   932  000AD6                     i2u9_41:
   933  000AD6  EF66  F005         	goto	i2l44
   934  000ADA                     i2u9_40:
   935  000ADA                     
   936                           ;maincode2.c: 37:     TXREG = 0x0D;
   937  000ADA  0E0D               	movlw	13
   938  000ADC  6EAD               	movwf	173,c	;volatile
   939  000ADE                     i2l47:
   940  000ADE  A2AC               	btfss	172,1,c	;volatile
   941  000AE0  EF74  F005         	goto	i2u10_41
   942  000AE4  EF76  F005         	goto	i2u10_40
   943  000AE8                     i2u10_41:
   944  000AE8  EF6F  F005         	goto	i2l47
   945  000AEC                     i2u10_40:
   946  000AEC  0012               	return		;funcret
   947  000AEE                     __end_ofi2_SERIAL_NEXTLINE:
   948                           	callstack 0
   949                           
   950 ;; *************** function i2_SERIAL_ESCRIBE_MENSAJE *****************
   951 ;; Defined at:
   952 ;;		line 24 in file "maincode2.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   955 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
   956 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  x               1    9[COMRAM] unsigned char 
   959 ;;  tam             1    8[COMRAM] unsigned char 
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         2       0       0       0       0       0       0       0       0
   970 ;;      Locals:         2       0       0       0       0       0       0       0       0
   971 ;;      Temps:          2       0       0       0       0       0       0       0       0
   972 ;;      Totals:         6       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        6 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 1
   976 ;; This function calls:
   977 ;;		i2_strlen
   978 ;; This function is called by:
   979 ;;		_EUSART_RX_ISR
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text8
   984  0009A8                     __ptext8:
   985                           	callstack 0
   986  0009A8                     i2_SERIAL_ESCRIBE_MENSAJE:
   987                           	callstack 26
   988  0009A8                     
   989                           ;maincode2.c: 26:     tam = strlen(cadena);
   990  0009A8  C005  F001         	movff	i2SERIAL_ESCRIBE_MENSAJE@cadena,i2strlen@s
   991  0009AC  C006  F002         	movff	i2SERIAL_ESCRIBE_MENSAJE@cadena+1,i2strlen@s+1
   992  0009B0  EC1C  F005         	call	i2_strlen	;wreg free
   993  0009B4  5001               	movf	?i2_strlen^0,w,c
   994  0009B6  6E09               	movwf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,c
   995  0009B8                     
   996                           ;maincode2.c: 28:     for(x=0;x<tam;x++){
   997  0009B8  0E00               	movlw	0
   998  0009BA  6E0A               	movwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,c
   999  0009BC  EFF5  F004         	goto	i2l908
  1000  0009C0                     i2l904:
  1001                           
  1002                           ;maincode2.c: 29:         TXREG = cadena[x];
  1003  0009C0  500A               	movf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1004  0009C2  2405               	addwf	i2SERIAL_ESCRIBE_MENSAJE@cadena^0,w,c
  1005  0009C4  6E07               	movwf	??i2_SERIAL_ESCRIBE_MENSAJE^0,c
  1006  0009C6  0E00               	movlw	0
  1007  0009C8  2006               	addwfc	(i2SERIAL_ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1008  0009CA  6E08               	movwf	(??i2_SERIAL_ESCRIBE_MENSAJE+1)^0,c
  1009  0009CC  C007  FFF6         	movff	??i2_SERIAL_ESCRIBE_MENSAJE,tblptrl
  1010  0009D0  C008  FFF7         	movff	??i2_SERIAL_ESCRIBE_MENSAJE+1,tblptrh
  1011  0009D4                     	if	0	;tblptru may be non-zero
  1012  0009D4                     	endif
  1013  0009D4                     	if	0	;tblptru may be non-zero
  1014  0009D4                     	endif
  1015  0009D4  0008               	tblrd		*
  1016  0009D6  CFF5 FFAD          	movff	tablat,4013	;volatile
  1017  0009DA                     i2l37:
  1018  0009DA  A2AC               	btfss	172,1,c	;volatile
  1019  0009DC  EFF2  F004         	goto	i2u15_41
  1020  0009E0  EFF4  F004         	goto	i2u15_40
  1021  0009E4                     i2u15_41:
  1022  0009E4  EFED  F004         	goto	i2l37
  1023  0009E8                     i2u15_40:
  1024  0009E8                     
  1025                           ;maincode2.c: 31:     }
  1026  0009E8  2A0A               	incf	i2SERIAL_ESCRIBE_MENSAJE@x^0,f,c
  1027  0009EA                     i2l908:
  1028  0009EA  5009               	movf	i2SERIAL_ESCRIBE_MENSAJE@tam^0,w,c
  1029  0009EC  5C0A               	subwf	i2SERIAL_ESCRIBE_MENSAJE@x^0,w,c
  1030  0009EE  A0D8               	btfss	status,0,c
  1031  0009F0  EFFC  F004         	goto	i2u16_41
  1032  0009F4  EFFE  F004         	goto	i2u16_40
  1033  0009F8                     i2u16_41:
  1034  0009F8  EFE0  F004         	goto	i2l904
  1035  0009FC                     i2u16_40:
  1036  0009FC  0012               	return		;funcret
  1037  0009FE                     __end_ofi2_SERIAL_ESCRIBE_MENSAJE:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function i2_strlen *****************
  1041 ;; Defined at:
  1042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1045 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1046 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1049 ;;		 -> STR_5(14), STR_4(19), STR_3(19), STR_2(19), 
  1050 ;;		 -> STR_1(19), mensaje2(28), mensaje1(23), 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2    0[COMRAM] unsigned int 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1060 ;;      Params:         2       0       0       0       0       0       0       0       0
  1061 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1063 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1064 ;;Total ram usage:        4 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		i2_SERIAL_ESCRIBE_MENSAJE
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text9
  1074  000A38                     __ptext9:
  1075                           	callstack 0
  1076  000A38                     i2_strlen:
  1077                           	callstack 26
  1078  000A38  C001  F003         	movff	i2strlen@s,i2strlen@a
  1079  000A3C  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  1080  000A40  EF24  F005         	goto	i2l876
  1081  000A44                     i2l874:
  1082  000A44  4A01               	infsnz	i2strlen@s^0,f,c
  1083  000A46  2A02               	incf	(i2strlen@s+1)^0,f,c
  1084  000A48                     i2l876:
  1085  000A48  C001  FFF6         	movff	i2strlen@s,tblptrl
  1086  000A4C  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  1087  000A50                     	if	0	;tblptru may be non-zero
  1088  000A50                     	endif
  1089  000A50                     	if	0	;tblptru may be non-zero
  1090  000A50                     	endif
  1091  000A50  0008               	tblrd		*
  1092  000A52  50F5               	movf	tablat,w,c
  1093  000A54  0900               	iorlw	0
  1094  000A56  A4D8               	btfss	status,2,c
  1095  000A58  EF30  F005         	goto	i2u12_41
  1096  000A5C  EF32  F005         	goto	i2u12_40
  1097  000A60                     i2u12_41:
  1098  000A60  EF22  F005         	goto	i2l874
  1099  000A64                     i2u12_40:
  1100  000A64  5003               	movf	i2strlen@a^0,w,c
  1101  000A66  5C01               	subwf	i2strlen@s^0,w,c
  1102  000A68  6E01               	movwf	?i2_strlen^0,c
  1103  000A6A  5004               	movf	(i2strlen@a+1)^0,w,c
  1104  000A6C  5802               	subwfb	(i2strlen@s+1)^0,w,c
  1105  000A6E  6E02               	movwf	(?i2_strlen+1)^0,c
  1106  000A70  0012               	return		;funcret
  1107  000A72                     __end_ofi2_strlen:
  1108                           	callstack 0
  1109                           
  1110                           	psect	rparam
  1111  0000                     
  1112                           	psect	temp
  1113  00001B                     btemp:
  1114                           	callstack 0
  1115  00001B                     	ds	1
  1116  0000                     int$flags	set	btemp
  1117  0000                     wtemp8	set	btemp+1
  1118  0000                     ttemp5	set	btemp+1
  1119  0000                     ttemp6	set	btemp+4
  1120  0000                     ttemp7	set	btemp+8
  1121                           
  1122                           	psect	idloc
  1123                           
  1124                           ;Config register IDLOC0 @ 0x200000
  1125                           ;	unspecified, using default values
  1126  200000                     	org	2097152
  1127  200000  FF                 	db	255
  1128                           
  1129                           ;Config register IDLOC1 @ 0x200001
  1130                           ;	unspecified, using default values
  1131  200001                     	org	2097153
  1132  200001  FF                 	db	255
  1133                           
  1134                           ;Config register IDLOC2 @ 0x200002
  1135                           ;	unspecified, using default values
  1136  200002                     	org	2097154
  1137  200002  FF                 	db	255
  1138                           
  1139                           ;Config register IDLOC3 @ 0x200003
  1140                           ;	unspecified, using default values
  1141  200003                     	org	2097155
  1142  200003  FF                 	db	255
  1143                           
  1144                           ;Config register IDLOC4 @ 0x200004
  1145                           ;	unspecified, using default values
  1146  200004                     	org	2097156
  1147  200004  FF                 	db	255
  1148                           
  1149                           ;Config register IDLOC5 @ 0x200005
  1150                           ;	unspecified, using default values
  1151  200005                     	org	2097157
  1152  200005  FF                 	db	255
  1153                           
  1154                           ;Config register IDLOC6 @ 0x200006
  1155                           ;	unspecified, using default values
  1156  200006                     	org	2097158
  1157  200006  FF                 	db	255
  1158                           
  1159                           ;Config register IDLOC7 @ 0x200007
  1160                           ;	unspecified, using default values
  1161  200007                     	org	2097159
  1162  200007  FF                 	db	255
  1163                           
  1164                           	psect	config
  1165                           
  1166                           ;Config register CONFIG1L @ 0x300000
  1167                           ;	PLL Prescaler Selection bits
  1168                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1169                           ;	System Clock Postscaler Selection bits
  1170                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1171                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1172                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1173  300000                     	org	3145728
  1174  300000  00                 	db	0
  1175                           
  1176                           ;Config register CONFIG1H @ 0x300001
  1177                           ;	Oscillator Selection bits
  1178                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1179                           ;	Fail-Safe Clock Monitor Enable bit
  1180                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1181                           ;	Internal/External Oscillator Switchover bit
  1182                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1183  300001                     	org	3145729
  1184  300001  02                 	db	2
  1185                           
  1186                           ;Config register CONFIG2L @ 0x300002
  1187                           ;	Power-up Timer Enable bit
  1188                           ;	PWRT = ON, PWRT enabled
  1189                           ;	Brown-out Reset Enable bits
  1190                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1191                           ;	Brown-out Reset Voltage bits
  1192                           ;	BORV = 3, Minimum setting 2.05V
  1193                           ;	USB Voltage Regulator Enable bit
  1194                           ;	VREGEN = OFF, USB voltage regulator disabled
  1195  300002                     	org	3145730
  1196  300002  18                 	db	24
  1197                           
  1198                           ;Config register CONFIG2H @ 0x300003
  1199                           ;	Watchdog Timer Enable bit
  1200                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1201                           ;	Watchdog Timer Postscale Select bits
  1202                           ;	WDTPS = 32768, 1:32768
  1203  300003                     	org	3145731
  1204  300003  1E                 	db	30
  1205                           
  1206                           ; Padding undefined space
  1207  300004                     	org	3145732
  1208  300004  FF                 	db	255
  1209                           
  1210                           ;Config register CONFIG3H @ 0x300005
  1211                           ;	CCP2 MUX bit
  1212                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1213                           ;	PORTB A/D Enable bit
  1214                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1215                           ;	Low-Power Timer 1 Oscillator Enable bit
  1216                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1217                           ;	MCLR Pin Enable bit
  1218                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1219  300005                     	org	3145733
  1220  300005  81                 	db	129
  1221                           
  1222                           ;Config register CONFIG4L @ 0x300006
  1223                           ;	Stack Full/Underflow Reset Enable bit
  1224                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1225                           ;	Single-Supply ICSP Enable bit
  1226                           ;	LVP = OFF, Single-Supply ICSP disabled
  1227                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1228                           ;	ICPRT = OFF, ICPORT disabled
  1229                           ;	Extended Instruction Set Enable bit
  1230                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1231                           ;	Background Debugger Enable bit
  1232                           ;	DEBUG = 0x1, unprogrammed default
  1233  300006                     	org	3145734
  1234  300006  81                 	db	129
  1235                           
  1236                           ; Padding undefined space
  1237  300007                     	org	3145735
  1238  300007  FF                 	db	255
  1239                           
  1240                           ;Config register CONFIG5L @ 0x300008
  1241                           ;	Code Protection bit
  1242                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1243                           ;	Code Protection bit
  1244                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1245                           ;	Code Protection bit
  1246                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1247                           ;	Code Protection bit
  1248                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1249  300008                     	org	3145736
  1250  300008  0F                 	db	15
  1251                           
  1252                           ;Config register CONFIG5H @ 0x300009
  1253                           ;	Boot Block Code Protection bit
  1254                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1255                           ;	Data EEPROM Code Protection bit
  1256                           ;	CPD = OFF, Data EEPROM is not code-protected
  1257  300009                     	org	3145737
  1258  300009  C0                 	db	192
  1259                           
  1260                           ;Config register CONFIG6L @ 0x30000A
  1261                           ;	Write Protection bit
  1262                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1263                           ;	Write Protection bit
  1264                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1265                           ;	Write Protection bit
  1266                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1267                           ;	Write Protection bit
  1268                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1269  30000A                     	org	3145738
  1270  30000A  0F                 	db	15
  1271                           
  1272                           ;Config register CONFIG6H @ 0x30000B
  1273                           ;	Configuration Register Write Protection bit
  1274                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1275                           ;	Boot Block Write Protection bit
  1276                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1277                           ;	Data EEPROM Write Protection bit
  1278                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1279  30000B                     	org	3145739
  1280  30000B  E0                 	db	224
  1281                           
  1282                           ;Config register CONFIG7L @ 0x30000C
  1283                           ;	Table Read Protection bit
  1284                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1285                           ;	Table Read Protection bit
  1286                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1287                           ;	Table Read Protection bit
  1288                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1289                           ;	Table Read Protection bit
  1290                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1291  30000C                     	org	3145740
  1292  30000C  0F                 	db	15
  1293                           
  1294                           ;Config register CONFIG7H @ 0x30000D
  1295                           ;	Boot Block Table Read Protection bit
  1296                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1297  30000D                     	org	3145741
  1298  30000D  40                 	db	64
  1299                           tosu	equ	0xFFF
  1300                           tosh	equ	0xFFE
  1301                           tosl	equ	0xFFD
  1302                           stkptr	equ	0xFFC
  1303                           pclatu	equ	0xFFB
  1304                           pclath	equ	0xFFA
  1305                           pcl	equ	0xFF9
  1306                           tblptru	equ	0xFF8
  1307                           tblptrh	equ	0xFF7
  1308                           tblptrl	equ	0xFF6
  1309                           tablat	equ	0xFF5
  1310                           prodh	equ	0xFF4
  1311                           prodl	equ	0xFF3
  1312                           indf0	equ	0xFEF
  1313                           postinc0	equ	0xFEE
  1314                           postdec0	equ	0xFED
  1315                           preinc0	equ	0xFEC
  1316                           plusw0	equ	0xFEB
  1317                           fsr0h	equ	0xFEA
  1318                           fsr0l	equ	0xFE9
  1319                           wreg	equ	0xFE8
  1320                           indf1	equ	0xFE7
  1321                           postinc1	equ	0xFE6
  1322                           postdec1	equ	0xFE5
  1323                           preinc1	equ	0xFE4
  1324                           plusw1	equ	0xFE3
  1325                           fsr1h	equ	0xFE2
  1326                           fsr1l	equ	0xFE1
  1327                           bsr	equ	0xFE0
  1328                           indf2	equ	0xFDF
  1329                           postinc2	equ	0xFDE
  1330                           postdec2	equ	0xFDD
  1331                           preinc2	equ	0xFDC
  1332                           plusw2	equ	0xFDB
  1333                           fsr2h	equ	0xFDA
  1334                           fsr2l	equ	0xFD9
  1335                           status	equ	0xFD8

Data Sizes:
    Strings     90
    Constant    51
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), mensaje2(CODE[28]), mensaje1(CODE[23]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), mensaje2(CODE[28]), mensaje1(CODE[23]), 

    SERIAL_ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_5(CODE[14]), STR_4(CODE[19]), STR_3(CODE[19]), STR_2(CODE[19]), 
		 -> STR_1(CODE[19]), mensaje2(CODE[28]), mensaje1(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_SERIAL_ESCRIBE_MENSAJE
    _SERIAL_ESCRIBE_MENSAJE->_strlen

Critical Paths under _EUSART_RX_ISR in COMRAM

    _EUSART_RX_ISR->i2_SERIAL_ESCRIBE_MENSAJE
    i2_SERIAL_ESCRIBE_MENSAJE->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _EUSART_RX_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EUSART_RX_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EUSART_RX_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EUSART_RX_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _EUSART_RX_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _EUSART_RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _EUSART_RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _EUSART_RX_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     683
                        _EUSART_conf
             _SERIAL_ESCRIBE_MENSAJE
                    _SERIAL_NEXTLINE
                          _init_conf
 ---------------------------------------------------------------------------------
 (1) _init_conf                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_NEXTLINE                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_ESCRIBE_MENSAJE                               6     4      2     683
                                             20 COMRAM     6     4      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_conf                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_ISR                                        6     6      0     361
                                             10 COMRAM     6     6      0
           i2_SERIAL_ESCRIBE_MENSAJE
                  i2_SERIAL_NEXTLINE
 ---------------------------------------------------------------------------------
 (4) i2_SERIAL_NEXTLINE                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) i2_SERIAL_ESCRIBE_MENSAJE                             6     4      2     361
                                              4 COMRAM     6     4      2
                           i2_strlen
 ---------------------------------------------------------------------------------
 (5) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_conf
   _SERIAL_ESCRIBE_MENSAJE
     _strlen
   _SERIAL_NEXTLINE
   _init_conf

 _EUSART_RX_ISR (ROOT)
   i2_SERIAL_ESCRIBE_MENSAJE
     i2_strlen
   i2_SERIAL_NEXTLINE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     1A      1A       1       27.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 16 21:04:32 2021

                               l32 0B12                                 l41 09A6  
                               l50 0AC6                                 l44 0AA6  
                               l37 0984                                 l29 0B06  
                               l47 0AB8                                 l55 0A9A  
                               l56 0A9A                                 u50 0AB4  
                               u51 0AB0                                 u60 0AC6  
                               u61 0AC2       SERIAL_ESCRIBE_MENSAJE@cadena 0015  
                              l750 0A36                                l910 0A72  
                              l920 0A96                                l912 0A76  
                              l914 0A7A                                l780 0B10  
                              l772 0AFC                                l916 0A86  
                              l774 0B08                                l862 09FE  
                              l918 0A8A                                l776 0B0C  
                              l864 0A0A                                l778 0B0E  
                              l866 0A0E                                l890 096A  
                              l882 0952                                l868 0A2A  
                              l892 0992                                l884 0952  
                              l796 0AA2                                l894 0994  
                              l886 0962                                l798 0AB4  
                              l888 0962                                u110 0A2A  
                              u111 0A26                                u130 0992  
                              u131 098E                                u140 09A6  
                              u141 09A2                   ?_SERIAL_NEXTLINE 0001  
                     ?_EUSART_conf 0001                               STR_1 0834  
                             STR_2 0847                               STR_3 085A  
                             STR_4 086D                               STR_5 0880  
                             i2l41 09FC                               i2l50 0AEC  
                             i2l44 0ACC                               i2l37 09DA  
                             i2l70 093E                               i2l47 0ADE  
                             i2l64 08A8                               i2l66 08BE  
                             i2l67 08D0                               i2l68 08E2  
         i2_SERIAL_ESCRIBE_MENSAJE 09A8                               _main 0A72  
                             btemp 001B                               start 000E  
                     ___param_bank 000000                      _EUSART_RX_ISR 0008  
                            ?_main 0001                              i2l900 09B8  
                            i2l750 0A70                              i2l902 09B8  
                            i2l814 0AC8                              i2l904 09C0  
                            i2l816 0ADA                              i2l906 09E8  
                            i2l922 08A2                              i2l908 09EA  
                            i2l940 08F4                              i2l932 08D2  
                            i2l924 08AA                              i2l926 08B6  
                            i2l872 0A38                              i2l936 08E4  
                            i2l928 08C0                              i2l944 0904  
                            i2l874 0A44                              i2l954 0918  
                            i2l876 0A48                              i2l878 0A64  
                            i2l896 09A8                              i2l898 09A8  
                            _RCREG 000FAE                              _SPBRG 000FAF  
                            _TXREG 000FAD                              tablat 000FF5  
                            ttemp5 001C                              ttemp6 001F  
                            ttemp7 0023                              status 000FD8  
                            wtemp8 001C                   __end_ofi2_strlen 0A72  
                  __initialization 0AEE                       __end_of_main 0AA2  
                   ?_EUSART_RX_ISR 0001                             ??_main 001B  
                    __activetblptr 000002                             i2u9_40 0ADA  
                           i2u9_41 0AD6            SERIAL_ESCRIBE_MENSAJE@x 001A  
                 __end_of_mensaje1 0834                   __end_of_mensaje2 081D  
                           isa$std 000001                             _strlen 09FE  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                       __accesstop 0060            __end_of__initialization 0AEE  
             __size_of_EUSART_conf 000C                      ___rparam_used 000001  
                   __pcstackCOMRAM 0001                    ??_EUSART_RX_ISR 000B  
       ??i2_SERIAL_ESCRIBE_MENSAJE 0007                          ?i2_strlen 0001  
   i2SERIAL_ESCRIBE_MENSAJE@cadena 0005                 __size_of_init_conf 000C  
                          ?_strlen 0011                            i2u10_40 0AEC  
                          i2u10_41 0AE8                            i2u12_40 0A64  
                          i2u12_41 0A60                            i2u15_40 09E8  
                          i2u15_41 09E4                            i2u16_40 09FC  
                          i2u16_41 09F8                         ??i2_strlen 0003  
         __size_of_SERIAL_NEXTLINE 0026                            __Hparam 0000  
                          __Lparam 0000                       __psmallconst 0800  
                          __pcinit 0AEE                            __ramtop 0800  
                          __ptext0 0A72                            __ptext1 0AFC  
                          __ptext2 0AA2                            __ptext3 0952  
                          __ptext4 09FE                            __ptext5 0B08  
                          __ptext7 0AC8                            __ptext8 09A8  
                          __ptext9 0A38                    __size_of_strlen 003A  
                __end_of_init_conf 0B08           ??_SERIAL_ESCRIBE_MENSAJE 0017  
        SERIAL_ESCRIBE_MENSAJE@tam 0019                     __pintcode_body 0890  
             end_of_initialization 0AEE                      __Lmediumconst 0000  
                          int_func 0890                  i2_SERIAL_NEXTLINE 0AC8  
               ?i2_SERIAL_NEXTLINE 0001                          _RCSTAbits 000FAB  
              ??i2_SERIAL_NEXTLINE 0001                            strlen@a 0013  
                          strlen@s 0011                          _TRISDbits 000F95  
        __end_ofi2_SERIAL_NEXTLINE 0AEE                          _TXSTAbits 000FAC  
                ??_SERIAL_NEXTLINE 0011                     __end_of_strlen 0A38  
              start_initialization 0AEE    __size_of_SERIAL_ESCRIBE_MENSAJE 0056  
                    ??_EUSART_conf 0011          i2SERIAL_ESCRIBE_MENSAJE@x 000A  
                __size_ofi2_strlen 003A                          i2strlen@a 0003  
                        i2strlen@s 0001              __end_of_EUSART_RX_ISR 0952  
                         ??_strlen 0013         __size_ofi2_SERIAL_NEXTLINE 0026  
              __end_of_EUSART_conf 0B14  __size_ofi2_SERIAL_ESCRIBE_MENSAJE 0056  
        ?i2_SERIAL_ESCRIBE_MENSAJE 0005             _SERIAL_ESCRIBE_MENSAJE 0952  
                        __pintcode 0008                        __smallconst 0800  
                        _init_conf 0AFC                           _LATDbits 000F8C  
                         _PIE1bits 000F9D                           _PIR1bits 000F9E  
                         i2_strlen 0A38                         ?_init_conf 0001  
                      _EUSART_conf 0B08                    _SERIAL_NEXTLINE 0AA2  
                         __Hrparam 0000                           __Lrparam 0000  
                    __size_of_main 0030                           _mensaje1 081D  
                         _mensaje2 0801                           isa$xinst 000000  
                         int$flags 001B        i2SERIAL_ESCRIBE_MENSAJE@tam 0009  
                       _INTCONbits 000FF2            __end_of_SERIAL_NEXTLINE 0AC8  
 __end_ofi2_SERIAL_ESCRIBE_MENSAJE 09FE                        ??_init_conf 0011  
                         intlevel2 0000            ?_SERIAL_ESCRIBE_MENSAJE 0015  
   __end_of_SERIAL_ESCRIBE_MENSAJE 09A8             __size_of_EUSART_RX_ISR 094A  
