

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 24 14:28:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000A12                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _reloj7
    68  000A12  1F                 	db	31
    69  000A13  1F                 	db	31
    70  000A14  0E                 	db	14
    71  000A15  04                 	db	4
    72  000A16  0A                 	db	10
    73  000A17  11                 	db	17
    74  000A18  1F                 	db	31
    75  000A19  00                 	db	0
    76                           
    77                           ;initializer for _reloj6
    78  000A1A  0E                 	db	14
    79  000A1B  0F                 	db	15
    80  000A1C  1F                 	db	31
    81  000A1D  07                 	db	7
    82  000A1E  04                 	db	4
    83  000A1F  14                 	db	20
    84  000A20  0C                 	db	12
    85  000A21  00                 	db	0
    86                           
    87                           ;initializer for _reloj5
    88  000A22  00                 	db	0
    89  000A23  11                 	db	17
    90  000A24  1B                 	db	27
    91  000A25  07                 	db	7
    92  000A26  1B                 	db	27
    93  000A27  11                 	db	17
    94  000A28  00                 	db	0
    95  000A29  00                 	db	0
    96                           
    97                           ;initializer for _reloj4
    98  000A2A  0A                 	db	10
    99  000A2B  12                 	db	18
   100  000A2C  03                 	db	3
   101  000A2D  1F                 	db	31
   102  000A2E  07                 	db	7
   103  000A2F  07                 	db	7
   104  000A30  06                 	db	6
   105  000A31  00                 	db	0
   106                           
   107                           ;initializer for _reloj3
   108  000A32  1F                 	db	31
   109  000A33  11                 	db	17
   110  000A34  0A                 	db	10
   111  000A35  04                 	db	4
   112  000A36  0E                 	db	14
   113  000A37  1F                 	db	31
   114  000A38  1F                 	db	31
   115  000A39  00                 	db	0
   116                           
   117                           ;initializer for _reloj2
   118  000A3A  1F                 	db	31
   119  000A3B  11                 	db	17
   120  000A3C  0E                 	db	14
   121  000A3D  04                 	db	4
   122  000A3E  0A                 	db	10
   123  000A3F  1F                 	db	31
   124  000A40  1F                 	db	31
   125  000A41  00                 	db	0
   126                           
   127                           ;initializer for _reloj1
   128  000A42  1F                 	db	31
   129  000A43  1B                 	db	27
   130  000A44  0E                 	db	14
   131  000A45  04                 	db	4
   132  000A46  0A                 	db	10
   133  000A47  15                 	db	21
   134  000A48  1F                 	db	31
   135  000A49  00                 	db	0
   136                           
   137                           ;initializer for _reloj0
   138  000A4A  1F                 	db	31
   139  000A4B  1F                 	db	31
   140  000A4C  0E                 	db	14
   141  000A4D  04                 	db	4
   142  000A4E  0A                 	db	10
   143  000A4F  11                 	db	17
   144  000A50  1F                 	db	31
   145  000A51  00                 	db	0
   146  0000                     _PORTD	set	3971
   147  0000                     _LATD	set	3980
   148  0000                     _LATDbits	set	3980
   149  0000                     _TRISD	set	3989
   150                           
   151                           	psect	smallconst
   152  000800                     __psmallconst:
   153                           	callstack 0
   154  000800  00                 	db	0
   155  000801                     STR_1:
   156  000801  43                 	db	67	;'C'
   157  000802  61                 	db	97	;'a'
   158  000803  72                 	db	114	;'r'
   159  000804  67                 	db	103	;'g'
   160  000805  61                 	db	97	;'a'
   161  000806  6E                 	db	110	;'n'
   162  000807  64                 	db	100	;'d'
   163  000808  6F                 	db	111	;'o'
   164  000809  20                 	db	32
   165  00080A  73                 	db	115	;'s'
   166  00080B  69                 	db	105	;'i'
   167  00080C  73                 	db	115	;'s'
   168  00080D  74                 	db	116	;'t'
   169  00080E  65                 	db	101	;'e'
   170  00080F  6D                 	db	109	;'m'
   171  000810  61                 	db	97	;'a'
   172  000811  00                 	db	0
   173  000812  00                 	db	0	; dummy byte at the end
   174  0000                     
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178  000B9E                     __pcinit:
   179                           	callstack 0
   180  000B9E                     start_initialization:
   181                           	callstack 0
   182  000B9E                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Initialize objects allocated to COMRAM (64 bytes)
   186                           ; load TBLPTR registers with __pidataCOMRAM
   187  000B9E  0E12               	movlw	low __pidataCOMRAM
   188  000BA0  6EF6               	movwf	tblptrl,c
   189  000BA2  0E0A               	movlw	high __pidataCOMRAM
   190  000BA4  6EF7               	movwf	tblptrh,c
   191  000BA6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   192  000BA8  6EF8               	movwf	tblptru,c
   193  000BAA  EE00  F001         	lfsr	0,__pdataCOMRAM
   194  000BAE  EE10 F040          	lfsr	1,64
   195  000BB2                     copy_data0:
   196  000BB2  0009               	tblrd		*+
   197  000BB4  CFF5 FFEE          	movff	tablat,postinc0
   198  000BB8  50E5               	movf	postdec1,w,c
   199  000BBA  50E1               	movf	fsr1l,w,c
   200  000BBC  E1FA               	bnz	copy_data0
   201  000BBE                     end_of_initialization:
   202                           	callstack 0
   203  000BBE                     __end_of__initialization:
   204                           	callstack 0
   205  000BBE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   206  000BC0  6EF8               	movwf	tblptru,c
   207  000BC2  0E08               	movlw	high __Lsmallconst
   208  000BC4  6EF7               	movwf	tblptrh,c
   209  000BC6  0100               	movlb	0
   210  000BC8  EFA2  F004         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	dataCOMRAM
   213  000001                     __pdataCOMRAM:
   214                           	callstack 0
   215  000001                     _reloj7:
   216                           	callstack 0
   217  000001                     	ds	8
   218  000009                     _reloj6:
   219                           	callstack 0
   220  000009                     	ds	8
   221  000011                     _reloj5:
   222                           	callstack 0
   223  000011                     	ds	8
   224  000019                     _reloj4:
   225                           	callstack 0
   226  000019                     	ds	8
   227  000021                     _reloj3:
   228                           	callstack 0
   229  000021                     	ds	8
   230  000029                     _reloj2:
   231                           	callstack 0
   232  000029                     	ds	8
   233  000031                     _reloj1:
   234                           	callstack 0
   235  000031                     	ds	8
   236  000039                     _reloj0:
   237                           	callstack 0
   238  000039                     	ds	8
   239                           
   240                           	psect	cstackCOMRAM
   241  000041                     __pcstackCOMRAM:
   242                           	callstack 0
   243  000041                     ENVIA_NIBBLE@dato:
   244                           	callstack 0
   245  000041                     LEER_LCD@aux:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x0
   249  000041                     	ds	1
   250  000042                     ENVIA_CHAR@dato:
   251                           	callstack 0
   252  000042                     ENVIA_LCD_CMD@dato:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x1
   256  000042                     	ds	1
   257  000043                     ENVIA_CHAR@aux:
   258                           	callstack 0
   259  000043                     ENVIA_LCD_CMD@aux:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x2
   263  000043                     	ds	1
   264  000044                     ??_LCD_CONFIG:
   265  000044                     POS_CURSOR@columna:
   266                           	callstack 0
   267  000044                     CURSOR_ONOFF@estado:
   268                           	callstack 0
   269  000044                     ESCRIBE_MENSAJE@cadena:
   270                           	callstack 0
   271  000044                     GENERACARACTER@vector:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x3
   275  000044                     	ds	1
   276  000045                     POS_CURSOR@fila:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x4
   280  000045                     	ds	1
   281  000046                     ESCRIBE_MENSAJE@tam:
   282                           	callstack 0
   283  000046                     GENERACARACTER@pos:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x5
   287  000046                     	ds	1
   288  000047                     ??_ESCRIBE_MENSAJE:
   289  000047                     GENERACARACTER@i:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x6
   293  000047                     	ds	1
   294  000048                     ??_LCD_Init:
   295                           
   296                           ; 1 bytes @ 0x7
   297  000048                     	ds	1
   298  000049                     ESCRIBE_MENSAJE@i:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x8
   302  000049                     	ds	1
   303  00004A                     ??_main:
   304                           
   305                           ; 1 bytes @ 0x9
   306  00004A                     	ds	2
   307  00004C                     main@y:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0xB
   311  00004C                     	ds	1
   312  00004D                     main@x:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xC
   316  00004D                     	ds	1
   317                           
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 34 in file "maincode.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  x               1   12[COMRAM] unsigned char 
   328 ;;  y               1   11[COMRAM] unsigned char 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         0       0       0       0       0       0       0       0       0
   339 ;;      Locals:         2       0       0       0       0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0
   341 ;;      Totals:         4       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        4 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ENVIA_CHAR
   346 ;;		_ESCRIBE_MENSAJE
   347 ;;		_LCD_Init
   348 ;;		_POS_CURSOR
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355  000944                     __ptext0:
   356                           	callstack 0
   357  000944                     _main:
   358                           	callstack 27
   359  000944                     
   360                           ;maincode.c: 35:     LCD_Init();
   361  000944  EC0A  F004         	call	_LCD_Init	;wreg free
   362  000948                     
   363                           ;maincode.c: 36:     ESCRIBE_MENSAJE("Cargando sistema",16);
   364  000948  0E01               	movlw	low STR_1
   365  00094A  6E44               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   366  00094C  0E08               	movlw	high STR_1
   367  00094E  6E45               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   368  000950  0E10               	movlw	16
   369  000952  6E46               	movwf	ESCRIBE_MENSAJE@tam^0,c
   370  000954  EC29  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   371  000958                     
   372                           ;maincode.c: 39:     for(y=0;y<5;y++){
   373  000958  0E00               	movlw	0
   374  00095A  6E4C               	movwf	main@y^0,c
   375  00095C                     l1113:
   376                           
   377                           ;maincode.c: 40:         for(x=0;x<8;x++){
   378  00095C  0E00               	movlw	0
   379  00095E  6E4D               	movwf	main@x^0,c
   380  000960                     l1119:
   381                           
   382                           ;maincode.c: 41:             POS_CURSOR(2,0);
   383  000960  0E00               	movlw	0
   384  000962  6E44               	movwf	POS_CURSOR@columna^0,c
   385  000964  0E02               	movlw	2
   386  000966  EC66  F005         	call	_POS_CURSOR
   387                           
   388                           ;maincode.c: 42:             ENVIA_CHAR(x);
   389  00096A  504D               	movf	main@x^0,w,c
   390  00096C  EC9D  F005         	call	_ENVIA_CHAR
   391  000970                     
   392                           ;maincode.c: 43:             _delay((unsigned long)((200)*(48000000UL/4000.0)));
   393  000970  0E0D               	movlw	13
   394  000972  6E4B               	movwf	(??_main+1)^0,c
   395  000974  0E2D               	movlw	45
   396  000976  6E4A               	movwf	??_main^0,c
   397  000978  0ED8               	movlw	216
   398  00097A                     u207:
   399  00097A  2EE8               	decfsz	wreg,f,c
   400  00097C  D7FE               	bra	u207
   401  00097E  2E4A               	decfsz	??_main^0,f,c
   402  000980  D7FC               	bra	u207
   403  000982  2E4B               	decfsz	(??_main+1)^0,f,c
   404  000984  D7FA               	bra	u207
   405  000986                     
   406                           ;maincode.c: 44:         }
   407  000986  2A4D               	incf	main@x^0,f,c
   408  000988  0E07               	movlw	7
   409  00098A  644D               	cpfsgt	main@x^0,c
   410  00098C  EFCA  F004         	goto	u181
   411  000990  EFCC  F004         	goto	u180
   412  000994                     u181:
   413  000994  EFB0  F004         	goto	l1119
   414  000998                     u180:
   415  000998                     
   416                           ;maincode.c: 45:     }
   417  000998  2A4C               	incf	main@y^0,f,c
   418  00099A  0E04               	movlw	4
   419  00099C  644C               	cpfsgt	main@y^0,c
   420  00099E  EFD3  F004         	goto	u191
   421  0009A2  EFD5  F004         	goto	u190
   422  0009A6                     u191:
   423  0009A6  EFAE  F004         	goto	l1113
   424  0009AA                     u190:
   425  0009AA                     l48:
   426  0009AA  EFD5  F004         	goto	l48
   427  0009AE  EF00  F000         	goto	start
   428  0009B2                     __end_of_main:
   429                           	callstack 0
   430                           
   431 ;; *************** function _POS_CURSOR *****************
   432 ;; Defined at:
   433 ;;		line 6 in file "LCD.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;  fila            1    wreg     unsigned char 
   436 ;;  columna         1    3[COMRAM] unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  fila            1    4[COMRAM] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   448 ;;      Params:         1       0       0       0       0       0       0       0       0
   449 ;;      Locals:         1       0       0       0       0       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0       0       0       0       0
   451 ;;      Totals:         2       0       0       0       0       0       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 2
   455 ;; This function calls:
   456 ;;		_ENVIA_LCD_CMD
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text1
   463  000ACC                     __ptext1:
   464                           	callstack 0
   465  000ACC                     _POS_CURSOR:
   466                           	callstack 28
   467                           
   468                           ;incstack = 0
   469                           ;POS_CURSOR@fila stored from wreg
   470  000ACC  6E45               	movwf	POS_CURSOR@fila^0,c
   471  000ACE                     
   472                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   473  000ACE  0445               	decf	POS_CURSOR@fila^0,w,c
   474  000AD0  A4D8               	btfss	status,2,c
   475  000AD2  EF6D  F005         	goto	u161
   476  000AD6  EF6F  F005         	goto	u160
   477  000ADA                     u161:
   478  000ADA  EF75  F005         	goto	l1095
   479  000ADE                     u160:
   480  000ADE                     
   481                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   482  000ADE  5044               	movf	POS_CURSOR@columna^0,w,c
   483  000AE0  0F80               	addlw	128
   484  000AE2  EC83  F005         	call	_ENVIA_LCD_CMD
   485                           
   486                           ;LCD.c: 11:  }
   487  000AE6  EF82  F005         	goto	l75
   488  000AEA                     l1095:
   489  000AEA  0E02               	movlw	2
   490  000AEC  1845               	xorwf	POS_CURSOR@fila^0,w,c
   491  000AEE  A4D8               	btfss	status,2,c
   492  000AF0  EF7C  F005         	goto	u171
   493  000AF4  EF7E  F005         	goto	u170
   494  000AF8                     u171:
   495  000AF8  EF82  F005         	goto	l75
   496  000AFC                     u170:
   497  000AFC                     
   498                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   499  000AFC  5044               	movf	POS_CURSOR@columna^0,w,c
   500  000AFE  0FC0               	addlw	192
   501  000B00  EC83  F005         	call	_ENVIA_LCD_CMD
   502  000B04                     l75:
   503  000B04  0012               	return		;funcret
   504  000B06                     __end_of_POS_CURSOR:
   505                           	callstack 0
   506                           
   507 ;; *************** function _LCD_Init *****************
   508 ;; Defined at:
   509 ;;		line 16 in file "maincode.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   523 ;;      Params:         0       0       0       0       0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0       0       0       0       0
   525 ;;      Temps:          2       0       0       0       0       0       0       0       0
   526 ;;      Totals:         2       0       0       0       0       0       0       0       0
   527 ;;Total ram usage:        2 bytes
   528 ;; Hardware stack levels used: 1
   529 ;; Hardware stack levels required when called: 3
   530 ;; This function calls:
   531 ;;		_BORRAR_LCD
   532 ;;		_CURSOR_HOME
   533 ;;		_CURSOR_ONOFF
   534 ;;		_GENERACARACTER
   535 ;;		_LCD_CONFIG
   536 ;; This function is called by:
   537 ;;		_main
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text2
   542  000814                     __ptext2:
   543                           	callstack 0
   544  000814                     _LCD_Init:
   545                           	callstack 27
   546  000814                     
   547                           ;maincode.c: 17:     TRISD = 0x00;
   548  000814  0E00               	movlw	0
   549  000816  6E95               	movwf	149,c	;volatile
   550  000818                     
   551                           ;maincode.c: 18:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
   552  000818  0E04               	movlw	4
   553  00081A  6E49               	movwf	(??_LCD_Init+1)^0,c
   554  00081C  0E0C               	movlw	12
   555  00081E  6E48               	movwf	??_LCD_Init^0,c
   556  000820  0E34               	movlw	52
   557  000822                     u217:
   558  000822  2EE8               	decfsz	wreg,f,c
   559  000824  D7FE               	bra	u217
   560  000826  2E48               	decfsz	??_LCD_Init^0,f,c
   561  000828  D7FC               	bra	u217
   562  00082A  2E49               	decfsz	(??_LCD_Init+1)^0,f,c
   563  00082C  D7FA               	bra	u217
   564  00082E                     
   565                           ;maincode.c: 19:     LCD_CONFIG();
   566  00082E  ECD9  F004         	call	_LCD_CONFIG	;wreg free
   567  000832                     
   568                           ;maincode.c: 20:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   569  000832  0EEA               	movlw	234
   570  000834  6E48               	movwf	??_LCD_Init^0,c
   571  000836  0EC3               	movlw	195
   572  000838                     u227:
   573  000838  2EE8               	decfsz	wreg,f,c
   574  00083A  D7FE               	bra	u227
   575  00083C  2E48               	decfsz	??_LCD_Init^0,f,c
   576  00083E  D7FC               	bra	u227
   577  000840  F000               	nop	
   578  000842                     
   579                           ;maincode.c: 21:     BORRAR_LCD();
   580  000842  ECF8  F005         	call	_BORRAR_LCD	;wreg free
   581  000846                     
   582                           ;maincode.c: 22:     CURSOR_HOME();
   583  000846  ECF4  F005         	call	_CURSOR_HOME	;wreg free
   584  00084A                     
   585                           ;maincode.c: 23:     CURSOR_ONOFF(1);
   586  00084A  0E01               	movlw	1
   587  00084C  ECB7  F005         	call	_CURSOR_ONOFF
   588  000850                     
   589                           ;maincode.c: 24:     GENERACARACTER(reloj0, 0);
   590  000850  0E39               	movlw	low _reloj0
   591  000852  6E44               	movwf	GENERACARACTER@vector^0,c
   592  000854  0E00               	movlw	high _reloj0
   593  000856  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   594  000858  0E00               	movlw	0
   595  00085A  6E46               	movwf	GENERACARACTER@pos^0,c
   596  00085C  EC48  F005         	call	_GENERACARACTER	;wreg free
   597  000860                     
   598                           ;maincode.c: 25:     GENERACARACTER(reloj1, 1);
   599  000860  0E31               	movlw	low _reloj1
   600  000862  6E44               	movwf	GENERACARACTER@vector^0,c
   601  000864  0E00               	movlw	high _reloj1
   602  000866  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   603  000868  0E01               	movlw	1
   604  00086A  6E46               	movwf	GENERACARACTER@pos^0,c
   605  00086C  EC48  F005         	call	_GENERACARACTER	;wreg free
   606  000870                     
   607                           ;maincode.c: 26:     GENERACARACTER(reloj2, 2);
   608  000870  0E29               	movlw	low _reloj2
   609  000872  6E44               	movwf	GENERACARACTER@vector^0,c
   610  000874  0E00               	movlw	high _reloj2
   611  000876  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   612  000878  0E02               	movlw	2
   613  00087A  6E46               	movwf	GENERACARACTER@pos^0,c
   614  00087C  EC48  F005         	call	_GENERACARACTER	;wreg free
   615  000880                     
   616                           ;maincode.c: 27:     GENERACARACTER(reloj3, 3);
   617  000880  0E21               	movlw	low _reloj3
   618  000882  6E44               	movwf	GENERACARACTER@vector^0,c
   619  000884  0E00               	movlw	high _reloj3
   620  000886  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   621  000888  0E03               	movlw	3
   622  00088A  6E46               	movwf	GENERACARACTER@pos^0,c
   623  00088C  EC48  F005         	call	_GENERACARACTER	;wreg free
   624  000890                     
   625                           ;maincode.c: 28:     GENERACARACTER(reloj4, 4);
   626  000890  0E19               	movlw	low _reloj4
   627  000892  6E44               	movwf	GENERACARACTER@vector^0,c
   628  000894  0E00               	movlw	high _reloj4
   629  000896  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   630  000898  0E04               	movlw	4
   631  00089A  6E46               	movwf	GENERACARACTER@pos^0,c
   632  00089C  EC48  F005         	call	_GENERACARACTER	;wreg free
   633  0008A0                     
   634                           ;maincode.c: 29:     GENERACARACTER(reloj5, 5);
   635  0008A0  0E11               	movlw	low _reloj5
   636  0008A2  6E44               	movwf	GENERACARACTER@vector^0,c
   637  0008A4  0E00               	movlw	high _reloj5
   638  0008A6  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   639  0008A8  0E05               	movlw	5
   640  0008AA  6E46               	movwf	GENERACARACTER@pos^0,c
   641  0008AC  EC48  F005         	call	_GENERACARACTER	;wreg free
   642  0008B0                     
   643                           ;maincode.c: 30:     GENERACARACTER(reloj6, 6);
   644  0008B0  0E09               	movlw	low _reloj6
   645  0008B2  6E44               	movwf	GENERACARACTER@vector^0,c
   646  0008B4  0E00               	movlw	high _reloj6
   647  0008B6  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   648  0008B8  0E06               	movlw	6
   649  0008BA  6E46               	movwf	GENERACARACTER@pos^0,c
   650  0008BC  EC48  F005         	call	_GENERACARACTER	;wreg free
   651  0008C0                     
   652                           ;maincode.c: 31:     GENERACARACTER(reloj7, 7);
   653  0008C0  0E01               	movlw	low _reloj7
   654  0008C2  6E44               	movwf	GENERACARACTER@vector^0,c
   655  0008C4  0E00               	movlw	high _reloj7
   656  0008C6  6E45               	movwf	(GENERACARACTER@vector+1)^0,c
   657  0008C8  0E07               	movlw	7
   658  0008CA  6E46               	movwf	GENERACARACTER@pos^0,c
   659  0008CC  EC48  F005         	call	_GENERACARACTER	;wreg free
   660  0008D0  0012               	return		;funcret
   661  0008D2                     __end_of_LCD_Init:
   662                           	callstack 0
   663                           
   664 ;; *************** function _LCD_CONFIG *****************
   665 ;; Defined at:
   666 ;;		line 72 in file "LCD.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0
   682 ;;      Temps:          1       0       0       0       0       0       0       0       0
   683 ;;      Totals:         1       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        1 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 2
   687 ;; This function calls:
   688 ;;		_ENVIA_LCD_CMD
   689 ;;		_ENVIA_NIBBLE
   690 ;; This function is called by:
   691 ;;		_LCD_Init
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text3
   696  0009B2                     __ptext3:
   697                           	callstack 0
   698  0009B2                     _LCD_CONFIG:
   699                           	callstack 27
   700  0009B2                     
   701                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   702  0009B2  908C               	bcf	140,0,c	;volatile
   703                           
   704                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   705  0009B4  928C               	bcf	140,1,c	;volatile
   706  0009B6                     
   707                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   708  0009B6  0E30               	movlw	48
   709  0009B8  ECE6  F005         	call	_ENVIA_NIBBLE
   710  0009BC                     
   711                           ;LCD.c: 77:         _delay(24000);
   712  0009BC  0E20               	movlw	32
   713  0009BE  6E44               	movwf	??_LCD_CONFIG^0,c
   714  0009C0  0E2A               	movlw	42
   715  0009C2                     u237:
   716  0009C2  2EE8               	decfsz	wreg,f,c
   717  0009C4  D7FE               	bra	u237
   718  0009C6  2E44               	decfsz	??_LCD_CONFIG^0,f,c
   719  0009C8  D7FC               	bra	u237
   720  0009CA                     
   721                           ;LCD.c: 78:         _delay(24000);
   722  0009CA  0E20               	movlw	32
   723  0009CC  6E44               	movwf	??_LCD_CONFIG^0,c
   724  0009CE  0E2A               	movlw	42
   725  0009D0                     u247:
   726  0009D0  2EE8               	decfsz	wreg,f,c
   727  0009D2  D7FE               	bra	u247
   728  0009D4  2E44               	decfsz	??_LCD_CONFIG^0,f,c
   729  0009D6  D7FC               	bra	u247
   730                           
   731                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   732  0009D8  0E30               	movlw	48
   733  0009DA  ECE6  F005         	call	_ENVIA_NIBBLE
   734  0009DE                     
   735                           ;LCD.c: 83:  _delay(1200);
   736  0009DE  0EF0               	movlw	240
   737  0009E0                     u257:
   738  0009E0  D000               	nop2	
   739  0009E2  2EE8               	decfsz	wreg,f,c
   740  0009E4  D7FD               	bra	u257
   741  0009E6                     
   742                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   743  0009E6  0E30               	movlw	48
   744  0009E8  ECE6  F005         	call	_ENVIA_NIBBLE
   745  0009EC                     
   746                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   747  0009EC  0E20               	movlw	32
   748  0009EE  ECE6  F005         	call	_ENVIA_NIBBLE
   749  0009F2                     
   750                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   751  0009F2  0E01               	movlw	1
   752  0009F4  EC83  F005         	call	_ENVIA_LCD_CMD
   753  0009F8                     
   754                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   755  0009F8  0E28               	movlw	40
   756  0009FA  EC83  F005         	call	_ENVIA_LCD_CMD
   757  0009FE                     
   758                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   759  0009FE  0E0F               	movlw	15
   760  000A00  EC83  F005         	call	_ENVIA_LCD_CMD
   761  000A04                     
   762                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   763  000A04  0E06               	movlw	6
   764  000A06  EC83  F005         	call	_ENVIA_LCD_CMD
   765  000A0A                     
   766                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   767  000A0A  0E01               	movlw	1
   768  000A0C  EC83  F005         	call	_ENVIA_LCD_CMD
   769  000A10  0012               	return		;funcret
   770  000A12                     __end_of_LCD_CONFIG:
   771                           	callstack 0
   772                           
   773 ;; *************** function _GENERACARACTER *****************
   774 ;; Defined at:
   775 ;;		line 153 in file "LCD.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  vector          2    3[COMRAM] PTR const unsigned char 
   778 ;;		 -> reloj7(8), reloj6(8), reloj5(8), reloj4(8), 
   779 ;;		 -> reloj3(8), reloj2(8), reloj1(8), reloj0(8), 
   780 ;;  pos             1    5[COMRAM] unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  i               1    6[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   792 ;;      Params:         3       0       0       0       0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0       0       0       0       0
   795 ;;      Totals:         4       0       0       0       0       0       0       0       0
   796 ;;Total ram usage:        4 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 2
   799 ;; This function calls:
   800 ;;		_ENVIA_CHAR
   801 ;;		_ENVIA_LCD_CMD
   802 ;; This function is called by:
   803 ;;		_LCD_Init
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text4
   808  000A90                     __ptext4:
   809                           	callstack 0
   810  000A90                     _GENERACARACTER:
   811                           	callstack 27
   812  000A90                     
   813                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
   814  000A90  5046               	movf	GENERACARACTER@pos^0,w,c
   815  000A92  0D08               	mullw	8
   816  000A94  50F3               	movf	243,w,c
   817  000A96  0F40               	addlw	64
   818  000A98  EC83  F005         	call	_ENVIA_LCD_CMD
   819  000A9C                     
   820                           ;LCD.c: 157:  for(i=0;i<8;i++)
   821  000A9C  0E00               	movlw	0
   822  000A9E  6E47               	movwf	GENERACARACTER@i^0,c
   823  000AA0                     l1045:
   824                           
   825                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
   826  000AA0  5047               	movf	GENERACARACTER@i^0,w,c
   827  000AA2  2444               	addwf	GENERACARACTER@vector^0,w,c
   828  000AA4  6ED9               	movwf	fsr2l,c
   829  000AA6  0E00               	movlw	0
   830  000AA8  2045               	addwfc	(GENERACARACTER@vector+1)^0,w,c
   831  000AAA  6EDA               	movwf	fsr2h,c
   832  000AAC  50DF               	movf	indf2,w,c
   833  000AAE  EC9D  F005         	call	_ENVIA_CHAR
   834  000AB2                     
   835                           ;LCD.c: 160:  }
   836  000AB2  2A47               	incf	GENERACARACTER@i^0,f,c
   837  000AB4  0E07               	movlw	7
   838  000AB6  6447               	cpfsgt	GENERACARACTER@i^0,c
   839  000AB8  EF60  F005         	goto	u141
   840  000ABC  EF62  F005         	goto	u140
   841  000AC0                     u141:
   842  000AC0  EF50  F005         	goto	l1045
   843  000AC4                     u140:
   844  000AC4                     
   845                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
   846  000AC4  0E80               	movlw	128
   847  000AC6  EC83  F005         	call	_ENVIA_LCD_CMD
   848  000ACA  0012               	return		;funcret
   849  000ACC                     __end_of_GENERACARACTER:
   850                           	callstack 0
   851                           
   852 ;; *************** function _CURSOR_ONOFF *****************
   853 ;; Defined at:
   854 ;;		line 35 in file "LCD.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  estado          1    wreg     unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  estado          1    3[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         0       0       0       0       0       0       0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         1       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 2
   875 ;; This function calls:
   876 ;;		_ENVIA_LCD_CMD
   877 ;; This function is called by:
   878 ;;		_LCD_Init
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  000B6E                     __ptext5:
   884                           	callstack 0
   885  000B6E                     _CURSOR_ONOFF:
   886                           	callstack 27
   887                           
   888                           ;incstack = 0
   889                           ;CURSOR_ONOFF@estado stored from wreg
   890  000B6E  6E44               	movwf	CURSOR_ONOFF@estado^0,c
   891  000B70                     
   892                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   893  000B70  5044               	movf	CURSOR_ONOFF@estado^0,w,c
   894  000B72  A4D8               	btfss	status,2,c
   895  000B74  EFBE  F005         	goto	u21
   896  000B78  EFC0  F005         	goto	u20
   897  000B7C                     u21:
   898  000B7C  EFC3  F005         	goto	l923
   899  000B80                     u20:
   900  000B80  0E0E               	movlw	14
   901  000B82  EC83  F005         	call	_ENVIA_LCD_CMD
   902  000B86                     l923:
   903                           
   904                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   905  000B86  0444               	decf	CURSOR_ONOFF@estado^0,w,c
   906  000B88  A4D8               	btfss	status,2,c
   907  000B8A  EFC9  F005         	goto	u31
   908  000B8E  EFCB  F005         	goto	u30
   909  000B92                     u31:
   910  000B92  EFCE  F005         	goto	l93
   911  000B96                     u30:
   912  000B96  0E0C               	movlw	12
   913  000B98  EC83  F005         	call	_ENVIA_LCD_CMD
   914  000B9C                     l93:
   915  000B9C  0012               	return		;funcret
   916  000B9E                     __end_of_CURSOR_ONOFF:
   917                           	callstack 0
   918                           
   919 ;; *************** function _CURSOR_HOME *****************
   920 ;; Defined at:
   921 ;;		line 30 in file "LCD.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   935 ;;      Params:         0       0       0       0       0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; Hardware stack levels required when called: 2
   942 ;; This function calls:
   943 ;;		_ENVIA_LCD_CMD
   944 ;; This function is called by:
   945 ;;		_LCD_Init
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text6
   950  000BE8                     __ptext6:
   951                           	callstack 0
   952  000BE8                     _CURSOR_HOME:
   953                           	callstack 27
   954  000BE8                     
   955                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   956  000BE8  0E02               	movlw	2
   957  000BEA  EC83  F005         	call	_ENVIA_LCD_CMD
   958  000BEE  0012               	return		;funcret
   959  000BF0                     __end_of_CURSOR_HOME:
   960                           	callstack 0
   961                           
   962 ;; *************** function _BORRAR_LCD *****************
   963 ;; Defined at:
   964 ;;		line 67 in file "LCD.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;		None
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;                  1    wreg      void 
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         0       0       0       0       0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0
   981 ;;      Totals:         0       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        0 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 2
   985 ;; This function calls:
   986 ;;		_ENVIA_LCD_CMD
   987 ;; This function is called by:
   988 ;;		_LCD_Init
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text7
   993  000BF0                     __ptext7:
   994                           	callstack 0
   995  000BF0                     _BORRAR_LCD:
   996                           	callstack 27
   997  000BF0                     
   998                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   999  000BF0  0E01               	movlw	1
  1000  000BF2  EC83  F005         	call	_ENVIA_LCD_CMD
  1001  000BF6  0012               	return		;funcret
  1002  000BF8                     __end_of_BORRAR_LCD:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _ENVIA_LCD_CMD *****************
  1006 ;; Defined at:
  1007 ;;		line 104 in file "LCD.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;  dato            1    wreg     unsigned char 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  dato            1    1[COMRAM] unsigned char 
  1012 ;;  aux             1    2[COMRAM] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0, cstack
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1022 ;;      Params:         0       0       0       0       0       0       0       0       0
  1023 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1025 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        2 bytes
  1027 ;; Hardware stack levels used: 1
  1028 ;; Hardware stack levels required when called: 1
  1029 ;; This function calls:
  1030 ;;		_ENVIA_NIBBLE
  1031 ;;		_LEER_LCD
  1032 ;; This function is called by:
  1033 ;;		_POS_CURSOR
  1034 ;;		_CURSOR_HOME
  1035 ;;		_CURSOR_ONOFF
  1036 ;;		_BORRAR_LCD
  1037 ;;		_LCD_CONFIG
  1038 ;;		_GENERACARACTER
  1039 ;;		_BLINK_CURSOR
  1040 ;;		_DISPLAY_ONOFF
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text8
  1045  000B06                     __ptext8:
  1046                           	callstack 0
  1047  000B06                     _ENVIA_LCD_CMD:
  1048                           	callstack 28
  1049                           
  1050                           ;incstack = 0
  1051                           ;ENVIA_LCD_CMD@dato stored from wreg
  1052  000B06  6E42               	movwf	ENVIA_LCD_CMD@dato^0,c
  1053  000B08                     
  1054                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1055  000B08  908C               	bcf	140,0,c	;volatile
  1056  000B0A                     
  1057                           ;LCD.c: 108:  LEER_LCD();
  1058  000B0A  EC69  F004         	call	_LEER_LCD	;wreg free
  1059  000B0E                     
  1060                           ;LCD.c: 109:  TRISD = 0b00000000;
  1061  000B0E  0E00               	movlw	0
  1062  000B10  6E95               	movwf	149,c	;volatile
  1063  000B12                     
  1064                           ;LCD.c: 111:         _delay(1200);
  1065  000B12  0EF0               	movlw	240
  1066  000B14                     u267:
  1067  000B14  D000               	nop2	
  1068  000B16  2EE8               	decfsz	wreg,f,c
  1069  000B18  D7FD               	bra	u267
  1070  000B1A                     
  1071                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1072  000B1A  928C               	bcf	140,1,c	;volatile
  1073  000B1C                     
  1074                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1075  000B1C  948C               	bcf	140,2,c	;volatile
  1076  000B1E                     
  1077                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1078  000B1E  908C               	bcf	140,0,c	;volatile
  1079  000B20                     
  1080                           ;LCD.c: 115:  aux = dato & 0xF0;
  1081  000B20  5042               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1082  000B22  0BF0               	andlw	240
  1083  000B24  6E43               	movwf	ENVIA_LCD_CMD@aux^0,c
  1084  000B26                     
  1085                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1086  000B26  5043               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1087  000B28  ECE6  F005         	call	_ENVIA_NIBBLE
  1088  000B2C                     
  1089                           ;LCD.c: 117:  aux = dato<<4;
  1090  000B2C  3842               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1091  000B2E  0BF0               	andlw	240
  1092  000B30  6E43               	movwf	ENVIA_LCD_CMD@aux^0,c
  1093  000B32                     
  1094                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1095  000B32  5043               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1096  000B34  ECE6  F005         	call	_ENVIA_NIBBLE
  1097  000B38  0012               	return		;funcret
  1098  000B3A                     __end_of_ENVIA_LCD_CMD:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _ESCRIBE_MENSAJE *****************
  1102 ;; Defined at:
  1103 ;;		line 41 in file "LCD.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1106 ;;		 -> STR_1(17), 
  1107 ;;  tam             1    5[COMRAM] unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  i               1    8[COMRAM] unsigned char 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1119 ;;      Params:         3       0       0       0       0       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1121 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1122 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1123 ;;Total ram usage:        6 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 2
  1126 ;; This function calls:
  1127 ;;		_ENVIA_CHAR
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text9
  1134  000A52                     __ptext9:
  1135                           	callstack 0
  1136  000A52                     _ESCRIBE_MENSAJE:
  1137                           	callstack 28
  1138  000A52                     
  1139                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1140  000A52  0E00               	movlw	0
  1141  000A54  6E49               	movwf	ESCRIBE_MENSAJE@i^0,c
  1142                           
  1143                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1144  000A56  0E00               	movlw	0
  1145  000A58  6E49               	movwf	ESCRIBE_MENSAJE@i^0,c
  1146  000A5A  EF3E  F005         	goto	l1089
  1147  000A5E                     l1085:
  1148                           
  1149                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1150  000A5E  5049               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1151  000A60  2444               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1152  000A62  6E47               	movwf	??_ESCRIBE_MENSAJE^0,c
  1153  000A64  0E00               	movlw	0
  1154  000A66  2045               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1155  000A68  6E48               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1156  000A6A  C047  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1157  000A6E  C048  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1158  000A72                     	if	0	;tblptru may be non-zero
  1159  000A72                     	endif
  1160  000A72                     	if	0	;tblptru may be non-zero
  1161  000A72                     	endif
  1162  000A72  0008               	tblrd		*
  1163  000A74  50F5               	movf	tablat,w,c
  1164  000A76  EC9D  F005         	call	_ENVIA_CHAR
  1165  000A7A                     
  1166                           ;LCD.c: 47:  }
  1167  000A7A  2A49               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1168  000A7C                     l1089:
  1169  000A7C  5046               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1170  000A7E  5C49               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1171  000A80  A0D8               	btfss	status,0,c
  1172  000A82  EF45  F005         	goto	u151
  1173  000A86  EF47  F005         	goto	u150
  1174  000A8A                     u151:
  1175  000A8A  EF2F  F005         	goto	l1085
  1176  000A8E                     u150:
  1177  000A8E  0012               	return		;funcret
  1178  000A90                     __end_of_ESCRIBE_MENSAJE:
  1179                           	callstack 0
  1180                           
  1181 ;; *************** function _ENVIA_CHAR *****************
  1182 ;; Defined at:
  1183 ;;		line 50 in file "LCD.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  dato            1    wreg     unsigned char 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;  dato            1    1[COMRAM] unsigned char 
  1188 ;;  aux             1    2[COMRAM] unsigned char 
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1198 ;;      Params:         0       0       0       0       0       0       0       0       0
  1199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1201 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used: 1
  1204 ;; Hardware stack levels required when called: 1
  1205 ;; This function calls:
  1206 ;;		_ENVIA_NIBBLE
  1207 ;;		_LEER_LCD
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;;		_ESCRIBE_MENSAJE
  1211 ;;		_GENERACARACTER
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text10
  1216  000B3A                     __ptext10:
  1217                           	callstack 0
  1218  000B3A                     _ENVIA_CHAR:
  1219                           	callstack 27
  1220                           
  1221                           ;incstack = 0
  1222                           ;ENVIA_CHAR@dato stored from wreg
  1223  000B3A  6E42               	movwf	ENVIA_CHAR@dato^0,c
  1224  000B3C                     
  1225                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1226  000B3C  808C               	bsf	140,0,c	;volatile
  1227  000B3E                     
  1228                           ;LCD.c: 54:  LEER_LCD();
  1229  000B3E  EC69  F004         	call	_LEER_LCD	;wreg free
  1230  000B42                     
  1231                           ;LCD.c: 55:  TRISD = 0x00;
  1232  000B42  0E00               	movlw	0
  1233  000B44  6E95               	movwf	149,c	;volatile
  1234  000B46                     
  1235                           ;LCD.c: 56:         _delay(1200);
  1236  000B46  0EF0               	movlw	240
  1237  000B48                     u277:
  1238  000B48  D000               	nop2	
  1239  000B4A  2EE8               	decfsz	wreg,f,c
  1240  000B4C  D7FD               	bra	u277
  1241  000B4E                     
  1242                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1243  000B4E  928C               	bcf	140,1,c	;volatile
  1244  000B50                     
  1245                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1246  000B50  948C               	bcf	140,2,c	;volatile
  1247  000B52                     
  1248                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1249  000B52  808C               	bsf	140,0,c	;volatile
  1250  000B54                     
  1251                           ;LCD.c: 61:  aux = dato & 0xF0;
  1252  000B54  5042               	movf	ENVIA_CHAR@dato^0,w,c
  1253  000B56  0BF0               	andlw	240
  1254  000B58  6E43               	movwf	ENVIA_CHAR@aux^0,c
  1255  000B5A                     
  1256                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1257  000B5A  5043               	movf	ENVIA_CHAR@aux^0,w,c
  1258  000B5C  ECE6  F005         	call	_ENVIA_NIBBLE
  1259  000B60                     
  1260                           ;LCD.c: 63:  aux = dato << 4;
  1261  000B60  3842               	swapf	ENVIA_CHAR@dato^0,w,c
  1262  000B62  0BF0               	andlw	240
  1263  000B64  6E43               	movwf	ENVIA_CHAR@aux^0,c
  1264  000B66                     
  1265                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1266  000B66  5043               	movf	ENVIA_CHAR@aux^0,w,c
  1267  000B68  ECE6  F005         	call	_ENVIA_NIBBLE
  1268  000B6C  0012               	return		;funcret
  1269  000B6E                     __end_of_ENVIA_CHAR:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _LEER_LCD *****************
  1273 ;; Defined at:
  1274 ;;		line 121 in file "LCD.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  aux             1    0[COMRAM] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_ENVIA_CHAR
  1298 ;;		_ENVIA_LCD_CMD
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text11
  1303  0008D2                     __ptext11:
  1304                           	callstack 0
  1305  0008D2                     _LEER_LCD:
  1306                           	callstack 28
  1307  0008D2                     
  1308                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1309  0008D2  0EF8               	movlw	248
  1310  0008D4  6E95               	movwf	149,c	;volatile
  1311  0008D6                     
  1312                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1313  0008D6  908C               	bcf	140,0,c	;volatile
  1314  0008D8                     
  1315                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1316  0008D8  828C               	bsf	140,1,c	;volatile
  1317  0008DA                     
  1318                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1319  0008DA  848C               	bsf	140,2,c	;volatile
  1320  0008DC                     
  1321                           ;LCD.c: 128:         _delay(1200);
  1322  0008DC  0EF0               	movlw	240
  1323  0008DE                     u287:
  1324  0008DE  D000               	nop2	
  1325  0008E0  2EE8               	decfsz	wreg,f,c
  1326  0008E2  D7FD               	bra	u287
  1327  0008E4                     
  1328                           ;LCD.c: 130:  aux = PORTD;
  1329  0008E4  CF83 F041          	movff	3971,LEER_LCD@aux	;volatile
  1330  0008E8                     
  1331                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1332  0008E8  948C               	bcf	140,2,c	;volatile
  1333  0008EA                     
  1334                           ;LCD.c: 132:         _delay(1200);
  1335  0008EA  0EF0               	movlw	240
  1336  0008EC                     u297:
  1337  0008EC  D000               	nop2	
  1338  0008EE  2EE8               	decfsz	wreg,f,c
  1339  0008F0  D7FD               	bra	u297
  1340  0008F2                     
  1341                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1342  0008F2  848C               	bsf	140,2,c	;volatile
  1343  0008F4                     
  1344                           ;LCD.c: 135:         _delay(1200);
  1345  0008F4  0EF0               	movlw	240
  1346  0008F6                     u307:
  1347  0008F6  D000               	nop2	
  1348  0008F8  2EE8               	decfsz	wreg,f,c
  1349  0008FA  D7FD               	bra	u307
  1350  0008FC                     
  1351                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1352  0008FC  948C               	bcf	140,2,c	;volatile
  1353  0008FE                     l823:
  1354                           
  1355                           ;LCD.c: 138:  aux = aux & 0x80;
  1356  0008FE  5041               	movf	LEER_LCD@aux^0,w,c
  1357  000900  0B80               	andlw	128
  1358  000902  6E41               	movwf	LEER_LCD@aux^0,c
  1359                           
  1360                           ;LCD.c: 139:  while(aux == 0x80)
  1361  000904  EF98  F004         	goto	l837
  1362  000908                     l118:
  1363                           
  1364                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1365  000908  848C               	bsf	140,2,c	;volatile
  1366  00090A                     
  1367                           ;LCD.c: 142:             _delay(1200);
  1368  00090A  0EF0               	movlw	240
  1369  00090C                     u317:
  1370  00090C  D000               	nop2	
  1371  00090E  2EE8               	decfsz	wreg,f,c
  1372  000910  D7FD               	bra	u317
  1373  000912                     
  1374                           ;LCD.c: 143:             aux = PORTD;
  1375  000912  CF83 F041          	movff	3971,LEER_LCD@aux	;volatile
  1376  000916                     
  1377                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1378  000916  948C               	bcf	140,2,c	;volatile
  1379                           
  1380                           ;LCD.c: 145:             _delay(1200);
  1381  000918  0EF0               	movlw	240
  1382  00091A                     u327:
  1383  00091A  D000               	nop2	
  1384  00091C  2EE8               	decfsz	wreg,f,c
  1385  00091E  D7FD               	bra	u327
  1386  000920                     
  1387                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1388  000920  848C               	bsf	140,2,c	;volatile
  1389                           
  1390                           ;LCD.c: 147:             _delay(1200);
  1391  000922  0EF0               	movlw	240
  1392  000924                     u337:
  1393  000924  D000               	nop2	
  1394  000926  2EE8               	decfsz	wreg,f,c
  1395  000928  D7FD               	bra	u337
  1396  00092A                     
  1397                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1398  00092A  948C               	bcf	140,2,c	;volatile
  1399  00092C  EF7F  F004         	goto	l823
  1400  000930                     l837:
  1401                           
  1402                           ;LCD.c: 139:  while(aux == 0x80)
  1403  000930  0E80               	movlw	128
  1404  000932  1841               	xorwf	LEER_LCD@aux^0,w,c
  1405  000934  B4D8               	btfsc	status,2,c
  1406  000936  EF9F  F004         	goto	u11
  1407  00093A  EFA1  F004         	goto	u10
  1408  00093E                     u11:
  1409  00093E  EF84  F004         	goto	l118
  1410  000942                     u10:
  1411  000942  0012               	return		;funcret
  1412  000944                     __end_of_LEER_LCD:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _ENVIA_NIBBLE *****************
  1416 ;; Defined at:
  1417 ;;		line 93 in file "LCD.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  dato            1    wreg     unsigned char 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  dato            1    0[COMRAM] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0
  1432 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        1 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_ENVIA_CHAR
  1441 ;;		_LCD_CONFIG
  1442 ;;		_ENVIA_LCD_CMD
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text12
  1447  000BCC                     __ptext12:
  1448                           	callstack 0
  1449  000BCC                     _ENVIA_NIBBLE:
  1450                           	callstack 28
  1451                           
  1452                           ;incstack = 0
  1453                           ;ENVIA_NIBBLE@dato stored from wreg
  1454  000BCC  6E41               	movwf	ENVIA_NIBBLE@dato^0,c
  1455  000BCE                     
  1456                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1457  000BCE  0E0F               	movlw	15
  1458  000BD0  168C               	andwf	140,f,c	;volatile
  1459                           
  1460                           ;LCD.c: 96:  dato &= 0xF0;
  1461  000BD2  0EF0               	movlw	240
  1462  000BD4  1641               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1463                           
  1464                           ;LCD.c: 97:  LATD|= dato;
  1465  000BD6  5041               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1466  000BD8  128C               	iorwf	140,f,c	;volatile
  1467  000BDA                     
  1468                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1469  000BDA  848C               	bsf	140,2,c	;volatile
  1470  000BDC                     
  1471                           ;LCD.c: 100:         _delay(1200);
  1472  000BDC  0EF0               	movlw	240
  1473  000BDE                     u347:
  1474  000BDE  D000               	nop2	
  1475  000BE0  2EE8               	decfsz	wreg,f,c
  1476  000BE2  D7FD               	bra	u347
  1477  000BE4                     
  1478                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1479  000BE4  948C               	bcf	140,2,c	;volatile
  1480  000BE6  0012               	return		;funcret
  1481  000BE8                     __end_of_ENVIA_NIBBLE:
  1482                           	callstack 0
  1483                           
  1484                           	psect	rparam
  1485  0000                     
  1486                           	psect	idloc
  1487                           
  1488                           ;Config register IDLOC0 @ 0x200000
  1489                           ;	unspecified, using default values
  1490  200000                     	org	2097152
  1491  200000  FF                 	db	255
  1492                           
  1493                           ;Config register IDLOC1 @ 0x200001
  1494                           ;	unspecified, using default values
  1495  200001                     	org	2097153
  1496  200001  FF                 	db	255
  1497                           
  1498                           ;Config register IDLOC2 @ 0x200002
  1499                           ;	unspecified, using default values
  1500  200002                     	org	2097154
  1501  200002  FF                 	db	255
  1502                           
  1503                           ;Config register IDLOC3 @ 0x200003
  1504                           ;	unspecified, using default values
  1505  200003                     	org	2097155
  1506  200003  FF                 	db	255
  1507                           
  1508                           ;Config register IDLOC4 @ 0x200004
  1509                           ;	unspecified, using default values
  1510  200004                     	org	2097156
  1511  200004  FF                 	db	255
  1512                           
  1513                           ;Config register IDLOC5 @ 0x200005
  1514                           ;	unspecified, using default values
  1515  200005                     	org	2097157
  1516  200005  FF                 	db	255
  1517                           
  1518                           ;Config register IDLOC6 @ 0x200006
  1519                           ;	unspecified, using default values
  1520  200006                     	org	2097158
  1521  200006  FF                 	db	255
  1522                           
  1523                           ;Config register IDLOC7 @ 0x200007
  1524                           ;	unspecified, using default values
  1525  200007                     	org	2097159
  1526  200007  FF                 	db	255
  1527                           
  1528                           	psect	config
  1529                           
  1530                           ;Config register CONFIG1L @ 0x300000
  1531                           ;	PLL Prescaler Selection bits
  1532                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1533                           ;	System Clock Postscaler Selection bits
  1534                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1535                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1536                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1537  300000                     	org	3145728
  1538  300000  00                 	db	0
  1539                           
  1540                           ;Config register CONFIG1H @ 0x300001
  1541                           ;	Oscillator Selection bits
  1542                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1543                           ;	Fail-Safe Clock Monitor Enable bit
  1544                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1545                           ;	Internal/External Oscillator Switchover bit
  1546                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1547  300001                     	org	3145729
  1548  300001  02                 	db	2
  1549                           
  1550                           ;Config register CONFIG2L @ 0x300002
  1551                           ;	Power-up Timer Enable bit
  1552                           ;	PWRT = ON, PWRT enabled
  1553                           ;	Brown-out Reset Enable bits
  1554                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1555                           ;	Brown-out Reset Voltage bits
  1556                           ;	BORV = 3, Minimum setting 2.05V
  1557                           ;	USB Voltage Regulator Enable bit
  1558                           ;	VREGEN = OFF, USB voltage regulator disabled
  1559  300002                     	org	3145730
  1560  300002  18                 	db	24
  1561                           
  1562                           ;Config register CONFIG2H @ 0x300003
  1563                           ;	Watchdog Timer Enable bit
  1564                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1565                           ;	Watchdog Timer Postscale Select bits
  1566                           ;	WDTPS = 32768, 1:32768
  1567  300003                     	org	3145731
  1568  300003  1E                 	db	30
  1569                           
  1570                           ; Padding undefined space
  1571  300004                     	org	3145732
  1572  300004  FF                 	db	255
  1573                           
  1574                           ;Config register CONFIG3H @ 0x300005
  1575                           ;	CCP2 MUX bit
  1576                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1577                           ;	PORTB A/D Enable bit
  1578                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1579                           ;	Low-Power Timer 1 Oscillator Enable bit
  1580                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1581                           ;	MCLR Pin Enable bit
  1582                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1583  300005                     	org	3145733
  1584  300005  81                 	db	129
  1585                           
  1586                           ;Config register CONFIG4L @ 0x300006
  1587                           ;	Stack Full/Underflow Reset Enable bit
  1588                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1589                           ;	Single-Supply ICSP Enable bit
  1590                           ;	LVP = OFF, Single-Supply ICSP disabled
  1591                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1592                           ;	ICPRT = OFF, ICPORT disabled
  1593                           ;	Extended Instruction Set Enable bit
  1594                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1595                           ;	Background Debugger Enable bit
  1596                           ;	DEBUG = 0x1, unprogrammed default
  1597  300006                     	org	3145734
  1598  300006  81                 	db	129
  1599                           
  1600                           ; Padding undefined space
  1601  300007                     	org	3145735
  1602  300007  FF                 	db	255
  1603                           
  1604                           ;Config register CONFIG5L @ 0x300008
  1605                           ;	Code Protection bit
  1606                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1607                           ;	Code Protection bit
  1608                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1609                           ;	Code Protection bit
  1610                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1611                           ;	Code Protection bit
  1612                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1613  300008                     	org	3145736
  1614  300008  0F                 	db	15
  1615                           
  1616                           ;Config register CONFIG5H @ 0x300009
  1617                           ;	Boot Block Code Protection bit
  1618                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1619                           ;	Data EEPROM Code Protection bit
  1620                           ;	CPD = OFF, Data EEPROM is not code-protected
  1621  300009                     	org	3145737
  1622  300009  C0                 	db	192
  1623                           
  1624                           ;Config register CONFIG6L @ 0x30000A
  1625                           ;	Write Protection bit
  1626                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1627                           ;	Write Protection bit
  1628                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1629                           ;	Write Protection bit
  1630                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1631                           ;	Write Protection bit
  1632                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1633  30000A                     	org	3145738
  1634  30000A  0F                 	db	15
  1635                           
  1636                           ;Config register CONFIG6H @ 0x30000B
  1637                           ;	Configuration Register Write Protection bit
  1638                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1639                           ;	Boot Block Write Protection bit
  1640                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1641                           ;	Data EEPROM Write Protection bit
  1642                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1643  30000B                     	org	3145739
  1644  30000B  E0                 	db	224
  1645                           
  1646                           ;Config register CONFIG7L @ 0x30000C
  1647                           ;	Table Read Protection bit
  1648                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1649                           ;	Table Read Protection bit
  1650                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1651                           ;	Table Read Protection bit
  1652                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1653                           ;	Table Read Protection bit
  1654                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1655  30000C                     	org	3145740
  1656  30000C  0F                 	db	15
  1657                           
  1658                           ;Config register CONFIG7H @ 0x30000D
  1659                           ;	Boot Block Table Read Protection bit
  1660                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1661  30000D                     	org	3145741
  1662  30000D  40                 	db	64
  1663                           tosu	equ	0xFFF
  1664                           tosh	equ	0xFFE
  1665                           tosl	equ	0xFFD
  1666                           stkptr	equ	0xFFC
  1667                           pclatu	equ	0xFFB
  1668                           pclath	equ	0xFFA
  1669                           pcl	equ	0xFF9
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           prodh	equ	0xFF4
  1675                           prodl	equ	0xFF3
  1676                           indf0	equ	0xFEF
  1677                           postinc0	equ	0xFEE
  1678                           postdec0	equ	0xFED
  1679                           preinc0	equ	0xFEC
  1680                           plusw0	equ	0xFEB
  1681                           fsr0h	equ	0xFEA
  1682                           fsr0l	equ	0xFE9
  1683                           wreg	equ	0xFE8
  1684                           indf1	equ	0xFE7
  1685                           postinc1	equ	0xFE6
  1686                           postdec1	equ	0xFE5
  1687                           preinc1	equ	0xFE4
  1688                           plusw1	equ	0xFE3
  1689                           fsr1h	equ	0xFE2
  1690                           fsr1l	equ	0xFE1
  1691                           bsr	equ	0xFE0
  1692                           indf2	equ	0xFDF
  1693                           postinc2	equ	0xFDE
  1694                           postdec2	equ	0xFDD
  1695                           preinc2	equ	0xFDC
  1696                           plusw2	equ	0xFDB
  1697                           fsr2h	equ	0xFDA
  1698                           fsr2l	equ	0xFD9
  1699                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> reloj7(COMRAM[8]), reloj6(COMRAM[8]), reloj5(COMRAM[8]), reloj4(COMRAM[8]), 
		 -> reloj3(COMRAM[8]), reloj2(COMRAM[8]), reloj1(COMRAM[8]), reloj0(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _main->_LCD_Init
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_Init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2976
                                              9 COMRAM     4     4      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_Init
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    2093
                                              7 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3    1568
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_Init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      4D       1       81.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      20        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 24 14:28:58 2021

                      l39 08D0                        l48 09AA                        l75 0B04  
                      l93 0B9C                        l88 0BEE                        l99 0A8E  
                      u10 0942                        u11 093E                        u20 0B80  
                      u21 0B7C                        u30 0B96                        u31 0B92  
           ENVIA_CHAR@aux 0043                       l102 0B6C                       l111 0BE6  
                     l120 0942                       l105 0BF6                       l114 0B38  
                     l108 0A10                       l125 0ACA                       l118 0908  
                     l801 08D2                       l811 08E4                       l803 08D6  
                     l821 08FC                       l813 08E8                       l805 08D8  
                     l901 09E6                       l831 0920                       l823 08FE  
                     l815 08EA                       l807 08DA                       l911 0A04  
                     l903 09EC                       l841 0BDA                       l833 092A  
                     l825 090A                       l817 08F2                       l809 08DC  
                     l921 0B80                       l913 0A0A                       l905 09F2  
                     l843 0BDC                       l827 0912                       l819 08F4  
                     l851 0B42                       l915 0BF0                       l923 0B86  
                     l907 09F8                       l845 0BE4                       l829 0916  
                     l837 0930                       l861 0B54                       l853 0B46  
                     l917 0BE8                       l925 0B96                       l909 09FE  
                     l839 0BCE                       l863 0B5A                       l855 0B4E  
                     l847 0B3C                       l871 0B0A                       l919 0B70  
                     l865 0B60                       l857 0B50                       l849 0B3E  
                     l881 0B1E                       l873 0B0E                       l867 0B66  
                     l859 0B52                       l883 0B20                       l875 0B12  
                     l891 09B2                       l885 0B26                       l877 0B1A  
                     l869 0B08                       l893 09B6                       l887 0B2C  
                     l879 0B1C                       l895 09BC                       l889 0B32  
                     l897 09CA                       l899 09DE                       u140 0AC4  
                     u141 0AC0                       u150 0A8E                       u151 0A8A  
                     u207 097A                       u160 0ADE                       u217 0822  
                     u161 0ADA                       u170 0AFC                       u307 08F6  
                     u227 0838                       u171 0AF8                       u180 0998  
                     u317 090C                       u237 09C2                       u181 0994  
                     u190 09AA                       u327 091A                       u247 09D0  
                     u191 09A6                       u337 0924                       u257 09E0  
                     u347 0BDE                       u267 0B14                       u277 0B48  
                     u287 08DE                       u297 08EC               LEER_LCD@aux 0041  
                     wreg 000FE8              ?_CURSOR_HOME 0041            ??_ENVIA_NIBBLE 0041  
          ENVIA_CHAR@dato 0042                      l1101 0948                      l1103 0958  
                    l1121 0970                      l1113 095C                      l1105 0958  
                    l1051 0AC4                      l1123 0986                      l1107 0958  
                    l1045 0AA0                      l1037 0A90                      l1061 0842  
                    l1053 0814                      l1125 0988                      l1047 0AB2  
                    l1039 0A9C                      l1071 0870                      l1063 0846  
                    l1055 0818                      l1127 0998                      l1119 0960  
                    l1049 0AB4                      l1081 08C0                      l1073 0880  
                    l1065 084A                      l1057 082E                      l1129 099A  
                    l1083 0A52                      l1075 0890                      l1067 0850  
                    l1059 0832                      l1091 0ACE                      l1085 0A5E  
                    l1077 08A0                      l1069 0860                      l1093 0ADE  
                    l1087 0A7A                      l1079 08B0                      l1095 0AEA  
                    l1089 0A7C                      l1097 0AFC                      l1099 0944  
                    STR_1 0801                      _LATD 000F8C                      _main 0944  
                    indf2 000FDF                      fsr1l 000FE1                      fsr2l 000FD9  
                    prodl 000FF3                      start 0000             ?_CURSOR_ONOFF 0041  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0042          __end_of_LEER_LCD 0944  
     __size_of_BORRAR_LCD 0008          __end_of_LCD_Init 08D2            _GENERACARACTER 0A90  
                   ?_main 0041                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISD 000F95       __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0044  
                   main@x 004D                     main@y 004C                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0044           __initialization 0B9E  
            __end_of_main 09B2    __end_of_GENERACARACTER 0ACC           _ESCRIBE_MENSAJE 0A52  
                  ??_main 004A             __activetblptr 000001      __end_of_ENVIA_NIBBLE 0BE8  
         ?_GENERACARACTER 0044       __size_of_POS_CURSOR 003A                    _reloj0 0039  
                  _reloj1 0031                    _reloj2 0029                    _reloj3 0021  
                  _reloj4 0019                    _reloj5 0011                    _reloj6 0009  
                  _reloj7 0001                    isa$std 000001              __pdataCOMRAM 0001  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8              ??_BORRAR_LCD 0044      __size_of_CURSOR_HOME 0008  
               ?_LEER_LCD 0041                __accesstop 0060   __end_of__initialization 0BBE  
               ?_LCD_Init 0041              ??_LCD_CONFIG 0044             ___rparam_used 000001  
            ??_ENVIA_CHAR 0042   __end_of_ESCRIBE_MENSAJE 0A90            __pcstackCOMRAM 0041  
      __end_of_BORRAR_LCD 0BF8          ENVIA_LCD_CMD@aux 0043      __end_of_CURSOR_ONOFF 0B9E  
      __end_of_LCD_CONFIG 0A12        __end_of_ENVIA_CHAR 0B6E                ??_LEER_LCD 0041  
        ENVIA_NIBBLE@dato 0041                ??_LCD_Init 0048              ??_POS_CURSOR 0045  
   __size_of_ENVIA_NIBBLE 001C                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0044              __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0B3A  
                 __pcinit 0B9E        __end_of_POS_CURSOR 0B06                   __ramtop 0800  
                 __ptext0 0944                   __ptext1 0ACC                   __ptext2 0814  
                 __ptext3 09B2                   __ptext4 0A90                   __ptext5 0B6E  
                 __ptext6 0BE8                   __ptext7 0BF0                   __ptext8 0B06  
                 __ptext9 0A52           GENERACARACTER@i 0047              _ENVIA_NIBBLE 0BCC  
    end_of_initialization 0BBE          ??_GENERACARACTER 0047                   postdec1 000FE5  
                 postinc0 000FEE      GENERACARACTER@vector 0044     __size_of_CURSOR_ONOFF 0030  
       __size_of_LEER_LCD 0072         __size_of_LCD_Init 00BE              _CURSOR_ONOFF 0B6E  
      CURSOR_ONOFF@estado 0044             __pidataCOMRAM 0A12             ??_CURSOR_HOME 0044  
     start_initialization 0B9E         ENVIA_LCD_CMD@dato 0042       __end_of_CURSOR_HOME 0BF0  
       GENERACARACTER@pos 0046               __smallconst 0800                  _LEER_LCD 08D2  
                _LCD_Init 0814                  _LATDbits 000F8C          ESCRIBE_MENSAJE@i 0049  
          POS_CURSOR@fila 0045  __size_of_ESCRIBE_MENSAJE 003E               _CURSOR_HOME 0BE8  
               copy_data0 0BB2    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800                  __ptext10 0B3A  
                __ptext11 08D2                  __ptext12 0BCC                _BORRAR_LCD 0BF0  
           __size_of_main 006E                _LCD_CONFIG 09B2                _ENVIA_CHAR 0B3A  
                isa$xinst 000000             _ENVIA_LCD_CMD 0B06   __size_of_GENERACARACTER 003C  
       ??_ESCRIBE_MENSAJE 0047     ESCRIBE_MENSAJE@cadena 0044            ?_ENVIA_LCD_CMD 0041  
             ?_BORRAR_LCD 0041             ?_ENVIA_NIBBLE 0041                _POS_CURSOR 0ACC  
             ?_LCD_CONFIG 0041        ESCRIBE_MENSAJE@tam 0046               ?_ENVIA_CHAR 0041  
       POS_CURSOR@columna 0044  
