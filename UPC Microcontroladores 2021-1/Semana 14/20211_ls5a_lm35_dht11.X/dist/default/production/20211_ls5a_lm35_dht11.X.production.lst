

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 24 15:43:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9s 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41                           	psect	pa_nodes0,global,class=CODE,delta=1
    42  0000                     
    43                           ; Version 2.20
    44                           ; Generated 12/02/2020 GMT
    45                           ; 
    46                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  0011F2                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for LCD_init@F3192
    83  0011F2  1F                 	db	31
    84  0011F3  1B                 	db	27
    85  0011F4  0E                 	db	14
    86  0011F5  04                 	db	4
    87  0011F6  0A                 	db	10
    88  0011F7  15                 	db	21
    89  0011F8  1F                 	db	31
    90  0011F9  00                 	db	0
    91                           
    92                           ;initializer for LCD_init@F3190
    93  0011FA  1F                 	db	31
    94  0011FB  1F                 	db	31
    95  0011FC  0E                 	db	14
    96  0011FD  04                 	db	4
    97  0011FE  0A                 	db	10
    98  0011FF  11                 	db	17
    99  001200  1F                 	db	31
   100  001201  00                 	db	0
   101                           
   102                           	psect	idataBANK0
   103  00104C                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for LCD_init@F3204
   107  00104C  1F                 	db	31
   108  00104D  1F                 	db	31
   109  00104E  0E                 	db	14
   110  00104F  04                 	db	4
   111  001050  0A                 	db	10
   112  001051  11                 	db	17
   113  001052  1F                 	db	31
   114  001053  00                 	db	0
   115                           
   116                           ;initializer for LCD_init@F3202
   117  001054  0E                 	db	14
   118  001055  0F                 	db	15
   119  001056  1F                 	db	31
   120  001057  07                 	db	7
   121  001058  04                 	db	4
   122  001059  14                 	db	20
   123  00105A  0C                 	db	12
   124  00105B  00                 	db	0
   125                           
   126                           ;initializer for LCD_init@F3200
   127  00105C  00                 	db	0
   128  00105D  11                 	db	17
   129  00105E  1B                 	db	27
   130  00105F  07                 	db	7
   131  001060  1B                 	db	27
   132  001061  11                 	db	17
   133  001062  00                 	db	0
   134  001063  00                 	db	0
   135                           
   136                           ;initializer for LCD_init@F3198
   137  001064  0A                 	db	10
   138  001065  12                 	db	18
   139  001066  03                 	db	3
   140  001067  1F                 	db	31
   141  001068  07                 	db	7
   142  001069  07                 	db	7
   143  00106A  06                 	db	6
   144  00106B  00                 	db	0
   145                           
   146                           ;initializer for LCD_init@F3196
   147  00106C  1F                 	db	31
   148  00106D  11                 	db	17
   149  00106E  0A                 	db	10
   150  00106F  04                 	db	4
   151  001070  0E                 	db	14
   152  001071  1F                 	db	31
   153  001072  1F                 	db	31
   154  001073  00                 	db	0
   155                           
   156                           ;initializer for LCD_init@F3194
   157  001074  1F                 	db	31
   158  001075  11                 	db	17
   159  001076  0E                 	db	14
   160  001077  04                 	db	4
   161  001078  0A                 	db	10
   162  001079  1F                 	db	31
   163  00107A  1F                 	db	31
   164  00107B  00                 	db	0
   165  0000                     _PORTBbits	set	3969
   166  0000                     _LATBbits	set	3978
   167  0000                     _TRISBbits	set	3987
   168  0000                     _PORTD	set	3971
   169  0000                     _LATD	set	3980
   170  0000                     _LATDbits	set	3980
   171  0000                     _ADRESL	set	4035
   172  0000                     _ADRESH	set	4036
   173  0000                     _ADCON0bits	set	4034
   174  0000                     _TRISD	set	3989
   175  0000                     _ADCON0	set	4034
   176  0000                     _ADCON1	set	4033
   177  0000                     _ADCON2	set	4032
   178                           
   179                           	psect	smallconst
   180  000800                     __psmallconst:
   181                           	callstack 0
   182  000800  00                 	db	0
   183  000801                     STR_1:
   184  000801  43                 	db	67	;'C'
   185  000802  61                 	db	97	;'a'
   186  000803  72                 	db	114	;'r'
   187  000804  67                 	db	103	;'g'
   188  000805  61                 	db	97	;'a'
   189  000806  6E                 	db	110	;'n'
   190  000807  64                 	db	100	;'d'
   191  000808  6F                 	db	111	;'o'
   192  000809  20                 	db	32
   193  00080A  73                 	db	115	;'s'
   194  00080B  69                 	db	105	;'i'
   195  00080C  73                 	db	115	;'s'
   196  00080D  74                 	db	116	;'t'
   197  00080E  65                 	db	101	;'e'
   198  00080F  6D                 	db	109	;'m'
   199  000810  61                 	db	97	;'a'
   200  000811  00                 	db	0
   201  000812                     STR_2:
   202  000812  20                 	db	32
   203  000813  54                 	db	84	;'T'
   204  000814  6F                 	db	111	;'o'
   205  000815  64                 	db	100	;'d'
   206  000816  6F                 	db	111	;'o'
   207  000817  20                 	db	32
   208  000818  6C                 	db	108	;'l'
   209  000819  69                 	db	105	;'i'
   210  00081A  73                 	db	115	;'s'
   211  00081B  74                 	db	116	;'t'
   212  00081C  6F                 	db	111	;'o'
   213  00081D  21                 	db	33
   214  00081E  00                 	db	0
   215  00081F                     STR_6:
   216  00081F  43                 	db	67	;'C'
   217  000820  20                 	db	32
   218  000821  52                 	db	82	;'R'
   219  000822  48                 	db	72	;'H'
   220  000823  3A                 	db	58	;':'
   221  000824  00                 	db	0
   222  000825                     STR_3:
   223  000825  54                 	db	84	;'T'
   224  000826  31                 	db	49	;'1'
   225  000827  3A                 	db	58	;':'
   226  000828  00                 	db	0
   227  000829                     STR_5:
   228  000829  54                 	db	84	;'T'
   229  00082A  32                 	db	50	;'2'
   230  00082B  3A                 	db	58	;':'
   231  00082C  00                 	db	0
   232  00082D                     STR_4:
   233  00082D  43                 	db	67	;'C'
   234  00082E  20                 	db	32
   235  00082F  00                 	db	0
   236  000830  00                 	db	0	; dummy byte at the end
   237  0000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  000F7C                     __pcinit:
   242                           	callstack 0
   243  000F7C                     start_initialization:
   244                           	callstack 0
   245  000F7C                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (48 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250  000F7C  0E4C               	movlw	low __pidataBANK0
   251  000F7E  6EF6               	movwf	tblptrl,c
   252  000F80  0E10               	movlw	high __pidataBANK0
   253  000F82  6EF7               	movwf	tblptrh,c
   254  000F84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255  000F86  6EF8               	movwf	tblptru,c
   256  000F88  EE00  F060         	lfsr	0,__pdataBANK0
   257  000F8C  EE10 F030          	lfsr	1,48
   258  000F90                     copy_data0:
   259  000F90  0009               	tblrd		*+
   260  000F92  CFF5 FFEE          	movff	tablat,postinc0
   261  000F96  50E5               	movf	postdec1,w,c
   262  000F98  50E1               	movf	fsr1l,w,c
   263  000F9A  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to COMRAM (16 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267  000F9C  0EF2               	movlw	low __pidataCOMRAM
   268  000F9E  6EF6               	movwf	tblptrl,c
   269  000FA0  0E11               	movlw	high __pidataCOMRAM
   270  000FA2  6EF7               	movwf	tblptrh,c
   271  000FA4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272  000FA6  6EF8               	movwf	tblptru,c
   273  000FA8  EE00  F04F         	lfsr	0,__pdataCOMRAM
   274  000FAC  EE10 F010          	lfsr	1,16
   275  000FB0                     copy_data1:
   276  000FB0  0009               	tblrd		*+
   277  000FB2  CFF5 FFEE          	movff	tablat,postinc0
   278  000FB6  50E5               	movf	postdec1,w,c
   279  000FB8  50E1               	movf	fsr1l,w,c
   280  000FBA  E1FA               	bnz	copy_data1
   281  000FBC                     end_of_initialization:
   282                           	callstack 0
   283  000FBC                     __end_of__initialization:
   284                           	callstack 0
   285  000FBC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   286  000FBE  6EF8               	movwf	tblptru,c
   287  000FC0  0E08               	movlw	high __Lsmallconst
   288  000FC2  6EF7               	movwf	tblptrh,c
   289  000FC4  0100               	movlb	0
   290  000FC6  EF8F  F005         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	dataCOMRAM
   293  00004F                     __pdataCOMRAM:
   294                           	callstack 0
   295  00004F                     LCD_init@F3192:
   296                           	callstack 0
   297  00004F                     	ds	8
   298  000057                     LCD_init@F3190:
   299                           	callstack 0
   300  000057                     	ds	8
   301                           
   302                           	psect	dataBANK0
   303  000060                     __pdataBANK0:
   304                           	callstack 0
   305  000060                     LCD_init@F3204:
   306                           	callstack 0
   307  000060                     	ds	8
   308  000068                     LCD_init@F3202:
   309                           	callstack 0
   310  000068                     	ds	8
   311  000070                     LCD_init@F3200:
   312                           	callstack 0
   313  000070                     	ds	8
   314  000078                     LCD_init@F3198:
   315                           	callstack 0
   316  000078                     	ds	8
   317  000080                     LCD_init@F3196:
   318                           	callstack 0
   319  000080                     	ds	8
   320  000088                     LCD_init@F3194:
   321                           	callstack 0
   322  000088                     	ds	8
   323                           
   324                           	psect	cstackCOMRAM
   325  000001                     __pcstackCOMRAM:
   326                           	callstack 0
   327  000001                     ??_DHT11_Start:
   328  000001                     ?___awmod:
   329                           	callstack 0
   330  000001                     ?___xxtofl:
   331                           	callstack 0
   332  000001                     ENVIA_NIBBLE@dato:
   333                           	callstack 0
   334  000001                     LEER_LCD@aux:
   335                           	callstack 0
   336  000001                     DHT11_Read@x:
   337                           	callstack 0
   338  000001                     ___lbmod@divisor:
   339                           	callstack 0
   340  000001                     ___awmod@dividend:
   341                           	callstack 0
   342  000001                     ___xxtofl@val:
   343                           	callstack 0
   344                           
   345                           ; 4 bytes @ 0x0
   346  000001                     	ds	1
   347  000002                     ENVIA_CHAR@dato:
   348                           	callstack 0
   349  000002                     ENVIA_LCD_CMD@dato:
   350                           	callstack 0
   351  000002                     DHT11_Read@data:
   352                           	callstack 0
   353  000002                     ___lbmod@dividend:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x1
   357  000002                     	ds	1
   358  000003                     ENVIA_CHAR@aux:
   359                           	callstack 0
   360  000003                     ENVIA_LCD_CMD@aux:
   361                           	callstack 0
   362  000003                     ___lbmod@counter:
   363                           	callstack 0
   364  000003                     ___awmod@divisor:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2
   368  000003                     	ds	1
   369  000004                     ??_LCD_CONFIG:
   370  000004                     POS_CURSOR@columna:
   371                           	callstack 0
   372  000004                     CURSOR_ONOFF@estado:
   373                           	callstack 0
   374  000004                     ESCRIBE_MENSAJE@cadena:
   375                           	callstack 0
   376  000004                     GENERACARACTER@vector:
   377                           	callstack 0
   378  000004                     ___lbmod@rem:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x3
   382  000004                     	ds	1
   383  000005                     ??___xxtofl:
   384  000005                     POS_CURSOR@fila:
   385                           	callstack 0
   386  000005                     ESCRIBE_MENSAJE@tam:
   387                           	callstack 0
   388  000005                     GENERACARACTER@pos:
   389                           	callstack 0
   390  000005                     ___awmod@counter:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x4
   394  000005                     	ds	1
   395  000006                     ??_ESCRIBE_MENSAJE:
   396  000006                     GENERACARACTER@i:
   397                           	callstack 0
   398  000006                     ___awmod@sign:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x5
   402  000006                     	ds	1
   403  000007                     ??_LCD_init:
   404  000007                     ESCRIBE_MENSAJE@i:
   405                           	callstack 0
   406  000007                     ___lbdiv@divisor:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x6
   410  000007                     	ds	1
   411  000008                     ___lbdiv@dividend:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x7
   415  000008                     	ds	1
   416  000009                     ___lbdiv@counter:
   417                           	callstack 0
   418  000009                     ___xxtofl@sign:
   419                           	callstack 0
   420  000009                     LCD_init@reloj0:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0x8
   424  000009                     	ds	1
   425  00000A                     ___lbdiv@quotient:
   426                           	callstack 0
   427  00000A                     ___xxtofl@exp:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x9
   431  00000A                     	ds	1
   432  00000B                     ESCRIBE_VARIABLECHAR_LCD@decena:
   433                           	callstack 0
   434  00000B                     ___xxtofl@arg:
   435                           	callstack 0
   436                           
   437                           ; 4 bytes @ 0xA
   438  00000B                     	ds	1
   439  00000C                     ESCRIBE_VARIABLECHAR_LCD@unidad:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0xB
   443  00000C                     	ds	1
   444  00000D                     ESCRIBE_VARIABLECHAR_LCD@numero:
   445                           	callstack 0
   446                           
   447                           ; 1 bytes @ 0xC
   448  00000D                     	ds	2
   449  00000F                     ?___fldiv:
   450                           	callstack 0
   451  00000F                     ___fldiv@b:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0xE
   455  00000F                     	ds	2
   456  000011                     LCD_init@reloj1:
   457                           	callstack 0
   458                           
   459                           ; 8 bytes @ 0x10
   460  000011                     	ds	2
   461  000013                     ___fldiv@a:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x12
   465  000013                     	ds	4
   466  000017                     ??___fldiv:
   467                           
   468                           ; 1 bytes @ 0x16
   469  000017                     	ds	2
   470  000019                     LCD_init@reloj2:
   471                           	callstack 0
   472                           
   473                           ; 8 bytes @ 0x18
   474  000019                     	ds	2
   475  00001B                     ___fldiv@rem:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x1A
   479  00001B                     	ds	4
   480  00001F                     ___fldiv@sign:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x1E
   484  00001F                     	ds	1
   485  000020                     ___fldiv@new_exp:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1F
   489  000020                     	ds	1
   490  000021                     LCD_init@reloj3:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0x20
   494  000021                     	ds	1
   495  000022                     ___fldiv@grs:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x21
   499  000022                     	ds	4
   500  000026                     ___fldiv@bexp:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x25
   504  000026                     	ds	1
   505  000027                     ___fldiv@aexp:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x26
   509  000027                     	ds	1
   510  000028                     ?_LM35_read:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x27
   514  000028                     	ds	1
   515  000029                     LCD_init@reloj4:
   516                           	callstack 0
   517                           
   518                           ; 8 bytes @ 0x28
   519  000029                     	ds	3
   520  00002C                     ??_LM35_read:
   521                           
   522                           ; 1 bytes @ 0x2B
   523  00002C                     	ds	2
   524  00002E                     LM35_read@n_temp_c:
   525                           	callstack 0
   526                           
   527                           ; 4 bytes @ 0x2D
   528  00002E                     	ds	3
   529  000031                     LCD_init@reloj5:
   530                           	callstack 0
   531                           
   532                           ; 8 bytes @ 0x30
   533  000031                     	ds	1
   534  000032                     LM35_read@lm35raw:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x31
   538  000032                     	ds	2
   539  000034                     ?___fltol:
   540                           	callstack 0
   541  000034                     ___fltol@f1:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x33
   545  000034                     	ds	4
   546  000038                     ??___fltol:
   547                           
   548                           ; 1 bytes @ 0x37
   549  000038                     	ds	1
   550  000039                     LCD_init@reloj6:
   551                           	callstack 0
   552                           
   553                           ; 8 bytes @ 0x38
   554  000039                     	ds	3
   555  00003C                     ___fltol@sign1:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x3B
   559  00003C                     	ds	1
   560  00003D                     ___fltol@exp1:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x3C
   564  00003D                     	ds	4
   565  000041                     LCD_init@reloj7:
   566                           	callstack 0
   567                           
   568                           ; 8 bytes @ 0x40
   569  000041                     	ds	8
   570  000049                     ??_main:
   571                           
   572                           ; 1 bytes @ 0x48
   573  000049                     	ds	2
   574  00004B                     main@RH_Ent:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x4A
   578  00004B                     	ds	1
   579  00004C                     main@Temp_Ent:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x4B
   583  00004C                     	ds	1
   584  00004D                     main@y:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x4C
   588  00004D                     	ds	1
   589  00004E                     main@x:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x4D
   593  00004E                     	ds	1
   594                           
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   597 ;;
   598 ;; *************** function _main *****************
   599 ;; Defined at:
   600 ;;		line 60 in file "maincode.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  x               1   77[COMRAM] unsigned char 
   605 ;;  y               1   76[COMRAM] unsigned char 
   606 ;;  Temp_Ent        1   75[COMRAM] unsigned char 
   607 ;;  RH_Ent          1   74[COMRAM] unsigned char 
   608 ;;  Chksum          1    0        unsigned char 
   609 ;;  Temp_Dec        1    0        unsigned char 
   610 ;;  RH_Dec          1    0        unsigned char 
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   620 ;;      Params:         0       0       0       0       0       0       0       0       0
   621 ;;      Locals:         4       0       0       0       0       0       0       0       0
   622 ;;      Temps:          2       0       0       0       0       0       0       0       0
   623 ;;      Totals:         6       0       0       0       0       0       0       0       0
   624 ;;Total ram usage:        6 bytes
   625 ;; Hardware stack levels required when called: 4
   626 ;; This function calls:
   627 ;;		_ADC_init
   628 ;;		_BORRAR_LCD
   629 ;;		_CURSOR_HOME
   630 ;;		_DHT11_Check
   631 ;;		_DHT11_Read
   632 ;;		_DHT11_Start
   633 ;;		_ENVIA_CHAR
   634 ;;		_ESCRIBE_MENSAJE
   635 ;;		_ESCRIBE_VARIABLECHAR_LCD
   636 ;;		_LCD_init
   637 ;;		_LM35_read
   638 ;;		_POS_CURSOR
   639 ;;		___fltol
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text0
   646  000B1E                     __ptext0:
   647                           	callstack 0
   648  000B1E                     _main:
   649                           	callstack 27
   650                           
   651                           ;maincode.c: 61:     unsigned char RH_Ent, RH_Dec, Temp_Ent, Temp_Dec, Chksum;;maincode.
      +                          c: 62:     ADC_init();
   652                           
   653                           ;incstack = 0
   654  000B1E  EC08  F009         	call	_ADC_init	;wreg free
   655                           
   656                           ;maincode.c: 63:     LCD_init();
   657  000B22  ECFB  F004         	call	_LCD_init	;wreg free
   658                           
   659                           ;maincode.c: 64:     ESCRIBE_MENSAJE("Cargando sistema",16);
   660  000B26  0E01               	movlw	low STR_1
   661  000B28  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   662  000B2A  0E10               	movlw	16
   663  000B2C  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   664  000B2E  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   665                           
   666                           ;maincode.c: 67:     for(y=0;y<5;y++){
   667  000B32  6A4D               	clrf	main@y^0,c
   668  000B34                     l74:
   669                           
   670                           ;maincode.c: 68:         for(x=0;x<8;x++){
   671  000B34  6A4E               	clrf	main@x^0,c
   672  000B36                     l1963:
   673                           
   674                           ;maincode.c: 69:             POS_CURSOR(2,0);
   675  000B36  6A04               	clrf	POS_CURSOR@columna^0,c
   676  000B38  0E02               	movlw	2
   677  000B3A  ECD0  F008         	call	_POS_CURSOR
   678                           
   679                           ;maincode.c: 70:             ENVIA_CHAR(x);
   680  000B3E  504E               	movf	main@x^0,w,c
   681  000B40  EC56  F008         	call	_ENVIA_CHAR
   682                           
   683                           ;maincode.c: 71:             _delay((unsigned long)((200)*(48000000UL/4000.0)));
   684  000B44  0E0D               	movlw	13
   685  000B46  6E4A               	movwf	(??_main+1)^0,c
   686  000B48  0E2D               	movlw	45
   687  000B4A  6E49               	movwf	??_main^0,c
   688  000B4C  0ED8               	movlw	216
   689  000B4E                     u1447:
   690  000B4E  2EE8               	decfsz	wreg,f,c
   691  000B50  D7FE               	bra	u1447
   692  000B52  2E49               	decfsz	??_main^0,f,c
   693  000B54  D7FC               	bra	u1447
   694  000B56  2E4A               	decfsz	(??_main+1)^0,f,c
   695  000B58  D7FA               	bra	u1447
   696                           
   697                           ;maincode.c: 72:         }
   698  000B5A  2A4E               	incf	main@x^0,f,c
   699  000B5C  0E07               	movlw	7
   700  000B5E  644E               	cpfsgt	main@x^0,c
   701  000B60  D7EA               	goto	l1963
   702                           
   703                           ;maincode.c: 73:     }
   704  000B62  2A4D               	incf	main@y^0,f,c
   705  000B64  0E04               	movlw	4
   706  000B66  644D               	cpfsgt	main@y^0,c
   707  000B68  D7E5               	goto	l74
   708                           
   709                           ;maincode.c: 74:     ESCRIBE_MENSAJE(" Todo listo!",12);
   710  000B6A  0E12               	movlw	low STR_2
   711  000B6C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   712  000B6E  0E0C               	movlw	12
   713  000B70  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   714  000B72  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   715                           
   716                           ;maincode.c: 75:     _delay((unsigned long)((3000)*(48000000UL/4000.0)));
   717  000B76  0EB7               	movlw	183
   718  000B78  6E4A               	movwf	(??_main+1)^0,c
   719  000B7A  0EA1               	movlw	161
   720  000B7C  6E49               	movwf	??_main^0,c
   721  000B7E  0EC4               	movlw	196
   722  000B80                     u1457:
   723  000B80  2EE8               	decfsz	wreg,f,c
   724  000B82  D7FE               	bra	u1457
   725  000B84  2E49               	decfsz	??_main^0,f,c
   726  000B86  D7FC               	bra	u1457
   727  000B88  2E4A               	decfsz	(??_main+1)^0,f,c
   728  000B8A  D7FA               	bra	u1457
   729                           
   730                           ;maincode.c: 76:     BORRAR_LCD();
   731  000B8C  EC12  F009         	call	_BORRAR_LCD	;wreg free
   732  000B90                     l1981:
   733                           
   734                           ;maincode.c: 78:         CURSOR_HOME();
   735  000B90  EC0F  F009         	call	_CURSOR_HOME	;wreg free
   736                           
   737                           ;maincode.c: 79:         ESCRIBE_MENSAJE("T1:",3);
   738  000B94  0E25               	movlw	low STR_3
   739  000B96  D850               	call	PL16	;call to abstracted procedure
   740  000B98  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   741                           
   742                           ;maincode.c: 80:         ESCRIBE_VARIABLECHAR_LCD(LM35_read());
   743  000B9C  ECF4  F006         	call	_LM35_read	;wreg free
   744  000BA0  C028  F034         	movff	?_LM35_read,___fltol@f1
   745  000BA4  C029  F035         	movff	?_LM35_read+1,___fltol@f1+1
   746  000BA8  C02A  F036         	movff	?_LM35_read+2,___fltol@f1+2
   747  000BAC  C02B  F037         	movff	?_LM35_read+3,___fltol@f1+3
   748  000BB0  ECA6  F006         	call	___fltol	;wreg free
   749  000BB4  5034               	movf	?___fltol^0,w,c
   750  000BB6  ECE5  F007         	call	_ESCRIBE_VARIABLECHAR_LCD
   751                           
   752                           ;maincode.c: 81:         ENVIA_CHAR(0xDF);
   753  000BBA  0EDF               	movlw	223
   754  000BBC  EC56  F008         	call	_ENVIA_CHAR
   755                           
   756                           ;maincode.c: 82:         ESCRIBE_MENSAJE("C ", 2);
   757  000BC0  0E2D               	movlw	low STR_4
   758  000BC2  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   759  000BC4  0E02               	movlw	2
   760  000BC6  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   761  000BC8  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   762                           
   763                           ;maincode.c: 83:         DHT11_Start();
   764  000BCC  ECAC  F008         	call	_DHT11_Start	;wreg free
   765                           
   766                           ;maincode.c: 84:         DHT11_Check();
   767  000BD0  EC01  F009         	call	_DHT11_Check	;wreg free
   768                           
   769                           ;maincode.c: 85:         RH_Ent = DHT11_Read();
   770  000BD4  EC6E  F008         	call	_DHT11_Read	;wreg free
   771  000BD8  6E4B               	movwf	main@RH_Ent^0,c
   772                           
   773                           ;maincode.c: 86:         RH_Dec = DHT11_Read();
   774  000BDA  EC6E  F008         	call	_DHT11_Read	;wreg free
   775                           
   776                           ;maincode.c: 87:         Temp_Ent = DHT11_Read();
   777  000BDE  EC6E  F008         	call	_DHT11_Read	;wreg free
   778  000BE2  6E4C               	movwf	main@Temp_Ent^0,c
   779                           
   780                           ;maincode.c: 88:         Temp_Dec = DHT11_Read();
   781  000BE4  EC6E  F008         	call	_DHT11_Read	;wreg free
   782                           
   783                           ;maincode.c: 89:         Chksum = DHT11_Read();
   784  000BE8  EC6E  F008         	call	_DHT11_Read	;wreg free
   785                           
   786                           ;maincode.c: 90:         POS_CURSOR(2,0);
   787  000BEC  6A04               	clrf	POS_CURSOR@columna^0,c
   788  000BEE  0E02               	movlw	2
   789  000BF0  ECD0  F008         	call	_POS_CURSOR
   790                           
   791                           ;maincode.c: 91:         ESCRIBE_MENSAJE("T2:",3);
   792  000BF4  0E29               	movlw	low STR_5
   793  000BF6  D820               	call	PL16	;call to abstracted procedure
   794  000BF8  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   795                           
   796                           ;maincode.c: 92:         ESCRIBE_VARIABLECHAR_LCD(Temp_Ent);
   797  000BFC  504C               	movf	main@Temp_Ent^0,w,c
   798  000BFE  ECE5  F007         	call	_ESCRIBE_VARIABLECHAR_LCD
   799                           
   800                           ;maincode.c: 93:         ENVIA_CHAR(0xDF);
   801  000C02  0EDF               	movlw	223
   802  000C04  EC56  F008         	call	_ENVIA_CHAR
   803                           
   804                           ;maincode.c: 94:         ESCRIBE_MENSAJE("C RH:", 5);
   805  000C08  0E1F               	movlw	low STR_6
   806  000C0A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   807  000C0C  0E05               	movlw	5
   808  000C0E  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   809  000C10  ECBF  F008         	call	_ESCRIBE_MENSAJE	;wreg free
   810                           
   811                           ;maincode.c: 95:         ESCRIBE_VARIABLECHAR_LCD(RH_Ent);
   812  000C14  504B               	movf	main@RH_Ent^0,w,c
   813  000C16  ECE5  F007         	call	_ESCRIBE_VARIABLECHAR_LCD
   814                           
   815                           ;maincode.c: 96:         ENVIA_CHAR('%');
   816  000C1A  0E25               	movlw	37
   817  000C1C  EC56  F008         	call	_ENVIA_CHAR
   818                           
   819                           ;maincode.c: 97:         _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   820  000C20  0E3D               	movlw	61
   821  000C22  6E4A               	movwf	(??_main+1)^0,c
   822  000C24  0EE1               	movlw	225
   823  000C26  6E49               	movwf	??_main^0,c
   824  000C28  0E40               	movlw	64
   825  000C2A                     u1467:
   826  000C2A  2EE8               	decfsz	wreg,f,c
   827  000C2C  D7FE               	bra	u1467
   828  000C2E  2E49               	decfsz	??_main^0,f,c
   829  000C30  D7FC               	bra	u1467
   830  000C32  2E4A               	decfsz	(??_main+1)^0,f,c
   831  000C34  D7FA               	bra	u1467
   832  000C36  D7AC               	goto	l1981
   833  000C38                     __end_of_main:
   834                           	callstack 0
   835  000C38                     PL16:
   836                           	callstack 27
   837  000C38  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   838  000C3A  0E03               	movlw	3
   839  000C3C  6E05               	movwf	ESCRIBE_MENSAJE@tam^0,c
   840  000C3E  0C03               	retlw	3
   841  000C40                     __end_ofPL16:
   842                           	callstack 0
   843                           
   844 ;; *************** function ___fltol *****************
   845 ;; Defined at:
   846 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  f1              4   51[COMRAM] void 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  exp1            1   60[COMRAM] unsigned char 
   851 ;;  sign1           1   59[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  4   51[COMRAM] long 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         4       0       0       0       0       0       0       0       0
   862 ;;      Locals:         2       0       0       0       0       0       0       0       0
   863 ;;      Temps:          4       0       0       0       0       0       0       0       0
   864 ;;      Totals:        10       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:       10 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text1
   875  000D4C                     __ptext1:
   876                           	callstack 0
   877  000D4C                     ___fltol:
   878                           	callstack 30
   879                           
   880                           ;incstack = 0
   881  000D4C  3436               	rlcf	(___fltol@f1+2)^0,w,c
   882  000D4E  3437               	rlcf	(___fltol@f1+3)^0,w,c
   883  000D50  6E3D               	movwf	___fltol@exp1^0,c
   884  000D52  503D               	movf	___fltol@exp1^0,w,c
   885  000D54  E105               	bnz	l1909
   886  000D56                     u1350:
   887  000D56  6A34               	clrf	?___fltol^0,c
   888  000D58  6A35               	clrf	(?___fltol+1)^0,c
   889  000D5A  6A36               	clrf	(?___fltol+2)^0,c
   890  000D5C  6A37               	clrf	(?___fltol+3)^0,c
   891  000D5E  0012               	return	
   892  000D60                     l1909:
   893  000D60  C034  F038         	movff	___fltol@f1,??___fltol
   894  000D64  C035  F039         	movff	___fltol@f1+1,??___fltol+1
   895  000D68  C036  F03A         	movff	___fltol@f1+2,??___fltol+2
   896  000D6C  C037  F03B         	movff	___fltol@f1+3,??___fltol+3
   897  000D70  0E20               	movlw	32
   898  000D72  D005               	goto	u1360
   899  000D74                     u1365:
   900  000D74  90D8               	bcf	status,0,c
   901  000D76  323B               	rrcf	(??___fltol+3)^0,f,c
   902  000D78  323A               	rrcf	(??___fltol+2)^0,f,c
   903  000D7A  3239               	rrcf	(??___fltol+1)^0,f,c
   904  000D7C  3238               	rrcf	??___fltol^0,f,c
   905  000D7E                     u1360:
   906  000D7E  2EE8               	decfsz	wreg,f,c
   907  000D80  D7F9               	goto	u1365
   908  000D82  5038               	movf	??___fltol^0,w,c
   909  000D84  6E3C               	movwf	___fltol@sign1^0,c
   910  000D86  8E36               	bsf	(___fltol@f1+2)^0,7,c
   911  000D88  6A37               	clrf	(___fltol@f1+3)^0,c
   912  000D8A  0E96               	movlw	150
   913  000D8C  5E3D               	subwf	___fltol@exp1^0,f,c
   914  000D8E  AE3D               	btfss	___fltol@exp1^0,7,c
   915  000D90  D00C               	goto	l1927
   916  000D92  503D               	movf	___fltol@exp1^0,w,c
   917  000D94  0A80               	xorlw	128
   918  000D96  0F97               	addlw	151
   919  000D98  E3DE               	bnc	u1350
   920  000D9A                     l1923:
   921  000D9A  90D8               	bcf	status,0,c
   922  000D9C  3237               	rrcf	(___fltol@f1+3)^0,f,c
   923  000D9E  3236               	rrcf	(___fltol@f1+2)^0,f,c
   924  000DA0  3235               	rrcf	(___fltol@f1+1)^0,f,c
   925  000DA2  3234               	rrcf	___fltol@f1^0,f,c
   926  000DA4  3E3D               	incfsz	___fltol@exp1^0,f,c
   927  000DA6  D7F9               	goto	l1923
   928  000DA8  D00C               	goto	u1400
   929  000DAA                     l1927:
   930  000DAA  0E1F               	movlw	31
   931  000DAC  643D               	cpfsgt	___fltol@exp1^0,c
   932  000DAE  D007               	goto	l1933
   933  000DB0  D7D2               	goto	u1350
   934  000DB2                     l1931:
   935  000DB2  90D8               	bcf	status,0,c
   936  000DB4  3634               	rlcf	___fltol@f1^0,f,c
   937  000DB6  3635               	rlcf	(___fltol@f1+1)^0,f,c
   938  000DB8  3636               	rlcf	(___fltol@f1+2)^0,f,c
   939  000DBA  3637               	rlcf	(___fltol@f1+3)^0,f,c
   940  000DBC  063D               	decf	___fltol@exp1^0,f,c
   941  000DBE                     l1933:
   942  000DBE  503D               	movf	___fltol@exp1^0,w,c
   943  000DC0  E1F8               	bnz	l1931
   944  000DC2                     u1400:
   945  000DC2  503C               	movf	___fltol@sign1^0,w,c
   946  000DC4  E008               	bz	l1939
   947  000DC6  1E37               	comf	(___fltol@f1+3)^0,f,c
   948  000DC8  1E36               	comf	(___fltol@f1+2)^0,f,c
   949  000DCA  1E35               	comf	(___fltol@f1+1)^0,f,c
   950  000DCC  6C34               	negf	___fltol@f1^0,c
   951  000DCE  0E00               	movlw	0
   952  000DD0  2235               	addwfc	(___fltol@f1+1)^0,f,c
   953  000DD2  2236               	addwfc	(___fltol@f1+2)^0,f,c
   954  000DD4  2237               	addwfc	(___fltol@f1+3)^0,f,c
   955  000DD6                     l1939:
   956  000DD6  C034  F034         	movff	___fltol@f1,?___fltol
   957  000DDA  C035  F035         	movff	___fltol@f1+1,?___fltol+1
   958  000DDE  C036  F036         	movff	___fltol@f1+2,?___fltol+2
   959  000DE2  C037  F037         	movff	___fltol@f1+3,?___fltol+3
   960  000DE6  0012               	return		;funcret
   961  000DE8                     __end_of___fltol:
   962                           	callstack 0
   963                           
   964 ;; *************** function _POS_CURSOR *****************
   965 ;; Defined at:
   966 ;;		line 6 in file "LCD.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  fila            1    wreg     unsigned char 
   969 ;;  columna         1    3[COMRAM] unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  fila            1    4[COMRAM] unsigned char 
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   981 ;;      Params:         1       0       0       0       0       0       0       0       0
   982 ;;      Locals:         1       0       0       0       0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0
   984 ;;      Totals:         2       0       0       0       0       0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used: 1
   987 ;; Hardware stack levels required when called: 2
   988 ;; This function calls:
   989 ;;		_ENVIA_LCD_CMD
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text2
   996  0011A0                     __ptext2:
   997                           	callstack 0
   998  0011A0                     _POS_CURSOR:
   999                           	callstack 28
  1000                           
  1001                           ;incstack = 0
  1002                           ;POS_CURSOR@fila stored from wreg
  1003  0011A0  6E05               	movwf	POS_CURSOR@fila^0,c
  1004                           
  1005                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1006  0011A2  0405               	decf	POS_CURSOR@fila^0,w,c
  1007  0011A4  E104               	bnz	l1901
  1008                           
  1009                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1010  0011A6  5004               	movf	POS_CURSOR@columna^0,w,c
  1011  0011A8  0F80               	addlw	128
  1012  0011AA  EF3E  F008         	goto	_ENVIA_LCD_CMD
  1013  0011AE                     l1901:
  1014  0011AE  0E02               	movlw	2
  1015  0011B0  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1016  0011B2  A4D8               	btfss	status,2,c
  1017  0011B4  0012               	return	
  1018                           
  1019                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1020  0011B6  5004               	movf	POS_CURSOR@columna^0,w,c
  1021  0011B8  0FC0               	addlw	192
  1022  0011BA  EF3E  F008         	goto	_ENVIA_LCD_CMD
  1023  0011BE                     __end_of_POS_CURSOR:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _LM35_read *****************
  1027 ;; Defined at:
  1028 ;;		line 40 in file "maincode.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  n_temp_c        4   45[COMRAM] float 
  1033 ;;  lm35raw         2   49[COMRAM] unsigned int 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  4   39[COMRAM] float 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         4       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1046 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:       12 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 1
  1050 ;; This function calls:
  1051 ;;		___fldiv
  1052 ;;		___xxtofl
  1053 ;; This function is called by:
  1054 ;;		_main
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text3
  1059  000DE8                     __ptext3:
  1060                           	callstack 0
  1061  000DE8                     _LM35_read:
  1062                           	callstack 29
  1063                           
  1064                           ;maincode.c: 41:     unsigned int lm35raw;;maincode.c: 42:     float n_temp_c;;maincode.
      +                          c: 43:     ADCON0bits.GODONE = 1;
  1065                           
  1066                           ;incstack = 0
  1067  000DE8  82C2               	bsf	194,1,c	;volatile
  1068  000DEA                     l63:
  1069  000DEA  B2C2               	btfsc	194,1,c	;volatile
  1070  000DEC  D7FE               	goto	l63
  1071                           
  1072                           ;maincode.c: 45:     lm35raw = (ADRESH << 8) + ADRESL;
  1073  000DEE  50C4               	movf	196,w,c	;volatile
  1074  000DF0  6E2D               	movwf	(??_LM35_read+1)^0,c
  1075  000DF2  6A2C               	clrf	??_LM35_read^0,c
  1076  000DF4  50C3               	movf	195,w,c	;volatile
  1077  000DF6  242C               	addwf	??_LM35_read^0,w,c
  1078  000DF8  6E32               	movwf	LM35_read@lm35raw^0,c
  1079  000DFA  0E00               	movlw	0
  1080  000DFC  202D               	addwfc	(??_LM35_read+1)^0,w,c
  1081  000DFE  6E33               	movwf	(LM35_read@lm35raw+1)^0,c
  1082                           
  1083                           ;maincode.c: 46:     n_temp_c = lm35raw / 10.24;
  1084  000E00  C032  F001         	movff	LM35_read@lm35raw,___xxtofl@val
  1085  000E04  C033  F002         	movff	LM35_read@lm35raw+1,___xxtofl@val+1
  1086  000E08  6A03               	clrf	(___xxtofl@val+2)^0,c
  1087  000E0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1088  000E0C  0E00               	movlw	0
  1089  000E0E  EC20  F006         	call	___xxtofl
  1090  000E12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1091  000E16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1092  000E1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1093  000E1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1094  000E22  0E0A               	movlw	10
  1095  000E24  6E13               	movwf	___fldiv@a^0,c
  1096  000E26  0ED7               	movlw	215
  1097  000E28  6E14               	movwf	(___fldiv@a+1)^0,c
  1098  000E2A  0E23               	movlw	35
  1099  000E2C  6E15               	movwf	(___fldiv@a+2)^0,c
  1100  000E2E  0E41               	movlw	65
  1101  000E30  6E16               	movwf	(___fldiv@a+3)^0,c
  1102  000E32  EC19  F004         	call	___fldiv	;wreg free
  1103  000E36  C00F  F02E         	movff	?___fldiv,LM35_read@n_temp_c
  1104  000E3A  C010  F02F         	movff	?___fldiv+1,LM35_read@n_temp_c+1
  1105  000E3E  C011  F030         	movff	?___fldiv+2,LM35_read@n_temp_c+2
  1106  000E42  C012  F031         	movff	?___fldiv+3,LM35_read@n_temp_c+3
  1107                           
  1108                           ;maincode.c: 47:     return n_temp_c;
  1109  000E46  C02E  F028         	movff	LM35_read@n_temp_c,?_LM35_read
  1110  000E4A  C02F  F029         	movff	LM35_read@n_temp_c+1,?_LM35_read+1
  1111  000E4E  C030  F02A         	movff	LM35_read@n_temp_c+2,?_LM35_read+2
  1112  000E52  C031  F02B         	movff	LM35_read@n_temp_c+3,?_LM35_read+3
  1113  000E56  0012               	return		;funcret
  1114  000E58                     __end_of_LM35_read:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function ___xxtofl *****************
  1118 ;; Defined at:
  1119 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  sign            1    wreg     unsigned char 
  1122 ;;  val             4    0[COMRAM] long 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  sign            1    8[COMRAM] unsigned char 
  1125 ;;  arg             4   10[COMRAM] unsigned long 
  1126 ;;  exp             1    9[COMRAM] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  4    0[COMRAM] unsigned char 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         4       0       0       0       0       0       0       0       0
  1137 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1138 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1139 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1140 ;;Total ram usage:       14 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_LM35_read
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text4
  1150  000C40                     __ptext4:
  1151                           	callstack 0
  1152  000C40                     ___xxtofl:
  1153                           	callstack 29
  1154                           
  1155                           ;incstack = 0
  1156                           ;___xxtofl@sign stored from wreg
  1157  000C40  6E09               	movwf	___xxtofl@sign^0,c
  1158  000C42  5009               	movf	___xxtofl@sign^0,w,c
  1159  000C44  E01C               	bz	l849
  1160  000C46  AE04               	btfss	(___xxtofl@val+3)^0,7,c
  1161  000C48  D01A               	goto	l849
  1162  000C4A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1163  000C4E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1164  000C52  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1165  000C56  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1166  000C5A  1E05               	comf	??___xxtofl^0,f,c
  1167  000C5C  1E06               	comf	(??___xxtofl+1)^0,f,c
  1168  000C5E  1E07               	comf	(??___xxtofl+2)^0,f,c
  1169  000C60  1E08               	comf	(??___xxtofl+3)^0,f,c
  1170  000C62  2A05               	incf	??___xxtofl^0,f,c
  1171  000C64  0E00               	movlw	0
  1172  000C66  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1173  000C68  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1174  000C6A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1175  000C6C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1176  000C70  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1177  000C74  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1178  000C78  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1179  000C7C  D008               	goto	l1807
  1180  000C7E                     l849:
  1181  000C7E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1182  000C82  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1183  000C86  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1184  000C8A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1185  000C8E                     l1807:
  1186  000C8E  5001               	movf	___xxtofl@val^0,w,c
  1187  000C90  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1188  000C92  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1189  000C94  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1190  000C96  E105               	bnz	l1811
  1191  000C98  6A01               	clrf	?___xxtofl^0,c
  1192  000C9A  6A02               	clrf	(?___xxtofl+1)^0,c
  1193  000C9C  6A03               	clrf	(?___xxtofl+2)^0,c
  1194  000C9E  6A04               	clrf	(?___xxtofl+3)^0,c
  1195  000CA0  0012               	return	
  1196  000CA2                     l1811:
  1197  000CA2  0E96               	movlw	150
  1198  000CA4  6E0A               	movwf	___xxtofl@exp^0,c
  1199  000CA6  D002               	goto	l1815
  1200  000CA8                     l1813:
  1201  000CA8  2A0A               	incf	___xxtofl@exp^0,f,c
  1202  000CAA  D84A               	call	PL8	;call to abstracted procedure
  1203  000CAC                     l1815:
  1204  000CAC  6A05               	clrf	??___xxtofl^0,c
  1205  000CAE  6A06               	clrf	(??___xxtofl+1)^0,c
  1206  000CB0  6A07               	clrf	(??___xxtofl+2)^0,c
  1207  000CB2  0EFE               	movlw	254
  1208  000CB4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1209  000CB6  D83E               	call	PL6	;call to abstracted procedure
  1210  000CB8  E008               	bz	l856
  1211  000CBA  D7F6               	goto	l1813
  1212  000CBC                     l1817:
  1213  000CBC  2A0A               	incf	___xxtofl@exp^0,f,c
  1214  000CBE  2A0B               	incf	___xxtofl@arg^0,f,c
  1215  000CC0  0E00               	movlw	0
  1216  000CC2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1217  000CC4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1218  000CC6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1219  000CC8  D83B               	call	PL8	;call to abstracted procedure
  1220  000CCA                     l856:
  1221  000CCA  6A05               	clrf	??___xxtofl^0,c
  1222  000CCC  6A06               	clrf	(??___xxtofl+1)^0,c
  1223  000CCE  6A07               	clrf	(??___xxtofl+2)^0,c
  1224  000CD0  500E               	movf	(___xxtofl@arg+3)^0,w,c
  1225  000CD2  D830               	call	PL6	;call to abstracted procedure
  1226  000CD4  E007               	bz	l1825
  1227  000CD6  D7F2               	goto	l1817
  1228  000CD8                     l1823:
  1229  000CD8  060A               	decf	___xxtofl@exp^0,f,c
  1230  000CDA  90D8               	bcf	status,0,c
  1231  000CDC  360B               	rlcf	___xxtofl@arg^0,f,c
  1232  000CDE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1233  000CE0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1234  000CE2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1235  000CE4                     l1825:
  1236  000CE4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1237  000CE6  D003               	goto	u1190
  1238  000CE8  0E02               	movlw	2
  1239  000CEA  600A               	cpfslt	___xxtofl@exp^0,c
  1240  000CEC  D7F5               	goto	l1823
  1241  000CEE                     u1190:
  1242  000CEE  A00A               	btfss	___xxtofl@exp^0,0,c
  1243  000CF0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1244  000CF2  90D8               	bcf	status,0,c
  1245  000CF4  320A               	rrcf	___xxtofl@exp^0,f,c
  1246  000CF6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1247  000CFA  6A06               	clrf	(??___xxtofl+1)^0,c
  1248  000CFC  6A07               	clrf	(??___xxtofl+2)^0,c
  1249  000CFE  6A08               	clrf	(??___xxtofl+3)^0,c
  1250  000D00  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1251  000D04  6A07               	clrf	(??___xxtofl+2)^0,c
  1252  000D06  6A06               	clrf	(??___xxtofl+1)^0,c
  1253  000D08  6A05               	clrf	??___xxtofl^0,c
  1254  000D0A  5005               	movf	??___xxtofl^0,w,c
  1255  000D0C  120B               	iorwf	___xxtofl@arg^0,f,c
  1256  000D0E  5006               	movf	(??___xxtofl+1)^0,w,c
  1257  000D10  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1258  000D12  5007               	movf	(??___xxtofl+2)^0,w,c
  1259  000D14  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1260  000D16  5008               	movf	(??___xxtofl+3)^0,w,c
  1261  000D18  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1262  000D1A  5009               	movf	___xxtofl@sign^0,w,c
  1263  000D1C  E002               	bz	l1841
  1264  000D1E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1265  000D20  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1266  000D22                     l1841:
  1267  000D22  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1268  000D26  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1269  000D2A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1270  000D2E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1271  000D32  0012               	return		;funcret
  1272  000D34                     __end_of___xxtofl:
  1273                           	callstack 0
  1274  000D34                     PL6:
  1275                           	callstack 29
  1276  000D34  6E08               	movwf	(??___xxtofl+3)^0,c
  1277  000D36  5005               	movf	??___xxtofl^0,w,c
  1278  000D38  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1279  000D3A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1280  000D3C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1281  000D3E  0012               	return	
  1282  000D40                     __end_ofPL6:
  1283                           	callstack 0
  1284  000D40                     PL8:
  1285                           	callstack 29
  1286  000D40  90D8               	bcf	status,0,c
  1287  000D42  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1288  000D44  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1289  000D46  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1290  000D48  320B               	rrcf	___xxtofl@arg^0,f,c
  1291  000D4A  0012               	return	
  1292  000D4C                     __end_ofPL8:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function ___fldiv *****************
  1296 ;; Defined at:
  1297 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  b               4   14[COMRAM] unsigned char 
  1300 ;;  a               4   18[COMRAM] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  grs             4   33[COMRAM] unsigned long 
  1303 ;;  rem             4   26[COMRAM] unsigned long 
  1304 ;;  new_exp         2   31[COMRAM] short 
  1305 ;;  aexp            1   38[COMRAM] unsigned char 
  1306 ;;  bexp            1   37[COMRAM] unsigned char 
  1307 ;;  sign            1   30[COMRAM] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  4   14[COMRAM] unsigned char 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1317 ;;      Params:         8       0       0       0       0       0       0       0       0
  1318 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1319 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1320 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1321 ;;Total ram usage:       25 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_LM35_read
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text5
  1331  000832                     __ptext5:
  1332                           	callstack 0
  1333  000832                     ___fldiv:
  1334                           	callstack 29
  1335                           
  1336                           ;incstack = 0
  1337  000832  5012               	movf	(___fldiv@b+3)^0,w,c
  1338  000834  0B80               	andlw	128
  1339  000836  6E1F               	movwf	___fldiv@sign^0,c
  1340  000838  5012               	movf	(___fldiv@b+3)^0,w,c
  1341  00083A  2412               	addwf	(___fldiv@b+3)^0,w,c
  1342  00083C  6E26               	movwf	___fldiv@bexp^0,c
  1343  00083E  BE11               	btfsc	(___fldiv@b+2)^0,7,c
  1344  000840  8026               	bsf	___fldiv@bexp^0,0,c
  1345  000842  5026               	movf	___fldiv@bexp^0,w,c
  1346  000844  E005               	bz	l768
  1347  000846  2826               	incf	___fldiv@bexp^0,w,c
  1348  000848  E101               	bnz	l1613
  1349  00084A  D8D0               	call	PL4	;call to abstracted procedure
  1350  00084C                     l1613:
  1351  00084C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  1352  00084E  D003               	goto	L1
  1353  000850                     l768:
  1354  000850  6A0F               	clrf	___fldiv@b^0,c
  1355  000852  6A10               	clrf	(___fldiv@b+1)^0,c
  1356  000854  6A11               	clrf	(___fldiv@b+2)^0,c
  1357  000856                     L1:
  1358  000856  6A12               	clrf	(___fldiv@b+3)^0,c
  1359  000858  5016               	movf	(___fldiv@a+3)^0,w,c
  1360  00085A  0B80               	andlw	128
  1361  00085C  1A1F               	xorwf	___fldiv@sign^0,f,c
  1362  00085E  5016               	movf	(___fldiv@a+3)^0,w,c
  1363  000860  2416               	addwf	(___fldiv@a+3)^0,w,c
  1364  000862  6E27               	movwf	___fldiv@aexp^0,c
  1365  000864  BE15               	btfsc	(___fldiv@a+2)^0,7,c
  1366  000866  8027               	bsf	___fldiv@aexp^0,0,c
  1367  000868  5027               	movf	___fldiv@aexp^0,w,c
  1368  00086A  E008               	bz	l772
  1369  00086C  2827               	incf	___fldiv@aexp^0,w,c
  1370  00086E  E104               	bnz	l1629
  1371  000870  6A13               	clrf	___fldiv@a^0,c
  1372  000872  6A14               	clrf	(___fldiv@a+1)^0,c
  1373  000874  6A15               	clrf	(___fldiv@a+2)^0,c
  1374  000876  6A16               	clrf	(___fldiv@a+3)^0,c
  1375  000878                     l1629:
  1376  000878  8E15               	bsf	(___fldiv@a+2)^0,7,c
  1377  00087A  D003               	goto	L2
  1378  00087C                     l772:
  1379  00087C  6A13               	clrf	___fldiv@a^0,c
  1380  00087E  6A14               	clrf	(___fldiv@a+1)^0,c
  1381  000880  6A15               	clrf	(___fldiv@a+2)^0,c
  1382  000882                     L2:
  1383  000882  6A16               	clrf	(___fldiv@a+3)^0,c
  1384  000884  5013               	movf	___fldiv@a^0,w,c
  1385  000886  1014               	iorwf	(___fldiv@a+1)^0,w,c
  1386  000888  1015               	iorwf	(___fldiv@a+2)^0,w,c
  1387  00088A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  1388  00088C  E110               	bnz	l1643
  1389  00088E  D8AE               	call	PL4	;call to abstracted procedure
  1390  000890  0E80               	movlw	128
  1391  000892  1211               	iorwf	(___fldiv@b+2)^0,f,c
  1392  000894  0E7F               	movlw	127
  1393  000896  1212               	iorwf	(___fldiv@b+3)^0,f,c
  1394  000898  501F               	movf	___fldiv@sign^0,w,c
  1395  00089A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  1396  00089C  C00F  F00F         	movff	___fldiv@b,?___fldiv
  1397  0008A0  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  1398  0008A4  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  1399  0008A8  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  1400  0008AC  0012               	return	
  1401  0008AE                     l1643:
  1402  0008AE  5026               	movf	___fldiv@bexp^0,w,c
  1403  0008B0  E105               	bnz	l1647
  1404  0008B2  6A0F               	clrf	?___fldiv^0,c
  1405  0008B4  6A10               	clrf	(?___fldiv+1)^0,c
  1406  0008B6  6A11               	clrf	(?___fldiv+2)^0,c
  1407  0008B8  6A12               	clrf	(?___fldiv+3)^0,c
  1408  0008BA  0012               	return	
  1409  0008BC                     l1647:
  1410  0008BC  5027               	movf	___fldiv@aexp^0,w,c
  1411  0008BE  C026  F017         	movff	___fldiv@bexp,??___fldiv
  1412  0008C2  6A18               	clrf	(??___fldiv+1)^0,c
  1413  0008C4  5E17               	subwf	??___fldiv^0,f,c
  1414  0008C6  0E00               	movlw	0
  1415  0008C8  5A18               	subwfb	(??___fldiv+1)^0,f,c
  1416  0008CA  0E7F               	movlw	127
  1417  0008CC  2417               	addwf	??___fldiv^0,w,c
  1418  0008CE  6E20               	movwf	___fldiv@new_exp^0,c
  1419  0008D0  0E00               	movlw	0
  1420  0008D2  2018               	addwfc	(??___fldiv+1)^0,w,c
  1421  0008D4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  1422  0008D6  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  1423  0008DA  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  1424  0008DE  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  1425  0008E2  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  1426  0008E6  D882               	call	PL4	;call to abstracted procedure
  1427  0008E8  6A22               	clrf	___fldiv@grs^0,c
  1428  0008EA  6A23               	clrf	(___fldiv@grs+1)^0,c
  1429  0008EC  6A24               	clrf	(___fldiv@grs+2)^0,c
  1430  0008EE  6A25               	clrf	(___fldiv@grs+3)^0,c
  1431  0008F0  6A27               	clrf	___fldiv@aexp^0,c
  1432  0008F2  D01B               	goto	l778
  1433  0008F4                     l1657:
  1434  0008F4  5027               	movf	___fldiv@aexp^0,w,c
  1435  0008F6  E006               	bz	l1665
  1436  0008F8  90D8               	bcf	status,0,c
  1437  0008FA  361B               	rlcf	___fldiv@rem^0,f,c
  1438  0008FC  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  1439  0008FE  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  1440  000900  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  1441  000902  D867               	call	PL2	;call to abstracted procedure
  1442  000904                     l1665:
  1443  000904  5013               	movf	___fldiv@a^0,w,c
  1444  000906  5C1B               	subwf	___fldiv@rem^0,w,c
  1445  000908  5014               	movf	(___fldiv@a+1)^0,w,c
  1446  00090A  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  1447  00090C  5015               	movf	(___fldiv@a+2)^0,w,c
  1448  00090E  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  1449  000910  5016               	movf	(___fldiv@a+3)^0,w,c
  1450  000912  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  1451  000914  E309               	bnc	l1671
  1452  000916  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  1453  000918  5013               	movf	___fldiv@a^0,w,c
  1454  00091A  5E1B               	subwf	___fldiv@rem^0,f,c
  1455  00091C  5014               	movf	(___fldiv@a+1)^0,w,c
  1456  00091E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  1457  000920  5015               	movf	(___fldiv@a+2)^0,w,c
  1458  000922  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  1459  000924  5016               	movf	(___fldiv@a+3)^0,w,c
  1460  000926  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  1461  000928                     l1671:
  1462  000928  2A27               	incf	___fldiv@aexp^0,f,c
  1463  00092A                     l778:
  1464  00092A  0E19               	movlw	25
  1465  00092C  6427               	cpfsgt	___fldiv@aexp^0,c
  1466  00092E  D7E2               	goto	l1657
  1467  000930  501B               	movf	___fldiv@rem^0,w,c
  1468  000932  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  1469  000934  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  1470  000936  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  1471  000938  E006               	bz	l1683
  1472  00093A  8022               	bsf	___fldiv@grs^0,0,c
  1473  00093C  D004               	goto	l1683
  1474  00093E                     l1677:
  1475  00093E  D849               	call	PL2	;call to abstracted procedure
  1476  000940  0620               	decf	___fldiv@new_exp^0,f,c
  1477  000942  A0D8               	btfss	status,0,c
  1478  000944  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  1479  000946                     l1683:
  1480  000946  AE11               	btfss	(___fldiv@b+2)^0,7,c
  1481  000948  D7FA               	goto	l1677
  1482  00094A  6A27               	clrf	___fldiv@aexp^0,c
  1483  00094C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  1484  00094E  D013               	goto	l789
  1485  000950  5022               	movf	___fldiv@grs^0,w,c
  1486  000952  6E17               	movwf	??___fldiv^0,c
  1487  000954  5023               	movf	(___fldiv@grs+1)^0,w,c
  1488  000956  6E18               	movwf	(??___fldiv+1)^0,c
  1489  000958  5024               	movf	(___fldiv@grs+2)^0,w,c
  1490  00095A  6E19               	movwf	(??___fldiv+2)^0,c
  1491  00095C  0E7F               	movlw	127
  1492  00095E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  1493  000960  6E1A               	movwf	(??___fldiv+3)^0,c
  1494  000962  5017               	movf	??___fldiv^0,w,c
  1495  000964  1018               	iorwf	(??___fldiv+1)^0,w,c
  1496  000966  1019               	iorwf	(??___fldiv+2)^0,w,c
  1497  000968  101A               	iorwf	(??___fldiv+3)^0,w,c
  1498  00096A  E003               	bz	l790
  1499  00096C                     u960:
  1500  00096C  0E01               	movlw	1
  1501  00096E  6E27               	movwf	___fldiv@aexp^0,c
  1502  000970  D002               	goto	l789
  1503  000972                     l790:
  1504  000972  B00F               	btfsc	___fldiv@b^0,0,c
  1505  000974  D7FB               	goto	u960
  1506  000976                     l789:
  1507  000976  5027               	movf	___fldiv@aexp^0,w,c
  1508  000978  E00E               	bz	l1699
  1509  00097A  2A0F               	incf	___fldiv@b^0,f,c
  1510  00097C  0E00               	movlw	0
  1511  00097E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  1512  000980  2211               	addwfc	(___fldiv@b+2)^0,f,c
  1513  000982  2212               	addwfc	(___fldiv@b+3)^0,f,c
  1514  000984  A012               	btfss	(___fldiv@b+3)^0,0,c
  1515  000986  D007               	goto	l1699
  1516  000988  3412               	rlcf	(___fldiv@b+3)^0,w,c
  1517  00098A  3212               	rrcf	(___fldiv@b+3)^0,f,c
  1518  00098C  3211               	rrcf	(___fldiv@b+2)^0,f,c
  1519  00098E  3210               	rrcf	(___fldiv@b+1)^0,f,c
  1520  000990  320F               	rrcf	___fldiv@b^0,f,c
  1521  000992  4A20               	infsnz	___fldiv@new_exp^0,f,c
  1522  000994  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  1523  000996                     l1699:
  1524  000996  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1525  000998  D007               	goto	l1705
  1526  00099A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1527  00099C  E102               	bnz	u1000
  1528  00099E  2820               	incf	___fldiv@new_exp^0,w,c
  1529  0009A0  E303               	bnc	l1705
  1530  0009A2                     u1000:
  1531  0009A2  6A21               	clrf	(___fldiv@new_exp+1)^0,c
  1532  0009A4  6820               	setf	___fldiv@new_exp^0,c
  1533  0009A6  D822               	call	PL4	;call to abstracted procedure
  1534  0009A8                     l1705:
  1535  0009A8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  1536  0009AA  D004               	goto	u1010
  1537  0009AC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  1538  0009AE  E106               	bnz	l796
  1539  0009B0  0420               	decf	___fldiv@new_exp^0,w,c
  1540  0009B2  E204               	bc	l796
  1541  0009B4                     u1010:
  1542  0009B4  6A20               	clrf	___fldiv@new_exp^0,c
  1543  0009B6  6A21               	clrf	(___fldiv@new_exp+1)^0,c
  1544  0009B8  D819               	call	PL4	;call to abstracted procedure
  1545  0009BA  6A1F               	clrf	___fldiv@sign^0,c
  1546  0009BC                     l796:
  1547  0009BC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  1548  0009C0  A026               	btfss	___fldiv@bexp^0,0,c
  1549  0009C2  D002               	goto	l1711
  1550  0009C4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  1551  0009C6  D001               	goto	l1713
  1552  0009C8                     l1711:
  1553  0009C8  9E11               	bcf	(___fldiv@b+2)^0,7,c
  1554  0009CA                     l1713:
  1555  0009CA  90D8               	bcf	status,0,c
  1556  0009CC  3026               	rrcf	___fldiv@bexp^0,w,c
  1557  0009CE  6E12               	movwf	(___fldiv@b+3)^0,c
  1558  0009D0  D763               	goto	L3
  1559  0009D2                     __end_of___fldiv:
  1560                           	callstack 0
  1561  0009D2                     PL2:
  1562                           	callstack 29
  1563  0009D2  90D8               	bcf	status,0,c
  1564  0009D4  360F               	rlcf	___fldiv@b^0,f,c
  1565  0009D6  3610               	rlcf	(___fldiv@b+1)^0,f,c
  1566  0009D8  3611               	rlcf	(___fldiv@b+2)^0,f,c
  1567  0009DA  3612               	rlcf	(___fldiv@b+3)^0,f,c
  1568  0009DC  BE25               	btfsc	(___fldiv@grs+3)^0,7,c
  1569  0009DE  800F               	bsf	___fldiv@b^0,0,c
  1570  0009E0  90D8               	bcf	status,0,c
  1571  0009E2  3622               	rlcf	___fldiv@grs^0,f,c
  1572  0009E4  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  1573  0009E6  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  1574  0009E8  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  1575  0009EA  0012               	return	
  1576  0009EC                     __end_ofPL2:
  1577                           	callstack 0
  1578  0009EC                     PL4:
  1579                           	callstack 29
  1580  0009EC  6A0F               	clrf	___fldiv@b^0,c
  1581  0009EE  6A10               	clrf	(___fldiv@b+1)^0,c
  1582  0009F0  6A11               	clrf	(___fldiv@b+2)^0,c
  1583  0009F2  6A12               	clrf	(___fldiv@b+3)^0,c
  1584  0009F4  0012               	return	
  1585  0009F6                     __end_ofPL4:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _LCD_init *****************
  1589 ;; Defined at:
  1590 ;;		line 14 in file "maincode.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  reloj7          8   64[COMRAM] unsigned char [8]
  1595 ;;  reloj6          8   56[COMRAM] unsigned char [8]
  1596 ;;  reloj5          8   48[COMRAM] unsigned char [8]
  1597 ;;  reloj4          8   40[COMRAM] unsigned char [8]
  1598 ;;  reloj3          8   32[COMRAM] unsigned char [8]
  1599 ;;  reloj2          8   24[COMRAM] unsigned char [8]
  1600 ;;  reloj1          8   16[COMRAM] unsigned char [8]
  1601 ;;  reloj0          8    8[COMRAM] unsigned char [8]
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0
  1612 ;;      Locals:        64       0       0       0       0       0       0       0       0
  1613 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1614 ;;      Totals:        66       0       0       0       0       0       0       0       0
  1615 ;;Total ram usage:       66 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 3
  1618 ;; This function calls:
  1619 ;;		_BORRAR_LCD
  1620 ;;		_CURSOR_HOME
  1621 ;;		_CURSOR_ONOFF
  1622 ;;		_GENERACARACTER
  1623 ;;		_LCD_CONFIG
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text6
  1630  0009F6                     __ptext6:
  1631                           	callstack 0
  1632  0009F6                     _LCD_init:
  1633                           	callstack 27
  1634                           
  1635                           ;maincode.c: 15:     unsigned char reloj0[]={0x1F,0x1F,0x0E,0x04,0x0A,0x11,0x1F,0x00};
  1636                           
  1637                           ;incstack = 0
  1638  0009F6  EE20  F057         	lfsr	2,LCD_init@F3190
  1639  0009FA  EE10  F009         	lfsr	1,LCD_init@reloj0
  1640  0009FE  0E07               	movlw	7
  1641  000A00                     u1231:
  1642  000A00  CFDB FFE3          	movff	plusw2,plusw1
  1643  000A04  06E8               	decf	wreg,f,c
  1644  000A06  E2FC               	bc	u1231
  1645                           
  1646                           ;maincode.c: 16:     unsigned char reloj1[]={0x1F,0x1B,0x0E,0x04,0x0A,0x15,0x1F,0x00};
  1647  000A08  EE20  F04F         	lfsr	2,LCD_init@F3192
  1648  000A0C  EE10  F011         	lfsr	1,LCD_init@reloj1
  1649  000A10  0E07               	movlw	7
  1650  000A12                     u1241:
  1651  000A12  CFDB FFE3          	movff	plusw2,plusw1
  1652  000A16  06E8               	decf	wreg,f,c
  1653  000A18  E2FC               	bc	u1241
  1654                           
  1655                           ;maincode.c: 17:     unsigned char reloj2[]={0x1F,0x11,0x0E,0x04,0x0A,0x1F,0x1F,0x00};
  1656  000A1A  EE20  F088         	lfsr	2,LCD_init@F3194
  1657  000A1E  EE10  F019         	lfsr	1,LCD_init@reloj2
  1658  000A22  0E07               	movlw	7
  1659  000A24                     u1251:
  1660  000A24  CFDB FFE3          	movff	plusw2,plusw1
  1661  000A28  06E8               	decf	wreg,f,c
  1662  000A2A  E2FC               	bc	u1251
  1663                           
  1664                           ;maincode.c: 18:     unsigned char reloj3[]={0x1F,0x11,0x0A,0x04,0x0E,0x1F,0x1F,0x00};
  1665  000A2C  EE20  F080         	lfsr	2,LCD_init@F3196
  1666  000A30  EE10  F021         	lfsr	1,LCD_init@reloj3
  1667  000A34  0E07               	movlw	7
  1668  000A36                     u1261:
  1669  000A36  CFDB FFE3          	movff	plusw2,plusw1
  1670  000A3A  06E8               	decf	wreg,f,c
  1671  000A3C  E2FC               	bc	u1261
  1672                           
  1673                           ;maincode.c: 19:     unsigned char reloj4[]={0x0A,0x12,0x03,0x1F,0x07,0x07,0x06,0x00};
  1674  000A3E  EE20  F078         	lfsr	2,LCD_init@F3198
  1675  000A42  EE10  F029         	lfsr	1,LCD_init@reloj4
  1676  000A46  0E07               	movlw	7
  1677  000A48                     u1271:
  1678  000A48  CFDB FFE3          	movff	plusw2,plusw1
  1679  000A4C  06E8               	decf	wreg,f,c
  1680  000A4E  E2FC               	bc	u1271
  1681                           
  1682                           ;maincode.c: 20:     unsigned char reloj5[]={0x00,0x11,0x1B,0x07,0x1B,0x11,0x00,0x00};
  1683  000A50  EE20  F070         	lfsr	2,LCD_init@F3200
  1684  000A54  EE10  F031         	lfsr	1,LCD_init@reloj5
  1685  000A58  0E07               	movlw	7
  1686  000A5A                     u1281:
  1687  000A5A  CFDB FFE3          	movff	plusw2,plusw1
  1688  000A5E  06E8               	decf	wreg,f,c
  1689  000A60  E2FC               	bc	u1281
  1690                           
  1691                           ;maincode.c: 21:     unsigned char reloj6[]={0x0E,0x0F,0x1F,0x07,0x04,0x14,0x0C,0x00};
  1692  000A62  EE20  F068         	lfsr	2,LCD_init@F3202
  1693  000A66  EE10  F039         	lfsr	1,LCD_init@reloj6
  1694  000A6A  0E07               	movlw	7
  1695  000A6C                     u1291:
  1696  000A6C  CFDB FFE3          	movff	plusw2,plusw1
  1697  000A70  06E8               	decf	wreg,f,c
  1698  000A72  E2FC               	bc	u1291
  1699                           
  1700                           ;maincode.c: 22:     unsigned char reloj7[]={0x1F,0x1F,0x0E,0x04,0x0A,0x11,0x1F,0x00};
  1701  000A74  EE20  F060         	lfsr	2,LCD_init@F3204
  1702  000A78  EE10  F041         	lfsr	1,LCD_init@reloj7
  1703  000A7C  0E07               	movlw	7
  1704  000A7E                     u1301:
  1705  000A7E  CFDB FFE3          	movff	plusw2,plusw1
  1706  000A82  06E8               	decf	wreg,f,c
  1707  000A84  E2FC               	bc	u1301
  1708                           
  1709                           ;maincode.c: 23:     TRISD = 0x00;
  1710  000A86  6A95               	clrf	149,c	;volatile
  1711                           
  1712                           ;maincode.c: 24:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1713  000A88  0E04               	movlw	4
  1714  000A8A  6E08               	movwf	(??_LCD_init+1)^0,c
  1715  000A8C  0E0C               	movlw	12
  1716  000A8E  6E07               	movwf	??_LCD_init^0,c
  1717  000A90  0E34               	movlw	52
  1718  000A92                     u1477:
  1719  000A92  2EE8               	decfsz	wreg,f,c
  1720  000A94  D7FE               	bra	u1477
  1721  000A96  2E07               	decfsz	??_LCD_init^0,f,c
  1722  000A98  D7FC               	bra	u1477
  1723  000A9A  2E08               	decfsz	(??_LCD_init+1)^0,f,c
  1724  000A9C  D7FA               	bra	u1477
  1725                           
  1726                           ;maincode.c: 25:     LCD_CONFIG();
  1727  000A9E  EC60  F007         	call	_LCD_CONFIG	;wreg free
  1728                           
  1729                           ;maincode.c: 26:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
  1730  000AA2  0EEA               	movlw	234
  1731  000AA4  6E07               	movwf	??_LCD_init^0,c
  1732  000AA6  0EC3               	movlw	195
  1733  000AA8                     u1487:
  1734  000AA8  2EE8               	decfsz	wreg,f,c
  1735  000AAA  D7FE               	bra	u1487
  1736  000AAC  2E07               	decfsz	??_LCD_init^0,f,c
  1737  000AAE  D7FC               	bra	u1487
  1738  000AB0  F000               	nop	
  1739                           
  1740                           ;maincode.c: 27:     BORRAR_LCD();
  1741  000AB2  EC12  F009         	call	_BORRAR_LCD	;wreg free
  1742                           
  1743                           ;maincode.c: 28:     CURSOR_HOME();
  1744  000AB6  EC0F  F009         	call	_CURSOR_HOME	;wreg free
  1745                           
  1746                           ;maincode.c: 29:     CURSOR_ONOFF(1);
  1747  000ABA  0E01               	movlw	1
  1748  000ABC  ECED  F008         	call	_CURSOR_ONOFF
  1749                           
  1750                           ;maincode.c: 30:     GENERACARACTER(reloj0, 0);
  1751  000AC0  0E09               	movlw	low LCD_init@reloj0
  1752  000AC2  6E04               	movwf	GENERACARACTER@vector^0,c
  1753  000AC4  6A05               	clrf	GENERACARACTER@pos^0,c
  1754  000AC6  EC84  F008         	call	_GENERACARACTER	;wreg free
  1755                           
  1756                           ;maincode.c: 31:     GENERACARACTER(reloj1, 1);
  1757  000ACA  0E11               	movlw	low LCD_init@reloj1
  1758  000ACC  6E04               	movwf	GENERACARACTER@vector^0,c
  1759  000ACE  0E01               	movlw	1
  1760  000AD0  6E05               	movwf	GENERACARACTER@pos^0,c
  1761  000AD2  EC84  F008         	call	_GENERACARACTER	;wreg free
  1762                           
  1763                           ;maincode.c: 32:     GENERACARACTER(reloj2, 2);
  1764  000AD6  0E19               	movlw	low LCD_init@reloj2
  1765  000AD8  6E04               	movwf	GENERACARACTER@vector^0,c
  1766  000ADA  0E02               	movlw	2
  1767  000ADC  6E05               	movwf	GENERACARACTER@pos^0,c
  1768  000ADE  EC84  F008         	call	_GENERACARACTER	;wreg free
  1769                           
  1770                           ;maincode.c: 33:     GENERACARACTER(reloj3, 3);
  1771  000AE2  0E21               	movlw	low LCD_init@reloj3
  1772  000AE4  6E04               	movwf	GENERACARACTER@vector^0,c
  1773  000AE6  0E03               	movlw	3
  1774  000AE8  6E05               	movwf	GENERACARACTER@pos^0,c
  1775  000AEA  EC84  F008         	call	_GENERACARACTER	;wreg free
  1776                           
  1777                           ;maincode.c: 34:     GENERACARACTER(reloj4, 4);
  1778  000AEE  0E29               	movlw	low LCD_init@reloj4
  1779  000AF0  6E04               	movwf	GENERACARACTER@vector^0,c
  1780  000AF2  0E04               	movlw	4
  1781  000AF4  6E05               	movwf	GENERACARACTER@pos^0,c
  1782  000AF6  EC84  F008         	call	_GENERACARACTER	;wreg free
  1783                           
  1784                           ;maincode.c: 35:     GENERACARACTER(reloj5, 5);
  1785  000AFA  0E31               	movlw	low LCD_init@reloj5
  1786  000AFC  6E04               	movwf	GENERACARACTER@vector^0,c
  1787  000AFE  0E05               	movlw	5
  1788  000B00  6E05               	movwf	GENERACARACTER@pos^0,c
  1789  000B02  EC84  F008         	call	_GENERACARACTER	;wreg free
  1790                           
  1791                           ;maincode.c: 36:     GENERACARACTER(reloj6, 6);
  1792  000B06  0E39               	movlw	low LCD_init@reloj6
  1793  000B08  6E04               	movwf	GENERACARACTER@vector^0,c
  1794  000B0A  0E06               	movlw	6
  1795  000B0C  6E05               	movwf	GENERACARACTER@pos^0,c
  1796  000B0E  EC84  F008         	call	_GENERACARACTER	;wreg free
  1797                           
  1798                           ;maincode.c: 37:     GENERACARACTER(reloj7, 7);
  1799  000B12  0E41               	movlw	low LCD_init@reloj7
  1800  000B14  6E04               	movwf	GENERACARACTER@vector^0,c
  1801  000B16  0E07               	movlw	7
  1802  000B18  6E05               	movwf	GENERACARACTER@pos^0,c
  1803  000B1A  EF84  F008         	goto	_GENERACARACTER	;wreg free
  1804  000B1E                     __end_of_LCD_init:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _LCD_CONFIG *****************
  1808 ;; Defined at:
  1809 ;;		line 72 in file "LCD.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:         0       0       0       0       0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1826 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1827 ;;Total ram usage:        1 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 2
  1830 ;; This function calls:
  1831 ;;		_ENVIA_LCD_CMD
  1832 ;;		_ENVIA_NIBBLE
  1833 ;; This function is called by:
  1834 ;;		_LCD_init
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text7
  1839  000EC0                     __ptext7:
  1840                           	callstack 0
  1841  000EC0                     _LCD_CONFIG:
  1842                           	callstack 27
  1843                           
  1844                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1845                           
  1846                           ;incstack = 0
  1847  000EC0  908C               	bcf	140,0,c	;volatile
  1848                           
  1849                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1850  000EC2  928C               	bcf	140,1,c	;volatile
  1851                           
  1852                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1853  000EC4  0E30               	movlw	48
  1854  000EC6  ECDF  F008         	call	_ENVIA_NIBBLE
  1855                           
  1856                           ;LCD.c: 77:         _delay(24000);
  1857  000ECA  0E20               	movlw	32
  1858  000ECC  6E04               	movwf	??_LCD_CONFIG^0,c
  1859  000ECE  0E2A               	movlw	42
  1860  000ED0                     u1497:
  1861  000ED0  2EE8               	decfsz	wreg,f,c
  1862  000ED2  D7FE               	bra	u1497
  1863  000ED4  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1864  000ED6  D7FC               	bra	u1497
  1865                           
  1866                           ;LCD.c: 78:         _delay(24000);
  1867  000ED8  0E20               	movlw	32
  1868  000EDA  6E04               	movwf	??_LCD_CONFIG^0,c
  1869  000EDC  0E2A               	movlw	42
  1870  000EDE                     u1507:
  1871  000EDE  2EE8               	decfsz	wreg,f,c
  1872  000EE0  D7FE               	bra	u1507
  1873  000EE2  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1874  000EE4  D7FC               	bra	u1507
  1875                           
  1876                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1877  000EE6  0E30               	movlw	48
  1878  000EE8  ECDF  F008         	call	_ENVIA_NIBBLE
  1879                           
  1880                           ;LCD.c: 83:  _delay(1200);
  1881  000EEC  0EF0               	movlw	240
  1882  000EEE                     u1517:
  1883  000EEE  D000               	nop2	
  1884  000EF0  2EE8               	decfsz	wreg,f,c
  1885  000EF2  D7FD               	bra	u1517
  1886                           
  1887                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1888  000EF4  0E30               	movlw	48
  1889  000EF6  ECDF  F008         	call	_ENVIA_NIBBLE
  1890                           
  1891                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1892  000EFA  0E20               	movlw	32
  1893  000EFC  ECDF  F008         	call	_ENVIA_NIBBLE
  1894                           
  1895                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1896  000F00  0E01               	movlw	1
  1897  000F02  EC3E  F008         	call	_ENVIA_LCD_CMD
  1898                           
  1899                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1900  000F06  0E28               	movlw	40
  1901  000F08  EC3E  F008         	call	_ENVIA_LCD_CMD
  1902                           
  1903                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1904  000F0C  0E0F               	movlw	15
  1905  000F0E  EC3E  F008         	call	_ENVIA_LCD_CMD
  1906                           
  1907                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1908  000F12  0E06               	movlw	6
  1909  000F14  EC3E  F008         	call	_ENVIA_LCD_CMD
  1910                           
  1911                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1912  000F18  0E01               	movlw	1
  1913  000F1A  EF3E  F008         	goto	_ENVIA_LCD_CMD
  1914  000F1E                     __end_of_LCD_CONFIG:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _GENERACARACTER *****************
  1918 ;; Defined at:
  1919 ;;		line 153 in file "LCD.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  vector          1    3[COMRAM] PTR const unsigned char 
  1922 ;;		 -> LCD_init@reloj7(8), LCD_init@reloj6(8), LCD_init@reloj5(8), LCD_init@reloj4(8), 
  1923 ;;		 -> LCD_init@reloj3(8), LCD_init@reloj2(8), LCD_init@reloj1(8), LCD_init@reloj0(8), 
  1924 ;;  pos             1    4[COMRAM] unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  i               1    5[COMRAM] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1939 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1940 ;;Total ram usage:        3 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 2
  1943 ;; This function calls:
  1944 ;;		_ENVIA_CHAR
  1945 ;;		_ENVIA_LCD_CMD
  1946 ;; This function is called by:
  1947 ;;		_LCD_init
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text8
  1952  001108                     __ptext8:
  1953                           	callstack 0
  1954  001108                     _GENERACARACTER:
  1955                           	callstack 27
  1956                           
  1957                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1958                           
  1959                           ;incstack = 0
  1960  001108  5005               	movf	GENERACARACTER@pos^0,w,c
  1961  00110A  0D08               	mullw	8
  1962  00110C  50F3               	movf	243,w,c
  1963  00110E  0F40               	addlw	64
  1964  001110  EC3E  F008         	call	_ENVIA_LCD_CMD
  1965                           
  1966                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1967  001114  6A06               	clrf	GENERACARACTER@i^0,c
  1968  001116                     l1593:
  1969                           
  1970                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1971  001116  5004               	movf	GENERACARACTER@vector^0,w,c
  1972  001118  2406               	addwf	GENERACARACTER@i^0,w,c
  1973  00111A  6ED9               	movwf	fsr2l,c
  1974  00111C  6ADA               	clrf	fsr2h,c
  1975  00111E  50DF               	movf	indf2,w,c
  1976  001120  EC56  F008         	call	_ENVIA_CHAR
  1977                           
  1978                           ;LCD.c: 160:  }
  1979  001124  2A06               	incf	GENERACARACTER@i^0,f,c
  1980  001126  0E07               	movlw	7
  1981  001128  6406               	cpfsgt	GENERACARACTER@i^0,c
  1982  00112A  D7F5               	goto	l1593
  1983                           
  1984                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1985  00112C  0E80               	movlw	128
  1986  00112E  EF3E  F008         	goto	_ENVIA_LCD_CMD
  1987  001132                     __end_of_GENERACARACTER:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _CURSOR_ONOFF *****************
  1991 ;; Defined at:
  1992 ;;		line 35 in file "LCD.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  estado          1    wreg     unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  estado          1    3[COMRAM] unsigned char 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2006 ;;      Params:         0       0       0       0       0       0       0       0       0
  2007 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2009 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2010 ;;Total ram usage:        1 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 2
  2013 ;; This function calls:
  2014 ;;		_ENVIA_LCD_CMD
  2015 ;; This function is called by:
  2016 ;;		_LCD_init
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text9
  2021  0011DA                     __ptext9:
  2022                           	callstack 0
  2023  0011DA                     _CURSOR_ONOFF:
  2024                           	callstack 27
  2025                           
  2026                           ;incstack = 0
  2027                           ;CURSOR_ONOFF@estado stored from wreg
  2028  0011DA  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  2029                           
  2030                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2031  0011DC  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  2032  0011DE  E103               	bnz	l1581
  2033  0011E0  0E0E               	movlw	14
  2034  0011E2  EC3E  F008         	call	_ENVIA_LCD_CMD
  2035  0011E6                     l1581:
  2036                           
  2037                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2038  0011E6  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  2039  0011E8  A4D8               	btfss	status,2,c
  2040  0011EA  0012               	return	
  2041  0011EC  0E0C               	movlw	12
  2042  0011EE  EF3E  F008         	goto	_ENVIA_LCD_CMD
  2043  0011F2                     __end_of_CURSOR_ONOFF:
  2044                           	callstack 0
  2045                           
  2046 ;; *************** function _CURSOR_HOME *****************
  2047 ;; Defined at:
  2048 ;;		line 30 in file "LCD.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         0       0       0       0       0       0       0       0       0
  2063 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2065 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 2
  2069 ;; This function calls:
  2070 ;;		_ENVIA_LCD_CMD
  2071 ;; This function is called by:
  2072 ;;		_LCD_init
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text10
  2078  00121E                     __ptext10:
  2079                           	callstack 0
  2080  00121E                     _CURSOR_HOME:
  2081                           	callstack 27
  2082                           
  2083                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2084                           
  2085                           ;incstack = 0
  2086  00121E  0E02               	movlw	2
  2087  001220  EF3E  F008         	goto	_ENVIA_LCD_CMD
  2088  001224                     __end_of_CURSOR_HOME:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _BORRAR_LCD *****************
  2092 ;; Defined at:
  2093 ;;		line 67 in file "LCD.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 2
  2114 ;; This function calls:
  2115 ;;		_ENVIA_LCD_CMD
  2116 ;; This function is called by:
  2117 ;;		_LCD_init
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text11
  2123  001224                     __ptext11:
  2124                           	callstack 0
  2125  001224                     _BORRAR_LCD:
  2126                           	callstack 27
  2127                           
  2128                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  2129                           
  2130                           ;incstack = 0
  2131  001224  0E01               	movlw	1
  2132  001226  EF3E  F008         	goto	_ENVIA_LCD_CMD
  2133  00122A                     __end_of_BORRAR_LCD:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _ENVIA_LCD_CMD *****************
  2137 ;; Defined at:
  2138 ;;		line 104 in file "LCD.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  dato            1    wreg     unsigned char 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  dato            1    1[COMRAM] unsigned char 
  2143 ;;  aux             1    2[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2153 ;;      Params:         0       0       0       0       0       0       0       0       0
  2154 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2156 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2157 ;;Total ram usage:        2 bytes
  2158 ;; Hardware stack levels used: 1
  2159 ;; Hardware stack levels required when called: 1
  2160 ;; This function calls:
  2161 ;;		_ENVIA_NIBBLE
  2162 ;;		_LEER_LCD
  2163 ;; This function is called by:
  2164 ;;		_POS_CURSOR
  2165 ;;		_CURSOR_HOME
  2166 ;;		_CURSOR_ONOFF
  2167 ;;		_BORRAR_LCD
  2168 ;;		_LCD_CONFIG
  2169 ;;		_GENERACARACTER
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text12
  2174  00107C                     __ptext12:
  2175                           	callstack 0
  2176  00107C                     _ENVIA_LCD_CMD:
  2177                           	callstack 28
  2178                           
  2179                           ;incstack = 0
  2180                           ;ENVIA_LCD_CMD@dato stored from wreg
  2181  00107C  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  2182                           
  2183                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2184  00107E  908C               	bcf	140,0,c	;volatile
  2185                           
  2186                           ;LCD.c: 108:  LEER_LCD();
  2187  001080  EC8F  F007         	call	_LEER_LCD	;wreg free
  2188                           
  2189                           ;LCD.c: 109:  TRISD = 0b00000000;
  2190  001084  6A95               	clrf	149,c	;volatile
  2191                           
  2192                           ;LCD.c: 111:         _delay(1200);
  2193  001086  0EF0               	movlw	240
  2194  001088                     u1527:
  2195  001088  D000               	nop2	
  2196  00108A  2EE8               	decfsz	wreg,f,c
  2197  00108C  D7FD               	bra	u1527
  2198                           
  2199                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2200  00108E  928C               	bcf	140,1,c	;volatile
  2201                           
  2202                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2203  001090  948C               	bcf	140,2,c	;volatile
  2204                           
  2205                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2206  001092  908C               	bcf	140,0,c	;volatile
  2207                           
  2208                           ;LCD.c: 115:  aux = dato & 0xF0;
  2209  001094  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  2210                           
  2211                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2212  001096  D806               	call	PL12	;call to abstracted procedure
  2213  001098  ECDF  F008         	call	_ENVIA_NIBBLE
  2214                           
  2215                           ;LCD.c: 117:  aux = dato<<4;
  2216  00109C  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  2217                           
  2218                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2219  00109E  D802               	call	PL12	;call to abstracted procedure
  2220  0010A0  EFDF  F008         	goto	_ENVIA_NIBBLE
  2221  0010A4                     __end_of_ENVIA_LCD_CMD:
  2222                           	callstack 0
  2223  0010A4                     PL12:
  2224                           	callstack 28
  2225  0010A4  0BF0               	andlw	240
  2226  0010A6  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  2227  0010A8  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  2228  0010AA  0012               	return	
  2229  0010AC                     __end_ofPL12:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _ESCRIBE_VARIABLECHAR_LCD *****************
  2233 ;; Defined at:
  2234 ;;		line 50 in file "maincode.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  numero          1    wreg     unsigned char 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  numero          1   12[COMRAM] unsigned char 
  2239 ;;  unidad          1   11[COMRAM] unsigned char 
  2240 ;;  decena          1   10[COMRAM] unsigned char 
  2241 ;;  centena         1    0        unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0
  2252 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2254 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2255 ;;Total ram usage:        3 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 2
  2258 ;; This function calls:
  2259 ;;		_ENVIA_CHAR
  2260 ;;		___awmod
  2261 ;;		___lbdiv
  2262 ;;		___lbmod
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text13
  2269  000FCA                     __ptext13:
  2270                           	callstack 0
  2271  000FCA                     _ESCRIBE_VARIABLECHAR_LCD:
  2272                           	callstack 28
  2273                           
  2274                           ;incstack = 0
  2275                           ;ESCRIBE_VARIABLECHAR_LCD@numero stored from wreg
  2276  000FCA  6E0D               	movwf	ESCRIBE_VARIABLECHAR_LCD@numero^0,c
  2277                           
  2278                           ;maincode.c: 51:     unsigned char centena, decena, unidad;;maincode.c: 52:     centena 
      +                          = (numero % 1000) / 100;
  2279  000FCC  0E64               	movlw	100
  2280  000FCE  6E07               	movwf	___lbdiv@divisor^0,c
  2281  000FD0  0E03               	movlw	3
  2282  000FD2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2283  000FD4  0EE8               	movlw	232
  2284  000FD6  6E03               	movwf	___awmod@divisor^0,c
  2285  000FD8  C00D  F001         	movff	ESCRIBE_VARIABLECHAR_LCD@numero,___awmod@dividend
  2286  000FDC  6A02               	clrf	(___awmod@dividend+1)^0,c
  2287  000FDE  EC2C  F007         	call	___awmod	;wreg free
  2288  000FE2  5001               	movf	?___awmod^0,w,c
  2289  000FE4  EC0C  F008         	call	___lbdiv
  2290                           
  2291                           ;maincode.c: 53:     decena = (numero % 100) / 10;
  2292  000FE8  0E0A               	movlw	10
  2293  000FEA  6E07               	movwf	___lbdiv@divisor^0,c
  2294  000FEC  0E64               	movlw	100
  2295  000FEE  6E01               	movwf	___lbmod@divisor^0,c
  2296  000FF0  500D               	movf	ESCRIBE_VARIABLECHAR_LCD@numero^0,w,c
  2297  000FF2  EC99  F008         	call	___lbmod
  2298  000FF6  EC0C  F008         	call	___lbdiv
  2299  000FFA  6E0B               	movwf	ESCRIBE_VARIABLECHAR_LCD@decena^0,c
  2300                           
  2301                           ;maincode.c: 54:     unidad = numero % 10;
  2302  000FFC  0E0A               	movlw	10
  2303  000FFE  6E01               	movwf	___lbmod@divisor^0,c
  2304  001000  500D               	movf	ESCRIBE_VARIABLECHAR_LCD@numero^0,w,c
  2305  001002  EC99  F008         	call	___lbmod
  2306  001006  6E0C               	movwf	ESCRIBE_VARIABLECHAR_LCD@unidad^0,c
  2307                           
  2308                           ;maincode.c: 56:     ENVIA_CHAR(decena+0x30);
  2309  001008  500B               	movf	ESCRIBE_VARIABLECHAR_LCD@decena^0,w,c
  2310  00100A  0F30               	addlw	48
  2311  00100C  EC56  F008         	call	_ENVIA_CHAR
  2312                           
  2313                           ;maincode.c: 57:     ENVIA_CHAR(unidad+0x30);
  2314  001010  500C               	movf	ESCRIBE_VARIABLECHAR_LCD@unidad^0,w,c
  2315  001012  0F30               	addlw	48
  2316  001014  EF56  F008         	goto	_ENVIA_CHAR
  2317  001018                     __end_of_ESCRIBE_VARIABLECHAR_LCD:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function ___lbmod *****************
  2321 ;; Defined at:
  2322 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbmod.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  dividend        1    wreg     unsigned char 
  2325 ;;  divisor         1    0[COMRAM] unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  dividend        1    1[COMRAM] unsigned char 
  2328 ;;  rem             1    3[COMRAM] unsigned char 
  2329 ;;  counter         1    2[COMRAM] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      unsigned char 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         1       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        4 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_ESCRIBE_VARIABLECHAR_LCD
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text14
  2353  001132                     __ptext14:
  2354                           	callstack 0
  2355  001132                     ___lbmod:
  2356                           	callstack 29
  2357                           
  2358                           ;incstack = 0
  2359                           ;___lbmod@dividend stored from wreg
  2360  001132  6E02               	movwf	___lbmod@dividend^0,c
  2361  001134  0E08               	movlw	8
  2362  001136  6E03               	movwf	___lbmod@counter^0,c
  2363  001138  6A04               	clrf	___lbmod@rem^0,c
  2364  00113A                     l1787:
  2365  00113A  90D8               	bcf	status,0,c
  2366  00113C  3402               	rlcf	___lbmod@dividend^0,w,c
  2367  00113E  3404               	rlcf	___lbmod@rem^0,w,c
  2368  001140  6E04               	movwf	___lbmod@rem^0,c
  2369  001142  90D8               	bcf	status,0,c
  2370  001144  3602               	rlcf	___lbmod@dividend^0,f,c
  2371  001146  5001               	movf	___lbmod@divisor^0,w,c
  2372  001148  5C04               	subwf	___lbmod@rem^0,w,c
  2373  00114A  E302               	bnc	l1795
  2374  00114C  5001               	movf	___lbmod@divisor^0,w,c
  2375  00114E  5E04               	subwf	___lbmod@rem^0,f,c
  2376  001150                     l1795:
  2377  001150  2E03               	decfsz	___lbmod@counter^0,f,c
  2378  001152  D7F3               	goto	l1787
  2379  001154  5004               	movf	___lbmod@rem^0,w,c
  2380  001156  0012               	return		;funcret
  2381  001158                     __end_of___lbmod:
  2382                           	callstack 0
  2383                           
  2384 ;; *************** function ___lbdiv *****************
  2385 ;; Defined at:
  2386 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  dividend        1    wreg     unsigned char 
  2389 ;;  divisor         1    6[COMRAM] unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  dividend        1    7[COMRAM] unsigned char 
  2392 ;;  quotient        1    9[COMRAM] unsigned char 
  2393 ;;  counter         1    8[COMRAM] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      unsigned char 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2403 ;;      Params:         1       0       0       0       0       0       0       0       0
  2404 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2406 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2407 ;;Total ram usage:        4 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_ESCRIBE_VARIABLECHAR_LCD
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text15
  2417  001018                     __ptext15:
  2418                           	callstack 0
  2419  001018                     ___lbdiv:
  2420                           	callstack 29
  2421                           
  2422                           ;incstack = 0
  2423                           ;___lbdiv@dividend stored from wreg
  2424  001018  6E08               	movwf	___lbdiv@dividend^0,c
  2425  00101A  6A0A               	clrf	___lbdiv@quotient^0,c
  2426  00101C  5007               	movf	___lbdiv@divisor^0,w,c
  2427  00101E  E014               	bz	l1779
  2428  001020  0E01               	movlw	1
  2429  001022  6E09               	movwf	___lbdiv@counter^0,c
  2430  001024  D003               	goto	l1767
  2431  001026                     l1763:
  2432  001026  90D8               	bcf	status,0,c
  2433  001028  3607               	rlcf	___lbdiv@divisor^0,f,c
  2434  00102A  2A09               	incf	___lbdiv@counter^0,f,c
  2435  00102C                     l1767:
  2436  00102C  AE07               	btfss	___lbdiv@divisor^0,7,c
  2437  00102E  D7FB               	goto	l1763
  2438  001030                     u1100:
  2439  001030  90D8               	bcf	status,0,c
  2440  001032  360A               	rlcf	___lbdiv@quotient^0,f,c
  2441  001034  5007               	movf	___lbdiv@divisor^0,w,c
  2442  001036  5C08               	subwf	___lbdiv@dividend^0,w,c
  2443  001038  E303               	bnc	l1775
  2444  00103A  5007               	movf	___lbdiv@divisor^0,w,c
  2445  00103C  5E08               	subwf	___lbdiv@dividend^0,f,c
  2446  00103E  800A               	bsf	___lbdiv@quotient^0,0,c
  2447  001040                     l1775:
  2448  001040  90D8               	bcf	status,0,c
  2449  001042  3207               	rrcf	___lbdiv@divisor^0,f,c
  2450  001044  2E09               	decfsz	___lbdiv@counter^0,f,c
  2451  001046  D7F4               	goto	u1100
  2452  001048                     l1779:
  2453  001048  500A               	movf	___lbdiv@quotient^0,w,c
  2454  00104A  0012               	return		;funcret
  2455  00104C                     __end_of___lbdiv:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function ___awmod *****************
  2459 ;; Defined at:
  2460 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  dividend        2    0[COMRAM] int 
  2463 ;;  divisor         2    2[COMRAM] int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  sign            1    5[COMRAM] unsigned char 
  2466 ;;  counter         1    4[COMRAM] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2    0[COMRAM] int 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         4       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        6 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_ESCRIBE_VARIABLECHAR_LCD
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text16
  2490  000E58                     __ptext16:
  2491                           	callstack 0
  2492  000E58                     ___awmod:
  2493                           	callstack 29
  2494                           
  2495                           ;incstack = 0
  2496  000E58  6A06               	clrf	___awmod@sign^0,c
  2497  000E5A  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  2498  000E5C  D006               	goto	l1729
  2499  000E5E  6C01               	negf	___awmod@dividend^0,c
  2500  000E60  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2501  000E62  B0D8               	btfsc	status,0,c
  2502  000E64  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2503  000E66  0E01               	movlw	1
  2504  000E68  6E06               	movwf	___awmod@sign^0,c
  2505  000E6A                     l1729:
  2506  000E6A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2507  000E6C  D004               	goto	l1733
  2508  000E6E  6C03               	negf	___awmod@divisor^0,c
  2509  000E70  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2510  000E72  B0D8               	btfsc	status,0,c
  2511  000E74  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2512  000E76                     l1733:
  2513  000E76  5003               	movf	___awmod@divisor^0,w,c
  2514  000E78  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2515  000E7A  E017               	bz	l1749
  2516  000E7C  0E01               	movlw	1
  2517  000E7E  6E05               	movwf	___awmod@counter^0,c
  2518  000E80  D004               	goto	l1739
  2519  000E82                     l1737:
  2520  000E82  90D8               	bcf	status,0,c
  2521  000E84  3603               	rlcf	___awmod@divisor^0,f,c
  2522  000E86  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2523  000E88  2A05               	incf	___awmod@counter^0,f,c
  2524  000E8A                     l1739:
  2525  000E8A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2526  000E8C  D7FA               	goto	l1737
  2527  000E8E                     u1060:
  2528  000E8E  5003               	movf	___awmod@divisor^0,w,c
  2529  000E90  5C01               	subwf	___awmod@dividend^0,w,c
  2530  000E92  5004               	movf	(___awmod@divisor+1)^0,w,c
  2531  000E94  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2532  000E96  E304               	bnc	l1745
  2533  000E98  5003               	movf	___awmod@divisor^0,w,c
  2534  000E9A  5E01               	subwf	___awmod@dividend^0,f,c
  2535  000E9C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2536  000E9E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2537  000EA0                     l1745:
  2538  000EA0  90D8               	bcf	status,0,c
  2539  000EA2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2540  000EA4  3203               	rrcf	___awmod@divisor^0,f,c
  2541  000EA6  2E05               	decfsz	___awmod@counter^0,f,c
  2542  000EA8  D7F2               	goto	u1060
  2543  000EAA                     l1749:
  2544  000EAA  5006               	movf	___awmod@sign^0,w,c
  2545  000EAC  E004               	bz	l1753
  2546  000EAE  6C01               	negf	___awmod@dividend^0,c
  2547  000EB0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2548  000EB2  B0D8               	btfsc	status,0,c
  2549  000EB4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2550  000EB6                     l1753:
  2551  000EB6  C001  F001         	movff	___awmod@dividend,?___awmod
  2552  000EBA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2553  000EBE  0012               	return		;funcret
  2554  000EC0                     __end_of___awmod:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _ESCRIBE_MENSAJE *****************
  2558 ;; Defined at:
  2559 ;;		line 41 in file "LCD.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2562 ;;		 -> STR_6(6), STR_5(4), STR_4(3), STR_3(4), 
  2563 ;;		 -> STR_2(13), STR_1(17), 
  2564 ;;  tam             1    4[COMRAM] unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  i               1    6[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2579 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        4 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 2
  2583 ;; This function calls:
  2584 ;;		_ENVIA_CHAR
  2585 ;; This function is called by:
  2586 ;;		_main
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text17
  2591  00117E                     __ptext17:
  2592                           	callstack 0
  2593  00117E                     _ESCRIBE_MENSAJE:
  2594                           	callstack 28
  2595                           
  2596                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2597                           
  2598                           ;incstack = 0
  2599  00117E  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  2600                           
  2601                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2602  001180  6A07               	clrf	ESCRIBE_MENSAJE@i^0,c
  2603  001182  D00A               	goto	l1895
  2604  001184                     l1891:
  2605                           
  2606                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2607  001184  5004               	movf	ESCRIBE_MENSAJE@cadena^0,w,c
  2608  001186  2407               	addwf	ESCRIBE_MENSAJE@i^0,w,c
  2609  001188  6E06               	movwf	??_ESCRIBE_MENSAJE^0,c
  2610  00118A  C006  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2611  00118E                     	if	0	;There is only one active tblptr byte
  2612  00118E                     	endif
  2613  00118E                     	if	0	;tblptru may be non-zero
  2614  00118E                     	endif
  2615  00118E                     	if	0	;tblptru may be non-zero
  2616  00118E                     	endif
  2617  00118E  0008               	tblrd		*
  2618  001190  50F5               	movf	tablat,w,c
  2619  001192  EC56  F008         	call	_ENVIA_CHAR
  2620                           
  2621                           ;LCD.c: 47:  }
  2622  001196  2A07               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2623  001198                     l1895:
  2624  001198  5005               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2625  00119A  5C07               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2626  00119C  E3F3               	bnc	l1891
  2627  00119E  0012               	return		;funcret
  2628  0011A0                     __end_of_ESCRIBE_MENSAJE:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _ENVIA_CHAR *****************
  2632 ;; Defined at:
  2633 ;;		line 50 in file "LCD.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  dato            1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  dato            1    1[COMRAM] unsigned char 
  2638 ;;  aux             1    2[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0
  2649 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2651 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 1
  2655 ;; This function calls:
  2656 ;;		_ENVIA_NIBBLE
  2657 ;;		_LEER_LCD
  2658 ;; This function is called by:
  2659 ;;		_ESCRIBE_VARIABLECHAR_LCD
  2660 ;;		_main
  2661 ;;		_ESCRIBE_MENSAJE
  2662 ;;		_GENERACARACTER
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text18
  2667  0010AC                     __ptext18:
  2668                           	callstack 0
  2669  0010AC                     _ENVIA_CHAR:
  2670                           	callstack 27
  2671                           
  2672                           ;incstack = 0
  2673                           ;ENVIA_CHAR@dato stored from wreg
  2674  0010AC  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2675                           
  2676                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2677  0010AE  808C               	bsf	140,0,c	;volatile
  2678                           
  2679                           ;LCD.c: 54:  LEER_LCD();
  2680  0010B0  EC8F  F007         	call	_LEER_LCD	;wreg free
  2681                           
  2682                           ;LCD.c: 55:  TRISD = 0x00;
  2683  0010B4  6A95               	clrf	149,c	;volatile
  2684                           
  2685                           ;LCD.c: 56:         _delay(1200);
  2686  0010B6  0EF0               	movlw	240
  2687  0010B8                     u1537:
  2688  0010B8  D000               	nop2	
  2689  0010BA  2EE8               	decfsz	wreg,f,c
  2690  0010BC  D7FD               	bra	u1537
  2691                           
  2692                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2693  0010BE  928C               	bcf	140,1,c	;volatile
  2694                           
  2695                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2696  0010C0  948C               	bcf	140,2,c	;volatile
  2697                           
  2698                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2699  0010C2  808C               	bsf	140,0,c	;volatile
  2700                           
  2701                           ;LCD.c: 61:  aux = dato & 0xF0;
  2702  0010C4  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2703                           
  2704                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2705  0010C6  D806               	call	PL14	;call to abstracted procedure
  2706  0010C8  ECDF  F008         	call	_ENVIA_NIBBLE
  2707                           
  2708                           ;LCD.c: 63:  aux = dato << 4;
  2709  0010CC  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2710                           
  2711                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2712  0010CE  D802               	call	PL14	;call to abstracted procedure
  2713  0010D0  EFDF  F008         	goto	_ENVIA_NIBBLE
  2714  0010D4                     __end_of_ENVIA_CHAR:
  2715                           	callstack 0
  2716  0010D4                     PL14:
  2717                           	callstack 27
  2718  0010D4  0BF0               	andlw	240
  2719  0010D6  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2720  0010D8  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2721  0010DA  0012               	return	
  2722  0010DC                     __end_ofPL14:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _LEER_LCD *****************
  2726 ;; Defined at:
  2727 ;;		line 121 in file "LCD.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  aux             1    0[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2744 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_ENVIA_CHAR
  2751 ;;		_ENVIA_LCD_CMD
  2752 ;; This function uses a non-reentrant model
  2753 ;;
  2754                           
  2755                           	psect	text19
  2756  000F1E                     __ptext19:
  2757                           	callstack 0
  2758  000F1E                     _LEER_LCD:
  2759                           	callstack 28
  2760                           
  2761                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2762                           
  2763                           ;incstack = 0
  2764  000F1E  0EF8               	movlw	248
  2765  000F20  6E95               	movwf	149,c	;volatile
  2766                           
  2767                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2768  000F22  908C               	bcf	140,0,c	;volatile
  2769                           
  2770                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2771  000F24  828C               	bsf	140,1,c	;volatile
  2772                           
  2773                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2774  000F26  848C               	bsf	140,2,c	;volatile
  2775                           
  2776                           ;LCD.c: 128:         _delay(1200);
  2777  000F28  0EF0               	movlw	240
  2778  000F2A                     u1547:
  2779  000F2A  D000               	nop2	
  2780  000F2C  2EE8               	decfsz	wreg,f,c
  2781  000F2E  D7FD               	bra	u1547
  2782                           
  2783                           ;LCD.c: 130:  aux = PORTD;
  2784                           
  2785                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2786  000F30  D821               	call	PL10	;call to abstracted procedure
  2787                           
  2788                           ;LCD.c: 132:         _delay(1200);
  2789  000F32  0EF0               	movlw	240
  2790  000F34                     u1557:
  2791  000F34  D000               	nop2	
  2792  000F36  2EE8               	decfsz	wreg,f,c
  2793  000F38  D7FD               	bra	u1557
  2794                           
  2795                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2796  000F3A  848C               	bsf	140,2,c	;volatile
  2797                           
  2798                           ;LCD.c: 135:         _delay(1200);
  2799  000F3C  0EF0               	movlw	240
  2800  000F3E                     u1567:
  2801  000F3E  D000               	nop2	
  2802  000F40  2EE8               	decfsz	wreg,f,c
  2803  000F42  D7FD               	bra	u1567
  2804  000F44                     l1479:
  2805                           
  2806                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2807  000F44  948C               	bcf	140,2,c	;volatile
  2808                           
  2809                           ;LCD.c: 138:  aux = aux & 0x80;
  2810  000F46  0E80               	movlw	128
  2811  000F48  1601               	andwf	LEER_LCD@aux^0,f,c
  2812                           
  2813                           ;LCD.c: 139:  while(aux == 0x80)
  2814  000F4A  D010               	goto	l1495
  2815  000F4C                     l148:
  2816                           
  2817                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2818  000F4C  848C               	bsf	140,2,c	;volatile
  2819                           
  2820                           ;LCD.c: 142:             _delay(1200);
  2821  000F4E  0EF0               	movlw	240
  2822  000F50                     u1577:
  2823  000F50  D000               	nop2	
  2824  000F52  2EE8               	decfsz	wreg,f,c
  2825  000F54  D7FD               	bra	u1577
  2826                           
  2827                           ;LCD.c: 143:             aux = PORTD;
  2828                           
  2829                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2830  000F56  D80E               	call	PL10	;call to abstracted procedure
  2831                           
  2832                           ;LCD.c: 145:             _delay(1200);
  2833  000F58  0EF0               	movlw	240
  2834  000F5A                     u1587:
  2835  000F5A  D000               	nop2	
  2836  000F5C  2EE8               	decfsz	wreg,f,c
  2837  000F5E  D7FD               	bra	u1587
  2838                           
  2839                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2840  000F60  848C               	bsf	140,2,c	;volatile
  2841                           
  2842                           ;LCD.c: 147:             _delay(1200);
  2843  000F62  0EF0               	movlw	240
  2844  000F64                     u1597:
  2845  000F64  D000               	nop2	
  2846  000F66  2EE8               	decfsz	wreg,f,c
  2847  000F68  D7FD               	bra	u1597
  2848  000F6A  D7EC               	goto	l1479
  2849  000F6C                     l1495:
  2850                           
  2851                           ;LCD.c: 139:  while(aux == 0x80)
  2852  000F6C  0E80               	movlw	128
  2853  000F6E  1801               	xorwf	LEER_LCD@aux^0,w,c
  2854  000F70  E0ED               	bz	l148
  2855  000F72  0012               	return		;funcret
  2856  000F74                     __end_of_LEER_LCD:
  2857                           	callstack 0
  2858  000F74                     PL10:
  2859                           	callstack 28
  2860  000F74  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2861  000F78  948C               	bcf	140,2,c	;volatile
  2862  000F7A  0012               	return	
  2863  000F7C                     __end_ofPL10:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _ENVIA_NIBBLE *****************
  2867 ;; Defined at:
  2868 ;;		line 93 in file "LCD.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  dato            1    wreg     unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  dato            1    0[COMRAM] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        1 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_ENVIA_CHAR
  2892 ;;		_LCD_CONFIG
  2893 ;;		_ENVIA_LCD_CMD
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text20
  2898  0011BE                     __ptext20:
  2899                           	callstack 0
  2900  0011BE                     _ENVIA_NIBBLE:
  2901                           	callstack 28
  2902                           
  2903                           ;incstack = 0
  2904                           ;ENVIA_NIBBLE@dato stored from wreg
  2905  0011BE  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2906                           
  2907                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2908  0011C0  0E0F               	movlw	15
  2909  0011C2  168C               	andwf	140,f,c	;volatile
  2910                           
  2911                           ;LCD.c: 96:  dato &= 0xF0;
  2912  0011C4  0EF0               	movlw	240
  2913  0011C6  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2914                           
  2915                           ;LCD.c: 97:  LATD|= dato;
  2916  0011C8  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2917  0011CA  128C               	iorwf	140,f,c	;volatile
  2918                           
  2919                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2920  0011CC  848C               	bsf	140,2,c	;volatile
  2921                           
  2922                           ;LCD.c: 100:         _delay(1200);
  2923  0011CE  0EF0               	movlw	240
  2924  0011D0                     u1607:
  2925  0011D0  D000               	nop2	
  2926  0011D2  2EE8               	decfsz	wreg,f,c
  2927  0011D4  D7FD               	bra	u1607
  2928                           
  2929                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2930  0011D6  948C               	bcf	140,2,c	;volatile
  2931  0011D8  0012               	return		;funcret
  2932  0011DA                     __end_of_ENVIA_NIBBLE:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _DHT11_Start *****************
  2936 ;; Defined at:
  2937 ;;		line 3 in file "dht11_lib.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2953 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2954 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2955 ;;Total ram usage:        2 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; This function calls:
  2958 ;;		Nothing
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text21
  2965  001158                     __ptext21:
  2966                           	callstack 0
  2967  001158                     _DHT11_Start:
  2968                           	callstack 30
  2969                           
  2970                           ;dht11_lib.c: 4:     TRISBbits.RB0 = 0;
  2971                           
  2972                           ;incstack = 0
  2973  001158  9093               	bcf	147,0,c	;volatile
  2974                           
  2975                           ;dht11_lib.c: 5:     LATBbits.LB0 = 0;
  2976  00115A  908A               	bcf	138,0,c	;volatile
  2977                           
  2978                           ;dht11_lib.c: 6:     _delay((unsigned long)((18)*(48000000UL/4000.0)));
  2979  00115C  0E02               	movlw	2
  2980  00115E  6E02               	movwf	(??_DHT11_Start+1)^0,c
  2981  001160  0E19               	movlw	25
  2982  001162  6E01               	movwf	??_DHT11_Start^0,c
  2983  001164  0E82               	movlw	130
  2984  001166                     u1617:
  2985  001166  2EE8               	decfsz	wreg,f,c
  2986  001168  D7FE               	bra	u1617
  2987  00116A  2E01               	decfsz	??_DHT11_Start^0,f,c
  2988  00116C  D7FC               	bra	u1617
  2989  00116E  2E02               	decfsz	(??_DHT11_Start+1)^0,f,c
  2990  001170  D7FA               	bra	u1617
  2991                           
  2992                           ;dht11_lib.c: 7:     LATBbits.LB0 = 1;
  2993  001172  808A               	bsf	138,0,c	;volatile
  2994                           
  2995                           ;dht11_lib.c: 8:     _delay((unsigned long)((20)*(48000000UL/4000000.0)));
  2996  001174  0E50               	movlw	80
  2997  001176                     u1627:
  2998  001176  2EE8               	decfsz	wreg,f,c
  2999  001178  D7FE               	bra	u1627
  3000                           
  3001                           ;dht11_lib.c: 9:     TRISBbits.RB0 = 1;
  3002  00117A  8093               	bsf	147,0,c	;volatile
  3003  00117C  0012               	return		;funcret
  3004  00117E                     __end_of_DHT11_Start:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _DHT11_Read *****************
  3008 ;; Defined at:
  3009 ;;		line 18 in file "dht11_lib.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  data            1    1[COMRAM] unsigned char 
  3014 ;;  x               1    0[COMRAM] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      unsigned char 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0
  3025 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3027 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3028 ;;Total ram usage:        2 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text22
  3038  0010DC                     __ptext22:
  3039                           	callstack 0
  3040  0010DC                     _DHT11_Read:
  3041                           	callstack 30
  3042                           
  3043                           ;dht11_lib.c: 19:     unsigned char x = 0, data = 0;
  3044                           
  3045                           ;incstack = 0
  3046  0010DC  6A01               	clrf	DHT11_Read@x^0,c
  3047  0010DE  6A02               	clrf	DHT11_Read@data^0,c
  3048                           
  3049                           ;dht11_lib.c: 20:     for(x=0;x<8;x++){
  3050  0010E0  6A01               	clrf	DHT11_Read@x^0,c
  3051  0010E2                     l183:
  3052  0010E2  A081               	btfss	129,0,c	;volatile
  3053  0010E4  D7FE               	goto	l183
  3054                           
  3055                           ;dht11_lib.c: 22:         _delay((unsigned long)((30)*(48000000UL/4000000.0)));
  3056  0010E6  0E78               	movlw	120
  3057  0010E8                     u1637:
  3058  0010E8  2EE8               	decfsz	wreg,f,c
  3059  0010EA  D7FE               	bra	u1637
  3060                           
  3061                           ;dht11_lib.c: 23:         if(PORTBbits.RB0){
  3062  0010EC  A081               	btfss	129,0,c	;volatile
  3063  0010EE  D002               	goto	l1337
  3064                           
  3065                           ;dht11_lib.c: 24:             data = ((data<<1) | 1);
  3066  0010F0  80D8               	bsf	status,0,c
  3067  0010F2  D001               	goto	L4
  3068  0010F4                     l1337:
  3069                           
  3070                           ;dht11_lib.c: 27:             data = (data<<1);
  3071  0010F4  90D8               	bcf	status,0,c
  3072  0010F6                     L4:
  3073  0010F6  3602               	rlcf	DHT11_Read@data^0,f,c
  3074  0010F8                     l188:
  3075  0010F8  B081               	btfsc	129,0,c	;volatile
  3076  0010FA  D7FE               	goto	l188
  3077                           
  3078                           ;dht11_lib.c: 30:     }
  3079  0010FC  2A01               	incf	DHT11_Read@x^0,f,c
  3080  0010FE  0E07               	movlw	7
  3081  001100  6401               	cpfsgt	DHT11_Read@x^0,c
  3082  001102  D7EF               	goto	l183
  3083                           
  3084                           ;dht11_lib.c: 31:     return data;
  3085  001104  5002               	movf	DHT11_Read@data^0,w,c
  3086  001106  0012               	return		;funcret
  3087  001108                     __end_of_DHT11_Read:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _DHT11_Check *****************
  3091 ;; Defined at:
  3092 ;;		line 12 in file "dht11_lib.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		None
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_main
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text23
  3120  001202                     __ptext23:
  3121                           	callstack 0
  3122  001202                     _DHT11_Check:
  3123                           	callstack 30
  3124                           
  3125                           ;dht11_lib.c: 13:     while(PORTBbits.RB0);
  3126                           
  3127                           ;incstack = 0
  3128  001202  B081               	btfsc	129,0,c	;volatile
  3129  001204  D7FE               	goto	_DHT11_Check
  3130  001206                     u600:
  3131  001206  A081               	btfss	129,0,c	;volatile
  3132  001208  D7FE               	goto	u600
  3133  00120A                     u610:
  3134  00120A  A081               	btfss	129,0,c	;volatile
  3135  00120C  0012               	return		;funcret
  3136  00120E  D7FD               	goto	u610
  3137  001210                     __end_of_DHT11_Check:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _ADC_init *****************
  3141 ;; Defined at:
  3142 ;;		line 8 in file "maincode.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text24
  3170  001210                     __ptext24:
  3171                           	callstack 0
  3172  001210                     _ADC_init:
  3173                           	callstack 30
  3174                           
  3175                           ;maincode.c: 9:     ADCON2 = 0xA4;
  3176                           
  3177                           ;incstack = 0
  3178  001210  0EA4               	movlw	164
  3179  001212  6EC0               	movwf	192,c	;volatile
  3180                           
  3181                           ;maincode.c: 10:     ADCON1 = 0x1B;
  3182  001214  0E1B               	movlw	27
  3183  001216  6EC1               	movwf	193,c	;volatile
  3184                           
  3185                           ;maincode.c: 11:     ADCON0 = 0x01;
  3186  001218  0E01               	movlw	1
  3187  00121A  6EC2               	movwf	194,c	;volatile
  3188  00121C  0C01               	retlw	1	;funcret
  3189  00121E                     __end_of_ADC_init:
  3190                           	callstack 0
  3191                           
  3192                           	psect	rparam
  3193  0000                     
  3194                           	psect	idloc
  3195                           
  3196                           ;Config register IDLOC0 @ 0x200000
  3197                           ;	unspecified, using default values
  3198  200000                     	org	2097152
  3199  200000  FF                 	db	255
  3200                           
  3201                           ;Config register IDLOC1 @ 0x200001
  3202                           ;	unspecified, using default values
  3203  200001                     	org	2097153
  3204  200001  FF                 	db	255
  3205                           
  3206                           ;Config register IDLOC2 @ 0x200002
  3207                           ;	unspecified, using default values
  3208  200002                     	org	2097154
  3209  200002  FF                 	db	255
  3210                           
  3211                           ;Config register IDLOC3 @ 0x200003
  3212                           ;	unspecified, using default values
  3213  200003                     	org	2097155
  3214  200003  FF                 	db	255
  3215                           
  3216                           ;Config register IDLOC4 @ 0x200004
  3217                           ;	unspecified, using default values
  3218  200004                     	org	2097156
  3219  200004  FF                 	db	255
  3220                           
  3221                           ;Config register IDLOC5 @ 0x200005
  3222                           ;	unspecified, using default values
  3223  200005                     	org	2097157
  3224  200005  FF                 	db	255
  3225                           
  3226                           ;Config register IDLOC6 @ 0x200006
  3227                           ;	unspecified, using default values
  3228  200006                     	org	2097158
  3229  200006  FF                 	db	255
  3230                           
  3231                           ;Config register IDLOC7 @ 0x200007
  3232                           ;	unspecified, using default values
  3233  200007                     	org	2097159
  3234  200007  FF                 	db	255
  3235                           
  3236                           	psect	config
  3237                           
  3238                           ;Config register CONFIG1L @ 0x300000
  3239                           ;	PLL Prescaler Selection bits
  3240                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3241                           ;	System Clock Postscaler Selection bits
  3242                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3243                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3244                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3245  300000                     	org	3145728
  3246  300000  00                 	db	0
  3247                           
  3248                           ;Config register CONFIG1H @ 0x300001
  3249                           ;	Oscillator Selection bits
  3250                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  3251                           ;	Fail-Safe Clock Monitor Enable bit
  3252                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3253                           ;	Internal/External Oscillator Switchover bit
  3254                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3255  300001                     	org	3145729
  3256  300001  02                 	db	2
  3257                           
  3258                           ;Config register CONFIG2L @ 0x300002
  3259                           ;	Power-up Timer Enable bit
  3260                           ;	PWRT = ON, PWRT enabled
  3261                           ;	Brown-out Reset Enable bits
  3262                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3263                           ;	Brown-out Reset Voltage bits
  3264                           ;	BORV = 3, Minimum setting 2.05V
  3265                           ;	USB Voltage Regulator Enable bit
  3266                           ;	VREGEN = OFF, USB voltage regulator disabled
  3267  300002                     	org	3145730
  3268  300002  18                 	db	24
  3269                           
  3270                           ;Config register CONFIG2H @ 0x300003
  3271                           ;	Watchdog Timer Enable bit
  3272                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3273                           ;	Watchdog Timer Postscale Select bits
  3274                           ;	WDTPS = 32768, 1:32768
  3275  300003                     	org	3145731
  3276  300003  1E                 	db	30
  3277                           
  3278                           ; Padding undefined space
  3279  300004                     	org	3145732
  3280  300004  FF                 	db	255
  3281                           
  3282                           ;Config register CONFIG3H @ 0x300005
  3283                           ;	CCP2 MUX bit
  3284                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3285                           ;	PORTB A/D Enable bit
  3286                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3287                           ;	Low-Power Timer 1 Oscillator Enable bit
  3288                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3289                           ;	MCLR Pin Enable bit
  3290                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3291  300005                     	org	3145733
  3292  300005  81                 	db	129
  3293                           
  3294                           ;Config register CONFIG4L @ 0x300006
  3295                           ;	Stack Full/Underflow Reset Enable bit
  3296                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3297                           ;	Single-Supply ICSP Enable bit
  3298                           ;	LVP = OFF, Single-Supply ICSP disabled
  3299                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3300                           ;	ICPRT = OFF, ICPORT disabled
  3301                           ;	Extended Instruction Set Enable bit
  3302                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3303                           ;	Background Debugger Enable bit
  3304                           ;	DEBUG = 0x1, unprogrammed default
  3305  300006                     	org	3145734
  3306  300006  81                 	db	129
  3307                           
  3308                           ; Padding undefined space
  3309  300007                     	org	3145735
  3310  300007  FF                 	db	255
  3311                           
  3312                           ;Config register CONFIG5L @ 0x300008
  3313                           ;	Code Protection bit
  3314                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3315                           ;	Code Protection bit
  3316                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3317                           ;	Code Protection bit
  3318                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3319                           ;	Code Protection bit
  3320                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3321  300008                     	org	3145736
  3322  300008  0F                 	db	15
  3323                           
  3324                           ;Config register CONFIG5H @ 0x300009
  3325                           ;	Boot Block Code Protection bit
  3326                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3327                           ;	Data EEPROM Code Protection bit
  3328                           ;	CPD = OFF, Data EEPROM is not code-protected
  3329  300009                     	org	3145737
  3330  300009  C0                 	db	192
  3331                           
  3332                           ;Config register CONFIG6L @ 0x30000A
  3333                           ;	Write Protection bit
  3334                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3335                           ;	Write Protection bit
  3336                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3337                           ;	Write Protection bit
  3338                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3339                           ;	Write Protection bit
  3340                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3341  30000A                     	org	3145738
  3342  30000A  0F                 	db	15
  3343                           
  3344                           ;Config register CONFIG6H @ 0x30000B
  3345                           ;	Configuration Register Write Protection bit
  3346                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3347                           ;	Boot Block Write Protection bit
  3348                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3349                           ;	Data EEPROM Write Protection bit
  3350                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3351  30000B                     	org	3145739
  3352  30000B  E0                 	db	224
  3353                           
  3354                           ;Config register CONFIG7L @ 0x30000C
  3355                           ;	Table Read Protection bit
  3356                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3357                           ;	Table Read Protection bit
  3358                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3359                           ;	Table Read Protection bit
  3360                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3361                           ;	Table Read Protection bit
  3362                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3363  30000C                     	org	3145740
  3364  30000C  0F                 	db	15
  3365                           
  3366                           ;Config register CONFIG7H @ 0x30000D
  3367                           ;	Boot Block Table Read Protection bit
  3368                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3369  30000D                     	org	3145741
  3370  30000D  40                 	db	64
  3371                           tosu	equ	0xFFF
  3372                           tosh	equ	0xFFE
  3373                           tosl	equ	0xFFD
  3374                           stkptr	equ	0xFFC
  3375                           pclatu	equ	0xFFB
  3376                           pclath	equ	0xFFA
  3377                           pcl	equ	0xFF9
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           indf0	equ	0xFEF
  3385                           postinc0	equ	0xFEE
  3386                           postdec0	equ	0xFED
  3387                           preinc0	equ	0xFEC
  3388                           plusw0	equ	0xFEB
  3389                           fsr0h	equ	0xFEA
  3390                           fsr0l	equ	0xFE9
  3391                           wreg	equ	0xFE8
  3392                           indf1	equ	0xFE7
  3393                           postinc1	equ	0xFE6
  3394                           postdec1	equ	0xFE5
  3395                           preinc1	equ	0xFE4
  3396                           plusw1	equ	0xFE3
  3397                           fsr1h	equ	0xFE2
  3398                           fsr1l	equ	0xFE1
  3399                           bsr	equ	0xFE0
  3400                           indf2	equ	0xFDF
  3401                           postinc2	equ	0xFDE
  3402                           postdec2	equ	0xFDD
  3403                           preinc2	equ	0xFDC
  3404                           plusw2	equ	0xFDB
  3405                           fsr2h	equ	0xFDA
  3406                           fsr2l	equ	0xFD9
  3407                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    0
    Data        64
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      94
    BANK0           160      0      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(1) Largest target is 8
		 -> LCD_init@reloj7(COMRAM[8]), LCD_init@reloj6(COMRAM[8]), LCD_init@reloj5(COMRAM[8]), LCD_init@reloj4(COMRAM[8]), 
		 -> LCD_init@reloj3(COMRAM[8]), LCD_init@reloj2(COMRAM[8]), LCD_init@reloj1(COMRAM[8]), LCD_init@reloj0(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_6(CODE[6]), STR_5(CODE[4]), STR_4(CODE[3]), STR_3(CODE[4]), 
		 -> STR_2(CODE[13]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_init
    ___fltol->_LM35_read
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LM35_read->___fldiv
    ___fldiv->___xxtofl
    _LCD_init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_VARIABLECHAR_LCD->___lbdiv
    ___lbdiv->___awmod
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8031
                                             72 COMRAM     6     6      0
                           _ADC_init
                         _BORRAR_LCD
                        _CURSOR_HOME
                        _DHT11_Check
                         _DHT11_Read
                        _DHT11_Start
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
           _ESCRIBE_VARIABLECHAR_LCD
                           _LCD_init
                          _LM35_read
                         _POS_CURSOR
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             51 COMRAM    10     6      4
                          _LM35_read (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     379
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LM35_read                                           12     8      4    1821
                                             39 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1377
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                            66    66      0    2421
                                              6 COMRAM    66    66      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     162
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       3     1      2    1606
                                              3 COMRAM     3     1      2
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     183
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     139
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     139
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     139
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_VARIABLECHAR_LCD                             4     4      0    1324
                                             10 COMRAM     3     3      0
                         _ENVIA_CHAR
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              6 COMRAM     4     3      1
                            ___awmod (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2    1142
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     139
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      26
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read                                           2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
   _DHT11_Check
   _DHT11_Read
   _DHT11_Start
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _ESCRIBE_VARIABLECHAR_LCD
     _ENVIA_CHAR
     ___awmod
     ___lbdiv
       ___awmod (ARG)
       ___lbmod (ARG)
     ___lbmod
   _LCD_init
     _BORRAR_LCD
     _CURSOR_HOME
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _LM35_read
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___fltol
     _LM35_read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      30       5       30.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4E      5E       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      20        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 24 15:43:18 2021

                     ___fldiv@aexp 0027                       ___fldiv@bexp 0026  
                     ___fldiv@sign 001F                                 PL2 09D2  
                               PL4 09EC                                 PL6 0D34  
                               PL8 0D40                                 l63 0DEA  
                               l74 0B34                                PL10 0F74  
                              PL12 10A4                                PL14 10D4  
                              PL16 0C38                      ENVIA_CHAR@aux 0003  
                              l148 0F4C                                l183 10E2  
                              l188 10F8                                l772 087C  
                              l790 0972                                l768 0850  
                              l856 0CCA                                l849 0C7E  
                              l778 092A                                l796 09BC  
                              l789 0976                                u600 1206  
                              u610 120A                                u960 096C  
                     ___awmod@sign 0006                        LEER_LCD@aux 0001  
                              wreg 000FE8                       ?_CURSOR_HOME 0001  
              __size_of_DHT11_Read 002C                     ??_ENVIA_NIBBLE 0001  
                     main@Temp_Ent 004C                       ___fltol@exp1 003D  
                   ENVIA_CHAR@dato 0002                               l1337 10F4  
                             l1613 084C                               l1711 09C8  
                             l1713 09CA                               l1705 09A8  
                             l1643 08AE                               l1811 0CA2  
               __size_of_LM35_read 0070                               l1733 0E76  
                             l1581 11E6                               l1629 0878  
                             l1813 0CA8                               l1901 11AE  
                             l1495 0F6C                               l1479 0F44  
                             l1671 0928                               l1647 08BC  
                             l1823 0CD8                               l1815 0CAC  
                             l1807 0C8E                               l1753 0EB6  
                             l1745 0EA0                               l1737 0E82  
                             l1729 0E6A                               l1593 1116  
                             l1665 0904                               l1657 08F4  
                             l1841 0D22                               l1825 0CE4  
                             l1817 0CBC                               l1739 0E8A  
                             l1763 1026                               l1683 0946  
                             l1931 0DB2                               l1923 0D9A  
                             l1749 0EAA                               l1677 093E  
                             l1933 0DBE                               l1909 0D60  
                             l1775 1040                               l1767 102C  
                             l1927 0DAA                               l1891 1184  
                             l1779 1048                               l1795 1150  
                             l1787 113A                               l1699 0996  
                             l1939 0DD6                               l1963 0B36  
                             l1981 0B90                               l1895 1198  
                             STR_1 0801                               STR_2 0812  
                             STR_3 0825                               STR_4 082D  
                             STR_5 0829                               STR_6 081F  
                             u1000 09A2                               u1010 09B4  
                             u1100 1030                               u1060 0E8E  
                             u1301 0A7E                               u1231 0A00  
                             u1400 0DC2                               u1241 0A12  
                             u1251 0A24                               u1261 0A36  
                             u1190 0CEE                               u1350 0D56  
                             u1271 0A48                               u1360 0D7E  
                             _LATD 000F8C                               u1281 0A5A  
                             u1507 0EDE                               u1291 0A6C  
                             u1517 0EEE                               u1365 0D74  
                             u1607 11D0                               u1527 1088  
                             u1447 0B4E                               u1617 1166  
                             u1537 10B8                               u1457 0B80  
                             u1627 1176                               u1547 0F2A  
                             u1467 0C2A                               u1637 10E8  
                             u1557 0F34                               u1477 0A92  
                             u1567 0F3E                               u1487 0AA8  
                             u1577 0F50                               u1497 0ED0  
                             u1587 0F5A                               u1597 0F64  
                             _main 0B1E                               fsr2h 000FDA  
                             indf2 000FDF                               fsr1l 000FE1  
                             fsr2l 000FD9               __size_of_DHT11_Check 000E  
                   LCD_init@reloj0 0009                     LCD_init@reloj1 0011  
                   LCD_init@reloj2 0019                     LCD_init@reloj3 0021  
                   LCD_init@reloj4 0029                     LCD_init@reloj5 0031  
                   LCD_init@reloj6 0039                     LCD_init@reloj7 0041  
                             prodl 000FF3                               start 0000  
                 __end_of_ADC_init 121E                    ___fldiv@new_exp 0020  
                    ?_CURSOR_ONOFF 0001               __size_of_DHT11_Start 0026  
                     ___param_bank 000000                    ??_ENVIA_LCD_CMD 0002  
                 __end_of_LEER_LCD 0F74                __size_of_BORRAR_LCD 0006  
                 __end_of_LCD_init 0B1E                     _GENERACARACTER 1108  
                    ___fltol@sign1 003C                              ?_main 0001  
                  __end_of___fldiv 09D2                    __end_of___lbdiv 104C  
                  __end_of___awmod 0EC0                    __end_of___lbmod 1158  
                  __end_of___fltol 0DE8                              _PORTD 000F83  
              __size_of_LCD_CONFIG 005E                              _TRISD 000F95  
              __size_of_ENVIA_CHAR 0028                        ?_POS_CURSOR 0004  
                            main@x 004E                              main@y 004D  
                            tablat 000FF5                              plusw1 000FE3  
                            plusw2 000FDB                              status 000FD8  
                  ___lbdiv@divisor 0007                    ___lbdiv@counter 0009  
                   ??_CURSOR_ONOFF 0004                    __initialization 0F7C  
                     __end_of_main 0C38             __end_of_GENERACARACTER 1132  
                __end_of_LM35_read 0E58                    _ESCRIBE_MENSAJE 117E  
                           ??_main 0049                      __activetblptr 000001  
                           _ADCON0 000FC2                             _ADCON1 000FC1  
                           _ADCON2 000FC0                             _ADRESH 000FC4  
                           _ADRESL 000FC3  __size_of_ESCRIBE_VARIABLECHAR_LCD 004E  
        ?_ESCRIBE_VARIABLECHAR_LCD 0001                   __end_of___xxtofl 0D34  
                     ??_DHT11_Read 0001                          ??___fldiv 0017  
                        ??___lbdiv 0008                          ??___awmod 0005  
             __end_of_ENVIA_NIBBLE 11DA                          ??___lbmod 0002  
                        ??___fltol 0038                    ?_GENERACARACTER 0004  
              __size_of_POS_CURSOR 001E                    ___awmod@divisor 0003  
                           isa$std 000001                    ___awmod@counter 0005  
                     __pdataCOMRAM 004F                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_ADC_init 0001  
               __end_of_DHT11_Read 1108                       ??_BORRAR_LCD 0004  
             __size_of_CURSOR_HOME 0006                   ___lbdiv@dividend 0008  
                     ___xxtofl@arg 000B                       ___xxtofl@exp 000A  
                     ___xxtofl@val 0001                    ___lbmod@divisor 0001  
                        ?_LEER_LCD 0001                         __accesstop 0060  
          __end_of__initialization 0FBC                    ___lbmod@counter 0003  
                     ??_LCD_CONFIG 0004                          ?_LCD_init 0001  
                    ___rparam_used 000001                       ??_ENVIA_CHAR 0002  
                       ___fltol@f1 0034            __end_of_ESCRIBE_MENSAJE 11A0  
                   __pcstackCOMRAM 0001                       __pidataBANK0 104C  
               __end_of_BORRAR_LCD 122A                         __end_ofPL2 09EC  
                       __end_ofPL4 09F6                         __end_ofPL6 0D40  
                       __end_ofPL8 0D4C                   ___lbdiv@quotient 000A  
                LM35_read@n_temp_c 002E                   ENVIA_LCD_CMD@aux 0003  
             __end_of_CURSOR_ONOFF 11F2                 __end_of_LCD_CONFIG 0F1E  
                       ??_ADC_init 0001                 __end_of_ENVIA_CHAR 10D4  
                       ??_LEER_LCD 0001                   ENVIA_NIBBLE@dato 0001  
                       ??_LCD_init 0007                          ?___xxtofl 0001  
                     ??_POS_CURSOR 0005                      ??_DHT11_Check 0001  
                    ??_DHT11_Start 0001              __size_of_ENVIA_NIBBLE 001C  
                          __Hparam 0000                            __Lparam 0000  
                 ?_ESCRIBE_MENSAJE 0004                            ___fldiv 0832  
                          ___lbdiv 1018                            ___awmod 0E58  
                          ___lbmod 1132                            ___fltol 0D4C  
                     __psmallconst 0800              __end_of_ENVIA_LCD_CMD 10A4  
                          __pcinit 0F7C                 __end_of_POS_CURSOR 11BE  
                          __ramtop 0800   __end_of_ESCRIBE_VARIABLECHAR_LCD 1018  
                          __ptext0 0B1E                            __ptext1 0D4C  
                          __ptext2 11A0                            __ptext3 0DE8  
                          __ptext4 0C40                            __ptext5 0832  
                          __ptext6 09F6                            __ptext7 0EC0  
                          __ptext8 1108                            __ptext9 11DA  
                  GENERACARACTER@i 0006                          _LM35_read 0DE8  
                       ??___xxtofl 0005                   ___awmod@dividend 0001  
                     _ENVIA_NIBBLE 11BE               end_of_initialization 0FBC  
                 ??_GENERACARACTER 0006                __end_of_DHT11_Check 1210  
              __end_of_DHT11_Start 117E                            postdec1 000FE5  
                          postinc0 000FEE               GENERACARACTER@vector 0004  
            __size_of_CURSOR_ONOFF 0018                          _PORTBbits 000F81  
                       ?_LM35_read 0028                   ___lbmod@dividend 0002  
                    ___xxtofl@sign 0009                         main@RH_Ent 004B  
                        _TRISBbits 000F93                        ___fldiv@grs 0022  
                      ___fldiv@rem 001B                      LCD_init@F3200 0070  
                    LCD_init@F3202 0068                      LCD_init@F3204 0060  
                    LCD_init@F3190 0057                      LCD_init@F3192 004F  
                    LCD_init@F3194 0088                      LCD_init@F3196 0080  
                    LCD_init@F3198 0078                  __size_of_ADC_init 000E  
                      ___lbmod@rem 0004                  __size_of_LEER_LCD 0056  
                     _CURSOR_ONOFF 11DA                 CURSOR_ONOFF@estado 0004  
                __size_of_LCD_init 0128                      __pidataCOMRAM 11F2  
                    ??_CURSOR_HOME 0004                        __end_ofPL10 0F7C  
                      __end_ofPL12 10AC                        __end_ofPL14 10DC  
                      __end_ofPL16 0C40                start_initialization 0F7C  
         _ESCRIBE_VARIABLECHAR_LCD 0FCA                        _DHT11_Check 1202  
                ENVIA_LCD_CMD@dato 0002                        _DHT11_Start 1158  
                      __pdataBANK0 0060                        ??_LM35_read 002C  
                 LM35_read@lm35raw 0032                          ___fldiv@a 0013  
                        ___fldiv@b 000F     ESCRIBE_VARIABLECHAR_LCD@decena 000B  
                __size_of___xxtofl 00F4     ESCRIBE_VARIABLECHAR_LCD@numero 000D  
   ESCRIBE_VARIABLECHAR_LCD@unidad 000C                __end_of_CURSOR_HOME 1224  
                         ?___fldiv 000F                           ?___lbdiv 0007  
                         ?___awmod 0001                           ?___lbmod 0001  
                         ?___fltol 0034                  GENERACARACTER@pos 0005  
                      __smallconst 0800                           _ADC_init 1210  
                         _LEER_LCD 0F1E                           _LATBbits 000F8A  
                         _LATDbits 000F8C                           _LCD_init 09F6  
                      DHT11_Read@x 0001                   ESCRIBE_MENSAJE@i 0007  
                   POS_CURSOR@fila 0005           __size_of_ESCRIBE_MENSAJE 0022  
                       _ADCON0bits 000FC2                        _CURSOR_HOME 121E  
                        copy_data0 0F90                          copy_data1 0FB0  
           __size_of_ENVIA_LCD_CMD 0028                         _DHT11_Read 10DC  
                         __Hrparam 0000                           __Lrparam 0000  
                     __Lsmallconst 0800                   __size_of___fldiv 01A0  
                 __size_of___lbdiv 0034         ??_ESCRIBE_VARIABLECHAR_LCD 000B  
                 __size_of___awmod 0068                   __size_of___lbmod 0026  
                 __size_of___fltol 009C                           ___xxtofl 0C40  
                         __ptext10 121E                           __ptext11 1224  
                         __ptext20 11BE                           __ptext12 107C  
                         __ptext21 1158                           __ptext13 0FCA  
                         __ptext22 10DC                           __ptext14 1132  
                         __ptext23 1202                           __ptext15 1018  
                         __ptext24 1210                           __ptext16 0E58  
                         __ptext17 117E                           __ptext18 10AC  
                         __ptext19 0F1E                         _BORRAR_LCD 1224  
                     ?_DHT11_Check 0001                      __size_of_main 011A  
                     ?_DHT11_Start 0001                         _LCD_CONFIG 0EC0  
                       _ENVIA_CHAR 10AC                           isa$xinst 000000  
                    _ENVIA_LCD_CMD 107C            __size_of_GENERACARACTER 002A  
                ??_ESCRIBE_MENSAJE 0006                     DHT11_Read@data 0002  
            ESCRIBE_MENSAJE@cadena 0004                        ?_DHT11_Read 0001  
                   ?_ENVIA_LCD_CMD 0001                        ?_BORRAR_LCD 0001  
                    ?_ENVIA_NIBBLE 0001                         _POS_CURSOR 11A0  
                      ?_LCD_CONFIG 0001                 ESCRIBE_MENSAJE@tam 0005  
                      ?_ENVIA_CHAR 0001                  POS_CURSOR@columna 0004  
