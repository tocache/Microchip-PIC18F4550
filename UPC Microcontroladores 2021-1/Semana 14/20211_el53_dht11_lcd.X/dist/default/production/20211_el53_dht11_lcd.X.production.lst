

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 22 16:45:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4450
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4450 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PORTBbits	set	3969
    69  0000                     _LATBbits	set	3978
    70  0000                     _TRISBbits	set	3987
    71  0000                     _PORTD	set	3971
    72  0000                     _LATD	set	3980
    73  0000                     _LATDbits	set	3980
    74  0000                     _TRISD	set	3989
    75                           
    76                           	psect	smallconst
    77  000500                     __psmallconst:
    78                           	callstack 0
    79  000500  00                 	db	0
    80  000501                     STR_6:
    81  000501  48                 	db	72	;'H'
    82  000502  61                 	db	97	;'a'
    83  000503  79                 	db	121	;'y'
    84  000504  20                 	db	32
    85  000505  45                 	db	69	;'E'
    86  000506  72                 	db	114	;'r'
    87  000507  72                 	db	114	;'r'
    88  000508  6F                 	db	111	;'o'
    89  000509  72                 	db	114	;'r'
    90  00050A  21                 	db	33
    91  00050B  21                 	db	33
    92  00050C  00                 	db	0
    93  00050D                     STR_2:
    94  00050D  54                 	db	84	;'T'
    95  00050E  6F                 	db	111	;'o'
    96  00050F  64                 	db	100	;'d'
    97  000510  6F                 	db	111	;'o'
    98  000511  20                 	db	32
    99  000512  4F                 	db	79	;'O'
   100  000513  4B                 	db	75	;'K'
   101  000514  21                 	db	33
   102  000515  00                 	db	0
   103  000516                     STR_4:
   104  000516  25                 	db	37
   105  000517  20                 	db	32
   106  000518  54                 	db	84	;'T'
   107  000519  65                 	db	101	;'e'
   108  00051A  6D                 	db	109	;'m'
   109  00051B  70                 	db	112	;'p'
   110  00051C  3A                 	db	58	;':'
   111  00051D  00                 	db	0
   112  00051E                     STR_1:
   113  00051E  50                 	db	80	;'P'
   114  00051F  72                 	db	114	;'r'
   115  000520  75                 	db	117	;'u'
   116  000521  65                 	db	101	;'e'
   117  000522  62                 	db	98	;'b'
   118  000523  61                 	db	97	;'a'
   119  000524  00                 	db	0
   120  000525                     STR_3:
   121  000525  52                 	db	82	;'R'
   122  000526  48                 	db	72	;'H'
   123  000527  3A                 	db	58	;':'
   124  000528  00                 	db	0
   125  000529  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  000ED6                     __pcinit:
   131                           	callstack 0
   132  000ED6                     start_initialization:
   133                           	callstack 0
   134  000ED6                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (12 bytes)
   138  000ED6  EE00  F022         	lfsr	0,__pbssCOMRAM
   139  000EDA  0E0C               	movlw	12
   140  000EDC                     clear_0:
   141  000EDC  6AEE               	clrf	postinc0,c
   142  000EDE  06E8               	decf	wreg,f,c
   143  000EE0  E1FD               	bnz	clear_0
   144  000EE2                     end_of_initialization:
   145                           	callstack 0
   146  000EE2                     __end_of__initialization:
   147                           	callstack 0
   148  000EE2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   149  000EE4  6EF8               	movwf	tblptru,c
   150  000EE6  0E05               	movlw	high __Lsmallconst
   151  000EE8  6EF7               	movwf	tblptrh,c
   152  000EEA  0100               	movlb	0
   153  000EEC  EF95  F002         	goto	_main	;jump to C main() function
   154                           
   155                           	psect	bssCOMRAM
   156  000022                     __pbssCOMRAM:
   157                           	callstack 0
   158  000022                     _n_temp_f:
   159                           	callstack 0
   160  000022                     	ds	4
   161  000026                     _unidad:
   162                           	callstack 0
   163  000026                     	ds	1
   164  000027                     _decena:
   165                           	callstack 0
   166  000027                     	ds	1
   167  000028                     _centena:
   168                           	callstack 0
   169  000028                     	ds	1
   170  000029                     _Checksum:
   171                           	callstack 0
   172  000029                     	ds	1
   173  00002A                     _Temp_Decimal:
   174                           	callstack 0
   175  00002A                     	ds	1
   176  00002B                     _Temp_Entera:
   177                           	callstack 0
   178  00002B                     	ds	1
   179  00002C                     _RH_Decimal:
   180                           	callstack 0
   181  00002C                     	ds	1
   182  00002D                     _RH_Entera:
   183                           	callstack 0
   184  00002D                     	ds	1
   185                           
   186                           	psect	cstackCOMRAM
   187  000001                     __pcstackCOMRAM:
   188                           	callstack 0
   189  000001                     ??_DHT11_Start:
   190  000001                     ?___awmod:
   191                           	callstack 0
   192  000001                     ?___fltol:
   193                           	callstack 0
   194  000001                     ENVIA_NIBBLE@dato:
   195                           	callstack 0
   196  000001                     LEER_LCD@aux:
   197                           	callstack 0
   198  000001                     DHT11_Read@x:
   199                           	callstack 0
   200  000001                     ___awmod@dividend:
   201                           	callstack 0
   202  000001                     ___fltol@f1:
   203                           	callstack 0
   204                           
   205                           ; 4 bytes @ 0x0
   206  000001                     	ds	1
   207  000002                     ENVIA_CHAR@dato:
   208                           	callstack 0
   209  000002                     ENVIA_LCD_CMD@dato:
   210                           	callstack 0
   211  000002                     DHT11_Read@data:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x1
   215  000002                     	ds	1
   216  000003                     ENVIA_CHAR@aux:
   217                           	callstack 0
   218  000003                     ENVIA_LCD_CMD@aux:
   219                           	callstack 0
   220  000003                     ___awmod@divisor:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x2
   224  000003                     	ds	1
   225  000004                     ??_LCD_CONFIG:
   226  000004                     POS_CURSOR@columna:
   227                           	callstack 0
   228  000004                     CURSOR_ONOFF@estado:
   229                           	callstack 0
   230  000004                     ESCRIBE_MENSAJE@cadena:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x3
   234  000004                     	ds	1
   235  000005                     ??_LCD_Init:
   236  000005                     ??___fltol:
   237  000005                     POS_CURSOR@fila:
   238                           	callstack 0
   239  000005                     ___awmod@counter:
   240                           	callstack 0
   241                           
   242                           ; 1 bytes @ 0x4
   243  000005                     	ds	1
   244  000006                     ESCRIBE_MENSAJE@tam:
   245                           	callstack 0
   246  000006                     ___awmod@sign:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x5
   250  000006                     	ds	1
   251  000007                     ??_ESCRIBE_MENSAJE:
   252  000007                     ?___awdiv:
   253                           	callstack 0
   254  000007                     ___awdiv@dividend:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x6
   258  000007                     	ds	2
   259  000009                     ESCRIBE_MENSAJE@i:
   260                           	callstack 0
   261  000009                     ___fltol@sign1:
   262                           	callstack 0
   263  000009                     ___awdiv@divisor:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x8
   267  000009                     	ds	1
   268  00000A                     ___fltol@exp1:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x9
   272  00000A                     	ds	1
   273  00000B                     ___awdiv@counter:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0xA
   277  00000B                     	ds	1
   278  00000C                     ___awdiv@sign:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0xB
   282  00000C                     	ds	1
   283  00000D                     ___awdiv@quotient:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0xC
   287  00000D                     	ds	2
   288  00000F                     ?___xxtofl:
   289                           	callstack 0
   290  00000F                     convierte@numero:
   291                           	callstack 0
   292  00000F                     ___xxtofl@val:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0xE
   296  00000F                     	ds	4
   297  000013                     ??___xxtofl:
   298                           
   299                           ; 1 bytes @ 0x12
   300  000013                     	ds	4
   301  000017                     ___xxtofl@sign:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x16
   305  000017                     	ds	1
   306  000018                     ___xxtofl@exp:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x17
   310  000018                     	ds	1
   311  000019                     ___xxtofl@arg:
   312                           	callstack 0
   313                           
   314                           ; 4 bytes @ 0x18
   315  000019                     	ds	4
   316  00001D                     ??_main:
   317                           
   318                           ; 1 bytes @ 0x1C
   319  00001D                     	ds	4
   320  000021                     main@x:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x20
   324  000021                     	ds	1
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 28 in file "maincode.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  x               1   32[COMRAM] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   345 ;;      Params:         0       0       0       0
   346 ;;      Locals:         1       0       0       0
   347 ;;      Temps:          4       0       0       0
   348 ;;      Totals:         5       0       0       0
   349 ;;Total ram usage:        5 bytes
   350 ;; Hardware stack levels required when called: 4
   351 ;; This function calls:
   352 ;;		_BORRAR_LCD
   353 ;;		_CURSOR_HOME
   354 ;;		_DHT11_Check
   355 ;;		_DHT11_Read
   356 ;;		_DHT11_Start
   357 ;;		_ENVIA_CHAR
   358 ;;		_ESCRIBE_MENSAJE
   359 ;;		_LCD_Init
   360 ;;		_POS_CURSOR
   361 ;;		___awdiv
   362 ;;		___fltol
   363 ;;		___xxtofl
   364 ;;		_convierte
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371  00052A                     __ptext0:
   372                           	callstack 0
   373  00052A                     _main:
   374                           	callstack 27
   375  00052A                     
   376                           ;maincode.c: 29:     LCD_Init();
   377  00052A  EC8A  F006         	call	_LCD_Init	;wreg free
   378  00052E                     
   379                           ;maincode.c: 30:     ESCRIBE_MENSAJE("Prueba", 6);
   380  00052E  0E1E               	movlw	low STR_1
   381  000530  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   382  000532  0E05               	movlw	high STR_1
   383  000534  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   384  000536  0E06               	movlw	6
   385  000538  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   386  00053A  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   387  00053E                     
   388                           ;maincode.c: 32:     for(x=0;x<10;x++){
   389  00053E  0E00               	movlw	0
   390  000540  6E21               	movwf	main@x^0,c
   391  000542                     l1515:
   392                           
   393                           ;maincode.c: 33:         ENVIA_CHAR('.');
   394  000542  0E2E               	movlw	46
   395  000544  EC00  F007         	call	_ENVIA_CHAR
   396  000548                     
   397                           ;maincode.c: 34:         _delay((unsigned long)((200)*(48000000UL/4000.0)));
   398  000548  0E0D               	movlw	13
   399  00054A  6E1E               	movwf	(??_main+1)^0,c
   400  00054C  0E2D               	movlw	45
   401  00054E  6E1D               	movwf	??_main^0,c
   402  000550  0ED8               	movlw	216
   403  000552                     u847:
   404  000552  2EE8               	decfsz	wreg,f,c
   405  000554  D7FE               	bra	u847
   406  000556  2E1D               	decfsz	??_main^0,f,c
   407  000558  D7FC               	bra	u847
   408  00055A  2E1E               	decfsz	(??_main+1)^0,f,c
   409  00055C  D7FA               	bra	u847
   410  00055E                     
   411                           ;maincode.c: 35:     }
   412  00055E  2A21               	incf	main@x^0,f,c
   413  000560  0E09               	movlw	9
   414  000562  6421               	cpfsgt	main@x^0,c
   415  000564  EFB6  F002         	goto	u821
   416  000568  EFB8  F002         	goto	u820
   417  00056C                     u821:
   418  00056C  EFA1  F002         	goto	l1515
   419  000570                     u820:
   420  000570                     
   421                           ;maincode.c: 36:     POS_CURSOR(2,1);
   422  000570  0E01               	movlw	1
   423  000572  6E04               	movwf	POS_CURSOR@columna^0,c
   424  000574  0E02               	movlw	2
   425  000576  ECC8  F006         	call	_POS_CURSOR
   426  00057A                     
   427                           ;maincode.c: 37:     ESCRIBE_MENSAJE("Todo OK!", 8);
   428  00057A  0E0D               	movlw	low STR_2
   429  00057C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   430  00057E  0E05               	movlw	high STR_2
   431  000580  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   432  000582  0E08               	movlw	8
   433  000584  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   434  000586  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   435  00058A                     
   436                           ;maincode.c: 38:     _delay((unsigned long)((3000)*(48000000UL/4000.0)));
   437  00058A  0EB7               	movlw	183
   438  00058C  6E1E               	movwf	(??_main+1)^0,c
   439  00058E  0EA1               	movlw	161
   440  000590  6E1D               	movwf	??_main^0,c
   441  000592  0EC4               	movlw	196
   442  000594                     u857:
   443  000594  2EE8               	decfsz	wreg,f,c
   444  000596  D7FE               	bra	u857
   445  000598  2E1D               	decfsz	??_main^0,f,c
   446  00059A  D7FC               	bra	u857
   447  00059C  2E1E               	decfsz	(??_main+1)^0,f,c
   448  00059E  D7FA               	bra	u857
   449  0005A0                     
   450                           ;maincode.c: 39:     BORRAR_LCD();
   451  0005A0  EC7C  F007         	call	_BORRAR_LCD	;wreg free
   452  0005A4                     l1531:
   453                           
   454                           ;maincode.c: 41:         DHT11_Start();
   455  0005A4  EC49  F007         	call	_DHT11_Start	;wreg free
   456  0005A8                     
   457                           ;maincode.c: 42:         DHT11_Check();
   458  0005A8  EC33  F007         	call	_DHT11_Check	;wreg free
   459  0005AC                     
   460                           ;maincode.c: 44:         RH_Entera = DHT11_Read();
   461  0005AC  EC5A  F006         	call	_DHT11_Read	;wreg free
   462  0005B0  6E2D               	movwf	_RH_Entera^0,c
   463  0005B2                     
   464                           ;maincode.c: 45:         RH_Decimal = DHT11_Read();
   465  0005B2  EC5A  F006         	call	_DHT11_Read	;wreg free
   466  0005B6  6E2C               	movwf	_RH_Decimal^0,c
   467  0005B8                     
   468                           ;maincode.c: 46:         Temp_Entera = DHT11_Read();
   469  0005B8  EC5A  F006         	call	_DHT11_Read	;wreg free
   470  0005BC  6E2B               	movwf	_Temp_Entera^0,c
   471  0005BE                     
   472                           ;maincode.c: 47:         Temp_Decimal = DHT11_Read();
   473  0005BE  EC5A  F006         	call	_DHT11_Read	;wreg free
   474  0005C2  6E2A               	movwf	_Temp_Decimal^0,c
   475  0005C4                     
   476                           ;maincode.c: 48:         Checksum = DHT11_Read();
   477  0005C4  EC5A  F006         	call	_DHT11_Read	;wreg free
   478  0005C8  6E29               	movwf	_Checksum^0,c
   479  0005CA                     
   480                           ;maincode.c: 49:         CURSOR_HOME();
   481  0005CA  EC78  F007         	call	_CURSOR_HOME	;wreg free
   482                           
   483                           ;maincode.c: 50:         ESCRIBE_MENSAJE("RH:",3);
   484  0005CE  0E25               	movlw	low STR_3
   485  0005D0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   486  0005D2  0E05               	movlw	high STR_3
   487  0005D4  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   488  0005D6  0E03               	movlw	3
   489  0005D8  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   490  0005DA  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   491  0005DE                     
   492                           ;maincode.c: 51:         convierte(RH_Entera);
   493  0005DE  502D               	movf	_RH_Entera^0,w,c
   494  0005E0  ECF2  F005         	call	_convierte
   495  0005E4                     
   496                           ;maincode.c: 52:         ENVIA_CHAR(decena+0x30);
   497  0005E4  5027               	movf	_decena^0,w,c
   498  0005E6  0F30               	addlw	48
   499  0005E8  EC00  F007         	call	_ENVIA_CHAR
   500  0005EC                     
   501                           ;maincode.c: 53:         ENVIA_CHAR(unidad+0x30);
   502  0005EC  5026               	movf	_unidad^0,w,c
   503  0005EE  0F30               	addlw	48
   504  0005F0  EC00  F007         	call	_ENVIA_CHAR
   505  0005F4                     
   506                           ;maincode.c: 54:         ESCRIBE_MENSAJE("% Temp:",7);
   507  0005F4  0E16               	movlw	low STR_4
   508  0005F6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   509  0005F8  0E05               	movlw	high STR_4
   510  0005FA  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   511  0005FC  0E07               	movlw	7
   512  0005FE  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   513  000600  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   514                           
   515                           ;maincode.c: 55:         convierte(Temp_Entera);
   516  000604  502B               	movf	_Temp_Entera^0,w,c
   517  000606  ECF2  F005         	call	_convierte
   518                           
   519                           ;maincode.c: 56:         ENVIA_CHAR(decena+0x30);
   520  00060A  5027               	movf	_decena^0,w,c
   521  00060C  0F30               	addlw	48
   522  00060E  EC00  F007         	call	_ENVIA_CHAR
   523                           
   524                           ;maincode.c: 57:         ENVIA_CHAR(unidad+0x30);
   525  000612  5026               	movf	_unidad^0,w,c
   526  000614  0F30               	addlw	48
   527  000616  EC00  F007         	call	_ENVIA_CHAR
   528                           
   529                           ;maincode.c: 58:         ENVIA_CHAR(0xDF);
   530  00061A  0EDF               	movlw	223
   531  00061C  EC00  F007         	call	_ENVIA_CHAR
   532                           
   533                           ;maincode.c: 59:         ENVIA_CHAR('C');
   534  000620  0E43               	movlw	67
   535  000622  EC00  F007         	call	_ENVIA_CHAR
   536  000626                     
   537                           ;maincode.c: 60:         n_temp_f = (Temp_Entera * 9 / 5) + 32;
   538  000626  0E00               	movlw	0
   539  000628  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   540  00062A  0E05               	movlw	5
   541  00062C  6E09               	movwf	___awdiv@divisor^0,c
   542  00062E  502B               	movf	_Temp_Entera^0,w,c
   543  000630  0D09               	mullw	9
   544  000632  CFF3 F007          	movff	prodl,___awdiv@dividend
   545  000636  CFF4 F008          	movff	prodh,___awdiv@dividend+1
   546  00063A  ECF9  F004         	call	___awdiv	;wreg free
   547  00063E  0E20               	movlw	32
   548  000640  2607               	addwf	?___awdiv^0,f,c
   549  000642  0E00               	movlw	0
   550  000644  2208               	addwfc	(?___awdiv+1)^0,f,c
   551  000646  C007  F00F         	movff	?___awdiv,___xxtofl@val
   552  00064A  C008  F010         	movff	?___awdiv+1,___xxtofl@val+1
   553  00064E  0E00               	movlw	0
   554  000650  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
   555  000652  0EFF               	movlw	-1
   556  000654  6E11               	movwf	(___xxtofl@val+2)^0,c
   557  000656  6E12               	movwf	(___xxtofl@val+3)^0,c
   558  000658  0E01               	movlw	1
   559  00065A  EC9C  F003         	call	___xxtofl
   560  00065E  C00F  F022         	movff	?___xxtofl,_n_temp_f
   561  000662  C010  F023         	movff	?___xxtofl+1,_n_temp_f+1
   562  000666  C011  F024         	movff	?___xxtofl+2,_n_temp_f+2
   563  00066A  C012  F025         	movff	?___xxtofl+3,_n_temp_f+3
   564  00066E                     
   565                           ;maincode.c: 61:         POS_CURSOR(2,6);
   566  00066E  0E06               	movlw	6
   567  000670  6E04               	movwf	POS_CURSOR@columna^0,c
   568  000672  0E02               	movlw	2
   569  000674  ECC8  F006         	call	_POS_CURSOR
   570  000678                     
   571                           ;maincode.c: 62:         ESCRIBE_MENSAJE("Temp:",5);
   572  000678  0E18               	movlw	low (STR_4+2)
   573  00067A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   574  00067C  0E05               	movlw	high (STR_4+2)
   575  00067E  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   576  000680  0E05               	movlw	5
   577  000682  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   578  000684  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   579  000688                     
   580                           ;maincode.c: 63:         convierte(n_temp_f);
   581  000688  C022  F001         	movff	_n_temp_f,___fltol@f1
   582  00068C  C023  F002         	movff	_n_temp_f+1,___fltol@f1+1
   583  000690  C024  F003         	movff	_n_temp_f+2,___fltol@f1+2
   584  000694  C025  F004         	movff	_n_temp_f+3,___fltol@f1+3
   585  000698  EC76  F004         	call	___fltol	;wreg free
   586  00069C  5001               	movf	?___fltol^0,w,c
   587  00069E  ECF2  F005         	call	_convierte
   588  0006A2                     
   589                           ;maincode.c: 64:         ENVIA_CHAR(centena+0x30);
   590  0006A2  5028               	movf	_centena^0,w,c
   591  0006A4  0F30               	addlw	48
   592  0006A6  EC00  F007         	call	_ENVIA_CHAR
   593  0006AA                     
   594                           ;maincode.c: 65:         ENVIA_CHAR(decena+0x30);
   595  0006AA  5027               	movf	_decena^0,w,c
   596  0006AC  0F30               	addlw	48
   597  0006AE  EC00  F007         	call	_ENVIA_CHAR
   598  0006B2                     
   599                           ;maincode.c: 66:         ENVIA_CHAR(unidad+0x30);
   600  0006B2  5026               	movf	_unidad^0,w,c
   601  0006B4  0F30               	addlw	48
   602  0006B6  EC00  F007         	call	_ENVIA_CHAR
   603  0006BA                     
   604                           ;maincode.c: 67:         ENVIA_CHAR(0xDF);
   605  0006BA  0EDF               	movlw	223
   606  0006BC  EC00  F007         	call	_ENVIA_CHAR
   607  0006C0                     
   608                           ;maincode.c: 68:         ENVIA_CHAR('F');
   609  0006C0  0E46               	movlw	70
   610  0006C2  EC00  F007         	call	_ENVIA_CHAR
   611  0006C6                     
   612                           ;maincode.c: 70:         if(Checksum != (RH_Entera+RH_Decimal+Temp_Entera+Temp_Decimal))
      +                          {
   613  0006C6  5029               	movf	_Checksum^0,w,c
   614  0006C8  6E1D               	movwf	??_main^0,c
   615  0006CA  6A1E               	clrf	(??_main+1)^0,c
   616  0006CC  502C               	movf	_RH_Decimal^0,w,c
   617  0006CE  C02D  F01F         	movff	_RH_Entera,??_main+2
   618  0006D2  6A20               	clrf	(??_main+3)^0,c
   619  0006D4  261F               	addwf	(??_main+2)^0,f,c
   620  0006D6  0E00               	movlw	0
   621  0006D8  2220               	addwfc	(??_main+3)^0,f,c
   622  0006DA  502B               	movf	_Temp_Entera^0,w,c
   623  0006DC  261F               	addwf	(??_main+2)^0,f,c
   624  0006DE  0E00               	movlw	0
   625  0006E0  2220               	addwfc	(??_main+3)^0,f,c
   626  0006E2  502A               	movf	_Temp_Decimal^0,w,c
   627  0006E4  261F               	addwf	(??_main+2)^0,f,c
   628  0006E6  0E00               	movlw	0
   629  0006E8  2220               	addwfc	(??_main+3)^0,f,c
   630  0006EA  501D               	movf	??_main^0,w,c
   631  0006EC  181F               	xorwf	(??_main+2)^0,w,c
   632  0006EE  E109               	bnz	u830
   633  0006F0  501E               	movf	(??_main+1)^0,w,c
   634  0006F2  1820               	xorwf	(??_main+3)^0,w,c
   635  0006F4  B4D8               	btfsc	status,2,c
   636  0006F6  EF7F  F003         	goto	u831
   637  0006FA  EF81  F003         	goto	u830
   638  0006FE                     u831:
   639  0006FE  EF8D  F003         	goto	l1579
   640  000702                     u830:
   641  000702                     
   642                           ;maincode.c: 71:             BORRAR_LCD();
   643  000702  EC7C  F007         	call	_BORRAR_LCD	;wreg free
   644                           
   645                           ;maincode.c: 72:             CURSOR_HOME();
   646  000706  EC78  F007         	call	_CURSOR_HOME	;wreg free
   647  00070A                     
   648                           ;maincode.c: 73:             ESCRIBE_MENSAJE("Hay Error!!",11);
   649  00070A  0E01               	movlw	low STR_6
   650  00070C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   651  00070E  0E05               	movlw	high STR_6
   652  000710  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   653  000712  0E0B               	movlw	11
   654  000714  6E06               	movwf	ESCRIBE_MENSAJE@tam^0,c
   655  000716  ECA9  F006         	call	_ESCRIBE_MENSAJE	;wreg free
   656  00071A                     l1579:
   657                           
   658                           ;maincode.c: 75:         _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   659  00071A  0E3D               	movlw	61
   660  00071C  6E1E               	movwf	(??_main+1)^0,c
   661  00071E  0EE1               	movlw	225
   662  000720  6E1D               	movwf	??_main^0,c
   663  000722  0E40               	movlw	64
   664  000724                     u867:
   665  000724  2EE8               	decfsz	wreg,f,c
   666  000726  D7FE               	bra	u867
   667  000728  2E1D               	decfsz	??_main^0,f,c
   668  00072A  D7FC               	bra	u867
   669  00072C  2E1E               	decfsz	(??_main+1)^0,f,c
   670  00072E  D7FA               	bra	u867
   671  000730  EFD2  F002         	goto	l1531
   672  000734  EF00  F000         	goto	start
   673  000738                     __end_of_main:
   674                           	callstack 0
   675                           
   676 ;; *************** function _convierte *****************
   677 ;; Defined at:
   678 ;;		line 22 in file "maincode.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  numero          1    wreg     unsigned char 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;  numero          1   14[COMRAM] unsigned char 
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0, cstack
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   692 ;;      Params:         0       0       0       0
   693 ;;      Locals:         1       0       0       0
   694 ;;      Temps:          0       0       0       0
   695 ;;      Totals:         1       0       0       0
   696 ;;Total ram usage:        1 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; Hardware stack levels required when called: 1
   699 ;; This function calls:
   700 ;;		___awdiv
   701 ;;		___awmod
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text1
   708  000BE4                     __ptext1:
   709                           	callstack 0
   710  000BE4                     _convierte:
   711                           	callstack 29
   712                           
   713                           ;incstack = 0
   714                           ;convierte@numero stored from wreg
   715  000BE4  6E0F               	movwf	convierte@numero^0,c
   716  000BE6                     
   717                           ;maincode.c: 23:     centena = (numero % 1000) / 100;
   718  000BE6  0E03               	movlw	3
   719  000BE8  6E04               	movwf	(___awmod@divisor+1)^0,c
   720  000BEA  0EE8               	movlw	232
   721  000BEC  6E03               	movwf	___awmod@divisor^0,c
   722  000BEE  C00F  F001         	movff	convierte@numero,___awmod@dividend
   723  000BF2  6A02               	clrf	(___awmod@dividend+1)^0,c
   724  000BF4  EC5B  F005         	call	___awmod	;wreg free
   725  000BF8  C001  F007         	movff	?___awmod,___awdiv@dividend
   726  000BFC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   727  000C00  0E00               	movlw	0
   728  000C02  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   729  000C04  0E64               	movlw	100
   730  000C06  6E09               	movwf	___awdiv@divisor^0,c
   731  000C08  ECF9  F004         	call	___awdiv	;wreg free
   732  000C0C  5007               	movf	?___awdiv^0,w,c
   733  000C0E  6E28               	movwf	_centena^0,c
   734                           
   735                           ;maincode.c: 24:     decena = (numero % 100) / 10;
   736  000C10  0E00               	movlw	0
   737  000C12  6E04               	movwf	(___awmod@divisor+1)^0,c
   738  000C14  0E64               	movlw	100
   739  000C16  6E03               	movwf	___awmod@divisor^0,c
   740  000C18  C00F  F001         	movff	convierte@numero,___awmod@dividend
   741  000C1C  6A02               	clrf	(___awmod@dividend+1)^0,c
   742  000C1E  EC5B  F005         	call	___awmod	;wreg free
   743  000C22  C001  F007         	movff	?___awmod,___awdiv@dividend
   744  000C26  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
   745  000C2A  0E00               	movlw	0
   746  000C2C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   747  000C2E  0E0A               	movlw	10
   748  000C30  6E09               	movwf	___awdiv@divisor^0,c
   749  000C32  ECF9  F004         	call	___awdiv	;wreg free
   750  000C36  5007               	movf	?___awdiv^0,w,c
   751  000C38  6E27               	movwf	_decena^0,c
   752                           
   753                           ;maincode.c: 25:     unidad = numero % 10;
   754  000C3A  C00F  F001         	movff	convierte@numero,___awmod@dividend
   755  000C3E  6A02               	clrf	(___awmod@dividend+1)^0,c
   756  000C40  0E00               	movlw	0
   757  000C42  6E04               	movwf	(___awmod@divisor+1)^0,c
   758  000C44  0E0A               	movlw	10
   759  000C46  6E03               	movwf	___awmod@divisor^0,c
   760  000C48  EC5B  F005         	call	___awmod	;wreg free
   761  000C4C  5001               	movf	?___awmod^0,w,c
   762  000C4E  6E26               	movwf	_unidad^0,c
   763  000C50  0012               	return		;funcret
   764  000C52                     __end_of_convierte:
   765                           	callstack 0
   766                           
   767 ;; *************** function ___awmod *****************
   768 ;; Defined at:
   769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  dividend        2    0[COMRAM] int 
   772 ;;  divisor         2    2[COMRAM] int 
   773 ;; Auto vars:     Size  Location     Type
   774 ;;  sign            1    5[COMRAM] unsigned char 
   775 ;;  counter         1    4[COMRAM] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  2    0[COMRAM] int 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   785 ;;      Params:         4       0       0       0
   786 ;;      Locals:         2       0       0       0
   787 ;;      Temps:          0       0       0       0
   788 ;;      Totals:         6       0       0       0
   789 ;;Total ram usage:        6 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		_convierte
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text2
   799  000AB6                     __ptext2:
   800                           	callstack 0
   801  000AB6                     ___awmod:
   802                           	callstack 29
   803  000AB6  0E00               	movlw	0
   804  000AB8  6E06               	movwf	___awmod@sign^0,c
   805  000ABA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   806  000ABC  EF64  F005         	goto	u560
   807  000AC0  EF62  F005         	goto	u561
   808  000AC4                     u561:
   809  000AC4  EF6A  F005         	goto	l1367
   810  000AC8                     u560:
   811  000AC8  6C01               	negf	___awmod@dividend^0,c
   812  000ACA  1E02               	comf	(___awmod@dividend+1)^0,f,c
   813  000ACC  B0D8               	btfsc	status,0,c
   814  000ACE  2A02               	incf	(___awmod@dividend+1)^0,f,c
   815  000AD0  0E01               	movlw	1
   816  000AD2  6E06               	movwf	___awmod@sign^0,c
   817  000AD4                     l1367:
   818  000AD4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   819  000AD6  EF71  F005         	goto	u570
   820  000ADA  EF6F  F005         	goto	u571
   821  000ADE                     u571:
   822  000ADE  EF75  F005         	goto	l1371
   823  000AE2                     u570:
   824  000AE2  6C03               	negf	___awmod@divisor^0,c
   825  000AE4  1E04               	comf	(___awmod@divisor+1)^0,f,c
   826  000AE6  B0D8               	btfsc	status,0,c
   827  000AE8  2A04               	incf	(___awmod@divisor+1)^0,f,c
   828  000AEA                     l1371:
   829  000AEA  5003               	movf	___awmod@divisor^0,w,c
   830  000AEC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   831  000AEE  B4D8               	btfsc	status,2,c
   832  000AF0  EF7C  F005         	goto	u581
   833  000AF4  EF7E  F005         	goto	u580
   834  000AF8                     u581:
   835  000AF8  EFA2  F005         	goto	l1387
   836  000AFC                     u580:
   837  000AFC  0E01               	movlw	1
   838  000AFE  6E05               	movwf	___awmod@counter^0,c
   839  000B00  EF86  F005         	goto	l1377
   840  000B04                     l1375:
   841  000B04  90D8               	bcf	status,0,c
   842  000B06  3603               	rlcf	___awmod@divisor^0,f,c
   843  000B08  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   844  000B0A  2A05               	incf	___awmod@counter^0,f,c
   845  000B0C                     l1377:
   846  000B0C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   847  000B0E  EF8B  F005         	goto	u591
   848  000B12  EF8D  F005         	goto	u590
   849  000B16                     u591:
   850  000B16  EF82  F005         	goto	l1375
   851  000B1A                     u590:
   852  000B1A                     l1379:
   853  000B1A  5003               	movf	___awmod@divisor^0,w,c
   854  000B1C  5C01               	subwf	___awmod@dividend^0,w,c
   855  000B1E  5004               	movf	(___awmod@divisor+1)^0,w,c
   856  000B20  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   857  000B22  A0D8               	btfss	status,0,c
   858  000B24  EF96  F005         	goto	u601
   859  000B28  EF98  F005         	goto	u600
   860  000B2C                     u601:
   861  000B2C  EF9C  F005         	goto	l1383
   862  000B30                     u600:
   863  000B30  5003               	movf	___awmod@divisor^0,w,c
   864  000B32  5E01               	subwf	___awmod@dividend^0,f,c
   865  000B34  5004               	movf	(___awmod@divisor+1)^0,w,c
   866  000B36  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   867  000B38                     l1383:
   868  000B38  90D8               	bcf	status,0,c
   869  000B3A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   870  000B3C  3203               	rrcf	___awmod@divisor^0,f,c
   871  000B3E  2E05               	decfsz	___awmod@counter^0,f,c
   872  000B40  EF8D  F005         	goto	l1379
   873  000B44                     l1387:
   874  000B44  5006               	movf	___awmod@sign^0,w,c
   875  000B46  B4D8               	btfsc	status,2,c
   876  000B48  EFA8  F005         	goto	u611
   877  000B4C  EFAA  F005         	goto	u610
   878  000B50                     u611:
   879  000B50  EFAE  F005         	goto	l1391
   880  000B54                     u610:
   881  000B54  6C01               	negf	___awmod@dividend^0,c
   882  000B56  1E02               	comf	(___awmod@dividend+1)^0,f,c
   883  000B58  B0D8               	btfsc	status,0,c
   884  000B5A  2A02               	incf	(___awmod@dividend+1)^0,f,c
   885  000B5C                     l1391:
   886  000B5C  C001  F001         	movff	___awmod@dividend,?___awmod
   887  000B60  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   888  000B64  0012               	return		;funcret
   889  000B66                     __end_of___awmod:
   890                           	callstack 0
   891                           
   892 ;; *************** function ___awdiv *****************
   893 ;; Defined at:
   894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;  dividend        2    6[COMRAM] int 
   897 ;;  divisor         2    8[COMRAM] int 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  quotient        2   12[COMRAM] int 
   900 ;;  sign            1   11[COMRAM] unsigned char 
   901 ;;  counter         1   10[COMRAM] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    6[COMRAM] int 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
   911 ;;      Params:         4       0       0       0
   912 ;;      Locals:         4       0       0       0
   913 ;;      Temps:          0       0       0       0
   914 ;;      Totals:         8       0       0       0
   915 ;;Total ram usage:        8 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_convierte
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text3
   926  0009F2                     __ptext3:
   927                           	callstack 0
   928  0009F2                     ___awdiv:
   929                           	callstack 29
   930  0009F2  0E00               	movlw	0
   931  0009F4  6E0C               	movwf	___awdiv@sign^0,c
   932  0009F6  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   933  0009F8  EF02  F005         	goto	u500
   934  0009FC  EF00  F005         	goto	u501
   935  000A00                     u501:
   936  000A00  EF08  F005         	goto	l1323
   937  000A04                     u500:
   938  000A04  6C09               	negf	___awdiv@divisor^0,c
   939  000A06  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   940  000A08  B0D8               	btfsc	status,0,c
   941  000A0A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   942  000A0C  0E01               	movlw	1
   943  000A0E  6E0C               	movwf	___awdiv@sign^0,c
   944  000A10                     l1323:
   945  000A10  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   946  000A12  EF0F  F005         	goto	u510
   947  000A16  EF0D  F005         	goto	u511
   948  000A1A                     u511:
   949  000A1A  EF15  F005         	goto	l1329
   950  000A1E                     u510:
   951  000A1E  6C07               	negf	___awdiv@dividend^0,c
   952  000A20  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   953  000A22  B0D8               	btfsc	status,0,c
   954  000A24  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   955  000A26  0E01               	movlw	1
   956  000A28  1A0C               	xorwf	___awdiv@sign^0,f,c
   957  000A2A                     l1329:
   958  000A2A  0E00               	movlw	0
   959  000A2C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   960  000A2E  0E00               	movlw	0
   961  000A30  6E0D               	movwf	___awdiv@quotient^0,c
   962  000A32  5009               	movf	___awdiv@divisor^0,w,c
   963  000A34  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   964  000A36  B4D8               	btfsc	status,2,c
   965  000A38  EF20  F005         	goto	u521
   966  000A3C  EF22  F005         	goto	u520
   967  000A40                     u521:
   968  000A40  EF4A  F005         	goto	l1351
   969  000A44                     u520:
   970  000A44  0E01               	movlw	1
   971  000A46  6E0B               	movwf	___awdiv@counter^0,c
   972  000A48  EF2A  F005         	goto	l1337
   973  000A4C                     l1335:
   974  000A4C  90D8               	bcf	status,0,c
   975  000A4E  3609               	rlcf	___awdiv@divisor^0,f,c
   976  000A50  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   977  000A52  2A0B               	incf	___awdiv@counter^0,f,c
   978  000A54                     l1337:
   979  000A54  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   980  000A56  EF2F  F005         	goto	u531
   981  000A5A  EF31  F005         	goto	u530
   982  000A5E                     u531:
   983  000A5E  EF26  F005         	goto	l1335
   984  000A62                     u530:
   985  000A62                     l1339:
   986  000A62  90D8               	bcf	status,0,c
   987  000A64  360D               	rlcf	___awdiv@quotient^0,f,c
   988  000A66  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   989  000A68  5009               	movf	___awdiv@divisor^0,w,c
   990  000A6A  5C07               	subwf	___awdiv@dividend^0,w,c
   991  000A6C  500A               	movf	(___awdiv@divisor+1)^0,w,c
   992  000A6E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   993  000A70  A0D8               	btfss	status,0,c
   994  000A72  EF3D  F005         	goto	u541
   995  000A76  EF3F  F005         	goto	u540
   996  000A7A                     u541:
   997  000A7A  EF44  F005         	goto	l1347
   998  000A7E                     u540:
   999  000A7E  5009               	movf	___awdiv@divisor^0,w,c
  1000  000A80  5E07               	subwf	___awdiv@dividend^0,f,c
  1001  000A82  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1002  000A84  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1003  000A86  800D               	bsf	___awdiv@quotient^0,0,c
  1004  000A88                     l1347:
  1005  000A88  90D8               	bcf	status,0,c
  1006  000A8A  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1007  000A8C  3209               	rrcf	___awdiv@divisor^0,f,c
  1008  000A8E  2E0B               	decfsz	___awdiv@counter^0,f,c
  1009  000A90  EF31  F005         	goto	l1339
  1010  000A94                     l1351:
  1011  000A94  500C               	movf	___awdiv@sign^0,w,c
  1012  000A96  B4D8               	btfsc	status,2,c
  1013  000A98  EF50  F005         	goto	u551
  1014  000A9C  EF52  F005         	goto	u550
  1015  000AA0                     u551:
  1016  000AA0  EF56  F005         	goto	l1355
  1017  000AA4                     u550:
  1018  000AA4  6C0D               	negf	___awdiv@quotient^0,c
  1019  000AA6  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1020  000AA8  B0D8               	btfsc	status,0,c
  1021  000AAA  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1022  000AAC                     l1355:
  1023  000AAC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1024  000AB0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1025  000AB4  0012               	return		;funcret
  1026  000AB6                     __end_of___awdiv:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function ___xxtofl *****************
  1030 ;; Defined at:
  1031 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  sign            1    wreg     unsigned char 
  1034 ;;  val             4   14[COMRAM] long 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  sign            1   22[COMRAM] unsigned char 
  1037 ;;  arg             4   24[COMRAM] unsigned long 
  1038 ;;  exp             1   23[COMRAM] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  4   14[COMRAM] unsigned char 
  1041 ;; Registers used:
  1042 ;;		wreg, status,2, status,0
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1048 ;;      Params:         4       0       0       0
  1049 ;;      Locals:         6       0       0       0
  1050 ;;      Temps:          4       0       0       0
  1051 ;;      Totals:        14       0       0       0
  1052 ;;Total ram usage:       14 bytes
  1053 ;; Hardware stack levels used: 1
  1054 ;; This function calls:
  1055 ;;		Nothing
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text4
  1062  000738                     __ptext4:
  1063                           	callstack 0
  1064  000738                     ___xxtofl:
  1065                           	callstack 30
  1066                           
  1067                           ;incstack = 0
  1068                           ;___xxtofl@sign stored from wreg
  1069  000738  6E17               	movwf	___xxtofl@sign^0,c
  1070  00073A  5017               	movf	___xxtofl@sign^0,w,c
  1071  00073C  B4D8               	btfsc	status,2,c
  1072  00073E  EFA3  F003         	goto	u721
  1073  000742  EFA5  F003         	goto	u720
  1074  000746                     u721:
  1075  000746  EFC7  F003         	goto	l827
  1076  00074A                     u720:
  1077  00074A  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  1078  00074C  EFAC  F003         	goto	u730
  1079  000750  EFAA  F003         	goto	u731
  1080  000754                     u731:
  1081  000754  EFC7  F003         	goto	l827
  1082  000758                     u730:
  1083  000758  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  1084  00075C  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  1085  000760  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  1086  000764  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  1087  000768  1E13               	comf	??___xxtofl^0,f,c
  1088  00076A  1E14               	comf	(??___xxtofl+1)^0,f,c
  1089  00076C  1E15               	comf	(??___xxtofl+2)^0,f,c
  1090  00076E  1E16               	comf	(??___xxtofl+3)^0,f,c
  1091  000770  2A13               	incf	??___xxtofl^0,f,c
  1092  000772  0E00               	movlw	0
  1093  000774  2214               	addwfc	(??___xxtofl+1)^0,f,c
  1094  000776  2215               	addwfc	(??___xxtofl+2)^0,f,c
  1095  000778  2216               	addwfc	(??___xxtofl+3)^0,f,c
  1096  00077A  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  1097  00077E  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  1098  000782  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  1099  000786  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  1100  00078A  EFCF  F003         	goto	l1463
  1101  00078E                     l827:
  1102  00078E  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  1103  000792  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1104  000796  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1105  00079A  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1106  00079E                     l1463:
  1107  00079E  500F               	movf	___xxtofl@val^0,w,c
  1108  0007A0  1010               	iorwf	(___xxtofl@val+1)^0,w,c
  1109  0007A2  1011               	iorwf	(___xxtofl@val+2)^0,w,c
  1110  0007A4  1012               	iorwf	(___xxtofl@val+3)^0,w,c
  1111  0007A6  A4D8               	btfss	status,2,c
  1112  0007A8  EFD8  F003         	goto	u741
  1113  0007AC  EFDA  F003         	goto	u740
  1114  0007B0                     u741:
  1115  0007B0  EFE4  F003         	goto	l1469
  1116  0007B4                     u740:
  1117  0007B4  0E00               	movlw	0
  1118  0007B6  6E0F               	movwf	?___xxtofl^0,c
  1119  0007B8  0E00               	movlw	0
  1120  0007BA  6E10               	movwf	(?___xxtofl+1)^0,c
  1121  0007BC  0E00               	movlw	0
  1122  0007BE  6E11               	movwf	(?___xxtofl+2)^0,c
  1123  0007C0  0E00               	movlw	0
  1124  0007C2  6E12               	movwf	(?___xxtofl+3)^0,c
  1125  0007C4  EF75  F004         	goto	l830
  1126  0007C8                     l1469:
  1127  0007C8  0E96               	movlw	150
  1128  0007CA  6E18               	movwf	___xxtofl@exp^0,c
  1129  0007CC  EFEE  F003         	goto	l1473
  1130  0007D0                     l1471:
  1131  0007D0  2A18               	incf	___xxtofl@exp^0,f,c
  1132  0007D2  90D8               	bcf	status,0,c
  1133  0007D4  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  1134  0007D6  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  1135  0007D8  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  1136  0007DA  3219               	rrcf	___xxtofl@arg^0,f,c
  1137  0007DC                     l1473:
  1138  0007DC  0E00               	movlw	0
  1139  0007DE  1419               	andwf	___xxtofl@arg^0,w,c
  1140  0007E0  6E13               	movwf	??___xxtofl^0,c
  1141  0007E2  0E00               	movlw	0
  1142  0007E4  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  1143  0007E6  6E14               	movwf	(??___xxtofl+1)^0,c
  1144  0007E8  0E00               	movlw	0
  1145  0007EA  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  1146  0007EC  6E15               	movwf	(??___xxtofl+2)^0,c
  1147  0007EE  0EFE               	movlw	254
  1148  0007F0  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  1149  0007F2  6E16               	movwf	(??___xxtofl+3)^0,c
  1150  0007F4  5013               	movf	??___xxtofl^0,w,c
  1151  0007F6  1014               	iorwf	(??___xxtofl+1)^0,w,c
  1152  0007F8  1015               	iorwf	(??___xxtofl+2)^0,w,c
  1153  0007FA  1016               	iorwf	(??___xxtofl+3)^0,w,c
  1154  0007FC  A4D8               	btfss	status,2,c
  1155  0007FE  EF03  F004         	goto	u751
  1156  000802  EF05  F004         	goto	u750
  1157  000806                     u751:
  1158  000806  EFE8  F003         	goto	l1471
  1159  00080A                     u750:
  1160  00080A  EF13  F004         	goto	l834
  1161  00080E                     l1475:
  1162  00080E  2A18               	incf	___xxtofl@exp^0,f,c
  1163  000810  0E01               	movlw	1
  1164  000812  2619               	addwf	___xxtofl@arg^0,f,c
  1165  000814  0E00               	movlw	0
  1166  000816  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
  1167  000818  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
  1168  00081A  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
  1169  00081C  90D8               	bcf	status,0,c
  1170  00081E  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  1171  000820  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  1172  000822  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  1173  000824  3219               	rrcf	___xxtofl@arg^0,f,c
  1174  000826                     l834:
  1175  000826  0E00               	movlw	0
  1176  000828  1419               	andwf	___xxtofl@arg^0,w,c
  1177  00082A  6E13               	movwf	??___xxtofl^0,c
  1178  00082C  0E00               	movlw	0
  1179  00082E  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  1180  000830  6E14               	movwf	(??___xxtofl+1)^0,c
  1181  000832  0E00               	movlw	0
  1182  000834  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  1183  000836  6E15               	movwf	(??___xxtofl+2)^0,c
  1184  000838  0EFF               	movlw	255
  1185  00083A  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  1186  00083C  6E16               	movwf	(??___xxtofl+3)^0,c
  1187  00083E  5013               	movf	??___xxtofl^0,w,c
  1188  000840  1014               	iorwf	(??___xxtofl+1)^0,w,c
  1189  000842  1015               	iorwf	(??___xxtofl+2)^0,w,c
  1190  000844  1016               	iorwf	(??___xxtofl+3)^0,w,c
  1191  000846  A4D8               	btfss	status,2,c
  1192  000848  EF28  F004         	goto	u761
  1193  00084C  EF2A  F004         	goto	u760
  1194  000850                     u761:
  1195  000850  EF07  F004         	goto	l1475
  1196  000854                     u760:
  1197  000854  EF32  F004         	goto	l1483
  1198  000858                     l1481:
  1199  000858  0618               	decf	___xxtofl@exp^0,f,c
  1200  00085A  90D8               	bcf	status,0,c
  1201  00085C  3619               	rlcf	___xxtofl@arg^0,f,c
  1202  00085E  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
  1203  000860  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
  1204  000862  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
  1205  000864                     l1483:
  1206  000864  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
  1207  000866  EF37  F004         	goto	u771
  1208  00086A  EF39  F004         	goto	u770
  1209  00086E                     u771:
  1210  00086E  EF41  F004         	goto	l841
  1211  000872                     u770:
  1212  000872  0E02               	movlw	2
  1213  000874  6018               	cpfslt	___xxtofl@exp^0,c
  1214  000876  EF3F  F004         	goto	u781
  1215  00087A  EF41  F004         	goto	u780
  1216  00087E                     u781:
  1217  00087E  EF2C  F004         	goto	l1481
  1218  000882                     u780:
  1219  000882                     l841:
  1220  000882  B018               	btfsc	___xxtofl@exp^0,0,c
  1221  000884  EF46  F004         	goto	u791
  1222  000888  EF48  F004         	goto	u790
  1223  00088C                     u791:
  1224  00088C  EF49  F004         	goto	l1489
  1225  000890                     u790:
  1226  000890  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
  1227  000892                     l1489:
  1228  000892  90D8               	bcf	status,0,c
  1229  000894  3218               	rrcf	___xxtofl@exp^0,f,c
  1230  000896  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  1231  00089A  6A14               	clrf	(??___xxtofl+1)^0,c
  1232  00089C  6A15               	clrf	(??___xxtofl+2)^0,c
  1233  00089E  6A16               	clrf	(??___xxtofl+3)^0,c
  1234  0008A0  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  1235  0008A4  6A15               	clrf	(??___xxtofl+2)^0,c
  1236  0008A6  6A14               	clrf	(??___xxtofl+1)^0,c
  1237  0008A8  6A13               	clrf	??___xxtofl^0,c
  1238  0008AA  5013               	movf	??___xxtofl^0,w,c
  1239  0008AC  1219               	iorwf	___xxtofl@arg^0,f,c
  1240  0008AE  5014               	movf	(??___xxtofl+1)^0,w,c
  1241  0008B0  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
  1242  0008B2  5015               	movf	(??___xxtofl+2)^0,w,c
  1243  0008B4  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
  1244  0008B6  5016               	movf	(??___xxtofl+3)^0,w,c
  1245  0008B8  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
  1246  0008BA  5017               	movf	___xxtofl@sign^0,w,c
  1247  0008BC  B4D8               	btfsc	status,2,c
  1248  0008BE  EF63  F004         	goto	u801
  1249  0008C2  EF65  F004         	goto	u800
  1250  0008C6                     u801:
  1251  0008C6  EF6D  F004         	goto	l1499
  1252  0008CA                     u800:
  1253  0008CA  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  1254  0008CC  EF6C  F004         	goto	u810
  1255  0008D0  EF6A  F004         	goto	u811
  1256  0008D4                     u811:
  1257  0008D4  EF6D  F004         	goto	l1499
  1258  0008D8                     u810:
  1259  0008D8  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
  1260  0008DA                     l1499:
  1261  0008DA  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  1262  0008DE  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  1263  0008E2  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  1264  0008E6  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  1265  0008EA                     l830:
  1266  0008EA  0012               	return		;funcret
  1267  0008EC                     __end_of___xxtofl:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function ___fltol *****************
  1271 ;; Defined at:
  1272 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  f1              4    0[COMRAM] unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  exp1            1    9[COMRAM] unsigned char 
  1277 ;;  sign1           1    8[COMRAM] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  4    0[COMRAM] long 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1287 ;;      Params:         4       0       0       0
  1288 ;;      Locals:         2       0       0       0
  1289 ;;      Temps:          4       0       0       0
  1290 ;;      Totals:        10       0       0       0
  1291 ;;Total ram usage:       10 bytes
  1292 ;; Hardware stack levels used: 1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text5
  1301  0008EC                     __ptext5:
  1302                           	callstack 0
  1303  0008EC                     ___fltol:
  1304                           	callstack 30
  1305  0008EC  3403               	rlcf	(___fltol@f1+2)^0,w,c
  1306  0008EE  3404               	rlcf	(___fltol@f1+3)^0,w,c
  1307  0008F0  6E0A               	movwf	___fltol@exp1^0,c
  1308  0008F2  500A               	movf	___fltol@exp1^0,w,c
  1309  0008F4  A4D8               	btfss	status,2,c
  1310  0008F6  EF7F  F004         	goto	u651
  1311  0008FA  EF81  F004         	goto	u650
  1312  0008FE                     u651:
  1313  0008FE  EF8B  F004         	goto	l1419
  1314  000902                     u650:
  1315  000902                     l1415:
  1316  000902  0E00               	movlw	0
  1317  000904  6E01               	movwf	?___fltol^0,c
  1318  000906  0E00               	movlw	0
  1319  000908  6E02               	movwf	(?___fltol+1)^0,c
  1320  00090A  0E00               	movlw	0
  1321  00090C  6E03               	movwf	(?___fltol+2)^0,c
  1322  00090E  0E00               	movlw	0
  1323  000910  6E04               	movwf	(?___fltol+3)^0,c
  1324  000912  EFF8  F004         	goto	l469
  1325  000916                     l1419:
  1326  000916  C001  F005         	movff	___fltol@f1,??___fltol
  1327  00091A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1328  00091E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1329  000922  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1330  000926  0E20               	movlw	32
  1331  000928  EF9B  F004         	goto	u660
  1332  00092C                     u665:
  1333  00092C  90D8               	bcf	status,0,c
  1334  00092E  3208               	rrcf	(??___fltol+3)^0,f,c
  1335  000930  3207               	rrcf	(??___fltol+2)^0,f,c
  1336  000932  3206               	rrcf	(??___fltol+1)^0,f,c
  1337  000934  3205               	rrcf	??___fltol^0,f,c
  1338  000936                     u660:
  1339  000936  2EE8               	decfsz	wreg,f,c
  1340  000938  EF96  F004         	goto	u665
  1341  00093C  5005               	movf	??___fltol^0,w,c
  1342  00093E  6E09               	movwf	___fltol@sign1^0,c
  1343  000940  8E03               	bsf	(___fltol@f1+2)^0,7,c
  1344  000942  0EFF               	movlw	255
  1345  000944  1601               	andwf	___fltol@f1^0,f,c
  1346  000946  0EFF               	movlw	255
  1347  000948  1602               	andwf	(___fltol@f1+1)^0,f,c
  1348  00094A  0EFF               	movlw	255
  1349  00094C  1603               	andwf	(___fltol@f1+2)^0,f,c
  1350  00094E  0E00               	movlw	0
  1351  000950  1604               	andwf	(___fltol@f1+3)^0,f,c
  1352  000952  0E96               	movlw	150
  1353  000954  5E0A               	subwf	___fltol@exp1^0,f,c
  1354  000956  BE0A               	btfsc	___fltol@exp1^0,7,c
  1355  000958  EFB2  F004         	goto	u670
  1356  00095C  EFB0  F004         	goto	u671
  1357  000960                     u671:
  1358  000960  EFC8  F004         	goto	l1439
  1359  000964                     u670:
  1360  000964  500A               	movf	___fltol@exp1^0,w,c
  1361  000966  0A80               	xorlw	128
  1362  000968  0F97               	addlw	151
  1363  00096A  B0D8               	btfsc	status,0,c
  1364  00096C  EFBA  F004         	goto	u681
  1365  000970  EFBC  F004         	goto	u680
  1366  000974                     u681:
  1367  000974  EFBE  F004         	goto	l1435
  1368  000978                     u680:
  1369  000978  EF81  F004         	goto	l1415
  1370  00097C                     l1435:
  1371  00097C  90D8               	bcf	status,0,c
  1372  00097E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  1373  000980  3203               	rrcf	(___fltol@f1+2)^0,f,c
  1374  000982  3202               	rrcf	(___fltol@f1+1)^0,f,c
  1375  000984  3201               	rrcf	___fltol@f1^0,f,c
  1376  000986  3E0A               	incfsz	___fltol@exp1^0,f,c
  1377  000988  EFBE  F004         	goto	l1435
  1378  00098C  EFE0  F004         	goto	l1449
  1379  000990                     l1439:
  1380  000990  0E1F               	movlw	31
  1381  000992  640A               	cpfsgt	___fltol@exp1^0,c
  1382  000994  EFCE  F004         	goto	u691
  1383  000998  EFD0  F004         	goto	u690
  1384  00099C                     u691:
  1385  00099C  EFD8  F004         	goto	l1447
  1386  0009A0                     u690:
  1387  0009A0  EF81  F004         	goto	l1415
  1388  0009A4                     l1445:
  1389  0009A4  90D8               	bcf	status,0,c
  1390  0009A6  3601               	rlcf	___fltol@f1^0,f,c
  1391  0009A8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  1392  0009AA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  1393  0009AC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  1394  0009AE  060A               	decf	___fltol@exp1^0,f,c
  1395  0009B0                     l1447:
  1396  0009B0  500A               	movf	___fltol@exp1^0,w,c
  1397  0009B2  A4D8               	btfss	status,2,c
  1398  0009B4  EFDE  F004         	goto	u701
  1399  0009B8  EFE0  F004         	goto	u700
  1400  0009BC                     u701:
  1401  0009BC  EFD2  F004         	goto	l1445
  1402  0009C0                     u700:
  1403  0009C0                     l1449:
  1404  0009C0  5009               	movf	___fltol@sign1^0,w,c
  1405  0009C2  B4D8               	btfsc	status,2,c
  1406  0009C4  EFE6  F004         	goto	u711
  1407  0009C8  EFE8  F004         	goto	u710
  1408  0009CC                     u711:
  1409  0009CC  EFF0  F004         	goto	l1453
  1410  0009D0                     u710:
  1411  0009D0  1E04               	comf	(___fltol@f1+3)^0,f,c
  1412  0009D2  1E03               	comf	(___fltol@f1+2)^0,f,c
  1413  0009D4  1E02               	comf	(___fltol@f1+1)^0,f,c
  1414  0009D6  6C01               	negf	___fltol@f1^0,c
  1415  0009D8  0E00               	movlw	0
  1416  0009DA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  1417  0009DC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  1418  0009DE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  1419  0009E0                     l1453:
  1420  0009E0  C001  F001         	movff	___fltol@f1,?___fltol
  1421  0009E4  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1422  0009E8  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1423  0009EC  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1424  0009F0                     l469:
  1425  0009F0  0012               	return		;funcret
  1426  0009F2                     __end_of___fltol:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _POS_CURSOR *****************
  1430 ;; Defined at:
  1431 ;;		line 6 in file "LCD.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  fila            1    wreg     unsigned char 
  1434 ;;  columna         1    3[COMRAM] unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  fila            1    4[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1446 ;;      Params:         1       0       0       0
  1447 ;;      Locals:         1       0       0       0
  1448 ;;      Temps:          0       0       0       0
  1449 ;;      Totals:         2       0       0       0
  1450 ;;Total ram usage:        2 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 2
  1453 ;; This function calls:
  1454 ;;		_ENVIA_LCD_CMD
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text6
  1461  000D90                     __ptext6:
  1462                           	callstack 0
  1463  000D90                     _POS_CURSOR:
  1464                           	callstack 28
  1465                           
  1466                           ;incstack = 0
  1467                           ;POS_CURSOR@fila stored from wreg
  1468  000D90  6E05               	movwf	POS_CURSOR@fila^0,c
  1469  000D92                     
  1470                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1471  000D92  0405               	decf	POS_CURSOR@fila^0,w,c
  1472  000D94  A4D8               	btfss	status,2,c
  1473  000D96  EFCF  F006         	goto	u631
  1474  000D9A  EFD1  F006         	goto	u630
  1475  000D9E                     u631:
  1476  000D9E  EFD7  F006         	goto	l1409
  1477  000DA2                     u630:
  1478  000DA2                     
  1479                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1480  000DA2  5004               	movf	POS_CURSOR@columna^0,w,c
  1481  000DA4  0F80               	addlw	128
  1482  000DA6  ECE5  F006         	call	_ENVIA_LCD_CMD
  1483                           
  1484                           ;LCD.c: 11:  }
  1485  000DAA  EFE4  F006         	goto	l83
  1486  000DAE                     l1409:
  1487  000DAE  0E02               	movlw	2
  1488  000DB0  1805               	xorwf	POS_CURSOR@fila^0,w,c
  1489  000DB2  A4D8               	btfss	status,2,c
  1490  000DB4  EFDE  F006         	goto	u641
  1491  000DB8  EFE0  F006         	goto	u640
  1492  000DBC                     u641:
  1493  000DBC  EFE4  F006         	goto	l83
  1494  000DC0                     u640:
  1495  000DC0                     
  1496                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1497  000DC0  5004               	movf	POS_CURSOR@columna^0,w,c
  1498  000DC2  0FC0               	addlw	192
  1499  000DC4  ECE5  F006         	call	_ENVIA_LCD_CMD
  1500  000DC8                     l83:
  1501  000DC8  0012               	return		;funcret
  1502  000DCA                     __end_of_POS_CURSOR:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _LCD_Init *****************
  1506 ;; Defined at:
  1507 ;;		line 12 in file "maincode.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1521 ;;      Params:         0       0       0       0
  1522 ;;      Locals:         0       0       0       0
  1523 ;;      Temps:          2       0       0       0
  1524 ;;      Totals:         2       0       0       0
  1525 ;;Total ram usage:        2 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 3
  1528 ;; This function calls:
  1529 ;;		_BORRAR_LCD
  1530 ;;		_CURSOR_HOME
  1531 ;;		_CURSOR_ONOFF
  1532 ;;		_LCD_CONFIG
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text7
  1539  000D14                     __ptext7:
  1540                           	callstack 0
  1541  000D14                     _LCD_Init:
  1542                           	callstack 27
  1543  000D14                     
  1544                           ;maincode.c: 13:     TRISD = 0x00;
  1545  000D14  0E00               	movlw	0
  1546  000D16  6E95               	movwf	149,c	;volatile
  1547  000D18                     
  1548                           ;maincode.c: 14:     _delay((unsigned long)((50)*(48000000UL/4000.0)));
  1549  000D18  0E04               	movlw	4
  1550  000D1A  6E06               	movwf	(??_LCD_Init+1)^0,c
  1551  000D1C  0E0C               	movlw	12
  1552  000D1E  6E05               	movwf	??_LCD_Init^0,c
  1553  000D20  0E34               	movlw	52
  1554  000D22                     u877:
  1555  000D22  2EE8               	decfsz	wreg,f,c
  1556  000D24  D7FE               	bra	u877
  1557  000D26  2E05               	decfsz	??_LCD_Init^0,f,c
  1558  000D28  D7FC               	bra	u877
  1559  000D2A  2E06               	decfsz	(??_LCD_Init+1)^0,f,c
  1560  000D2C  D7FA               	bra	u877
  1561  000D2E                     
  1562                           ;maincode.c: 15:     LCD_CONFIG();
  1563  000D2E  EC29  F006         	call	_LCD_CONFIG	;wreg free
  1564  000D32                     
  1565                           ;maincode.c: 16:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
  1566  000D32  0EEA               	movlw	234
  1567  000D34  6E05               	movwf	??_LCD_Init^0,c
  1568  000D36  0EC3               	movlw	195
  1569  000D38                     u887:
  1570  000D38  2EE8               	decfsz	wreg,f,c
  1571  000D3A  D7FE               	bra	u887
  1572  000D3C  2E05               	decfsz	??_LCD_Init^0,f,c
  1573  000D3E  D7FC               	bra	u887
  1574  000D40  F000               	nop	
  1575  000D42                     
  1576                           ;maincode.c: 17:     BORRAR_LCD();
  1577  000D42  EC7C  F007         	call	_BORRAR_LCD	;wreg free
  1578  000D46                     
  1579                           ;maincode.c: 18:     CURSOR_HOME();
  1580  000D46  EC78  F007         	call	_CURSOR_HOME	;wreg free
  1581  000D4A                     
  1582                           ;maincode.c: 19:     CURSOR_ONOFF(1);
  1583  000D4A  0E01               	movlw	1
  1584  000D4C  EC1B  F007         	call	_CURSOR_ONOFF
  1585  000D50  0012               	return		;funcret
  1586  000D52                     __end_of_LCD_Init:
  1587                           	callstack 0
  1588                           
  1589 ;; *************** function _LCD_CONFIG *****************
  1590 ;; Defined at:
  1591 ;;		line 72 in file "LCD.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1605 ;;      Params:         0       0       0       0
  1606 ;;      Locals:         0       0       0       0
  1607 ;;      Temps:          1       0       0       0
  1608 ;;      Totals:         1       0       0       0
  1609 ;;Total ram usage:        1 bytes
  1610 ;; Hardware stack levels used: 1
  1611 ;; Hardware stack levels required when called: 2
  1612 ;; This function calls:
  1613 ;;		_ENVIA_LCD_CMD
  1614 ;;		_ENVIA_NIBBLE
  1615 ;; This function is called by:
  1616 ;;		_LCD_Init
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           	psect	text8
  1621  000C52                     __ptext8:
  1622                           	callstack 0
  1623  000C52                     _LCD_CONFIG:
  1624                           	callstack 27
  1625  000C52                     
  1626                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1627  000C52  908C               	bcf	140,0,c	;volatile
  1628                           
  1629                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1630  000C54  928C               	bcf	140,1,c	;volatile
  1631  000C56                     
  1632                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1633  000C56  0E30               	movlw	48
  1634  000C58  EC5C  F007         	call	_ENVIA_NIBBLE
  1635  000C5C                     
  1636                           ;LCD.c: 77:         _delay(24000);
  1637  000C5C  0E20               	movlw	32
  1638  000C5E  6E04               	movwf	??_LCD_CONFIG^0,c
  1639  000C60  0E2A               	movlw	42
  1640  000C62                     u897:
  1641  000C62  2EE8               	decfsz	wreg,f,c
  1642  000C64  D7FE               	bra	u897
  1643  000C66  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1644  000C68  D7FC               	bra	u897
  1645  000C6A                     
  1646                           ;LCD.c: 78:         _delay(24000);
  1647  000C6A  0E20               	movlw	32
  1648  000C6C  6E04               	movwf	??_LCD_CONFIG^0,c
  1649  000C6E  0E2A               	movlw	42
  1650  000C70                     u907:
  1651  000C70  2EE8               	decfsz	wreg,f,c
  1652  000C72  D7FE               	bra	u907
  1653  000C74  2E04               	decfsz	??_LCD_CONFIG^0,f,c
  1654  000C76  D7FC               	bra	u907
  1655                           
  1656                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1657  000C78  0E30               	movlw	48
  1658  000C7A  EC5C  F007         	call	_ENVIA_NIBBLE
  1659  000C7E                     
  1660                           ;LCD.c: 83:  _delay(1200);
  1661  000C7E  0EF0               	movlw	240
  1662  000C80                     u917:
  1663  000C80  F000 F000          	nop2	
  1664  000C84  2EE8               	decfsz	wreg,f,c
  1665  000C86  D7FC               	bra	u917
  1666  000C88                     
  1667                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1668  000C88  0E30               	movlw	48
  1669  000C8A  EC5C  F007         	call	_ENVIA_NIBBLE
  1670  000C8E                     
  1671                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1672  000C8E  0E20               	movlw	32
  1673  000C90  EC5C  F007         	call	_ENVIA_NIBBLE
  1674  000C94                     
  1675                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1676  000C94  0E01               	movlw	1
  1677  000C96  ECE5  F006         	call	_ENVIA_LCD_CMD
  1678  000C9A                     
  1679                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1680  000C9A  0E28               	movlw	40
  1681  000C9C  ECE5  F006         	call	_ENVIA_LCD_CMD
  1682  000CA0                     
  1683                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1684  000CA0  0E0F               	movlw	15
  1685  000CA2  ECE5  F006         	call	_ENVIA_LCD_CMD
  1686  000CA6                     
  1687                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1688  000CA6  0E06               	movlw	6
  1689  000CA8  ECE5  F006         	call	_ENVIA_LCD_CMD
  1690  000CAC                     
  1691                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1692  000CAC  0E01               	movlw	1
  1693  000CAE  ECE5  F006         	call	_ENVIA_LCD_CMD
  1694  000CB2  0012               	return		;funcret
  1695  000CB4                     __end_of_LCD_CONFIG:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _CURSOR_ONOFF *****************
  1699 ;; Defined at:
  1700 ;;		line 35 in file "LCD.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  estado          1    wreg     unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  estado          1    3[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1714 ;;      Params:         0       0       0       0
  1715 ;;      Locals:         1       0       0       0
  1716 ;;      Temps:          0       0       0       0
  1717 ;;      Totals:         1       0       0       0
  1718 ;;Total ram usage:        1 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 2
  1721 ;; This function calls:
  1722 ;;		_ENVIA_LCD_CMD
  1723 ;; This function is called by:
  1724 ;;		_LCD_Init
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text9
  1729  000E36                     __ptext9:
  1730                           	callstack 0
  1731  000E36                     _CURSOR_ONOFF:
  1732                           	callstack 27
  1733                           
  1734                           ;incstack = 0
  1735                           ;CURSOR_ONOFF@estado stored from wreg
  1736  000E36  6E04               	movwf	CURSOR_ONOFF@estado^0,c
  1737  000E38                     
  1738                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1739  000E38  5004               	movf	CURSOR_ONOFF@estado^0,w,c
  1740  000E3A  A4D8               	btfss	status,2,c
  1741  000E3C  EF22  F007         	goto	u21
  1742  000E40  EF24  F007         	goto	u20
  1743  000E44                     u21:
  1744  000E44  EF27  F007         	goto	l945
  1745  000E48                     u20:
  1746  000E48  0E0E               	movlw	14
  1747  000E4A  ECE5  F006         	call	_ENVIA_LCD_CMD
  1748  000E4E                     l945:
  1749                           
  1750                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1751  000E4E  0404               	decf	CURSOR_ONOFF@estado^0,w,c
  1752  000E50  A4D8               	btfss	status,2,c
  1753  000E52  EF2D  F007         	goto	u31
  1754  000E56  EF2F  F007         	goto	u30
  1755  000E5A                     u31:
  1756  000E5A  EF32  F007         	goto	l101
  1757  000E5E                     u30:
  1758  000E5E  0E0C               	movlw	12
  1759  000E60  ECE5  F006         	call	_ENVIA_LCD_CMD
  1760  000E64                     l101:
  1761  000E64  0012               	return		;funcret
  1762  000E66                     __end_of_CURSOR_ONOFF:
  1763                           	callstack 0
  1764                           
  1765 ;; *************** function _CURSOR_HOME *****************
  1766 ;; Defined at:
  1767 ;;		line 30 in file "LCD.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1781 ;;      Params:         0       0       0       0
  1782 ;;      Locals:         0       0       0       0
  1783 ;;      Temps:          0       0       0       0
  1784 ;;      Totals:         0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 2
  1788 ;; This function calls:
  1789 ;;		_ENVIA_LCD_CMD
  1790 ;; This function is called by:
  1791 ;;		_LCD_Init
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text10
  1797  000EF0                     __ptext10:
  1798                           	callstack 0
  1799  000EF0                     _CURSOR_HOME:
  1800                           	callstack 27
  1801  000EF0                     
  1802                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1803  000EF0  0E02               	movlw	2
  1804  000EF2  ECE5  F006         	call	_ENVIA_LCD_CMD
  1805  000EF6  0012               	return		;funcret
  1806  000EF8                     __end_of_CURSOR_HOME:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _BORRAR_LCD *****************
  1810 ;; Defined at:
  1811 ;;		line 67 in file "LCD.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1825 ;;      Params:         0       0       0       0
  1826 ;;      Locals:         0       0       0       0
  1827 ;;      Temps:          0       0       0       0
  1828 ;;      Totals:         0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 2
  1832 ;; This function calls:
  1833 ;;		_ENVIA_LCD_CMD
  1834 ;; This function is called by:
  1835 ;;		_LCD_Init
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text11
  1841  000EF8                     __ptext11:
  1842                           	callstack 0
  1843  000EF8                     _BORRAR_LCD:
  1844                           	callstack 27
  1845  000EF8                     
  1846                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1847  000EF8  0E01               	movlw	1
  1848  000EFA  ECE5  F006         	call	_ENVIA_LCD_CMD
  1849  000EFE  0012               	return		;funcret
  1850  000F00                     __end_of_BORRAR_LCD:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _ENVIA_LCD_CMD *****************
  1854 ;; Defined at:
  1855 ;;		line 104 in file "LCD.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  dato            1    wreg     unsigned char 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;  dato            1    1[COMRAM] unsigned char 
  1860 ;;  aux             1    2[COMRAM] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0, cstack
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1870 ;;      Params:         0       0       0       0
  1871 ;;      Locals:         2       0       0       0
  1872 ;;      Temps:          0       0       0       0
  1873 ;;      Totals:         2       0       0       0
  1874 ;;Total ram usage:        2 bytes
  1875 ;; Hardware stack levels used: 1
  1876 ;; Hardware stack levels required when called: 1
  1877 ;; This function calls:
  1878 ;;		_ENVIA_NIBBLE
  1879 ;;		_LEER_LCD
  1880 ;; This function is called by:
  1881 ;;		_POS_CURSOR
  1882 ;;		_CURSOR_HOME
  1883 ;;		_CURSOR_ONOFF
  1884 ;;		_BORRAR_LCD
  1885 ;;		_LCD_CONFIG
  1886 ;;		_BLINK_CURSOR
  1887 ;;		_DISPLAY_ONOFF
  1888 ;;		_GENERACARACTER
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text12
  1893  000DCA                     __ptext12:
  1894                           	callstack 0
  1895  000DCA                     _ENVIA_LCD_CMD:
  1896                           	callstack 28
  1897                           
  1898                           ;incstack = 0
  1899                           ;ENVIA_LCD_CMD@dato stored from wreg
  1900  000DCA  6E02               	movwf	ENVIA_LCD_CMD@dato^0,c
  1901  000DCC                     
  1902                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1903  000DCC  908C               	bcf	140,0,c	;volatile
  1904  000DCE                     
  1905                           ;LCD.c: 108:  LEER_LCD();
  1906  000DCE  ECB3  F005         	call	_LEER_LCD	;wreg free
  1907  000DD2                     
  1908                           ;LCD.c: 109:  TRISD = 0b00000000;
  1909  000DD2  0E00               	movlw	0
  1910  000DD4  6E95               	movwf	149,c	;volatile
  1911  000DD6                     
  1912                           ;LCD.c: 111:         _delay(1200);
  1913  000DD6  0EF0               	movlw	240
  1914  000DD8                     u927:
  1915  000DD8  F000 F000          	nop2	
  1916  000DDC  2EE8               	decfsz	wreg,f,c
  1917  000DDE  D7FC               	bra	u927
  1918  000DE0                     
  1919                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1920  000DE0  928C               	bcf	140,1,c	;volatile
  1921  000DE2                     
  1922                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1923  000DE2  948C               	bcf	140,2,c	;volatile
  1924  000DE4                     
  1925                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1926  000DE4  908C               	bcf	140,0,c	;volatile
  1927  000DE6                     
  1928                           ;LCD.c: 115:  aux = dato & 0xF0;
  1929  000DE6  5002               	movf	ENVIA_LCD_CMD@dato^0,w,c
  1930  000DE8  0BF0               	andlw	240
  1931  000DEA  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1932  000DEC                     
  1933                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1934  000DEC  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1935  000DEE  EC5C  F007         	call	_ENVIA_NIBBLE
  1936  000DF2                     
  1937                           ;LCD.c: 117:  aux = dato<<4;
  1938  000DF2  3802               	swapf	ENVIA_LCD_CMD@dato^0,w,c
  1939  000DF4  0BF0               	andlw	240
  1940  000DF6  6E03               	movwf	ENVIA_LCD_CMD@aux^0,c
  1941  000DF8                     
  1942                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1943  000DF8  5003               	movf	ENVIA_LCD_CMD@aux^0,w,c
  1944  000DFA  EC5C  F007         	call	_ENVIA_NIBBLE
  1945  000DFE  0012               	return		;funcret
  1946  000E00                     __end_of_ENVIA_LCD_CMD:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function _ESCRIBE_MENSAJE *****************
  1950 ;; Defined at:
  1951 ;;		line 41 in file "LCD.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1954 ;;		 -> STR_6(12), STR_5(6), STR_4(8), STR_3(4), 
  1955 ;;		 -> STR_2(9), STR_1(7), 
  1956 ;;  tam             1    5[COMRAM] unsigned char 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  i               1    8[COMRAM] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  1968 ;;      Params:         3       0       0       0
  1969 ;;      Locals:         1       0       0       0
  1970 ;;      Temps:          2       0       0       0
  1971 ;;      Totals:         6       0       0       0
  1972 ;;Total ram usage:        6 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 2
  1975 ;; This function calls:
  1976 ;;		_ENVIA_CHAR
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text13
  1983  000D52                     __ptext13:
  1984                           	callstack 0
  1985  000D52                     _ESCRIBE_MENSAJE:
  1986                           	callstack 28
  1987  000D52                     
  1988                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1989  000D52  0E00               	movlw	0
  1990  000D54  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1991                           
  1992                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1993  000D56  0E00               	movlw	0
  1994  000D58  6E09               	movwf	ESCRIBE_MENSAJE@i^0,c
  1995  000D5A  EFBE  F006         	goto	l1403
  1996  000D5E                     l1399:
  1997                           
  1998                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1999  000D5E  5009               	movf	ESCRIBE_MENSAJE@i^0,w,c
  2000  000D60  2404               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  2001  000D62  6E07               	movwf	??_ESCRIBE_MENSAJE^0,c
  2002  000D64  0E00               	movlw	0
  2003  000D66  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2004  000D68  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  2005  000D6A  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2006  000D6E  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2007  000D72                     	if	0	;tblptru may be non-zero
  2008  000D72                     	endif
  2009  000D72                     	if	0	;tblptru may be non-zero
  2010  000D72                     	endif
  2011  000D72  0008               	tblrd		*
  2012  000D74  50F5               	movf	tablat,w,c
  2013  000D76  EC00  F007         	call	_ENVIA_CHAR
  2014  000D7A                     
  2015                           ;LCD.c: 47:  }
  2016  000D7A  2A09               	incf	ESCRIBE_MENSAJE@i^0,f,c
  2017  000D7C                     l1403:
  2018  000D7C  5006               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  2019  000D7E  5C09               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  2020  000D80  A0D8               	btfss	status,0,c
  2021  000D82  EFC5  F006         	goto	u621
  2022  000D86  EFC7  F006         	goto	u620
  2023  000D8A                     u621:
  2024  000D8A  EFAF  F006         	goto	l1399
  2025  000D8E                     u620:
  2026  000D8E  0012               	return		;funcret
  2027  000D90                     __end_of_ESCRIBE_MENSAJE:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _ENVIA_CHAR *****************
  2031 ;; Defined at:
  2032 ;;		line 50 in file "LCD.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  dato            1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  dato            1    1[COMRAM] unsigned char 
  2037 ;;  aux             1    2[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2047 ;;      Params:         0       0       0       0
  2048 ;;      Locals:         2       0       0       0
  2049 ;;      Temps:          0       0       0       0
  2050 ;;      Totals:         2       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 1
  2054 ;; This function calls:
  2055 ;;		_ENVIA_NIBBLE
  2056 ;;		_LEER_LCD
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;;		_ESCRIBE_MENSAJE
  2060 ;;		_GENERACARACTER
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text14
  2065  000E00                     __ptext14:
  2066                           	callstack 0
  2067  000E00                     _ENVIA_CHAR:
  2068                           	callstack 28
  2069                           
  2070                           ;incstack = 0
  2071                           ;ENVIA_CHAR@dato stored from wreg
  2072  000E00  6E02               	movwf	ENVIA_CHAR@dato^0,c
  2073  000E02                     
  2074                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2075  000E02  808C               	bsf	140,0,c	;volatile
  2076  000E04                     
  2077                           ;LCD.c: 54:  LEER_LCD();
  2078  000E04  ECB3  F005         	call	_LEER_LCD	;wreg free
  2079  000E08                     
  2080                           ;LCD.c: 55:  TRISD = 0x00;
  2081  000E08  0E00               	movlw	0
  2082  000E0A  6E95               	movwf	149,c	;volatile
  2083  000E0C                     
  2084                           ;LCD.c: 56:         _delay(1200);
  2085  000E0C  0EF0               	movlw	240
  2086  000E0E                     u937:
  2087  000E0E  F000 F000          	nop2	
  2088  000E12  2EE8               	decfsz	wreg,f,c
  2089  000E14  D7FC               	bra	u937
  2090  000E16                     
  2091                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2092  000E16  928C               	bcf	140,1,c	;volatile
  2093  000E18                     
  2094                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2095  000E18  948C               	bcf	140,2,c	;volatile
  2096  000E1A                     
  2097                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2098  000E1A  808C               	bsf	140,0,c	;volatile
  2099  000E1C                     
  2100                           ;LCD.c: 61:  aux = dato & 0xF0;
  2101  000E1C  5002               	movf	ENVIA_CHAR@dato^0,w,c
  2102  000E1E  0BF0               	andlw	240
  2103  000E20  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2104  000E22                     
  2105                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2106  000E22  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2107  000E24  EC5C  F007         	call	_ENVIA_NIBBLE
  2108  000E28                     
  2109                           ;LCD.c: 63:  aux = dato << 4;
  2110  000E28  3802               	swapf	ENVIA_CHAR@dato^0,w,c
  2111  000E2A  0BF0               	andlw	240
  2112  000E2C  6E03               	movwf	ENVIA_CHAR@aux^0,c
  2113  000E2E                     
  2114                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2115  000E2E  5003               	movf	ENVIA_CHAR@aux^0,w,c
  2116  000E30  EC5C  F007         	call	_ENVIA_NIBBLE
  2117  000E34  0012               	return		;funcret
  2118  000E36                     __end_of_ENVIA_CHAR:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _LEER_LCD *****************
  2122 ;; Defined at:
  2123 ;;		line 121 in file "LCD.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  aux             1    0[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2137 ;;      Params:         0       0       0       0
  2138 ;;      Locals:         1       0       0       0
  2139 ;;      Temps:          0       0       0       0
  2140 ;;      Totals:         1       0       0       0
  2141 ;;Total ram usage:        1 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_ENVIA_CHAR
  2147 ;;		_ENVIA_LCD_CMD
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text15
  2152  000B66                     __ptext15:
  2153                           	callstack 0
  2154  000B66                     _LEER_LCD:
  2155                           	callstack 28
  2156  000B66                     
  2157                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2158  000B66  0EF8               	movlw	248
  2159  000B68  6E95               	movwf	149,c	;volatile
  2160  000B6A                     
  2161                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2162  000B6A  908C               	bcf	140,0,c	;volatile
  2163  000B6C                     
  2164                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2165  000B6C  828C               	bsf	140,1,c	;volatile
  2166  000B6E                     
  2167                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2168  000B6E  848C               	bsf	140,2,c	;volatile
  2169  000B70                     
  2170                           ;LCD.c: 128:         _delay(1200);
  2171  000B70  0EF0               	movlw	240
  2172  000B72                     u947:
  2173  000B72  F000 F000          	nop2	
  2174  000B76  2EE8               	decfsz	wreg,f,c
  2175  000B78  D7FC               	bra	u947
  2176  000B7A                     
  2177                           ;LCD.c: 130:  aux = PORTD;
  2178  000B7A  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2179  000B7E                     
  2180                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2181  000B7E  948C               	bcf	140,2,c	;volatile
  2182  000B80                     
  2183                           ;LCD.c: 132:         _delay(1200);
  2184  000B80  0EF0               	movlw	240
  2185  000B82                     u957:
  2186  000B82  F000 F000          	nop2	
  2187  000B86  2EE8               	decfsz	wreg,f,c
  2188  000B88  D7FC               	bra	u957
  2189  000B8A                     
  2190                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2191  000B8A  848C               	bsf	140,2,c	;volatile
  2192  000B8C                     
  2193                           ;LCD.c: 135:         _delay(1200);
  2194  000B8C  0EF0               	movlw	240
  2195  000B8E                     u967:
  2196  000B8E  F000 F000          	nop2	
  2197  000B92  2EE8               	decfsz	wreg,f,c
  2198  000B94  D7FC               	bra	u967
  2199  000B96                     
  2200                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2201  000B96  948C               	bcf	140,2,c	;volatile
  2202  000B98                     l867:
  2203                           
  2204                           ;LCD.c: 138:  aux = aux & 0x80;
  2205  000B98  5001               	movf	LEER_LCD@aux^0,w,c
  2206  000B9A  0B80               	andlw	128
  2207  000B9C  6E01               	movwf	LEER_LCD@aux^0,c
  2208                           
  2209                           ;LCD.c: 139:  while(aux == 0x80)
  2210  000B9E  EFE8  F005         	goto	l881
  2211  000BA2                     l126:
  2212                           
  2213                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2214  000BA2  848C               	bsf	140,2,c	;volatile
  2215  000BA4                     
  2216                           ;LCD.c: 142:             _delay(1200);
  2217  000BA4  0EF0               	movlw	240
  2218  000BA6                     u977:
  2219  000BA6  F000 F000          	nop2	
  2220  000BAA  2EE8               	decfsz	wreg,f,c
  2221  000BAC  D7FC               	bra	u977
  2222  000BAE                     
  2223                           ;LCD.c: 143:             aux = PORTD;
  2224  000BAE  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  2225  000BB2                     
  2226                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2227  000BB2  948C               	bcf	140,2,c	;volatile
  2228                           
  2229                           ;LCD.c: 145:             _delay(1200);
  2230  000BB4  0EF0               	movlw	240
  2231  000BB6                     u987:
  2232  000BB6  F000 F000          	nop2	
  2233  000BBA  2EE8               	decfsz	wreg,f,c
  2234  000BBC  D7FC               	bra	u987
  2235  000BBE                     
  2236                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2237  000BBE  848C               	bsf	140,2,c	;volatile
  2238                           
  2239                           ;LCD.c: 147:             _delay(1200);
  2240  000BC0  0EF0               	movlw	240
  2241  000BC2                     u997:
  2242  000BC2  F000 F000          	nop2	
  2243  000BC6  2EE8               	decfsz	wreg,f,c
  2244  000BC8  D7FC               	bra	u997
  2245  000BCA                     
  2246                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2247  000BCA  948C               	bcf	140,2,c	;volatile
  2248  000BCC  EFCC  F005         	goto	l867
  2249  000BD0                     l881:
  2250                           
  2251                           ;LCD.c: 139:  while(aux == 0x80)
  2252  000BD0  0E80               	movlw	128
  2253  000BD2  1801               	xorwf	LEER_LCD@aux^0,w,c
  2254  000BD4  B4D8               	btfsc	status,2,c
  2255  000BD6  EFEF  F005         	goto	u11
  2256  000BDA  EFF1  F005         	goto	u10
  2257  000BDE                     u11:
  2258  000BDE  EFD1  F005         	goto	l126
  2259  000BE2                     u10:
  2260  000BE2  0012               	return		;funcret
  2261  000BE4                     __end_of_LEER_LCD:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _ENVIA_NIBBLE *****************
  2265 ;; Defined at:
  2266 ;;		line 93 in file "LCD.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  dato            1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  dato            1    0[COMRAM] unsigned char 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2280 ;;      Params:         0       0       0       0
  2281 ;;      Locals:         1       0       0       0
  2282 ;;      Temps:          0       0       0       0
  2283 ;;      Totals:         1       0       0       0
  2284 ;;Total ram usage:        1 bytes
  2285 ;; Hardware stack levels used: 1
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_ENVIA_CHAR
  2290 ;;		_LCD_CONFIG
  2291 ;;		_ENVIA_LCD_CMD
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           	psect	text16
  2296  000EB8                     __ptext16:
  2297                           	callstack 0
  2298  000EB8                     _ENVIA_NIBBLE:
  2299                           	callstack 28
  2300                           
  2301                           ;incstack = 0
  2302                           ;ENVIA_NIBBLE@dato stored from wreg
  2303  000EB8  6E01               	movwf	ENVIA_NIBBLE@dato^0,c
  2304  000EBA                     
  2305                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2306  000EBA  0E0F               	movlw	15
  2307  000EBC  168C               	andwf	140,f,c	;volatile
  2308                           
  2309                           ;LCD.c: 96:  dato &= 0xF0;
  2310  000EBE  0EF0               	movlw	240
  2311  000EC0  1601               	andwf	ENVIA_NIBBLE@dato^0,f,c
  2312                           
  2313                           ;LCD.c: 97:  LATD|= dato;
  2314  000EC2  5001               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  2315  000EC4  128C               	iorwf	140,f,c	;volatile
  2316  000EC6                     
  2317                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2318  000EC6  848C               	bsf	140,2,c	;volatile
  2319  000EC8                     
  2320                           ;LCD.c: 100:         _delay(1200);
  2321  000EC8  0EF0               	movlw	240
  2322  000ECA                     u1007:
  2323  000ECA  F000 F000          	nop2	
  2324  000ECE  2EE8               	decfsz	wreg,f,c
  2325  000ED0  D7FC               	bra	u1007
  2326  000ED2                     
  2327                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2328  000ED2  948C               	bcf	140,2,c	;volatile
  2329  000ED4  0012               	return		;funcret
  2330  000ED6                     __end_of_ENVIA_NIBBLE:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _DHT11_Start *****************
  2334 ;; Defined at:
  2335 ;;		line 3 in file "dht11_lib.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2349 ;;      Params:         0       0       0       0
  2350 ;;      Locals:         0       0       0       0
  2351 ;;      Temps:          2       0       0       0
  2352 ;;      Totals:         2       0       0       0
  2353 ;;Total ram usage:        2 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text17
  2363  000E92                     __ptext17:
  2364                           	callstack 0
  2365  000E92                     _DHT11_Start:
  2366                           	callstack 30
  2367  000E92                     
  2368                           ;dht11_lib.c: 4:     TRISBbits.RB0 = 0;
  2369  000E92  9093               	bcf	147,0,c	;volatile
  2370                           
  2371                           ;dht11_lib.c: 5:     LATBbits.LB0 = 0;
  2372  000E94  908A               	bcf	138,0,c	;volatile
  2373  000E96                     
  2374                           ;dht11_lib.c: 6:     _delay((unsigned long)((18)*(48000000UL/4000.0)));
  2375  000E96  0E02               	movlw	2
  2376  000E98  6E02               	movwf	(??_DHT11_Start+1)^0,c
  2377  000E9A  0E19               	movlw	25
  2378  000E9C  6E01               	movwf	??_DHT11_Start^0,c
  2379  000E9E  0E82               	movlw	130
  2380  000EA0                     u1017:
  2381  000EA0  2EE8               	decfsz	wreg,f,c
  2382  000EA2  D7FE               	bra	u1017
  2383  000EA4  2E01               	decfsz	??_DHT11_Start^0,f,c
  2384  000EA6  D7FC               	bra	u1017
  2385  000EA8  2E02               	decfsz	(??_DHT11_Start+1)^0,f,c
  2386  000EAA  D7FA               	bra	u1017
  2387  000EAC                     
  2388                           ;dht11_lib.c: 7:     LATBbits.LB0 = 1;
  2389  000EAC  808A               	bsf	138,0,c	;volatile
  2390                           
  2391                           ;dht11_lib.c: 8:     _delay((unsigned long)((20)*(48000000UL/4000000.0)));
  2392  000EAE  0E50               	movlw	80
  2393  000EB0                     u1027:
  2394  000EB0  2EE8               	decfsz	wreg,f,c
  2395  000EB2  D7FE               	bra	u1027
  2396  000EB4                     
  2397                           ;dht11_lib.c: 9:     TRISBbits.RB0 = 1;
  2398  000EB4  8093               	bsf	147,0,c	;volatile
  2399  000EB6  0012               	return		;funcret
  2400  000EB8                     __end_of_DHT11_Start:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _DHT11_Read *****************
  2404 ;; Defined at:
  2405 ;;		line 18 in file "dht11_lib.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  data            1    1[COMRAM] unsigned char 
  2410 ;;  x               1    0[COMRAM] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2420 ;;      Params:         0       0       0       0
  2421 ;;      Locals:         2       0       0       0
  2422 ;;      Temps:          0       0       0       0
  2423 ;;      Totals:         2       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text18
  2434  000CB4                     __ptext18:
  2435                           	callstack 0
  2436  000CB4                     _DHT11_Read:
  2437                           	callstack 30
  2438  000CB4                     
  2439                           ;dht11_lib.c: 19:     unsigned char x = 0, data = 0;
  2440  000CB4  0E00               	movlw	0
  2441  000CB6  6E01               	movwf	DHT11_Read@x^0,c
  2442  000CB8  0E00               	movlw	0
  2443  000CBA  6E02               	movwf	DHT11_Read@data^0,c
  2444                           
  2445                           ;dht11_lib.c: 20:     for(x=0;x<8;x++){
  2446  000CBC  0E00               	movlw	0
  2447  000CBE  6E01               	movwf	DHT11_Read@x^0,c
  2448  000CC0                     l161:
  2449  000CC0  A081               	btfss	129,0,c	;volatile
  2450  000CC2  EF65  F006         	goto	u221
  2451  000CC6  EF67  F006         	goto	u220
  2452  000CCA                     u221:
  2453  000CCA  EF60  F006         	goto	l161
  2454  000CCE                     u220:
  2455  000CCE                     
  2456                           ;dht11_lib.c: 22:         _delay((unsigned long)((30)*(48000000UL/4000000.0)));
  2457  000CCE  0E78               	movlw	120
  2458  000CD0                     u1037:
  2459  000CD0  2EE8               	decfsz	wreg,f,c
  2460  000CD2  D7FE               	bra	u1037
  2461  000CD4                     
  2462                           ;dht11_lib.c: 23:         if(PORTBbits.RB0){
  2463  000CD4  A081               	btfss	129,0,c	;volatile
  2464  000CD6  EF6F  F006         	goto	u231
  2465  000CDA  EF71  F006         	goto	u230
  2466  000CDE                     u231:
  2467  000CDE  EF75  F006         	goto	l1105
  2468  000CE2                     u230:
  2469  000CE2                     
  2470                           ;dht11_lib.c: 24:             data = ((data<<1) | 1);
  2471  000CE2  80D8               	bsf	status,0,c
  2472  000CE4  3602               	rlcf	DHT11_Read@data^0,f,c
  2473                           
  2474                           ;dht11_lib.c: 25:         }
  2475  000CE6  EF78  F006         	goto	l166
  2476  000CEA                     l1105:
  2477                           
  2478                           ;dht11_lib.c: 27:             data = (data<<1);
  2479  000CEA  5002               	movf	DHT11_Read@data^0,w,c
  2480  000CEC  2402               	addwf	DHT11_Read@data^0,w,c
  2481  000CEE  6E02               	movwf	DHT11_Read@data^0,c
  2482  000CF0                     l166:
  2483  000CF0  B081               	btfsc	129,0,c	;volatile
  2484  000CF2  EF7D  F006         	goto	u241
  2485  000CF6  EF7F  F006         	goto	u240
  2486  000CFA                     u241:
  2487  000CFA  EF78  F006         	goto	l166
  2488  000CFE                     u240:
  2489  000CFE                     
  2490                           ;dht11_lib.c: 30:     }
  2491  000CFE  2A01               	incf	DHT11_Read@x^0,f,c
  2492  000D00  0E07               	movlw	7
  2493  000D02  6401               	cpfsgt	DHT11_Read@x^0,c
  2494  000D04  EF86  F006         	goto	u251
  2495  000D08  EF88  F006         	goto	u250
  2496  000D0C                     u251:
  2497  000D0C  EF60  F006         	goto	l161
  2498  000D10                     u250:
  2499  000D10                     
  2500                           ;dht11_lib.c: 31:     return data;
  2501  000D10  5002               	movf	DHT11_Read@data^0,w,c
  2502  000D12  0012               	return		;funcret
  2503  000D14                     __end_of_DHT11_Read:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _DHT11_Check *****************
  2507 ;; Defined at:
  2508 ;;		line 12 in file "dht11_lib.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		None
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK4
  2522 ;;      Params:         0       0       0       0
  2523 ;;      Locals:         0       0       0       0
  2524 ;;      Temps:          0       0       0       0
  2525 ;;      Totals:         0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text19
  2536  000E66                     __ptext19:
  2537                           	callstack 0
  2538  000E66                     _DHT11_Check:
  2539                           	callstack 30
  2540  000E66                     l147:
  2541  000E66  B081               	btfsc	129,0,c	;volatile
  2542  000E68  EF38  F007         	goto	u191
  2543  000E6C  EF3A  F007         	goto	u190
  2544  000E70                     u191:
  2545  000E70  EF33  F007         	goto	l147
  2546  000E74                     u190:
  2547  000E74                     l150:
  2548  000E74  A081               	btfss	129,0,c	;volatile
  2549  000E76  EF3F  F007         	goto	u201
  2550  000E7A  EF41  F007         	goto	u200
  2551  000E7E                     u201:
  2552  000E7E  EF3A  F007         	goto	l150
  2553  000E82                     u200:
  2554  000E82                     l153:
  2555  000E82  B081               	btfsc	129,0,c	;volatile
  2556  000E84  EF46  F007         	goto	u211
  2557  000E88  EF48  F007         	goto	u210
  2558  000E8C                     u211:
  2559  000E8C  EF41  F007         	goto	l153
  2560  000E90                     u210:
  2561  000E90  0012               	return		;funcret
  2562  000E92                     __end_of_DHT11_Check:
  2563                           	callstack 0
  2564                           
  2565                           	psect	rparam
  2566  0000                     
  2567                           	psect	idloc
  2568                           
  2569                           ;Config register IDLOC0 @ 0x200000
  2570                           ;	unspecified, using default values
  2571  200000                     	org	2097152
  2572  200000  FF                 	db	255
  2573                           
  2574                           ;Config register IDLOC1 @ 0x200001
  2575                           ;	unspecified, using default values
  2576  200001                     	org	2097153
  2577  200001  FF                 	db	255
  2578                           
  2579                           ;Config register IDLOC2 @ 0x200002
  2580                           ;	unspecified, using default values
  2581  200002                     	org	2097154
  2582  200002  FF                 	db	255
  2583                           
  2584                           ;Config register IDLOC3 @ 0x200003
  2585                           ;	unspecified, using default values
  2586  200003                     	org	2097155
  2587  200003  FF                 	db	255
  2588                           
  2589                           ;Config register IDLOC4 @ 0x200004
  2590                           ;	unspecified, using default values
  2591  200004                     	org	2097156
  2592  200004  FF                 	db	255
  2593                           
  2594                           ;Config register IDLOC5 @ 0x200005
  2595                           ;	unspecified, using default values
  2596  200005                     	org	2097157
  2597  200005  FF                 	db	255
  2598                           
  2599                           ;Config register IDLOC6 @ 0x200006
  2600                           ;	unspecified, using default values
  2601  200006                     	org	2097158
  2602  200006  FF                 	db	255
  2603                           
  2604                           ;Config register IDLOC7 @ 0x200007
  2605                           ;	unspecified, using default values
  2606  200007                     	org	2097159
  2607  200007  FF                 	db	255
  2608                           
  2609                           	psect	config
  2610                           
  2611                           ;Config register CONFIG1L @ 0x300000
  2612                           ;	PLL Prescaler Selection bits
  2613                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2614                           ;	System Clock Postscaler Selection bits
  2615                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2616                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2617                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2618  300000                     	org	3145728
  2619  300000  00                 	db	0
  2620                           
  2621                           ;Config register CONFIG1H @ 0x300001
  2622                           ;	Oscillator Selection bits
  2623                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2624                           ;	Fail-Safe Clock Monitor Enable bit
  2625                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2626                           ;	Internal/External Oscillator Switchover bit
  2627                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2628  300001                     	org	3145729
  2629  300001  02                 	db	2
  2630                           
  2631                           ;Config register CONFIG2L @ 0x300002
  2632                           ;	Power-up Timer Enable bit
  2633                           ;	PWRT = ON, PWRT enabled
  2634                           ;	Brown-out Reset Enable bits
  2635                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2636                           ;	Brown-out Reset Voltage bits
  2637                           ;	BORV = 21, 2.1V
  2638                           ;	USB Voltage Regulator Enable bit
  2639                           ;	VREGEN = OFF, USB voltage regulator disabled
  2640  300002                     	org	3145730
  2641  300002  18                 	db	24
  2642                           
  2643                           ;Config register CONFIG2H @ 0x300003
  2644                           ;	Watchdog Timer Enable bit
  2645                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2646                           ;	Watchdog Timer Postscale Select bits
  2647                           ;	WDTPS = 32768, 1:32768
  2648  300003                     	org	3145731
  2649  300003  1E                 	db	30
  2650                           
  2651                           ; Padding undefined space
  2652  300004                     	org	3145732
  2653  300004  FF                 	db	255
  2654                           
  2655                           ;Config register CONFIG3H @ 0x300005
  2656                           ;	PORTB A/D Enable bit
  2657                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2658                           ;	Low-Power Timer 1 Oscillator Enable bit
  2659                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2660                           ;	MCLR Pin Enable bit
  2661                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2662  300005                     	org	3145733
  2663  300005  80                 	db	128
  2664                           
  2665                           ;Config register CONFIG4L @ 0x300006
  2666                           ;	Stack Full/Underflow Reset Enable bit
  2667                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2668                           ;	Single-Supply ICSP Enable bit
  2669                           ;	LVP = OFF, Single-Supply ICSP disabled
  2670                           ;	Boot Block Size Select bit
  2671                           ;	BBSIZ = BB1K, 1KW Boot block size
  2672                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2673                           ;	ICPRT = OFF, ICPORT disabled
  2674                           ;	Extended Instruction Set Enable bit
  2675                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2676                           ;	Background Debugger Enable bit
  2677                           ;	DEBUG = 0x1, unprogrammed default
  2678  300006                     	org	3145734
  2679  300006  81                 	db	129
  2680                           
  2681                           ; Padding undefined space
  2682  300007                     	org	3145735
  2683  300007  FF                 	db	255
  2684                           
  2685                           ;Config register CONFIG5L @ 0x300008
  2686                           ;	Code Protection bit
  2687                           ;	CP0 = OFF, Block 0 (000800-001FFFh) or (001000-001FFFh) is not code-protected
  2688                           ;	Code Protection bit
  2689                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2690  300008                     	org	3145736
  2691  300008  03                 	db	3
  2692                           
  2693                           ;Config register CONFIG5H @ 0x300009
  2694                           ;	Boot Block Code Protection bit
  2695                           ;	CPB = OFF, Boot block (000000-0007FFh) or (000000-000FFFh) is not code-protected
  2696  300009                     	org	3145737
  2697  300009  40                 	db	64
  2698                           
  2699                           ;Config register CONFIG6L @ 0x30000A
  2700                           ;	Write Protection bit
  2701                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) or (001000-001FFFh) is not write-protected
  2702                           ;	Write Protection bit
  2703                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2704  30000A                     	org	3145738
  2705  30000A  03                 	db	3
  2706                           
  2707                           ;Config register CONFIG6H @ 0x30000B
  2708                           ;	Configuration Register Write Protection bit
  2709                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2710                           ;	Boot Block Write Protection bit
  2711                           ;	WRTB = OFF, Boot block (000000-0007FFh) or (000000-000FFFh) is not write-protected
  2712  30000B                     	org	3145739
  2713  30000B  60                 	db	96
  2714                           
  2715                           ;Config register CONFIG7L @ 0x30000C
  2716                           ;	Table Read Protection bit
  2717                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) or (001000-001FFFh) is not protected from table 
      +                          reads executed in other blocks
  2718                           ;	Table Read Protection bit
  2719                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2720  30000C                     	org	3145740
  2721  30000C  03                 	db	3
  2722                           
  2723                           ;Config register CONFIG7H @ 0x30000D
  2724                           ;	Boot Block Table Read Protection bit
  2725                           ;	EBTRB = OFF, Boot block (000000-0007FFh) or (000000-000FFFh) is not protected from tab
      +                          le reads executed in other blocks
  2726  30000D                     	org	3145741
  2727  30000D  40                 	db	64
  2728                           tosu	equ	0xFFF
  2729                           tosh	equ	0xFFE
  2730                           tosl	equ	0xFFD
  2731                           stkptr	equ	0xFFC
  2732                           pclatu	equ	0xFFB
  2733                           pclath	equ	0xFFA
  2734                           pcl	equ	0xFF9
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           prodh	equ	0xFF4
  2740                           prodl	equ	0xFF3
  2741                           indf0	equ	0xFEF
  2742                           postinc0	equ	0xFEE
  2743                           postdec0	equ	0xFED
  2744                           preinc0	equ	0xFEC
  2745                           plusw0	equ	0xFEB
  2746                           fsr0h	equ	0xFEA
  2747                           fsr0l	equ	0xFE9
  2748                           wreg	equ	0xFE8
  2749                           indf1	equ	0xFE7
  2750                           postinc1	equ	0xFE6
  2751                           postdec1	equ	0xFE5
  2752                           preinc1	equ	0xFE4
  2753                           plusw1	equ	0xFE3
  2754                           fsr1h	equ	0xFE2
  2755                           fsr1l	equ	0xFE1
  2756                           bsr	equ	0xFE0
  2757                           indf2	equ	0xFDF
  2758                           postinc2	equ	0xFDE
  2759                           postdec2	equ	0xFDD
  2760                           preinc2	equ	0xFDC
  2761                           plusw2	equ	0xFDB
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      45
    BANK0           160      0       0
    BANK1           256      0       0
    BANK4           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_6(CODE[12]), STR_5(CODE[6]), STR_4(CODE[8]), STR_3(CODE[4]), 
		 -> STR_2(CODE[9]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->___xxtofl
    _convierte->___awdiv
    ___awdiv->___awmod
    ___xxtofl->___awdiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_Init->_CURSOR_ONOFF
    _LCD_Init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    5523
                                             28 COMRAM     5     5      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                        _DHT11_Check
                         _DHT11_Read
                        _DHT11_Start
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_Init
                         _POS_CURSOR
                            ___awdiv
                            ___fltol
                           ___xxtofl
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1574
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             14 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3    1123
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Start                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read                                           2     2      0      75
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Check                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
   _DHT11_Check
   _DHT11_Read
   _DHT11_Start
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_Init
     _BORRAR_LCD
     _CURSOR_HOME
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___awdiv
     ___awmod (ARG)
   ___fltol
   ___xxtofl
     ___awdiv (ARG)
   _convierte
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BIGRAM_1           100      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      2D       1       47.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D       3        0.0%
DATA                 0      0      2D      12        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 22 16:45:27 2021

                      l45 0D50                        l48 0C50                        l83 0DC8  
                      l96 0EF6                        u10 0BE2                        u11 0BDE  
                      u20 0E48                        u21 0E44                        u30 0E5E  
                      u31 0E5A              ___awdiv@sign 000C             ENVIA_CHAR@aux 0003  
                     l101 0E64                       l110 0E34                       l113 0EFE  
                     l122 0DFE                       l107 0D8E                       l116 0CB2  
                     l150 0E74                       l126 0BA2                       l119 0ED4  
                     l144 0EB6                       l128 0BE2                       l153 0E82  
                     l161 0CC0                       l147 0E66                       l403 0AB4  
                     l156 0E90                       l166 0CF0                       l416 0B64  
                     l169 0D12                       l901 0DE2                       l469 09F0  
                     l830 08EA                       l911 0DF8                       l903 0DE4  
                     l905 0DE6                       l921 0C7E                       l913 0C52  
                     l841 0882                       l834 0826                       l851 0B6E  
                     l907 0DEC                       l931 0CA0                       l923 0C88  
                     l915 0C56                       l827 078E                       l861 0B8A  
                     l853 0B70                       l845 0B66                       l909 0DF2  
                     l941 0E38                       l933 0CA6                       l925 0C8E  
                     l917 0C5C                       l871 0BAE                       l863 0B8C  
                     l855 0B7A                       l847 0B6A                       l951 0E04  
                     l943 0E48                       l935 0CAC                       l927 0C94  
                     l919 0C6A                       l873 0BB2                       l881 0BD0  
                     l865 0B96                       l857 0B7E                       l849 0B6C  
                     l961 0E1A                       l953 0E08                       l937 0EF8  
                     l945 0E4E                       l929 0C9A                       l883 0EBA  
                     l875 0BBE                       l867 0B98                       l859 0B80  
                     l963 0E1C                       l955 0E0C                       l891 0DCC  
                     l939 0EF0                       l947 0E5E                       l885 0EC6  
                     l877 0BCA                       l869 0BA4                       l965 0E22  
                     l957 0E16                       l949 0E02                       l893 0DCE  
                     l887 0EC8                       l967 0E28                       l959 0E18  
                     l895 0DD2                       l889 0ED2                       l969 0E2E  
                     l897 0DD6                       l899 0DE0                       u200 0E82  
                     u201 0E7E                       u210 0E90                       u211 0E8C  
                     u220 0CCE                       u221 0CCA                       u230 0CE2  
                     u231 0CDE                       u240 0CFE                       u241 0CFA  
                     u250 0D10                       u251 0D0C                       u500 0A04  
                     u501 0A00                       u190 0E74                       u510 0A1E  
                     u191 0E70                       u511 0A1A                       u520 0A44  
                     u600 0B30                       u521 0A40                       u601 0B2C  
                     u530 0A62                       u610 0B54                       u531 0A5E  
                     u611 0B50                       u620 0D8E                       u700 09C0  
                     u540 0A7E                       u621 0D8A                       u701 09BC  
                     u541 0A7A                       u630 0DA2                       u710 09D0  
                     u550 0AA4                       u631 0D9E                       u711 09CC  
                     u551 0AA0                       u640 0DC0                       u800 08CA  
                     u720 074A                       u560 0AC8                       u641 0DBC  
                     u801 08C6                       u721 0746                       u561 0AC4  
                     u650 0902                       u810 08D8                       u730 0758  
                     u570 0AE2                       u651 08FE                       u811 08D4  
                     u731 0754                       u571 0ADE                       u660 0936  
                     u740 07B4                       u580 0AFC                       u820 0570  
                     u741 07B0                       u581 0AF8                       u821 056C  
                     u670 0964                       u750 080A                       u590 0B1A  
                     u830 0702                       u671 0960                       u751 0806  
                     u591 0B16                       u831 06FE                       u680 0978  
                     u760 0854                       u681 0974                       u665 092C  
                     u761 0850                       u690 09A0                       u770 0872  
                     u907 0C70                       u691 099C                       u771 086E  
                     u780 0882                       u917 0C80                       u781 087E  
                     u790 0890                       u927 0DD8                       u791 088C  
                     u847 0552                       u937 0E0E                       u857 0594  
                     u947 0B72                       u867 0724                       u957 0B82  
                     u877 0D22                       u967 0B8E                       u887 0D38  
                     u977 0BA6                       u897 0C62                       u987 0BB6  
                     u997 0BC2              ___awmod@sign 0006               LEER_LCD@aux 0001  
                     wreg 000FE8              ?_CURSOR_HOME 0001       __size_of_DHT11_Read 0060  
          ??_ENVIA_NIBBLE 0001              ___fltol@exp1 000A            ENVIA_CHAR@dato 0002  
                    l1101 0CD4                      l1111 0D10                      l1103 0CE2  
                    l1105 0CEA                      l1107 0CFE                      l1051 0D14  
                    l1109 0D00                      l1061 0D46                      l1053 0D18  
                    l1063 0D4A                      l1055 0D2E                      l1401 0D7A  
                    l1057 0D32                      l1321 0A0C                      l1091 0E66  
                    l1083 0E92                      l1403 0D7C                      l1059 0D42  
                    l1411 0DC0                      l1331 0A32                      l1323 0A10  
                    l1315 09F2                      l1093 0CB4                      l1085 0E96  
                    l1405 0D92                      l1421 0940                      l1413 08EC  
                    l1341 0A68                      l1333 0A44                      l1325 0A1E  
                    l1317 09F6                      l1087 0EAC                      l1407 0DA2  
                    l1423 0942                      l1415 0902                      l1343 0A7E  
                    l1335 0A4C                      l1351 0A94                      l1327 0A26  
                    l1319 0A04                      l1503 052A                      l1089 0EB4  
                    l1409 0DAE                      l1425 0952                      l1353 0AA4  
                    l1345 0A86                      l1337 0A54                      l1329 0A2A  
                    l1361 0ABA                      l1521 0560                      l1505 052E  
                    l1099 0CCE                      l1451 09D0                      l1435 097C  
                    l1427 0956                      l1419 0916                      l1355 0AAC  
                    l1347 0A88                      l1339 0A62                      l1371 0AEA  
                    l1363 0AC8                      l1531 05A4                      l1523 0570  
                    l1515 0542                      l1507 053E                      l1453 09E0  
                    l1445 09A4                      l1437 0986                      l1429 0964  
                    l1461 0758                      l1349 0A8E                      l1381 0B30  
                    l1373 0AFC                      l1365 0AD0                      l1541 05BE  
                    l1533 05A8                      l1525 057A                      l1517 0548  
                    l1509 053E                      l1447 09B0                      l1439 0990  
                    l1471 07D0                      l1463 079E                      l1391 0B5C  
                    l1383 0B38                      l1375 0B04                      l1367 0AD4  
                    l1359 0AB6                      l1551 05EC                      l1543 05C4  
                    l1535 05AC                      l1527 058A                      l1519 055E  
                    l1449 09C0                      l1481 0858                      l1473 07DC  
                    l1465 07B4                      l1457 073A                      l1385 0B3E  
                    l1377 0B0C                      l1369 0AE2                      l1561 0688  
                    l1553 05F4                      l1545 05CA                      l1537 05B2  
                    l1529 05A0                      l1491 0896                      l1483 0864  
                    l1475 080E                      l1459 074A                      l1379 0B1A  
                    l1387 0B44                      l1395 0BE6                      l1571 06C0  
                    l1563 06A2                      l1555 0626                      l1547 05DE  
                    l1539 05B8                      l1397 0D52                      l1493 08BA  
                    l1485 0872                      l1477 0810                      l1469 07C8  
                    l1389 0B54                      l1573 06C6                      l1565 06AA  
                    l1557 066E                      l1549 05E4                      l1399 0D5E  
                    l1495 08CA                      l1487 0890                      l1479 081C  
                    l1575 0702                      l1567 06B2                      l1559 0678  
                    l1497 08D8                      l1489 0892                      l1577 070A  
                    l1569 06BA                      l1499 08DA                      l1579 071A  
                    STR_1 051E                      STR_2 050D                      STR_3 0525  
                    STR_4 0516                      STR_5 0518                      STR_6 0501  
                    u1007 0ECA                      u1017 0EA0                      u1027 0EB0  
                    u1037 0CD0                      _LATD 000F8C                      _main 052A  
    __size_of_DHT11_Check 002C                      prodh 000FF4                      prodl 000FF3  
                    start 0000             ?_CURSOR_ONOFF 0001      __size_of_DHT11_Start 0026  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0BE4  
     __size_of_BORRAR_LCD 0008          __end_of_LCD_Init 0D52             ___fltol@sign1 0009  
                   ?_main 0001           __end_of___awdiv 0AB6           __end_of___awmod 0B66  
         __end_of___fltol 09F2           ___awdiv@divisor 0009           ___awdiv@counter 000B  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0062                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0036               ?_POS_CURSOR 0004                     main@x 0021  
                   tablat 000FF5                     status 000FD8            ??_CURSOR_ONOFF 0004  
         __initialization 0ED6              __end_of_main 0738           _ESCRIBE_MENSAJE 0D52  
                  ??_main 001D             __activetblptr 000001          ___awdiv@dividend 0007  
        __end_of___xxtofl 08EC              ??_DHT11_Read 0001                 ??___awdiv 000B  
                  _decena 0027                 ??___awmod 0005      __end_of_ENVIA_NIBBLE 0ED6  
               ??___fltol 0005       __size_of_POS_CURSOR 003A                    clear_0 0EDC  
        ___awdiv@quotient 000D           ___awmod@divisor 0003                    isa$std 000001  
         ___awmod@counter 0005                    _unidad 0026              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
      __end_of_DHT11_Read 0D14              ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008  
            ___xxtofl@arg 0019              ___xxtofl@exp 0018              ___xxtofl@val 000F  
               ?_LEER_LCD 0001                __accesstop 0060   __end_of__initialization 0EE2  
               ?_LCD_Init 0001              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002                ___fltol@f1 0001   __end_of_ESCRIBE_MENSAJE 0D90  
          __pcstackCOMRAM 0001        __end_of_BORRAR_LCD 0F00          ENVIA_LCD_CMD@aux 0003  
    __end_of_CURSOR_ONOFF 0E66        __end_of_LCD_CONFIG 0CB4        __end_of_ENVIA_CHAR 0E36  
      __size_of_convierte 006E                ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001  
              ??_LCD_Init 0005                 ?___xxtofl 000F              ??_POS_CURSOR 0005  
           ??_DHT11_Check 0001             ??_DHT11_Start 0001               _Temp_Entera 002B  
   __size_of_ENVIA_NIBBLE 001E                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004                   ___awdiv 09F2                   ___awmod 0AB6  
                 ___fltol 08EC              __psmallconst 0500     __end_of_ENVIA_LCD_CMD 0E00  
       __end_of_convierte 0C52                   __pcinit 0ED6        __end_of_POS_CURSOR 0DCA  
                 __ramtop 0500                   _centena 0028                   __ptext0 052A  
                 __ptext1 0BE4                   __ptext2 0AB6                   __ptext3 09F2  
                 __ptext4 0738                   __ptext5 08EC                   __ptext6 0D90  
                 __ptext7 0D14                   __ptext8 0C52                   __ptext9 0E36  
              ??___xxtofl 0013          ___awmod@dividend 0001              _ENVIA_NIBBLE 0EB8  
    end_of_initialization 0EE2       __end_of_DHT11_Check 0E92       __end_of_DHT11_Start 0EB8  
                 postinc0 000FEE     __size_of_CURSOR_ONOFF 0030                 _PORTBbits 000F81  
           ___xxtofl@sign 0017                 _RH_Entera 002D                 _TRISBbits 000F93  
       __size_of_LEER_LCD 007E         __size_of_LCD_Init 003E              _CURSOR_ONOFF 0E36  
      CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004       start_initialization 0ED6  
             _DHT11_Check 0E66         ENVIA_LCD_CMD@dato 0002               _DHT11_Start 0E92  
             __pbssCOMRAM 0022         __size_of___xxtofl 01B4       __end_of_CURSOR_HOME 0EF8  
                ?___awdiv 0007                  ?___awmod 0001                  ?___fltol 0001  
             __smallconst 0500                 _convierte 0BE4           convierte@numero 000F  
                _LEER_LCD 0B66                  _LCD_Init 0D14                  _LATBbits 000F8A  
                _LATDbits 000F8C               DHT11_Read@x 0001          ESCRIBE_MENSAJE@i 0009  
          POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 003E                ?_convierte 0001  
                _Checksum 0029              _Temp_Decimal 002A               _CURSOR_HOME 0EF0  
  __size_of_ENVIA_LCD_CMD 0036                _DHT11_Read 0CB4                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0500          __size_of___awdiv 00C4  
        __size_of___awmod 00B0          __size_of___fltol 0106                  ___xxtofl 0738  
                __ptext10 0EF0                  __ptext11 0EF8                  __ptext12 0DCA  
                __ptext13 0D52                  __ptext14 0E00                  __ptext15 0B66  
                __ptext16 0EB8                  __ptext17 0E92                  __ptext18 0CB4  
                __ptext19 0E66                _BORRAR_LCD 0EF8              ?_DHT11_Check 0001  
                _n_temp_f 0022             __size_of_main 020E              ?_DHT11_Start 0001  
              _LCD_CONFIG 0C52                _ENVIA_CHAR 0E00                  isa$xinst 000000  
           _ENVIA_LCD_CMD 0DCA               ??_convierte 000F         ??_ESCRIBE_MENSAJE 0007  
          DHT11_Read@data 0002     ESCRIBE_MENSAJE@cadena 0004               ?_DHT11_Read 0001  
          ?_ENVIA_LCD_CMD 0001               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 0D90                _RH_Decimal 002C               ?_LCD_CONFIG 0001  
      ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
